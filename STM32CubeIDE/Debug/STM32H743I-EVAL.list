
STM32H743I-EVAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021bc4  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001ef0  08021e64  08021e64  00031e64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  08023d54  08023d54  00033d54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08023d6c  08023d6c  0010ddec  2**0
                  CONTENTS
  5 .ARM          00000000  08023d6c  08023d6c  0010ddec  2**0
                  CONTENTS
  6 .preinit_array 00000000  08023d6c  08023d6c  0010ddec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000014  08023d6c  08023d6c  00033d6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08023d80  08023d80  00033d80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000160  24000000  08023d88  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000eefc  24000160  08023ee8  00040160  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2400f05c  08023ee8  0004f05c  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  0010ddec  2**0
                  CONTENTS, READONLY
 13 FontFlashSection 0000075c  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 TextFlashSection 00000090  9000075c  9000075c  0005075c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 ExtFlashSection 000bd600  900007ec  900007ec  000507ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .comment      000000c2  00000000  00000000  0010de1a  2**0
                  CONTENTS, READONLY
 17 .debug_line   0005f0ec  00000000  00000000  0010dedc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000063  00000000  00000000  0016cfc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_info   000f592e  00000000  00000000  0016d02b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_abbrev 00019083  00000000  00000000  00262959  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 00003270  00000000  00000000  0027b9e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    0019847d  00000000  00000000  0027ec50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_rnglists 000038bf  00000000  00000000  004170cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_loclists 0001d41f  00000000  00000000  0041a98c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_macro  000486ae  00000000  00000000  00437dab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_frame  00009360  00000000  00000000  0048045c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	24000160 	.word	0x24000160
 80002bc:	00000000 	.word	0x00000000
 80002c0:	08021e4c 	.word	0x08021e4c

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	24000164 	.word	0x24000164
 80002dc:	08021e4c 	.word	0x08021e4c

080002e0 <memchr>:
 80002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002e4:	2a10      	cmp	r2, #16
 80002e6:	db2b      	blt.n	8000340 <memchr+0x60>
 80002e8:	f010 0f07 	tst.w	r0, #7
 80002ec:	d008      	beq.n	8000300 <memchr+0x20>
 80002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002f2:	3a01      	subs	r2, #1
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d02d      	beq.n	8000354 <memchr+0x74>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	b342      	cbz	r2, 8000350 <memchr+0x70>
 80002fe:	d1f6      	bne.n	80002ee <memchr+0xe>
 8000300:	b4f0      	push	{r4, r5, r6, r7}
 8000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800030a:	f022 0407 	bic.w	r4, r2, #7
 800030e:	f07f 0700 	mvns.w	r7, #0
 8000312:	2300      	movs	r3, #0
 8000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000318:	3c08      	subs	r4, #8
 800031a:	ea85 0501 	eor.w	r5, r5, r1
 800031e:	ea86 0601 	eor.w	r6, r6, r1
 8000322:	fa85 f547 	uadd8	r5, r5, r7
 8000326:	faa3 f587 	sel	r5, r3, r7
 800032a:	fa86 f647 	uadd8	r6, r6, r7
 800032e:	faa5 f687 	sel	r6, r5, r7
 8000332:	b98e      	cbnz	r6, 8000358 <memchr+0x78>
 8000334:	d1ee      	bne.n	8000314 <memchr+0x34>
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800033c:	f002 0207 	and.w	r2, r2, #7
 8000340:	b132      	cbz	r2, 8000350 <memchr+0x70>
 8000342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000346:	3a01      	subs	r2, #1
 8000348:	ea83 0301 	eor.w	r3, r3, r1
 800034c:	b113      	cbz	r3, 8000354 <memchr+0x74>
 800034e:	d1f8      	bne.n	8000342 <memchr+0x62>
 8000350:	2000      	movs	r0, #0
 8000352:	4770      	bx	lr
 8000354:	3801      	subs	r0, #1
 8000356:	4770      	bx	lr
 8000358:	2d00      	cmp	r5, #0
 800035a:	bf06      	itte	eq
 800035c:	4635      	moveq	r5, r6
 800035e:	3803      	subeq	r0, #3
 8000360:	3807      	subne	r0, #7
 8000362:	f015 0f01 	tst.w	r5, #1
 8000366:	d107      	bne.n	8000378 <memchr+0x98>
 8000368:	3001      	adds	r0, #1
 800036a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800036e:	bf02      	ittt	eq
 8000370:	3001      	addeq	r0, #1
 8000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000376:	3001      	addeq	r0, #1
 8000378:	bcf0      	pop	{r4, r5, r6, r7}
 800037a:	3801      	subs	r0, #1
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 80003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000386:	e003      	b.n	8000390 <LoopCopyDataInit>

08000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000388:	4b0c      	ldr	r3, [pc, #48]	; (80003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800038e:	3104      	adds	r1, #4

08000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000390:	480b      	ldr	r0, [pc, #44]	; (80003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000392:	4b0c      	ldr	r3, [pc, #48]	; (80003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000398:	d3f6      	bcc.n	8000388 <CopyDataInit>
  ldr  r2, =_sbss
 800039a:	4a0b      	ldr	r2, [pc, #44]	; (80003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800039c:	e002      	b.n	80003a4 <LoopFillZerobss>

0800039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80003a0:	f842 3b04 	str.w	r3, [r2], #4

080003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80003a4:	4b09      	ldr	r3, [pc, #36]	; (80003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80003a8:	d3f9      	bcc.n	800039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80003aa:	f004 fdfb 	bl	8004fa4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80003ae:	f020 ffd1 	bl	8021354 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80003b2:	f000 ffcf 	bl	8001354 <main>
  bx  lr    
 80003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
 80003bc:	08023d88 	.word	0x08023d88
  ldr  r0, =_sdata
 80003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
 80003c4:	24000160 	.word	0x24000160
  ldr  r2, =_sbss
 80003c8:	24000160 	.word	0x24000160
  ldr  r3, = _ebss
 80003cc:	2400f05c 	.word	0x2400f05c

080003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80003d0:	e7fe      	b.n	80003d0 <ADC3_IRQHandler>

080003d2 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80003d2:	4770      	bx	lr

080003d4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80003d4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80003d6:	f000 fd91 	bl	8000efc <touchgfx_components_init>
  touchgfx_init();
}
 80003da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80003de:	f000 bd1b 	b.w	8000e18 <touchgfx_init>

080003e2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80003e2:	f000 bd8d 	b.w	8000f00 <touchgfx_taskEntry>

080003e6 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 80003e6:	6840      	ldr	r0, [r0, #4]
    }
 80003e8:	4770      	bx	lr

080003ea <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 80003ea:	6041      	str	r1, [r0, #4]
    }
 80003ec:	4770      	bx	lr
	...

080003f0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 80003f0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80003f4:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 80003f8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003fc:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8000400:	4b05      	ldr	r3, [pc, #20]	; (8000418 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8000402:	4a06      	ldr	r2, [pc, #24]	; (800041c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8000404:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
 8000408:	430a      	orrs	r2, r1
 800040a:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 800040e:	681a      	ldr	r2, [r3, #0]
 8000410:	f042 0201 	orr.w	r2, r2, #1
 8000414:	601a      	str	r2, [r3, #0]
}
 8000416:	4770      	bx	lr
 8000418:	e0001000 	.word	0xe0001000
 800041c:	c5acce55 	.word	0xc5acce55

08000420 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000420:	1a51      	subs	r1, r2, r1
 8000422:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000426:	fbb1 f0f3 	udiv	r0, r1, r3
 800042a:	4770      	bx	lr

0800042c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 800042c:	4b01      	ldr	r3, [pc, #4]	; (8000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 800042e:	6858      	ldr	r0, [r3, #4]
}
 8000430:	4770      	bx	lr
 8000432:	bf00      	nop
 8000434:	e0001000 	.word	0xe0001000

08000438 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000438:	4770      	bx	lr

0800043a <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800043a:	b510      	push	{r4, lr}
 800043c:	4604      	mov	r4, r0
 800043e:	210c      	movs	r1, #12
 8000440:	f020 fcab 	bl	8020d9a <_ZdlPvj>
 8000444:	4620      	mov	r0, r4
 8000446:	bd10      	pop	{r4, pc}

08000448 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000448:	6803      	ldr	r3, [r0, #0]
{
 800044a:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800044c:	691b      	ldr	r3, [r3, #16]
{
 800044e:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000450:	b131      	cbz	r1, 8000460 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000452:	4798      	blx	r3
 8000454:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000456:	6863      	ldr	r3, [r4, #4]
 8000458:	1a9b      	subs	r3, r3, r2
 800045a:	4418      	add	r0, r3
 800045c:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 800045e:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000460:	4798      	blx	r3
 8000462:	60a0      	str	r0, [r4, #8]
}
 8000464:	e7fb      	b.n	800045e <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000466 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000466:	4770      	bx	lr

08000468 <_ZN20STM32TouchControllerD0Ev>:
 8000468:	b510      	push	{r4, lr}
 800046a:	4604      	mov	r4, r0
 800046c:	2104      	movs	r1, #4
 800046e:	f020 fc94 	bl	8020d9a <_ZdlPvj>
 8000472:	4620      	mov	r0, r4
 8000474:	bd10      	pop	{r4, pc}
	...

08000478 <_ZN20STM32TouchController4initEv>:

#include "stm32h7xx_hal.h"
#include "stm32h743i_eval_ts.h"

void STM32TouchController::init()
{
 8000478:	b530      	push	{r4, r5, lr}
    int trials = 10;
    TS_Init_t hTS;

    /* Initialize the Touch screen */
    hTS.Width = 640;
    hTS.Height = 480;
 800047a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
{
 800047e:	b085      	sub	sp, #20
    hTS.Height = 480;
 8000480:	f44f 7220 	mov.w	r2, #640	; 0x280
    hTS.Orientation = TS_SWAP_NONE;
    hTS.Accuracy = 5;
 8000484:	2101      	movs	r1, #1
 8000486:	250b      	movs	r5, #11
    hTS.Height = 480;
 8000488:	e9cd 2300 	strd	r2, r3, [sp]
    hTS.Accuracy = 5;
 800048c:	2305      	movs	r3, #5
 800048e:	e9cd 1302 	strd	r1, r3, [sp, #8]

    do
    {
        result = BSP_TS_Init(0, &hTS);
 8000492:	4669      	mov	r1, sp
 8000494:	2000      	movs	r0, #0
 8000496:	f004 fc6f 	bl	8004d78 <BSP_TS_Init>
 800049a:	4604      	mov	r4, r0
        HAL_Delay(10);
 800049c:	200a      	movs	r0, #10
    } while ((result != BSP_ERROR_NONE) && (trials-- > 0));
 800049e:	b2e4      	uxtb	r4, r4
        HAL_Delay(10);
 80004a0:	f004 fdfc 	bl	800509c <HAL_Delay>
    } while ((result != BSP_ERROR_NONE) && (trials-- > 0));
 80004a4:	b13c      	cbz	r4, 80004b6 <_ZN20STM32TouchController4initEv+0x3e>
 80004a6:	3d01      	subs	r5, #1
 80004a8:	d1f3      	bne.n	8000492 <_ZN20STM32TouchController4initEv+0x1a>

    assert(result == BSP_ERROR_NONE);
 80004aa:	4b04      	ldr	r3, [pc, #16]	; (80004bc <_ZN20STM32TouchController4initEv+0x44>)
 80004ac:	212e      	movs	r1, #46	; 0x2e
 80004ae:	4a04      	ldr	r2, [pc, #16]	; (80004c0 <_ZN20STM32TouchController4initEv+0x48>)
 80004b0:	4804      	ldr	r0, [pc, #16]	; (80004c4 <_ZN20STM32TouchController4initEv+0x4c>)
 80004b2:	f020 fca1 	bl	8020df8 <__assert_func>
}
 80004b6:	b005      	add	sp, #20
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	bf00      	nop
 80004bc:	08021ecc 	.word	0x08021ecc
 80004c0:	08021ee5 	.word	0x08021ee5
 80004c4:	08021f0f 	.word	0x08021f0f

080004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

static int32_t lastX, lastY;
static uint32_t lastTime;

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80004c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ca:	b085      	sub	sp, #20
 80004cc:	460e      	mov	r6, r1
    TS_State_t state;
    unsigned int time;
    BSP_TS_GetState(0, &state);
 80004ce:	2000      	movs	r0, #0
{
 80004d0:	4615      	mov	r5, r2
    BSP_TS_GetState(0, &state);
 80004d2:	a901      	add	r1, sp, #4
 80004d4:	4f12      	ldr	r7, [pc, #72]	; (8000520 <_ZN20STM32TouchController11sampleTouchERlS0_+0x58>)
 80004d6:	f004 fd03 	bl	8004ee0 <BSP_TS_GetState>
    if (state.TouchDetected)
 80004da:	9c01      	ldr	r4, [sp, #4]
 80004dc:	b174      	cbz	r4, 80004fc <_ZN20STM32TouchController11sampleTouchERlS0_+0x34>
    {
        x = lastX = state.TouchX;
 80004de:	9b02      	ldr	r3, [sp, #8]
 80004e0:	4a10      	ldr	r2, [pc, #64]	; (8000524 <_ZN20STM32TouchController11sampleTouchERlS0_+0x5c>)
 80004e2:	6033      	str	r3, [r6, #0]
 80004e4:	6013      	str	r3, [r2, #0]
        y = lastY = state.TouchY;
 80004e6:	9b03      	ldr	r3, [sp, #12]
 80004e8:	4a0f      	ldr	r2, [pc, #60]	; (8000528 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 80004ea:	602b      	str	r3, [r5, #0]
 80004ec:	6013      	str	r3, [r2, #0]
        lastTime = HAL_GetTick();
 80004ee:	f004 fdcf 	bl	8005090 <HAL_GetTick>
 80004f2:	6038      	str	r0, [r7, #0]
    if (((lastTime + 120) > time)
            && (lastX > 0) && (lastY > 0))
    {
        x = lastX;
        y = lastY;
        return true;
 80004f4:	2401      	movs	r4, #1
    }

    return false;
}
 80004f6:	4620      	mov	r0, r4
 80004f8:	b005      	add	sp, #20
 80004fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    time = HAL_GetTick();
 80004fc:	f004 fdc8 	bl	8005090 <HAL_GetTick>
    if (((lastTime + 120) > time)
 8000500:	683b      	ldr	r3, [r7, #0]
 8000502:	3378      	adds	r3, #120	; 0x78
 8000504:	4298      	cmp	r0, r3
 8000506:	d2f6      	bcs.n	80004f6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
            && (lastX > 0) && (lastY > 0))
 8000508:	4b06      	ldr	r3, [pc, #24]	; (8000524 <_ZN20STM32TouchController11sampleTouchERlS0_+0x5c>)
 800050a:	681a      	ldr	r2, [r3, #0]
 800050c:	2a00      	cmp	r2, #0
 800050e:	ddf2      	ble.n	80004f6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
 8000510:	4b05      	ldr	r3, [pc, #20]	; (8000528 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	2b00      	cmp	r3, #0
 8000516:	ddee      	ble.n	80004f6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
        x = lastX;
 8000518:	6032      	str	r2, [r6, #0]
        y = lastY;
 800051a:	602b      	str	r3, [r5, #0]
 800051c:	e7ea      	b.n	80004f4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>
 800051e:	bf00      	nop
 8000520:	24000184 	.word	0x24000184
 8000524:	2400017c 	.word	0x2400017c
 8000528:	24000180 	.word	0x24000180

0800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800052c:	2803      	cmp	r0, #3
 800052e:	d823      	bhi.n	8000578 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 8000530:	e8df f000 	tbb	[pc, r0]
 8000534:	1a130a02 	.word	0x1a130a02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000538:	4b10      	ldr	r3, [pc, #64]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800053a:	2108      	movs	r1, #8
 800053c:	681a      	ldr	r2, [r3, #0]
 800053e:	fab2 f282 	clz	r2, r2
 8000542:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000544:	480e      	ldr	r0, [pc, #56]	; (8000580 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8000546:	e006      	b.n	8000556 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000548:	4b0c      	ldr	r3, [pc, #48]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800054a:	2104      	movs	r1, #4
 800054c:	685a      	ldr	r2, [r3, #4]
 800054e:	fab2 f282 	clz	r2, r2
 8000552:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000554:	480b      	ldr	r0, [pc, #44]	; (8000584 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000556:	f005 b921 	b.w	800579c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800055a:	4b08      	ldr	r3, [pc, #32]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800055c:	2102      	movs	r1, #2
 800055e:	689a      	ldr	r2, [r3, #8]
 8000560:	fab2 f282 	clz	r2, r2
 8000564:	0952      	lsrs	r2, r2, #5
 8000566:	e7f5      	b.n	8000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000568:	4b04      	ldr	r3, [pc, #16]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800056a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800056e:	68da      	ldr	r2, [r3, #12]
 8000570:	fab2 f282 	clz	r2, r2
 8000574:	0952      	lsrs	r2, r2, #5
 8000576:	e7e5      	b.n	8000544 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop
 800057c:	24000188 	.word	0x24000188
 8000580:	58020400 	.word	0x58020400
 8000584:	58020800 	.word	0x58020800

08000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000588:	2803      	cmp	r0, #3
 800058a:	d823      	bhi.n	80005d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 800058c:	e8df f000 	tbb	[pc, r0]
 8000590:	1a130a02 	.word	0x1a130a02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000594:	4b10      	ldr	r3, [pc, #64]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000596:	2108      	movs	r1, #8
 8000598:	681a      	ldr	r2, [r3, #0]
 800059a:	3a00      	subs	r2, #0
 800059c:	bf18      	it	ne
 800059e:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80005a0:	480e      	ldr	r0, [pc, #56]	; (80005dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80005a2:	e006      	b.n	80005b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80005a4:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80005a6:	2104      	movs	r1, #4
 80005a8:	685a      	ldr	r2, [r3, #4]
 80005aa:	3a00      	subs	r2, #0
 80005ac:	bf18      	it	ne
 80005ae:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80005b0:	480b      	ldr	r0, [pc, #44]	; (80005e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80005b2:	f005 b8f3 	b.w	800579c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80005b6:	4b08      	ldr	r3, [pc, #32]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80005b8:	2102      	movs	r1, #2
 80005ba:	689a      	ldr	r2, [r3, #8]
 80005bc:	3a00      	subs	r2, #0
 80005be:	bf18      	it	ne
 80005c0:	2201      	movne	r2, #1
 80005c2:	e7f5      	b.n	80005b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80005c4:	4b04      	ldr	r3, [pc, #16]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80005c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80005ca:	68da      	ldr	r2, [r3, #12]
 80005cc:	3a00      	subs	r2, #0
 80005ce:	bf18      	it	ne
 80005d0:	2201      	movne	r2, #1
 80005d2:	e7e5      	b.n	80005a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80005d4:	4770      	bx	lr
 80005d6:	bf00      	nop
 80005d8:	24000188 	.word	0x24000188
 80005dc:	58020400 	.word	0x58020400
 80005e0:	58020800 	.word	0x58020800

080005e4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80005e4:	2803      	cmp	r0, #3
 80005e6:	d80f      	bhi.n	8000608 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 80005e8:	e8df f000 	tbb	[pc, r0]
 80005ec:	0b090502 	.word	0x0b090502
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80005f0:	2108      	movs	r1, #8
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80005f2:	4806      	ldr	r0, [pc, #24]	; (800060c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
 80005f4:	e001      	b.n	80005fa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80005f6:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80005f8:	4805      	ldr	r0, [pc, #20]	; (8000610 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80005fa:	f005 b8d4 	b.w	80057a6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80005fe:	2102      	movs	r1, #2
 8000600:	e7fa      	b.n	80005f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000602:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000606:	e7f4      	b.n	80005f2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000608:	4770      	bx	lr
 800060a:	bf00      	nop
 800060c:	58020400 	.word	0x58020400
 8000610:	58020800 	.word	0x58020800

08000614 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000614:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000616:	2803      	cmp	r0, #3
 8000618:	d813      	bhi.n	8000642 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 800061a:	e8df f000 	tbb	[pc, r0]
 800061e:	0502      	.short	0x0502
 8000620:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000622:	2108      	movs	r1, #8
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000624:	4808      	ldr	r0, [pc, #32]	; (8000648 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
 8000626:	e001      	b.n	800062c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x18>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000628:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800062a:	4808      	ldr	r0, [pc, #32]	; (800064c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800062c:	f005 f8b0 	bl	8005790 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000630:	1e43      	subs	r3, r0, #1
 8000632:	4258      	negs	r0, r3
 8000634:	4158      	adcs	r0, r3
 8000636:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000638:	2102      	movs	r1, #2
 800063a:	e7f6      	b.n	800062a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800063c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000640:	e7f0      	b.n	8000624 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000642:	2000      	movs	r0, #0
 8000644:	e7f4      	b.n	8000630 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000646:	bf00      	nop
 8000648:	58020400 	.word	0x58020400
 800064c:	58020800 	.word	0x58020800

08000650 <_ZN8touchgfx4GPIO4initEv>:
{
 8000650:	b570      	push	{r4, r5, r6, lr}
 8000652:	4d08      	ldr	r5, [pc, #32]	; (8000674 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000654:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000656:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000658:	b2e0      	uxtb	r0, r4
 800065a:	f7ff ffdb 	bl	8000614 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800065e:	b118      	cbz	r0, 8000668 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000660:	682b      	ldr	r3, [r5, #0]
 8000662:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000664:	bf18      	it	ne
 8000666:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000668:	3401      	adds	r4, #1
 800066a:	3504      	adds	r5, #4
 800066c:	2c05      	cmp	r4, #5
 800066e:	d1f3      	bne.n	8000658 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000670:	bd70      	pop	{r4, r5, r6, pc}
 8000672:	bf00      	nop
 8000674:	24000188 	.word	0x24000188

08000678 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000678:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800067a:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800067e:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8000682:	4770      	bx	lr

08000684 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000684:	2000      	movs	r0, #0
 8000686:	4770      	bx	lr

08000688 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000688:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800068a:	3900      	subs	r1, #0
 800068c:	4b02      	ldr	r3, [pc, #8]	; (8000698 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 800068e:	bf18      	it	ne
 8000690:	2101      	movne	r1, #1
 8000692:	7019      	strb	r1, [r3, #0]
    }
 8000694:	4770      	bx	lr
 8000696:	bf00      	nop
 8000698:	2400e423 	.word	0x2400e423

0800069c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800069c:	2000      	movs	r0, #0
 800069e:	4770      	bx	lr

080006a0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80006a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80006a2:	b10b      	cbz	r3, 80006a8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80006a4:	4608      	mov	r0, r1
 80006a6:	4718      	bx	r3
        }
    }
 80006a8:	4770      	bx	lr

080006aa <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80006aa:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80006ae:	4770      	bx	lr

080006b0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80006b0:	6840      	ldr	r0, [r0, #4]
 80006b2:	6803      	ldr	r3, [r0, #0]
 80006b4:	699b      	ldr	r3, [r3, #24]
 80006b6:	4718      	bx	r3

080006b8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80006b8:	4770      	bx	lr
	...

080006bc <_ZN11TouchGFXHAL10initializeEv>:
#include "task.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 80006bc:	b538      	push	{r3, r4, r5, lr}
 80006be:	4604      	mov	r4, r0
    // Calling parent implementation of initialize().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.
    GPIO::init();
 80006c0:	f7ff ffc6 	bl	8000650 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80006c4:	4620      	mov	r0, r4
    setAnimationStorage((void*)0xD012C000);  // Add animation storage
    instrumentation.init();
 80006c6:	f104 057c 	add.w	r5, r4, #124	; 0x7c
    TouchGFXGeneratedHAL::initialize();
 80006ca:	f000 fd0d 	bl	80010e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)0xD012C000);  // Add animation storage
 80006ce:	6823      	ldr	r3, [r4, #0]
 80006d0:	4906      	ldr	r1, [pc, #24]	; (80006ec <_ZN11TouchGFXHAL10initializeEv+0x30>)
 80006d2:	4620      	mov	r0, r4
 80006d4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80006d8:	4798      	blx	r3
    instrumentation.init();
 80006da:	4628      	mov	r0, r5
 80006dc:	f7ff fe88 	bl	80003f0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80006e0:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 80006e2:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 80006e4:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 80006e8:	bd38      	pop	{r3, r4, r5, pc}
 80006ea:	bf00      	nop
 80006ec:	d012c000 	.word	0xd012c000

080006f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80006f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80006f2:	6803      	ldr	r3, [r0, #0]
{
 80006f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80006f6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80006fa:	4798      	blx	r3
    enableInterrupts();
 80006fc:	6823      	ldr	r3, [r4, #0]
 80006fe:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000700:	4620      	mov	r0, r4
 8000702:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000704:	f000 f910 	bl	8000928 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000708:	6823      	ldr	r3, [r4, #0]
 800070a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800070c:	e7f8      	b.n	8000700 <_ZN11TouchGFXHAL9taskEntryEv+0x10>

0800070e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800070e:	b510      	push	{r4, lr}
 8000710:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000712:	f00b f867 	bl	800b7e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000716:	6823      	ldr	r3, [r4, #0]
 8000718:	4620      	mov	r0, r4
 800071a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 800071e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000722:	4718      	bx	r3

08000724 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000724:	f000 bcd2 	b.w	80010cc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000728 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000728:	f000 bcd6 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800072c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800072c:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800072e:	f000 fcf9 	bl	8001124 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8000732:	4910      	ldr	r1, [pc, #64]	; (8000774 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 8000734:	2300      	movs	r3, #0
 8000736:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800073a:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800073e:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8000742:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000746:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800074a:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800074e:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8000750:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000754:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8000756:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800075a:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800075c:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8000760:	d2f9      	bcs.n	8000756 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 8000762:	3b20      	subs	r3, #32
 8000764:	f113 0f20 	cmn.w	r3, #32
 8000768:	d1f2      	bne.n	8000750 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 800076a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800076e:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 8000772:	bd70      	pop	{r4, r5, r6, pc}
 8000774:	e000ed00 	.word	0xe000ed00

08000778 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000778:	f000 bc84 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800077c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800077c:	f000 bd1a 	b.w	80011b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000780 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000780:	f000 bd04 	b.w	800118c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000784 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000784:	f000 bc88 	b.w	8001098 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000788 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000788:	f00a ba98 	b.w	800acbc <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800078c <_ZN11TouchGFXHALD0Ev>:
 800078c:	b510      	push	{r4, lr}
 800078e:	4604      	mov	r4, r0
 8000790:	2188      	movs	r1, #136	; 0x88
 8000792:	f020 fb02 	bl	8020d9a <_ZdlPvj>
 8000796:	4620      	mov	r0, r4
 8000798:	bd10      	pop	{r4, pc}

0800079a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800079a:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800079e:	b11b      	cbz	r3, 80007a8 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80007a0:	6840      	ldr	r0, [r0, #4]
 80007a2:	6803      	ldr	r3, [r0, #0]
 80007a4:	681b      	ldr	r3, [r3, #0]
 80007a6:	4718      	bx	r3
    }
 80007a8:	4618      	mov	r0, r3
 80007aa:	4770      	bx	lr

080007ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80007ac:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 80007b0:	4b0d      	ldr	r3, [pc, #52]	; (80007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 80007b2:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80007b4:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80007b8:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80007ba:	428c      	cmp	r4, r1
 80007bc:	d009      	beq.n	80007d2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80007be:	b93a      	cbnz	r2, 80007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 80007c0:	490a      	ldr	r1, [pc, #40]	; (80007ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007c2:	4a0b      	ldr	r2, [pc, #44]	; (80007f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80007c4:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007c6:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80007c8:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80007ca:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007cc:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 80007ce:	701a      	strb	r2, [r3, #0]
        }
    }
 80007d0:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80007d2:	2a00      	cmp	r2, #0
 80007d4:	d0fc      	beq.n	80007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007d6:	4a06      	ldr	r2, [pc, #24]	; (80007f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80007d8:	4904      	ldr	r1, [pc, #16]	; (80007ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007da:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80007dc:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007de:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80007e0:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80007e2:	2200      	movs	r2, #0
 80007e4:	e7f3      	b.n	80007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80007e6:	bf00      	nop
 80007e8:	2400e41c 	.word	0x2400e41c
 80007ec:	2400e41a 	.word	0x2400e41a
 80007f0:	2400e418 	.word	0x2400e418

080007f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	460d      	mov	r5, r1
 80007f8:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007fa:	b935      	cbnz	r5, 800080a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80007fc:	4b09      	ldr	r3, [pc, #36]	; (8000824 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007fe:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000802:	4a09      	ldr	r2, [pc, #36]	; (8000828 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000804:	4809      	ldr	r0, [pc, #36]	; (800082c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000806:	f020 faf7 	bl	8020df8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800080a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800080e:	3a00      	subs	r2, #0
 8000810:	4b07      	ldr	r3, [pc, #28]	; (8000830 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000812:	bf18      	it	ne
 8000814:	2201      	movne	r2, #1
 8000816:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000818:	6803      	ldr	r3, [r0, #0]
    }
 800081a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800081e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000822:	4718      	bx	r3
 8000824:	08021f74 	.word	0x08021f74
 8000828:	08021fac 	.word	0x08021fac
 800082c:	08021ffa 	.word	0x08021ffa
 8000830:	2400e422 	.word	0x2400e422

08000834 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000834:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000836:	4b09      	ldr	r3, [pc, #36]	; (800085c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000838:	881b      	ldrh	r3, [r3, #0]
 800083a:	428b      	cmp	r3, r1
 800083c:	d803      	bhi.n	8000846 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800083e:	4b08      	ldr	r3, [pc, #32]	; (8000860 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000840:	881b      	ldrh	r3, [r3, #0]
 8000842:	4293      	cmp	r3, r2
 8000844:	d905      	bls.n	8000852 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000846:	4b07      	ldr	r3, [pc, #28]	; (8000864 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000848:	219e      	movs	r1, #158	; 0x9e
 800084a:	4a07      	ldr	r2, [pc, #28]	; (8000868 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800084c:	4807      	ldr	r0, [pc, #28]	; (800086c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800084e:	f020 fad3 	bl	8020df8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000852:	4b07      	ldr	r3, [pc, #28]	; (8000870 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000854:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000856:	4b07      	ldr	r3, [pc, #28]	; (8000874 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000858:	801a      	strh	r2, [r3, #0]
    }
 800085a:	bd08      	pop	{r3, pc}
 800085c:	2400e418 	.word	0x2400e418
 8000860:	2400e41a 	.word	0x2400e41a
 8000864:	0802203f 	.word	0x0802203f
 8000868:	080220a2 	.word	0x080220a2
 800086c:	08021ffa 	.word	0x08021ffa
 8000870:	2400e41e 	.word	0x2400e41e
 8000874:	2400e420 	.word	0x2400e420

08000878 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000878:	4601      	mov	r1, r0
 800087a:	b508      	push	{r3, lr}
        return instance;
 800087c:	4b03      	ldr	r3, [pc, #12]	; (800088c <IdleTaskHook+0x14>)
 800087e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000880:	b101      	cbz	r1, 8000884 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000882:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000884:	f00a ffc8 	bl	800b818 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000888:	2001      	movs	r0, #1
 800088a:	bd08      	pop	{r3, pc}
 800088c:	2400e424 	.word	0x2400e424

08000890 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000890:	2101      	movs	r1, #1
 8000892:	2200      	movs	r2, #0
{
 8000894:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000896:	4608      	mov	r0, r1
 8000898:	f007 febb 	bl	8008612 <osSemaphoreNew>
 800089c:	4b0a      	ldr	r3, [pc, #40]	; (80008c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800089e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008a0:	b928      	cbnz	r0, 80008ae <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008a2:	4b0a      	ldr	r3, [pc, #40]	; (80008cc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008a4:	2128      	movs	r1, #40	; 0x28
 80008a6:	4a0a      	ldr	r2, [pc, #40]	; (80008d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80008a8:	480a      	ldr	r0, [pc, #40]	; (80008d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80008aa:	f020 faa5 	bl	8020df8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80008ae:	2200      	movs	r2, #0
 80008b0:	2104      	movs	r1, #4
 80008b2:	2001      	movs	r0, #1
 80008b4:	f007 ff4a 	bl	800874c <osMessageQueueNew>
 80008b8:	4b07      	ldr	r3, [pc, #28]	; (80008d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80008ba:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80008bc:	b918      	cbnz	r0, 80008c6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80008be:	4b07      	ldr	r3, [pc, #28]	; (80008dc <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80008c0:	212c      	movs	r1, #44	; 0x2c
 80008c2:	4a03      	ldr	r2, [pc, #12]	; (80008d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008c4:	e7f0      	b.n	80008a8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80008c6:	bd08      	pop	{r3, pc}
 80008c8:	2400019c 	.word	0x2400019c
 80008cc:	080221c0 	.word	0x080221c0
 80008d0:	08022209 	.word	0x08022209
 80008d4:	08022238 	.word	0x08022238
 80008d8:	24000198 	.word	0x24000198
 80008dc:	08022282 	.word	0x08022282

080008e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80008e0:	4b02      	ldr	r3, [pc, #8]	; (80008ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80008e2:	f04f 31ff 	mov.w	r1, #4294967295
 80008e6:	6818      	ldr	r0, [r3, #0]
 80008e8:	f007 bedd 	b.w	80086a6 <osSemaphoreAcquire>
 80008ec:	2400019c 	.word	0x2400019c

080008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80008f0:	4b01      	ldr	r3, [pc, #4]	; (80008f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80008f2:	6818      	ldr	r0, [r3, #0]
 80008f4:	f007 bf02 	b.w	80086fc <osSemaphoreRelease>
 80008f8:	2400019c 	.word	0x2400019c

080008fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80008fc:	4b02      	ldr	r3, [pc, #8]	; (8000908 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80008fe:	2100      	movs	r1, #0
 8000900:	6818      	ldr	r0, [r3, #0]
 8000902:	f007 bed0 	b.w	80086a6 <osSemaphoreAcquire>
 8000906:	bf00      	nop
 8000908:	2400019c 	.word	0x2400019c

0800090c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800090c:	f7ff bff0 	b.w	80008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000910 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000910:	2300      	movs	r3, #0
 8000912:	4803      	ldr	r0, [pc, #12]	; (8000920 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000914:	4903      	ldr	r1, [pc, #12]	; (8000924 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000916:	461a      	mov	r2, r3
 8000918:	6800      	ldr	r0, [r0, #0]
 800091a:	f007 bf52 	b.w	80087c2 <osMessageQueuePut>
 800091e:	bf00      	nop
 8000920:	24000198 	.word	0x24000198
 8000924:	24000004 	.word	0x24000004

08000928 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000928:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800092a:	2300      	movs	r3, #0
 800092c:	4c07      	ldr	r4, [pc, #28]	; (800094c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800092e:	a901      	add	r1, sp, #4
 8000930:	461a      	mov	r2, r3
 8000932:	6820      	ldr	r0, [r4, #0]
 8000934:	f007 ff75 	bl	8008822 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000938:	f04f 33ff 	mov.w	r3, #4294967295
 800093c:	2200      	movs	r2, #0
 800093e:	a901      	add	r1, sp, #4
 8000940:	6820      	ldr	r0, [r4, #0]
 8000942:	f007 ff6e 	bl	8008822 <osMessageQueueGet>
}
 8000946:	b002      	add	sp, #8
 8000948:	bd10      	pop	{r4, pc}
 800094a:	bf00      	nop
 800094c:	24000198 	.word	0x24000198

08000950 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000950:	6803      	ldr	r3, [r0, #0]
 8000952:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000954:	4718      	bx	r3

08000956 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000956:	2001      	movs	r0, #1
 8000958:	4770      	bx	lr

0800095a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800095a:	6803      	ldr	r3, [r0, #0]
 800095c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800095e:	4718      	bx	r3

08000960 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000960:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000964:	4770      	bx	lr
	...

08000968 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000968:	4b05      	ldr	r3, [pc, #20]	; (8000980 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800096a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800096e:	6003      	str	r3, [r0, #0]
 8000970:	4b04      	ldr	r3, [pc, #16]	; (8000984 <_ZN8STM32DMAD1Ev+0x1c>)
 8000972:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8000976:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800097a:	f3bf 8f6f 	isb	sy
}
 800097e:	4770      	bx	lr
 8000980:	0802241c 	.word	0x0802241c
 8000984:	e000e100 	.word	0xe000e100

08000988 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
}
 800098c:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000990:	f7ff ffea 	bl	8000968 <_ZN8STM32DMAD1Ev>
 8000994:	4620      	mov	r0, r4
 8000996:	f020 fa00 	bl	8020d9a <_ZdlPvj>
 800099a:	4620      	mov	r0, r4
 800099c:	bd10      	pop	{r4, pc}
	...

080009a0 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009a0:	4b0f      	ldr	r3, [pc, #60]	; (80009e0 <_ZN8STM32DMA10initializeEv+0x40>)
{
 80009a2:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009a4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80009a8:	f042 0210 	orr.w	r2, r2, #16
 80009ac:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80009b0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80009b4:	f002 0210 	and.w	r2, r2, #16
 80009b8:	9201      	str	r2, [sp, #4]
 80009ba:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009bc:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80009be:	f042 0210 	orr.w	r2, r2, #16
 80009c2:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009c4:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80009c6:	f022 0210 	bic.w	r2, r2, #16
 80009ca:	67da      	str	r2, [r3, #124]	; 0x7c
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009cc:	4b05      	ldr	r3, [pc, #20]	; (80009e4 <_ZN8STM32DMA10initializeEv+0x44>)
 80009ce:	4a06      	ldr	r2, [pc, #24]	; (80009e8 <_ZN8STM32DMA10initializeEv+0x48>)
 80009d0:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009d2:	4b06      	ldr	r3, [pc, #24]	; (80009ec <_ZN8STM32DMA10initializeEv+0x4c>)
 80009d4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009d8:	609a      	str	r2, [r3, #8]
}
 80009da:	b002      	add	sp, #8
 80009dc:	4770      	bx	lr
 80009de:	bf00      	nop
 80009e0:	58024400 	.word	0x58024400
 80009e4:	240047e8 	.word	0x240047e8
 80009e8:	080009f1 	.word	0x080009f1
 80009ec:	e000e100 	.word	0xe000e100

080009f0 <DMA2D_XferCpltCallback>:
 80009f0:	4b02      	ldr	r3, [pc, #8]	; (80009fc <DMA2D_XferCpltCallback+0xc>)
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80009f6:	6803      	ldr	r3, [r0, #0]
 80009f8:	695b      	ldr	r3, [r3, #20]
 80009fa:	4718      	bx	r3
 80009fc:	2400e424 	.word	0x2400e424

08000a00 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a00:	b570      	push	{r4, r5, r6, lr}
 8000a02:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a04:	4b0a      	ldr	r3, [pc, #40]	; (8000a30 <_ZN8STM32DMAC1Ev+0x30>)
 8000a06:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a08:	2600      	movs	r6, #0
 8000a0a:	4625      	mov	r5, r4
 8000a0c:	2260      	movs	r2, #96	; 0x60
 8000a0e:	6060      	str	r0, [r4, #4]
 8000a10:	7226      	strb	r6, [r4, #8]
 8000a12:	7266      	strb	r6, [r4, #9]
 8000a14:	f845 3b20 	str.w	r3, [r5], #32
 8000a18:	4629      	mov	r1, r5
 8000a1a:	f00b f853 	bl	800bac4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a1e:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a22:	60ee      	str	r6, [r5, #12]
 8000a24:	3524      	adds	r5, #36	; 0x24
 8000a26:	42ab      	cmp	r3, r5
 8000a28:	d1fb      	bne.n	8000a22 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a2a:	4620      	mov	r0, r4
 8000a2c:	bd70      	pop	{r4, r5, r6, pc}
 8000a2e:	bf00      	nop
 8000a30:	0802241c 	.word	0x0802241c

08000a34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a34:	b508      	push	{r3, lr}
    switch (format)
 8000a36:	290b      	cmp	r1, #11
 8000a38:	d80b      	bhi.n	8000a52 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a3a:	e8df f001 	tbb	[pc, r1]
 8000a3e:	0612      	.short	0x0612
 8000a40:	0a0a0a10 	.word	0x0a0a0a10
 8000a44:	0808080a 	.word	0x0808080a
 8000a48:	0808      	.short	0x0808
 8000a4a:	2001      	movs	r0, #1
}
 8000a4c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000a4e:	2005      	movs	r0, #5
        break;
 8000a50:	e7fc      	b.n	8000a4c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000a52:	4b05      	ldr	r3, [pc, #20]	; (8000a68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000a54:	2165      	movs	r1, #101	; 0x65
 8000a56:	4a05      	ldr	r2, [pc, #20]	; (8000a6c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000a58:	4805      	ldr	r0, [pc, #20]	; (8000a70 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000a5a:	f020 f9cd 	bl	8020df8 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000a5e:	2000      	movs	r0, #0
 8000a60:	e7f4      	b.n	8000a4c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a62:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a64:	e7f2      	b.n	8000a4c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000a66:	bf00      	nop
 8000a68:	080222c4 	.word	0x080222c4
 8000a6c:	080222df 	.word	0x080222df
 8000a70:	08022329 	.word	0x08022329

08000a74 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a74:	b508      	push	{r3, lr}
    switch (format)
 8000a76:	290a      	cmp	r1, #10
 8000a78:	d809      	bhi.n	8000a8e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000a7a:	e8df f001 	tbb	[pc, r1]
 8000a7e:	0610      	.short	0x0610
 8000a80:	0808080e 	.word	0x0808080e
 8000a84:	06060608 	.word	0x06060608
 8000a88:	06          	.byte	0x06
 8000a89:	00          	.byte	0x00
 8000a8a:	2001      	movs	r0, #1
}
 8000a8c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000a8e:	4b05      	ldr	r3, [pc, #20]	; (8000aa4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000a90:	2186      	movs	r1, #134	; 0x86
 8000a92:	4a05      	ldr	r2, [pc, #20]	; (8000aa8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000a94:	4805      	ldr	r0, [pc, #20]	; (8000aac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000a96:	f020 f9af 	bl	8020df8 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a9a:	2000      	movs	r0, #0
 8000a9c:	e7f6      	b.n	8000a8c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000a9e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000aa0:	e7f4      	b.n	8000a8c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aa2:	bf00      	nop
 8000aa4:	080222c4 	.word	0x080222c4
 8000aa8:	08022371 	.word	0x08022371
 8000aac:	08022329 	.word	0x08022329

08000ab0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000ab0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000ab4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000ab8:	460c      	mov	r4, r1
 8000aba:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000abc:	4641      	mov	r1, r8
 8000abe:	f7ff ffb9 	bl	8000a34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ac2:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000ac6:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ac8:	4638      	mov	r0, r7
 8000aca:	4649      	mov	r1, r9
 8000acc:	f7ff ffb2 	bl	8000a34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ad0:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ad2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ad4:	4638      	mov	r0, r7
 8000ad6:	f7ff ffcd 	bl	8000a74 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ada:	8aa1      	ldrh	r1, [r4, #20]
 8000adc:	8b62      	ldrh	r2, [r4, #26]
 8000ade:	4b43      	ldr	r3, [pc, #268]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000ae0:	1a52      	subs	r2, r2, r1
 8000ae2:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ae4:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000ae6:	8b22      	ldrh	r2, [r4, #24]
 8000ae8:	1a52      	subs	r2, r2, r1
 8000aea:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000aec:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000aee:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000af0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000af4:	6920      	ldr	r0, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000af6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000af8:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000afa:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000afc:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000afe:	6827      	ldr	r7, [r4, #0]
 8000b00:	2f80      	cmp	r7, #128	; 0x80
 8000b02:	d028      	beq.n	8000b56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000b04:	7f22      	ldrb	r2, [r4, #28]
 8000b06:	d80f      	bhi.n	8000b28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000b08:	2f20      	cmp	r7, #32
 8000b0a:	d065      	beq.n	8000bd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b0c:	2f40      	cmp	r7, #64	; 0x40
 8000b0e:	d063      	beq.n	8000bd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b10:	2f04      	cmp	r7, #4
 8000b12:	d01a      	beq.n	8000b4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b14:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000b18:	4b34      	ldr	r3, [pc, #208]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b1a:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b1c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000b20:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b22:	d05f      	beq.n	8000be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b24:	4a32      	ldr	r2, [pc, #200]	; (8000bf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000b26:	e044      	b.n	8000bb2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000b28:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000b2c:	d004      	beq.n	8000b38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000b2e:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000b32:	d1ef      	bne.n	8000b14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b34:	492f      	ldr	r1, [pc, #188]	; (8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000b36:	e000      	b.n	8000b3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b38:	492f      	ldr	r1, [pc, #188]	; (8000bf8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b3a:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000b3e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000b40:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000b42:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b44:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b46:	6158      	str	r0, [r3, #20]
 8000b48:	e032      	b.n	8000bb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b4a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000b4e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	61da      	str	r2, [r3, #28]
 8000b54:	e7f6      	b.n	8000b44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000b56:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000b58:	1d3a      	adds	r2, r7, #4
 8000b5a:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b5c:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b5e:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b60:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000b64:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000b68:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b6a:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b6c:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b6e:	b142      	cbz	r2, 8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000b70:	2a01      	cmp	r2, #1
 8000b72:	d021      	beq.n	8000bb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000b74:	4b21      	ldr	r3, [pc, #132]	; (8000bfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000b76:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000b7a:	4a21      	ldr	r2, [pc, #132]	; (8000c00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000b7c:	4821      	ldr	r0, [pc, #132]	; (8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000b7e:	f020 f93b 	bl	8020df8 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b82:	69da      	ldr	r2, [r3, #28]
 8000b84:	8879      	ldrh	r1, [r7, #2]
 8000b86:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000b8a:	3901      	subs	r1, #1
 8000b8c:	f022 0210 	bic.w	r2, r2, #16
 8000b90:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8000b94:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b96:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000b98:	4b14      	ldr	r3, [pc, #80]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b9a:	69da      	ldr	r2, [r3, #28]
 8000b9c:	f042 0220 	orr.w	r2, r2, #32
 8000ba0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000ba2:	69da      	ldr	r2, [r3, #28]
 8000ba4:	0692      	lsls	r2, r2, #26
 8000ba6:	d4fc      	bmi.n	8000ba2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000ba8:	2210      	movs	r2, #16
 8000baa:	609a      	str	r2, [r3, #8]
            if (blend)
 8000bac:	2900      	cmp	r1, #0
 8000bae:	d0b9      	beq.n	8000b24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bb0:	4a15      	ldr	r2, [pc, #84]	; (8000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000bb2:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000bb4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bb8:	69da      	ldr	r2, [r3, #28]
                if (blitOp.alpha == 255)
 8000bba:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bbc:	8878      	ldrh	r0, [r7, #2]
 8000bbe:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
                if (blitOp.alpha == 255)
 8000bc2:	bf18      	it	ne
 8000bc4:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bc6:	3801      	subs	r0, #1
 8000bc8:	f022 0210 	bic.w	r2, r2, #16
 8000bcc:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000bd0:	f042 0210 	orr.w	r2, r2, #16
 8000bd4:	61da      	str	r2, [r3, #28]
                break;
 8000bd6:	e7df      	b.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bd8:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000bdc:	4b03      	ldr	r3, [pc, #12]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000bde:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000be2:	e7b6      	b.n	8000b52 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000be4:	f240 2201 	movw	r2, #513	; 0x201
 8000be8:	e7e3      	b.n	8000bb2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000bea:	bf00      	nop
 8000bec:	52001000 	.word	0x52001000
 8000bf0:	00010201 	.word	0x00010201
 8000bf4:	00020009 	.word	0x00020009
 8000bf8:	0002000a 	.word	0x0002000a
 8000bfc:	080223bc 	.word	0x080223bc
 8000c00:	080223d6 	.word	0x080223d6
 8000c04:	08022329 	.word	0x08022329
 8000c08:	00020201 	.word	0x00020201

08000c0c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c0c:	b538      	push	{r3, r4, r5, lr}
 8000c0e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c10:	7f89      	ldrb	r1, [r1, #30]
 8000c12:	f7ff ff2f 	bl	8000a74 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c16:	4b17      	ldr	r3, [pc, #92]	; (8000c74 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c18:	8aa5      	ldrh	r5, [r4, #20]
 8000c1a:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c1c:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c1e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c22:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c24:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c26:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c28:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c2a:	1b52      	subs	r2, r2, r5
 8000c2c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c2e:	6825      	ldr	r5, [r4, #0]
 8000c30:	2d08      	cmp	r5, #8
 8000c32:	d10e      	bne.n	8000c52 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c34:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c36:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c38:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c3a:	4a0f      	ldr	r2, [pc, #60]	; (8000c78 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c3c:	7f20      	ldrb	r0, [r4, #28]
 8000c3e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c42:	61da      	str	r2, [r3, #28]
 8000c44:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c46:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c48:	4a0c      	ldr	r2, [pc, #48]	; (8000c7c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4a:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4c:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c4e:	601a      	str	r2, [r3, #0]
    }
}
 8000c50:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c52:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c54:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c56:	611a      	str	r2, [r3, #16]
 8000c58:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000c5a:	0a0a      	lsrs	r2, r1, #8
 8000c5c:	0948      	lsrs	r0, r1, #5
 8000c5e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000c62:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000c66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000c6a:	4302      	orrs	r2, r0
 8000c6c:	430a      	orrs	r2, r1
 8000c6e:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c70:	4a03      	ldr	r2, [pc, #12]	; (8000c80 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000c72:	e7ec      	b.n	8000c4e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000c74:	52001000 	.word	0x52001000
 8000c78:	00010009 	.word	0x00010009
 8000c7c:	00020201 	.word	0x00020201
 8000c80:	00030201 	.word	0x00030201

08000c84 <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000c84:	4b03      	ldr	r3, [pc, #12]	; (8000c94 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000c86:	681a      	ldr	r2, [r3, #0]
 8000c88:	07d2      	lsls	r2, r2, #31
 8000c8a:	d4fc      	bmi.n	8000c86 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000c8c:	2223      	movs	r2, #35	; 0x23
 8000c8e:	609a      	str	r2, [r3, #8]
}
 8000c90:	4770      	bx	lr
 8000c92:	bf00      	nop
 8000c94:	52001000 	.word	0x52001000

08000c98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000c98:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000c9a:	4c10      	ldr	r4, [pc, #64]	; (8000cdc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
 8000c9c:	6825      	ldr	r5, [r4, #0]
 8000c9e:	07ed      	lsls	r5, r5, #31
 8000ca0:	d4fc      	bmi.n	8000c9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ca2:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ca4:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000ca6:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ca8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000caa:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cae:	f04f 0502 	mov.w	r5, #2
 8000cb2:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cb4:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cb6:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000cb8:	d00a      	beq.n	8000cd0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000cba:	4909      	ldr	r1, [pc, #36]	; (8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cbc:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000cbe:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000cc2:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000cc4:	4b07      	ldr	r3, [pc, #28]	; (8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000cc6:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000cc8:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000cca:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000ccc:	6023      	str	r3, [r4, #0]
    }
}
 8000cce:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000cd0:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000cd2:	9b03      	ldr	r3, [sp, #12]
 8000cd4:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000cd6:	4b04      	ldr	r3, [pc, #16]	; (8000ce8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 8000cd8:	e7f8      	b.n	8000ccc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x34>
 8000cda:	bf00      	nop
 8000cdc:	52001000 	.word	0x52001000
 8000ce0:	00010009 	.word	0x00010009
 8000ce4:	00020001 	.word	0x00020001
 8000ce8:	00030001 	.word	0x00030001

08000cec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000cec:	2001      	movs	r0, #1
 8000cee:	4770      	bx	lr

08000cf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000cf0:	200c      	movs	r0, #12
 8000cf2:	4770      	bx	lr

08000cf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000cf4:	230c      	movs	r3, #12
 8000cf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000cfa:	3008      	adds	r0, #8
 8000cfc:	4770      	bx	lr

08000cfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000cfe:	230c      	movs	r3, #12
 8000d00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d04:	3008      	adds	r0, #8
 8000d06:	4770      	bx	lr

08000d08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d08:	2001      	movs	r0, #1
 8000d0a:	4770      	bx	lr

08000d0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d0c:	f243 50b8 	movw	r0, #13752	; 0x35b8
 8000d10:	4770      	bx	lr

08000d12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d12:	f243 53b8 	movw	r3, #13752	; 0x35b8
 8000d16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d1a:	3008      	adds	r0, #8
 8000d1c:	4770      	bx	lr

08000d1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d1e:	f243 53b8 	movw	r3, #13752	; 0x35b8
 8000d22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d26:	3008      	adds	r0, #8
 8000d28:	4770      	bx	lr

08000d2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d2a:	2001      	movs	r0, #1
 8000d2c:	4770      	bx	lr

08000d2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d2e:	2010      	movs	r0, #16
 8000d30:	4770      	bx	lr

08000d32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d36:	3008      	adds	r0, #8
 8000d38:	4770      	bx	lr

08000d3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMorpion_2ScreenNoTransition();
 8000d42:	4608      	mov	r0, r1
 8000d44:	f001 bba8 	b.w	8002498 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv>

08000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d48:	4b03      	ldr	r3, [pc, #12]	; (8000d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d4a:	b510      	push	{r4, lr}
 8000d4c:	4604      	mov	r4, r0
 8000d4e:	6003      	str	r3, [r0, #0]
 8000d50:	f009 fd0d 	bl	800a76e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d54:	4620      	mov	r0, r4
 8000d56:	bd10      	pop	{r4, pc}
 8000d58:	080224d4 	.word	0x080224d4

08000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d5c:	b510      	push	{r4, lr}
 8000d5e:	4604      	mov	r4, r0
 8000d60:	f7ff fff2 	bl	8000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d64:	2114      	movs	r1, #20
 8000d66:	4620      	mov	r0, r4
 8000d68:	f020 f817 	bl	8020d9a <_ZdlPvj>
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	bd10      	pop	{r4, pc}

08000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d70:	4b03      	ldr	r3, [pc, #12]	; (8000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d72:	b510      	push	{r4, lr}
 8000d74:	4604      	mov	r4, r0
 8000d76:	6003      	str	r3, [r0, #0]
 8000d78:	f009 fcf9 	bl	800a76e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d7c:	4620      	mov	r0, r4
 8000d7e:	bd10      	pop	{r4, pc}
 8000d80:	080224a0 	.word	0x080224a0

08000d84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d84:	b510      	push	{r4, lr}
 8000d86:	4604      	mov	r4, r0
 8000d88:	f7ff fff2 	bl	8000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d8c:	f44f 5157 	mov.w	r1, #13760	; 0x35c0
 8000d90:	4620      	mov	r0, r4
 8000d92:	f020 f802 	bl	8020d9a <_ZdlPvj>
 8000d96:	4620      	mov	r0, r4
 8000d98:	bd10      	pop	{r4, pc}
	...

08000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d9c:	4b03      	ldr	r3, [pc, #12]	; (8000dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d9e:	b510      	push	{r4, lr}
 8000da0:	4604      	mov	r4, r0
 8000da2:	6003      	str	r3, [r0, #0]
 8000da4:	f009 fce3 	bl	800a76e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	bd10      	pop	{r4, pc}
 8000dac:	0802246c 	.word	0x0802246c

08000db0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000db0:	b510      	push	{r4, lr}
 8000db2:	4604      	mov	r4, r0
 8000db4:	f7ff fff2 	bl	8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000db8:	2118      	movs	r1, #24
 8000dba:	4620      	mov	r0, r4
 8000dbc:	f01f ffed 	bl	8020d9a <_ZdlPvj>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}

08000dc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000dc4:	4b09      	ldr	r3, [pc, #36]	; (8000dec <_ZN12FrontendHeapD1Ev+0x28>)
 8000dc6:	b510      	push	{r4, lr}
 8000dc8:	4604      	mov	r4, r0
 8000dca:	6003      	str	r3, [r0, #0]
 8000dcc:	f500 5057 	add.w	r0, r0, #13760	; 0x35c0
 8000dd0:	302c      	adds	r0, #44	; 0x2c
 8000dd2:	f7ff ffb9 	bl	8000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000dda:	f7ff ffc9 	bl	8000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dde:	f104 0014 	add.w	r0, r4, #20
 8000de2:	f7ff ffdb 	bl	8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000de6:	4620      	mov	r0, r4
 8000de8:	bd10      	pop	{r4, pc}
 8000dea:	bf00      	nop
 8000dec:	08022508 	.word	0x08022508

08000df0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000df0:	b508      	push	{r3, lr}
 8000df2:	4802      	ldr	r0, [pc, #8]	; (8000dfc <__tcf_0+0xc>)
 8000df4:	f7ff ffe6 	bl	8000dc4 <_ZN12FrontendHeapD1Ev>
 8000df8:	bd08      	pop	{r3, pc}
 8000dfa:	bf00      	nop
 8000dfc:	240001a4 	.word	0x240001a4

08000e00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e00:	b510      	push	{r4, lr}
 8000e02:	4604      	mov	r4, r0
 8000e04:	f7ff ffde 	bl	8000dc4 <_ZN12FrontendHeapD1Ev>
 8000e08:	f243 7160 	movw	r1, #14176	; 0x3760
 8000e0c:	4620      	mov	r0, r4
 8000e0e:	f01f ffc4 	bl	8020d9a <_ZdlPvj>
 8000e12:	4620      	mov	r0, r4
 8000e14:	bd10      	pop	{r4, pc}
	...

08000e18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 640, 480);

void touchgfx_init()
{
 8000e18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e1c:	f001 f88e 	bl	8001f3c <_ZN14BitmapDatabase11getInstanceEv>
 8000e20:	2400      	movs	r4, #0
 8000e22:	4605      	mov	r5, r0
 8000e24:	f001 f88e 	bl	8001f44 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e28:	4623      	mov	r3, r4
 8000e2a:	4601      	mov	r1, r0
 8000e2c:	4622      	mov	r2, r4
 8000e2e:	4628      	mov	r0, r5
 8000e30:	9400      	str	r4, [sp, #0]
 8000e32:	f012 f827 	bl	8012e84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e36:	4b26      	ldr	r3, [pc, #152]	; (8000ed0 <touchgfx_init+0xb8>)
 8000e38:	4a26      	ldr	r2, [pc, #152]	; (8000ed4 <touchgfx_init+0xbc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e3a:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8000e3c:	4d26      	ldr	r5, [pc, #152]	; (8000ed8 <touchgfx_init+0xc0>)
 8000e3e:	601a      	str	r2, [r3, #0]
 8000e40:	f002 fb7e 	bl	8003540 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e44:	4825      	ldr	r0, [pc, #148]	; (8000edc <touchgfx_init+0xc4>)
 8000e46:	f011 ff85 	bl	8012d54 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e4a:	682b      	ldr	r3, [r5, #0]
 8000e4c:	f3bf 8f5b 	dmb	ish
 8000e50:	07db      	lsls	r3, r3, #31
 8000e52:	d437      	bmi.n	8000ec4 <touchgfx_init+0xac>
 8000e54:	4628      	mov	r0, r5
 8000e56:	f01f ffa2 	bl	8020d9e <__cxa_guard_acquire>
 8000e5a:	b398      	cbz	r0, 8000ec4 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000e5c:	4c20      	ldr	r4, [pc, #128]	; (8000ee0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000e5e:	4b21      	ldr	r3, [pc, #132]	; (8000ee4 <touchgfx_init+0xcc>)
          screenStorage(scr),
 8000e60:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000e64:	f104 0014 	add.w	r0, r4, #20
 8000e68:	6023      	str	r3, [r4, #0]
          transitionStorage(tra),
 8000e6a:	f508 5757 	add.w	r7, r8, #13760	; 0x35c0
        : presenterStorage(pres),
 8000e6e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000e70:	f8c4 8008 	str.w	r8, [r4, #8]
          frontendApplication(app)
 8000e74:	f107 0618 	add.w	r6, r7, #24
          transitionStorage(tra),
 8000e78:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000e7a:	6126      	str	r6, [r4, #16]
 8000e7c:	f009 fc78 	bl	800a770 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e80:	4b19      	ldr	r3, [pc, #100]	; (8000ee8 <touchgfx_init+0xd0>)
 8000e82:	4640      	mov	r0, r8
 8000e84:	6163      	str	r3, [r4, #20]
 8000e86:	f009 fc73 	bl	800a770 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e8a:	4b18      	ldr	r3, [pc, #96]	; (8000eec <touchgfx_init+0xd4>)
 8000e8c:	4638      	mov	r0, r7
 8000e8e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e90:	f009 fc6e 	bl	800a770 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e94:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8000e98:	4a15      	ldr	r2, [pc, #84]	; (8000ef0 <touchgfx_init+0xd8>)
 8000e9a:	f504 5058 	add.w	r0, r4, #13824	; 0x3600
 8000e9e:	f8c3 25ec 	str.w	r2, [r3, #1516]	; 0x5ec
 8000ea2:	f002 fc15 	bl	80036d0 <_ZN5ModelC1Ev>
 8000ea6:	4622      	mov	r2, r4
 8000ea8:	f504 5158 	add.w	r1, r4, #13824	; 0x3600
 8000eac:	4630      	mov	r0, r6
 8000eae:	f002 fbe5 	bl	800367c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000eb2:	4630      	mov	r0, r6
 8000eb4:	f001 faf0 	bl	8002498 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000eb8:	480e      	ldr	r0, [pc, #56]	; (8000ef4 <touchgfx_init+0xdc>)
 8000eba:	f01f ffbb 	bl	8020e34 <atexit>
 8000ebe:	4628      	mov	r0, r5
 8000ec0:	f01f ff79 	bl	8020db6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ec4:	480c      	ldr	r0, [pc, #48]	; (8000ef8 <touchgfx_init+0xe0>)
}
 8000ec6:	b002      	add	sp, #8
 8000ec8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000ecc:	f7ff bbf6 	b.w	80006bc <_ZN11TouchGFXHAL10initializeEv>
 8000ed0:	2400e488 	.word	0x2400e488
 8000ed4:	24004730 	.word	0x24004730
 8000ed8:	240001a0 	.word	0x240001a0
 8000edc:	24000008 	.word	0x24000008
 8000ee0:	240001a4 	.word	0x240001a4
 8000ee4:	08022508 	.word	0x08022508
 8000ee8:	0802246c 	.word	0x0802246c
 8000eec:	080224a0 	.word	0x080224a0
 8000ef0:	080224d4 	.word	0x080224d4
 8000ef4:	08000df1 	.word	0x08000df1
 8000ef8:	240046a8 	.word	0x240046a8

08000efc <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000efc:	4770      	bx	lr
	...

08000f00 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f00:	4801      	ldr	r0, [pc, #4]	; (8000f08 <touchgfx_taskEntry+0x8>)
 8000f02:	f7ff bbf5 	b.w	80006f0 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f06:	bf00      	nop
 8000f08:	240046a8 	.word	0x240046a8

08000f0c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f0c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000f0e:	4e25      	ldr	r6, [pc, #148]	; (8000fa4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
{
public:

    STM32TouchController() {}
 8000f10:	4b25      	ldr	r3, [pc, #148]	; (8000fa8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f12:	4c26      	ldr	r4, [pc, #152]	; (8000fac <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8000f14:	4630      	mov	r0, r6
static LCD16bpp display;
 8000f16:	4d26      	ldr	r5, [pc, #152]	; (8000fb0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8000f18:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f1a:	f7ff fd71 	bl	8000a00 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f1e:	4628      	mov	r0, r5
 8000f20:	f016 fa8a 	bl	8017438 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000f24:	4b23      	ldr	r3, [pc, #140]	; (8000fb4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
 8000f26:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000f28:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f2c:	4822      	ldr	r0, [pc, #136]	; (8000fb8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f2e:	861a      	strh	r2, [r3, #48]	; 0x30
          useAuxiliaryLCD(false),
 8000f30:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
 8000f34:	665a      	str	r2, [r3, #100]	; 0x64
          updateMCULoad(0),
 8000f36:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          touchController(touchCtrl),
 8000f3a:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8000f3c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000f40:	491e      	ldr	r1, [pc, #120]	; (8000fbc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          vSyncCompensationEnabled(false),
 8000f42:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
        instance = this;
 8000f46:	491e      	ldr	r1, [pc, #120]	; (8000fc0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8000f48:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f4a:	f44f 7120 	mov.w	r1, #640	; 0x280
 8000f4e:	8001      	strh	r1, [r0, #0]
 8000f50:	481c      	ldr	r0, [pc, #112]	; (8000fc4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000f52:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f54:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000f58:	481b      	ldr	r0, [pc, #108]	; (8000fc8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000f5a:	8001      	strh	r1, [r0, #0]
 8000f5c:	481b      	ldr	r0, [pc, #108]	; (8000fcc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000f5e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000f60:	491b      	ldr	r1, [pc, #108]	; (8000fd0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          buttonController(0),
 8000f62:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f66:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f6a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000f6e:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000f72:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000f76:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000f7a:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000f7e:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          lcdRef(display),
 8000f82:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_ROTATION = rotate0;
 8000f86:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000f88:	4912      	ldr	r1, [pc, #72]	; (8000fd4 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        : cc_consumed(0),
 8000f8a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000f8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8000f92:	6019      	str	r1, [r3, #0]
          cc_begin(0),
 8000f94:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000f96:	4910      	ldr	r1, [pc, #64]	; (8000fd8 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          cc_in(0)
 8000f98:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8000f9c:	4a0f      	ldr	r2, [pc, #60]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8000f9e:	6799      	str	r1, [r3, #120]	; 0x78
 8000fa0:	67da      	str	r2, [r3, #124]	; 0x7c
}
 8000fa2:	bd70      	pop	{r4, r5, r6, pc}
 8000fa4:	24003908 	.word	0x24003908
 8000fa8:	08021f64 	.word	0x08021f64
 8000fac:	24003904 	.word	0x24003904
 8000fb0:	24004734 	.word	0x24004734
 8000fb4:	240046a8 	.word	0x240046a8
 8000fb8:	2400e418 	.word	0x2400e418
 8000fbc:	01000001 	.word	0x01000001
 8000fc0:	2400e424 	.word	0x2400e424
 8000fc4:	2400e41e 	.word	0x2400e41e
 8000fc8:	2400e41a 	.word	0x2400e41a
 8000fcc:	2400e420 	.word	0x2400e420
 8000fd0:	2400e41c 	.word	0x2400e41c
 8000fd4:	080220f0 	.word	0x080220f0
 8000fd8:	01010000 	.word	0x01010000
 8000fdc:	08021eac 	.word	0x08021eac

08000fe0 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8000fe0:	4801      	ldr	r0, [pc, #4]	; (8000fe8 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8000fe2:	f7ff bcc1 	b.w	8000968 <_ZN8STM32DMAD1Ev>
 8000fe6:	bf00      	nop
 8000fe8:	24003908 	.word	0x24003908

08000fec <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000fec:	2000      	movs	r0, #0
 8000fee:	4770      	bx	lr

08000ff0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ff0:	8081      	strh	r1, [r0, #4]
    }
 8000ff2:	4770      	bx	lr

08000ff4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000ff4:	80c1      	strh	r1, [r0, #6]
    }
 8000ff6:	4770      	bx	lr

08000ff8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000ff8:	8101      	strh	r1, [r0, #8]
    }
 8000ffa:	4770      	bx	lr

08000ffc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ffc:	8141      	strh	r1, [r0, #10]
    }
 8000ffe:	4770      	bx	lr

08001000 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001000:	4770      	bx	lr

08001002 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001004:	4770      	bx	lr

08001006 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001006:	4770      	bx	lr

08001008 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001008:	4770      	bx	lr

0800100a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800100a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800100c:	88c4      	ldrh	r4, [r0, #6]
 800100e:	6803      	ldr	r3, [r0, #0]
 8001010:	1b12      	subs	r2, r2, r4
 8001012:	8884      	ldrh	r4, [r0, #4]
 8001014:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001016:	1b09      	subs	r1, r1, r4
 8001018:	b212      	sxth	r2, r2
    }
 800101a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800101e:	b209      	sxth	r1, r1
 8001020:	4718      	bx	r3

08001022 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001022:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001026:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001028:	f04f 33ff 	mov.w	r3, #4294967295
 800102c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800102e:	6813      	ldr	r3, [r2, #0]
 8001030:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001032:	6010      	str	r0, [r2, #0]
    }
 8001034:	4770      	bx	lr

08001036 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001036:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800103a:	b11a      	cbz	r2, 8001044 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800103c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001040:	b102      	cbz	r2, 8001044 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001042:	6018      	str	r0, [r3, #0]
        }
    }
 8001044:	4770      	bx	lr

08001046 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001046:	2000      	movs	r0, #0
 8001048:	4770      	bx	lr

0800104a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800104a:	888b      	ldrh	r3, [r1, #4]
 800104c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800104e:	2001      	movs	r0, #1
 8001050:	4770      	bx	lr

08001052 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001052:	4770      	bx	lr

08001054 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001054:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001058:	4770      	bx	lr

0800105a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800105a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800105e:	4770      	bx	lr

08001060 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001060:	2200      	movs	r2, #0
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001062:	b510      	push	{r4, lr}
        return rect.width;
 8001064:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001068:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800106c:	8002      	strh	r2, [r0, #0]
 800106e:	8042      	strh	r2, [r0, #2]
 8001070:	8084      	strh	r4, [r0, #4]
 8001072:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001074:	bd10      	pop	{r4, pc}

08001076 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001076:	2200      	movs	r2, #0
 8001078:	8002      	strh	r2, [r0, #0]
 800107a:	8042      	strh	r2, [r0, #2]
 800107c:	8082      	strh	r2, [r0, #4]
 800107e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001080:	4770      	bx	lr
	...

08001084 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001084:	4b03      	ldr	r3, [pc, #12]	; (8001094 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001086:	2290      	movs	r2, #144	; 0x90
 8001088:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800108c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop
 8001094:	e000e100 	.word	0xe000e100

08001098 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001098:	4a09      	ldr	r2, [pc, #36]	; (80010c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800109a:	490a      	ldr	r1, [pc, #40]	; (80010c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 800109c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800109e:	480a      	ldr	r0, [pc, #40]	; (80010c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010a0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80010a4:	3b01      	subs	r3, #1
 80010a6:	b29b      	uxth	r3, r3
 80010a8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80010aa:	6911      	ldr	r1, [r2, #16]
 80010ac:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80010b0:	3901      	subs	r1, #1
 80010b2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80010b4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80010b6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80010b8:	f043 0301 	orr.w	r3, r3, #1
 80010bc:	6353      	str	r3, [r2, #52]	; 0x34
}
 80010be:	4770      	bx	lr
 80010c0:	50001000 	.word	0x50001000
 80010c4:	240047ba 	.word	0x240047ba
 80010c8:	240047b8 	.word	0x240047b8

080010cc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80010cc:	4b01      	ldr	r3, [pc, #4]	; (80010d4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80010ce:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80010d2:	4770      	bx	lr
 80010d4:	50001000 	.word	0x50001000

080010d8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010d8:	4b02      	ldr	r3, [pc, #8]	; (80010e4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010da:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010dc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010e0:	625a      	str	r2, [r3, #36]	; 0x24
}
 80010e2:	4770      	bx	lr
 80010e4:	50001000 	.word	0x50001000

080010e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80010e8:	b570      	push	{r4, r5, r6, lr}
 80010ea:	4604      	mov	r4, r0
    HAL::initialize();
 80010ec:	f009 fe3b 	bl	800ad66 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80010f0:	6823      	ldr	r3, [r4, #0]
 80010f2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80010f4:	f00f f906 	bl	8010304 <_ZN8touchgfx11Application11getInstanceEv>
 80010f8:	4601      	mov	r1, r0
 80010fa:	4620      	mov	r0, r4
 80010fc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD0096000, (void*)0);
 80010fe:	6823      	ldr	r3, [r4, #0]
 8001100:	4620      	mov	r0, r4
 8001102:	4a05      	ldr	r2, [pc, #20]	; (8001118 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001104:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001108:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 800110c:	2300      	movs	r3, #0
 800110e:	46ac      	mov	ip, r5
}
 8001110:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD0096000, (void*)0);
 8001114:	4760      	bx	ip
 8001116:	bf00      	nop
 8001118:	d0096000 	.word	0xd0096000

0800111c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800111c:	f009 be0a 	b.w	800ad34 <_ZN8touchgfx3HAL10beginFrameEv>

08001120 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001120:	f009 be14 	b.w	800ad4c <_ZN8touchgfx3HAL8endFrameEv>

08001124 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001124:	f009 bdd0 	b.w	800acc8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001128 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001128:	f009 bf31 	b.w	800af8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800112c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800112c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001130:	b112      	cbz	r2, 8001138 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001132:	6803      	ldr	r3, [r0, #0]
 8001134:	695b      	ldr	r3, [r3, #20]
 8001136:	4718      	bx	r3
    }
 8001138:	4770      	bx	lr
	...

0800113c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800113c:	4a12      	ldr	r2, [pc, #72]	; (8001188 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 800113e:	6953      	ldr	r3, [r2, #20]
 8001140:	03db      	lsls	r3, r3, #15
{
 8001142:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001144:	d51e      	bpl.n	8001184 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8001146:	2300      	movs	r3, #0
 8001148:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800114c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8001150:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001154:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001158:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800115c:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8001160:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001162:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001166:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001168:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 800116c:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800116e:	f8c2 5274 	str.w	r5, [r2, #628]	; 0x274
      } while (ways-- != 0U);
 8001172:	d2f9      	bcs.n	8001168 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8001174:	3b20      	subs	r3, #32
 8001176:	f113 0f20 	cmn.w	r3, #32
 800117a:	d1f2      	bne.n	8001162 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 800117c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001180:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8001184:	bd70      	pop	{r4, r5, r6, pc}
 8001186:	bf00      	nop
 8001188:	e000ed00 	.word	0xe000ed00

0800118c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800118c:	4b08      	ldr	r3, [pc, #32]	; (80011b0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800118e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001192:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001196:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800119a:	f3bf 8f6f 	isb	sy
 800119e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80011a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80011a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80011aa:	f3bf 8f6f 	isb	sy
}
 80011ae:	4770      	bx	lr
 80011b0:	e000e100 	.word	0xe000e100

080011b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011b4:	4b03      	ldr	r3, [pc, #12]	; (80011c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80011b6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80011ba:	609a      	str	r2, [r3, #8]
 80011bc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80011c0:	609a      	str	r2, [r3, #8]
}
 80011c2:	4770      	bx	lr
 80011c4:	e000e100 	.word	0xe000e100

080011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
        : widgetWidth(0)
 80011c8:	2300      	movs	r3, #0
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80011ca:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80011cc:	4e12      	ldr	r6, [pc, #72]	; (8001218 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80011ce:	4605      	mov	r5, r0
 80011d0:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80011d2:	4b12      	ldr	r3, [pc, #72]	; (800121c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80011d4:	6003      	str	r3, [r0, #0]
 80011d6:	6833      	ldr	r3, [r6, #0]
 80011d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80011dc:	b10a      	cbz	r2, 80011e2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80011de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80011e0:	b900      	cbnz	r0, 80011e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80011e2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80011e4:	6803      	ldr	r3, [r0, #0]
 80011e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80011e8:	4798      	blx	r3
        return auxiliaryLCD;
 80011ea:	6833      	ldr	r3, [r6, #0]
 80011ec:	fab0 f480 	clz	r4, r0
 80011f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80011f2:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80011f4:	b130      	cbz	r0, 8001204 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80011f6:	6803      	ldr	r3, [r0, #0]
 80011f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80011fa:	4798      	blx	r3
 80011fc:	2800      	cmp	r0, #0
 80011fe:	bf08      	it	eq
 8001200:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001204:	b92c      	cbnz	r4, 8001212 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001206:	4b06      	ldr	r3, [pc, #24]	; (8001220 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001208:	212c      	movs	r1, #44	; 0x2c
 800120a:	4a06      	ldr	r2, [pc, #24]	; (8001224 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800120c:	4806      	ldr	r0, [pc, #24]	; (8001228 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800120e:	f01f fdf3 	bl	8020df8 <__assert_func>
    }
 8001212:	4628      	mov	r0, r5
 8001214:	bd70      	pop	{r4, r5, r6, pc}
 8001216:	bf00      	nop
 8001218:	2400e424 	.word	0x2400e424
 800121c:	08022618 	.word	0x08022618
 8001220:	08022514 	.word	0x08022514
 8001224:	08022572 	.word	0x08022572
 8001228:	080225ab 	.word	0x080225ab

0800122c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800122c:	b510      	push	{r4, lr}
        return instance;
 800122e:	4c14      	ldr	r4, [pc, #80]	; (8001280 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001230:	6823      	ldr	r3, [r4, #0]
 8001232:	b323      	cbz	r3, 800127e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001234:	4b13      	ldr	r3, [pc, #76]	; (8001284 <HAL_LTDC_LineEventCallback+0x58>)
 8001236:	4a14      	ldr	r2, [pc, #80]	; (8001288 <HAL_LTDC_LineEventCallback+0x5c>)
 8001238:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800123a:	8811      	ldrh	r1, [r2, #0]
 800123c:	428b      	cmp	r3, r1
 800123e:	d113      	bne.n	8001268 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001240:	4b12      	ldr	r3, [pc, #72]	; (800128c <HAL_LTDC_LineEventCallback+0x60>)
 8001242:	8819      	ldrh	r1, [r3, #0]
 8001244:	f004 ffd2 	bl	80061ec <HAL_LTDC_ProgramLineEvent>
 8001248:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800124a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800124e:	3301      	adds	r3, #1
 8001250:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001254:	f7ff fb5c 	bl	8000910 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001258:	6820      	ldr	r0, [r4, #0]
 800125a:	f00a fac3 	bl	800b7e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800125e:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001260:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001264:	f7ff b962 	b.w	800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001268:	f004 ffc0 	bl	80061ec <HAL_LTDC_ProgramLineEvent>
        return instance;
 800126c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800126e:	6803      	ldr	r3, [r0, #0]
 8001270:	6a1b      	ldr	r3, [r3, #32]
 8001272:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001274:	2000      	movs	r0, #0
    }
 8001276:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800127a:	f7ff b985 	b.w	8000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800127e:	bd10      	pop	{r4, pc}
 8001280:	2400e424 	.word	0x2400e424
 8001284:	50001000 	.word	0x50001000
 8001288:	240047ba 	.word	0x240047ba
 800128c:	240047b8 	.word	0x240047b8

08001290 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001290:	4901      	ldr	r1, [pc, #4]	; (8001298 <vApplicationIdleHook+0x8>)
 8001292:	2000      	movs	r0, #0
 8001294:	f008 bdf4 	b.w	8009e80 <vTaskSetApplicationTaskTag>
 8001298:	08000879 	.word	0x08000879

0800129c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800129c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129e:	2064      	movs	r0, #100	; 0x64
 80012a0:	f007 f9ab 	bl	80085fa <osDelay>
  for(;;)
 80012a4:	e7fb      	b.n	800129e <StartDefaultTask+0x2>
	...

080012a8 <SystemClock_Config>:
{
 80012a8:	b570      	push	{r4, r5, r6, lr}
 80012aa:	b09c      	sub	sp, #112	; 0x70
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012ac:	224c      	movs	r2, #76	; 0x4c
 80012ae:	2100      	movs	r1, #0
 80012b0:	a809      	add	r0, sp, #36	; 0x24
 80012b2:	f01f ffa6 	bl	8021202 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80012b6:	2220      	movs	r2, #32
 80012b8:	2100      	movs	r1, #0
 80012ba:	a801      	add	r0, sp, #4
 80012bc:	f01f ffa1 	bl	8021202 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 80012c0:	2002      	movs	r0, #2
 80012c2:	f005 f877 	bl	80063b4 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012c6:	2300      	movs	r3, #0
 80012c8:	9300      	str	r3, [sp, #0]
 80012ca:	4b20      	ldr	r3, [pc, #128]	; (800134c <SystemClock_Config+0xa4>)
 80012cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80012ce:	f022 0201 	bic.w	r2, r2, #1
 80012d2:	62da      	str	r2, [r3, #44]	; 0x2c
 80012d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012d6:	f003 0301 	and.w	r3, r3, #1
 80012da:	9300      	str	r3, [sp, #0]
 80012dc:	4b1c      	ldr	r3, [pc, #112]	; (8001350 <SystemClock_Config+0xa8>)
 80012de:	699a      	ldr	r2, [r3, #24]
 80012e0:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80012e4:	619a      	str	r2, [r3, #24]
 80012e6:	699a      	ldr	r2, [r3, #24]
 80012e8:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 80012ec:	9200      	str	r2, [sp, #0]
 80012ee:	9a00      	ldr	r2, [sp, #0]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80012f0:	699a      	ldr	r2, [r3, #24]
 80012f2:	0494      	lsls	r4, r2, #18
 80012f4:	d5fc      	bpl.n	80012f0 <SystemClock_Config+0x48>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012f6:	2201      	movs	r2, #1
 80012f8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLN = 160;
 80012fc:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80012fe:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8001300:	2500      	movs	r5, #0
 8001302:	2608      	movs	r6, #8
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001304:	a809      	add	r0, sp, #36	; 0x24
  RCC_OscInitStruct.PLL.PLLP = 2;
 8001306:	9416      	str	r4, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8001308:	951b      	str	r5, [sp, #108]	; 0x6c
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800130a:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLN = 160;
 800130e:	23a0      	movs	r3, #160	; 0xa0
 8001310:	e9cd 1314 	strd	r1, r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001314:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001316:	e9cd 4412 	strd	r4, r4, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 800131a:	e9cd 3417 	strd	r3, r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800131e:	e9cd 6519 	strd	r6, r5, [sp, #100]	; 0x64
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001322:	f005 fb81 	bl	8006a28 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001326:	203f      	movs	r0, #63	; 0x3f
 8001328:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 800132a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800132e:	4621      	mov	r1, r4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001330:	e9cd 0301 	strd	r0, r3, [sp, #4]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8001334:	2340      	movs	r3, #64	; 0x40
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001336:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8001338:	e9cd 5603 	strd	r5, r6, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 800133c:	e9cd 3305 	strd	r3, r3, [sp, #20]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8001340:	e9cd 2307 	strd	r2, r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001344:	f005 febe 	bl	80070c4 <HAL_RCC_ClockConfig>
}
 8001348:	b01c      	add	sp, #112	; 0x70
 800134a:	bd70      	pop	{r4, r5, r6, pc}
 800134c:	58000400 	.word	0x58000400
 8001350:	58024800 	.word	0x58024800

08001354 <main>:
  *((uint32_t*)0x51046108) = 1; /* DMA2D issue in cut 1.1 */
 8001354:	2301      	movs	r3, #1
 8001356:	4ad7      	ldr	r2, [pc, #860]	; (80016b4 <main+0x360>)
{
 8001358:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  *((uint32_t*)0x51046108) = 1; /* DMA2D issue in cut 1.1 */
 800135c:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
  *((uint32_t*)0x51008108) = 1; /* AXI SRAM issue in cut 1.2 */
 8001360:	f5a2 3278 	sub.w	r2, r2, #253952	; 0x3e000
{
 8001364:	b099      	sub	sp, #100	; 0x64
  *((uint32_t*)0x51008108) = 1; /* AXI SRAM issue in cut 1.2 */
 8001366:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800136a:	4bd3      	ldr	r3, [pc, #844]	; (80016b8 <main+0x364>)
 800136c:	695a      	ldr	r2, [r3, #20]
 800136e:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 8001372:	d111      	bne.n	8001398 <main+0x44>
  __ASM volatile ("dsb 0xF":::"memory");
 8001374:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001378:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800137c:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001380:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001384:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001388:	695a      	ldr	r2, [r3, #20]
 800138a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800138e:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001390:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001394:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 8001398:	4ac7      	ldr	r2, [pc, #796]	; (80016b8 <main+0x364>)
 800139a:	6953      	ldr	r3, [r2, #20]
 800139c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 80013a0:	d123      	bne.n	80013ea <main+0x96>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80013a2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80013a6:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 80013aa:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013ae:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80013b2:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80013b6:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80013ba:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013bc:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80013c0:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013c2:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 80013c6:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013c8:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 80013cc:	d2f9      	bcs.n	80013c2 <main+0x6e>
    } while(sets-- != 0U);
 80013ce:	3b20      	subs	r3, #32
 80013d0:	f113 0f20 	cmn.w	r3, #32
 80013d4:	d1f2      	bne.n	80013bc <main+0x68>
 80013d6:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 80013da:	6953      	ldr	r3, [r2, #20]
 80013dc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80013e0:	6153      	str	r3, [r2, #20]
 80013e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013e6:	f3bf 8f6f 	isb	sy

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80013ea:	2710      	movs	r7, #16
  HAL_Init();
 80013ec:	f003 fe16 	bl	800501c <HAL_Init>
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80013f0:	2100      	movs	r1, #0
 80013f2:	a80b      	add	r0, sp, #44	; 0x2c
 80013f4:	463a      	mov	r2, r7
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80013f6:	2601      	movs	r6, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80013f8:	f01f ff03 	bl	8021202 <memset>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80013fc:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 80013fe:	f003 fec9 	bl	8005194 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 8001402:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
 8001406:	4bad      	ldr	r3, [pc, #692]	; (80016bc <main+0x368>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001408:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 800140a:	251c      	movs	r5, #28
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 800140c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c

  HAL_MPU_ConfigRegion(&MPU_InitStruct);

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 8001410:	f04f 0902 	mov.w	r9, #2
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8001414:	f04f 0803 	mov.w	r8, #3
  HAL_MPU_ConfigRegion(&MPU_InitStruct);

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 8001418:	f04f 0a1a 	mov.w	sl, #26
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 800141c:	f04f 0b40 	mov.w	fp, #64	; 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 8001420:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 8001424:	4ba6      	ldr	r3, [pc, #664]	; (80016c0 <main+0x36c>)
 8001426:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001428:	f003 fed2 	bl	80051d0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0xD0000000;
 800142c:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001430:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 8001432:	f88d 5034 	strb.w	r5, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
 8001436:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8001438:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 800143c:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 8001440:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001444:	f003 fec4 	bl	80051d0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 8001448:	2318      	movs	r3, #24
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800144a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 800144c:	f88d 902d 	strb.w	r9, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 8001450:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8001454:	f240 1301 	movw	r3, #257	; 0x101
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8001458:	f88d 8037 	strb.w	r8, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 800145c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001460:	f003 feb6 	bl	80051d0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
 8001464:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001468:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 800146a:	f88d 5034 	strb.w	r5, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 800146e:	2504      	movs	r5, #4
  MPU_InitStruct.BaseAddress = 0x90000000;
 8001470:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 8001472:	f88d 802d 	strb.w	r8, [sp, #45]	; 0x2d
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8001476:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 800147a:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800147e:	f003 fea7 	bl	80051d0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001482:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 8001484:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 8001488:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 800148c:	f88d 8037 	strb.w	r8, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8001490:	f88d 603a 	strb.w	r6, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001494:	f003 fe9c 	bl	80051d0 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8001498:	4628      	mov	r0, r5
 800149a:	f003 fe89 	bl	80051b0 <HAL_MPU_Enable>
  SystemClock_Config();
 800149e:	f7ff ff03 	bl	80012a8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a2:	2214      	movs	r2, #20
 80014a4:	4621      	mov	r1, r4
 80014a6:	a80b      	add	r0, sp, #44	; 0x2c
 80014a8:	f01f feab 	bl	8021202 <memset>
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80014ac:	4b85      	ldr	r3, [pc, #532]	; (80016c4 <main+0x370>)
  HAL_GPIO_WritePin(GPIOB, VSYNC_FREQ_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80014ae:	f44f 7184 	mov.w	r1, #264	; 0x108
 80014b2:	4885      	ldr	r0, [pc, #532]	; (80016c8 <main+0x374>)
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80014b4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80014bc:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80014c0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014c4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80014c8:	9200      	str	r2, [sp, #0]
 80014ca:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014cc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014d0:	ea42 0209 	orr.w	r2, r2, r9
 80014d4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80014d8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014dc:	ea02 0209 	and.w	r2, r2, r9
 80014e0:	9201      	str	r2, [sp, #4]
 80014e2:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 80014e4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014e8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80014ec:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80014f0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014f4:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 80014f8:	9202      	str	r2, [sp, #8]
 80014fa:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014fc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001500:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001504:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001508:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800150c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001510:	9203      	str	r2, [sp, #12]
 8001512:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001514:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001518:	433a      	orrs	r2, r7
 800151a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800151e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001522:	403a      	ands	r2, r7
 8001524:	9204      	str	r2, [sp, #16]
 8001526:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001528:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800152c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001530:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001534:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001538:	f402 7200 	and.w	r2, r2, #512	; 0x200
 800153c:	9205      	str	r2, [sp, #20]
 800153e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001540:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001544:	432a      	orrs	r2, r5
 8001546:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800154a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800154e:	402a      	ands	r2, r5
 8001550:	9206      	str	r2, [sp, #24]
 8001552:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001554:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001558:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800155c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001560:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001564:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001568:	9207      	str	r2, [sp, #28]
 800156a:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800156c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001570:	f042 0208 	orr.w	r2, r2, #8
 8001574:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001578:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800157c:	f002 0208 	and.w	r2, r2, #8
 8001580:	9208      	str	r2, [sp, #32]
 8001582:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001584:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001588:	f042 0220 	orr.w	r2, r2, #32
 800158c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001590:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001594:	f002 0220 	and.w	r2, r2, #32
 8001598:	9209      	str	r2, [sp, #36]	; 0x24
 800159a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800159c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80015a0:	4332      	orrs	r2, r6
 80015a2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  HAL_GPIO_WritePin(GPIOB, VSYNC_FREQ_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015a6:	4622      	mov	r2, r4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015a8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80015ac:	4033      	ands	r3, r6
 80015ae:	930a      	str	r3, [sp, #40]	; 0x28
 80015b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, VSYNC_FREQ_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015b2:	f004 f8f3 	bl	800579c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015b6:	4622      	mov	r2, r4
 80015b8:	2106      	movs	r1, #6
 80015ba:	4844      	ldr	r0, [pc, #272]	; (80016cc <main+0x378>)
 80015bc:	f004 f8ee 	bl	800579c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
 80015c0:	4629      	mov	r1, r5
 80015c2:	4622      	mov	r2, r4
 80015c4:	4842      	ldr	r0, [pc, #264]	; (80016d0 <main+0x37c>)
 80015c6:	f004 f8e9 	bl	800579c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80015ca:	4632      	mov	r2, r6
 80015cc:	2140      	movs	r1, #64	; 0x40
 80015ce:	4840      	ldr	r0, [pc, #256]	; (80016d0 <main+0x37c>)
 80015d0:	f004 f8e4 	bl	800579c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|MCU_ACTIVE_Pin;
 80015d4:	f44f 7384 	mov.w	r3, #264	; 0x108
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d8:	a90b      	add	r1, sp, #44	; 0x2c
 80015da:	483b      	ldr	r0, [pc, #236]	; (80016c8 <main+0x374>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015dc:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015e0:	e9cd 480d 	strd	r4, r8, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015e4:	f003 ff4a 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 80015e8:	2306      	movs	r3, #6
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ea:	a90b      	add	r1, sp, #44	; 0x2c
 80015ec:	4837      	ldr	r0, [pc, #220]	; (80016cc <main+0x378>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ee:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f2:	e9cd 480d 	strd	r4, r8, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015f6:	f003 ff41 	bl	800547c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 80015fa:	a90b      	add	r1, sp, #44	; 0x2c
 80015fc:	4834      	ldr	r0, [pc, #208]	; (80016d0 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fe:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001602:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8001606:	f003 ff39 	bl	800547c <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 800160a:	a90b      	add	r1, sp, #44	; 0x2c
 800160c:	4830      	ldr	r0, [pc, #192]	; (80016d0 <main+0x37c>)
  hltdc.Instance = LTDC;
 800160e:	4d31      	ldr	r5, [pc, #196]	; (80016d4 <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001610:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001614:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001618:	f003 ff30 	bl	800547c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800161c:	482e      	ldr	r0, [pc, #184]	; (80016d8 <main+0x384>)
 800161e:	4a2f      	ldr	r2, [pc, #188]	; (80016dc <main+0x388>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8001620:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 8001622:	6002      	str	r2, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8001624:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8001626:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800162a:	f003 fdfd 	bl	8005228 <HAL_CRC_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800162e:	2234      	movs	r2, #52	; 0x34
 8001630:	4621      	mov	r1, r4
 8001632:	a80b      	add	r0, sp, #44	; 0x2c
 8001634:	f01f fde5 	bl	8021202 <memset>
  hltdc.Instance = LTDC;
 8001638:	4a29      	ldr	r2, [pc, #164]	; (80016e0 <main+0x38c>)
  hltdc.Init.AccumulatedVBP = 34;
 800163a:	218f      	movs	r1, #143	; 0x8f
  hltdc.Init.AccumulatedActiveH = 514;
 800163c:	f240 300f 	movw	r0, #783	; 0x30f
  hltdc.Init.TotalHeigh = 524;
 8001640:	f240 3c1f 	movw	ip, #799	; 0x31f
  hltdc.Init.Backcolor.Blue = 0;
 8001644:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001646:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001648:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800164c:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.HorizontalSync = 29;
 8001650:	221d      	movs	r2, #29
  hltdc.Init.VerticalSync = 2;
 8001652:	e9c5 2905 	strd	r2, r9, [r5, #20]
  hltdc.Init.AccumulatedVBP = 34;
 8001656:	2222      	movs	r2, #34	; 0x22
 8001658:	e9c5 1207 	strd	r1, r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 514;
 800165c:	f240 2202 	movw	r2, #514	; 0x202
 8001660:	e9c5 0209 	strd	r0, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 524;
 8001664:	f44f 7203 	mov.w	r2, #524	; 0x20c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001668:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 524;
 800166a:	e9c5 c20b 	strd	ip, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800166e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001672:	f004 fcc3 	bl	8005ffc <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001676:	20ff      	movs	r0, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001678:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  pLayerCfg.FBStartAdress = 0xD0000000;
 800167c:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  pLayerCfg.WindowX1 = 640;
 8001680:	f44f 7120 	mov.w	r1, #640	; 0x280
  pLayerCfg.WindowY1 = 480;
 8001684:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.WindowX0 = 0;
 8001688:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.ImageHeight = 480;
 800168a:	9216      	str	r2, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 800168c:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
 8001690:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.Alpha0 = 0;
 8001694:	e9cd 0410 	strd	r0, r4, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001698:	2005      	movs	r0, #5
  pLayerCfg.ImageWidth = 640;
 800169a:	e9cd 3114 	strd	r3, r1, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800169e:	e9cd e012 	strd	lr, r0, [sp, #72]	; 0x48
  pLayerCfg.WindowY0 = 0;
 80016a2:	e9cd 140c 	strd	r1, r4, [sp, #48]	; 0x30
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80016a6:	e9cd 290e 	strd	r2, r9, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016aa:	a90b      	add	r1, sp, #44	; 0x2c
 80016ac:	4622      	mov	r2, r4
 80016ae:	4628      	mov	r0, r5
 80016b0:	e018      	b.n	80016e4 <main+0x390>
 80016b2:	bf00      	nop
 80016b4:	51046000 	.word	0x51046000
 80016b8:	e000ed00 	.word	0xe000ed00
 80016bc:	03000012 	.word	0x03000012
 80016c0:	01010001 	.word	0x01010001
 80016c4:	58024400 	.word	0x58024400
 80016c8:	58020400 	.word	0x58020400
 80016cc:	58020800 	.word	0x58020800
 80016d0:	58020000 	.word	0x58020000
 80016d4:	24004850 	.word	0x24004850
 80016d8:	240047c4 	.word	0x240047c4
 80016dc:	58024c00 	.word	0x58024c00
 80016e0:	50001000 	.word	0x50001000
 80016e4:	f004 fd55 	bl	8006192 <HAL_LTDC_ConfigLayer>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80016e8:	4833      	ldr	r0, [pc, #204]	; (80017b8 <main+0x464>)
 80016ea:	4a34      	ldr	r2, [pc, #208]	; (80017bc <main+0x468>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016ec:	a90b      	add	r1, sp, #44	; 0x2c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 80016ee:	6284      	str	r4, [r0, #40]	; 0x28
  SdramTiming.RCDDelay = 16;
 80016f0:	9711      	str	r7, [sp, #68]	; 0x44
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80016f2:	e9c0 2600 	strd	r2, r6, [r0]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 80016f6:	2220      	movs	r2, #32
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_2;
 80016f8:	e9c0 2404 	strd	r2, r4, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
 80016fc:	2280      	movs	r2, #128	; 0x80
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_11;
 80016fe:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001702:	e9c0 2406 	strd	r2, r4, [r0, #24]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001706:	e9c0 4408 	strd	r4, r4, [r0, #32]
  SdramTiming.ExitSelfRefreshDelay = 16;
 800170a:	e9cd 770b 	strd	r7, r7, [sp, #44]	; 0x2c
  SdramTiming.RowCycleDelay = 16;
 800170e:	e9cd 770d 	strd	r7, r7, [sp, #52]	; 0x34
  SdramTiming.RPDelay = 16;
 8001712:	e9cd 770f 	strd	r7, r7, [sp, #60]	; 0x3c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001716:	f006 fc5d 	bl	8007fd4 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 800171a:	4929      	ldr	r1, [pc, #164]	; (80017c0 <main+0x46c>)
  BSP_SDRAM_DeInit(0);
 800171c:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 800171e:	680a      	ldr	r2, [r1, #0]
 8001720:	f022 0201 	bic.w	r2, r2, #1
 8001724:	600a      	str	r2, [r1, #0]
  BSP_SDRAM_DeInit(0);
 8001726:	f003 f9dd 	bl	8004ae4 <BSP_SDRAM_DeInit>
  BSP_SDRAM_Init(0);
 800172a:	4620      	mov	r0, r4
 800172c:	f003 fa24 	bl	8004b78 <BSP_SDRAM_Init>
  hdma2d.Init.Mode = DMA2D_R2M;
 8001730:	4b24      	ldr	r3, [pc, #144]	; (80017c4 <main+0x470>)
  hdma2d.Instance = DMA2D;
 8001732:	4825      	ldr	r0, [pc, #148]	; (80017c8 <main+0x474>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8001734:	f44f 3240 	mov.w	r2, #196608	; 0x30000
  hdma2d.Init.OutputOffset = 0;
 8001738:	e9c0 9402 	strd	r9, r4, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800173c:	e9c0 3200 	strd	r3, r2, [r0]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001740:	f003 fdd2 	bl	80052e8 <HAL_DMA2D_Init>
  hqspi.Instance = QUADSPI;
 8001744:	4821      	ldr	r0, [pc, #132]	; (80017cc <main+0x478>)
 8001746:	4a22      	ldr	r2, [pc, #136]	; (80017d0 <main+0x47c>)
  hqspi.Init.FlashSize = 26;
 8001748:	f8c0 a010 	str.w	sl, [r0, #16]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_ENABLE;
 800174c:	f8c0 b020 	str.w	fp, [r0, #32]
  hqspi.Init.ClockPrescaler = 3;
 8001750:	e9c0 2800 	strd	r2, r8, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE;
 8001754:	f44f 7240 	mov.w	r2, #768	; 0x300
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 8001758:	e9c0 6402 	strd	r6, r4, [r0, #8]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 800175c:	e9c0 2405 	strd	r2, r4, [r0, #20]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001760:	f004 ff2e 	bl	80065c0 <HAL_QSPI_Init>
  BSP_QSPI_DeInit (0);
 8001764:	4620      	mov	r0, r4
 8001766:	f002 ff4b 	bl	8004600 <BSP_QSPI_DeInit>
  init.InterfaceMode  = MT25TL01G_QPI_MODE;
 800176a:	f240 1203 	movw	r2, #259	; 0x103
  if(BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 800176e:	a90b      	add	r1, sp, #44	; 0x2c
 8001770:	4620      	mov	r0, r4
  init.InterfaceMode  = MT25TL01G_QPI_MODE;
 8001772:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
  init.DualFlashMode  = MT25TL01G_DUALFLASH_ENABLE;
 8001776:	f88d b02e 	strb.w	fp, [sp, #46]	; 0x2e
  if(BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 800177a:	f002 ffe9 	bl	8004750 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode(0) != BSP_ERROR_NONE)
 800177e:	4620      	mov	r0, r4
 8001780:	f002 fef2 	bl	8004568 <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8001784:	205c      	movs	r0, #92	; 0x5c
 8001786:	f003 fcf3 	bl	8005170 <HAL_NVIC_DisableIRQ>
  MX_TouchGFX_Init();
 800178a:	f7fe fe23 	bl	80003d4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800178e:	f7fe fe20 	bl	80003d2 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001792:	f006 febf 	bl	8008514 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001796:	4a0f      	ldr	r2, [pc, #60]	; (80017d4 <main+0x480>)
 8001798:	4621      	mov	r1, r4
 800179a:	480f      	ldr	r0, [pc, #60]	; (80017d8 <main+0x484>)
 800179c:	f006 fee6 	bl	800856c <osThreadNew>
 80017a0:	4b0e      	ldr	r3, [pc, #56]	; (80017dc <main+0x488>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80017a2:	4a0f      	ldr	r2, [pc, #60]	; (80017e0 <main+0x48c>)
 80017a4:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80017a6:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80017a8:	480e      	ldr	r0, [pc, #56]	; (80017e4 <main+0x490>)
 80017aa:	f006 fedf 	bl	800856c <osThreadNew>
 80017ae:	4b0e      	ldr	r3, [pc, #56]	; (80017e8 <main+0x494>)
 80017b0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017b2:	f006 fec1 	bl	8008538 <osKernelStart>
  while (1)
 80017b6:	e7fe      	b.n	80017b6 <main+0x462>
 80017b8:	240048f8 	.word	0x240048f8
 80017bc:	52004140 	.word	0x52004140
 80017c0:	52004000 	.word	0x52004000
 80017c4:	52001000 	.word	0x52001000
 80017c8:	240047e8 	.word	0x240047e8
 80017cc:	240054d0 	.word	0x240054d0
 80017d0:	52005000 	.word	0x52005000
 80017d4:	08022670 	.word	0x08022670
 80017d8:	0800129d 	.word	0x0800129d
 80017dc:	240047c0 	.word	0x240047c0
 80017e0:	0802264c 	.word	0x0802264c
 80017e4:	080003e3 	.word	0x080003e3
 80017e8:	240047bc 	.word	0x240047bc

080017ec <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80017ec:	6802      	ldr	r2, [r0, #0]
 80017ee:	4b03      	ldr	r3, [pc, #12]	; (80017fc <HAL_TIM_PeriodElapsedCallback+0x10>)
 80017f0:	429a      	cmp	r2, r3
 80017f2:	d101      	bne.n	80017f8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80017f4:	f003 bc40 	b.w	8005078 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80017f8:	4770      	bx	lr
 80017fa:	bf00      	nop
 80017fc:	40001000 	.word	0x40001000

08001800 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001800:	4770      	bx	lr
	...

08001804 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001804:	4b0a      	ldr	r3, [pc, #40]	; (8001830 <HAL_MspInit+0x2c>)
{
 8001806:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001808:	210f      	movs	r1, #15
 800180a:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800180e:	f8d3 20f4 	ldr.w	r2, [r3, #244]	; 0xf4
 8001812:	f042 0202 	orr.w	r2, r2, #2
 8001816:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800181a:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800181c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8001820:	f003 0302 	and.w	r3, r3, #2
 8001824:	9301      	str	r3, [sp, #4]
 8001826:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001828:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800182a:	f003 bc61 	b.w	80050f0 <HAL_NVIC_SetPriority>
 800182e:	bf00      	nop
 8001830:	58024400 	.word	0x58024400

08001834 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001834:	6802      	ldr	r2, [r0, #0]
{
 8001836:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001838:	4b09      	ldr	r3, [pc, #36]	; (8001860 <HAL_CRC_MspInit+0x2c>)
 800183a:	429a      	cmp	r2, r3
 800183c:	d10d      	bne.n	800185a <HAL_CRC_MspInit+0x26>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800183e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8001842:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001846:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800184a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800184e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001852:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8001856:	9301      	str	r3, [sp, #4]
 8001858:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800185a:	b002      	add	sp, #8
 800185c:	4770      	bx	lr
 800185e:	bf00      	nop
 8001860:	58024c00 	.word	0x58024c00

08001864 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001864:	4b0f      	ldr	r3, [pc, #60]	; (80018a4 <HAL_DMA2D_MspInit+0x40>)
{
 8001866:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001868:	6802      	ldr	r2, [r0, #0]
 800186a:	429a      	cmp	r2, r3
 800186c:	d117      	bne.n	800189e <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800186e:	4b0e      	ldr	r3, [pc, #56]	; (80018a8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001870:	2105      	movs	r1, #5
 8001872:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001874:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001878:	f042 0210 	orr.w	r2, r2, #16
 800187c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001880:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001882:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8001886:	f003 0310 	and.w	r3, r3, #16
 800188a:	9301      	str	r3, [sp, #4]
 800188c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800188e:	f003 fc2f 	bl	80050f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001892:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001894:	b003      	add	sp, #12
 8001896:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800189a:	f003 bc5b 	b.w	8005154 <HAL_NVIC_EnableIRQ>
}
 800189e:	b003      	add	sp, #12
 80018a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80018a4:	52001000 	.word	0x52001000
 80018a8:	58024400 	.word	0x58024400

080018ac <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80018ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018ae:	2214      	movs	r2, #20
{
 80018b0:	b0bb      	sub	sp, #236	; 0xec
 80018b2:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018b4:	2100      	movs	r1, #0
 80018b6:	eb0d 0002 	add.w	r0, sp, r2
 80018ba:	f01f fca2 	bl	8021202 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80018be:	22c0      	movs	r2, #192	; 0xc0
 80018c0:	2100      	movs	r1, #0
 80018c2:	a80a      	add	r0, sp, #40	; 0x28
 80018c4:	f01f fc9d 	bl	8021202 <memset>
  if(hltdc->Instance==LTDC)
 80018c8:	6822      	ldr	r2, [r4, #0]
 80018ca:	4b3c      	ldr	r3, [pc, #240]	; (80019bc <HAL_LTDC_MspInit+0x110>)
 80018cc:	429a      	cmp	r2, r3
 80018ce:	d173      	bne.n	80019b8 <HAL_LTDC_MspInit+0x10c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80018d0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 80018d4:	2300      	movs	r3, #0
    PeriphClkInitStruct.PLL3.PLL3M = 5;
    PeriphClkInitStruct.PLL3.PLL3N = 160;
    PeriphClkInitStruct.PLL3.PLL3P = 2;
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 32;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 80018d6:	2120      	movs	r1, #32
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80018d8:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80018da:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
 80018de:	23a0      	movs	r3, #160	; 0xa0
 80018e0:	2205      	movs	r2, #5
 80018e2:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 80018e6:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 80018e8:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 80018ec:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80018f0:	e9cd 1318 	strd	r1, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80018f4:	f005 fe5a 	bl	80075ac <HAL_RCCEx_PeriphCLKConfig>
 80018f8:	b108      	cbz	r0, 80018fe <HAL_LTDC_MspInit+0x52>
    {
      Error_Handler();
 80018fa:	f7ff ff81 	bl	8001800 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80018fe:	4b30      	ldr	r3, [pc, #192]	; (80019c0 <HAL_LTDC_MspInit+0x114>)
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
                          |GPIO_PIN_7|GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001900:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001902:	2702      	movs	r7, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001904:	2603      	movs	r6, #3
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001906:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800190a:	250e      	movs	r5, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800190c:	a905      	add	r1, sp, #20
 800190e:	482d      	ldr	r0, [pc, #180]	; (80019c4 <HAL_LTDC_MspInit+0x118>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001910:	f042 0208 	orr.w	r2, r2, #8
 8001914:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
 8001918:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 800191c:	f002 0208 	and.w	r2, r2, #8
 8001920:	9201      	str	r2, [sp, #4]
 8001922:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8001924:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001928:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800192c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001930:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001934:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001938:	9202      	str	r2, [sp, #8]
 800193a:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 800193c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001940:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001944:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001948:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800194c:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001950:	9203      	str	r2, [sp, #12]
 8001952:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001954:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001958:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800195c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001960:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001964:	9509      	str	r5, [sp, #36]	; 0x24
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001966:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800196a:	9304      	str	r3, [sp, #16]
 800196c:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800196e:	23ff      	movs	r3, #255	; 0xff
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001970:	e9cd 4607 	strd	r4, r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001974:	e9cd 3705 	strd	r3, r7, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001978:	f003 fd80 	bl	800547c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_11|GPIO_PIN_10|GPIO_PIN_9
 800197c:	f648 637d 	movw	r3, #36477	; 0x8e7d
                          |GPIO_PIN_3|GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001980:	a905      	add	r1, sp, #20
 8001982:	4811      	ldr	r0, [pc, #68]	; (80019c8 <HAL_LTDC_MspInit+0x11c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001984:	9509      	str	r5, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001986:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800198a:	e9cd 4607 	strd	r4, r6, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 800198e:	f003 fd75 	bl	800547c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8001992:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001996:	a905      	add	r1, sp, #20
 8001998:	480c      	ldr	r0, [pc, #48]	; (80019cc <HAL_LTDC_MspInit+0x120>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800199a:	9509      	str	r5, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800199c:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019a0:	e9cd 4607 	strd	r4, r6, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80019a4:	f003 fd6a 	bl	800547c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 15, 0);
 80019a8:	2058      	movs	r0, #88	; 0x58
 80019aa:	4622      	mov	r2, r4
 80019ac:	210f      	movs	r1, #15
 80019ae:	f003 fb9f 	bl	80050f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80019b2:	2058      	movs	r0, #88	; 0x58
 80019b4:	f003 fbce 	bl	8005154 <HAL_NVIC_EnableIRQ>
    // GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    // HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80019b8:	b03b      	add	sp, #236	; 0xec
 80019ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019bc:	50001000 	.word	0x50001000
 80019c0:	58024400 	.word	0x58024400
 80019c4:	58022800 	.word	0x58022800
 80019c8:	58022400 	.word	0x58022400
 80019cc:	58022000 	.word	0x58022000

080019d0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80019d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80019d4:	b0bc      	sub	sp, #240	; 0xf0
 80019d6:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019d8:	2214      	movs	r2, #20
 80019da:	2100      	movs	r1, #0
 80019dc:	a807      	add	r0, sp, #28
 80019de:	f01f fc10 	bl	8021202 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80019e2:	22c0      	movs	r2, #192	; 0xc0
 80019e4:	2100      	movs	r1, #0
 80019e6:	a80c      	add	r0, sp, #48	; 0x30
 80019e8:	f01f fc0b 	bl	8021202 <memset>
  if(hqspi->Instance==QUADSPI)
 80019ec:	6822      	ldr	r2, [r4, #0]
 80019ee:	4b57      	ldr	r3, [pc, #348]	; (8001b4c <HAL_QSPI_MspInit+0x17c>)
 80019f0:	429a      	cmp	r2, r3
 80019f2:	f040 80a7 	bne.w	8001b44 <HAL_QSPI_MspInit+0x174>

  /* USER CODE END QUADSPI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 80019f6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80019fa:	2300      	movs	r3, #0
    PeriphClkInitStruct.QspiClockSelection = RCC_QSPICLKSOURCE_D1HCLK;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80019fc:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 80019fe:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001a02:	f005 fdd3 	bl	80075ac <HAL_RCCEx_PeriphCLKConfig>
 8001a06:	b108      	cbz	r0, 8001a0c <HAL_QSPI_MspInit+0x3c>
    {
      Error_Handler();
 8001a08:	f7ff fefa 	bl	8001800 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a0c:	4b50      	ldr	r3, [pc, #320]	; (8001b50 <HAL_QSPI_MspInit+0x180>)
    PH2     ------> QUADSPI_BK2_IO0
    PH3     ------> QUADSPI_BK2_IO1
    PB2     ------> QUADSPI_CLK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_14;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a0e:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a10:	2403      	movs	r4, #3
 8001a12:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a14:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001a18:	2609      	movs	r6, #9
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a1a:	a907      	add	r1, sp, #28
 8001a1c:	484d      	ldr	r0, [pc, #308]	; (8001b54 <HAL_QSPI_MspInit+0x184>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a1e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000

    GPIO_InitStruct.Pin = GPIO_PIN_11;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a22:	f04f 0801 	mov.w	r8, #1
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a26:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001a2a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001a2e:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001a32:	9201      	str	r2, [sp, #4]
 8001a34:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001a36:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a3a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001a3e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a42:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a46:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001a4a:	9202      	str	r2, [sp, #8]
 8001a4c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a4e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a52:	f042 0204 	orr.w	r2, r2, #4
 8001a56:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a5a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a5e:	f002 0204 	and.w	r2, r2, #4
 8001a62:	9203      	str	r2, [sp, #12]
 8001a64:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001a66:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a6a:	f042 0220 	orr.w	r2, r2, #32
 8001a6e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a72:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a76:	f002 0220 	and.w	r2, r2, #32
 8001a7a:	9204      	str	r2, [sp, #16]
 8001a7c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8001a7e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a82:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001a86:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a8a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a8e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001a92:	9205      	str	r2, [sp, #20]
 8001a94:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a96:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a9a:	f042 0202 	orr.w	r2, r2, #2
 8001a9e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001aa2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001aa6:	f003 0302 	and.w	r3, r3, #2
 8001aaa:	9306      	str	r3, [sp, #24]
 8001aac:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aae:	f44f 4384 	mov.w	r3, #16896	; 0x4200
 8001ab2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ab6:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001aba:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001abc:	f003 fcde 	bl	800547c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001ac0:	f44f 6300 	mov.w	r3, #2048	; 0x800
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ac4:	a907      	add	r1, sp, #28
 8001ac6:	4824      	ldr	r0, [pc, #144]	; (8001b58 <HAL_QSPI_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001ac8:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aca:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ace:	e9cd 8409 	strd	r8, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ad2:	f003 fcd3 	bl	800547c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001ad6:	2340      	movs	r3, #64	; 0x40
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ad8:	a907      	add	r1, sp, #28
 8001ada:	481e      	ldr	r0, [pc, #120]	; (8001b54 <HAL_QSPI_MspInit+0x184>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001adc:	e9cd 8409 	strd	r8, r4, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001ae0:	f04f 080a 	mov.w	r8, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ae4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001ae8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aec:	f003 fcc6 	bl	800547c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001af0:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001af2:	a907      	add	r1, sp, #28
 8001af4:	4819      	ldr	r0, [pc, #100]	; (8001b5c <HAL_QSPI_MspInit+0x18c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001af6:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001afc:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b00:	f003 fcbc 	bl	800547c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001b04:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b08:	a907      	add	r1, sp, #28
 8001b0a:	4814      	ldr	r0, [pc, #80]	; (8001b5c <HAL_QSPI_MspInit+0x18c>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001b0c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b10:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b14:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b18:	f003 fcb0 	bl	800547c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001b1c:	230c      	movs	r3, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001b1e:	a907      	add	r1, sp, #28
 8001b20:	480f      	ldr	r0, [pc, #60]	; (8001b60 <HAL_QSPI_MspInit+0x190>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001b22:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b24:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b28:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001b2c:	f003 fca6 	bl	800547c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b30:	2304      	movs	r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b32:	a907      	add	r1, sp, #28
 8001b34:	480b      	ldr	r0, [pc, #44]	; (8001b64 <HAL_QSPI_MspInit+0x194>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001b36:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b38:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b3c:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b40:	f003 fc9c 	bl	800547c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001b44:	b03c      	add	sp, #240	; 0xf0
 8001b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b4a:	bf00      	nop
 8001b4c:	52005000 	.word	0x52005000
 8001b50:	58024400 	.word	0x58024400
 8001b54:	58021800 	.word	0x58021800
 8001b58:	58020800 	.word	0x58020800
 8001b5c:	58021400 	.word	0x58021400
 8001b60:	58021c00 	.word	0x58021c00
 8001b64:	58020400 	.word	0x58020400

08001b68 <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 8001b68:	6802      	ldr	r2, [r0, #0]
{
 8001b6a:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001b6c:	4b11      	ldr	r3, [pc, #68]	; (8001bb4 <HAL_QSPI_MspDeInit+0x4c>)
 8001b6e:	429a      	cmp	r2, r3
 8001b70:	d11f      	bne.n	8001bb2 <HAL_QSPI_MspDeInit+0x4a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001b72:	4a11      	ldr	r2, [pc, #68]	; (8001bb8 <HAL_QSPI_MspDeInit+0x50>)
    PF9     ------> QUADSPI_BK1_IO1
    PH2     ------> QUADSPI_BK2_IO0
    PH3     ------> QUADSPI_BK2_IO1
    PB2     ------> QUADSPI_CLK
    */
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_14|GPIO_PIN_6);
 8001b74:	f244 2140 	movw	r1, #16960	; 0x4240
 8001b78:	4810      	ldr	r0, [pc, #64]	; (8001bbc <HAL_QSPI_MspDeInit+0x54>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001b7a:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
 8001b7e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001b82:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_14|GPIO_PIN_6);
 8001b86:	f003 fd63 	bl	8005650 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_11);
 8001b8a:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001b8e:	480c      	ldr	r0, [pc, #48]	; (8001bc0 <HAL_QSPI_MspDeInit+0x58>)
 8001b90:	f003 fd5e 	bl	8005650 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9);
 8001b94:	f44f 7170 	mov.w	r1, #960	; 0x3c0
 8001b98:	480a      	ldr	r0, [pc, #40]	; (8001bc4 <HAL_QSPI_MspDeInit+0x5c>)
 8001b9a:	f003 fd59 	bl	8005650 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_2|GPIO_PIN_3);
 8001b9e:	210c      	movs	r1, #12
 8001ba0:	4809      	ldr	r0, [pc, #36]	; (8001bc8 <HAL_QSPI_MspDeInit+0x60>)
 8001ba2:	f003 fd55 	bl	8005650 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 8001ba6:	2104      	movs	r1, #4
 8001ba8:	4808      	ldr	r0, [pc, #32]	; (8001bcc <HAL_QSPI_MspDeInit+0x64>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001baa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 8001bae:	f003 bd4f 	b.w	8005650 <HAL_GPIO_DeInit>
}
 8001bb2:	bd08      	pop	{r3, pc}
 8001bb4:	52005000 	.word	0x52005000
 8001bb8:	58024400 	.word	0x58024400
 8001bbc:	58021800 	.word	0x58021800
 8001bc0:	58020800 	.word	0x58020800
 8001bc4:	58021400 	.word	0x58021400
 8001bc8:	58021c00 	.word	0x58021c00
 8001bcc:	58020400 	.word	0x58020400

08001bd0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bd2:	b0b7      	sub	sp, #220	; 0xdc
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001bd4:	2100      	movs	r1, #0
 8001bd6:	2214      	movs	r2, #20
 8001bd8:	a801      	add	r0, sp, #4
 8001bda:	f01f fb12 	bl	8021202 <memset>
  if (FMC_Initialized) {
 8001bde:	4b3f      	ldr	r3, [pc, #252]	; (8001cdc <HAL_SDRAM_MspInit+0x10c>)
 8001be0:	6819      	ldr	r1, [r3, #0]
 8001be2:	2900      	cmp	r1, #0
 8001be4:	d177      	bne.n	8001cd6 <HAL_SDRAM_MspInit+0x106>
  FMC_Initialized = 1;
 8001be6:	2201      	movs	r2, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001be8:	a808      	add	r0, sp, #32
  FMC_Initialized = 1;
 8001bea:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001bec:	22b8      	movs	r2, #184	; 0xb8
 8001bee:	f01f fb08 	bl	8021202 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 8001bf2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001bf6:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bf8:	a806      	add	r0, sp, #24
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 8001bfa:	e9cd 2306 	strd	r2, r3, [sp, #24]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bfe:	f005 fcd5 	bl	80075ac <HAL_RCCEx_PeriphCLKConfig>
 8001c02:	b108      	cbz	r0, 8001c08 <HAL_SDRAM_MspInit+0x38>
      Error_Handler();
 8001c04:	f7ff fdfc 	bl	8001800 <Error_Handler>
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c08:	4b35      	ldr	r3, [pc, #212]	; (8001ce0 <HAL_SDRAM_MspInit+0x110>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c0a:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c0c:	2600      	movs	r6, #0
 8001c0e:	2503      	movs	r5, #3
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c10:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c14:	240c      	movs	r4, #12
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001c16:	a901      	add	r1, sp, #4
 8001c18:	4832      	ldr	r0, [pc, #200]	; (8001ce4 <HAL_SDRAM_MspInit+0x114>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c1a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c1e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001c22:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c26:	9405      	str	r4, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c28:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001c2c:	9300      	str	r3, [sp, #0]
 8001c2e:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c30:	f240 63ff 	movw	r3, #1791	; 0x6ff
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c34:	e9cd 6503 	strd	r6, r5, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c38:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001c3c:	f003 fc1e 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001c40:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c42:	a901      	add	r1, sp, #4
 8001c44:	4828      	ldr	r0, [pc, #160]	; (8001ce8 <HAL_SDRAM_MspInit+0x118>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c46:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c48:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c4c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c50:	f003 fc14 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 8001c54:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c58:	a901      	add	r1, sp, #4
 8001c5a:	4824      	ldr	r0, [pc, #144]	; (8001cec <HAL_SDRAM_MspInit+0x11c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c5c:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c5e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c62:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c66:	f003 fc09 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 8001c6a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001c6e:	a901      	add	r1, sp, #4
 8001c70:	481f      	ldr	r0, [pc, #124]	; (8001cf0 <HAL_SDRAM_MspInit+0x120>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c72:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c74:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c78:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001c7c:	f003 fbfe 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_4|GPIO_PIN_0;
 8001c80:	f248 1311 	movw	r3, #33041	; 0x8111
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c84:	a901      	add	r1, sp, #4
 8001c86:	481b      	ldr	r0, [pc, #108]	; (8001cf4 <HAL_SDRAM_MspInit+0x124>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c88:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c8e:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c92:	f003 fbf3 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 8001c96:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c9a:	a901      	add	r1, sp, #4
 8001c9c:	4816      	ldr	r0, [pc, #88]	; (8001cf8 <HAL_SDRAM_MspInit+0x128>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c9e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ca4:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ca8:	f003 fbe8 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 8001cac:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	a901      	add	r1, sp, #4
 8001cb2:	4812      	ldr	r0, [pc, #72]	; (8001cfc <HAL_SDRAM_MspInit+0x12c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cb4:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cba:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cbe:	f003 fbdd 	bl	800547c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001cc2:	2301      	movs	r3, #1
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cc4:	a901      	add	r1, sp, #4
 8001cc6:	480e      	ldr	r0, [pc, #56]	; (8001d00 <HAL_SDRAM_MspInit+0x130>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cc8:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cce:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cd2:	f003 fbd3 	bl	800547c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001cd6:	b037      	add	sp, #220	; 0xdc
 8001cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cda:	bf00      	nop
 8001cdc:	24004930 	.word	0x24004930
 8001ce0:	58024400 	.word	0x58024400
 8001ce4:	58022000 	.word	0x58022000
 8001ce8:	58020400 	.word	0x58020400
 8001cec:	58021000 	.word	0x58021000
 8001cf0:	58021c00 	.word	0x58021c00
 8001cf4:	58021800 	.word	0x58021800
 8001cf8:	58020c00 	.word	0x58020c00
 8001cfc:	58021400 	.word	0x58021400
 8001d00:	58020800 	.word	0x58020800

08001d04 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
 8001d04:	4b1a      	ldr	r3, [pc, #104]	; (8001d70 <HAL_SDRAM_MspDeInit+0x6c>)
 8001d06:	681a      	ldr	r2, [r3, #0]
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001d08:	b510      	push	{r4, lr}
  if (FMC_DeInitialized) {
 8001d0a:	bb82      	cbnz	r2, 8001d6e <HAL_SDRAM_MspDeInit+0x6a>
  __HAL_RCC_FMC_CLK_DISABLE();
 8001d0c:	4a19      	ldr	r2, [pc, #100]	; (8001d74 <HAL_SDRAM_MspDeInit+0x70>)
  FMC_DeInitialized = 1;
 8001d0e:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 8001d10:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001d14:	4818      	ldr	r0, [pc, #96]	; (8001d78 <HAL_SDRAM_MspDeInit+0x74>)
  FMC_DeInitialized = 1;
 8001d16:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001d18:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
 8001d1c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001d20:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 8001d24:	f003 fc94 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOB, GPIO_PIN_5|GPIO_PIN_6);
 8001d28:	2160      	movs	r1, #96	; 0x60
 8001d2a:	4814      	ldr	r0, [pc, #80]	; (8001d7c <HAL_SDRAM_MspDeInit+0x78>)
 8001d2c:	f003 fc90 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 8001d30:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001d34:	4812      	ldr	r0, [pc, #72]	; (8001d80 <HAL_SDRAM_MspDeInit+0x7c>)
 8001d36:	f003 fc8b 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 8001d3a:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001d3e:	4811      	ldr	r0, [pc, #68]	; (8001d84 <HAL_SDRAM_MspDeInit+0x80>)
 8001d40:	f003 fc86 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_4|GPIO_PIN_0);
 8001d44:	f248 1111 	movw	r1, #33041	; 0x8111
 8001d48:	480f      	ldr	r0, [pc, #60]	; (8001d88 <HAL_SDRAM_MspDeInit+0x84>)
 8001d4a:	f003 fc81 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 8001d4e:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001d52:	480e      	ldr	r0, [pc, #56]	; (8001d8c <HAL_SDRAM_MspDeInit+0x88>)
 8001d54:	f003 fc7c 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 8001d58:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001d5c:	480c      	ldr	r0, [pc, #48]	; (8001d90 <HAL_SDRAM_MspDeInit+0x8c>)
 8001d5e:	f003 fc77 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 8001d62:	4621      	mov	r1, r4
 8001d64:	480b      	ldr	r0, [pc, #44]	; (8001d94 <HAL_SDRAM_MspDeInit+0x90>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 8001d6a:	f003 bc71 	b.w	8005650 <HAL_GPIO_DeInit>
}
 8001d6e:	bd10      	pop	{r4, pc}
 8001d70:	2400492c 	.word	0x2400492c
 8001d74:	58024400 	.word	0x58024400
 8001d78:	58022000 	.word	0x58022000
 8001d7c:	58020400 	.word	0x58020400
 8001d80:	58021000 	.word	0x58021000
 8001d84:	58021c00 	.word	0x58021c00
 8001d88:	58021800 	.word	0x58021800
 8001d8c:	58020c00 	.word	0x58020c00
 8001d90:	58021400 	.word	0x58021400
 8001d94:	58020800 	.word	0x58020800

08001d98 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001d98:	280f      	cmp	r0, #15
{
 8001d9a:	b510      	push	{r4, lr}
 8001d9c:	4604      	mov	r4, r0
 8001d9e:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001da0:	d902      	bls.n	8001da8 <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
 8001da2:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001da4:	b00a      	add	sp, #40	; 0x28
 8001da6:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
 8001da8:	4601      	mov	r1, r0
 8001daa:	2200      	movs	r2, #0
 8001dac:	2036      	movs	r0, #54	; 0x36
 8001dae:	f003 f99f 	bl	80050f0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001db2:	2036      	movs	r0, #54	; 0x36
 8001db4:	f003 f9ce 	bl	8005154 <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
 8001db8:	4b18      	ldr	r3, [pc, #96]	; (8001e1c <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001dba:	4669      	mov	r1, sp
 8001dbc:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
 8001dbe:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001dc0:	4b17      	ldr	r3, [pc, #92]	; (8001e20 <HAL_InitTick+0x88>)
 8001dc2:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
 8001dc6:	f042 0210 	orr.w	r2, r2, #16
 8001dca:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
 8001dce:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8001dd2:	f003 0310 	and.w	r3, r3, #16
 8001dd6:	9301      	str	r3, [sp, #4]
 8001dd8:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001dda:	f005 facd 	bl	8007378 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001dde:	9b07      	ldr	r3, [sp, #28]
 8001de0:	b9c3      	cbnz	r3, 8001e14 <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001de2:	f005 fab7 	bl	8007354 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001de6:	4c0f      	ldr	r4, [pc, #60]	; (8001e24 <HAL_InitTick+0x8c>)
 8001de8:	4b0f      	ldr	r3, [pc, #60]	; (8001e28 <HAL_InitTick+0x90>)
 8001dea:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001dec:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001df0:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001df2:	4b0e      	ldr	r3, [pc, #56]	; (8001e2c <HAL_InitTick+0x94>)
 8001df4:	fbb0 f0f3 	udiv	r0, r0, r3
 8001df8:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
 8001dfa:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001dfc:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001dfe:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001e00:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e02:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e04:	f006 faac 	bl	8008360 <HAL_TIM_Base_Init>
 8001e08:	2800      	cmp	r0, #0
 8001e0a:	d1ca      	bne.n	8001da2 <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
 8001e0c:	4620      	mov	r0, r4
 8001e0e:	f006 f94f 	bl	80080b0 <HAL_TIM_Base_Start_IT>
 8001e12:	e7c7      	b.n	8001da4 <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001e14:	f005 fa9e 	bl	8007354 <HAL_RCC_GetPCLK1Freq>
 8001e18:	0040      	lsls	r0, r0, #1
 8001e1a:	e7e4      	b.n	8001de6 <HAL_InitTick+0x4e>
 8001e1c:	24000078 	.word	0x24000078
 8001e20:	58024400 	.word	0x58024400
 8001e24:	24004934 	.word	0x24004934
 8001e28:	40001000 	.word	0x40001000
 8001e2c:	000f4240 	.word	0x000f4240

08001e30 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001e30:	4770      	bx	lr

08001e32 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e32:	e7fe      	b.n	8001e32 <HardFault_Handler>

08001e34 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e34:	e7fe      	b.n	8001e34 <MemManage_Handler>

08001e36 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e36:	e7fe      	b.n	8001e36 <BusFault_Handler>

08001e38 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e38:	e7fe      	b.n	8001e38 <UsageFault_Handler>

08001e3a <DebugMon_Handler>:
 8001e3a:	4770      	bx	lr

08001e3c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001e3c:	4801      	ldr	r0, [pc, #4]	; (8001e44 <TIM6_DAC_IRQHandler+0x8>)
 8001e3e:	f006 b979 	b.w	8008134 <HAL_TIM_IRQHandler>
 8001e42:	bf00      	nop
 8001e44:	24004934 	.word	0x24004934

08001e48 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001e48:	4801      	ldr	r0, [pc, #4]	; (8001e50 <LTDC_IRQHandler+0x8>)
 8001e4a:	f004 b945 	b.w	80060d8 <HAL_LTDC_IRQHandler>
 8001e4e:	bf00      	nop
 8001e50:	24004850 	.word	0x24004850

08001e54 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001e54:	4801      	ldr	r0, [pc, #4]	; (8001e5c <DMA2D_IRQHandler+0x8>)
 8001e56:	f003 ba86 	b.w	8005366 <HAL_DMA2D_IRQHandler>
 8001e5a:	bf00      	nop
 8001e5c:	240047e8 	.word	0x240047e8

08001e60 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001e60:	2001      	movs	r0, #1
 8001e62:	4770      	bx	lr

08001e64 <_kill>:

int _kill(int pid, int sig)
{
 8001e64:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e66:	f01f fa6f 	bl	8021348 <__errno>
 8001e6a:	2316      	movs	r3, #22
 8001e6c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001e6e:	f04f 30ff 	mov.w	r0, #4294967295
 8001e72:	bd08      	pop	{r3, pc}

08001e74 <_exit>:

void _exit (int status)
{
 8001e74:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e76:	f01f fa67 	bl	8021348 <__errno>
 8001e7a:	2316      	movs	r3, #22
 8001e7c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001e7e:	e7fe      	b.n	8001e7e <_exit+0xa>

08001e80 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001e80:	b570      	push	{r4, r5, r6, lr}
 8001e82:	460d      	mov	r5, r1
 8001e84:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e86:	460e      	mov	r6, r1
 8001e88:	1b73      	subs	r3, r6, r5
 8001e8a:	429c      	cmp	r4, r3
 8001e8c:	dc01      	bgt.n	8001e92 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001e8e:	4620      	mov	r0, r4
 8001e90:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001e92:	f3af 8000 	nop.w
 8001e96:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e9a:	e7f5      	b.n	8001e88 <_read+0x8>

08001e9c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001e9c:	b570      	push	{r4, r5, r6, lr}
 8001e9e:	460d      	mov	r5, r1
 8001ea0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ea2:	460e      	mov	r6, r1
 8001ea4:	1b73      	subs	r3, r6, r5
 8001ea6:	429c      	cmp	r4, r3
 8001ea8:	dc01      	bgt.n	8001eae <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001eaa:	4620      	mov	r0, r4
 8001eac:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001eae:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001eb2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001eb6:	e7f5      	b.n	8001ea4 <_write+0x8>

08001eb8 <_close>:

int _close(int file)
{
	return -1;
}
 8001eb8:	f04f 30ff 	mov.w	r0, #4294967295
 8001ebc:	4770      	bx	lr

08001ebe <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001ebe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 8001ec2:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8001ec4:	604b      	str	r3, [r1, #4]
}
 8001ec6:	4770      	bx	lr

08001ec8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001ec8:	2001      	movs	r0, #1
 8001eca:	4770      	bx	lr

08001ecc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001ecc:	2000      	movs	r0, #0
 8001ece:	4770      	bx	lr

08001ed0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001ed0:	4a0a      	ldr	r2, [pc, #40]	; (8001efc <_sbrk+0x2c>)
 8001ed2:	6811      	ldr	r1, [r2, #0]
{
 8001ed4:	b508      	push	{r3, lr}
 8001ed6:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001ed8:	b909      	cbnz	r1, 8001ede <_sbrk+0xe>
		heap_end = &end;
 8001eda:	4909      	ldr	r1, [pc, #36]	; (8001f00 <_sbrk+0x30>)
 8001edc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001ede:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001ee0:	4669      	mov	r1, sp
 8001ee2:	4403      	add	r3, r0
 8001ee4:	428b      	cmp	r3, r1
 8001ee6:	d906      	bls.n	8001ef6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001ee8:	f01f fa2e 	bl	8021348 <__errno>
 8001eec:	230c      	movs	r3, #12
 8001eee:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001ef0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001ef4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001ef6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001ef8:	e7fc      	b.n	8001ef4 <_sbrk+0x24>
 8001efa:	bf00      	nop
 8001efc:	24004980 	.word	0x24004980
 8001f00:	2400f060 	.word	0x2400f060

08001f04 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f04:	4770      	bx	lr

08001f06 <_ZN23ApplicationFontProviderD0Ev>:
 8001f06:	b510      	push	{r4, lr}
 8001f08:	4604      	mov	r4, r0
 8001f0a:	2104      	movs	r1, #4
 8001f0c:	f01e ff45 	bl	8020d9a <_ZdlPvj>
 8001f10:	4620      	mov	r0, r4
 8001f12:	bd10      	pop	{r4, pc}

08001f14 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001f14:	2901      	cmp	r1, #1
{
 8001f16:	b508      	push	{r3, lr}
    switch (typography)
 8001f18:	d006      	beq.n	8001f28 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001f1a:	2902      	cmp	r1, #2
 8001f1c:	d008      	beq.n	8001f30 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001f1e:	b959      	cbnz	r1, 8001f38 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001f20:	f001 fb5a 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8001f24:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001f26:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001f28:	f001 fb56 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8001f2c:	6840      	ldr	r0, [r0, #4]
 8001f2e:	e7fa      	b.n	8001f26 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001f30:	f001 fb52 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8001f34:	6880      	ldr	r0, [r0, #8]
 8001f36:	e7f6      	b.n	8001f26 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001f38:	2000      	movs	r0, #0
 8001f3a:	e7f4      	b.n	8001f26 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001f3c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001f3c:	4800      	ldr	r0, [pc, #0]	; (8001f40 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001f3e:	4770      	bx	lr
 8001f40:	080226a8 	.word	0x080226a8

08001f44 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001f44:	2002      	movs	r0, #2
 8001f46:	4770      	bx	lr

08001f48 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001f48:	b513      	push	{r0, r1, r4, lr}
 8001f4a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001f4c:	b151      	cbz	r1, 8001f64 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f4e:	6803      	ldr	r3, [r0, #0]
 8001f50:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8001f52:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001f54:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f58:	689c      	ldr	r4, [r3, #8]
 8001f5a:	f10d 0303 	add.w	r3, sp, #3
 8001f5e:	47a0      	blx	r4
        return glyph;
    }
 8001f60:	b002      	add	sp, #8
 8001f62:	bd10      	pop	{r4, pc}
            return 0;
 8001f64:	4608      	mov	r0, r1
 8001f66:	e7fb      	b.n	8001f60 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001f68 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001f68:	89c0      	ldrh	r0, [r0, #14]
 8001f6a:	4770      	bx	lr

08001f6c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001f6c:	8a00      	ldrh	r0, [r0, #16]
 8001f6e:	4770      	bx	lr

08001f70 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8001f70:	88c0      	ldrh	r0, [r0, #6]
 8001f72:	4770      	bx	lr

08001f74 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8001f74:	8880      	ldrh	r0, [r0, #4]
 8001f76:	4770      	bx	lr

08001f78 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001f78:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f7a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001f7e:	4770      	bx	lr

08001f80 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001f80:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f82:	09c0      	lsrs	r0, r0, #7
 8001f84:	4770      	bx	lr

08001f86 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8001f86:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8001f88:	4770      	bx	lr

08001f8a <_ZN10CercleBaseD1Ev>:
}

CercleBase::~CercleBase()
{

}
 8001f8a:	4770      	bx	lr

08001f8c <_ZN10CercleBase10initializeEv>:

void CercleBase::initialize()
{

}
 8001f8c:	4770      	bx	lr

08001f8e <_ZN10CercleBaseD0Ev>:
CercleBase::~CercleBase()
 8001f8e:	b510      	push	{r4, lr}
 8001f90:	4604      	mov	r4, r0
}
 8001f92:	2188      	movs	r1, #136	; 0x88
 8001f94:	f01e ff01 	bl	8020d9a <_ZdlPvj>
 8001f98:	4620      	mov	r0, r4
 8001f9a:	bd10      	pop	{r4, pc}

08001f9c <_ZN10CercleBaseC1Ev>:
CercleBase::CercleBase()
 8001f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
          touchable(false),
 8001f9e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001fa2:	4604      	mov	r4, r0
 8001fa4:	2500      	movs	r5, #0
 8001fa6:	4606      	mov	r6, r0
 8001fa8:	8483      	strh	r3, [r0, #36]	; 0x24
 8001faa:	f104 0774 	add.w	r7, r4, #116	; 0x74
 8001fae:	4b25      	ldr	r3, [pc, #148]	; (8002044 <_ZN10CercleBaseC1Ev+0xa8>)
          firstChild(0)
 8001fb0:	6285      	str	r5, [r0, #40]	; 0x28
 8001fb2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8001fb6:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8001fba:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8001fbe:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8001fc2:	f846 3b2c 	str.w	r3, [r6], #44
 8001fc6:	4630      	mov	r0, r6
 8001fc8:	f009 fe26 	bl	800bc18 <_ZN8touchgfx6CircleC1Ev>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001fcc:	4638      	mov	r0, r7
 8001fce:	f7ff f8fb 	bl	80011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001fd2:	4b1d      	ldr	r3, [pc, #116]	; (8002048 <_ZN10CercleBaseC1Ev+0xac>)
        setX(x);
 8001fd4:	4629      	mov	r1, r5
 8001fd6:	4630      	mov	r0, r6
 8001fd8:	6763      	str	r3, [r4, #116]	; 0x74
 8001fda:	3324      	adds	r3, #36	; 0x24
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8001fdc:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
 8001fe0:	67e3      	str	r3, [r4, #124]	; 0x7c
        rect.width = width;
 8001fe2:	4b1a      	ldr	r3, [pc, #104]	; (800204c <_ZN10CercleBaseC1Ev+0xb0>)
 8001fe4:	60a3      	str	r3, [r4, #8]
        setX(x);
 8001fe6:	f7ff f803 	bl	8000ff0 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 8001fea:	4629      	mov	r1, r5
 8001fec:	4630      	mov	r0, r6
 8001fee:	f7ff f801 	bl	8000ff4 <_ZN8touchgfx8Drawable4setYEs>
        setWidth(width);
 8001ff2:	4630      	mov	r0, r6
 8001ff4:	219c      	movs	r1, #156	; 0x9c
 8001ff6:	f7fe ffff 	bl	8000ff8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8001ffa:	4630      	mov	r0, r6
 8001ffc:	216a      	movs	r1, #106	; 0x6a
 8001ffe:	f7fe fffd 	bl	8000ffc <_ZN8touchgfx8Drawable9setHeightEs>
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
        this->circleCenterY = CWRUtil::toQ5(y);
 8002002:	f44f 621c 	mov.w	r2, #2496	; 0x9c0
 8002006:	f44f 63d4 	mov.w	r3, #1696	; 0x6a0
    circle1.setCapPrecision(180);
 800200a:	4630      	mov	r0, r6
 800200c:	21b4      	movs	r1, #180	; 0xb4
     * @note    Angles are given in degrees, so a full circle is 360.
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800200e:	6665      	str	r5, [r4, #100]	; 0x64
        this->circleCenterY = CWRUtil::toQ5(y);
 8002010:	e9c4 2316 	strd	r2, r3, [r4, #88]	; 0x58
        this->circleRadius = CWRUtil::toQ5(r);
 8002014:	f44f 63c8 	mov.w	r3, #1600	; 0x640
 8002018:	6623      	str	r3, [r4, #96]	; 0x60
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 800201a:	23a0      	movs	r3, #160	; 0xa0
 800201c:	66e3      	str	r3, [r4, #108]	; 0x6c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800201e:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8002022:	66a3      	str	r3, [r4, #104]	; 0x68
 8002024:	f009 fe10 	bl	800bc48 <_ZN8touchgfx6Circle15setCapPrecisionEi>
 8002028:	f04f 33ff 	mov.w	r3, #4294967295
    add(circle1);
 800202c:	4620      	mov	r0, r4
 800202e:	4631      	mov	r1, r6
 8002030:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002034:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
        canvasPainter = &painter;
 8002038:	6567      	str	r7, [r4, #84]	; 0x54
 800203a:	f008 fbab 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800203e:	4620      	mov	r0, r4
 8002040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002042:	bf00      	nop
 8002044:	080226d8 	.word	0x080226d8
 8002048:	08023368 	.word	0x08023368
 800204c:	006a009c 	.word	0x006a009c

08002050 <_ZN9CroixBaseD1Ev>:
}

CroixBase::~CroixBase()
{

}
 8002050:	4770      	bx	lr

08002052 <_ZN9CroixBase10initializeEv>:

void CroixBase::initialize()
{

}
 8002052:	4770      	bx	lr

08002054 <_ZN9CroixBaseD0Ev>:
CroixBase::~CroixBase()
 8002054:	b510      	push	{r4, lr}
 8002056:	4604      	mov	r4, r0
}
 8002058:	f44f 719a 	mov.w	r1, #308	; 0x134
 800205c:	f01e fe9d 	bl	8020d9a <_ZdlPvj>
 8002060:	4620      	mov	r0, r4
 8002062:	bd10      	pop	{r4, pc}

08002064 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002068:	461d      	mov	r5, r3
        setX(x);
 800206a:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800206c:	4604      	mov	r4, r0
 800206e:	4616      	mov	r6, r2
        setX(x);
 8002070:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002072:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002076:	4798      	blx	r3
        setY(y);
 8002078:	6823      	ldr	r3, [r4, #0]
 800207a:	4631      	mov	r1, r6
 800207c:	4620      	mov	r0, r4
 800207e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002080:	4798      	blx	r3
        setWidth(width);
 8002082:	6823      	ldr	r3, [r4, #0]
 8002084:	4629      	mov	r1, r5
 8002086:	4620      	mov	r0, r4
 8002088:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800208a:	4798      	blx	r3
        setHeight(height);
 800208c:	6823      	ldr	r3, [r4, #0]
 800208e:	4639      	mov	r1, r7
 8002090:	4620      	mov	r0, r4
 8002092:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002094:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8002098:	4718      	bx	r3
	...

0800209c <_ZN9CroixBaseC1Ev>:
          touchable(false),
 800209c:	f44f 7380 	mov.w	r3, #256	; 0x100
CroixBase::CroixBase()
 80020a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020a4:	4604      	mov	r4, r0
 80020a6:	2500      	movs	r5, #0
 80020a8:	4606      	mov	r6, r0
 80020aa:	8483      	strh	r3, [r0, #36]	; 0x24
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80020ac:	f8df 8128 	ldr.w	r8, [pc, #296]	; 80021d8 <_ZN9CroixBaseC1Ev+0x13c>
 80020b0:	f104 0a9c 	add.w	sl, r4, #156	; 0x9c
 80020b4:	4b46      	ldr	r3, [pc, #280]	; (80021d0 <_ZN9CroixBaseC1Ev+0x134>)
 80020b6:	f104 07b0 	add.w	r7, r4, #176	; 0xb0
 80020ba:	6285      	str	r5, [r0, #40]	; 0x28
 80020bc:	f108 0b24 	add.w	fp, r8, #36	; 0x24
 80020c0:	f504 7990 	add.w	r9, r4, #288	; 0x120
 80020c4:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80020c8:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 80020cc:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 80020d0:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80020d4:	f846 3b2c 	str.w	r3, [r6], #44
 80020d8:	4630      	mov	r0, r6
 80020da:	f00a fc4f 	bl	800c97c <_ZN8touchgfx4LineC1Ev>
 80020de:	4650      	mov	r0, sl
 80020e0:	f7ff f872 	bl	80011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80020e4:	4638      	mov	r0, r7
 80020e6:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
 80020ea:	f8c4 809c 	str.w	r8, [r4, #156]	; 0x9c
 80020ee:	f8c4 b0a4 	str.w	fp, [r4, #164]	; 0xa4
 80020f2:	f00a fc43 	bl	800c97c <_ZN8touchgfx4LineC1Ev>
 80020f6:	4648      	mov	r0, r9
 80020f8:	f7ff f866 	bl	80011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        rect.width = width;
 80020fc:	4b35      	ldr	r3, [pc, #212]	; (80021d4 <_ZN9CroixBaseC1Ev+0x138>)
    line1_2.setPosition(0, 0, 156, 106);
 80020fe:	462a      	mov	r2, r5
 8002100:	4629      	mov	r1, r5
 8002102:	60a3      	str	r3, [r4, #8]
 8002104:	236a      	movs	r3, #106	; 0x6a
 8002106:	4630      	mov	r0, r6
 8002108:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800210c:	9300      	str	r3, [sp, #0]
 800210e:	239c      	movs	r3, #156	; 0x9c
 8002110:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
 8002114:	f8c4 b128 	str.w	fp, [r4, #296]	; 0x128
 8002118:	f7ff ffa4 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 800211c:	f04f 33ff 	mov.w	r3, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002120:	462a      	mov	r2, r5
 8002122:	4629      	mov	r1, r5
 8002124:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8002128:	4630      	mov	r0, r6
        color565 = LCD16bpp::getNativeColor(painterColor);
 800212a:	f8a4 30ac 	strh.w	r3, [r4, #172]	; 0xac
 800212e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
 8002132:	f00a fd39 	bl	800cba8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002136:	f44f 6254 	mov.w	r2, #3392	; 0xd40
 800213a:	f44f 519c 	mov.w	r1, #4992	; 0x1380
 800213e:	4630      	mov	r0, r6
 8002140:	f00a fd3d 	bl	800cbbe <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002144:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8002146:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 800214a:	d005      	beq.n	8002158 <_ZN9CroixBaseC1Ev+0xbc>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800214c:	f44f 73a0 	mov.w	r3, #320	; 0x140

        updateCachedShape();
 8002150:	4630      	mov	r0, r6
        lineWidthQ5 = widthQ5;
 8002152:	66a3      	str	r3, [r4, #104]	; 0x68
        updateCachedShape();
 8002154:	f00a fc32 	bl	800c9bc <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002158:	2101      	movs	r1, #1
 800215a:	4630      	mov	r0, r6
 800215c:	f00a fd3a 	bl	800cbd4 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1_2);
 8002160:	4631      	mov	r1, r6
 8002162:	4620      	mov	r0, r4
 8002164:	f008 fb16 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 0, 156, 106);
 8002168:	2200      	movs	r2, #0
 800216a:	236a      	movs	r3, #106	; 0x6a
 800216c:	4638      	mov	r0, r7
 800216e:	4611      	mov	r1, r2
 8002170:	9300      	str	r3, [sp, #0]
 8002172:	239c      	movs	r3, #156	; 0x9c
 8002174:	f7ff ff76 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002178:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800217c:	2200      	movs	r2, #0
 800217e:	f44f 519c 	mov.w	r1, #4992	; 0x1380
 8002182:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
 8002186:	4638      	mov	r0, r7
 8002188:	f8a4 3130 	strh.w	r3, [r4, #304]	; 0x130
 800218c:	f8c4 90d8 	str.w	r9, [r4, #216]	; 0xd8
 8002190:	f00a fd0a 	bl	800cba8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002194:	f44f 6254 	mov.w	r2, #3392	; 0xd40
 8002198:	2100      	movs	r1, #0
 800219a:	4638      	mov	r0, r7
 800219c:	f00a fd0f 	bl	800cbbe <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80021a0:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 80021a4:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 80021a8:	d006      	beq.n	80021b8 <_ZN9CroixBaseC1Ev+0x11c>
        lineWidthQ5 = widthQ5;
 80021aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
 80021ae:	4638      	mov	r0, r7
        lineWidthQ5 = widthQ5;
 80021b0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
        updateCachedShape();
 80021b4:	f00a fc02 	bl	800c9bc <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80021b8:	4638      	mov	r0, r7
 80021ba:	2101      	movs	r1, #1
 80021bc:	f00a fd0a 	bl	800cbd4 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1);
 80021c0:	4620      	mov	r0, r4
 80021c2:	4639      	mov	r1, r7
 80021c4:	f008 fae6 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80021c8:	4620      	mov	r0, r4
 80021ca:	b003      	add	sp, #12
 80021cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80021d0:	0802276c 	.word	0x0802276c
 80021d4:	006a009c 	.word	0x006a009c
 80021d8:	08023368 	.word	0x08023368

080021dc <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80021dc:	4770      	bx	lr

080021de <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80021de:	b510      	push	{r4, lr}
 80021e0:	4604      	mov	r4, r0
    }
 80021e2:	2108      	movs	r1, #8
 80021e4:	f01e fdd9 	bl	8020d9a <_ZdlPvj>
 80021e8:	4620      	mov	r0, r4
 80021ea:	bd10      	pop	{r4, pc}

080021ec <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80021ec:	4770      	bx	lr

080021ee <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80021ee:	4770      	bx	lr

080021f0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80021f0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80021f4:	6808      	ldr	r0, [r1, #0]
 80021f6:	6849      	ldr	r1, [r1, #4]
 80021f8:	c303      	stmia	r3!, {r0, r1}
    }
 80021fa:	4770      	bx	lr

080021fc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80021fc:	4770      	bx	lr

080021fe <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80021fe:	4770      	bx	lr

08002200 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002200:	6041      	str	r1, [r0, #4]
    }
 8002202:	4770      	bx	lr

08002204 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002204:	4770      	bx	lr
	...

08002208 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002208:	4b06      	ldr	r3, [pc, #24]	; (8002224 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800220a:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800220e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002212:	2300      	movs	r3, #0
 8002214:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Morpion_2

void FrontendApplicationBase::gotoMorpion_2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMorpion_2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002218:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800221c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMorpion_2ScreenNoTransition();
    }
 8002220:	4770      	bx	lr
 8002222:	bf00      	nop
 8002224:	080022cd 	.word	0x080022cd

08002228 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002228:	2301      	movs	r3, #1
 800222a:	7203      	strb	r3, [r0, #8]
    }
 800222c:	4770      	bx	lr

0800222e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800222e:	4770      	bx	lr

08002230 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002230:	4770      	bx	lr

08002232 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002232:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002234:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 8002236:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002238:	68c2      	ldr	r2, [r0, #12]
 800223a:	689b      	ldr	r3, [r3, #8]
 800223c:	1054      	asrs	r4, r2, #1
 800223e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002242:	07d2      	lsls	r2, r2, #31
 8002244:	bf48      	it	mi
 8002246:	590a      	ldrmi	r2, [r1, r4]
    }
 8002248:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800224c:	bf48      	it	mi
 800224e:	58d3      	ldrmi	r3, [r2, r3]
 8002250:	4718      	bx	r3

08002252 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002252:	6843      	ldr	r3, [r0, #4]
 8002254:	b12b      	cbz	r3, 8002262 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002256:	6883      	ldr	r3, [r0, #8]
 8002258:	b92b      	cbnz	r3, 8002266 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800225a:	68c0      	ldr	r0, [r0, #12]
 800225c:	f000 0001 	and.w	r0, r0, #1
 8002260:	4770      	bx	lr
 8002262:	4618      	mov	r0, r3
 8002264:	4770      	bx	lr
 8002266:	2001      	movs	r0, #1
    }
 8002268:	4770      	bx	lr

0800226a <_ZN8touchgfx12NoTransitionD0Ev>:
 800226a:	b510      	push	{r4, lr}
 800226c:	4604      	mov	r4, r0
 800226e:	210c      	movs	r1, #12
 8002270:	f01e fd93 	bl	8020d9a <_ZdlPvj>
 8002274:	4620      	mov	r0, r4
 8002276:	bd10      	pop	{r4, pc}

08002278 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002278:	b510      	push	{r4, lr}
 800227a:	4604      	mov	r4, r0
 800227c:	2110      	movs	r1, #16
 800227e:	f01e fd8c 	bl	8020d9a <_ZdlPvj>
 8002282:	4620      	mov	r0, r4
 8002284:	bd10      	pop	{r4, pc}

08002286 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002286:	b510      	push	{r4, lr}
 8002288:	4604      	mov	r4, r0
 800228a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800228e:	f01e fd84 	bl	8020d9a <_ZdlPvj>
 8002292:	4620      	mov	r0, r4
 8002294:	bd10      	pop	{r4, pc}

08002296 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002296:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002298:	f00e f834 	bl	8010304 <_ZN8touchgfx11Application11getInstanceEv>
 800229c:	6803      	ldr	r3, [r0, #0]
    }
 800229e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80022a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80022a4:	4718      	bx	r3

080022a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80022a6:	b510      	push	{r4, lr}
 80022a8:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80022aa:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80022ae:	b158      	cbz	r0, 80022c8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80022b0:	6803      	ldr	r3, [r0, #0]
 80022b2:	68db      	ldr	r3, [r3, #12]
 80022b4:	4798      	blx	r3
 80022b6:	b138      	cbz	r0, 80022c8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80022b8:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80022bc:	6803      	ldr	r3, [r0, #0]
 80022be:	689b      	ldr	r3, [r3, #8]
 80022c0:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80022c2:	2300      	movs	r3, #0
 80022c4:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80022c8:	bd10      	pop	{r4, pc}
	...

080022cc <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMorpion_2ScreenNoTransitionImpl()
{
 80022cc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Morpion_2View, Morpion_2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022d0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80022d4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022d6:	68a8      	ldr	r0, [r5, #8]
 80022d8:	6803      	ldr	r3, [r0, #0]
 80022da:	6a1b      	ldr	r3, [r3, #32]
 80022dc:	4798      	blx	r3
 80022de:	f243 53b7 	movw	r3, #13751	; 0x35b7
 80022e2:	4298      	cmp	r0, r3
 80022e4:	d805      	bhi.n	80022f2 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x26>
 80022e6:	4b46      	ldr	r3, [pc, #280]	; (8002400 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x134>)
 80022e8:	21a3      	movs	r1, #163	; 0xa3
 80022ea:	4a46      	ldr	r2, [pc, #280]	; (8002404 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x138>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022ec:	4846      	ldr	r0, [pc, #280]	; (8002408 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x13c>)
 80022ee:	f01e fd83 	bl	8020df8 <__assert_func>
 80022f2:	6868      	ldr	r0, [r5, #4]
 80022f4:	6803      	ldr	r3, [r0, #0]
 80022f6:	6a1b      	ldr	r3, [r3, #32]
 80022f8:	4798      	blx	r3
 80022fa:	280f      	cmp	r0, #15
 80022fc:	d803      	bhi.n	8002306 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x3a>
 80022fe:	4b43      	ldr	r3, [pc, #268]	; (800240c <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x140>)
 8002300:	21a4      	movs	r1, #164	; 0xa4
 8002302:	4a40      	ldr	r2, [pc, #256]	; (8002404 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x138>)
 8002304:	e7f2      	b.n	80022ec <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002306:	68e8      	ldr	r0, [r5, #12]
 8002308:	6803      	ldr	r3, [r0, #0]
 800230a:	6a1b      	ldr	r3, [r3, #32]
 800230c:	4798      	blx	r3
 800230e:	280b      	cmp	r0, #11
 8002310:	d803      	bhi.n	800231a <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x4e>
 8002312:	4b3f      	ldr	r3, [pc, #252]	; (8002410 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x144>)
 8002314:	21a5      	movs	r1, #165	; 0xa5
 8002316:	4a3b      	ldr	r2, [pc, #236]	; (8002404 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x138>)
 8002318:	e7e8      	b.n	80022ec <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 800231a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8002418 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x14c>
    Application::getInstance()->clearAllTimerWidgets();
 800231e:	f00d fff1 	bl	8010304 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002322:	3004      	adds	r0, #4
 8002324:	f00e f813 	bl	801034e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002328:	f8d9 0000 	ldr.w	r0, [r9]
 800232c:	b110      	cbz	r0, 8002334 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800232e:	6803      	ldr	r3, [r0, #0]
 8002330:	68db      	ldr	r3, [r3, #12]
 8002332:	4798      	blx	r3
    if (*currentTrans)
 8002334:	f8d9 0000 	ldr.w	r0, [r9]
 8002338:	b110      	cbz	r0, 8002340 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800233a:	6803      	ldr	r3, [r0, #0]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	4798      	blx	r3
    if (*currentScreen)
 8002340:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800241c <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x150>
 8002344:	f8d8 0000 	ldr.w	r0, [r8]
 8002348:	b110      	cbz	r0, 8002350 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800234a:	6803      	ldr	r3, [r0, #0]
 800234c:	695b      	ldr	r3, [r3, #20]
 800234e:	4798      	blx	r3
    if (*currentPresenter)
 8002350:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002354:	b110      	cbz	r0, 800235c <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002356:	6803      	ldr	r3, [r0, #0]
 8002358:	685b      	ldr	r3, [r3, #4]
 800235a:	4798      	blx	r3
    if (*currentScreen)
 800235c:	f8d8 0000 	ldr.w	r0, [r8]
 8002360:	b110      	cbz	r0, 8002368 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002362:	6803      	ldr	r3, [r0, #0]
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	4798      	blx	r3
    if (*currentPresenter)
 8002368:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800236c:	b110      	cbz	r0, 8002374 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800236e:	6803      	ldr	r3, [r0, #0]
 8002370:	689b      	ldr	r3, [r3, #8]
 8002372:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002374:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002376:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 8002378:	f04f 0b00 	mov.w	fp, #0
 800237c:	6803      	ldr	r3, [r0, #0]
 800237e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002380:	4798      	blx	r3
 8002382:	4b24      	ldr	r3, [pc, #144]	; (8002414 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x148>)
 8002384:	4604      	mov	r4, r0
 8002386:	f8c0 b004 	str.w	fp, [r0, #4]
 800238a:	6003      	str	r3, [r0, #0]
 800238c:	4659      	mov	r1, fp
 800238e:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002392:	68a8      	ldr	r0, [r5, #8]
 8002394:	6803      	ldr	r3, [r0, #0]
 8002396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002398:	4798      	blx	r3
 800239a:	4606      	mov	r6, r0
 800239c:	f001 fa8c 	bl	80038b8 <_ZN13Morpion_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80023a0:	6868      	ldr	r0, [r5, #4]
 80023a2:	4659      	mov	r1, fp
 80023a4:	6803      	ldr	r3, [r0, #0]
 80023a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023a8:	4798      	blx	r3
 80023aa:	4605      	mov	r5, r0
 80023ac:	4631      	mov	r1, r6
 80023ae:	f001 f9a1 	bl	80036f4 <_ZN18Morpion_2PresenterC1ER13Morpion_2View>
    *currentTrans = newTransition;
 80023b2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80023b6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80023ba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80023be:	b1e5      	cbz	r5, 80023fa <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x12e>
 80023c0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80023c2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80023c6:	4630      	mov	r0, r6
 80023c8:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80023ca:	f8c5 a008 	str.w	sl, [r5, #8]
 80023ce:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80023d0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80023d2:	4798      	blx	r3
    newPresenter->activate();
 80023d4:	682b      	ldr	r3, [r5, #0]
 80023d6:	4628      	mov	r0, r5
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023dc:	4621      	mov	r1, r4
 80023de:	4630      	mov	r0, r6
 80023e0:	f00f fd4c 	bl	8011e7c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023e4:	6823      	ldr	r3, [r4, #0]
 80023e6:	4620      	mov	r0, r4
 80023e8:	691b      	ldr	r3, [r3, #16]
 80023ea:	4798      	blx	r3
    newTransition->invalidate();
 80023ec:	6823      	ldr	r3, [r4, #0]
 80023ee:	4620      	mov	r0, r4
 80023f0:	695b      	ldr	r3, [r3, #20]
}
 80023f2:	b001      	add	sp, #4
 80023f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023f8:	4718      	bx	r3
    model->bind(newPresenter);
 80023fa:	462b      	mov	r3, r5
 80023fc:	e7e1      	b.n	80023c2 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0xf6>
 80023fe:	bf00      	nop
 8002400:	08022808 	.word	0x08022808
 8002404:	08022896 	.word	0x08022896
 8002408:	0802299e 	.word	0x0802299e
 800240c:	080229e5 	.word	0x080229e5
 8002410:	08022a88 	.word	0x08022a88
 8002414:	08022ba0 	.word	0x08022ba0
 8002418:	2400e46c 	.word	0x2400e46c
 800241c:	2400e468 	.word	0x2400e468

08002420 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002420:	4b04      	ldr	r3, [pc, #16]	; (8002434 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002428:	b10a      	cbz	r2, 800242e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800242a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800242c:	b900      	cbnz	r0, 8002430 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800242e:	6898      	ldr	r0, [r3, #8]
    }
 8002430:	4770      	bx	lr
 8002432:	bf00      	nop
 8002434:	2400e424 	.word	0x2400e424

08002438 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800243a:	4604      	mov	r4, r0
 800243c:	4617      	mov	r7, r2
 800243e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002440:	f00e f826 	bl	8010490 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002444:	4b10      	ldr	r3, [pc, #64]	; (8002488 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 8002446:	2500      	movs	r5, #0
        instance = this;
 8002448:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800244a:	4629      	mov	r1, r5
      model(m)
 800244c:	4b0f      	ldr	r3, [pc, #60]	; (800248c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800244e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002450:	4b0f      	ldr	r3, [pc, #60]	; (8002490 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002452:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002456:	4b0f      	ldr	r3, [pc, #60]	; (8002494 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002458:	6818      	ldr	r0, [r3, #0]
 800245a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800245e:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 8002460:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 8002464:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002466:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800246a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800246c:	4628      	mov	r0, r5
 800246e:	f001 f867 	bl	8003540 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002472:	f7ff ffd5 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8002476:	f016 fe0e 	bl	8019096 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800247a:	f7ff ffd1 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800247e:	f016 fe85 	bl	801918c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002482:	4620      	mov	r0, r4
 8002484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002486:	bf00      	nop
 8002488:	2400e478 	.word	0x2400e478
 800248c:	08022b4c 	.word	0x08022b4c
 8002490:	08022b34 	.word	0x08022b34
 8002494:	2400e424 	.word	0x2400e424

08002498 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002498:	4b06      	ldr	r3, [pc, #24]	; (80024b4 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv+0x1c>)
 800249a:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800249e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80024a2:	2300      	movs	r3, #0
 80024a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80024a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80024ac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop
 80024b4:	080022cd 	.word	0x080022cd

080024b8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80024b8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80024ba:	4770      	bx	lr

080024bc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80024bc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80024be:	4770      	bx	lr

080024c0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80024c0:	4770      	bx	lr

080024c2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80024c2:	888b      	ldrh	r3, [r1, #4]
 80024c4:	69c0      	ldr	r0, [r0, #28]
 80024c6:	0adb      	lsrs	r3, r3, #11
 80024c8:	680a      	ldr	r2, [r1, #0]
 80024ca:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80024ce:	4410      	add	r0, r2
 80024d0:	4770      	bx	lr

080024d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80024d2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80024d4:	b1c2      	cbz	r2, 8002508 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80024d6:	7b13      	ldrb	r3, [r2, #12]
 80024d8:	b1b3      	cbz	r3, 8002508 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80024da:	7b54      	ldrb	r4, [r2, #13]
 80024dc:	7ad2      	ldrb	r2, [r2, #11]
 80024de:	0224      	lsls	r4, r4, #8
 80024e0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80024e4:	4314      	orrs	r4, r2
 80024e6:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80024e8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80024ea:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80024ee:	8813      	ldrh	r3, [r2, #0]
 80024f0:	428b      	cmp	r3, r1
 80024f2:	d102      	bne.n	80024fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80024f4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80024f8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80024fa:	d805      	bhi.n	8002508 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80024fc:	3801      	subs	r0, #1
 80024fe:	3204      	adds	r2, #4
 8002500:	b280      	uxth	r0, r0
 8002502:	2800      	cmp	r0, #0
 8002504:	d1f3      	bne.n	80024ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002506:	e7f7      	b.n	80024f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002508:	2000      	movs	r0, #0
 800250a:	e7f5      	b.n	80024f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800250c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800250c:	b510      	push	{r4, lr}
 800250e:	4604      	mov	r4, r0
 8002510:	212c      	movs	r1, #44	; 0x2c
 8002512:	f01e fc42 	bl	8020d9a <_ZdlPvj>
 8002516:	4620      	mov	r0, r4
 8002518:	bd10      	pop	{r4, pc}
	...

0800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800251c:	b530      	push	{r4, r5, lr}
 800251e:	b08b      	sub	sp, #44	; 0x2c
 8002520:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002522:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8002526:	9508      	str	r5, [sp, #32]
 8002528:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800252c:	9507      	str	r5, [sp, #28]
 800252e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8002532:	9506      	str	r5, [sp, #24]
 8002534:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8002538:	9505      	str	r5, [sp, #20]
 800253a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800253e:	9504      	str	r5, [sp, #16]
 8002540:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8002544:	9503      	str	r5, [sp, #12]
 8002546:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800254a:	9502      	str	r5, [sp, #8]
 800254c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002550:	9501      	str	r5, [sp, #4]
 8002552:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8002556:	9500      	str	r5, [sp, #0]
 8002558:	f00e fffa 	bl	8011550 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800255c:	4b06      	ldr	r3, [pc, #24]	; (8002578 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 800255e:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002560:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002562:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002564:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002566:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002568:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 800256a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800256c:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800256e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8002570:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8002572:	b00b      	add	sp, #44	; 0x2c
 8002574:	bd30      	pop	{r4, r5, pc}
 8002576:	bf00      	nop
 8002578:	08022bc4 	.word	0x08022bc4

0800257c <_ZN10GrilleBaseD1Ev>:
}

GrilleBase::~GrilleBase()
{

}
 800257c:	4770      	bx	lr

0800257e <_ZN10GrilleBase10initializeEv>:

void GrilleBase::initialize()
{

}
 800257e:	4770      	bx	lr

08002580 <_ZN10GrilleBaseD0Ev>:
GrilleBase::~GrilleBase()
 8002580:	b510      	push	{r4, lr}
 8002582:	4604      	mov	r4, r0
}
 8002584:	21dc      	movs	r1, #220	; 0xdc
 8002586:	f01e fc08 	bl	8020d9a <_ZdlPvj>
 800258a:	4620      	mov	r0, r4
 800258c:	bd10      	pop	{r4, pc}
	...

08002590 <_ZN10GrilleBaseC1Ev>:
          touchable(false),
 8002590:	f44f 7380 	mov.w	r3, #256	; 0x100
GrilleBase::GrilleBase()
 8002594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002598:	4604      	mov	r4, r0
 800259a:	b085      	sub	sp, #20
 800259c:	2500      	movs	r5, #0
 800259e:	4606      	mov	r6, r0
 80025a0:	8483      	strh	r3, [r0, #36]	; 0x24
 80025a2:	f104 0958 	add.w	r9, r4, #88	; 0x58
 80025a6:	4b47      	ldr	r3, [pc, #284]	; (80026c4 <_ZN10GrilleBaseC1Ev+0x134>)
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80025a8:	f64f 7aff 	movw	sl, #65535	; 0xffff
 80025ac:	f104 0884 	add.w	r8, r4, #132	; 0x84
 80025b0:	6285      	str	r5, [r0, #40]	; 0x28
 80025b2:	a903      	add	r1, sp, #12
 80025b4:	f104 07b0 	add.w	r7, r4, #176	; 0xb0
 80025b8:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025bc:	f04f 0b01 	mov.w	fp, #1
 80025c0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80025c4:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 80025c8:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 80025cc:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80025d0:	f846 3b2c 	str.w	r3, [r6], #44
 80025d4:	4630      	mov	r0, r6
 80025d6:	f00a fbfd 	bl	800cdd4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80025da:	a903      	add	r1, sp, #12
 80025dc:	4648      	mov	r0, r9
 80025de:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025e2:	f00a fbf7 	bl	800cdd4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80025e6:	a903      	add	r1, sp, #12
 80025e8:	4640      	mov	r0, r8
 80025ea:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025ee:	f00a fbf1 	bl	800cdd4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80025f2:	a903      	add	r1, sp, #12
 80025f4:	4638      	mov	r0, r7
 80025f6:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025fa:	f00a fbeb 	bl	800cdd4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        rect.width = width;
 80025fe:	4b32      	ldr	r3, [pc, #200]	; (80026c8 <_ZN10GrilleBaseC1Ev+0x138>)
    Verticale_2.setPosition(0, 218, 480, 6);
 8002600:	f04f 0a06 	mov.w	sl, #6
    Verticale_2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 8002604:	a903      	add	r1, sp, #12
 8002606:	4630      	mov	r0, r6
 8002608:	60a3      	str	r3, [r4, #8]
 800260a:	f8ad b00c 	strh.w	fp, [sp, #12]
 800260e:	f00b fa7d 	bl	800db0c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Verticale_2.setPosition(0, 218, 480, 6);
 8002612:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002616:	22da      	movs	r2, #218	; 0xda
 8002618:	4629      	mov	r1, r5
 800261a:	4630      	mov	r0, r6
 800261c:	f8cd a000 	str.w	sl, [sp]
 8002620:	f7ff fd20 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Verticale_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002624:	4629      	mov	r1, r5
 8002626:	4630      	mov	r0, r6
 8002628:	f00a fb8f 	bl	800cd4a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Verticale_2);
 800262c:	4631      	mov	r1, r6
 800262e:	4620      	mov	r0, r4
    Verticale_1.setPosition(156, 0, 6, 330);
 8002630:	f44f 76a5 	mov.w	r6, #330	; 0x14a
    add(Verticale_2);
 8002634:	f008 f8ae 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Verticale_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 8002638:	a903      	add	r1, sp, #12
 800263a:	4648      	mov	r0, r9
 800263c:	f8ad b00c 	strh.w	fp, [sp, #12]
 8002640:	f00b fa64 	bl	800db0c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Verticale_1.setPosition(156, 0, 6, 330);
 8002644:	4653      	mov	r3, sl
 8002646:	462a      	mov	r2, r5
 8002648:	4648      	mov	r0, r9
 800264a:	219c      	movs	r1, #156	; 0x9c
 800264c:	9600      	str	r6, [sp, #0]
 800264e:	f7ff fd09 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Verticale_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002652:	4629      	mov	r1, r5
 8002654:	4648      	mov	r0, r9
 8002656:	f00a fb78 	bl	800cd4a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Verticale_1);
 800265a:	4649      	mov	r1, r9
 800265c:	4620      	mov	r0, r4
 800265e:	f008 f899 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Horizontale_2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 8002662:	a903      	add	r1, sp, #12
 8002664:	4640      	mov	r0, r8
 8002666:	f8ad b00c 	strh.w	fp, [sp, #12]
 800266a:	f00b fa4f 	bl	800db0c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Horizontale_2.setPosition(318, 0, 6, 330);
 800266e:	4653      	mov	r3, sl
 8002670:	462a      	mov	r2, r5
 8002672:	4640      	mov	r0, r8
 8002674:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8002678:	9600      	str	r6, [sp, #0]
 800267a:	f7ff fcf3 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Horizontale_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800267e:	4629      	mov	r1, r5
 8002680:	4640      	mov	r0, r8
 8002682:	f00a fb62 	bl	800cd4a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Horizontale_2);
 8002686:	4641      	mov	r1, r8
 8002688:	4620      	mov	r0, r4
 800268a:	f008 f883 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Horizontale_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 800268e:	a903      	add	r1, sp, #12
 8002690:	4638      	mov	r0, r7
 8002692:	f8ad b00c 	strh.w	fp, [sp, #12]
 8002696:	f00b fa39 	bl	800db0c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Horizontale_1.setPosition(0, 106, 480, 6);
 800269a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800269e:	226a      	movs	r2, #106	; 0x6a
 80026a0:	4629      	mov	r1, r5
 80026a2:	4638      	mov	r0, r7
 80026a4:	f8cd a000 	str.w	sl, [sp]
 80026a8:	f7ff fcdc 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Horizontale_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80026ac:	4629      	mov	r1, r5
 80026ae:	4638      	mov	r0, r7
 80026b0:	f00a fb4b 	bl	800cd4a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Horizontale_1);
 80026b4:	4620      	mov	r0, r4
 80026b6:	4639      	mov	r1, r7
 80026b8:	f008 f86c 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80026bc:	4620      	mov	r0, r4
 80026be:	b005      	add	sp, #20
 80026c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026c4:	08022c24 	.word	0x08022c24
 80026c8:	014a01e0 	.word	0x014a01e0

080026cc <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80026cc:	4770      	bx	lr

080026ce <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80026ce:	4770      	bx	lr

080026d0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80026d0:	4770      	bx	lr

080026d2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80026d2:	4770      	bx	lr

080026d4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80026d4:	4770      	bx	lr

080026d6 <_ZN17Morpion_2ViewBase14restart_buttonEv>:
     * Virtual Action Handlers
     */
    virtual void restart_button()
    {
        // Override and implement this function in Morpion_2
    }
 80026d6:	4770      	bx	lr

080026d8 <_ZN17Morpion_2ViewBase10button_0_0Ev>:
    virtual void button_0_0()
    {
        // Override and implement this function in Morpion_2
    }
 80026d8:	4770      	bx	lr

080026da <_ZN17Morpion_2ViewBase10button_0_1Ev>:
    virtual void button_0_1()
    {
        // Override and implement this function in Morpion_2
    }
 80026da:	4770      	bx	lr

080026dc <_ZN17Morpion_2ViewBase10button_0_2Ev>:
    virtual void button_0_2()
    {
        // Override and implement this function in Morpion_2
    }
 80026dc:	4770      	bx	lr

080026de <_ZN17Morpion_2ViewBase10button_1_0Ev>:
    virtual void button_1_0()
    {
        // Override and implement this function in Morpion_2
    }
 80026de:	4770      	bx	lr

080026e0 <_ZN17Morpion_2ViewBase10button_1_1Ev>:
    virtual void button_1_1()
    {
        // Override and implement this function in Morpion_2
    }
 80026e0:	4770      	bx	lr

080026e2 <_ZN17Morpion_2ViewBase10button_1_2Ev>:
    virtual void button_1_2()
    {
        // Override and implement this function in Morpion_2
    }
 80026e2:	4770      	bx	lr

080026e4 <_ZN17Morpion_2ViewBase10button_2_0Ev>:
    virtual void button_2_0()
    {
        // Override and implement this function in Morpion_2
    }
 80026e4:	4770      	bx	lr

080026e6 <_ZN17Morpion_2ViewBase10button_2_1Ev>:
    virtual void button_2_1()
    {
        // Override and implement this function in Morpion_2
    }
 80026e6:	4770      	bx	lr

080026e8 <_ZN17Morpion_2ViewBase10button_2_2Ev>:
    virtual void button_2_2()
    {
        // Override and implement this function in Morpion_2
    }
 80026e8:	4770      	bx	lr

080026ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80026ea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80026ee:	b14b      	cbz	r3, 8002704 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80026f0:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80026f4:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80026f6:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80026f8:	b13b      	cbz	r3, 800270a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80026fa:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80026fe:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002700:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002702:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002704:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002708:	e7f4      	b.n	80026f4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800270a:	f100 0370 	add.w	r3, r0, #112	; 0x70
 800270e:	e7f6      	b.n	80026fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002710 <_ZN8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002710:	4770      	bx	lr

08002712 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 8002712:	4770      	bx	lr

08002714 <_ZN8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002714:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002716:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8002718:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800271a:	68c2      	ldr	r2, [r0, #12]
 800271c:	689b      	ldr	r3, [r3, #8]
 800271e:	1055      	asrs	r5, r2, #1
 8002720:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002724:	07d2      	lsls	r2, r2, #31
 8002726:	bf48      	it	mi
 8002728:	5962      	ldrmi	r2, [r4, r5]
    }
 800272a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800272c:	bf48      	it	mi
 800272e:	58d3      	ldrmi	r3, [r2, r3]
 8002730:	4718      	bx	r3

08002732 <_ZNK8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002732:	6843      	ldr	r3, [r0, #4]
 8002734:	b12b      	cbz	r3, 8002742 <_ZNK8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002736:	6883      	ldr	r3, [r0, #8]
 8002738:	b92b      	cbnz	r3, 8002746 <_ZNK8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800273a:	68c0      	ldr	r0, [r0, #12]
 800273c:	f000 0001 	and.w	r0, r0, #1
 8002740:	4770      	bx	lr
 8002742:	4618      	mov	r0, r3
 8002744:	4770      	bx	lr
 8002746:	2001      	movs	r0, #1
    }
 8002748:	4770      	bx	lr

0800274a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800274a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800274e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002752:	4770      	bx	lr

08002754 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002754:	b510      	push	{r4, lr}
 8002756:	4604      	mov	r4, r0
 8002758:	2178      	movs	r1, #120	; 0x78
 800275a:	f01e fb1e 	bl	8020d9a <_ZdlPvj>
 800275e:	4620      	mov	r0, r4
 8002760:	bd10      	pop	{r4, pc}

08002762 <_ZN8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002762:	b510      	push	{r4, lr}
 8002764:	4604      	mov	r4, r0
 8002766:	2110      	movs	r1, #16
 8002768:	f01e fb17 	bl	8020d9a <_ZdlPvj>
 800276c:	4620      	mov	r0, r4
 800276e:	bd10      	pop	{r4, pc}

08002770 <_ZN17Morpion_2ViewBase11setupScreenEv>:
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Morpion_2ViewBase::setupScreen()
{
 8002770:	b510      	push	{r4, lr}
 8002772:	4604      	mov	r4, r0
    Grille_main.initialize();
 8002774:	3098      	adds	r0, #152	; 0x98
 8002776:	f000 ffa9 	bl	80036cc <_ZN6Grille10initializeEv>
    Croix_1.initialize();
 800277a:	f604 0004 	addw	r0, r4, #2052	; 0x804
 800277e:	f000 ff67 	bl	8003650 <_ZN5Croix10initializeEv>
    Cercle_1.initialize();
 8002782:	f604 1038 	addw	r0, r4, #2360	; 0x938
 8002786:	f000 ff57 	bl	8003638 <_ZN6Cercle10initializeEv>
    Cercle_2.initialize();
 800278a:	f504 601c 	add.w	r0, r4, #2496	; 0x9c0
 800278e:	f000 ff53 	bl	8003638 <_ZN6Cercle10initializeEv>
    Croix_2.initialize();
 8002792:	f604 2048 	addw	r0, r4, #2632	; 0xa48
 8002796:	f000 ff5b 	bl	8003650 <_ZN5Croix10initializeEv>
    Cercle_3.initialize();
 800279a:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
 800279e:	f000 ff4b 	bl	8003638 <_ZN6Cercle10initializeEv>
    Croix_3.initialize();
 80027a2:	f604 4004 	addw	r0, r4, #3076	; 0xc04
 80027a6:	f000 ff53 	bl	8003650 <_ZN5Croix10initializeEv>
    Cercle_4.initialize();
 80027aa:	f604 5038 	addw	r0, r4, #3384	; 0xd38
 80027ae:	f000 ff43 	bl	8003638 <_ZN6Cercle10initializeEv>
    Croix_4.initialize();
 80027b2:	f504 605c 	add.w	r0, r4, #3520	; 0xdc0
 80027b6:	f000 ff4b 	bl	8003650 <_ZN5Croix10initializeEv>
    Croix_5.initialize();
 80027ba:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
}
 80027be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Croix_5.initialize();
 80027c2:	f000 bf45 	b.w	8003650 <_ZN5Croix10initializeEv>

080027c6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80027c6:	b510      	push	{r4, lr}
 80027c8:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80027ca:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80027cc:	b150      	cbz	r0, 80027e4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80027ce:	6803      	ldr	r3, [r0, #0]
 80027d0:	68db      	ldr	r3, [r3, #12]
 80027d2:	4798      	blx	r3
 80027d4:	b130      	cbz	r0, 80027e4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80027d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80027d8:	4621      	mov	r1, r4
 80027da:	6803      	ldr	r3, [r0, #0]
        }
    }
 80027dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80027e0:	689b      	ldr	r3, [r3, #8]
 80027e2:	4718      	bx	r3
    }
 80027e4:	bd10      	pop	{r4, pc}

080027e6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80027e6:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80027e8:	b570      	push	{r4, r5, r6, lr}
 80027ea:	4604      	mov	r4, r0
 80027ec:	460d      	mov	r5, r1
        return pressed;
 80027ee:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80027f2:	b99b      	cbnz	r3, 800281c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80027f4:	b98e      	cbnz	r6, 800281a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80027f6:	fab3 f383 	clz	r3, r3
        handlePressedUpdated();
 80027fa:	4620      	mov	r0, r4
 80027fc:	095b      	lsrs	r3, r3, #5
 80027fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8002802:	6823      	ldr	r3, [r4, #0]
 8002804:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002808:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 800280a:	6823      	ldr	r3, [r4, #0]
 800280c:	4620      	mov	r0, r4
 800280e:	695b      	ldr	r3, [r3, #20]
 8002810:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002812:	b116      	cbz	r6, 800281a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002814:	792b      	ldrb	r3, [r5, #4]
 8002816:	2b01      	cmp	r3, #1
 8002818:	d003      	beq.n	8002822 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 800281a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800281c:	2e00      	cmp	r6, #0
 800281e:	d0fc      	beq.n	800281a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002820:	e7e9      	b.n	80027f6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002822:	6823      	ldr	r3, [r4, #0]
 8002824:	4620      	mov	r0, r4
 8002826:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 800282a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 800282e:	4718      	bx	r3

08002830 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002830:	4a07      	ldr	r2, [pc, #28]	; (8002850 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8002832:	6002      	str	r2, [r0, #0]
 8002834:	2200      	movs	r2, #0
 8002836:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800283a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800283e:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002842:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002846:	f44f 7280 	mov.w	r2, #256	; 0x100
 800284a:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 800284c:	4770      	bx	lr
 800284e:	bf00      	nop
 8002850:	080238c0 	.word	0x080238c0

08002854 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002854:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002856:	b570      	push	{r4, r5, r6, lr}
 8002858:	4604      	mov	r4, r0
        setX(x);
 800285a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800285c:	4615      	mov	r5, r2
        setX(x);
 800285e:	4798      	blx	r3
        setY(y);
 8002860:	6823      	ldr	r3, [r4, #0]
 8002862:	4620      	mov	r0, r4
 8002864:	4629      	mov	r1, r5
 8002866:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002868:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800286c:	4718      	bx	r3
	...

08002870 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002870:	b510      	push	{r4, lr}
 8002872:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002874:	2226      	movs	r2, #38	; 0x26
 8002876:	2100      	movs	r1, #0
 8002878:	f01e fcc3 	bl	8021202 <memset>
class Widget : public Drawable
 800287c:	4620      	mov	r0, r4
 800287e:	f7ff ffd7 	bl	8002830 <_ZN8touchgfx8DrawableC1Ev>
 8002882:	4b04      	ldr	r3, [pc, #16]	; (8002894 <_ZN8touchgfx3BoxC1Ev+0x24>)
    }
 8002884:	4620      	mov	r0, r4
        : Widget(), alpha(255), color(0)
 8002886:	6023      	str	r3, [r4, #0]
 8002888:	23ff      	movs	r3, #255	; 0xff
 800288a:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 800288e:	2300      	movs	r3, #0
 8002890:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002892:	bd10      	pop	{r4, pc}
 8002894:	08023720 	.word	0x08023720

08002898 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8002898:	b510      	push	{r4, lr}
 800289a:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800289c:	2226      	movs	r2, #38	; 0x26
 800289e:	2100      	movs	r1, #0
 80028a0:	f01e fcaf 	bl	8021202 <memset>
 80028a4:	4620      	mov	r0, r4
 80028a6:	f7ff ffc3 	bl	8002830 <_ZN8touchgfx8DrawableC1Ev>
 80028aa:	4b0a      	ldr	r3, [pc, #40]	; (80028d4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80028ac:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
    {
    }
 80028b0:	4620      	mov	r0, r4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80028b2:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80028b4:	4b08      	ldr	r3, [pc, #32]	; (80028d8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80028b6:	62a3      	str	r3, [r4, #40]	; 0x28
 80028b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028bc:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80028be:	2300      	movs	r3, #0
 80028c0:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80028c4:	f04f 32ff 	mov.w	r2, #4294967295
 80028c8:	8723      	strh	r3, [r4, #56]	; 0x38
 80028ca:	63e3      	str	r3, [r4, #60]	; 0x3c
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80028cc:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
    }
 80028d0:	bd10      	pop	{r4, pc}
 80028d2:	bf00      	nop
 80028d4:	08023690 	.word	0x08023690
 80028d8:	08022800 	.word	0x08022800

080028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>:
        handleAlphaUpdated();
 80028dc:	6803      	ldr	r3, [r0, #0]
        alpha = newAlpha;
 80028de:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
        handleAlphaUpdated();
 80028e2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80028e6:	4718      	bx	r3

080028e8 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Morpion_2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Restart)
 80028e8:	f500 7355 	add.w	r3, r0, #852	; 0x354
 80028ec:	4299      	cmp	r1, r3
{
 80028ee:	b570      	push	{r4, r5, r6, lr}
 80028f0:	4604      	mov	r4, r0
 80028f2:	460d      	mov	r5, r1
    if (&src == &Restart)
 80028f4:	d102      	bne.n	80028fc <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    {
        //Restart_Game
        //When Restart clicked call virtual function
        //Call restart_button
        restart_button();
 80028f6:	6803      	ldr	r3, [r0, #0]
 80028f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028fa:	4798      	blx	r3
    }
    if (&src == &Quit)
 80028fc:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8002900:	42ab      	cmp	r3, r5
 8002902:	d106      	bne.n	8002912 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
    {
        //Quit_Game
        //When Quit clicked fade Quit
        //Set alpha to 255 on Quit
        Quit.setAlpha(255);
 8002904:	4628      	mov	r0, r5
 8002906:	21ff      	movs	r1, #255	; 0xff
 8002908:	f7ff ffe8 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
        Quit.invalidate();
 800290c:	4628      	mov	r0, r5
 800290e:	f00e fd72 	bl	80113f6 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
    if (&src == &Button_0_0)
 8002912:	f204 738c 	addw	r3, r4, #1932	; 0x78c
 8002916:	429d      	cmp	r5, r3
 8002918:	d103      	bne.n	8002922 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
    {
        //Button_0_0
        //When Button_0_0 clicked call virtual function
        //Call button_0_0
        button_0_0();
 800291a:	6823      	ldr	r3, [r4, #0]
 800291c:	4620      	mov	r0, r4
 800291e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002920:	4798      	blx	r3
    }
    if (&src == &Button_0_1)
 8002922:	f204 7314 	addw	r3, r4, #1812	; 0x714
 8002926:	429d      	cmp	r5, r3
 8002928:	d103      	bne.n	8002932 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4a>
    {
        //Button_0_1
        //When Button_0_1 clicked call virtual function
        //Call button_0_1
        button_0_1();
 800292a:	6823      	ldr	r3, [r4, #0]
 800292c:	4620      	mov	r0, r4
 800292e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002930:	4798      	blx	r3
    }
    if (&src == &Button_0_2)
 8002932:	f204 639c 	addw	r3, r4, #1692	; 0x69c
 8002936:	429d      	cmp	r5, r3
 8002938:	d103      	bne.n	8002942 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
    {
        //Button_0_2
        //When Button_0_2 clicked call virtual function
        //Call button_0_2
        button_0_2();
 800293a:	6823      	ldr	r3, [r4, #0]
 800293c:	4620      	mov	r0, r4
 800293e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002940:	4798      	blx	r3
    }
    if (&src == &Button_1_0)
 8002942:	f204 6324 	addw	r3, r4, #1572	; 0x624
 8002946:	429d      	cmp	r5, r3
 8002948:	d103      	bne.n	8002952 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6a>
    {
        //Button_1_0
        //When Button_1_0 clicked call virtual function
        //Call button_1_0
        button_1_0();
 800294a:	6823      	ldr	r3, [r4, #0]
 800294c:	4620      	mov	r0, r4
 800294e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002950:	4798      	blx	r3
    }
    if (&src == &Button_1_1)
 8002952:	f204 53ac 	addw	r3, r4, #1452	; 0x5ac
 8002956:	429d      	cmp	r5, r3
 8002958:	d103      	bne.n	8002962 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x7a>
    {
        //Button_1_1
        //When Button_1_1 clicked call virtual function
        //Call button_1_1
        button_1_1();
 800295a:	6823      	ldr	r3, [r4, #0]
 800295c:	4620      	mov	r0, r4
 800295e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002960:	4798      	blx	r3
    }
    if (&src == &Button_1_2)
 8002962:	f204 5334 	addw	r3, r4, #1332	; 0x534
 8002966:	429d      	cmp	r5, r3
 8002968:	d103      	bne.n	8002972 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8a>
    {
        //Button_1_2
        //When Button_1_2 clicked call virtual function
        //Call button_1_2
        button_1_2();
 800296a:	6823      	ldr	r3, [r4, #0]
 800296c:	4620      	mov	r0, r4
 800296e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002970:	4798      	blx	r3
    }
    if (&src == &Button_2_0)
 8002972:	f204 43bc 	addw	r3, r4, #1212	; 0x4bc
 8002976:	429d      	cmp	r5, r3
 8002978:	d103      	bne.n	8002982 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x9a>
    {
        //Button_2_0
        //When Button_2_0 clicked call virtual function
        //Call button_2_0
        button_2_0();
 800297a:	6823      	ldr	r3, [r4, #0]
 800297c:	4620      	mov	r0, r4
 800297e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002980:	4798      	blx	r3
    }
    if (&src == &Button_2_1)
 8002982:	f204 4344 	addw	r3, r4, #1092	; 0x444
 8002986:	429d      	cmp	r5, r3
 8002988:	d103      	bne.n	8002992 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xaa>
    {
        //Button_2_1
        //When Button_2_1 clicked call virtual function
        //Call button_2_1
        button_2_1();
 800298a:	6823      	ldr	r3, [r4, #0]
 800298c:	4620      	mov	r0, r4
 800298e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002990:	4798      	blx	r3
    }
    if (&src == &Button_2_2)
 8002992:	f504 7373 	add.w	r3, r4, #972	; 0x3cc
 8002996:	429d      	cmp	r5, r3
 8002998:	d105      	bne.n	80029a6 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xbe>
    {
        //Button_2_2
        //When Button_2_2 clicked call virtual function
        //Call button_2_2
        button_2_2();
 800299a:	6823      	ldr	r3, [r4, #0]
 800299c:	4620      	mov	r0, r4
 800299e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    }
}
 80029a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        button_2_2();
 80029a4:	4718      	bx	r3
}
 80029a6:	bd70      	pop	{r4, r5, r6, pc}

080029a8 <_ZN5CroixD1Ev>:

class Croix : public CroixBase
{
public:
    Croix();
    virtual ~Croix() {}
 80029a8:	4b03      	ldr	r3, [pc, #12]	; (80029b8 <_ZN5CroixD1Ev+0x10>)
 80029aa:	b510      	push	{r4, lr}
 80029ac:	4604      	mov	r4, r0
 80029ae:	6003      	str	r3, [r0, #0]
 80029b0:	f7ff fb4e 	bl	8002050 <_ZN9CroixBaseD1Ev>
 80029b4:	4620      	mov	r0, r4
 80029b6:	bd10      	pop	{r4, pc}
 80029b8:	0802303c 	.word	0x0802303c

080029bc <_ZN17Morpion_2ViewBaseD1Ev>:
Morpion_2ViewBase::~Morpion_2ViewBase()
 80029bc:	b538      	push	{r3, r4, r5, lr}
 80029be:	4b1d      	ldr	r3, [pc, #116]	; (8002a34 <_ZN17Morpion_2ViewBaseD1Ev+0x78>)
 80029c0:	4604      	mov	r4, r0

class Cercle : public CercleBase
{
public:
    Cercle();
    virtual ~Cercle() {}
 80029c2:	4d1d      	ldr	r5, [pc, #116]	; (8002a38 <_ZN17Morpion_2ViewBaseD1Ev+0x7c>)
 80029c4:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80029c6:	f00b ff9d 	bl	800e904 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Morpion_2ViewBase::~Morpion_2ViewBase()
 80029ca:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
 80029ce:	f7ff ffeb 	bl	80029a8 <_ZN5CroixD1Ev>
 80029d2:	f504 605c 	add.w	r0, r4, #3520	; 0xdc0
 80029d6:	f7ff ffe7 	bl	80029a8 <_ZN5CroixD1Ev>
 80029da:	f604 5038 	addw	r0, r4, #3384	; 0xd38
 80029de:	f8c4 5d38 	str.w	r5, [r4, #3384]	; 0xd38
 80029e2:	f7ff fad2 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 80029e6:	f604 4004 	addw	r0, r4, #3076	; 0xc04
 80029ea:	f7ff ffdd 	bl	80029a8 <_ZN5CroixD1Ev>
 80029ee:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
 80029f2:	f8c4 5b7c 	str.w	r5, [r4, #2940]	; 0xb7c
 80029f6:	f7ff fac8 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 80029fa:	f604 2048 	addw	r0, r4, #2632	; 0xa48
 80029fe:	f7ff ffd3 	bl	80029a8 <_ZN5CroixD1Ev>
 8002a02:	f504 601c 	add.w	r0, r4, #2496	; 0x9c0
 8002a06:	f8c4 59c0 	str.w	r5, [r4, #2496]	; 0x9c0
 8002a0a:	f7ff fabe 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 8002a0e:	f604 1038 	addw	r0, r4, #2360	; 0x938
 8002a12:	f8c4 5938 	str.w	r5, [r4, #2360]	; 0x938
 8002a16:	f7ff fab8 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 8002a1a:	f604 0004 	addw	r0, r4, #2052	; 0x804
 8002a1e:	f7ff ffc3 	bl	80029a8 <_ZN5CroixD1Ev>

class Grille : public GrilleBase
{
public:
    Grille();
    virtual ~Grille() {}
 8002a22:	4620      	mov	r0, r4
 8002a24:	4b05      	ldr	r3, [pc, #20]	; (8002a3c <_ZN17Morpion_2ViewBaseD1Ev+0x80>)
 8002a26:	f840 3f98 	str.w	r3, [r0, #152]!
 8002a2a:	f7ff fda7 	bl	800257c <_ZN10GrilleBaseD1Ev>
}
 8002a2e:	4620      	mov	r0, r4
 8002a30:	bd38      	pop	{r3, r4, r5, pc}
 8002a32:	bf00      	nop
 8002a34:	08022d6c 	.word	0x08022d6c
 8002a38:	08022fa8 	.word	0x08022fa8
 8002a3c:	08023124 	.word	0x08023124

08002a40 <_ZN17Morpion_2ViewBaseD0Ev>:
Morpion_2ViewBase::~Morpion_2ViewBase()
 8002a40:	b510      	push	{r4, lr}
 8002a42:	4604      	mov	r4, r0
}
 8002a44:	f7ff ffba 	bl	80029bc <_ZN17Morpion_2ViewBaseD1Ev>
 8002a48:	f243 51b8 	movw	r1, #13752	; 0x35b8
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	f01e f9a4 	bl	8020d9a <_ZdlPvj>
 8002a52:	4620      	mov	r0, r4
 8002a54:	bd10      	pop	{r4, pc}

08002a56 <_ZN5CroixD0Ev>:
 8002a56:	b510      	push	{r4, lr}
 8002a58:	4604      	mov	r4, r0
 8002a5a:	f7ff ffa5 	bl	80029a8 <_ZN5CroixD1Ev>
 8002a5e:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002a62:	4620      	mov	r0, r4
 8002a64:	f01e f999 	bl	8020d9a <_ZdlPvj>
 8002a68:	4620      	mov	r0, r4
 8002a6a:	bd10      	pop	{r4, pc}

08002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 8002a6c:	b570      	push	{r4, r5, r6, lr}
 8002a6e:	4604      	mov	r4, r0
 8002a70:	f7ff fede 	bl	8002830 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002a74:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8002a78:	2500      	movs	r5, #0
        : T(), up(), down()
 8002a7a:	4626      	mov	r6, r4
 8002a7c:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002a7e:	2301      	movs	r3, #1
 8002a80:	62a5      	str	r5, [r4, #40]	; 0x28
 8002a82:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8002a86:	4b0d      	ldr	r3, [pc, #52]	; (8002abc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 8002a88:	6325      	str	r5, [r4, #48]	; 0x30
 8002a8a:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 8002a8e:	4630      	mov	r0, r6
 8002a90:	f7ff feee 	bl	8002870 <_ZN8touchgfx3BoxC1Ev>
 8002a94:	4b0a      	ldr	r3, [pc, #40]	; (8002ac0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
        borderBox.setXY(0, 0);
 8002a96:	462a      	mov	r2, r5
 8002a98:	4629      	mov	r1, r5
 8002a9a:	4630      	mov	r0, r6
 8002a9c:	6363      	str	r3, [r4, #52]	; 0x34
        : color(col)
 8002a9e:	6625      	str	r5, [r4, #96]	; 0x60
 8002aa0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
        : color(0)
 8002aa4:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002aa8:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8002aac:	f7ff fed2 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002ab0:	4620      	mov	r0, r4
 8002ab2:	4631      	mov	r1, r6
 8002ab4:	f007 fe6e 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002ab8:	4620      	mov	r0, r4
 8002aba:	bd70      	pop	{r4, r5, r6, pc}
 8002abc:	08022cb8 	.word	0x08022cb8
 8002ac0:	08023788 	.word	0x08023788

08002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002ac4:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002ac6:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002ac8:	9b01      	ldr	r3, [sp, #4]
    }
 8002aca:	f85d 4b04 	ldr.w	r4, [sp], #4
        borderDown = borderColorPressed;
 8002ace:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002ad0:	6803      	ldr	r3, [r0, #0]
        down = colorPressed;
 8002ad2:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002ad6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ada:	4718      	bx	r3

08002adc <_ZN17Morpion_2ViewBaseC1Ev>:
Morpion_2ViewBase::Morpion_2ViewBase() :
 8002adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ae0:	4604      	mov	r4, r0
        : presenter(0)
 8002ae2:	2500      	movs	r5, #0
 8002ae4:	ed2d 8b10 	vpush	{d8-d15}
 8002ae8:	b091      	sub	sp, #68	; 0x44
    flexButtonCallback(this, &Morpion_2ViewBase::flexButtonCallbackHandler)
 8002aea:	46a2      	mov	sl, r4
 8002aec:	f00f f81a 	bl	8011b24 <_ZN8touchgfx6ScreenC1Ev>
 8002af0:	4bed      	ldr	r3, [pc, #948]	; (8002ea8 <_ZN17Morpion_2ViewBaseC1Ev+0x3cc>)
 8002af2:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8002af6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002af8:	f84a 3b40 	str.w	r3, [sl], #64
 8002afc:	4650      	mov	r0, sl
 8002afe:	f7ff feb7 	bl	8002870 <_ZN8touchgfx3BoxC1Ev>
 8002b02:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b06:	a90e      	add	r1, sp, #56	; 0x38
 8002b08:	4648      	mov	r0, r9
 8002b0a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8002b0e:	f00a f961 	bl	800cdd4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002b12:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002b16:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8002b1a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8002b1e:	f504 7b25 	add.w	fp, r4, #660	; 0x294
 8002b22:	4618      	mov	r0, r3
 8002b24:	ee0e 3a90 	vmov	s29, r3
 8002b28:	f000 fdc6 	bl	80036b8 <_ZN6GrilleC1Ev>
 8002b2c:	4640      	mov	r0, r8
 8002b2e:	f7ff feb3 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b32:	4638      	mov	r0, r7
 8002b34:	f7ff feb0 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b38:	f504 7301 	add.w	r3, r4, #516	; 0x204
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002b3c:	1d26      	adds	r6, r4, #4
 8002b3e:	4618      	mov	r0, r3
 8002b40:	ee08 3a10 	vmov	s16, r3
 8002b44:	f7ff fea8 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b48:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002b4c:	4618      	mov	r0, r3
 8002b4e:	ee08 3a90 	vmov	s17, r3
 8002b52:	f7ff fea1 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b56:	4658      	mov	r0, fp
 8002b58:	f7ff fe9e 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b5c:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8002b60:	4618      	mov	r0, r3
 8002b62:	ee0d 3a90 	vmov	s27, r3
 8002b66:	f7ff ff81 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b6a:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8002b6e:	4618      	mov	r0, r3
 8002b70:	ee0e 3a10 	vmov	s28, r3
 8002b74:	f7ff ff7a 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b78:	f504 7373 	add.w	r3, r4, #972	; 0x3cc
 8002b7c:	4618      	mov	r0, r3
 8002b7e:	ee09 3a10 	vmov	s18, r3
 8002b82:	f7ff ff73 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b86:	f204 4344 	addw	r3, r4, #1092	; 0x444
 8002b8a:	4618      	mov	r0, r3
 8002b8c:	ee09 3a90 	vmov	s19, r3
 8002b90:	f7ff ff6c 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b94:	f204 43bc 	addw	r3, r4, #1212	; 0x4bc
 8002b98:	4618      	mov	r0, r3
 8002b9a:	ee0a 3a10 	vmov	s20, r3
 8002b9e:	f7ff ff65 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002ba2:	f204 5334 	addw	r3, r4, #1332	; 0x534
 8002ba6:	4618      	mov	r0, r3
 8002ba8:	ee0a 3a90 	vmov	s21, r3
 8002bac:	f7ff ff5e 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bb0:	f204 53ac 	addw	r3, r4, #1452	; 0x5ac
 8002bb4:	4618      	mov	r0, r3
 8002bb6:	ee0b 3a10 	vmov	s22, r3
 8002bba:	f7ff ff57 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bbe:	f204 6324 	addw	r3, r4, #1572	; 0x624
 8002bc2:	4618      	mov	r0, r3
 8002bc4:	ee0b 3a90 	vmov	s23, r3
 8002bc8:	f7ff ff50 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bcc:	f204 639c 	addw	r3, r4, #1692	; 0x69c
 8002bd0:	4618      	mov	r0, r3
 8002bd2:	ee0c 3a10 	vmov	s24, r3
 8002bd6:	f7ff ff49 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bda:	f204 7314 	addw	r3, r4, #1812	; 0x714
 8002bde:	4618      	mov	r0, r3
 8002be0:	ee0c 3a90 	vmov	s25, r3
 8002be4:	f7ff ff42 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002be8:	f204 738c 	addw	r3, r4, #1932	; 0x78c
 8002bec:	4618      	mov	r0, r3
 8002bee:	ee0d 3a10 	vmov	s26, r3
 8002bf2:	f7ff ff3b 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bf6:	f604 0304 	addw	r3, r4, #2052	; 0x804
 8002bfa:	4618      	mov	r0, r3
 8002bfc:	ee0f 3a10 	vmov	s30, r3
 8002c00:	f000 fd1c 	bl	800363c <_ZN5CroixC1Ev>
 8002c04:	f604 1338 	addw	r3, r4, #2360	; 0x938
 8002c08:	4618      	mov	r0, r3
 8002c0a:	ee0f 3a90 	vmov	s31, r3
 8002c0e:	f000 fd09 	bl	8003624 <_ZN6CercleC1Ev>
 8002c12:	f504 631c 	add.w	r3, r4, #2496	; 0x9c0
 8002c16:	4618      	mov	r0, r3
 8002c18:	9303      	str	r3, [sp, #12]
 8002c1a:	f000 fd03 	bl	8003624 <_ZN6CercleC1Ev>
 8002c1e:	f604 2348 	addw	r3, r4, #2632	; 0xa48
 8002c22:	4618      	mov	r0, r3
 8002c24:	9304      	str	r3, [sp, #16]
 8002c26:	f000 fd09 	bl	800363c <_ZN5CroixC1Ev>
 8002c2a:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8002c2e:	4618      	mov	r0, r3
 8002c30:	9305      	str	r3, [sp, #20]
 8002c32:	f000 fcf7 	bl	8003624 <_ZN6CercleC1Ev>
 8002c36:	f604 4304 	addw	r3, r4, #3076	; 0xc04
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	9306      	str	r3, [sp, #24]
 8002c3e:	f000 fcfd 	bl	800363c <_ZN5CroixC1Ev>
 8002c42:	f604 5338 	addw	r3, r4, #3384	; 0xd38
 8002c46:	4618      	mov	r0, r3
 8002c48:	9307      	str	r3, [sp, #28]
 8002c4a:	f000 fceb 	bl	8003624 <_ZN6CercleC1Ev>
 8002c4e:	f504 635c 	add.w	r3, r4, #3520	; 0xdc0
 8002c52:	4618      	mov	r0, r3
 8002c54:	9308      	str	r3, [sp, #32]
 8002c56:	f000 fcf1 	bl	800363c <_ZN5CroixC1Ev>
 8002c5a:	f604 63f4 	addw	r3, r4, #3828	; 0xef4
 8002c5e:	4618      	mov	r0, r3
 8002c60:	9309      	str	r3, [sp, #36]	; 0x24
 8002c62:	f000 fceb 	bl	800363c <_ZN5CroixC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002c66:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8002c6a:	4a90      	ldr	r2, [pc, #576]	; (8002eac <_ZN17Morpion_2ViewBaseC1Ev+0x3d0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002c6c:	f504 5081 	add.w	r0, r4, #4128	; 0x1020
 8002c70:	f8c3 45ac 	str.w	r4, [r3, #1452]	; 0x5ac
 8002c74:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8002c78:	f8c3 25a8 	str.w	r2, [r3, #1448]	; 0x5a8
 8002c7c:	3008      	adds	r0, #8
 8002c7e:	4a8c      	ldr	r2, [pc, #560]	; (8002eb0 <_ZN17Morpion_2ViewBaseC1Ev+0x3d4>)
 8002c80:	f8c3 55b4 	str.w	r5, [r3, #1460]	; 0x5b4
 8002c84:	f8c3 25b0 	str.w	r2, [r3, #1456]	; 0x5b0
 8002c88:	f00b fe32 	bl	800e8f0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 640, 480);
 8002c8c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002c90:	462a      	mov	r2, r5
 8002c92:	4629      	mov	r1, r5
 8002c94:	4650      	mov	r0, sl
 8002c96:	9300      	str	r3, [sp, #0]
 8002c98:	f44f 7320 	mov.w	r3, #640	; 0x280
 8002c9c:	f7ff f9e2 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002ca0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002ca4:	4651      	mov	r1, sl
 8002ca6:	4630      	mov	r0, r6
 8002ca8:	66a3      	str	r3, [r4, #104]	; 0x68
        color = newColor;
 8002caa:	f04f 3aff 	mov.w	sl, #4294967295
 8002cae:	f007 fd71 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_800X480_ASPHALT_ID));
 8002cb2:	a90e      	add	r1, sp, #56	; 0x38
 8002cb4:	4648      	mov	r0, r9
 8002cb6:	f8ad 5038 	strh.w	r5, [sp, #56]	; 0x38
 8002cba:	f00a ff27 	bl	800db0c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Background.setPosition(0, 0, 640, 480);
 8002cbe:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002cc2:	462a      	mov	r2, r5
 8002cc4:	4629      	mov	r1, r5
 8002cc6:	4648      	mov	r0, r9
 8002cc8:	9300      	str	r3, [sp, #0]
 8002cca:	f44f 7320 	mov.w	r3, #640	; 0x280
 8002cce:	f7ff f9c9 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002cd2:	4629      	mov	r1, r5
 8002cd4:	4648      	mov	r0, r9
 8002cd6:	f00a f838 	bl	800cd4a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002cda:	4649      	mov	r1, r9
 8002cdc:	4630      	mov	r0, r6
        boundingArea = calculateBoundingArea();
 8002cde:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8002ce2:	f007 fd57 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Grille_main.setXY(80, 134);
 8002ce6:	2286      	movs	r2, #134	; 0x86
 8002ce8:	ee1e 0a90 	vmov	r0, s29
 8002cec:	2150      	movs	r1, #80	; 0x50
 8002cee:	f7ff fdb1 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002cf2:	ee1e 1a90 	vmov	r1, s29
 8002cf6:	4630      	mov	r0, r6
 8002cf8:	f007 fd4c 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Titre.setXY(244, 14);
 8002cfc:	220e      	movs	r2, #14
 8002cfe:	4640      	mov	r0, r8
 8002d00:	21f4      	movs	r1, #244	; 0xf4
 8002d02:	f7ff fda7 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002d06:	4641      	mov	r1, r8
 8002d08:	4648      	mov	r0, r9
        color = newColor;
 8002d0a:	f8c4 a1a4 	str.w	sl, [r4, #420]	; 0x1a4
        linespace = space;
 8002d0e:	f8a4 51a8 	strh.w	r5, [r4, #424]	; 0x1a8
        boundingArea = calculateBoundingArea();
 8002d12:	f00a fb63 	bl	800d3dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d16:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002d1a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002d1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d22:	4b64      	ldr	r3, [pc, #400]	; (8002eb4 <_ZN17Morpion_2ViewBaseC1Ev+0x3d8>)
    Titre.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZXE));
 8002d24:	a90e      	add	r1, sp, #56	; 0x38
 8002d26:	4640      	mov	r0, r8
 8002d28:	930e      	str	r3, [sp, #56]	; 0x38
 8002d2a:	2304      	movs	r3, #4
 8002d2c:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002d30:	f00a fdfc 	bl	800d92c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d34:	4641      	mov	r1, r8
 8002d36:	4630      	mov	r0, r6
 8002d38:	f007 fd2c 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Quitter.setXY(519, 82);
 8002d3c:	2252      	movs	r2, #82	; 0x52
 8002d3e:	4638      	mov	r0, r7
 8002d40:	f240 2107 	movw	r1, #519	; 0x207
 8002d44:	f7ff fd86 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002d48:	4639      	mov	r1, r7
 8002d4a:	4648      	mov	r0, r9
        color = newColor;
 8002d4c:	f8c4 a1ec 	str.w	sl, [r4, #492]	; 0x1ec
        linespace = space;
 8002d50:	f8a4 51f0 	strh.w	r5, [r4, #496]	; 0x1f0
        boundingArea = calculateBoundingArea();
 8002d54:	f00a fb42 	bl	800d3dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d58:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002d5c:	f8df 8160 	ldr.w	r8, [pc, #352]	; 8002ec0 <_ZN17Morpion_2ViewBaseC1Ev+0x3e4>
 8002d60:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002d64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d68:	4b52      	ldr	r3, [pc, #328]	; (8002eb4 <_ZN17Morpion_2ViewBaseC1Ev+0x3d8>)
    Quitter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OAW0));
 8002d6a:	a90e      	add	r1, sp, #56	; 0x38
 8002d6c:	4638      	mov	r0, r7
 8002d6e:	930e      	str	r3, [sp, #56]	; 0x38
 8002d70:	2303      	movs	r3, #3
 8002d72:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002d76:	f00a fdd9 	bl	800d92c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d7a:	4639      	mov	r1, r7
 8002d7c:	4630      	mov	r0, r6
 8002d7e:	f007 fd09 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Recommencer.setXY(27, 82);
 8002d82:	2252      	movs	r2, #82	; 0x52
 8002d84:	ee18 0a10 	vmov	r0, s16
 8002d88:	211b      	movs	r1, #27
 8002d8a:	f7ff fd63 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002d8e:	ee18 1a10 	vmov	r1, s16
 8002d92:	4648      	mov	r0, r9
        color = newColor;
 8002d94:	f8c4 a234 	str.w	sl, [r4, #564]	; 0x234
        linespace = space;
 8002d98:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8002d9c:	f00a fb1e 	bl	800d3dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002da0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002da4:	4f43      	ldr	r7, [pc, #268]	; (8002eb4 <_ZN17Morpion_2ViewBaseC1Ev+0x3d8>)
 8002da6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002daa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002dae:	2302      	movs	r3, #2
    Recommencer.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CEIK));
 8002db0:	a90e      	add	r1, sp, #56	; 0x38
 8002db2:	ee18 0a10 	vmov	r0, s16
 8002db6:	970e      	str	r7, [sp, #56]	; 0x38
 8002db8:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002dbc:	f00a fdb6 	bl	800d92c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002dc0:	ee18 1a10 	vmov	r1, s16
 8002dc4:	4630      	mov	r0, r6
 8002dc6:	f007 fce5 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Joueur_2.setXY(275, 68);
 8002dca:	2244      	movs	r2, #68	; 0x44
 8002dcc:	ee18 0a90 	vmov	r0, s17
 8002dd0:	f240 1113 	movw	r1, #275	; 0x113
 8002dd4:	f7ff fd3e 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002dd8:	ee18 1a90 	vmov	r1, s17
 8002ddc:	4648      	mov	r0, r9
        color = newColor;
 8002dde:	f8c4 a27c 	str.w	sl, [r4, #636]	; 0x27c
        linespace = space;
 8002de2:	f8a4 5280 	strh.w	r5, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8002de6:	f00a faf9 	bl	800d3dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002dea:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002dee:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002df2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002df6:	2301      	movs	r3, #1
    Joueur_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HD7Q));
 8002df8:	a90e      	add	r1, sp, #56	; 0x38
 8002dfa:	ee18 0a90 	vmov	r0, s17
 8002dfe:	970e      	str	r7, [sp, #56]	; 0x38
 8002e00:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002e04:	f00a fd92 	bl	800d92c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e08:	ee18 1a90 	vmov	r1, s17
 8002e0c:	4630      	mov	r0, r6
 8002e0e:	f007 fcc1 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Joueur_1.setXY(275, 68);
 8002e12:	2244      	movs	r2, #68	; 0x44
 8002e14:	4658      	mov	r0, fp
 8002e16:	f240 1113 	movw	r1, #275	; 0x113
 8002e1a:	f7ff fd1b 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002e1e:	4659      	mov	r1, fp
 8002e20:	4648      	mov	r0, r9
        color = newColor;
 8002e22:	f8c4 a2c4 	str.w	sl, [r4, #708]	; 0x2c4
        linespace = space;
 8002e26:	f8a4 52c8 	strh.w	r5, [r4, #712]	; 0x2c8
        borderBox.setPosition(x, y, width, height);
 8002e2a:	f04f 0a44 	mov.w	sl, #68	; 0x44
        boundingArea = calculateBoundingArea();
 8002e2e:	f00a fad5 	bl	800d3dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e32:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002e36:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002e3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Joueur_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TNV6));
 8002e3e:	a90e      	add	r1, sp, #56	; 0x38
 8002e40:	4658      	mov	r0, fp
 8002e42:	970e      	str	r7, [sp, #56]	; 0x38
 8002e44:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
 8002e48:	f00a fd70 	bl	800d92c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e4c:	4659      	mov	r1, fp
 8002e4e:	4630      	mov	r0, r6
 8002e50:	f007 fca0 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002e54:	462a      	mov	r2, r5
 8002e56:	4629      	mov	r1, r5
 8002e58:	f504 7044 	add.w	r0, r4, #784	; 0x310
 8002e5c:	f8cd a000 	str.w	sl, [sp]
 8002e60:	2360      	movs	r3, #96	; 0x60
 8002e62:	f7ff f8ff 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002e66:	f04f 0305 	mov.w	r3, #5
    Quit.setAction(flexButtonCallback);
 8002e6a:	f504 5b56 	add.w	fp, r4, #13696	; 0x3580
 8002e6e:	4f12      	ldr	r7, [pc, #72]	; (8002eb8 <_ZN17Morpion_2ViewBaseC1Ev+0x3dc>)
 8002e70:	f8df 9050 	ldr.w	r9, [pc, #80]	; 8002ec4 <_ZN17Morpion_2ViewBaseC1Ev+0x3e8>
    Quit.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002e74:	4642      	mov	r2, r8
 8002e76:	f8a4 3340 	strh.w	r3, [r4, #832]	; 0x340
    Quit.setAction(flexButtonCallback);
 8002e7a:	f10b 0b28 	add.w	fp, fp, #40	; 0x28
    Quit.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002e7e:	4b0f      	ldr	r3, [pc, #60]	; (8002ebc <_ZN17Morpion_2ViewBaseC1Ev+0x3e0>)
 8002e80:	4639      	mov	r1, r7
 8002e82:	ee1d 0a90 	vmov	r0, s27
 8002e86:	9300      	str	r3, [sp, #0]
 8002e88:	464b      	mov	r3, r9
 8002e8a:	f7ff fe1b 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Quit.setPosition(506, 14, 96, 68);
 8002e8e:	2360      	movs	r3, #96	; 0x60
 8002e90:	220e      	movs	r2, #14
 8002e92:	ee1d 0a90 	vmov	r0, s27
 8002e96:	f8cd a000 	str.w	sl, [sp]
 8002e9a:	f44f 71fd 	mov.w	r1, #506	; 0x1fa
        action = &callback;
 8002e9e:	f8c4 b30c 	str.w	fp, [r4, #780]	; 0x30c
 8002ea2:	f7ff f8df 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ea6:	e00f      	b.n	8002ec8 <_ZN17Morpion_2ViewBaseC1Ev+0x3ec>
 8002ea8:	08022d6c 	.word	0x08022d6c
 8002eac:	08022d54 	.word	0x08022d54
 8002eb0:	080028e9 	.word	0x080028e9
 8002eb4:	08022800 	.word	0x08022800
 8002eb8:	ff006699 	.word	0xff006699
 8002ebc:	ff336699 	.word	0xff336699
 8002ec0:	ff0099cc 	.word	0xff0099cc
 8002ec4:	ff003366 	.word	0xff003366
 8002ec8:	ee1d 1a90 	vmov	r1, s27
 8002ecc:	4630      	mov	r0, r6
 8002ece:	f007 fc61 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ed2:	462a      	mov	r2, r5
 8002ed4:	4629      	mov	r1, r5
 8002ed6:	f504 7062 	add.w	r0, r4, #904	; 0x388
 8002eda:	f8cd a000 	str.w	sl, [sp]
 8002ede:	2360      	movs	r3, #96	; 0x60
 8002ee0:	f7ff f8c0 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ee4:	f04f 0205 	mov.w	r2, #5
    Restart.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002ee8:	4bef      	ldr	r3, [pc, #956]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002eea:	4639      	mov	r1, r7
 8002eec:	ee1e 0a10 	vmov	r0, s28
 8002ef0:	f8a4 23b8 	strh.w	r2, [r4, #952]	; 0x3b8
 8002ef4:	9300      	str	r3, [sp, #0]
 8002ef6:	4642      	mov	r2, r8
 8002ef8:	464b      	mov	r3, r9
 8002efa:	f7ff fde3 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Restart.setPosition(50, 14, 96, 68);
 8002efe:	2360      	movs	r3, #96	; 0x60
 8002f00:	220e      	movs	r2, #14
 8002f02:	ee1e 0a10 	vmov	r0, s28
 8002f06:	f8cd a000 	str.w	sl, [sp]
 8002f0a:	2132      	movs	r1, #50	; 0x32
 8002f0c:	f04f 0a6a 	mov.w	sl, #106	; 0x6a
 8002f10:	f8c4 b384 	str.w	fp, [r4, #900]	; 0x384
 8002f14:	f7ff f8a6 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f18:	ee1e 1a10 	vmov	r1, s28
 8002f1c:	4630      	mov	r0, r6
 8002f1e:	f007 fc39 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f22:	462a      	mov	r2, r5
 8002f24:	4629      	mov	r1, r5
 8002f26:	f504 6080 	add.w	r0, r4, #1024	; 0x400
 8002f2a:	239c      	movs	r3, #156	; 0x9c
 8002f2c:	f8cd a000 	str.w	sl, [sp]
 8002f30:	f7ff f898 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_2_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002f34:	4bdc      	ldr	r3, [pc, #880]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002f36:	4642      	mov	r2, r8
 8002f38:	4639      	mov	r1, r7
 8002f3a:	ee19 0a10 	vmov	r0, s18
 8002f3e:	9300      	str	r3, [sp, #0]
 8002f40:	f8a4 5430 	strh.w	r5, [r4, #1072]	; 0x430
 8002f44:	464b      	mov	r3, r9
 8002f46:	f7ff fdbd 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_2_2.setAlpha(0);
 8002f4a:	4629      	mov	r1, r5
 8002f4c:	ee19 0a10 	vmov	r0, s18
 8002f50:	f7ff fcc4 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_2_2.setPosition(404, 358, 156, 106);
 8002f54:	239c      	movs	r3, #156	; 0x9c
 8002f56:	f44f 72b3 	mov.w	r2, #358	; 0x166
 8002f5a:	ee19 0a10 	vmov	r0, s18
 8002f5e:	f44f 71ca 	mov.w	r1, #404	; 0x194
 8002f62:	f8c4 b3fc 	str.w	fp, [r4, #1020]	; 0x3fc
 8002f66:	f8cd a000 	str.w	sl, [sp]
 8002f6a:	f7ff f87b 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f6e:	ee19 1a10 	vmov	r1, s18
 8002f72:	4630      	mov	r0, r6
 8002f74:	f007 fc0e 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f78:	462a      	mov	r2, r5
 8002f7a:	4629      	mov	r1, r5
 8002f7c:	f504 608f 	add.w	r0, r4, #1144	; 0x478
 8002f80:	239c      	movs	r3, #156	; 0x9c
 8002f82:	f8cd a000 	str.w	sl, [sp]
 8002f86:	f7ff f86d 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_2_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002f8a:	4bc7      	ldr	r3, [pc, #796]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002f8c:	4642      	mov	r2, r8
 8002f8e:	4639      	mov	r1, r7
 8002f90:	ee19 0a90 	vmov	r0, s19
 8002f94:	9300      	str	r3, [sp, #0]
 8002f96:	f8a4 54a8 	strh.w	r5, [r4, #1192]	; 0x4a8
 8002f9a:	464b      	mov	r3, r9
 8002f9c:	f7ff fd92 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_2_1.setAlpha(0);
 8002fa0:	4629      	mov	r1, r5
 8002fa2:	ee19 0a90 	vmov	r0, s19
 8002fa6:	f7ff fc99 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_2_1.setPosition(242, 358, 156, 106);
 8002faa:	239c      	movs	r3, #156	; 0x9c
 8002fac:	f44f 72b3 	mov.w	r2, #358	; 0x166
 8002fb0:	ee19 0a90 	vmov	r0, s19
 8002fb4:	21f2      	movs	r1, #242	; 0xf2
 8002fb6:	f8c4 b474 	str.w	fp, [r4, #1140]	; 0x474
 8002fba:	f8cd a000 	str.w	sl, [sp]
 8002fbe:	f7ff f851 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fc2:	ee19 1a90 	vmov	r1, s19
 8002fc6:	4630      	mov	r0, r6
 8002fc8:	f007 fbe4 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002fcc:	462a      	mov	r2, r5
 8002fce:	4629      	mov	r1, r5
 8002fd0:	f504 609e 	add.w	r0, r4, #1264	; 0x4f0
 8002fd4:	239c      	movs	r3, #156	; 0x9c
 8002fd6:	f8cd a000 	str.w	sl, [sp]
 8002fda:	f7ff f843 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_2_0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002fde:	4bb2      	ldr	r3, [pc, #712]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002fe0:	4642      	mov	r2, r8
 8002fe2:	4639      	mov	r1, r7
 8002fe4:	ee1a 0a10 	vmov	r0, s20
 8002fe8:	9300      	str	r3, [sp, #0]
 8002fea:	f8a4 5520 	strh.w	r5, [r4, #1312]	; 0x520
 8002fee:	464b      	mov	r3, r9
 8002ff0:	f7ff fd68 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_2_0.setAlpha(0);
 8002ff4:	4629      	mov	r1, r5
 8002ff6:	ee1a 0a10 	vmov	r0, s20
 8002ffa:	f7ff fc6f 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_2_0.setPosition(80, 358, 156, 106);
 8002ffe:	239c      	movs	r3, #156	; 0x9c
 8003000:	f44f 72b3 	mov.w	r2, #358	; 0x166
 8003004:	ee1a 0a10 	vmov	r0, s20
 8003008:	2150      	movs	r1, #80	; 0x50
 800300a:	f8c4 b4ec 	str.w	fp, [r4, #1260]	; 0x4ec
 800300e:	f8cd a000 	str.w	sl, [sp]
 8003012:	f7ff f827 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003016:	ee1a 1a10 	vmov	r1, s20
 800301a:	4630      	mov	r0, r6
 800301c:	f007 fbba 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003020:	462a      	mov	r2, r5
 8003022:	4629      	mov	r1, r5
 8003024:	f504 60ad 	add.w	r0, r4, #1384	; 0x568
 8003028:	239c      	movs	r3, #156	; 0x9c
 800302a:	f8cd a000 	str.w	sl, [sp]
 800302e:	f7ff f819 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_1_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003032:	4b9d      	ldr	r3, [pc, #628]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8003034:	4642      	mov	r2, r8
 8003036:	4639      	mov	r1, r7
 8003038:	ee1a 0a90 	vmov	r0, s21
 800303c:	9300      	str	r3, [sp, #0]
 800303e:	f8a4 5598 	strh.w	r5, [r4, #1432]	; 0x598
 8003042:	464b      	mov	r3, r9
 8003044:	f7ff fd3e 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_1_2.setAlpha(0);
 8003048:	4629      	mov	r1, r5
 800304a:	ee1a 0a90 	vmov	r0, s21
 800304e:	f7ff fc45 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_1_2.setPosition(404, 246, 156, 106);
 8003052:	239c      	movs	r3, #156	; 0x9c
 8003054:	22f6      	movs	r2, #246	; 0xf6
 8003056:	ee1a 0a90 	vmov	r0, s21
 800305a:	f44f 71ca 	mov.w	r1, #404	; 0x194
 800305e:	f8c4 b564 	str.w	fp, [r4, #1380]	; 0x564
 8003062:	f8cd a000 	str.w	sl, [sp]
 8003066:	f7fe fffd 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 800306a:	ee1a 1a90 	vmov	r1, s21
 800306e:	4630      	mov	r0, r6
 8003070:	f007 fb90 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003074:	462a      	mov	r2, r5
 8003076:	4629      	mov	r1, r5
 8003078:	f504 60bc 	add.w	r0, r4, #1504	; 0x5e0
 800307c:	239c      	movs	r3, #156	; 0x9c
 800307e:	f8cd a000 	str.w	sl, [sp]
 8003082:	f7fe ffef 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_1_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003086:	4b88      	ldr	r3, [pc, #544]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8003088:	4642      	mov	r2, r8
 800308a:	4639      	mov	r1, r7
 800308c:	ee1b 0a10 	vmov	r0, s22
 8003090:	9300      	str	r3, [sp, #0]
 8003092:	f8a4 5610 	strh.w	r5, [r4, #1552]	; 0x610
 8003096:	464b      	mov	r3, r9
 8003098:	f7ff fd14 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_1_1.setAlpha(0);
 800309c:	4629      	mov	r1, r5
 800309e:	ee1b 0a10 	vmov	r0, s22
 80030a2:	f7ff fc1b 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_1_1.setPosition(241, 246, 156, 106);
 80030a6:	239c      	movs	r3, #156	; 0x9c
 80030a8:	22f6      	movs	r2, #246	; 0xf6
 80030aa:	ee1b 0a10 	vmov	r0, s22
 80030ae:	21f1      	movs	r1, #241	; 0xf1
 80030b0:	f8c4 b5dc 	str.w	fp, [r4, #1500]	; 0x5dc
 80030b4:	f8cd a000 	str.w	sl, [sp]
 80030b8:	f7fe ffd4 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030bc:	ee1b 1a10 	vmov	r1, s22
 80030c0:	4630      	mov	r0, r6
 80030c2:	f007 fb67 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80030c6:	462a      	mov	r2, r5
 80030c8:	4629      	mov	r1, r5
 80030ca:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80030ce:	239c      	movs	r3, #156	; 0x9c
 80030d0:	f8cd a000 	str.w	sl, [sp]
 80030d4:	f7fe ffc6 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_1_0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80030d8:	4b73      	ldr	r3, [pc, #460]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 80030da:	4642      	mov	r2, r8
 80030dc:	4639      	mov	r1, r7
 80030de:	ee1b 0a90 	vmov	r0, s23
 80030e2:	9300      	str	r3, [sp, #0]
 80030e4:	f8a4 5688 	strh.w	r5, [r4, #1672]	; 0x688
 80030e8:	464b      	mov	r3, r9
 80030ea:	f7ff fceb 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_1_0.setAlpha(0);
 80030ee:	4629      	mov	r1, r5
 80030f0:	ee1b 0a90 	vmov	r0, s23
 80030f4:	f7ff fbf2 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_1_0.setPosition(80, 245, 156, 106);
 80030f8:	239c      	movs	r3, #156	; 0x9c
 80030fa:	22f5      	movs	r2, #245	; 0xf5
 80030fc:	ee1b 0a90 	vmov	r0, s23
 8003100:	2150      	movs	r1, #80	; 0x50
 8003102:	f8c4 b654 	str.w	fp, [r4, #1620]	; 0x654
 8003106:	f8cd a000 	str.w	sl, [sp]
 800310a:	f7fe ffab 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 800310e:	ee1b 1a90 	vmov	r1, s23
 8003112:	4630      	mov	r0, r6
 8003114:	f007 fb3e 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003118:	462a      	mov	r2, r5
 800311a:	4629      	mov	r1, r5
 800311c:	f504 60da 	add.w	r0, r4, #1744	; 0x6d0
 8003120:	239c      	movs	r3, #156	; 0x9c
 8003122:	f8cd a000 	str.w	sl, [sp]
 8003126:	f7fe ff9d 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_0_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800312a:	4b5f      	ldr	r3, [pc, #380]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 800312c:	4642      	mov	r2, r8
 800312e:	4639      	mov	r1, r7
 8003130:	ee1c 0a10 	vmov	r0, s24
 8003134:	9300      	str	r3, [sp, #0]
 8003136:	f8a4 5700 	strh.w	r5, [r4, #1792]	; 0x700
 800313a:	464b      	mov	r3, r9
 800313c:	f7ff fcc2 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_0_2.setAlpha(0);
 8003140:	4629      	mov	r1, r5
 8003142:	ee1c 0a10 	vmov	r0, s24
 8003146:	f7ff fbc9 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_0_2.setPosition(404, 134, 156, 106);
 800314a:	239c      	movs	r3, #156	; 0x9c
 800314c:	2286      	movs	r2, #134	; 0x86
 800314e:	ee1c 0a10 	vmov	r0, s24
 8003152:	f44f 71ca 	mov.w	r1, #404	; 0x194
 8003156:	f8c4 b6cc 	str.w	fp, [r4, #1740]	; 0x6cc
 800315a:	f8cd a000 	str.w	sl, [sp]
 800315e:	f7fe ff81 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003162:	ee1c 1a10 	vmov	r1, s24
 8003166:	4630      	mov	r0, r6
 8003168:	f007 fb14 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800316c:	462a      	mov	r2, r5
 800316e:	4629      	mov	r1, r5
 8003170:	f504 60e9 	add.w	r0, r4, #1864	; 0x748
 8003174:	239c      	movs	r3, #156	; 0x9c
 8003176:	f8cd a000 	str.w	sl, [sp]
 800317a:	f7fe ff73 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_0_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800317e:	4b4a      	ldr	r3, [pc, #296]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8003180:	4642      	mov	r2, r8
 8003182:	4639      	mov	r1, r7
 8003184:	ee1c 0a90 	vmov	r0, s25
 8003188:	9300      	str	r3, [sp, #0]
 800318a:	f8a4 5778 	strh.w	r5, [r4, #1912]	; 0x778
 800318e:	464b      	mov	r3, r9
 8003190:	f7ff fc98 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_0_1.setAlpha(0);
 8003194:	4629      	mov	r1, r5
 8003196:	ee1c 0a90 	vmov	r0, s25
 800319a:	f7ff fb9f 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_0_1.setPosition(241, 134, 156, 106);
 800319e:	239c      	movs	r3, #156	; 0x9c
 80031a0:	2286      	movs	r2, #134	; 0x86
 80031a2:	ee1c 0a90 	vmov	r0, s25
 80031a6:	21f1      	movs	r1, #241	; 0xf1
 80031a8:	f8c4 b744 	str.w	fp, [r4, #1860]	; 0x744
 80031ac:	f8cd a000 	str.w	sl, [sp]
 80031b0:	f7fe ff58 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031b4:	ee1c 1a90 	vmov	r1, s25
 80031b8:	4630      	mov	r0, r6
 80031ba:	f007 faeb 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031be:	462a      	mov	r2, r5
 80031c0:	4629      	mov	r1, r5
 80031c2:	f504 60f8 	add.w	r0, r4, #1984	; 0x7c0
 80031c6:	239c      	movs	r3, #156	; 0x9c
 80031c8:	f8cd a000 	str.w	sl, [sp]
 80031cc:	f7fe ff4a 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_0_0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80031d0:	4b35      	ldr	r3, [pc, #212]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 80031d2:	4642      	mov	r2, r8
 80031d4:	4639      	mov	r1, r7
 80031d6:	ee1d 0a10 	vmov	r0, s26
 80031da:	9300      	str	r3, [sp, #0]
 80031dc:	f8a4 57f0 	strh.w	r5, [r4, #2032]	; 0x7f0
 80031e0:	464b      	mov	r3, r9
 80031e2:	f7ff fc6f 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_0_0.setAlpha(0);
 80031e6:	4629      	mov	r1, r5
 80031e8:	ee1d 0a10 	vmov	r0, s26
 80031ec:	f7ff fb76 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_0_0.setPosition(80, 134, 156, 106);
 80031f0:	239c      	movs	r3, #156	; 0x9c
 80031f2:	2286      	movs	r2, #134	; 0x86
 80031f4:	ee1d 0a10 	vmov	r0, s26
 80031f8:	2150      	movs	r1, #80	; 0x50
 80031fa:	f8c4 b7bc 	str.w	fp, [r4, #1980]	; 0x7bc
 80031fe:	f8cd a000 	str.w	sl, [sp]
 8003202:	f7fe ff2f 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003206:	ee1d 1a10 	vmov	r1, s26
 800320a:	4630      	mov	r0, r6
 800320c:	f007 fac2 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_1.setXY(-156, 401);
 8003210:	f240 1291 	movw	r2, #401	; 0x191
 8003214:	ee1f 0a10 	vmov	r0, s30
 8003218:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 800321c:	f7ff fb1a 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8003220:	ee1f 1a10 	vmov	r1, s30
 8003224:	4630      	mov	r0, r6
 8003226:	f007 fab5 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_1.setXY(640, 351);
 800322a:	f240 125f 	movw	r2, #351	; 0x15f
 800322e:	ee1f 0a90 	vmov	r0, s31
 8003232:	f44f 7120 	mov.w	r1, #640	; 0x280
 8003236:	f7ff fb0d 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800323a:	ee1f 1a90 	vmov	r1, s31
 800323e:	4630      	mov	r0, r6
 8003240:	f007 faa8 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_2.setXY(640, 245);
 8003244:	22f5      	movs	r2, #245	; 0xf5
 8003246:	9803      	ldr	r0, [sp, #12]
 8003248:	f44f 7120 	mov.w	r1, #640	; 0x280
 800324c:	f7ff fb02 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8003250:	9903      	ldr	r1, [sp, #12]
 8003252:	4630      	mov	r0, r6
 8003254:	f007 fa9e 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_2.setXY(-156, 292);
 8003258:	f44f 7292 	mov.w	r2, #292	; 0x124
 800325c:	9804      	ldr	r0, [sp, #16]
 800325e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003262:	f7ff faf7 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8003266:	9904      	ldr	r1, [sp, #16]
 8003268:	4630      	mov	r0, r6
 800326a:	f007 fa93 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_3.setXY(640, 139);
 800326e:	228b      	movs	r2, #139	; 0x8b
 8003270:	9805      	ldr	r0, [sp, #20]
 8003272:	f44f 7120 	mov.w	r1, #640	; 0x280
 8003276:	f7ff faed 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800327a:	9905      	ldr	r1, [sp, #20]
 800327c:	4630      	mov	r0, r6
 800327e:	f007 fa89 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_3.setXY(-156, 186);
 8003282:	22ba      	movs	r2, #186	; 0xba
 8003284:	9806      	ldr	r0, [sp, #24]
 8003286:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 800328a:	f7ff fae3 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800328e:	9906      	ldr	r1, [sp, #24]
 8003290:	4630      	mov	r0, r6
 8003292:	f007 fa7f 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_4.setXY(640, 33);
 8003296:	2221      	movs	r2, #33	; 0x21
 8003298:	9807      	ldr	r0, [sp, #28]
 800329a:	f44f 7120 	mov.w	r1, #640	; 0x280
 800329e:	f7ff fad9 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 80032a2:	9907      	ldr	r1, [sp, #28]
 80032a4:	e002      	b.n	80032ac <_ZN17Morpion_2ViewBaseC1Ev+0x7d0>
 80032a6:	bf00      	nop
 80032a8:	ff336699 	.word	0xff336699
 80032ac:	4630      	mov	r0, r6
 80032ae:	f007 fa71 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_4.setXY(-156, 80);
 80032b2:	2250      	movs	r2, #80	; 0x50
 80032b4:	9808      	ldr	r0, [sp, #32]
 80032b6:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80032ba:	f7ff facb 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 80032be:	9908      	ldr	r1, [sp, #32]
 80032c0:	4630      	mov	r0, r6
 80032c2:	f007 fa67 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_5.setXY(-156, -26);
 80032c6:	f06f 0219 	mvn.w	r2, #25
 80032ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80032cc:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80032d0:	f7ff fac0 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 80032d4:	4630      	mov	r0, r6
 80032d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80032d8:	f007 fa5c 	bl	800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032dc:	4620      	mov	r0, r4
 80032de:	b011      	add	sp, #68	; 0x44
 80032e0:	ecbd 8b10 	vpop	{d8-d15}
 80032e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080032e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80032e8:	4770      	bx	lr
	...

080032ec <_Z23getFont_verdana_10_4bppv>:
{
 80032ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80032ee:	4d16      	ldr	r5, [pc, #88]	; (8003348 <_Z23getFont_verdana_10_4bppv+0x5c>)
{
 80032f0:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80032f2:	682c      	ldr	r4, [r5, #0]
 80032f4:	f3bf 8f5b 	dmb	ish
 80032f8:	f014 0401 	ands.w	r4, r4, #1
 80032fc:	d120      	bne.n	8003340 <_Z23getFont_verdana_10_4bppv+0x54>
 80032fe:	4628      	mov	r0, r5
 8003300:	f01d fd4d 	bl	8020d9e <__cxa_guard_acquire>
 8003304:	b1e0      	cbz	r0, 8003340 <_Z23getFont_verdana_10_4bppv+0x54>
 8003306:	233f      	movs	r3, #63	; 0x3f
 8003308:	2201      	movs	r2, #1
 800330a:	4910      	ldr	r1, [pc, #64]	; (800334c <_Z23getFont_verdana_10_4bppv+0x60>)
 800330c:	9309      	str	r3, [sp, #36]	; 0x24
 800330e:	4b10      	ldr	r3, [pc, #64]	; (8003350 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003310:	4810      	ldr	r0, [pc, #64]	; (8003354 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003312:	9308      	str	r3, [sp, #32]
 8003314:	4b10      	ldr	r3, [pc, #64]	; (8003358 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003316:	940a      	str	r4, [sp, #40]	; 0x28
 8003318:	9405      	str	r4, [sp, #20]
 800331a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800331e:	2304      	movs	r3, #4
 8003320:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003324:	230a      	movs	r3, #10
 8003326:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800332a:	9300      	str	r3, [sp, #0]
 800332c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003330:	f7ff f8f4 	bl	800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003334:	4809      	ldr	r0, [pc, #36]	; (800335c <_Z23getFont_verdana_10_4bppv+0x70>)
 8003336:	f01d fd7d 	bl	8020e34 <atexit>
 800333a:	4628      	mov	r0, r5
 800333c:	f01d fd3b 	bl	8020db6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003340:	4804      	ldr	r0, [pc, #16]	; (8003354 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003342:	b00f      	add	sp, #60	; 0x3c
 8003344:	bd30      	pop	{r4, r5, pc}
 8003346:	bf00      	nop
 8003348:	24004984 	.word	0x24004984
 800334c:	90000630 	.word	0x90000630
 8003350:	08023d54 	.word	0x08023d54
 8003354:	24004988 	.word	0x24004988
 8003358:	08023d60 	.word	0x08023d60
 800335c:	080032e9 	.word	0x080032e9

08003360 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 19, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003360:	4770      	bx	lr
	...

08003364 <_Z23getFont_verdana_20_4bppv>:
{
 8003364:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 19, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003366:	4d17      	ldr	r5, [pc, #92]	; (80033c4 <_Z23getFont_verdana_20_4bppv+0x60>)
{
 8003368:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 19, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800336a:	682c      	ldr	r4, [r5, #0]
 800336c:	f3bf 8f5b 	dmb	ish
 8003370:	f014 0401 	ands.w	r4, r4, #1
 8003374:	d122      	bne.n	80033bc <_Z23getFont_verdana_20_4bppv+0x58>
 8003376:	4628      	mov	r0, r5
 8003378:	f01d fd11 	bl	8020d9e <__cxa_guard_acquire>
 800337c:	b1f0      	cbz	r0, 80033bc <_Z23getFont_verdana_20_4bppv+0x58>
 800337e:	233f      	movs	r3, #63	; 0x3f
 8003380:	2201      	movs	r2, #1
 8003382:	4911      	ldr	r1, [pc, #68]	; (80033c8 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003384:	9309      	str	r3, [sp, #36]	; 0x24
 8003386:	4b11      	ldr	r3, [pc, #68]	; (80033cc <_Z23getFont_verdana_20_4bppv+0x68>)
 8003388:	4811      	ldr	r0, [pc, #68]	; (80033d0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800338a:	9308      	str	r3, [sp, #32]
 800338c:	4b11      	ldr	r3, [pc, #68]	; (80033d4 <_Z23getFont_verdana_20_4bppv+0x70>)
 800338e:	940a      	str	r4, [sp, #40]	; 0x28
 8003390:	9405      	str	r4, [sp, #20]
 8003392:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003396:	2304      	movs	r3, #4
 8003398:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800339c:	2314      	movs	r3, #20
 800339e:	2213      	movs	r2, #19
 80033a0:	9300      	str	r3, [sp, #0]
 80033a2:	2318      	movs	r3, #24
 80033a4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80033a8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80033ac:	f7ff f8b6 	bl	800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80033b0:	4809      	ldr	r0, [pc, #36]	; (80033d8 <_Z23getFont_verdana_20_4bppv+0x74>)
 80033b2:	f01d fd3f 	bl	8020e34 <atexit>
 80033b6:	4628      	mov	r0, r5
 80033b8:	f01d fcfd 	bl	8020db6 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80033bc:	4804      	ldr	r0, [pc, #16]	; (80033d0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80033be:	b00f      	add	sp, #60	; 0x3c
 80033c0:	bd30      	pop	{r4, r5, pc}
 80033c2:	bf00      	nop
 80033c4:	240049b4 	.word	0x240049b4
 80033c8:	90000640 	.word	0x90000640
 80033cc:	08023d58 	.word	0x08023d58
 80033d0:	240049b8 	.word	0x240049b8
 80033d4:	08023d64 	.word	0x08023d64
 80033d8:	08003361 	.word	0x08003361

080033dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80033dc:	4770      	bx	lr
	...

080033e0 <_Z23getFont_verdana_40_4bppv>:
{
 80033e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80033e2:	4d16      	ldr	r5, [pc, #88]	; (800343c <_Z23getFont_verdana_40_4bppv+0x5c>)
{
 80033e4:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80033e6:	682c      	ldr	r4, [r5, #0]
 80033e8:	f3bf 8f5b 	dmb	ish
 80033ec:	f014 0401 	ands.w	r4, r4, #1
 80033f0:	d120      	bne.n	8003434 <_Z23getFont_verdana_40_4bppv+0x54>
 80033f2:	4628      	mov	r0, r5
 80033f4:	f01d fcd3 	bl	8020d9e <__cxa_guard_acquire>
 80033f8:	b1e0      	cbz	r0, 8003434 <_Z23getFont_verdana_40_4bppv+0x54>
 80033fa:	233f      	movs	r3, #63	; 0x3f
 80033fc:	2201      	movs	r2, #1
 80033fe:	4910      	ldr	r1, [pc, #64]	; (8003440 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003400:	9309      	str	r3, [sp, #36]	; 0x24
 8003402:	4b10      	ldr	r3, [pc, #64]	; (8003444 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003404:	4810      	ldr	r0, [pc, #64]	; (8003448 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003406:	9308      	str	r3, [sp, #32]
 8003408:	4b10      	ldr	r3, [pc, #64]	; (800344c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800340a:	940a      	str	r4, [sp, #40]	; 0x28
 800340c:	9405      	str	r4, [sp, #20]
 800340e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003412:	2304      	movs	r3, #4
 8003414:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003418:	2328      	movs	r3, #40	; 0x28
 800341a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800341e:	9300      	str	r3, [sp, #0]
 8003420:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003424:	f7ff f87a 	bl	800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003428:	4809      	ldr	r0, [pc, #36]	; (8003450 <_Z23getFont_verdana_40_4bppv+0x70>)
 800342a:	f01d fd03 	bl	8020e34 <atexit>
 800342e:	4628      	mov	r0, r5
 8003430:	f01d fcc1 	bl	8020db6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003434:	4804      	ldr	r0, [pc, #16]	; (8003448 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003436:	b00f      	add	sp, #60	; 0x3c
 8003438:	bd30      	pop	{r4, r5, pc}
 800343a:	bf00      	nop
 800343c:	240049e4 	.word	0x240049e4
 8003440:	9000074c 	.word	0x9000074c
 8003444:	08023d5c 	.word	0x08023d5c
 8003448:	240049e8 	.word	0x240049e8
 800344c:	08023d68 	.word	0x08023d68
 8003450:	080033dd 	.word	0x080033dd

08003454 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003454:	2000      	movs	r0, #0
 8003456:	4770      	bx	lr

08003458 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8003458:	2000      	movs	r0, #0
 800345a:	4770      	bx	lr

0800345c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800345c:	b40e      	push	{r1, r2, r3}
 800345e:	b503      	push	{r0, r1, lr}
 8003460:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003462:	2100      	movs	r1, #0
{
 8003464:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003468:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800346a:	f00d fe99 	bl	80111a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800346e:	b002      	add	sp, #8
 8003470:	f85d eb04 	ldr.w	lr, [sp], #4
 8003474:	b003      	add	sp, #12
 8003476:	4770      	bx	lr

08003478 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003478:	b40c      	push	{r2, r3}
 800347a:	b507      	push	{r0, r1, r2, lr}
 800347c:	ab04      	add	r3, sp, #16
 800347e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003482:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003484:	f00d fe8c 	bl	80111a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003488:	b003      	add	sp, #12
 800348a:	f85d eb04 	ldr.w	lr, [sp], #4
 800348e:	b002      	add	sp, #8
 8003490:	4770      	bx	lr
	...

08003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003494:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8003496:	b510      	push	{r4, lr}
 8003498:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800349a:	b373      	cbz	r3, 80034fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800349c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800349e:	b92b      	cbnz	r3, 80034ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80034a0:	4b18      	ldr	r3, [pc, #96]	; (8003504 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80034a2:	21c5      	movs	r1, #197	; 0xc5
 80034a4:	4a18      	ldr	r2, [pc, #96]	; (8003508 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80034a6:	4819      	ldr	r0, [pc, #100]	; (800350c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80034a8:	f01d fca6 	bl	8020df8 <__assert_func>
            return buffer[pos];
 80034ac:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80034ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80034b2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80034b4:	b30b      	cbz	r3, 80034fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80034b6:	f00f fa11 	bl	80128dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80034ba:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80034bc:	2b01      	cmp	r3, #1
 80034be:	d803      	bhi.n	80034c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80034c0:	4b13      	ldr	r3, [pc, #76]	; (8003510 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80034c2:	21cb      	movs	r1, #203	; 0xcb
 80034c4:	4a13      	ldr	r2, [pc, #76]	; (8003514 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80034c6:	e7ee      	b.n	80034a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80034c8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80034ca:	f640 103f 	movw	r0, #2367	; 0x93f
 80034ce:	1c53      	adds	r3, r2, #1
 80034d0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80034d2:	2b09      	cmp	r3, #9
 80034d4:	4619      	mov	r1, r3
 80034d6:	bf88      	it	hi
 80034d8:	f1a3 010a 	subhi.w	r1, r3, #10
 80034dc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80034e0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80034e2:	4281      	cmp	r1, r0
 80034e4:	d109      	bne.n	80034fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80034e6:	2b0a      	cmp	r3, #10
 80034e8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80034ec:	bf28      	it	cs
 80034ee:	2300      	movcs	r3, #0
            return buffer[pos];
 80034f0:	8c50      	ldrh	r0, [r2, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80034f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80034f6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80034f8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80034fa:	4620      	mov	r0, r4
}
 80034fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003500:	f00f b8ee 	b.w	80126e0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003504:	08022dc0 	.word	0x08022dc0
 8003508:	08022dc9 	.word	0x08022dc9
 800350c:	08022e74 	.word	0x08022e74
 8003510:	08022ebe 	.word	0x08022ebe
 8003514:	08022ecc 	.word	0x08022ecc

08003518 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003518:	f00f b8ab 	b.w	8012672 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800351c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800351c:	b510      	push	{r4, lr}
 800351e:	b086      	sub	sp, #24
 8003520:	ac02      	add	r4, sp, #8
 8003522:	e884 0006 	stmia.w	r4, {r1, r2}
 8003526:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003528:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800352a:	4621      	mov	r1, r4
    va_start(pArg, format);
 800352c:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800352e:	9301      	str	r3, [sp, #4]
 8003530:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003532:	9300      	str	r3, [sp, #0]
 8003534:	9b08      	ldr	r3, [sp, #32]
 8003536:	f00c fa67 	bl	800fa08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800353a:	b006      	add	sp, #24
 800353c:	bd10      	pop	{r4, pc}
	...

08003540 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003540:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003542:	bb18      	cbnz	r0, 800358c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003544:	4b12      	ldr	r3, [pc, #72]	; (8003590 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003546:	4813      	ldr	r0, [pc, #76]	; (8003594 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003548:	681c      	ldr	r4, [r3, #0]
 800354a:	4913      	ldr	r1, [pc, #76]	; (8003598 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800354c:	b1b4      	cbz	r4, 800357c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800354e:	6822      	ldr	r2, [r4, #0]
 8003550:	4422      	add	r2, r4
 8003552:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003554:	6862      	ldr	r2, [r4, #4]
 8003556:	4422      	add	r2, r4
 8003558:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800355a:	68a2      	ldr	r2, [r4, #8]
 800355c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800355e:	4b0f      	ldr	r3, [pc, #60]	; (800359c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003560:	2200      	movs	r2, #0
 8003562:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003564:	f000 f838 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8003568:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800356a:	f000 f833 	bl	80035d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800356e:	4b0c      	ldr	r3, [pc, #48]	; (80035a0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003570:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003572:	4b0c      	ldr	r3, [pc, #48]	; (80035a4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003574:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003576:	4b0c      	ldr	r3, [pc, #48]	; (80035a8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003578:	8018      	strh	r0, [r3, #0]
    }
}
 800357a:	e007      	b.n	800358c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800357c:	4b0b      	ldr	r3, [pc, #44]	; (80035ac <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800357e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003580:	4b0b      	ldr	r3, [pc, #44]	; (80035b0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003582:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003584:	4b0b      	ldr	r3, [pc, #44]	; (80035b4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003586:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003588:	2c00      	cmp	r4, #0
 800358a:	d1e8      	bne.n	800355e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800358c:	bd38      	pop	{r3, r4, r5, pc}
 800358e:	bf00      	nop
 8003590:	24004a14 	.word	0x24004a14
 8003594:	24004a18 	.word	0x24004a18
 8003598:	24004a1c 	.word	0x24004a1c
 800359c:	24004a20 	.word	0x24004a20
 80035a0:	2400e47c 	.word	0x2400e47c
 80035a4:	2400e484 	.word	0x2400e484
 80035a8:	2400e480 	.word	0x2400e480
 80035ac:	90000770 	.word	0x90000770
 80035b0:	9000075c 	.word	0x9000075c
 80035b4:	900007e8 	.word	0x900007e8

080035b8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80035b8:	4b04      	ldr	r3, [pc, #16]	; (80035cc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80035c0:	4b03      	ldr	r3, [pc, #12]	; (80035d0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80035c2:	681b      	ldr	r3, [r3, #0]
}
 80035c4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80035c8:	4770      	bx	lr
 80035ca:	bf00      	nop
 80035cc:	24004a1c 	.word	0x24004a1c
 80035d0:	24004a18 	.word	0x24004a18

080035d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80035d4:	2005      	movs	r0, #5
 80035d6:	4770      	bx	lr

080035d8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80035d8:	4800      	ldr	r0, [pc, #0]	; (80035dc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80035da:	4770      	bx	lr
 80035dc:	24004a24 	.word	0x24004a24

080035e0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80035e0:	b510      	push	{r4, lr}
};
 80035e2:	4c05      	ldr	r4, [pc, #20]	; (80035f8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
 80035e4:	f7ff febe 	bl	8003364 <_Z23getFont_verdana_20_4bppv>
};
 80035e8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80035ea:	f7ff fef9 	bl	80033e0 <_Z23getFont_verdana_40_4bppv>
};
 80035ee:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80035f0:	f7ff fe7c 	bl	80032ec <_Z23getFont_verdana_10_4bppv>
};
 80035f4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80035f6:	bd10      	pop	{r4, pc}
 80035f8:	24004a24 	.word	0x24004a24

080035fc <_ZN6CercleD1Ev>:
 80035fc:	4b03      	ldr	r3, [pc, #12]	; (800360c <_ZN6CercleD1Ev+0x10>)
 80035fe:	b510      	push	{r4, lr}
 8003600:	4604      	mov	r4, r0
 8003602:	6003      	str	r3, [r0, #0]
 8003604:	f7fe fcc1 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 8003608:	4620      	mov	r0, r4
 800360a:	bd10      	pop	{r4, pc}
 800360c:	08022fa8 	.word	0x08022fa8

08003610 <_ZN6CercleD0Ev>:
 8003610:	b510      	push	{r4, lr}
 8003612:	4604      	mov	r4, r0
 8003614:	f7ff fff2 	bl	80035fc <_ZN6CercleD1Ev>
 8003618:	2188      	movs	r1, #136	; 0x88
 800361a:	4620      	mov	r0, r4
 800361c:	f01d fbbd 	bl	8020d9a <_ZdlPvj>
 8003620:	4620      	mov	r0, r4
 8003622:	bd10      	pop	{r4, pc}

08003624 <_ZN6CercleC1Ev>:
#include <gui/containers/Cercle.hpp>

Cercle::Cercle()
 8003624:	b510      	push	{r4, lr}
 8003626:	4604      	mov	r4, r0
 8003628:	f7fe fcb8 	bl	8001f9c <_ZN10CercleBaseC1Ev>
 800362c:	4b01      	ldr	r3, [pc, #4]	; (8003634 <_ZN6CercleC1Ev+0x10>)
{

}
 800362e:	4620      	mov	r0, r4
Cercle::Cercle()
 8003630:	6023      	str	r3, [r4, #0]
}
 8003632:	bd10      	pop	{r4, pc}
 8003634:	08022fa8 	.word	0x08022fa8

08003638 <_ZN6Cercle10initializeEv>:

void Cercle::initialize()
{
    CercleBase::initialize();
 8003638:	f7fe bca8 	b.w	8001f8c <_ZN10CercleBase10initializeEv>

0800363c <_ZN5CroixC1Ev>:
#include <gui/containers/Croix.hpp>

Croix::Croix()
 800363c:	b510      	push	{r4, lr}
 800363e:	4604      	mov	r4, r0
 8003640:	f7fe fd2c 	bl	800209c <_ZN9CroixBaseC1Ev>
 8003644:	4b01      	ldr	r3, [pc, #4]	; (800364c <_ZN5CroixC1Ev+0x10>)
{

}
 8003646:	4620      	mov	r0, r4
Croix::Croix()
 8003648:	6023      	str	r3, [r4, #0]
}
 800364a:	bd10      	pop	{r4, pc}
 800364c:	0802303c 	.word	0x0802303c

08003650 <_ZN5Croix10initializeEv>:

void Croix::initialize()
{
    CroixBase::initialize();
 8003650:	f7fe bcff 	b.w	8002052 <_ZN9CroixBase10initializeEv>

08003654 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003654:	4770      	bx	lr

08003656 <_ZN19FrontendApplicationD0Ev>:
 8003656:	b510      	push	{r4, lr}
 8003658:	4604      	mov	r4, r0
 800365a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800365e:	f01d fb9c 	bl	8020d9a <_ZdlPvj>
 8003662:	4620      	mov	r0, r4
 8003664:	bd10      	pop	{r4, pc}

08003666 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003666:	b510      	push	{r4, lr}
 8003668:	4604      	mov	r4, r0
    {
        model.tick();
 800366a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800366e:	f000 f832 	bl	80036d6 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003672:	4620      	mov	r0, r4
    }
 8003674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003678:	f00c bec6 	b.w	8010408 <_ZN8touchgfx11Application15handleTickEventEv>

0800367c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800367c:	b510      	push	{r4, lr}
 800367e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003680:	f7fe feda 	bl	8002438 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003684:	4b01      	ldr	r3, [pc, #4]	; (800368c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003686:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003688:	6023      	str	r3, [r4, #0]
}
 800368a:	bd10      	pop	{r4, pc}
 800368c:	080230d0 	.word	0x080230d0

08003690 <_ZN6GrilleD1Ev>:
 8003690:	4b03      	ldr	r3, [pc, #12]	; (80036a0 <_ZN6GrilleD1Ev+0x10>)
 8003692:	b510      	push	{r4, lr}
 8003694:	4604      	mov	r4, r0
 8003696:	6003      	str	r3, [r0, #0]
 8003698:	f7fe ff70 	bl	800257c <_ZN10GrilleBaseD1Ev>
 800369c:	4620      	mov	r0, r4
 800369e:	bd10      	pop	{r4, pc}
 80036a0:	08023124 	.word	0x08023124

080036a4 <_ZN6GrilleD0Ev>:
 80036a4:	b510      	push	{r4, lr}
 80036a6:	4604      	mov	r4, r0
 80036a8:	f7ff fff2 	bl	8003690 <_ZN6GrilleD1Ev>
 80036ac:	21dc      	movs	r1, #220	; 0xdc
 80036ae:	4620      	mov	r0, r4
 80036b0:	f01d fb73 	bl	8020d9a <_ZdlPvj>
 80036b4:	4620      	mov	r0, r4
 80036b6:	bd10      	pop	{r4, pc}

080036b8 <_ZN6GrilleC1Ev>:
#include <gui/containers/Grille.hpp>

Grille::Grille()
 80036b8:	b510      	push	{r4, lr}
 80036ba:	4604      	mov	r4, r0
 80036bc:	f7fe ff68 	bl	8002590 <_ZN10GrilleBaseC1Ev>
 80036c0:	4b01      	ldr	r3, [pc, #4]	; (80036c8 <_ZN6GrilleC1Ev+0x10>)
{

}
 80036c2:	4620      	mov	r0, r4
Grille::Grille()
 80036c4:	6023      	str	r3, [r4, #0]
}
 80036c6:	bd10      	pop	{r4, pc}
 80036c8:	08023124 	.word	0x08023124

080036cc <_ZN6Grille10initializeEv>:

void Grille::initialize()
{
    GrilleBase::initialize();
 80036cc:	f7fe bf57 	b.w	800257e <_ZN10GrilleBase10initializeEv>

080036d0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80036d0:	2200      	movs	r2, #0
 80036d2:	6002      	str	r2, [r0, #0]
{

}
 80036d4:	4770      	bx	lr

080036d6 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80036d6:	4770      	bx	lr

080036d8 <_ZN18Morpion_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Morpion_2Presenter() {}
 80036d8:	4770      	bx	lr

080036da <_ZThn4_N18Morpion_2PresenterD1Ev>:
 80036da:	3804      	subs	r0, #4
 80036dc:	4770      	bx	lr

080036de <_ZN18Morpion_2Presenter10deactivateEv>:
}

void Morpion_2Presenter::activate()
{

}
 80036de:	4770      	bx	lr

080036e0 <_ZN18Morpion_2PresenterD0Ev>:
 80036e0:	b510      	push	{r4, lr}
 80036e2:	4604      	mov	r4, r0
 80036e4:	2110      	movs	r1, #16
 80036e6:	f01d fb58 	bl	8020d9a <_ZdlPvj>
 80036ea:	4620      	mov	r0, r4
 80036ec:	bd10      	pop	{r4, pc}

080036ee <_ZThn4_N18Morpion_2PresenterD0Ev>:
 80036ee:	f1a0 0004 	sub.w	r0, r0, #4
 80036f2:	e7f5      	b.n	80036e0 <_ZN18Morpion_2PresenterD0Ev>

080036f4 <_ZN18Morpion_2PresenterC1ER13Morpion_2View>:
    ModelListener() : model(0) {}
 80036f4:	2200      	movs	r2, #0
    : view(v)
 80036f6:	60c1      	str	r1, [r0, #12]
 80036f8:	6082      	str	r2, [r0, #8]
 80036fa:	4a04      	ldr	r2, [pc, #16]	; (800370c <_ZN18Morpion_2PresenterC1ER13Morpion_2View+0x18>)
Morpion_2Presenter::Morpion_2Presenter(Morpion_2View& v)
 80036fc:	b510      	push	{r4, lr}
    : view(v)
 80036fe:	f102 0408 	add.w	r4, r2, #8
 8003702:	3220      	adds	r2, #32
 8003704:	6004      	str	r4, [r0, #0]
 8003706:	6042      	str	r2, [r0, #4]
}
 8003708:	bd10      	pop	{r4, pc}
 800370a:	bf00      	nop
 800370c:	080231b0 	.word	0x080231b0

08003710 <_ZN13Morpion_2View14tearDownScreenEv>:
}

void Morpion_2View::tearDownScreen()
{
    Morpion_2ViewBase::tearDownScreen();
}
 8003710:	4770      	bx	lr
	...

08003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>:
	Cercle_4.moveTo(-156,-26);
	turn=0;
}

void Morpion_2View::PlayMove(Drawable& Button)
{
 8003714:	b513      	push	{r0, r1, r4, lr}
 8003716:	460b      	mov	r3, r1
 8003718:	2200      	movs	r2, #0
	Button.setTouchable(0);
	int X= Button.getX(),Y= Button.getY();
	if(turn%2==0)
 800371a:	4c15      	ldr	r4, [pc, #84]	; (8003770 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE+0x5c>)
 800371c:	f881 2024 	strb.w	r2, [r1, #36]	; 0x24
        return rect.y;
 8003720:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8003724:	6823      	ldr	r3, [r4, #0]
        return rect.x;
 8003726:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 800372a:	07d8      	lsls	r0, r3, #31
 800372c:	d40c      	bmi.n	8003748 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE+0x34>
		Croix[turn/2]->moveTo(X,Y);
 800372e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8003732:	4810      	ldr	r0, [pc, #64]	; (8003774 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE+0x60>)
 8003734:	105b      	asrs	r3, r3, #1
 8003736:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800373a:	6803      	ldr	r3, [r0, #0]
 800373c:	e9cd 1200 	strd	r1, r2, [sp]
 8003740:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003742:	4798      	blx	r3
 8003744:	e9dd 1200 	ldrd	r1, r2, [sp]
	if(turn%2==1)
 8003748:	6823      	ldr	r3, [r4, #0]
 800374a:	2b00      	cmp	r3, #0
 800374c:	f003 0001 	and.w	r0, r3, #1
 8003750:	bfb8      	it	lt
 8003752:	4240      	neglt	r0, r0
 8003754:	2801      	cmp	r0, #1
 8003756:	d106      	bne.n	8003766 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE+0x52>
		Cercle[turn/2]->moveTo(X,Y);
 8003758:	105b      	asrs	r3, r3, #1
 800375a:	4807      	ldr	r0, [pc, #28]	; (8003778 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE+0x64>)
 800375c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8003760:	6803      	ldr	r3, [r0, #0]
 8003762:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003764:	4798      	blx	r3
	turn++;
 8003766:	6823      	ldr	r3, [r4, #0]
 8003768:	3301      	adds	r3, #1
 800376a:	6023      	str	r3, [r4, #0]
}
 800376c:	b002      	add	sp, #8
 800376e:	bd10      	pop	{r4, pc}
 8003770:	24004a54 	.word	0x24004a54
 8003774:	24004a40 	.word	0x24004a40
 8003778:	24004a30 	.word	0x24004a30

0800377c <_ZN13Morpion_2View10button_0_0Ev>:


void Morpion_2View::button_0_0()
{
	Morpion_2View::PlayMove(Button_0_0);
 800377c:	f200 718c 	addw	r1, r0, #1932	; 0x78c
 8003780:	f7ff bfc8 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

08003784 <_ZN13Morpion_2View10button_0_1Ev>:
}

void Morpion_2View::button_0_1()
{
	Morpion_2View::PlayMove(Button_0_1);
 8003784:	f200 7114 	addw	r1, r0, #1812	; 0x714
 8003788:	f7ff bfc4 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

0800378c <_ZN13Morpion_2View10button_0_2Ev>:
}

void Morpion_2View::button_0_2()
{
	Morpion_2View::PlayMove(Button_0_2);
 800378c:	f200 619c 	addw	r1, r0, #1692	; 0x69c
 8003790:	f7ff bfc0 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

08003794 <_ZN13Morpion_2View10button_1_0Ev>:
}

void Morpion_2View::button_1_0()
{
	Morpion_2View::PlayMove(Button_1_0);
 8003794:	f200 6124 	addw	r1, r0, #1572	; 0x624
 8003798:	f7ff bfbc 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

0800379c <_ZN13Morpion_2View10button_1_1Ev>:
}

void Morpion_2View::button_1_1()
{
	Morpion_2View::PlayMove(Button_1_1);
 800379c:	f200 51ac 	addw	r1, r0, #1452	; 0x5ac
 80037a0:	f7ff bfb8 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

080037a4 <_ZN13Morpion_2View10button_1_2Ev>:
}

void Morpion_2View::button_1_2()
{
	Morpion_2View::PlayMove(Button_1_2);
 80037a4:	f200 5134 	addw	r1, r0, #1332	; 0x534
 80037a8:	f7ff bfb4 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

080037ac <_ZN13Morpion_2View10button_2_0Ev>:
}

void Morpion_2View::button_2_0()
{
	Morpion_2View::PlayMove(Button_2_0);
 80037ac:	f200 41bc 	addw	r1, r0, #1212	; 0x4bc
 80037b0:	f7ff bfb0 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

080037b4 <_ZN13Morpion_2View10button_2_1Ev>:
}

void Morpion_2View::button_2_1()
{
	Morpion_2View::PlayMove(Button_2_1);
 80037b4:	f200 4144 	addw	r1, r0, #1092	; 0x444
 80037b8:	f7ff bfac 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

080037bc <_ZN13Morpion_2View10button_2_2Ev>:
}

void Morpion_2View::button_2_2()
{
	Morpion_2View::PlayMove(Button_2_2);
 80037bc:	f500 7173 	add.w	r1, r0, #972	; 0x3cc
 80037c0:	f7ff bfa8 	b.w	8003714 <_ZN13Morpion_2View8PlayMoveERN8touchgfx8DrawableE>

080037c4 <_ZN13Morpion_2ViewD1Ev>:

class Morpion_2View : public Morpion_2ViewBase
{
public:
    Morpion_2View();
    virtual ~Morpion_2View() {}
 80037c4:	4b03      	ldr	r3, [pc, #12]	; (80037d4 <_ZN13Morpion_2ViewD1Ev+0x10>)
 80037c6:	b510      	push	{r4, lr}
 80037c8:	4604      	mov	r4, r0
 80037ca:	6003      	str	r3, [r0, #0]
 80037cc:	f7ff f8f6 	bl	80029bc <_ZN17Morpion_2ViewBaseD1Ev>
 80037d0:	4620      	mov	r0, r4
 80037d2:	bd10      	pop	{r4, pc}
 80037d4:	080231e0 	.word	0x080231e0

080037d8 <_ZN13Morpion_2ViewD0Ev>:
 80037d8:	b510      	push	{r4, lr}
 80037da:	4604      	mov	r4, r0
 80037dc:	f7ff fff2 	bl	80037c4 <_ZN13Morpion_2ViewD1Ev>
 80037e0:	f243 51b8 	movw	r1, #13752	; 0x35b8
 80037e4:	4620      	mov	r0, r4
 80037e6:	f01d fad8 	bl	8020d9a <_ZdlPvj>
 80037ea:	4620      	mov	r0, r4
 80037ec:	bd10      	pop	{r4, pc}
	...

080037f0 <_ZN13Morpion_2View14restart_buttonEv>:
        touchable = touch;
 80037f0:	2301      	movs	r3, #1
	Croix_1.moveTo(-156,-26);
 80037f2:	f06f 0219 	mvn.w	r2, #25
 80037f6:	f06f 019b 	mvn.w	r1, #155	; 0x9b
{
 80037fa:	b510      	push	{r4, lr}
 80037fc:	4604      	mov	r4, r0
 80037fe:	f880 37b0 	strb.w	r3, [r0, #1968]	; 0x7b0
 8003802:	f880 3738 	strb.w	r3, [r0, #1848]	; 0x738
 8003806:	f880 36c0 	strb.w	r3, [r0, #1728]	; 0x6c0
 800380a:	f880 3648 	strb.w	r3, [r0, #1608]	; 0x648
 800380e:	f880 35d0 	strb.w	r3, [r0, #1488]	; 0x5d0
 8003812:	f880 3558 	strb.w	r3, [r0, #1368]	; 0x558
 8003816:	f880 34e0 	strb.w	r3, [r0, #1248]	; 0x4e0
 800381a:	f880 3468 	strb.w	r3, [r0, #1128]	; 0x468
 800381e:	f880 33f0 	strb.w	r3, [r0, #1008]	; 0x3f0
	Croix_1.moveTo(-156,-26);
 8003822:	f600 0004 	addw	r0, r0, #2052	; 0x804
 8003826:	f7fd fbf0 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_2.moveTo(-156,-26);
 800382a:	f06f 0219 	mvn.w	r2, #25
 800382e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003832:	f604 2048 	addw	r0, r4, #2632	; 0xa48
 8003836:	f7fd fbe8 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_3.moveTo(-156,-26);
 800383a:	f06f 0219 	mvn.w	r2, #25
 800383e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003842:	f604 4004 	addw	r0, r4, #3076	; 0xc04
 8003846:	f7fd fbe0 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_4.moveTo(-156,-26);
 800384a:	f06f 0219 	mvn.w	r2, #25
 800384e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003852:	f504 605c 	add.w	r0, r4, #3520	; 0xdc0
 8003856:	f7fd fbd8 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_5.moveTo(-156,-26);
 800385a:	f06f 0219 	mvn.w	r2, #25
 800385e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003862:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
 8003866:	f7fd fbd0 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_1.moveTo(-156,-26);
 800386a:	f06f 0219 	mvn.w	r2, #25
 800386e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003872:	f604 1038 	addw	r0, r4, #2360	; 0x938
 8003876:	f7fd fbc8 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_2.moveTo(-156,-26);
 800387a:	f06f 0219 	mvn.w	r2, #25
 800387e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003882:	f504 601c 	add.w	r0, r4, #2496	; 0x9c0
 8003886:	f7fd fbc0 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_3.moveTo(-156,-26);
 800388a:	f06f 0219 	mvn.w	r2, #25
 800388e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003892:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
 8003896:	f7fd fbb8 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_4.moveTo(-156,-26);
 800389a:	f06f 0219 	mvn.w	r2, #25
 800389e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80038a2:	f604 5038 	addw	r0, r4, #3384	; 0xd38
 80038a6:	f7fd fbb0 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	turn=0;
 80038aa:	4b02      	ldr	r3, [pc, #8]	; (80038b4 <_ZN13Morpion_2View14restart_buttonEv+0xc4>)
 80038ac:	2200      	movs	r2, #0
 80038ae:	601a      	str	r2, [r3, #0]
}
 80038b0:	bd10      	pop	{r4, pc}
 80038b2:	bf00      	nop
 80038b4:	24004a54 	.word	0x24004a54

080038b8 <_ZN13Morpion_2ViewC1Ev>:
Morpion_2View::Morpion_2View()
 80038b8:	b510      	push	{r4, lr}
 80038ba:	4604      	mov	r4, r0
 80038bc:	f7ff f90e 	bl	8002adc <_ZN17Morpion_2ViewBaseC1Ev>
 80038c0:	4b10      	ldr	r3, [pc, #64]	; (8003904 <_ZN13Morpion_2ViewC1Ev+0x4c>)
	Croix[0]=&Croix_1;
 80038c2:	f604 0204 	addw	r2, r4, #2052	; 0x804
	Cercle[0]=&Cercle_1;
 80038c6:	f604 1138 	addw	r1, r4, #2360	; 0x938
Morpion_2View::Morpion_2View()
 80038ca:	6023      	str	r3, [r4, #0]
}
 80038cc:	4620      	mov	r0, r4
	Croix[0]=&Croix_1;
 80038ce:	4b0e      	ldr	r3, [pc, #56]	; (8003908 <_ZN13Morpion_2ViewC1Ev+0x50>)
 80038d0:	601a      	str	r2, [r3, #0]
	Cercle[0]=&Cercle_1;
 80038d2:	4a0e      	ldr	r2, [pc, #56]	; (800390c <_ZN13Morpion_2ViewC1Ev+0x54>)
 80038d4:	6011      	str	r1, [r2, #0]
	Croix[1]=&Croix_2;
 80038d6:	f604 2148 	addw	r1, r4, #2632	; 0xa48
 80038da:	6059      	str	r1, [r3, #4]
	Cercle[1]=&Cercle_2;
 80038dc:	f504 611c 	add.w	r1, r4, #2496	; 0x9c0
 80038e0:	6051      	str	r1, [r2, #4]
	Croix[2]=&Croix_3;
 80038e2:	f604 4104 	addw	r1, r4, #3076	; 0xc04
 80038e6:	6099      	str	r1, [r3, #8]
	Cercle[2]=&Cercle_3;
 80038e8:	f604 317c 	addw	r1, r4, #2940	; 0xb7c
 80038ec:	6091      	str	r1, [r2, #8]
	Croix[3]=&Croix_4;
 80038ee:	f504 615c 	add.w	r1, r4, #3520	; 0xdc0
 80038f2:	60d9      	str	r1, [r3, #12]
	Cercle[3]=&Cercle_4;
 80038f4:	f604 5138 	addw	r1, r4, #3384	; 0xd38
 80038f8:	60d1      	str	r1, [r2, #12]
	Croix[4]=&Croix_5;
 80038fa:	f604 62f4 	addw	r2, r4, #3828	; 0xef4
 80038fe:	611a      	str	r2, [r3, #16]
}
 8003900:	bd10      	pop	{r4, pc}
 8003902:	bf00      	nop
 8003904:	080231e0 	.word	0x080231e0
 8003908:	24004a40 	.word	0x24004a40
 800390c:	24004a30 	.word	0x24004a30

08003910 <_ZN13Morpion_2View11setupScreenEv>:
    Morpion_2ViewBase::setupScreen();
 8003910:	f7fe bf2e 	b.w	8002770 <_ZN17Morpion_2ViewBase11setupScreenEv>

08003914 <EXC7200_GetCapabilities>:
  (void)(pObj);
  
  /* Store component's capabilities */
  Capabilities->MultiTouch = 0;
  Capabilities->Gesture    = 0;
  Capabilities->MaxTouch   = EXC7200_MAX_NB_TOUCH;
 8003914:	2301      	movs	r3, #1
  Capabilities->MultiTouch = 0;
 8003916:	2000      	movs	r0, #0
  Capabilities->MaxTouch   = EXC7200_MAX_NB_TOUCH;
 8003918:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxXl      = EXC7200_MAX_X_LENGTH;
 800391a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  Capabilities->MultiTouch = 0;
 800391e:	8008      	strh	r0, [r1, #0]
  Capabilities->MaxYl      = EXC7200_MAX_Y_LENGTH;
 8003920:	e9c1 3301 	strd	r3, r3, [r1, #4]
  
  return EXC7200_OK;
}
 8003924:	4770      	bx	lr

08003926 <EXC7200_GestureConfig>:
  */
int32_t EXC7200_GestureConfig(EXC7200_Object_t *pObj, EXC7200_Gesture_Init_t *GestureInit)
{
  /* Feature not supported */
  return EXC7200_ERROR;  
}
 8003926:	f04f 30ff 	mov.w	r0, #4294967295
 800392a:	4770      	bx	lr

0800392c <EXC7200_EnableIT>:
  */
int32_t EXC7200_EnableIT(EXC7200_Object_t *pObj)
{
  /* Feature not supported */
  return EXC7200_ERROR;
}
 800392c:	f04f 30ff 	mov.w	r0, #4294967295
 8003930:	4770      	bx	lr

08003932 <ReadRegWrap>:
  * @param  pData The target register value to be read
  * @param  Length buffer size to be read
  * @retval Component status.
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8003932:	b410      	push	{r4}
  EXC7200_Object_t *pObj = (EXC7200_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8003934:	6904      	ldr	r4, [r0, #16]
 8003936:	8900      	ldrh	r0, [r0, #8]
 8003938:	46a4      	mov	ip, r4
}
 800393a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 800393e:	4760      	bx	ip

08003940 <WriteRegWrap>:
  * @param  pData The target register value to be written
  * @param  Length buffer size to be written
  * @retval Component status.
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8003940:	b410      	push	{r4}
  EXC7200_Object_t *pObj = (EXC7200_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8003942:	68c4      	ldr	r4, [r0, #12]
 8003944:	8900      	ldrh	r0, [r0, #8]
 8003946:	46a4      	mov	ip, r4
}
 8003948:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 800394c:	4760      	bx	ip

0800394e <EXC7200_ReadID>:
{
 800394e:	b513      	push	{r0, r1, r4, lr}
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, &data, 1) == EXC7200_OK)
 8003950:	2301      	movs	r3, #1
{
 8003952:	460c      	mov	r4, r1
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, &data, 1) == EXC7200_OK)
 8003954:	f10d 0207 	add.w	r2, sp, #7
 8003958:	2109      	movs	r1, #9
 800395a:	3018      	adds	r0, #24
 800395c:	f000 f888 	bl	8003a70 <exc7200_read_reg>
 8003960:	b920      	cbnz	r0, 800396c <EXC7200_ReadID+0x1e>
    *Id = EXC7200_ID; 
 8003962:	f44f 43e4 	mov.w	r3, #29184	; 0x7200
 8003966:	6023      	str	r3, [r4, #0]
}
 8003968:	b002      	add	sp, #8
 800396a:	bd10      	pop	{r4, pc}
  int32_t ret = EXC7200_ERROR;
 800396c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003970:	e7fa      	b.n	8003968 <EXC7200_ReadID+0x1a>

08003972 <EXC7200_Init>:
{
 8003972:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 8003974:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8003978:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 800397a:	b933      	cbnz	r3, 800398a <EXC7200_Init+0x18>
    if(pObj->IO.Init() != EXC7200_OK)
 800397c:	6803      	ldr	r3, [r0, #0]
 800397e:	4798      	blx	r3
 8003980:	b928      	cbnz	r0, 800398e <EXC7200_Init+0x1c>
      pObj->IsInitialized = 1;
 8003982:	2301      	movs	r3, #1
 8003984:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
}
 8003988:	bd10      	pop	{r4, pc}
  int32_t ret = EXC7200_OK;
 800398a:	2000      	movs	r0, #0
 800398c:	e7fc      	b.n	8003988 <EXC7200_Init+0x16>
      ret = EXC7200_ERROR;
 800398e:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003992:	e7f9      	b.n	8003988 <EXC7200_Init+0x16>

08003994 <EXC7200_DeInit>:
{
 8003994:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 1U)
 8003996:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 800399a:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 1U)
 800399c:	2b01      	cmp	r3, #1
 800399e:	d105      	bne.n	80039ac <EXC7200_DeInit+0x18>
    if(pObj->IO.DeInit() != EXC7200_OK)
 80039a0:	6843      	ldr	r3, [r0, #4]
 80039a2:	4798      	blx	r3
 80039a4:	b920      	cbnz	r0, 80039b0 <EXC7200_DeInit+0x1c>
      pObj->IsInitialized = 0;
 80039a6:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
}
 80039aa:	bd10      	pop	{r4, pc}
  int32_t ret = EXC7200_OK;
 80039ac:	2000      	movs	r0, #0
 80039ae:	e7fc      	b.n	80039aa <EXC7200_DeInit+0x16>
      ret = EXC7200_ERROR;
 80039b0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 80039b4:	e7f9      	b.n	80039aa <EXC7200_DeInit+0x16>

080039b6 <EXC7200_DisableIT>:
 80039b6:	f04f 30ff 	mov.w	r0, #4294967295
 80039ba:	4770      	bx	lr

080039bc <EXC7200_GetMultiTouchState>:
 80039bc:	f04f 30ff 	mov.w	r0, #4294967295
 80039c0:	4770      	bx	lr

080039c2 <EXC7200_GetGesture>:
 80039c2:	f04f 30ff 	mov.w	r0, #4294967295
 80039c6:	4770      	bx	lr

080039c8 <EXC7200_ITStatus>:
 80039c8:	f04f 30ff 	mov.w	r0, #4294967295
 80039cc:	4770      	bx	lr

080039ce <EXC7200_ClearIT>:
 80039ce:	f04f 30ff 	mov.w	r0, #4294967295
 80039d2:	4770      	bx	lr

080039d4 <EXC7200_GetState>:
{
 80039d4:	b530      	push	{r4, r5, lr}
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 80039d6:	f100 0518 	add.w	r5, r0, #24
{
 80039da:	b085      	sub	sp, #20
 80039dc:	460c      	mov	r4, r1
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 80039de:	230a      	movs	r3, #10
 80039e0:	aa01      	add	r2, sp, #4
 80039e2:	2109      	movs	r1, #9
 80039e4:	4628      	mov	r0, r5
 80039e6:	f000 f843 	bl	8003a70 <exc7200_read_reg>
 80039ea:	bb08      	cbnz	r0, 8003a30 <EXC7200_GetState+0x5c>
    if(pData[1] == 0x83U)
 80039ec:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80039f0:	f1a3 0283 	sub.w	r2, r3, #131	; 0x83
 80039f4:	4253      	negs	r3, r2
 80039f6:	4153      	adcs	r3, r2
  State->TouchDetected = (uint32_t)EXC7200_DetectTouch(pObj, data, (uint32_t)sizeof(data));
 80039f8:	6023      	str	r3, [r4, #0]
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 80039fa:	2109      	movs	r1, #9
  State->TouchX = (((data[3]&0x00ff) << 4) | ((data[2]&0x00f0) >> 4)) << 1;
 80039fc:	f89d 3006 	ldrb.w	r3, [sp, #6]
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003a00:	4628      	mov	r0, r5
  State->TouchX = (((data[3]&0x00ff) << 4) | ((data[2]&0x00f0) >> 4)) << 1;
 8003a02:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003a06:	091b      	lsrs	r3, r3, #4
 8003a08:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
  State->TouchY = (((data[5]&0x00ff) << 4) | ((data[4]&0x00f0) >> 4)) << 1;
 8003a0c:	f89d 2009 	ldrb.w	r2, [sp, #9]
  State->TouchX = (((data[3]&0x00ff) << 4) | ((data[2]&0x00f0) >> 4)) << 1;
 8003a10:	005b      	lsls	r3, r3, #1
 8003a12:	6063      	str	r3, [r4, #4]
  State->TouchY = (((data[5]&0x00ff) << 4) | ((data[4]&0x00f0) >> 4)) << 1;
 8003a14:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8003a18:	091b      	lsrs	r3, r3, #4
 8003a1a:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003a1e:	aa01      	add	r2, sp, #4
  State->TouchY = (((data[5]&0x00ff) << 4) | ((data[4]&0x00f0) >> 4)) << 1;
 8003a20:	005b      	lsls	r3, r3, #1
 8003a22:	60a3      	str	r3, [r4, #8]
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003a24:	230a      	movs	r3, #10
 8003a26:	f000 f823 	bl	8003a70 <exc7200_read_reg>
}
 8003a2a:	2000      	movs	r0, #0
 8003a2c:	b005      	add	sp, #20
 8003a2e:	bd30      	pop	{r4, r5, pc}
    ret = EXC7200_ERROR;
 8003a30:	f04f 33ff 	mov.w	r3, #4294967295
 8003a34:	e7e0      	b.n	80039f8 <EXC7200_GetState+0x24>
	...

08003a38 <EXC7200_RegisterBusIO>:
  if (pObj == NULL)
 8003a38:	b190      	cbz	r0, 8003a60 <EXC7200_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 8003a3a:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 8003a3c:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 8003a3e:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 8003a40:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 8003a42:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 8003a44:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 8003a46:	68ca      	ldr	r2, [r1, #12]
 8003a48:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 8003a4a:	690a      	ldr	r2, [r1, #16]
 8003a4c:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 8003a4e:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 8003a50:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 8003a52:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 8003a54:	4a04      	ldr	r2, [pc, #16]	; (8003a68 <EXC7200_RegisterBusIO+0x30>)
 8003a56:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 8003a58:	4a04      	ldr	r2, [pc, #16]	; (8003a6c <EXC7200_RegisterBusIO+0x34>)
 8003a5a:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 8003a5c:	b103      	cbz	r3, 8003a60 <EXC7200_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 8003a5e:	4718      	bx	r3
}
 8003a60:	f04f 30ff 	mov.w	r0, #4294967295
 8003a64:	4770      	bx	lr
 8003a66:	bf00      	nop
 8003a68:	08003933 	.word	0x08003933
 8003a6c:	08003941 	.word	0x08003941

08003a70 <exc7200_read_reg>:
  * @param  pdata Pointer to data buffer
  * @param  length Number of data to read  
  * @retval Component status
  */
int32_t exc7200_read_reg(exc7200_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 8003a70:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8003a72:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 8003a76:	46a4      	mov	ip, r4
}
 8003a78:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8003a7c:	4760      	bx	ip
	...

08003a80 <IS42S32800G_ClockEnable>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800G_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface)
{
 8003a80:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800G_CLK_ENABLE_CMD;
 8003a82:	2201      	movs	r2, #1
 8003a84:	4b07      	ldr	r3, [pc, #28]	; (8003aa4 <IS42S32800G_ClockEnable+0x24>)
  Command.CommandTarget          = Interface;
 8003a86:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
 8003a8a:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8003a8c:	2200      	movs	r2, #0

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003a8e:	4619      	mov	r1, r3
  Command.ModeRegisterDefinition = 0;
 8003a90:	60da      	str	r2, [r3, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003a92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003a96:	f004 fad3 	bl	8008040 <HAL_SDRAM_SendCommand>
 8003a9a:	3800      	subs	r0, #0
 8003a9c:	bf18      	it	ne
 8003a9e:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003aa0:	4240      	negs	r0, r0
 8003aa2:	bd08      	pop	{r3, pc}
 8003aa4:	24004a58 	.word	0x24004a58

08003aa8 <IS42S32800G_Precharge>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800G_Precharge(SDRAM_HandleTypeDef *Ctx, uint32_t Interface)
{
 8003aa8:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800G_PALL_CMD   ;
 8003aaa:	2202      	movs	r2, #2
 8003aac:	4b08      	ldr	r3, [pc, #32]	; (8003ad0 <IS42S32800G_Precharge+0x28>)
  Command.CommandTarget          = Interface;
 8003aae:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
 8003ab2:	2101      	movs	r1, #1
 8003ab4:	2200      	movs	r2, #0
 8003ab6:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003aba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003abe:	4619      	mov	r1, r3
 8003ac0:	f004 fabe 	bl	8008040 <HAL_SDRAM_SendCommand>
 8003ac4:	3800      	subs	r0, #0
 8003ac6:	bf18      	it	ne
 8003ac8:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003aca:	4240      	negs	r0, r0
 8003acc:	bd08      	pop	{r3, pc}
 8003ace:	bf00      	nop
 8003ad0:	24004a58 	.word	0x24004a58

08003ad4 <IS42S32800G_ModeRegConfig>:
int32_t IS42S32800G_ModeRegConfig(SDRAM_HandleTypeDef *Ctx, IS42S32800G_Context_t *pRegMode)
{
  uint32_t tmpmrd;

  /* Program the external memory mode register */
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8003ad4:	e9d1 3203 	ldrd	r3, r2, [r1, #12]
{
 8003ad8:	b510      	push	{r4, lr}
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8003ada:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
 8003adc:	694a      	ldr	r2, [r1, #20]
                     pRegMode->CASLatency    |\
                     pRegMode->OperationMode |\
                     pRegMode->WriteBurstMode;

  Command.CommandMode            = IS42S32800G_LOAD_MODE_CMD;
 8003ade:	4c0b      	ldr	r4, [pc, #44]	; (8003b0c <IS42S32800G_ModeRegConfig+0x38>)
                     pRegMode->BurstType     |\
 8003ae0:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
 8003ae2:	698a      	ldr	r2, [r1, #24]
 8003ae4:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8003ae6:	69ca      	ldr	r2, [r1, #28]
 8003ae8:	4313      	orrs	r3, r2
  Command.CommandMode            = IS42S32800G_LOAD_MODE_CMD;
 8003aea:	2204      	movs	r2, #4
 8003aec:	6022      	str	r2, [r4, #0]
  Command.CommandTarget          = pRegMode->TargetBank;
 8003aee:	680a      	ldr	r2, [r1, #0]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003af0:	4621      	mov	r1, r4
  Command.CommandTarget          = pRegMode->TargetBank;
 8003af2:	6062      	str	r2, [r4, #4]
  Command.AutoRefreshNumber      = 1;
 8003af4:	2201      	movs	r2, #1
  Command.ModeRegisterDefinition = tmpmrd;
 8003af6:	e9c4 2302 	strd	r2, r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003afa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003afe:	f004 fa9f 	bl	8008040 <HAL_SDRAM_SendCommand>
 8003b02:	3800      	subs	r0, #0
 8003b04:	bf18      	it	ne
 8003b06:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003b08:	4240      	negs	r0, r0
 8003b0a:	bd10      	pop	{r4, pc}
 8003b0c:	24004a58 	.word	0x24004a58

08003b10 <IS42S32800G_RefreshMode>:
  * @param  RefreshMode Could be IS42S32800G_CMD_AUTOREFRESH_MODE or
  *                      IS42S32800G_CMD_SELFREFRESH_MODE
  * @retval error status
  */
int32_t IS42S32800G_RefreshMode(SDRAM_HandleTypeDef *Ctx, uint32_t Interface, uint32_t RefreshMode)
{
 8003b10:	b508      	push	{r3, lr}
  Command.CommandMode            = RefreshMode;
 8003b12:	4b08      	ldr	r3, [pc, #32]	; (8003b34 <IS42S32800G_RefreshMode+0x24>)
  Command.CommandTarget          = Interface;
 8003b14:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;
 8003b18:	2108      	movs	r1, #8
 8003b1a:	2200      	movs	r2, #0
 8003b1c:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003b20:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003b24:	4619      	mov	r1, r3
 8003b26:	f004 fa8b 	bl	8008040 <HAL_SDRAM_SendCommand>
 8003b2a:	3800      	subs	r0, #0
 8003b2c:	bf18      	it	ne
 8003b2e:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003b30:	4240      	negs	r0, r0
 8003b32:	bd08      	pop	{r3, pc}
 8003b34:	24004a58 	.word	0x24004a58

08003b38 <IS42S32800G_RefreshRate>:
  * @param  Ctx Component object pointer
  * @param  RefreshCount The refresh rate to be programmed
  * @retval error status
  */
int32_t IS42S32800G_RefreshRate(SDRAM_HandleTypeDef *Ctx, uint32_t RefreshCount)
{
 8003b38:	b508      	push	{r3, lr}
  /* Set the device refresh rate */
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
 8003b3a:	f004 faa0 	bl	800807e <HAL_SDRAM_ProgramRefreshRate>
 8003b3e:	3800      	subs	r0, #0
 8003b40:	bf18      	it	ne
 8003b42:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003b44:	4240      	negs	r0, r0
 8003b46:	bd08      	pop	{r3, pc}

08003b48 <IS42S32800G_Init>:
{
 8003b48:	b570      	push	{r4, r5, r6, lr}
 8003b4a:	460c      	mov	r4, r1
  if(IS42S32800G_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800G_OK)
 8003b4c:	6809      	ldr	r1, [r1, #0]
{
 8003b4e:	4605      	mov	r5, r0
  if(IS42S32800G_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800G_OK)
 8003b50:	f7ff ff96 	bl	8003a80 <IS42S32800G_ClockEnable>
 8003b54:	b110      	cbz	r0, 8003b5c <IS42S32800G_Init+0x14>
  int32_t ret = IS42S32800G_ERROR;
 8003b56:	f04f 30ff 	mov.w	r0, #4294967295
}
 8003b5a:	bd70      	pop	{r4, r5, r6, pc}
  * @retval IS42S32800G_OK
  */
static int32_t IS42S32800G_Delay(uint32_t Delay)
{
  uint32_t tickstart;
  tickstart = HAL_GetTick();
 8003b5c:	f001 fa98 	bl	8005090 <HAL_GetTick>
 8003b60:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
 8003b62:	f001 fa95 	bl	8005090 <HAL_GetTick>
 8003b66:	4286      	cmp	r6, r0
 8003b68:	d0fb      	beq.n	8003b62 <IS42S32800G_Init+0x1a>
    if(IS42S32800G_Precharge(Ctx, pRegMode->TargetBank) == IS42S32800G_OK)
 8003b6a:	6821      	ldr	r1, [r4, #0]
 8003b6c:	4628      	mov	r0, r5
 8003b6e:	f7ff ff9b 	bl	8003aa8 <IS42S32800G_Precharge>
 8003b72:	2800      	cmp	r0, #0
 8003b74:	d1ef      	bne.n	8003b56 <IS42S32800G_Init+0xe>
      if(IS42S32800G_RefreshMode(Ctx, pRegMode->TargetBank, pRegMode->RefreshMode) == IS42S32800G_OK)
 8003b76:	4628      	mov	r0, r5
 8003b78:	e9d4 1200 	ldrd	r1, r2, [r4]
 8003b7c:	f7ff ffc8 	bl	8003b10 <IS42S32800G_RefreshMode>
 8003b80:	2800      	cmp	r0, #0
 8003b82:	d1e8      	bne.n	8003b56 <IS42S32800G_Init+0xe>
        if(IS42S32800G_ModeRegConfig(Ctx, pRegMode) == IS42S32800G_OK)
 8003b84:	4621      	mov	r1, r4
 8003b86:	4628      	mov	r0, r5
 8003b88:	f7ff ffa4 	bl	8003ad4 <IS42S32800G_ModeRegConfig>
 8003b8c:	2800      	cmp	r0, #0
 8003b8e:	d1e2      	bne.n	8003b56 <IS42S32800G_Init+0xe>
          if(IS42S32800G_RefreshRate(Ctx, pRegMode->RefreshRate) == IS42S32800G_OK)
 8003b90:	68a1      	ldr	r1, [r4, #8]
 8003b92:	4628      	mov	r0, r5
 8003b94:	f7ff ffd0 	bl	8003b38 <IS42S32800G_RefreshRate>
 8003b98:	3800      	subs	r0, #0
 8003b9a:	bf18      	it	ne
 8003b9c:	2001      	movne	r0, #1
 8003b9e:	4240      	negs	r0, r0
  return ret;
 8003ba0:	e7db      	b.n	8003b5a <IS42S32800G_Init+0x12>

08003ba2 <MT25TL01G_GetFlashInfo>:
  * @retval QSPI memory status
  */
int32_t MT25TL01G_GetFlashInfo(MT25TL01G_Info_t *pInfo)
{
  pInfo->FlashSize          = MT25TL01G_FLASH_SIZE;
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 8003ba2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003ba6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  pInfo->ProgPageSize       = MT25TL01G_PAGE_SIZE;
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 8003baa:	f44f 7180 	mov.w	r1, #256	; 0x100
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 8003bae:	e9c0 2300 	strd	r2, r3, [r0]
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 8003bb2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003bb6:	e9c0 3102 	strd	r3, r1, [r0, #8]
  pInfo->ProgPagesNumber    = (MT25TL01G_FLASH_SIZE/pInfo->ProgPageSize);
 8003bba:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8003bbe:	6103      	str	r3, [r0, #16]
  return MT25TL01G_OK;
}
 8003bc0:	2000      	movs	r0, #0
 8003bc2:	4770      	bx	lr

08003bc4 <MT25TL01G_AutoPollingMemReady>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_AutoPollingMemReady(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8003bc4:	b500      	push	{lr}

  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003bc6:	f44f 7340 	mov.w	r3, #768	; 0x300
{
 8003bca:	b095      	sub	sp, #84	; 0x54
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003bcc:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003bd0:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 8003bd2:	2305      	movs	r3, #5
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003bd4:	920f      	str	r2, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 2;
 8003bd6:	2202      	movs	r2, #2
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 8003bd8:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003bda:	2300      	movs	r3, #0
  s_command.DummyCycles       = 2;
 8003bdc:	920b      	str	r2, [sp, #44]	; 0x2c
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
  s_config.StatusBytesSize = 2;

  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003bde:	a906      	add	r1, sp, #24
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003be0:	9313      	str	r3, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003be2:	9300      	str	r3, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003be4:	9304      	str	r3, [sp, #16]
  s_config.StatusBytesSize = 2;
 8003be6:	9203      	str	r2, [sp, #12]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003be8:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003bea:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003bee:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_config.Interval        = 0x10;
 8003bf2:	2310      	movs	r3, #16
 8003bf4:	9302      	str	r3, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003bf6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003bfa:	9305      	str	r3, [sp, #20]
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
 8003bfc:	f240 1301 	movw	r3, #257	; 0x101
 8003c00:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c02:	f241 3388 	movw	r3, #5000	; 0x1388
 8003c06:	f002 fe35 	bl	8006874 <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 8003c0a:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;

}
 8003c0c:	bf14      	ite	ne
 8003c0e:	f06f 0004 	mvnne.w	r0, #4
 8003c12:	2000      	moveq	r0, #0
 8003c14:	b015      	add	sp, #84	; 0x54
 8003c16:	f85d fb04 	ldr.w	pc, [sp], #4

08003c1a <MT25TL01G_WriteEnable>:
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Enable write operations */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003c1a:	2903      	cmp	r1, #3
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c1c:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8003c20:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003c22:	bf08      	it	eq
 8003c24:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8003c28:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003c2a:	bf18      	it	ne
 8003c2c:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 8003c30:	460c      	mov	r4, r1
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c32:	a906      	add	r1, sp, #24
{
 8003c34:	4605      	mov	r5, r0
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003c36:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_WRITE_ENABLE_CMD;
 8003c38:	2306      	movs	r3, #6
 8003c3a:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003c3c:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003c3e:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8003c42:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003c44:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003c46:	9313      	str	r3, [sp, #76]	; 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003c48:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c4c:	f002 fd17 	bl	800667e <HAL_QSPI_Command>
 8003c50:	bb20      	cbnz	r0, 8003c9c <MT25TL01G_WriteEnable+0x82>
  {
    return MT25TL01G_ERROR_COMMAND;
  }

  /* Configure automatic polling mode to wait for write enabling */
  s_config.Match           = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 8003c52:	f240 2302 	movw	r3, #514	; 0x202
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 2;
  s_config.Interval        = 0x10;
 8003c56:	2202      	movs	r2, #2
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 8003c58:	2c03      	cmp	r4, #3
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 8003c5a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003c5e:	9004      	str	r0, [sp, #16]


  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c60:	4628      	mov	r0, r5
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 8003c62:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003c66:	f04f 0310 	mov.w	r3, #16
 8003c6a:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 8003c6e:	f04f 0305 	mov.w	r3, #5
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c72:	466a      	mov	r2, sp
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 8003c74:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 8003c78:	bf0c      	ite	eq
 8003c7a:	f04f 7340 	moveq.w	r3, #50331648	; 0x3000000
 8003c7e:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c82:	a906      	add	r1, sp, #24
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 8003c84:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c86:	f241 3388 	movw	r3, #5000	; 0x1388
 8003c8a:	f002 fdf3 	bl	8006874 <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 8003c8e:	2800      	cmp	r0, #0
 8003c90:	bf0c      	ite	eq
 8003c92:	2000      	moveq	r0, #0
 8003c94:	f06f 0004 	mvnne.w	r0, #4
  }

  return MT25TL01G_OK;
}
 8003c98:	b015      	add	sp, #84	; 0x54
 8003c9a:	bd30      	pop	{r4, r5, pc}
    return MT25TL01G_ERROR_COMMAND;
 8003c9c:	f06f 0001 	mvn.w	r0, #1
 8003ca0:	e7fa      	b.n	8003c98 <MT25TL01G_WriteEnable+0x7e>

08003ca2 <MT25TL01G_Enter4BytesAddressMode>:
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003ca2:	2903      	cmp	r1, #3
{
 8003ca4:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003ca6:	bf08      	it	eq
 8003ca8:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8003cac:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003cae:	bf18      	it	ne
 8003cb0:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 8003cb4:	4604      	mov	r4, r0
 8003cb6:	460d      	mov	r5, r1
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003cb8:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_4_BYTE_ADDR_MODE_CMD;
 8003cba:	23b7      	movs	r3, #183	; 0xb7
 8003cbc:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003cbe:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003cc0:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003cc4:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003cc6:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003cc8:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003cca:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if( MT25TL01G_WriteEnable(Ctx,Mode)!=MT25TL01G_OK)
 8003cce:	f7ff ffa4 	bl	8003c1a <MT25TL01G_WriteEnable>
 8003cd2:	b958      	cbnz	r0, 8003cec <MT25TL01G_Enter4BytesAddressMode+0x4a>
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003cd4:	f241 3288 	movw	r2, #5000	; 0x1388
 8003cd8:	4669      	mov	r1, sp
 8003cda:	4620      	mov	r0, r4
 8003cdc:	f002 fccf 	bl	800667e <HAL_QSPI_Command>
 8003ce0:	b920      	cbnz	r0, 8003cec <MT25TL01G_Enter4BytesAddressMode+0x4a>
  else if(MT25TL01G_AutoPollingMemReady(Ctx,Mode)!=MT25TL01G_OK)
 8003ce2:	4629      	mov	r1, r5
 8003ce4:	4620      	mov	r0, r4
 8003ce6:	f7ff ff6d 	bl	8003bc4 <MT25TL01G_AutoPollingMemReady>
 8003cea:	b108      	cbz	r0, 8003cf0 <MT25TL01G_Enter4BytesAddressMode+0x4e>
    return MT25TL01G_ERROR_COMMAND;
 8003cec:	f06f 0001 	mvn.w	r0, #1
}
 8003cf0:	b00f      	add	sp, #60	; 0x3c
 8003cf2:	bd30      	pop	{r4, r5, pc}

08003cf4 <MT25TL01G_ReadSTR>:
  * @param  Size Size of data to read
  * @retval QSPI memory status
  */

int32_t MT25TL01G_ReadSTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode, uint8_t *pData, uint32_t ReadAddr, uint32_t Size)
{
 8003cf4:	b530      	push	{r4, r5, lr}
 8003cf6:	4604      	mov	r4, r0
 8003cf8:	b08f      	sub	sp, #60	; 0x3c
 8003cfa:	4615      	mov	r5, r2
  QSPI_CommandTypeDef s_command;
  switch(Mode)
 8003cfc:	2903      	cmp	r1, #3
 8003cfe:	d80e      	bhi.n	8003d1e <MT25TL01G_ReadSTR+0x2a>
 8003d00:	e8df f001 	tbb	[pc, r1]
 8003d04:	44392e02 	.word	0x44392e02
  {
  case MT25TL01G_SPI_MODE:           /* 1-1-1 read commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d08:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003d0c:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_ADDR_CMD;
 8003d0e:	220c      	movs	r2, #12
 8003d10:	9200      	str	r2, [sp, #0]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003d12:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003d16:	9207      	str	r2, [sp, #28]
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8003d18:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
    break;
  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003d1c:	9209      	str	r2, [sp, #36]	; 0x24

    break;
  }
  /* Initialize the read command */
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003d1e:	2208      	movs	r2, #8
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
  s_command.Address           = ReadAddr;
 8003d20:	9301      	str	r3, [sp, #4]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003d22:	2300      	movs	r3, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Configure the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d24:	4669      	mov	r1, sp
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003d26:	9205      	str	r2, [sp, #20]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003d28:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d2c:	4620      	mov	r0, r4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003d2e:	9308      	str	r3, [sp, #32]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003d30:	9203      	str	r2, [sp, #12]
  s_command.NbData            = Size;
 8003d32:	9a12      	ldr	r2, [sp, #72]	; 0x48
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003d34:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d38:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003d3c:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d40:	f002 fc9d 	bl	800667e <HAL_QSPI_Command>
 8003d44:	bb38      	cbnz	r0, 8003d96 <MT25TL01G_ReadSTR+0xa2>
  {
    return MT25TL01G_ERROR_COMMAND;
  }

  /* Reception of the data */
  if (HAL_QSPI_Receive(Ctx, pData, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d46:	f241 3288 	movw	r2, #5000	; 0x1388
 8003d4a:	4629      	mov	r1, r5
 8003d4c:	4620      	mov	r0, r4
 8003d4e:	f002 fd32 	bl	80067b6 <HAL_QSPI_Receive>
  {
    return MT25TL01G_ERROR_RECEIVE;
 8003d52:	2800      	cmp	r0, #0
 8003d54:	bf0c      	ite	eq
 8003d56:	2000      	moveq	r0, #0
 8003d58:	f06f 0003 	mvnne.w	r0, #3
  }


  return MT25TL01G_OK;

}
 8003d5c:	b00f      	add	sp, #60	; 0x3c
 8003d5e:	bd30      	pop	{r4, r5, pc}
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d60:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003d64:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_DUAL_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003d66:	22bc      	movs	r2, #188	; 0xbc
 8003d68:	9200      	str	r2, [sp, #0]
    s_command.AddressMode       = QSPI_ADDRESS_2_LINES;
 8003d6a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003d6e:	9207      	str	r2, [sp, #28]
    s_command.DataMode          = QSPI_DATA_2_LINES;
 8003d70:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8003d74:	e7d2      	b.n	8003d1c <MT25TL01G_ReadSTR+0x28>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d76:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003d7a:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003d7c:	22ec      	movs	r2, #236	; 0xec
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003d7e:	9200      	str	r2, [sp, #0]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003d80:	f44f 6240 	mov.w	r2, #3072	; 0xc00
 8003d84:	9207      	str	r2, [sp, #28]
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003d86:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8003d8a:	e7c7      	b.n	8003d1c <MT25TL01G_ReadSTR+0x28>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003d8c:	f44f 7240 	mov.w	r2, #768	; 0x300
 8003d90:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003d92:	22eb      	movs	r2, #235	; 0xeb
 8003d94:	e7f3      	b.n	8003d7e <MT25TL01G_ReadSTR+0x8a>
    return MT25TL01G_ERROR_COMMAND;
 8003d96:	f06f 0001 	mvn.w	r0, #1
 8003d9a:	e7df      	b.n	8003d5c <MT25TL01G_ReadSTR+0x68>

08003d9c <MT25TL01G_EnterQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnterQPIMode(QSPI_HandleTypeDef *Ctx)
{
 8003d9c:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d9e:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 8003da2:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003da4:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003da8:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 8003daa:	2335      	movs	r3, #53	; 0x35
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dac:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 8003dae:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003db0:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003db2:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003db6:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003db8:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003dba:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003dbc:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dc0:	f002 fc5d 	bl	800667e <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8003dc4:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003dc6:	bf14      	ite	ne
 8003dc8:	f06f 0001 	mvnne.w	r0, #1
 8003dcc:	2000      	moveq	r0, #0
 8003dce:	b00f      	add	sp, #60	; 0x3c
 8003dd0:	f85d fb04 	ldr.w	pc, [sp], #4

08003dd4 <MT25TL01G_ExitQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_ExitQPIMode(QSPI_HandleTypeDef *Ctx)
{
 8003dd4:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003dd6:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 8003dda:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ddc:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003de0:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 8003de2:	23f5      	movs	r3, #245	; 0xf5
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003de4:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 8003de6:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003de8:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003dea:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003dee:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003df0:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003df2:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003df4:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003df8:	f002 fc41 	bl	800667e <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8003dfc:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003dfe:	bf14      	ite	ne
 8003e00:	f06f 0001 	mvnne.w	r0, #1
 8003e04:	2000      	moveq	r0, #0
 8003e06:	b00f      	add	sp, #60	; 0x3c
 8003e08:	f85d fb04 	ldr.w	pc, [sp], #4

08003e0c <MT25TL01G_EnableMemoryMappedModeDTR>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnableMemoryMappedModeDTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8003e0c:	b500      	push	{lr}
 8003e0e:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 8003e10:	2903      	cmp	r1, #3
 8003e12:	d80e      	bhi.n	8003e32 <MT25TL01G_EnableMemoryMappedModeDTR+0x26>
 8003e14:	e8df f001 	tbb	[pc, r1]
 8003e18:	3f342902 	.word	0x3f342902
  {
  case MT25TL01G_SPI_MODE:                /* 1-1-1 commands, Power on H/W default setting */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e1c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e20:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_DTR_CMD;
 8003e22:	230e      	movs	r3, #14
 8003e24:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003e26:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003e2a:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8003e2c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    break;
  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003e30:	930b      	str	r3, [sp, #44]	; 0x2c
    break;
  }
  /* Configure the command for the read instruction */
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 8003e32:	2208      	movs	r2, #8
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003e34:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  s_command.DdrMode           = QSPI_DDR_MODE_ENABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 8003e38:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003e3c:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 8003e3e:	9207      	str	r2, [sp, #28]
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 8003e40:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003e44:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003e46:	2300      	movs	r3, #0
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 8003e48:	e9cd c20d 	strd	ip, r2, [sp, #52]	; 0x34
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003e4c:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003e4e:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003e50:	930f      	str	r3, [sp, #60]	; 0x3c
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 8003e52:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003e56:	f002 fd5d 	bl	8006914 <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 8003e5a:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003e5c:	bf14      	ite	ne
 8003e5e:	f06f 0005 	mvnne.w	r0, #5
 8003e62:	2000      	moveq	r0, #0
 8003e64:	b011      	add	sp, #68	; 0x44
 8003e66:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e6a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e6e:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_OUT_FAST_READ_DTR_CMD;
 8003e70:	233d      	movs	r3, #61	; 0x3d
 8003e72:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003e74:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003e78:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 8003e7a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003e7e:	e7d7      	b.n	8003e30 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e80:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e84:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_DTR_CMD;
 8003e86:	23ee      	movs	r3, #238	; 0xee
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 8003e88:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003e8a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003e8e:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003e90:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8003e94:	e7cc      	b.n	8003e30 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003e96:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003e9a:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 8003e9c:	23ed      	movs	r3, #237	; 0xed
 8003e9e:	e7f3      	b.n	8003e88 <MT25TL01G_EnableMemoryMappedModeDTR+0x7c>

08003ea0 <MT25TL01G_EnableMemoryMappedModeSTR>:
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */

int32_t MT25TL01G_EnableMemoryMappedModeSTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8003ea0:	b500      	push	{lr}
 8003ea2:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 8003ea4:	2903      	cmp	r1, #3
 8003ea6:	d80e      	bhi.n	8003ec6 <MT25TL01G_EnableMemoryMappedModeSTR+0x26>
 8003ea8:	e8df f001 	tbb	[pc, r1]
 8003eac:	3b302502 	.word	0x3b302502
  {
  case MT25TL01G_SPI_MODE:           /* 1-1-1 read commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003eb0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003eb4:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_ADDR_CMD;
 8003eb6:	230c      	movs	r3, #12
 8003eb8:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003eba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003ebe:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8003ec0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000

  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003ec4:	930b      	str	r3, [sp, #44]	; 0x2c

    break;

  }
  /* Configure the command for the read instruction */
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003ec6:	2308      	movs	r3, #8

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003ec8:	466a      	mov	r2, sp
 8003eca:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003ecc:	9307      	str	r3, [sp, #28]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003ece:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003ed2:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003ed4:	2300      	movs	r3, #0
 8003ed6:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003ed8:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003eda:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 8003ede:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003ee2:	f002 fd17 	bl	8006914 <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 8003ee6:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003ee8:	bf14      	ite	ne
 8003eea:	f06f 0005 	mvnne.w	r0, #5
 8003eee:	2000      	moveq	r0, #0
 8003ef0:	b011      	add	sp, #68	; 0x44
 8003ef2:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003ef6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003efa:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003efc:	23bc      	movs	r3, #188	; 0xbc
 8003efe:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_2_LINES;
 8003f00:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8003f04:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 8003f06:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003f0a:	e7db      	b.n	8003ec4 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003f0c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003f10:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003f12:	23ec      	movs	r3, #236	; 0xec
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003f14:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003f16:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003f1a:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003f1c:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8003f20:	e7d0      	b.n	8003ec4 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003f22:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003f26:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003f28:	23eb      	movs	r3, #235	; 0xeb
 8003f2a:	e7f3      	b.n	8003f14 <MT25TL01G_EnableMemoryMappedModeSTR+0x74>

08003f2c <MT25TL01G_ResetEnable>:
int32_t MT25TL01G_ResetEnable(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f2c:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f2e:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8003f32:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f34:	bf08      	it	eq
 8003f36:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8003f3a:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f3c:	bf18      	it	ne
 8003f3e:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f42:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f44:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_ENABLE_CMD;
 8003f46:	2366      	movs	r3, #102	; 0x66
 8003f48:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003f4a:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003f4c:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003f50:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003f52:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003f54:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003f56:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f5a:	f002 fb90 	bl	800667e <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8003f5e:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003f60:	bf14      	ite	ne
 8003f62:	f06f 0001 	mvnne.w	r0, #1
 8003f66:	2000      	moveq	r0, #0
 8003f68:	b00f      	add	sp, #60	; 0x3c
 8003f6a:	f85d fb04 	ldr.w	pc, [sp], #4

08003f6e <MT25TL01G_ResetMemory>:
int32_t MT25TL01G_ResetMemory(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f6e:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f70:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8003f74:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f76:	bf08      	it	eq
 8003f78:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8003f7c:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f7e:	bf18      	it	ne
 8003f80:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f84:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003f86:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_MEMORY_CMD ;
 8003f88:	2399      	movs	r3, #153	; 0x99
 8003f8a:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003f8c:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003f8e:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003f92:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003f94:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003f96:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003f98:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f9c:	f002 fb6f 	bl	800667e <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8003fa0:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003fa2:	bf14      	ite	ne
 8003fa4:	f06f 0001 	mvnne.w	r0, #1
 8003fa8:	2000      	moveq	r0, #0
 8003faa:	b00f      	add	sp, #60	; 0x3c
 8003fac:	f85d fb04 	ldr.w	pc, [sp], #4

08003fb0 <TS3510_GetCapabilities>:
  (void)(pObj);
  
  /* Store component's capabilities */
  Capabilities->MultiTouch = 0;
  Capabilities->Gesture    = 0;
  Capabilities->MaxTouch   = TS3510_MAX_NB_TOUCH;
 8003fb0:	2301      	movs	r3, #1
  Capabilities->MultiTouch = 0;
 8003fb2:	2000      	movs	r0, #0
  Capabilities->MaxTouch   = TS3510_MAX_NB_TOUCH;
 8003fb4:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxXl      = TS3510_MAX_X_LENGTH;
 8003fb6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  Capabilities->MultiTouch = 0;
 8003fba:	8008      	strh	r0, [r1, #0]
  Capabilities->MaxYl      = TS3510_MAX_Y_LENGTH;
 8003fbc:	e9c1 3301 	strd	r3, r3, [r1, #4]
  
  return TS3510_OK;
}
 8003fc0:	4770      	bx	lr

08003fc2 <TS3510_GestureConfig>:
  */
int32_t TS3510_GestureConfig(TS3510_Object_t *pObj, TS3510_Gesture_Init_t *GestureInit)
{
  /* Feature not supported */
  return TS3510_ERROR;  
}
 8003fc2:	f04f 30ff 	mov.w	r0, #4294967295
 8003fc6:	4770      	bx	lr

08003fc8 <TS3510_EnableIT>:
  */
int32_t TS3510_EnableIT(TS3510_Object_t *pObj)
{
  /* Feature not supported */
  return TS3510_ERROR;
}
 8003fc8:	f04f 30ff 	mov.w	r0, #4294967295
 8003fcc:	4770      	bx	lr

08003fce <ReadRegWrap>:
  * @param  pData The target register value to be read
  * @param  Length buffer size to be read
  * @retval Component status.
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8003fce:	b410      	push	{r4}
  TS3510_Object_t *pObj = (TS3510_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8003fd0:	6904      	ldr	r4, [r0, #16]
 8003fd2:	8900      	ldrh	r0, [r0, #8]
 8003fd4:	46a4      	mov	ip, r4
}
 8003fd6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8003fda:	4760      	bx	ip

08003fdc <WriteRegWrap>:
  * @param  pData The target register value to be written
  * @param  Length buffer size to be written
  * @retval Component status.
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8003fdc:	b410      	push	{r4}
  TS3510_Object_t *pObj = (TS3510_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8003fde:	68c4      	ldr	r4, [r0, #12]
 8003fe0:	8900      	ldrh	r0, [r0, #8]
 8003fe2:	46a4      	mov	ip, r4
}
 8003fe4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8003fe8:	4760      	bx	ip

08003fea <TS3510_ReadID>:
{
 8003fea:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 8003fec:	f640 0381 	movw	r3, #2177	; 0x881
  if(ts3510_write_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, aTmpBuffer, 2) != TS3510_OK)
 8003ff0:	f100 0418 	add.w	r4, r0, #24
{
 8003ff4:	460d      	mov	r5, r1
  if(ts3510_write_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, aTmpBuffer, 2) != TS3510_OK)
 8003ff6:	aa01      	add	r2, sp, #4
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 8003ff8:	f8ad 3004 	strh.w	r3, [sp, #4]
  if(ts3510_write_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, aTmpBuffer, 2) != TS3510_OK)
 8003ffc:	218a      	movs	r1, #138	; 0x8a
 8003ffe:	2302      	movs	r3, #2
 8004000:	4620      	mov	r0, r4
 8004002:	f000 f8be 	bl	8004182 <ts3510_write_reg>
 8004006:	b118      	cbz	r0, 8004010 <TS3510_ReadID+0x26>
    ret = TS3510_ERROR;
 8004008:	f04f 30ff 	mov.w	r0, #4294967295
}
 800400c:	b003      	add	sp, #12
 800400e:	bd30      	pop	{r4, r5, pc}
  else if(ts3510_read_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, &data, 1) != TS3510_OK)
 8004010:	2301      	movs	r3, #1
 8004012:	f10d 0203 	add.w	r2, sp, #3
 8004016:	218a      	movs	r1, #138	; 0x8a
 8004018:	4620      	mov	r0, r4
 800401a:	f000 f8ab 	bl	8004174 <ts3510_read_reg>
 800401e:	2800      	cmp	r0, #0
 8004020:	d1f2      	bne.n	8004008 <TS3510_ReadID+0x1e>
    *Id = TS3510_ID;
 8004022:	f243 5310 	movw	r3, #13584	; 0x3510
 8004026:	602b      	str	r3, [r5, #0]
  return ret;     
 8004028:	e7f0      	b.n	800400c <TS3510_ReadID+0x22>

0800402a <TS3510_GetState>:
{
 800402a:	b530      	push	{r4, r5, lr}
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 800402c:	f640 0381 	movw	r3, #2177	; 0x881
{
 8004030:	b087      	sub	sp, #28
  if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 8004032:	f100 0518 	add.w	r5, r0, #24
{
 8004036:	460c      	mov	r4, r1
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 8004038:	f8ad 3004 	strh.w	r3, [sp, #4]
  if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 800403c:	aa02      	add	r2, sp, #8
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 800403e:	f8ad 3008 	strh.w	r3, [sp, #8]
  if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 8004042:	2100      	movs	r1, #0
 8004044:	2302      	movs	r3, #2
 8004046:	4628      	mov	r0, r5
 8004048:	f000 f89b 	bl	8004182 <ts3510_write_reg>
 800404c:	b178      	cbz	r0, 800406e <TS3510_GetState+0x44>
    ret = TS3510_ERROR;
 800404e:	f04f 33ff 	mov.w	r3, #4294967295
  if(State->TouchDetected == 1U)
 8004052:	2b01      	cmp	r3, #1
  State->TouchDetected = (uint32_t)TS3510_DetectTouch(pObj);
 8004054:	6023      	str	r3, [r4, #0]
  if(State->TouchDetected == 1U)
 8004056:	d13e      	bne.n	80040d6 <TS3510_GetState+0xac>
    if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 8004058:	2302      	movs	r3, #2
 800405a:	aa01      	add	r2, sp, #4
 800405c:	2100      	movs	r1, #0
 800405e:	4628      	mov	r0, r5
 8004060:	f000 f88f 	bl	8004182 <ts3510_write_reg>
 8004064:	b1d0      	cbz	r0, 800409c <TS3510_GetState+0x72>
      ret = TS3510_ERROR;
 8004066:	f04f 30ff 	mov.w	r0, #4294967295
}
 800406a:	b007      	add	sp, #28
 800406c:	bd30      	pop	{r4, r5, pc}
  else if(ts3510_read_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, pData, 11) != TS3510_OK)
 800406e:	230b      	movs	r3, #11
 8004070:	aa03      	add	r2, sp, #12
 8004072:	218a      	movs	r1, #138	; 0x8a
 8004074:	4628      	mov	r0, r5
 8004076:	f000 f87d 	bl	8004174 <ts3510_read_reg>
 800407a:	2800      	cmp	r0, #0
 800407c:	d1e7      	bne.n	800404e <TS3510_GetState+0x24>
    if((pData[1] == 0xFF) && (pData[2] == 0xFF) && (pData[3] == 0xFF) && (pData[4] == 0xFF))
 800407e:	f89d 200e 	ldrb.w	r2, [sp, #14]
 8004082:	f89d 300d 	ldrb.w	r3, [sp, #13]
 8004086:	4013      	ands	r3, r2
 8004088:	f89d 200f 	ldrb.w	r2, [sp, #15]
 800408c:	4013      	ands	r3, r2
 800408e:	f89d 2010 	ldrb.w	r2, [sp, #16]
 8004092:	4013      	ands	r3, r2
 8004094:	3bff      	subs	r3, #255	; 0xff
 8004096:	bf18      	it	ne
 8004098:	2301      	movne	r3, #1
 800409a:	e7da      	b.n	8004052 <TS3510_GetState+0x28>
    else if(ts3510_read_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, pData, 11) != TS3510_OK)
 800409c:	230b      	movs	r3, #11
 800409e:	aa03      	add	r2, sp, #12
 80040a0:	218a      	movs	r1, #138	; 0x8a
 80040a2:	4628      	mov	r0, r5
 80040a4:	f000 f866 	bl	8004174 <ts3510_read_reg>
 80040a8:	2800      	cmp	r0, #0
 80040aa:	d1dc      	bne.n	8004066 <TS3510_GetState+0x3c>
      State->TouchX = (((pData[1] << 8) | pData[2]) << 12) / 640;
 80040ac:	f8bd 300d 	ldrh.w	r3, [sp, #13]
 80040b0:	f44f 7220 	mov.w	r2, #640	; 0x280
 80040b4:	ba5b      	rev16	r3, r3
 80040b6:	b29b      	uxth	r3, r3
 80040b8:	031b      	lsls	r3, r3, #12
 80040ba:	fbb3 f3f2 	udiv	r3, r3, r2
 80040be:	6063      	str	r3, [r4, #4]
      State->TouchY = (((pData[3] << 8) | pData[4]) << 12) / 480;
 80040c0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80040c4:	f8bd 300f 	ldrh.w	r3, [sp, #15]
 80040c8:	ba5b      	rev16	r3, r3
 80040ca:	b29b      	uxth	r3, r3
 80040cc:	031b      	lsls	r3, r3, #12
 80040ce:	fbb3 f3f2 	udiv	r3, r3, r2
 80040d2:	60a3      	str	r3, [r4, #8]
 80040d4:	e7c9      	b.n	800406a <TS3510_GetState+0x40>
  int32_t ret = TS3510_OK;
 80040d6:	2000      	movs	r0, #0
  return ret;
 80040d8:	e7c7      	b.n	800406a <TS3510_GetState+0x40>

080040da <TS3510_Init>:
{
 80040da:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 80040dc:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 80040e0:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 80040e2:	b933      	cbnz	r3, 80040f2 <TS3510_Init+0x18>
    if(pObj->IO.Init() != TS3510_OK)
 80040e4:	6803      	ldr	r3, [r0, #0]
 80040e6:	4798      	blx	r3
 80040e8:	b928      	cbnz	r0, 80040f6 <TS3510_Init+0x1c>
      pObj->IsInitialized = 1;
 80040ea:	2301      	movs	r3, #1
 80040ec:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
}
 80040f0:	bd10      	pop	{r4, pc}
  int32_t ret = TS3510_OK;
 80040f2:	2000      	movs	r0, #0
 80040f4:	e7fc      	b.n	80040f0 <TS3510_Init+0x16>
      ret = TS3510_ERROR;
 80040f6:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 80040fa:	e7f9      	b.n	80040f0 <TS3510_Init+0x16>

080040fc <TS3510_DeInit>:
{
 80040fc:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 1U)
 80040fe:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8004102:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 1U)
 8004104:	2b01      	cmp	r3, #1
 8004106:	d105      	bne.n	8004114 <TS3510_DeInit+0x18>
    if(pObj->IO.DeInit() != TS3510_OK)
 8004108:	6843      	ldr	r3, [r0, #4]
 800410a:	4798      	blx	r3
 800410c:	b920      	cbnz	r0, 8004118 <TS3510_DeInit+0x1c>
      pObj->IsInitialized = 0;
 800410e:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
}
 8004112:	bd10      	pop	{r4, pc}
  int32_t ret = TS3510_OK;
 8004114:	2000      	movs	r0, #0
 8004116:	e7fc      	b.n	8004112 <TS3510_DeInit+0x16>
      ret = TS3510_ERROR;
 8004118:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 800411c:	e7f9      	b.n	8004112 <TS3510_DeInit+0x16>

0800411e <TS3510_DisableIT>:
 800411e:	f04f 30ff 	mov.w	r0, #4294967295
 8004122:	4770      	bx	lr

08004124 <TS3510_GetMultiTouchState>:
 8004124:	f04f 30ff 	mov.w	r0, #4294967295
 8004128:	4770      	bx	lr

0800412a <TS3510_GetGesture>:
 800412a:	f04f 30ff 	mov.w	r0, #4294967295
 800412e:	4770      	bx	lr

08004130 <TS3510_ITStatus>:
 8004130:	f04f 30ff 	mov.w	r0, #4294967295
 8004134:	4770      	bx	lr

08004136 <TS3510_ClearIT>:
 8004136:	f04f 30ff 	mov.w	r0, #4294967295
 800413a:	4770      	bx	lr

0800413c <TS3510_RegisterBusIO>:
  if (pObj == NULL)
 800413c:	b190      	cbz	r0, 8004164 <TS3510_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 800413e:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 8004140:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 8004142:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 8004144:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 8004146:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 8004148:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 800414a:	68ca      	ldr	r2, [r1, #12]
 800414c:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 800414e:	690a      	ldr	r2, [r1, #16]
 8004150:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 8004152:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 8004154:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 8004156:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 8004158:	4a04      	ldr	r2, [pc, #16]	; (800416c <TS3510_RegisterBusIO+0x30>)
 800415a:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 800415c:	4a04      	ldr	r2, [pc, #16]	; (8004170 <TS3510_RegisterBusIO+0x34>)
 800415e:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 8004160:	b103      	cbz	r3, 8004164 <TS3510_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 8004162:	4718      	bx	r3
}
 8004164:	f04f 30ff 	mov.w	r0, #4294967295
 8004168:	4770      	bx	lr
 800416a:	bf00      	nop
 800416c:	08003fcf 	.word	0x08003fcf
 8004170:	08003fdd 	.word	0x08003fdd

08004174 <ts3510_read_reg>:
  * @param  pdata Pointer to data buffer
  * @param  length Number of data to read  
  * @retval Component status
  */
int32_t ts3510_read_reg(ts3510_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 8004174:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8004176:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 800417a:	46a4      	mov	ip, r4
}
 800417c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8004180:	4760      	bx	ip

08004182 <ts3510_write_reg>:
  * @param  pdata Pointer to data buffer
  * @param  length Number of data to write  
  * @retval Component status
  */
int32_t ts3510_write_reg(ts3510_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 8004182:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8004184:	6804      	ldr	r4, [r0, #0]
 8004186:	6880      	ldr	r0, [r0, #8]
 8004188:	46a4      	mov	ip, r4
}
 800418a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 800418e:	4760      	bx	ip

08004190 <BSP_I2C1_DeInit>:
  */
int32_t BSP_I2C1_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c1InitCounter--;
 8004190:	4a0f      	ldr	r2, [pc, #60]	; (80041d0 <BSP_I2C1_DeInit+0x40>)
{
 8004192:	b508      	push	{r3, lr}

  if (--I2c1InitCounter == 0U)
 8004194:	6813      	ldr	r3, [r2, #0]
 8004196:	3b02      	subs	r3, #2
 8004198:	6013      	str	r3, [r2, #0]
 800419a:	b10b      	cbz	r3, 80041a0 <BSP_I2C1_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
 800419c:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
 800419e:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hI2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C1_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C1_SCL_GPIO_PORT, gpio_init_structure.Pin );
 80041a0:	2140      	movs	r1, #64	; 0x40
 80041a2:	480c      	ldr	r0, [pc, #48]	; (80041d4 <BSP_I2C1_DeInit+0x44>)
 80041a4:	f001 fa54 	bl	8005650 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C1_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C1_SDA_GPIO_PORT, gpio_init_structure.Pin);
 80041a8:	480a      	ldr	r0, [pc, #40]	; (80041d4 <BSP_I2C1_DeInit+0x44>)
 80041aa:	2180      	movs	r1, #128	; 0x80
 80041ac:	f001 fa50 	bl	8005650 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C1_CLK_DISABLE();
 80041b0:	4a09      	ldr	r2, [pc, #36]	; (80041d8 <BSP_I2C1_DeInit+0x48>)
    if (HAL_I2C_DeInit(&hbus_i2c1) != HAL_OK)
 80041b2:	480a      	ldr	r0, [pc, #40]	; (80041dc <BSP_I2C1_DeInit+0x4c>)
  BUS_I2C1_CLK_DISABLE();
 80041b4:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 80041b8:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80041bc:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
    if (HAL_I2C_DeInit(&hbus_i2c1) != HAL_OK)
 80041c0:	f001 fc78 	bl	8005ab4 <HAL_I2C_DeInit>
 80041c4:	2800      	cmp	r0, #0
 80041c6:	d0e9      	beq.n	800419c <BSP_I2C1_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
 80041c8:	f06f 0007 	mvn.w	r0, #7
  return ret;
 80041cc:	e7e7      	b.n	800419e <BSP_I2C1_DeInit+0xe>
 80041ce:	bf00      	nop
 80041d0:	24004a68 	.word	0x24004a68
 80041d4:	58020400 	.word	0x58020400
 80041d8:	58024400 	.word	0x58024400
 80041dc:	24005470 	.word	0x24005470

080041e0 <MX_I2C1_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 80041e0:	2300      	movs	r3, #0
 80041e2:	2201      	movs	r2, #1
{
 80041e4:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 80041e6:	6041      	str	r1, [r0, #4]
{
 80041e8:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 80041ea:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 80041ec:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 80041f0:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 80041f4:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 80041f8:	f001 fc0a 	bl	8005a10 <HAL_I2C_Init>
 80041fc:	4601      	mov	r1, r0
 80041fe:	b108      	cbz	r0, 8004204 <MX_I2C1_Init+0x24>
    status = HAL_ERROR;
 8004200:	2001      	movs	r0, #1
}
 8004202:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 8004204:	4620      	mov	r0, r4
 8004206:	f001 fe2c 	bl	8005e62 <HAL_I2CEx_ConfigAnalogFilter>
 800420a:	4601      	mov	r1, r0
 800420c:	2800      	cmp	r0, #0
 800420e:	d1f7      	bne.n	8004200 <MX_I2C1_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 8004210:	4620      	mov	r0, r4
 8004212:	f001 fe4c 	bl	8005eae <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
 8004216:	3800      	subs	r0, #0
 8004218:	bf18      	it	ne
 800421a:	2001      	movne	r0, #1
 800421c:	e7f1      	b.n	8004202 <MX_I2C1_Init+0x22>
	...

08004220 <BSP_I2C1_Init>:
  hbus_i2c1.Instance = BUS_I2C1;
 8004220:	4ba3      	ldr	r3, [pc, #652]	; (80044b0 <BSP_I2C1_Init+0x290>)
 8004222:	48a4      	ldr	r0, [pc, #656]	; (80044b4 <BSP_I2C1_Init+0x294>)
{
 8004224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c1.Instance = BUS_I2C1;
 8004228:	6003      	str	r3, [r0, #0]
{
 800422a:	b093      	sub	sp, #76	; 0x4c
  if (I2c1InitCounter == 0U)
 800422c:	4ba2      	ldr	r3, [pc, #648]	; (80044b8 <BSP_I2C1_Init+0x298>)
 800422e:	681c      	ldr	r4, [r3, #0]
 8004230:	2c00      	cmp	r4, #0
 8004232:	f040 80cd 	bne.w	80043d0 <BSP_I2C1_Init+0x1b0>
    I2c1InitCounter++;
 8004236:	2201      	movs	r2, #1
 8004238:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c1) == HAL_I2C_STATE_RESET)
 800423a:	f001 fe0d 	bl	8005e58 <HAL_I2C_GetState>
 800423e:	2800      	cmp	r0, #0
 8004240:	f040 80c6 	bne.w	80043d0 <BSP_I2C1_Init+0x1b0>
  BUS_I2C1_SCL_GPIO_CLK_ENABLE();
 8004244:	4d9d      	ldr	r5, [pc, #628]	; (80044bc <BSP_I2C1_Init+0x29c>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8004246:	f04f 0812 	mov.w	r8, #18
  gpio_init_structure.Alternate = BUS_I2C1_SCL_AF;
 800424a:	2702      	movs	r7, #2
 800424c:	2604      	movs	r6, #4
  BUS_I2C1_SCL_GPIO_CLK_ENABLE();
 800424e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  HAL_GPIO_Init(BUS_I2C1_SCL_GPIO_PORT, &gpio_init_structure);
 8004252:	a90d      	add	r1, sp, #52	; 0x34
 8004254:	489a      	ldr	r0, [pc, #616]	; (80044c0 <BSP_I2C1_Init+0x2a0>)
  BUS_I2C1_SCL_GPIO_CLK_ENABLE();
 8004256:	f043 0302 	orr.w	r3, r3, #2
 800425a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 800425e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8004262:	f003 0302 	and.w	r3, r3, #2
 8004266:	930a      	str	r3, [sp, #40]	; 0x28
 8004268:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C1_SDA_GPIO_CLK_ENABLE();
 800426a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 800426e:	f043 0302 	orr.w	r3, r3, #2
 8004272:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 8004276:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800427a:	940f      	str	r4, [sp, #60]	; 0x3c
  BUS_I2C1_SDA_GPIO_CLK_ENABLE();
 800427c:	f003 0302 	and.w	r3, r3, #2
 8004280:	930b      	str	r3, [sp, #44]	; 0x2c
 8004282:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8004284:	2340      	movs	r3, #64	; 0x40
  gpio_init_structure.Alternate = BUS_I2C1_SCL_AF;
 8004286:	e9cd 7610 	strd	r7, r6, [sp, #64]	; 0x40
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 800428a:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  HAL_GPIO_Init(BUS_I2C1_SCL_GPIO_PORT, &gpio_init_structure);
 800428e:	f001 f8f5 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin 		= BUS_I2C1_SDA_PIN;
 8004292:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(BUS_I2C1_SDA_GPIO_PORT, &gpio_init_structure);
 8004294:	a90d      	add	r1, sp, #52	; 0x34
 8004296:	488a      	ldr	r0, [pc, #552]	; (80044c0 <BSP_I2C1_Init+0x2a0>)
  gpio_init_structure.Alternate = BUS_I2C1_SDA_AF;
 8004298:	9611      	str	r6, [sp, #68]	; 0x44
  gpio_init_structure.Mode 		= GPIO_MODE_AF_OD;
 800429a:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
 800429e:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C1_SDA_GPIO_PORT, &gpio_init_structure);
 80042a2:	f001 f8eb 	bl	800547c <HAL_GPIO_Init>
  BUS_I2C1_CLK_ENABLE();
 80042a6:	f8d5 30e8 	ldr.w	r3, [r5, #232]	; 0xe8
 80042aa:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80042ae:	f8c5 30e8 	str.w	r3, [r5, #232]	; 0xe8
 80042b2:	f8d5 30e8 	ldr.w	r3, [r5, #232]	; 0xe8
 80042b6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80042ba:	930c      	str	r3, [sp, #48]	; 0x30
 80042bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C1_FORCE_RESET();
 80042be:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80042c2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80042c6:	f8c5 3090 	str.w	r3, [r5, #144]	; 0x90
  BUS_I2C1_RELEASE_RESET();
 80042ca:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80042ce:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80042d2:	f8c5 3090 	str.w	r3, [r5, #144]	; 0x90
        if (MX_I2C1_Init(&hbus_i2c1, I2C_GetTiming(HAL_RCC_GetPCLK1Freq(), BUS_I2C1_FREQUENCY)) != HAL_OK)
 80042d6:	f003 f83d 	bl	8007354 <HAL_RCC_GetPCLK1Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
 80042da:	2800      	cmp	r0, #0
 80042dc:	d072      	beq.n	80043c4 <BSP_I2C1_Init+0x1a4>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 80042de:	4b79      	ldr	r3, [pc, #484]	; (80044c4 <BSP_I2C1_Init+0x2a4>)
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 80042e0:	f640 16f6 	movw	r6, #2550	; 0x9f6
 80042e4:	4622      	mov	r2, r4
 80042e6:	46a1      	mov	r9, r4
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 80042e8:	eb03 0350 	add.w	r3, r3, r0, lsr #1
  uint32_t prev_presc = I2C_PRESC_MAX;
 80042ec:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 80042f0:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 80044cc <BSP_I2C1_Init+0x2ac>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 80042f4:	fbb3 f0f0 	udiv	r0, r3, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 80042f8:	f06f 031d 	mvn.w	r3, #29
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 80042fc:	eb00 0540 	add.w	r5, r0, r0, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8004300:	eba6 0680 	sub.w	r6, r6, r0, lsl #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8004304:	4601      	mov	r1, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8004306:	1b5b      	subs	r3, r3, r5
 8004308:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800430c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004310:	9300      	str	r3, [sp, #0]
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8004312:	4b6d      	ldr	r3, [pc, #436]	; (80044c8 <BSP_I2C1_Init+0x2a8>)
 8004314:	681b      	ldr	r3, [r3, #0]
{
 8004316:	4688      	mov	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8004318:	f04f 0c00 	mov.w	ip, #0
      if (tscldel >= (uint32_t)tscldel_min)
 800431c:	f240 3579 	movw	r5, #889	; 0x379
 8004320:	f8cd c004 	str.w	ip, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 8004324:	f10c 0c01 	add.w	ip, ip, #1
      if (tscldel >= (uint32_t)tscldel_min)
 8004328:	45a8      	cmp	r8, r5
 800432a:	d95e      	bls.n	80043ea <BSP_I2C1_Init+0x1ca>
 800432c:	2700      	movs	r7, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 800432e:	46be      	mov	lr, r7
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 8004330:	9d00      	ldr	r5, [sp, #0]
 8004332:	42bd      	cmp	r5, r7
 8004334:	d853      	bhi.n	80043de <BSP_I2C1_Init+0x1be>
 8004336:	42be      	cmp	r6, r7
 8004338:	d351      	bcc.n	80043de <BSP_I2C1_Init+0x1be>
            if(presc != prev_presc)
 800433a:	4592      	cmp	sl, r2
 800433c:	d04f      	beq.n	80043de <BSP_I2C1_Init+0x1be>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800433e:	2514      	movs	r5, #20
 8004340:	fb05 fa03 	mul.w	sl, r5, r3
              I2c_valid_timing_nbr ++;
 8004344:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 8004346:	9d01      	ldr	r5, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8004348:	eb0b 090a 	add.w	r9, fp, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 800434c:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800434e:	f84b 200a 	str.w	r2, [fp, sl]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 8004352:	e9c9 5e01 	strd	r5, lr, [r9, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 8004356:	d93f      	bls.n	80043d8 <BSP_I2C1_Init+0x1b8>
 8004358:	4a5b      	ldr	r2, [pc, #364]	; (80044c8 <BSP_I2C1_Init+0x2a8>)
 800435a:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 800435c:	4b5a      	ldr	r3, [pc, #360]	; (80044c8 <BSP_I2C1_Init+0x2a8>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 800435e:	f242 7210 	movw	r2, #10000	; 0x2710
 8004362:	495a      	ldr	r1, [pc, #360]	; (80044cc <BSP_I2C1_Init+0x2ac>)
 8004364:	2700      	movs	r7, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8004366:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8004368:	9203      	str	r2, [sp, #12]
 800436a:	f04f 32ff 	mov.w	r2, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 800436e:	9305      	str	r3, [sp, #20]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8004370:	0043      	lsls	r3, r0, #1
 8004372:	9201      	str	r2, [sp, #4]
 8004374:	f103 0532 	add.w	r5, r3, #50	; 0x32
 8004378:	f5c3 5b90 	rsb	fp, r3, #4608	; 0x1200
 800437c:	f5a3 5311 	sub.w	r3, r3, #9280	; 0x2440
 8004380:	f10b 0b0c 	add.w	fp, fp, #12
 8004384:	9509      	str	r5, [sp, #36]	; 0x24
 8004386:	3b0a      	subs	r3, #10
 8004388:	9302      	str	r3, [sp, #8]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 800438a:	9b05      	ldr	r3, [sp, #20]
 800438c:	429f      	cmp	r7, r3
 800438e:	d138      	bne.n	8004402 <BSP_I2C1_Init+0x1e2>
        if (idx < I2C_VALID_TIMING_NBR)
 8004390:	9b01      	ldr	r3, [sp, #4]
 8004392:	2b7f      	cmp	r3, #127	; 0x7f
 8004394:	d816      	bhi.n	80043c4 <BSP_I2C1_Init+0x1a4>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004396:	2114      	movs	r1, #20
 8004398:	9a01      	ldr	r2, [sp, #4]
 800439a:	4b4c      	ldr	r3, [pc, #304]	; (80044cc <BSP_I2C1_Init+0x2ac>)
 800439c:	434a      	muls	r2, r1
 800439e:	1899      	adds	r1, r3, r2
 80043a0:	589b      	ldr	r3, [r3, r2]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 80043a2:	7c0c      	ldrb	r4, [r1, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80043a4:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
 80043a8:	684b      	ldr	r3, [r1, #4]
 80043aa:	051b      	lsls	r3, r3, #20
 80043ac:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80043b0:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
 80043b2:	688b      	ldr	r3, [r1, #8]
 80043b4:	041b      	lsls	r3, r3, #16
 80043b6:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80043ba:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
 80043bc:	68cb      	ldr	r3, [r1, #12]
 80043be:	021b      	lsls	r3, r3, #8
 80043c0:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80043c2:	431c      	orrs	r4, r3
        if (MX_I2C1_Init(&hbus_i2c1, I2C_GetTiming(HAL_RCC_GetPCLK1Freq(), BUS_I2C1_FREQUENCY)) != HAL_OK)
 80043c4:	4621      	mov	r1, r4
 80043c6:	483b      	ldr	r0, [pc, #236]	; (80044b4 <BSP_I2C1_Init+0x294>)
 80043c8:	f7ff ff0a 	bl	80041e0 <MX_I2C1_Init>
 80043cc:	2800      	cmp	r0, #0
 80043ce:	d16c      	bne.n	80044aa <BSP_I2C1_Init+0x28a>
  int32_t ret = BSP_ERROR_NONE;
 80043d0:	2000      	movs	r0, #0
}
 80043d2:	b013      	add	sp, #76	; 0x4c
 80043d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043d8:	4692      	mov	sl, r2
 80043da:	f04f 0901 	mov.w	r9, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 80043de:	f10e 0e01 	add.w	lr, lr, #1
 80043e2:	440f      	add	r7, r1
 80043e4:	f1be 0f10 	cmp.w	lr, #16
 80043e8:	d1a2      	bne.n	8004330 <BSP_I2C1_Init+0x110>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 80043ea:	f1bc 0f10 	cmp.w	ip, #16
 80043ee:	4488      	add	r8, r1
 80043f0:	d194      	bne.n	800431c <BSP_I2C1_Init+0xfc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 80043f2:	3201      	adds	r2, #1
 80043f4:	4401      	add	r1, r0
 80043f6:	2a10      	cmp	r2, #16
 80043f8:	d18d      	bne.n	8004316 <BSP_I2C1_Init+0xf6>
 80043fa:	f1b9 0f00 	cmp.w	r9, #0
 80043fe:	d1ab      	bne.n	8004358 <BSP_I2C1_Init+0x138>
 8004400:	e7ac      	b.n	800435c <BSP_I2C1_Init+0x13c>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8004402:	680b      	ldr	r3, [r1, #0]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004404:	f04f 0c00 	mov.w	ip, #0
 8004408:	9d09      	ldr	r5, [sp, #36]	; 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 800440a:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 800440e:	9e02      	ldr	r6, [sp, #8]
 8004410:	441d      	add	r5, r3
 8004412:	441e      	add	r6, r3
 8004414:	9504      	str	r5, [sp, #16]
 8004416:	ebab 0503 	sub.w	r5, fp, r3
 800441a:	9608      	str	r6, [sp, #32]
 800441c:	006d      	lsls	r5, r5, #1
 800441e:	9500      	str	r5, [sp, #0]
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8004420:	9d04      	ldr	r5, [sp, #16]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8004422:	f241 225c 	movw	r2, #4700	; 0x125c
 8004426:	f8cd c018 	str.w	ip, [sp, #24]
 800442a:	f1a5 0632 	sub.w	r6, r5, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 800442e:	f10c 0c01 	add.w	ip, ip, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8004432:	4295      	cmp	r5, r2
 8004434:	d92e      	bls.n	8004494 <BSP_I2C1_Init+0x274>
 8004436:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 800443a:	d22b      	bcs.n	8004494 <BSP_I2C1_Init+0x274>
 800443c:	9e08      	ldr	r6, [sp, #32]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 800443e:	f04f 0e00 	mov.w	lr, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8004442:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8004446:	442e      	add	r6, r5
 8004448:	f8dd 9000 	ldr.w	r9, [sp]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 800444c:	f206 6a83 	addw	sl, r6, #1667	; 0x683
 8004450:	f241 0247 	movw	r2, #4167	; 0x1047
 8004454:	f8cd e01c 	str.w	lr, [sp, #28]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 8004458:	f10e 0e01 	add.w	lr, lr, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 800445c:	4592      	cmp	sl, r2
 800445e:	d812      	bhi.n	8004486 <BSP_I2C1_Init+0x266>
 8004460:	f5b8 6f7a 	cmp.w	r8, #4000	; 0xfa0
 8004464:	d30f      	bcc.n	8004486 <BSP_I2C1_Init+0x266>
 8004466:	4540      	cmp	r0, r8
 8004468:	d20d      	bcs.n	8004486 <BSP_I2C1_Init+0x266>
              error = -error;
 800446a:	ea36 0a26 	bics.w	sl, r6, r6, asr #32
 800446e:	bf28      	it	cs
 8004470:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
 8004472:	9a03      	ldr	r2, [sp, #12]
 8004474:	4592      	cmp	sl, r2
 8004476:	d206      	bcs.n	8004486 <BSP_I2C1_Init+0x266>
              I2c_valid_timing[count].scll = scll;
 8004478:	9a06      	ldr	r2, [sp, #24]
              I2c_valid_timing[count].sclh = sclh;
 800447a:	f8cd a00c 	str.w	sl, [sp, #12]
              I2c_valid_timing[count].scll = scll;
 800447e:	610a      	str	r2, [r1, #16]
              I2c_valid_timing[count].sclh = sclh;
 8004480:	9a07      	ldr	r2, [sp, #28]
 8004482:	9701      	str	r7, [sp, #4]
 8004484:	60ca      	str	r2, [r1, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8004486:	f5be 7f80 	cmp.w	lr, #256	; 0x100
 800448a:	441e      	add	r6, r3
 800448c:	eba9 0903 	sub.w	r9, r9, r3
 8004490:	4498      	add	r8, r3
 8004492:	d1db      	bne.n	800444c <BSP_I2C1_Init+0x22c>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004494:	9a00      	ldr	r2, [sp, #0]
 8004496:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 800449a:	441d      	add	r5, r3
 800449c:	eba2 0203 	sub.w	r2, r2, r3
 80044a0:	9200      	str	r2, [sp, #0]
 80044a2:	d1be      	bne.n	8004422 <BSP_I2C1_Init+0x202>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80044a4:	3701      	adds	r7, #1
 80044a6:	3114      	adds	r1, #20
 80044a8:	e76f      	b.n	800438a <BSP_I2C1_Init+0x16a>
          ret = BSP_ERROR_BUS_FAILURE;
 80044aa:	f06f 0007 	mvn.w	r0, #7
  return ret;
 80044ae:	e790      	b.n	80043d2 <BSP_I2C1_Init+0x1b2>
 80044b0:	40005400 	.word	0x40005400
 80044b4:	24005470 	.word	0x24005470
 80044b8:	24004a68 	.word	0x24004a68
 80044bc:	58024400 	.word	0x58024400
 80044c0:	58020400 	.word	0x58020400
 80044c4:	3b9aca00 	.word	0x3b9aca00
 80044c8:	2400546c 	.word	0x2400546c
 80044cc:	24004a6c 	.word	0x24004a6c

080044d0 <BSP_I2C1_WriteReg>:
{
 80044d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C1_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c1, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 80044d2:	f242 7410 	movw	r4, #10000	; 0x2710
 80044d6:	9200      	str	r2, [sp, #0]
 80044d8:	460a      	mov	r2, r1
 80044da:	4601      	mov	r1, r0
 80044dc:	4808      	ldr	r0, [pc, #32]	; (8004500 <BSP_I2C1_WriteReg+0x30>)
 80044de:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80044e2:	2301      	movs	r3, #1
 80044e4:	f001 fb00 	bl	8005ae8 <HAL_I2C_Mem_Write>
 80044e8:	b140      	cbz	r0, 80044fc <BSP_I2C1_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c1) == HAL_I2C_ERROR_AF)
 80044ea:	4805      	ldr	r0, [pc, #20]	; (8004500 <BSP_I2C1_WriteReg+0x30>)
 80044ec:	f001 fcb7 	bl	8005e5e <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 80044f0:	2804      	cmp	r0, #4
 80044f2:	bf0c      	ite	eq
 80044f4:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 80044f8:	f06f 0003 	mvnne.w	r0, #3
}
 80044fc:	b004      	add	sp, #16
 80044fe:	bd10      	pop	{r4, pc}
 8004500:	24005470 	.word	0x24005470

08004504 <BSP_I2C1_ReadReg>:
{
 8004504:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C1_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c1, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 8004506:	f242 7410 	movw	r4, #10000	; 0x2710
 800450a:	9200      	str	r2, [sp, #0]
 800450c:	460a      	mov	r2, r1
 800450e:	4601      	mov	r1, r0
 8004510:	4808      	ldr	r0, [pc, #32]	; (8004534 <BSP_I2C1_ReadReg+0x30>)
 8004512:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004516:	2301      	movs	r3, #1
 8004518:	f001 fbc0 	bl	8005c9c <HAL_I2C_Mem_Read>
 800451c:	b140      	cbz	r0, 8004530 <BSP_I2C1_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c1) == HAL_I2C_ERROR_AF)
 800451e:	4805      	ldr	r0, [pc, #20]	; (8004534 <BSP_I2C1_ReadReg+0x30>)
 8004520:	f001 fc9d 	bl	8005e5e <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8004524:	2804      	cmp	r0, #4
 8004526:	bf0c      	ite	eq
 8004528:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 800452c:	f06f 0003 	mvnne.w	r0, #3
}
 8004530:	b004      	add	sp, #16
 8004532:	bd10      	pop	{r4, pc}
 8004534:	24005470 	.word	0x24005470

08004538 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 8004538:	f000 bdaa 	b.w	8005090 <HAL_GetTick>

0800453c <MX_QSPI_Init>:
  */
__weak HAL_StatusTypeDef MX_QSPI_Init(QSPI_HandleTypeDef *hQspi, MX_QSPI_Init_t *Config)
{
  /* QSPI initialization */
  /* QSPI freq = SYSCLK /(1 + ClockPrescaler) Mhz */
  hQspi->Instance                = QUADSPI;
 800453c:	4a09      	ldr	r2, [pc, #36]	; (8004564 <MX_QSPI_Init+0x28>)
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
  hQspi->Init.FifoThreshold      = 1;
  hQspi->Init.SampleShifting     = Config->SampleShifting;
  hQspi->Init.FlashSize          = Config->FlashSize;
  hQspi->Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE; /* Min 50ns for nonRead */
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800453e:	f44f 7c40 	mov.w	ip, #768	; 0x300
  hQspi->Instance                = QUADSPI;
 8004542:	6002      	str	r2, [r0, #0]
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
 8004544:	684a      	ldr	r2, [r1, #4]
 8004546:	6042      	str	r2, [r0, #4]
  hQspi->Init.FifoThreshold      = 1;
 8004548:	2201      	movs	r2, #1
 800454a:	6082      	str	r2, [r0, #8]
  hQspi->Init.SampleShifting     = Config->SampleShifting;
 800454c:	688a      	ldr	r2, [r1, #8]
 800454e:	60c2      	str	r2, [r0, #12]
  hQspi->Init.FlashSize          = Config->FlashSize;
 8004550:	680a      	ldr	r2, [r1, #0]
 8004552:	6102      	str	r2, [r0, #16]
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8004554:	2200      	movs	r2, #0
 8004556:	e9c0 c205 	strd	ip, r2, [r0, #20]
  hQspi->Init.FlashID            = QSPI_FLASH_ID_1;
 800455a:	61c2      	str	r2, [r0, #28]
  hQspi->Init.DualFlash          = Config->DualFlashMode;
 800455c:	68ca      	ldr	r2, [r1, #12]
 800455e:	6202      	str	r2, [r0, #32]

  return HAL_QSPI_Init(hQspi);
 8004560:	f002 b82e 	b.w	80065c0 <HAL_QSPI_Init>
 8004564:	52005000 	.word	0x52005000

08004568 <BSP_QSPI_EnableMemoryMappedMode>:
  *         Only 1 Instance can running MMP mode. And it will lock system at this mode.
  * @param  Instance  QSPI instance
  * @retval BSP status
  */
int32_t BSP_QSPI_EnableMemoryMappedMode(uint32_t Instance)
{
 8004568:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 800456a:	b988      	cbnz	r0, 8004590 <BSP_QSPI_EnableMemoryMappedMode+0x28>
  }
  else
  {
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
    {
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800456c:	4c0a      	ldr	r4, [pc, #40]	; (8004598 <BSP_QSPI_EnableMemoryMappedMode+0x30>)
 800456e:	480b      	ldr	r0, [pc, #44]	; (800459c <BSP_QSPI_EnableMemoryMappedMode+0x34>)
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 8004570:	78a3      	ldrb	r3, [r4, #2]
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004572:	7861      	ldrb	r1, [r4, #1]
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 8004574:	b94b      	cbnz	r3, 800458a <BSP_QSPI_EnableMemoryMappedMode+0x22>
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004576:	f7ff fc93 	bl	8003ea0 <MT25TL01G_EnableMemoryMappedModeSTR>
 800457a:	b110      	cbz	r0, 8004582 <BSP_QSPI_EnableMemoryMappedMode+0x1a>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
 800457c:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 8004580:	bd10      	pop	{r4, pc}
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 8004582:	2302      	movs	r3, #2
  int32_t ret = BSP_ERROR_NONE;
 8004584:	2000      	movs	r0, #0
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 8004586:	7023      	strb	r3, [r4, #0]
 8004588:	e7fa      	b.n	8004580 <BSP_QSPI_EnableMemoryMappedMode+0x18>
      if(MT25TL01G_EnableMemoryMappedModeDTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800458a:	f7ff fc3f 	bl	8003e0c <MT25TL01G_EnableMemoryMappedModeDTR>
 800458e:	e7f4      	b.n	800457a <BSP_QSPI_EnableMemoryMappedMode+0x12>
    ret = BSP_ERROR_WRONG_PARAM;
 8004590:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004594:	e7f4      	b.n	8004580 <BSP_QSPI_EnableMemoryMappedMode+0x18>
 8004596:	bf00      	nop
 8004598:	240054c4 	.word	0x240054c4
 800459c:	240054d0 	.word	0x240054d0

080045a0 <BSP_QSPI_DisableMemoryMappedMode>:
  *         Only 1 Instance can running MMP mode. And it will lock system at this mode.
  * @param  Instance  QSPI instance
  * @retval BSP status
  */
int32_t BSP_QSPI_DisableMemoryMappedMode(uint32_t Instance)
{
 80045a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Dummy;
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 80045a2:	b9f8      	cbnz	r0, 80045e4 <BSP_QSPI_DisableMemoryMappedMode+0x44>
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    if(QSPI_Ctx[Instance].IsInitialized != QSPI_ACCESS_MMP)
 80045a4:	4d14      	ldr	r5, [pc, #80]	; (80045f8 <BSP_QSPI_DisableMemoryMappedMode+0x58>)
 80045a6:	782b      	ldrb	r3, [r5, #0]
 80045a8:	2b02      	cmp	r3, #2
 80045aa:	d11e      	bne.n	80045ea <BSP_QSPI_DisableMemoryMappedMode+0x4a>
    {
      ret = BSP_ERROR_QSPI_MMP_UNLOCK_FAILURE;
    }/* Abort MMP back to indirect mode */
    else if(HAL_QSPI_Abort(&hqspi) != HAL_OK)
 80045ac:	4c13      	ldr	r4, [pc, #76]	; (80045fc <BSP_QSPI_DisableMemoryMappedMode+0x5c>)
 80045ae:	4620      	mov	r0, r4
 80045b0:	f002 f9f1 	bl	8006996 <HAL_QSPI_Abort>
 80045b4:	b118      	cbz	r0, 80045be <BSP_QSPI_DisableMemoryMappedMode+0x1e>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 80045b6:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }
  /* Return BSP status */
  return ret;
}
 80045ba:	b004      	add	sp, #16
 80045bc:	bd70      	pop	{r4, r5, r6, pc}
      hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80045be:	2310      	movs	r3, #16
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 80045c0:	4620      	mov	r0, r4
      hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80045c2:	60e3      	str	r3, [r4, #12]
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 80045c4:	f001 fffc 	bl	80065c0 <HAL_QSPI_Init>
 80045c8:	4603      	mov	r3, r0
 80045ca:	2800      	cmp	r0, #0
 80045cc:	d1f3      	bne.n	80045b6 <BSP_QSPI_DisableMemoryMappedMode+0x16>
      else if(MT25TL01G_ReadSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode, &Dummy, 0, 1) != MT25TL01G_OK)
 80045ce:	2601      	movs	r6, #1
 80045d0:	f10d 020f 	add.w	r2, sp, #15
 80045d4:	7869      	ldrb	r1, [r5, #1]
 80045d6:	4620      	mov	r0, r4
 80045d8:	9600      	str	r6, [sp, #0]
 80045da:	f7ff fb8b 	bl	8003cf4 <MT25TL01G_ReadSTR>
 80045de:	b938      	cbnz	r0, 80045f0 <BSP_QSPI_DisableMemoryMappedMode+0x50>
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 80045e0:	702e      	strb	r6, [r5, #0]
 80045e2:	e7ea      	b.n	80045ba <BSP_QSPI_DisableMemoryMappedMode+0x1a>
    ret = BSP_ERROR_WRONG_PARAM;
 80045e4:	f06f 0001 	mvn.w	r0, #1
 80045e8:	e7e7      	b.n	80045ba <BSP_QSPI_DisableMemoryMappedMode+0x1a>
      ret = BSP_ERROR_QSPI_MMP_UNLOCK_FAILURE;
 80045ea:	f06f 001a 	mvn.w	r0, #26
 80045ee:	e7e4      	b.n	80045ba <BSP_QSPI_DisableMemoryMappedMode+0x1a>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 80045f0:	f06f 0004 	mvn.w	r0, #4
  return ret;
 80045f4:	e7e1      	b.n	80045ba <BSP_QSPI_DisableMemoryMappedMode+0x1a>
 80045f6:	bf00      	nop
 80045f8:	240054c4 	.word	0x240054c4
 80045fc:	240054d0 	.word	0x240054d0

08004600 <BSP_QSPI_DeInit>:
{
 8004600:	b538      	push	{r3, r4, r5, lr}
  if(Instance >= QSPI_INSTANCES_NUMBER)
 8004602:	2800      	cmp	r0, #0
 8004604:	d158      	bne.n	80046b8 <BSP_QSPI_DeInit+0xb8>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_MMP)
 8004606:	4c2e      	ldr	r4, [pc, #184]	; (80046c0 <BSP_QSPI_DeInit+0xc0>)
 8004608:	7823      	ldrb	r3, [r4, #0]
 800460a:	2b02      	cmp	r3, #2
 800460c:	d04d      	beq.n	80046aa <BSP_QSPI_DeInit+0xaa>
      QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_NONE;
 800460e:	2300      	movs	r3, #0
      QSPI_Ctx[Instance].DualFlashMode = QSPI_DUALFLASH_ENABLE;
 8004610:	2540      	movs	r5, #64	; 0x40
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hQspi);

  /*##-2- Disable peripherals and GPIO Clocks ################################*/
  /* De-Configure QSPI pins */
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8004612:	2104      	movs	r1, #4
 8004614:	482b      	ldr	r0, [pc, #172]	; (80046c4 <BSP_QSPI_DeInit+0xc4>)
      QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_NONE;
 8004616:	8023      	strh	r3, [r4, #0]
      QSPI_Ctx[Instance].TransferRate  = BSP_QSPI_STR_TRANSFER;
 8004618:	70a3      	strb	r3, [r4, #2]
      QSPI_Ctx[Instance].DualFlashMode = QSPI_DUALFLASH_ENABLE;
 800461a:	6065      	str	r5, [r4, #4]
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800461c:	f001 f818 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_CS_GPIO_PORT, QSPI_BK1_CS_PIN);
 8004620:	4629      	mov	r1, r5
 8004622:	4829      	ldr	r0, [pc, #164]	; (80046c8 <BSP_QSPI_DeInit+0xc8>)
 8004624:	f001 f814 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D0_GPIO_PORT, QSPI_BK1_D0_PIN);
 8004628:	f44f 7180 	mov.w	r1, #256	; 0x100
 800462c:	4827      	ldr	r0, [pc, #156]	; (80046cc <BSP_QSPI_DeInit+0xcc>)
 800462e:	f001 f80f 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D1_GPIO_PORT, QSPI_BK1_D1_PIN);
 8004632:	f44f 7100 	mov.w	r1, #512	; 0x200
 8004636:	4825      	ldr	r0, [pc, #148]	; (80046cc <BSP_QSPI_DeInit+0xcc>)
 8004638:	f001 f80a 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D2_GPIO_PORT, QSPI_BK1_D2_PIN);
 800463c:	2180      	movs	r1, #128	; 0x80
 800463e:	4823      	ldr	r0, [pc, #140]	; (80046cc <BSP_QSPI_DeInit+0xcc>)
 8004640:	f001 f806 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D3_GPIO_PORT, QSPI_BK1_D3_PIN);
 8004644:	4629      	mov	r1, r5
 8004646:	4821      	ldr	r0, [pc, #132]	; (80046cc <BSP_QSPI_DeInit+0xcc>)
 8004648:	f001 f802 	bl	8005650 <HAL_GPIO_DeInit>

  HAL_GPIO_DeInit(QSPI_BK2_CS_GPIO_PORT, QSPI_BK2_CS_PIN);
 800464c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8004650:	481f      	ldr	r0, [pc, #124]	; (80046d0 <BSP_QSPI_DeInit+0xd0>)
 8004652:	f000 fffd 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D0_GPIO_PORT, QSPI_BK2_D0_PIN);
 8004656:	2104      	movs	r1, #4
 8004658:	481e      	ldr	r0, [pc, #120]	; (80046d4 <BSP_QSPI_DeInit+0xd4>)
 800465a:	f000 fff9 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D1_GPIO_PORT, QSPI_BK2_D1_PIN);
 800465e:	2108      	movs	r1, #8
 8004660:	481c      	ldr	r0, [pc, #112]	; (80046d4 <BSP_QSPI_DeInit+0xd4>)
 8004662:	f000 fff5 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D2_GPIO_PORT, QSPI_BK2_D2_PIN);
 8004666:	f44f 7100 	mov.w	r1, #512	; 0x200
 800466a:	4817      	ldr	r0, [pc, #92]	; (80046c8 <BSP_QSPI_DeInit+0xc8>)
 800466c:	f000 fff0 	bl	8005650 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D3_GPIO_PORT, QSPI_BK2_D3_PIN);
 8004670:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8004674:	4814      	ldr	r0, [pc, #80]	; (80046c8 <BSP_QSPI_DeInit+0xc8>)
 8004676:	f000 ffeb 	bl	8005650 <HAL_GPIO_DeInit>

  /*##-3- Reset peripherals ##################################################*/
  /* Reset the QuadSPI memory interface */
  QSPI_FORCE_RESET();
 800467a:	4b17      	ldr	r3, [pc, #92]	; (80046d8 <BSP_QSPI_DeInit+0xd8>)
      if (HAL_QSPI_DeInit(&hqspi) != HAL_OK)
 800467c:	4817      	ldr	r0, [pc, #92]	; (80046dc <BSP_QSPI_DeInit+0xdc>)
  QSPI_FORCE_RESET();
 800467e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8004680:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004684:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_RELEASE_RESET();
 8004686:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8004688:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800468c:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Disable the QuadSPI memory interface clock */
  QSPI_CLK_DISABLE();
 800468e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004692:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004696:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
      if (HAL_QSPI_DeInit(&hqspi) != HAL_OK)
 800469a:	f001 ffdf 	bl	800665c <HAL_QSPI_DeInit>
        ret = BSP_ERROR_PERIPH_FAILURE;
 800469e:	2800      	cmp	r0, #0
 80046a0:	bf0c      	ite	eq
 80046a2:	2000      	moveq	r0, #0
 80046a4:	f06f 0003 	mvnne.w	r0, #3
}
 80046a8:	bd38      	pop	{r3, r4, r5, pc}
      if(BSP_QSPI_DisableMemoryMappedMode(Instance) != BSP_ERROR_NONE)
 80046aa:	f7ff ff79 	bl	80045a0 <BSP_QSPI_DisableMemoryMappedMode>
 80046ae:	2800      	cmp	r0, #0
 80046b0:	d0ad      	beq.n	800460e <BSP_QSPI_DeInit+0xe>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 80046b2:	f06f 0004 	mvn.w	r0, #4
 80046b6:	e7f7      	b.n	80046a8 <BSP_QSPI_DeInit+0xa8>
    ret = BSP_ERROR_WRONG_PARAM;
 80046b8:	f06f 0001 	mvn.w	r0, #1
 80046bc:	e7f4      	b.n	80046a8 <BSP_QSPI_DeInit+0xa8>
 80046be:	bf00      	nop
 80046c0:	240054c4 	.word	0x240054c4
 80046c4:	58020400 	.word	0x58020400
 80046c8:	58021800 	.word	0x58021800
 80046cc:	58021400 	.word	0x58021400
 80046d0:	58020800 	.word	0x58020800
 80046d4:	58021c00 	.word	0x58021c00
 80046d8:	58024400 	.word	0x58024400
 80046dc:	240054d0 	.word	0x240054d0

080046e0 <BSP_QSPI_ConfigFlash>:
{
 80046e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046e2:	460c      	mov	r4, r1
 80046e4:	4617      	mov	r7, r2
  if(Instance >= QSPI_INSTANCES_NUMBER)
 80046e6:	bb30      	cbnz	r0, 8004736 <BSP_QSPI_ConfigFlash+0x56>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_MMP)
 80046e8:	4d17      	ldr	r5, [pc, #92]	; (8004748 <BSP_QSPI_ConfigFlash+0x68>)
 80046ea:	782b      	ldrb	r3, [r5, #0]
 80046ec:	2b02      	cmp	r3, #2
 80046ee:	d025      	beq.n	800473c <BSP_QSPI_ConfigFlash+0x5c>
      hqspi.Init.SampleShifting = (Rate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80046f0:	fab2 f382 	clz	r3, r2
 80046f4:	4e15      	ldr	r6, [pc, #84]	; (800474c <BSP_QSPI_ConfigFlash+0x6c>)
 80046f6:	095b      	lsrs	r3, r3, #5
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 80046f8:	4630      	mov	r0, r6
      hqspi.Init.SampleShifting = (Rate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80046fa:	011b      	lsls	r3, r3, #4
 80046fc:	60f3      	str	r3, [r6, #12]
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 80046fe:	f001 ff5f 	bl	80065c0 <HAL_QSPI_Init>
 8004702:	b9f0      	cbnz	r0, 8004742 <BSP_QSPI_ConfigFlash+0x62>
        switch(QSPI_Ctx[Instance].InterfaceMode)
 8004704:	786b      	ldrb	r3, [r5, #1]
 8004706:	2b03      	cmp	r3, #3
 8004708:	d10f      	bne.n	800472a <BSP_QSPI_ConfigFlash+0x4a>
          if(Mode != MT25TL01G_QPI_MODE)
 800470a:	2c03      	cmp	r4, #3
 800470c:	d105      	bne.n	800471a <BSP_QSPI_ConfigFlash+0x3a>
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 800470e:	2301      	movs	r3, #1
          QSPI_Ctx[Instance].TransferRate  = Rate;
 8004710:	2000      	movs	r0, #0
          QSPI_Ctx[Instance].InterfaceMode = Mode;
 8004712:	706c      	strb	r4, [r5, #1]
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 8004714:	702b      	strb	r3, [r5, #0]
          QSPI_Ctx[Instance].TransferRate  = Rate;
 8004716:	70af      	strb	r7, [r5, #2]
}
 8004718:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if(MT25TL01G_ExitQPIMode(&hqspi) != MT25TL01G_OK)
 800471a:	4630      	mov	r0, r6
 800471c:	f7ff fb5a 	bl	8003dd4 <MT25TL01G_ExitQPIMode>
 8004720:	2800      	cmp	r0, #0
 8004722:	d0f4      	beq.n	800470e <BSP_QSPI_ConfigFlash+0x2e>
              ret = BSP_ERROR_COMPONENT_FAILURE;
 8004724:	f06f 0004 	mvn.w	r0, #4
 8004728:	e7f6      	b.n	8004718 <BSP_QSPI_ConfigFlash+0x38>
          if(Mode == MT25TL01G_QPI_MODE)
 800472a:	2c03      	cmp	r4, #3
 800472c:	d1ef      	bne.n	800470e <BSP_QSPI_ConfigFlash+0x2e>
            if(MT25TL01G_EnterQPIMode(&hqspi) != MT25TL01G_OK)
 800472e:	4630      	mov	r0, r6
 8004730:	f7ff fb34 	bl	8003d9c <MT25TL01G_EnterQPIMode>
 8004734:	e7f4      	b.n	8004720 <BSP_QSPI_ConfigFlash+0x40>
    ret = BSP_ERROR_WRONG_PARAM;
 8004736:	f06f 0001 	mvn.w	r0, #1
 800473a:	e7ed      	b.n	8004718 <BSP_QSPI_ConfigFlash+0x38>
      ret = BSP_ERROR_QSPI_MMP_LOCK_FAILURE;
 800473c:	f06f 0019 	mvn.w	r0, #25
 8004740:	e7ea      	b.n	8004718 <BSP_QSPI_ConfigFlash+0x38>
        ret = BSP_ERROR_PERIPH_FAILURE;
 8004742:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8004746:	e7e7      	b.n	8004718 <BSP_QSPI_ConfigFlash+0x38>
 8004748:	240054c4 	.word	0x240054c4
 800474c:	240054d0 	.word	0x240054d0

08004750 <BSP_QSPI_Init>:
{
 8004750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004754:	460c      	mov	r4, r1
 8004756:	b0a5      	sub	sp, #148	; 0x94
  if(Instance >= QSPI_INSTANCES_NUMBER)
 8004758:	2800      	cmp	r0, #0
 800475a:	f040 81bb 	bne.w	8004ad4 <BSP_QSPI_Init+0x384>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_NONE)
 800475e:	4d03      	ldr	r5, [pc, #12]	; (800476c <BSP_QSPI_Init+0x1c>)
 8004760:	782f      	ldrb	r7, [r5, #0]
 8004762:	b12f      	cbz	r7, 8004770 <BSP_QSPI_Init+0x20>
  int32_t ret = BSP_ERROR_NONE;
 8004764:	2000      	movs	r0, #0
}
 8004766:	b025      	add	sp, #148	; 0x94
 8004768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800476c:	240054c4 	.word	0x240054c4
  QSPI_CLK_ENABLE();
 8004770:	4bc4      	ldr	r3, [pc, #784]	; (8004a84 <BSP_QSPI_Init+0x334>)
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004772:	2609      	movs	r6, #9
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004774:	f04f 0a04 	mov.w	sl, #4
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8004778:	f04f 0b03 	mov.w	fp, #3
  QSPI_CLK_ENABLE();
 800477c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004780:	a916      	add	r1, sp, #88	; 0x58
 8004782:	48c1      	ldr	r0, [pc, #772]	; (8004a88 <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 8004784:	f04f 0840 	mov.w	r8, #64	; 0x40
  QSPI_CLK_ENABLE();
 8004788:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 800478c:	f04f 090a 	mov.w	r9, #10
  QSPI_CLK_ENABLE();
 8004790:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8004794:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004798:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800479c:	9201      	str	r2, [sp, #4]
 800479e:	9a01      	ldr	r2, [sp, #4]
  QSPI_FORCE_RESET();
 80047a0:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80047a2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80047a6:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_RELEASE_RESET();
 80047a8:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80047aa:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80047ae:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_CLK_GPIO_CLK_ENABLE();
 80047b0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80047b4:	f042 0202 	orr.w	r2, r2, #2
 80047b8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80047bc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80047c0:	f002 0202 	and.w	r2, r2, #2
 80047c4:	9202      	str	r2, [sp, #8]
 80047c6:	9a02      	ldr	r2, [sp, #8]
  QSPI_BK1_CS_GPIO_CLK_ENABLE();
 80047c8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80047cc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80047d0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80047d4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80047d8:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80047dc:	9203      	str	r2, [sp, #12]
 80047de:	9a03      	ldr	r2, [sp, #12]
  QSPI_BK1_D0_GPIO_CLK_ENABLE();
 80047e0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80047e4:	f042 0220 	orr.w	r2, r2, #32
 80047e8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80047ec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80047f0:	f002 0220 	and.w	r2, r2, #32
 80047f4:	9204      	str	r2, [sp, #16]
 80047f6:	9a04      	ldr	r2, [sp, #16]
  QSPI_BK1_D1_GPIO_CLK_ENABLE();
 80047f8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80047fc:	f042 0220 	orr.w	r2, r2, #32
 8004800:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004804:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004808:	f002 0220 	and.w	r2, r2, #32
 800480c:	9205      	str	r2, [sp, #20]
 800480e:	9a05      	ldr	r2, [sp, #20]
  QSPI_BK1_D2_GPIO_CLK_ENABLE();
 8004810:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004814:	f042 0220 	orr.w	r2, r2, #32
 8004818:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800481c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004820:	f002 0220 	and.w	r2, r2, #32
 8004824:	9206      	str	r2, [sp, #24]
 8004826:	9a06      	ldr	r2, [sp, #24]
  QSPI_BK1_D3_GPIO_CLK_ENABLE();
 8004828:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800482c:	f042 0220 	orr.w	r2, r2, #32
 8004830:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004834:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004838:	f002 0220 	and.w	r2, r2, #32
 800483c:	9207      	str	r2, [sp, #28]
 800483e:	9a07      	ldr	r2, [sp, #28]
  QSPI_BK2_CS_GPIO_CLK_ENABLE();
 8004840:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004844:	f042 0204 	orr.w	r2, r2, #4
 8004848:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800484c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004850:	f002 0204 	and.w	r2, r2, #4
 8004854:	9208      	str	r2, [sp, #32]
 8004856:	9a08      	ldr	r2, [sp, #32]
  QSPI_BK2_D0_GPIO_CLK_ENABLE();
 8004858:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800485c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004860:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004864:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004868:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800486c:	9209      	str	r2, [sp, #36]	; 0x24
 800486e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  QSPI_BK2_D1_GPIO_CLK_ENABLE();
 8004870:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004874:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004878:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800487c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004880:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004884:	920a      	str	r2, [sp, #40]	; 0x28
 8004886:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  QSPI_BK2_D2_GPIO_CLK_ENABLE();
 8004888:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800488c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004890:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004894:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004898:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800489c:	920b      	str	r2, [sp, #44]	; 0x2c
 800489e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  QSPI_BK2_D3_GPIO_CLK_ENABLE();
 80048a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048a4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80048a8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80048ac:	2202      	movs	r2, #2
  QSPI_BK2_D3_GPIO_CLK_ENABLE();
 80048ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80048b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80048b6:	930c      	str	r3, [sp, #48]	; 0x30
 80048b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80048ba:	e9cd a216 	strd	sl, r2, [sp, #88]	; 0x58
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80048be:	e9cd 7b18 	strd	r7, fp, [sp, #96]	; 0x60
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80048c2:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80048c4:	f000 fdda 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pull      = GPIO_PULLUP;
 80048c8:	2301      	movs	r3, #1
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 80048ca:	a916      	add	r1, sp, #88	; 0x58
 80048cc:	486f      	ldr	r0, [pc, #444]	; (8004a8c <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
 80048ce:	9318      	str	r3, [sp, #96]	; 0x60
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 80048d0:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80048d4:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 80048d8:	f000 fdd0 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80048dc:	2202      	movs	r2, #2
 80048de:	f44f 6100 	mov.w	r1, #2048	; 0x800
  gpio_init_structure.Pull      = GPIO_PULLUP;
 80048e2:	2301      	movs	r3, #1
  HAL_GPIO_Init(QSPI_BK2_CS_GPIO_PORT, &gpio_init_structure);
 80048e4:	486a      	ldr	r0, [pc, #424]	; (8004a90 <BSP_QSPI_Init+0x340>)
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80048e6:	961a      	str	r6, [sp, #104]	; 0x68
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80048e8:	e9cd 1216 	strd	r1, r2, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_CS_GPIO_PORT, &gpio_init_structure);
 80048ec:	a916      	add	r1, sp, #88	; 0x58
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 80048ee:	e9cd 3b18 	strd	r3, fp, [sp, #96]	; 0x60
  HAL_GPIO_Init(QSPI_BK2_CS_GPIO_PORT, &gpio_init_structure);
 80048f2:	f000 fdc3 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 80048f6:	f44f 7380 	mov.w	r3, #256	; 0x100
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 80048fa:	a916      	add	r1, sp, #88	; 0x58
 80048fc:	4865      	ldr	r0, [pc, #404]	; (8004a94 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 80048fe:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004900:	9718      	str	r7, [sp, #96]	; 0x60
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004902:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 8004906:	f000 fdb9 	bl	800547c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 800490a:	a916      	add	r1, sp, #88	; 0x58
  gpio_init_structure.Pin       = QSPI_BK2_D0_PIN;
 800490c:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 8004910:	4861      	ldr	r0, [pc, #388]	; (8004a98 <BSP_QSPI_Init+0x348>)
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 8004912:	f44f 7a00 	mov.w	sl, #512	; 0x200
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004916:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 8004918:	f000 fdb0 	bl	800547c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 800491c:	a916      	add	r1, sp, #88	; 0x58
 800491e:	485d      	ldr	r0, [pc, #372]	; (8004a94 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 8004920:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004924:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 8004928:	f000 fda8 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 800492c:	2308      	movs	r3, #8
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 800492e:	a916      	add	r1, sp, #88	; 0x58
 8004930:	4859      	ldr	r0, [pc, #356]	; (8004a98 <BSP_QSPI_Init+0x348>)
  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 8004932:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004934:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 8004936:	f000 fda1 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 800493a:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 800493c:	a916      	add	r1, sp, #88	; 0x58
 800493e:	4855      	ldr	r0, [pc, #340]	; (8004a94 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 8004940:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004942:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 8004944:	f000 fd9a 	bl	800547c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 8004948:	a916      	add	r1, sp, #88	; 0x58
 800494a:	4850      	ldr	r0, [pc, #320]	; (8004a8c <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pin       = QSPI_BK2_D2_PIN;
 800494c:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 8004950:	f000 fd94 	bl	800547c <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 8004954:	a916      	add	r1, sp, #88	; 0x58
 8004956:	484f      	ldr	r0, [pc, #316]	; (8004a94 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D3_PIN;
 8004958:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 800495c:	f000 fd8e 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 8004960:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 8004964:	a916      	add	r1, sp, #88	; 0x58
 8004966:	4849      	ldr	r0, [pc, #292]	; (8004a8c <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 8004968:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 800496a:	f000 fd87 	bl	800547c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 800496e:	463a      	mov	r2, r7
 8004970:	210f      	movs	r1, #15
 8004972:	205c      	movs	r0, #92	; 0x5c
 8004974:	f000 fbbc 	bl	80050f0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8004978:	205c      	movs	r0, #92	; 0x5c
 800497a:	f000 fbeb 	bl	8005154 <HAL_NVIC_EnableIRQ>
        (void)MT25TL01G_GetFlashInfo(&pInfo);
 800497e:	a811      	add	r0, sp, #68	; 0x44
 8004980:	f7ff f90f 	bl	8003ba2 <MT25TL01G_GetFlashInfo>
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 8004984:	7863      	ldrb	r3, [r4, #1]
 8004986:	4a45      	ldr	r2, [pc, #276]	; (8004a9c <BSP_QSPI_Init+0x34c>)
        qspi_init.DualFlashMode  = QSPI_DUALFLASH_ENABLE;
 8004988:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 800498c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8004990:	920e      	str	r2, [sp, #56]	; 0x38
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004992:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004994:	fa92 f2a2 	rbit	r2, r2
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 8004998:	fab3 f383 	clz	r3, r3
   */
  if (value == 0U)
  {
    return 32U;
  }
  return __builtin_clz(value);
 800499c:	fab2 f282 	clz	r2, r2
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 80049a0:	a90d      	add	r1, sp, #52	; 0x34
 80049a2:	483f      	ldr	r0, [pc, #252]	; (8004aa0 <BSP_QSPI_Init+0x350>)
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80049a4:	095b      	lsrs	r3, r3, #5
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 80049a6:	3a01      	subs	r2, #1
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80049a8:	011b      	lsls	r3, r3, #4
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 80049aa:	920d      	str	r2, [sp, #52]	; 0x34
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80049ac:	930f      	str	r3, [sp, #60]	; 0x3c
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 80049ae:	f7ff fdc5 	bl	800453c <MX_QSPI_Init>
 80049b2:	2800      	cmp	r0, #0
 80049b4:	f040 8091 	bne.w	8004ada <BSP_QSPI_Init+0x38a>
static int32_t QSPI_ResetMemory(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  /* Send RESET ENABLE command in QPI mode (QUAD I/Os, 4-4-4) */
  if(MT25TL01G_ResetEnable(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 80049b8:	4659      	mov	r1, fp
 80049ba:	4839      	ldr	r0, [pc, #228]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 80049bc:	f7ff fab6 	bl	8003f2c <MT25TL01G_ResetEnable>
 80049c0:	2800      	cmp	r0, #0
 80049c2:	d17c      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
  {
    ret =BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in QPI mode (QUAD I/Os, 4-4-4) */
  else if(MT25TL01G_ResetMemory(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 80049c4:	4659      	mov	r1, fp
 80049c6:	4836      	ldr	r0, [pc, #216]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 80049c8:	f7ff fad1 	bl	8003f6e <MT25TL01G_ResetMemory>
 80049cc:	2800      	cmp	r0, #0
 80049ce:	d176      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Wait Flash ready */
  else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80049d0:	7869      	ldrb	r1, [r5, #1]
 80049d2:	4833      	ldr	r0, [pc, #204]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 80049d4:	f7ff f8f6 	bl	8003bc4 <MT25TL01G_AutoPollingMemReady>
 80049d8:	4601      	mov	r1, r0
 80049da:	2800      	cmp	r0, #0
 80049dc:	d16f      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET ENABLE command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetEnable(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 80049de:	4830      	ldr	r0, [pc, #192]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 80049e0:	f7ff faa4 	bl	8003f2c <MT25TL01G_ResetEnable>
 80049e4:	4601      	mov	r1, r0
 80049e6:	2800      	cmp	r0, #0
 80049e8:	d169      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetMemory(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 80049ea:	482d      	ldr	r0, [pc, #180]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 80049ec:	f7ff fabf 	bl	8003f6e <MT25TL01G_ResetMemory>
 80049f0:	4601      	mov	r1, r0
 80049f2:	2800      	cmp	r0, #0
 80049f4:	d163      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else
  {
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 80049f6:	2301      	movs	r3, #1
    QSPI_Ctx[Instance].InterfaceMode = BSP_QSPI_SPI_MODE;     /* After reset H/W back to SPI mode by default  */
    QSPI_Ctx[Instance].TransferRate  = BSP_QSPI_STR_TRANSFER; /* After reset S/W setting to STR mode          */
 80049f8:	70a8      	strb	r0, [r5, #2]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80049fa:	4829      	ldr	r0, [pc, #164]	; (8004aa0 <BSP_QSPI_Init+0x350>)
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 80049fc:	802b      	strh	r3, [r5, #0]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80049fe:	f7ff f8e1 	bl	8003bc4 <MT25TL01G_AutoPollingMemReady>
 8004a02:	2800      	cmp	r0, #0
 8004a04:	d15b      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
        else if(MT25TL01G_Enter4BytesAddressMode(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004a06:	7869      	ldrb	r1, [r5, #1]
 8004a08:	4825      	ldr	r0, [pc, #148]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 8004a0a:	f7ff f94a 	bl	8003ca2 <MT25TL01G_Enter4BytesAddressMode>
 8004a0e:	2800      	cmp	r0, #0
 8004a10:	d155      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
    int32_t ret= BSP_ERROR_NONE;
    QSPI_CommandTypeDef s_command;
  uint16_t reg=0;

  /* Initialize the read volatile configuration register command */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8004a12:	f44f 7340 	mov.w	r3, #768	; 0x300
  uint16_t reg=0;
 8004a16:	f8ad 0002 	strh.w	r0, [sp, #2]
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
  s_command.DummyCycles       = 0;
 8004a1a:	901b      	str	r0, [sp, #108]	; 0x6c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Configure the command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a1c:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8004a20:	931c      	str	r3, [sp, #112]	; 0x70
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 8004a22:	2385      	movs	r3, #133	; 0x85
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a24:	a916      	add	r1, sp, #88	; 0x58
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 8004a26:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004a28:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8004a2c:	931f      	str	r3, [sp, #124]	; 0x7c
  s_command.NbData            = 2;
 8004a2e:	2302      	movs	r3, #2
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004a30:	e9cd 001d 	strd	r0, r0, [sp, #116]	; 0x74
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004a34:	e9cd 3020 	strd	r3, r0, [sp, #128]	; 0x80
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004a38:	e9cd 0022 	strd	r0, r0, [sp, #136]	; 0x88
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a3c:	4818      	ldr	r0, [pc, #96]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 8004a3e:	f001 fe1e 	bl	800667e <HAL_QSPI_Command>
 8004a42:	2800      	cmp	r0, #0
 8004a44:	d13b      	bne.n	8004abe <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Reception of the data */
  if (HAL_QSPI_Receive(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a46:	f241 3288 	movw	r2, #5000	; 0x1388
 8004a4a:	f10d 0102 	add.w	r1, sp, #2
 8004a4e:	4814      	ldr	r0, [pc, #80]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 8004a50:	f001 feb1 	bl	80067b6 <HAL_QSPI_Receive>
 8004a54:	bb98      	cbnz	r0, 8004abe <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Enable write operations */
  if (MT25TL01G_WriteEnable(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004a56:	7869      	ldrb	r1, [r5, #1]
 8004a58:	4811      	ldr	r0, [pc, #68]	; (8004aa0 <BSP_QSPI_Init+0x350>)
 8004a5a:	f7ff f8de 	bl	8003c1a <MT25TL01G_WriteEnable>
 8004a5e:	bb70      	cbnz	r0, 8004abe <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Update volatile configuration register (with new dummy cycles) */
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 8004a60:	2381      	movs	r3, #129	; 0x81
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
                               (MT25TL01G_DUMMY_CYCLES_READ_QUAD << 12)));

  /* Configure the write volatile configuration register command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004a62:	f241 3288 	movw	r2, #5000	; 0x1388
 8004a66:	a916      	add	r1, sp, #88	; 0x58
 8004a68:	480d      	ldr	r0, [pc, #52]	; (8004aa0 <BSP_QSPI_Init+0x350>)
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 8004a6a:	9316      	str	r3, [sp, #88]	; 0x58
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
 8004a6c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8004a70:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004a74:	051b      	lsls	r3, r3, #20
 8004a76:	0d1b      	lsrs	r3, r3, #20
 8004a78:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004a7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004a80:	e010      	b.n	8004aa4 <BSP_QSPI_Init+0x354>
 8004a82:	bf00      	nop
 8004a84:	58024400 	.word	0x58024400
 8004a88:	58020400 	.word	0x58020400
 8004a8c:	58021800 	.word	0x58021800
 8004a90:	58020800 	.word	0x58020800
 8004a94:	58021400 	.word	0x58021400
 8004a98:	58021c00 	.word	0x58021c00
 8004a9c:	08023238 	.word	0x08023238
 8004aa0:	240054d0 	.word	0x240054d0
 8004aa4:	f8ad 3002 	strh.w	r3, [sp, #2]
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004aa8:	f001 fde9 	bl	800667e <HAL_QSPI_Command>
 8004aac:	b938      	cbnz	r0, 8004abe <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Transmission of the data */
  if (HAL_QSPI_Transmit(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004aae:	f241 3288 	movw	r2, #5000	; 0x1388
 8004ab2:	f10d 0102 	add.w	r1, sp, #2
 8004ab6:	480a      	ldr	r0, [pc, #40]	; (8004ae0 <BSP_QSPI_Init+0x390>)
 8004ab8:	f001 fe24 	bl	8006704 <HAL_QSPI_Transmit>
 8004abc:	b110      	cbz	r0, 8004ac4 <BSP_QSPI_Init+0x374>
            ret = BSP_ERROR_COMPONENT_FAILURE;
 8004abe:	f06f 0004 	mvn.w	r0, #4
 8004ac2:	e650      	b.n	8004766 <BSP_QSPI_Init+0x16>
          if(BSP_QSPI_ConfigFlash(Instance, Init->InterfaceMode, Init->TransferRate) != BSP_ERROR_NONE)
 8004ac4:	7862      	ldrb	r2, [r4, #1]
 8004ac6:	7821      	ldrb	r1, [r4, #0]
 8004ac8:	f7ff fe0a 	bl	80046e0 <BSP_QSPI_ConfigFlash>
 8004acc:	2800      	cmp	r0, #0
 8004ace:	f43f ae49 	beq.w	8004764 <BSP_QSPI_Init+0x14>
 8004ad2:	e7f4      	b.n	8004abe <BSP_QSPI_Init+0x36e>
    ret = BSP_ERROR_WRONG_PARAM;
 8004ad4:	f06f 0001 	mvn.w	r0, #1
 8004ad8:	e645      	b.n	8004766 <BSP_QSPI_Init+0x16>
          ret = BSP_ERROR_PERIPH_FAILURE;
 8004ada:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8004ade:	e642      	b.n	8004766 <BSP_QSPI_Init+0x16>
 8004ae0:	240054d0 	.word	0x240054d0

08004ae4 <BSP_SDRAM_DeInit>:
  * @brief  DeInitializes the SDRAM device.
  * @param  Instance  SDRAM Instance
  * @retval BSP status
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
 8004ae4:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;;

  if(Instance >= SDRAM_INSTANCES_NBR)
 8004ae6:	4604      	mov	r4, r0
 8004ae8:	b970      	cbnz	r0, 8004b08 <BSP_SDRAM_DeInit+0x24>
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* SDRAM device de-initialization */
    hsdram[Instance].Instance = FMC_SDRAM_DEVICE;
 8004aea:	4b09      	ldr	r3, [pc, #36]	; (8004b10 <BSP_SDRAM_DeInit+0x2c>)
 8004aec:	4809      	ldr	r0, [pc, #36]	; (8004b14 <BSP_SDRAM_DeInit+0x30>)
 8004aee:	6003      	str	r3, [r0, #0]

    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
 8004af0:	f003 fa98 	bl	8008024 <HAL_SDRAM_DeInit>
  static MDMA_HandleTypeDef mdma_handle;

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);
  /* Disable NVIC configuration for MDMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
 8004af4:	207a      	movs	r0, #122	; 0x7a
 8004af6:	f000 fb3b 	bl	8005170 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
 8004afa:	4807      	ldr	r0, [pc, #28]	; (8004b18 <BSP_SDRAM_DeInit+0x34>)
 8004afc:	4b07      	ldr	r3, [pc, #28]	; (8004b1c <BSP_SDRAM_DeInit+0x38>)
 8004afe:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
 8004b00:	f001 fc01 	bl	8006306 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;;
 8004b04:	4620      	mov	r0, r4
}
 8004b06:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8004b08:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004b0c:	e7fb      	b.n	8004b06 <BSP_SDRAM_DeInit+0x22>
 8004b0e:	bf00      	nop
 8004b10:	52004140 	.word	0x52004140
 8004b14:	2400551c 	.word	0x2400551c
 8004b18:	24005550 	.word	0x24005550
 8004b1c:	52000040 	.word	0x52000040

08004b20 <MX_SDRAM_BANK2_Init>:
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8004b20:	2201      	movs	r2, #1
 8004b22:	4914      	ldr	r1, [pc, #80]	; (8004b74 <MX_SDRAM_BANK2_Init+0x54>)
  sdram_timing.ExitSelfRefreshDelay = 7;
 8004b24:	2302      	movs	r3, #2
{
 8004b26:	b510      	push	{r4, lr}
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8004b28:	e9c0 1200 	strd	r1, r2, [r0]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_9;
 8004b2c:	6082      	str	r2, [r0, #8]
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8004b2e:	2104      	movs	r1, #4
 8004b30:	2220      	movs	r2, #32
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004b32:	2440      	movs	r4, #64	; 0x40
{
 8004b34:	b088      	sub	sp, #32
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8004b36:	e9c0 1203 	strd	r1, r2, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004b3a:	f44f 72c0 	mov.w	r2, #384	; 0x180
  sdram_timing.RCDDelay             = 2;
 8004b3e:	9307      	str	r3, [sp, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004b40:	e9c0 4205 	strd	r4, r2, [r0, #20]
  hSdram->Init.SDClockPeriod      = FMC_SDRAM_CLOCK_PERIOD_2;
 8004b44:	2200      	movs	r2, #0
 8004b46:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8004b4a:	e9c0 2407 	strd	r2, r4, [r0, #28]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8004b4e:	f44f 5480 	mov.w	r4, #4096	; 0x1000
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8004b52:	e9c0 4209 	strd	r4, r2, [r0, #36]	; 0x24
  sdram_timing.ExitSelfRefreshDelay = 7;
 8004b56:	2207      	movs	r2, #7
  sdram_timing.RowCycleDelay        = 7;
 8004b58:	e9cd 1203 	strd	r1, r2, [sp, #12]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 8004b5c:	4469      	add	r1, sp
  sdram_timing.ExitSelfRefreshDelay = 7;
 8004b5e:	e9cd 3201 	strd	r3, r2, [sp, #4]
  sdram_timing.RPDelay              = 2;
 8004b62:	e9cd 3305 	strd	r3, r3, [sp, #20]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 8004b66:	f003 fa35 	bl	8007fd4 <HAL_SDRAM_Init>
}
 8004b6a:	3800      	subs	r0, #0
 8004b6c:	bf18      	it	ne
 8004b6e:	2001      	movne	r0, #1
 8004b70:	b008      	add	sp, #32
 8004b72:	bd10      	pop	{r4, pc}
 8004b74:	52004140 	.word	0x52004140

08004b78 <BSP_SDRAM_Init>:
{
 8004b78:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(Instance >= SDRAM_INSTANCES_NBR)
 8004b7a:	4605      	mov	r5, r0
{
 8004b7c:	b08f      	sub	sp, #60	; 0x3c
  if(Instance >= SDRAM_INSTANCES_NBR)
 8004b7e:	2800      	cmp	r0, #0
 8004b80:	f040 80dd 	bne.w	8004d3e <BSP_SDRAM_Init+0x1c6>
  __HAL_RCC_FMC_CLK_ENABLE();
 8004b84:	4b71      	ldr	r3, [pc, #452]	; (8004d4c <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004b86:	2703      	movs	r7, #3
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8004b88:	a909      	add	r1, sp, #36	; 0x24
 8004b8a:	4871      	ldr	r0, [pc, #452]	; (8004d50 <BSP_SDRAM_Init+0x1d8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8004b8c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  mdma_handle.Init.Request                  = MDMA_REQUEST_SW;
 8004b90:	4c70      	ldr	r4, [pc, #448]	; (8004d54 <BSP_SDRAM_Init+0x1dc>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8004b92:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hSdram, hmdma, mdma_handle);
 8004b96:	4e70      	ldr	r6, [pc, #448]	; (8004d58 <BSP_SDRAM_Init+0x1e0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8004b98:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8004b9c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004ba0:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8004ba4:	9201      	str	r2, [sp, #4]
 8004ba6:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
 8004ba8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004bac:	f042 0201 	orr.w	r2, r2, #1
 8004bb0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8004bb4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004bb8:	f002 0201 	and.w	r2, r2, #1
 8004bbc:	9202      	str	r2, [sp, #8]
 8004bbe:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8004bc0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004bc4:	f042 0208 	orr.w	r2, r2, #8
 8004bc8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004bcc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004bd0:	f002 0208 	and.w	r2, r2, #8
 8004bd4:	9203      	str	r2, [sp, #12]
 8004bd6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8004bd8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004bdc:	f042 0210 	orr.w	r2, r2, #16
 8004be0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004be4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004be8:	f002 0210 	and.w	r2, r2, #16
 8004bec:	9204      	str	r2, [sp, #16]
 8004bee:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8004bf0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004bf4:	f042 0220 	orr.w	r2, r2, #32
 8004bf8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004bfc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c00:	f002 0220 	and.w	r2, r2, #32
 8004c04:	9205      	str	r2, [sp, #20]
 8004c06:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8004c08:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c0c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004c10:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004c14:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c18:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004c1c:	9206      	str	r2, [sp, #24]
 8004c1e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8004c20:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c24:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004c28:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004c2c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c30:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004c34:	9207      	str	r2, [sp, #28]
 8004c36:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8004c38:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c3c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004c40:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8004c44:	2202      	movs	r2, #2
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8004c46:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004c4a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004c4e:	9308      	str	r3, [sp, #32]
 8004c50:	9b08      	ldr	r3, [sp, #32]
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8004c52:	2301      	movs	r3, #1
 8004c54:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004c58:	230c      	movs	r3, #12
 8004c5a:	e9cd 730c 	strd	r7, r3, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8004c5e:	f24c 7303 	movw	r3, #50947	; 0xc703
 8004c62:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8004c64:	f000 fc0a 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8004c68:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8004c6c:	a909      	add	r1, sp, #36	; 0x24
 8004c6e:	483b      	ldr	r0, [pc, #236]	; (8004d5c <BSP_SDRAM_Init+0x1e4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8004c70:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8004c72:	f000 fc03 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004c76:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8004c7a:	a909      	add	r1, sp, #36	; 0x24
 8004c7c:	4838      	ldr	r0, [pc, #224]	; (8004d60 <BSP_SDRAM_Init+0x1e8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004c7e:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8004c80:	f000 fbfc 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 |\
 8004c84:	f248 133f 	movw	r3, #33087	; 0x813f
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004c88:	a909      	add	r1, sp, #36	; 0x24
 8004c8a:	4836      	ldr	r0, [pc, #216]	; (8004d64 <BSP_SDRAM_Init+0x1ec>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 |\
 8004c8c:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004c8e:	f000 fbf5 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8004c92:	f64f 73e0 	movw	r3, #65504	; 0xffe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004c96:	a909      	add	r1, sp, #36	; 0x24
 8004c98:	4833      	ldr	r0, [pc, #204]	; (8004d68 <BSP_SDRAM_Init+0x1f0>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8004c9a:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004c9c:	f000 fbee 	bl	800547c <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8004ca0:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004ca4:	a909      	add	r1, sp, #36	; 0x24
 8004ca6:	4831      	ldr	r0, [pc, #196]	; (8004d6c <BSP_SDRAM_Init+0x1f4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8004ca8:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004caa:	f000 fbe7 	bl	800547c <HAL_GPIO_Init>
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 8004cae:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8004cb2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 8004cb6:	f240 2002 	movw	r0, #514	; 0x202
 8004cba:	f640 0208 	movw	r2, #2056	; 0x808
  __HAL_LINKDMA(hSdram, hmdma, mdma_handle);
 8004cbe:	6334      	str	r4, [r6, #48]	; 0x30
 8004cc0:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 8004cc2:	e9c4 1301 	strd	r1, r3, [r4, #4]
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 8004cc6:	e9c4 0205 	strd	r0, r2, [r4, #20]
  mdma_handle.Init.Priority                 = MDMA_PRIORITY_HIGH;
 8004cca:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.SourceDataSize           = MDMA_SRC_DATASIZE_WORD;
 8004ccc:	2220      	movs	r2, #32
  HAL_MDMA_DeInit(&mdma_handle);
 8004cce:	4620      	mov	r0, r4
  mdma_handle.Init.BufferTransferLength     = 128;
 8004cd0:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.DestDataSize             = MDMA_DEST_DATASIZE_WORD;
 8004cd2:	e9c4 2307 	strd	r2, r3, [r4, #28]
  mdma_handle.Init.Endianness               = MDMA_LITTLE_ENDIANNESS_PRESERVE;
 8004cd6:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 8004cda:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 8004cde:	4b24      	ldr	r3, [pc, #144]	; (8004d70 <BSP_SDRAM_Init+0x1f8>)
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 8004ce0:	6262      	str	r2, [r4, #36]	; 0x24
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 8004ce2:	6023      	str	r3, [r4, #0]
  mdma_handle.Init.DestBurst                = MDMA_DEST_BURST_SINGLE;
 8004ce4:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DestBlockAddressOffset   = 0;
 8004ce8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
 8004cec:	f001 fb0b 	bl	8006306 <HAL_MDMA_DeInit>
  (void)HAL_MDMA_Init(&mdma_handle);
 8004cf0:	4620      	mov	r0, r4
 8004cf2:	f001 fa99 	bl	8006228 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, BSP_SDRAM_IT_PRIORITY, 0);
 8004cf6:	462a      	mov	r2, r5
 8004cf8:	210f      	movs	r1, #15
 8004cfa:	207a      	movs	r0, #122	; 0x7a
 8004cfc:	f000 f9f8 	bl	80050f0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
 8004d00:	207a      	movs	r0, #122	; 0x7a
 8004d02:	f000 fa27 	bl	8005154 <HAL_NVIC_EnableIRQ>
      if(MX_SDRAM_BANK2_Init(&hsdram[Instance]) != HAL_OK)
 8004d06:	4630      	mov	r0, r6
 8004d08:	f7ff ff0a 	bl	8004b20 <MX_SDRAM_BANK2_Init>
 8004d0c:	b9d0      	cbnz	r0, 8004d44 <BSP_SDRAM_Init+0x1cc>
        pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
 8004d0e:	4919      	ldr	r1, [pc, #100]	; (8004d74 <BSP_SDRAM_Init+0x1fc>)
 8004d10:	2308      	movs	r3, #8
        pRegMode.RefreshMode     = IS42S32800G_AUTOREFRESH_MODE_CMD;
 8004d12:	e9c1 3700 	strd	r3, r7, [r1]
        pRegMode.RefreshRate     = REFRESH_COUNT;
 8004d16:	f240 6303 	movw	r3, #1539	; 0x603
        pRegMode.BurstType       = IS42S32800G_BURST_TYPE_SEQUENTIAL;
 8004d1a:	6108      	str	r0, [r1, #16]
        pRegMode.BurstLength     = IS42S32800G_BURST_LENGTH_1;
 8004d1c:	e9c1 3002 	strd	r3, r0, [r1, #8]
        pRegMode.CASLatency      = IS42S32800G_CAS_LATENCY_3;
 8004d20:	2330      	movs	r3, #48	; 0x30
        pRegMode.OperationMode   = IS42S32800G_OPERATING_MODE_STANDARD;
 8004d22:	e9c1 3005 	strd	r3, r0, [r1, #20]
        pRegMode.WriteBurstMode  = IS42S32800G_WRITEBURST_MODE_SINGLE;
 8004d26:	f44f 7300 	mov.w	r3, #512	; 0x200
        if(IS42S32800G_Init(&hsdram[Instance], &pRegMode) != IS42S32800G_OK)
 8004d2a:	4630      	mov	r0, r6
        pRegMode.WriteBurstMode  = IS42S32800G_WRITEBURST_MODE_SINGLE;
 8004d2c:	61cb      	str	r3, [r1, #28]
        if(IS42S32800G_Init(&hsdram[Instance], &pRegMode) != IS42S32800G_OK)
 8004d2e:	f7fe ff0b 	bl	8003b48 <IS42S32800G_Init>
          ret =  BSP_ERROR_COMPONENT_FAILURE;
 8004d32:	2800      	cmp	r0, #0
 8004d34:	bf18      	it	ne
 8004d36:	f06f 0004 	mvnne.w	r0, #4
}
 8004d3a:	b00f      	add	sp, #60	; 0x3c
 8004d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8004d3e:	f06f 0001 	mvn.w	r0, #1
 8004d42:	e7fa      	b.n	8004d3a <BSP_SDRAM_Init+0x1c2>
        ret = BSP_ERROR_NO_INIT;
 8004d44:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8004d48:	e7f7      	b.n	8004d3a <BSP_SDRAM_Init+0x1c2>
 8004d4a:	bf00      	nop
 8004d4c:	58024400 	.word	0x58024400
 8004d50:	58020c00 	.word	0x58020c00
 8004d54:	240055bc 	.word	0x240055bc
 8004d58:	2400551c 	.word	0x2400551c
 8004d5c:	58021000 	.word	0x58021000
 8004d60:	58021400 	.word	0x58021400
 8004d64:	58021800 	.word	0x58021800
 8004d68:	58021c00 	.word	0x58021c00
 8004d6c:	58022000 	.word	0x58022000
 8004d70:	52000040 	.word	0x52000040
 8004d74:	24005628 	.word	0x24005628

08004d78 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 8004d78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d7c:	460c      	mov	r4, r1
 8004d7e:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8004d80:	2800      	cmp	r0, #0
 8004d82:	f040 8092 	bne.w	8004eaa <BSP_TS_Init+0x132>
 8004d86:	680b      	ldr	r3, [r1, #0]
 8004d88:	1e5a      	subs	r2, r3, #1
 8004d8a:	f5b2 7f20 	cmp.w	r2, #640	; 0x280
 8004d8e:	f080 808c 	bcs.w	8004eaa <BSP_TS_Init+0x132>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8004d92:	684a      	ldr	r2, [r1, #4]
  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8004d94:	1e51      	subs	r1, r2, #1
 8004d96:	f5b1 7ff0 	cmp.w	r1, #480	; 0x1e0
 8004d9a:	f080 8086 	bcs.w	8004eaa <BSP_TS_Init+0x132>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
 8004d9e:	4293      	cmp	r3, r2
 8004da0:	bf28      	it	cs
 8004da2:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8004da4:	68e2      	ldr	r2, [r4, #12]
 8004da6:	429a      	cmp	r2, r3
 8004da8:	d87f      	bhi.n	8004eaa <BSP_TS_Init+0x132>
  EXC7200_IO_t              IOCtx;
  static EXC7200_Object_t   EXC7200Obj;
  uint32_t exc7200_id       = 0U;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_EXC7200_I2C_ADDRESS;
 8004daa:	2308      	movs	r3, #8
  IOCtx.DeInit      = BSP_I2C1_DeInit;
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004dac:	4d40      	ldr	r5, [pc, #256]	; (8004eb0 <BSP_TS_Init+0x138>)
  IOCtx.Init        = BSP_I2C1_Init;
 8004dae:	4e41      	ldr	r6, [pc, #260]	; (8004eb4 <BSP_TS_Init+0x13c>)
  IOCtx.DeInit      = BSP_I2C1_DeInit;
 8004db0:	4f41      	ldr	r7, [pc, #260]	; (8004eb8 <BSP_TS_Init+0x140>)
  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004db2:	eb0d 0103 	add.w	r1, sp, r3
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
 8004db6:	f8df 811c 	ldr.w	r8, [pc, #284]	; 8004ed4 <BSP_TS_Init+0x15c>
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
 8004dba:	f8df 911c 	ldr.w	r9, [pc, #284]	; 8004ed8 <BSP_TS_Init+0x160>
  IOCtx.GetTick     = BSP_GetTick;
 8004dbe:	f8df a11c 	ldr.w	sl, [pc, #284]	; 8004edc <BSP_TS_Init+0x164>
  uint32_t exc7200_id       = 0U;
 8004dc2:	9001      	str	r0, [sp, #4]
  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004dc4:	4628      	mov	r0, r5
  IOCtx.Address     = TS_EXC7200_I2C_ADDRESS;
 8004dc6:	f8ad 3010 	strh.w	r3, [sp, #16]
  IOCtx.Init        = BSP_I2C1_Init;
 8004dca:	9602      	str	r6, [sp, #8]
  IOCtx.DeInit      = BSP_I2C1_DeInit;
 8004dcc:	9703      	str	r7, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
 8004dce:	f8cd 8018 	str.w	r8, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
 8004dd2:	f8cd 9014 	str.w	r9, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
 8004dd6:	f8cd a01c 	str.w	sl, [sp, #28]
  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004dda:	f7fe fe2d 	bl	8003a38 <EXC7200_RegisterBusIO>
 8004dde:	b1b0      	cbz	r0, 8004e0e <BSP_TS_Init+0x96>
static int32_t TS3510_Probe(uint32_t Instance)
{
  int32_t ret              = BSP_ERROR_NONE;
  TS3510_IO_t              IOCtx;
  static TS3510_Object_t   TS3510Obj;
  uint32_t ts3510_id       = 0U;
 8004de0:	2300      	movs	r3, #0
  IOCtx.DeInit      = BSP_I2C1_DeInit;
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(TS3510_RegisterBusIO(&TS3510Obj, &IOCtx) != TS3510_OK)
 8004de2:	4d36      	ldr	r5, [pc, #216]	; (8004ebc <BSP_TS_Init+0x144>)
 8004de4:	a902      	add	r1, sp, #8
  IOCtx.GetTick     = BSP_GetTick;
 8004de6:	f8cd a01c 	str.w	sl, [sp, #28]
  uint32_t ts3510_id       = 0U;
 8004dea:	9301      	str	r3, [sp, #4]
  IOCtx.Address     = TS_TS3510_I2C_ADDRESS;
 8004dec:	2380      	movs	r3, #128	; 0x80
  if(TS3510_RegisterBusIO(&TS3510Obj, &IOCtx) != TS3510_OK)
 8004dee:	4628      	mov	r0, r5
  IOCtx.Address     = TS_TS3510_I2C_ADDRESS;
 8004df0:	f8ad 3010 	strh.w	r3, [sp, #16]
  IOCtx.DeInit      = BSP_I2C1_DeInit;
 8004df4:	e9cd 6702 	strd	r6, r7, [sp, #8]
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
 8004df8:	e9cd 9805 	strd	r9, r8, [sp, #20]
  if(TS3510_RegisterBusIO(&TS3510Obj, &IOCtx) != TS3510_OK)
 8004dfc:	f7ff f99e 	bl	800413c <TS3510_RegisterBusIO>
 8004e00:	2800      	cmp	r0, #0
 8004e02:	d039      	beq.n	8004e78 <BSP_TS_Init+0x100>
      ret = BSP_ERROR_UNKNOWN_COMPONENT;
 8004e04:	f06f 0006 	mvn.w	r0, #6
}
 8004e08:	b008      	add	sp, #32
 8004e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  else if(EXC7200_ReadID(&EXC7200Obj, &exc7200_id) != EXC7200_OK)
 8004e0e:	a901      	add	r1, sp, #4
 8004e10:	4628      	mov	r0, r5
 8004e12:	f7fe fd9c 	bl	800394e <EXC7200_ReadID>
 8004e16:	2800      	cmp	r0, #0
 8004e18:	d1e2      	bne.n	8004de0 <BSP_TS_Init+0x68>
  else if(exc7200_id != EXC7200_ID)
 8004e1a:	9b01      	ldr	r3, [sp, #4]
 8004e1c:	f5b3 4fe4 	cmp.w	r3, #29184	; 0x7200
 8004e20:	d1de      	bne.n	8004de0 <BSP_TS_Init+0x68>
    Ts_CompObj[Instance] = &EXC7200Obj;
 8004e22:	4b27      	ldr	r3, [pc, #156]	; (8004ec0 <BSP_TS_Init+0x148>)
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != EXC7200_OK)
 8004e24:	4628      	mov	r0, r5
    Ts_Drv = (TS_Drv_t *) &EXC7200_TS_Driver;
 8004e26:	4a27      	ldr	r2, [pc, #156]	; (8004ec4 <BSP_TS_Init+0x14c>)
    Ts_CompObj[Instance] = &EXC7200Obj;
 8004e28:	601d      	str	r5, [r3, #0]
    Ts_Drv = (TS_Drv_t *) &EXC7200_TS_Driver;
 8004e2a:	4b27      	ldr	r3, [pc, #156]	; (8004ec8 <BSP_TS_Init+0x150>)
 8004e2c:	6013      	str	r3, [r2, #0]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != EXC7200_OK)
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	4798      	blx	r3
 8004e32:	2800      	cmp	r0, #0
 8004e34:	d1d4      	bne.n	8004de0 <BSP_TS_Init+0x68>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8004e36:	6823      	ldr	r3, [r4, #0]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004e38:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8004e3a:	4d24      	ldr	r5, [pc, #144]	; (8004ecc <BSP_TS_Init+0x154>)
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004e3c:	4a20      	ldr	r2, [pc, #128]	; (8004ec0 <BSP_TS_Init+0x148>)
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8004e3e:	602b      	str	r3, [r5, #0]
      Ts_Ctx[Instance].Height            = TS_Init->Height;
 8004e40:	6863      	ldr	r3, [r4, #4]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004e42:	6810      	ldr	r0, [r2, #0]
      Ts_Ctx[Instance].Height            = TS_Init->Height;
 8004e44:	606b      	str	r3, [r5, #4]
      Ts_Ctx[Instance].Orientation       = TS_Init->Orientation;
 8004e46:	68a3      	ldr	r3, [r4, #8]
 8004e48:	60ab      	str	r3, [r5, #8]
      Ts_Ctx[Instance].Accuracy          = TS_Init->Accuracy;
 8004e4a:	68e3      	ldr	r3, [r4, #12]
 8004e4c:	60eb      	str	r3, [r5, #12]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004e4e:	4b1d      	ldr	r3, [pc, #116]	; (8004ec4 <BSP_TS_Init+0x14c>)
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	69db      	ldr	r3, [r3, #28]
 8004e54:	4798      	blx	r3
 8004e56:	2800      	cmp	r0, #0
 8004e58:	db24      	blt.n	8004ea4 <BSP_TS_Init+0x12c>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8004e5a:	9b03      	ldr	r3, [sp, #12]
        Ts_Ctx[Instance].PreviousY[0] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004e5c:	2000      	movs	r0, #0
        Ts_Ctx[Instance].PreviousX[0] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004e5e:	6822      	ldr	r2, [r4, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8004e60:	612b      	str	r3, [r5, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8004e62:	9b04      	ldr	r3, [sp, #16]
 8004e64:	616b      	str	r3, [r5, #20]
        Ts_Ctx[Instance].PreviousX[0] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004e66:	68e3      	ldr	r3, [r4, #12]
 8004e68:	441a      	add	r2, r3
 8004e6a:	3201      	adds	r2, #1
 8004e6c:	61aa      	str	r2, [r5, #24]
        Ts_Ctx[Instance].PreviousY[0] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004e6e:	6862      	ldr	r2, [r4, #4]
 8004e70:	4413      	add	r3, r2
 8004e72:	3301      	adds	r3, #1
 8004e74:	61eb      	str	r3, [r5, #28]
 8004e76:	e7c7      	b.n	8004e08 <BSP_TS_Init+0x90>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(TS3510_ReadID(&TS3510Obj, &ts3510_id) != TS3510_OK)
 8004e78:	a901      	add	r1, sp, #4
 8004e7a:	4628      	mov	r0, r5
 8004e7c:	f7ff f8b5 	bl	8003fea <TS3510_ReadID>
 8004e80:	2800      	cmp	r0, #0
 8004e82:	d1bf      	bne.n	8004e04 <BSP_TS_Init+0x8c>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ts3510_id != TS3510_ID)
 8004e84:	9a01      	ldr	r2, [sp, #4]
 8004e86:	f243 5310 	movw	r3, #13584	; 0x3510
 8004e8a:	429a      	cmp	r2, r3
 8004e8c:	d1ba      	bne.n	8004e04 <BSP_TS_Init+0x8c>
  {
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &TS3510Obj;
 8004e8e:	4b0c      	ldr	r3, [pc, #48]	; (8004ec0 <BSP_TS_Init+0x148>)
    Ts_Drv = (TS_Drv_t *) &TS3510_TS_Driver;

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != TS3510_OK)
 8004e90:	4628      	mov	r0, r5
    Ts_Drv = (TS_Drv_t *) &TS3510_TS_Driver;
 8004e92:	4a0c      	ldr	r2, [pc, #48]	; (8004ec4 <BSP_TS_Init+0x14c>)
    Ts_CompObj[Instance] = &TS3510Obj;
 8004e94:	601d      	str	r5, [r3, #0]
    Ts_Drv = (TS_Drv_t *) &TS3510_TS_Driver;
 8004e96:	4b0e      	ldr	r3, [pc, #56]	; (8004ed0 <BSP_TS_Init+0x158>)
 8004e98:	6013      	str	r3, [r2, #0]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != TS3510_OK)
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	4798      	blx	r3
 8004e9e:	2800      	cmp	r0, #0
 8004ea0:	d0c9      	beq.n	8004e36 <BSP_TS_Init+0xbe>
 8004ea2:	e7af      	b.n	8004e04 <BSP_TS_Init+0x8c>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004ea4:	f06f 0004 	mvn.w	r0, #4
 8004ea8:	e7ae      	b.n	8004e08 <BSP_TS_Init+0x90>
    ret = BSP_ERROR_WRONG_PARAM;
 8004eaa:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004eae:	e7ab      	b.n	8004e08 <BSP_TS_Init+0x90>
 8004eb0:	24005648 	.word	0x24005648
 8004eb4:	08004221 	.word	0x08004221
 8004eb8:	08004191 	.word	0x08004191
 8004ebc:	24005670 	.word	0x24005670
 8004ec0:	24005698 	.word	0x24005698
 8004ec4:	240056bc 	.word	0x240056bc
 8004ec8:	2400000c 	.word	0x2400000c
 8004ecc:	2400569c 	.word	0x2400569c
 8004ed0:	2400003c 	.word	0x2400003c
 8004ed4:	08004505 	.word	0x08004505
 8004ed8:	080044d1 	.word	0x080044d1
 8004edc:	08004539 	.word	0x08004539

08004ee0 <BSP_TS_GetState>:
{
 8004ee0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004ee4:	460c      	mov	r4, r1
  if(Instance >= TS_INSTANCES_NBR)
 8004ee6:	2800      	cmp	r0, #0
 8004ee8:	d153      	bne.n	8004f92 <BSP_TS_GetState+0xb2>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
 8004eea:	4b2b      	ldr	r3, [pc, #172]	; (8004f98 <BSP_TS_GetState+0xb8>)
 8004eec:	a901      	add	r1, sp, #4
 8004eee:	4a2b      	ldr	r2, [pc, #172]	; (8004f9c <BSP_TS_GetState+0xbc>)
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	6810      	ldr	r0, [r2, #0]
 8004ef4:	691b      	ldr	r3, [r3, #16]
 8004ef6:	4798      	blx	r3
 8004ef8:	2800      	cmp	r0, #0
 8004efa:	db47      	blt.n	8004f8c <BSP_TS_GetState+0xac>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 8004efc:	4928      	ldr	r1, [pc, #160]	; (8004fa0 <BSP_TS_GetState+0xc0>)
    else if(state.TouchDetected != 0U)
 8004efe:	9801      	ldr	r0, [sp, #4]
      y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
 8004f00:	e9d1 6506 	ldrd	r6, r5, [r1, #24]
    else if(state.TouchDetected != 0U)
 8004f04:	2800      	cmp	r0, #0
 8004f06:	d03d      	beq.n	8004f84 <BSP_TS_GetState+0xa4>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8004f08:	f8d1 e008 	ldr.w	lr, [r1, #8]
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 8004f0c:	f8d1 8010 	ldr.w	r8, [r1, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8004f10:	f01e 0f08 	tst.w	lr, #8
      y_oriented = state.TouchY;
 8004f14:	e9dd c702 	ldrd	ip, r7, [sp, #8]
        x_oriented = state.TouchY;
 8004f18:	bf19      	ittee	ne
 8004f1a:	463b      	movne	r3, r7
        y_oriented = state.TouchX;
 8004f1c:	4662      	movne	r2, ip
      y_oriented = state.TouchY;
 8004f1e:	463a      	moveq	r2, r7
      x_oriented = state.TouchX;
 8004f20:	4663      	moveq	r3, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
 8004f22:	f01e 0f02 	tst.w	lr, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 8004f26:	bf1c      	itt	ne
 8004f28:	f108 33ff 	addne.w	r3, r8, #4294967295
 8004f2c:	eba3 030c 	subne.w	r3, r3, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004f30:	f8d1 c014 	ldr.w	ip, [r1, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
 8004f34:	f01e 0f04 	tst.w	lr, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004f38:	bf18      	it	ne
 8004f3a:	ebac 0207 	subne.w	r2, ip, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004f3e:	680f      	ldr	r7, [r1, #0]
 8004f40:	437b      	muls	r3, r7
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004f42:	684f      	ldr	r7, [r1, #4]
      TS_State->TouchDetected = state.TouchDetected;
 8004f44:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004f46:	437a      	muls	r2, r7
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004f48:	68cf      	ldr	r7, [r1, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004f4a:	fbb3 f3f8 	udiv	r3, r3, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004f4e:	fbb2 f2fc 	udiv	r2, r2, ip
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004f52:	42b3      	cmp	r3, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004f54:	6063      	str	r3, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004f56:	60a2      	str	r2, [r4, #8]
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004f58:	bf8c      	ite	hi
 8004f5a:	eba3 0c06 	subhi.w	ip, r3, r6
 8004f5e:	eba6 0c03 	subls.w	ip, r6, r3
               (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
 8004f62:	42aa      	cmp	r2, r5
 8004f64:	bf8c      	ite	hi
 8004f66:	1b50      	subhi	r0, r2, r5
 8004f68:	1aa8      	subls	r0, r5, r2
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004f6a:	4567      	cmp	r7, ip
 8004f6c:	d301      	bcc.n	8004f72 <BSP_TS_GetState+0x92>
 8004f6e:	4287      	cmp	r7, r0
 8004f70:	d205      	bcs.n	8004f7e <BSP_TS_GetState+0x9e>
        Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 8004f72:	e9c1 3206 	strd	r3, r2, [r1, #24]
  int32_t ret = BSP_ERROR_NONE;
 8004f76:	2000      	movs	r0, #0
}
 8004f78:	b004      	add	sp, #16
 8004f7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8004f7e:	e9c4 6501 	strd	r6, r5, [r4, #4]
 8004f82:	e7f8      	b.n	8004f76 <BSP_TS_GetState+0x96>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
 8004f84:	e9c4 0600 	strd	r0, r6, [r4]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8004f88:	60a5      	str	r5, [r4, #8]
 8004f8a:	e7f5      	b.n	8004f78 <BSP_TS_GetState+0x98>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 8004f8c:	f06f 0004 	mvn.w	r0, #4
 8004f90:	e7f2      	b.n	8004f78 <BSP_TS_GetState+0x98>
    ret = BSP_ERROR_WRONG_PARAM;
 8004f92:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004f96:	e7ef      	b.n	8004f78 <BSP_TS_GetState+0x98>
 8004f98:	240056bc 	.word	0x240056bc
 8004f9c:	24005698 	.word	0x24005698
 8004fa0:	2400569c 	.word	0x2400569c

08004fa4 <SystemInit>:
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8004fa4:	4918      	ldr	r1, [pc, #96]	; (8005008 <SystemInit+0x64>)

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 8004fa6:	4819      	ldr	r0, [pc, #100]	; (800500c <SystemInit+0x68>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8004fa8:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8004fac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
{
 8004fb0:	b510      	push	{r4, lr}
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8004fb2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
 8004fb6:	4b16      	ldr	r3, [pc, #88]	; (8005010 <SystemInit+0x6c>)
 8004fb8:	681a      	ldr	r2, [r3, #0]
 8004fba:	f042 0201 	orr.w	r2, r2, #1
 8004fbe:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8004fc0:	2200      	movs	r2, #0
 8004fc2:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
 8004fc4:	681c      	ldr	r4, [r3, #0]
 8004fc6:	4020      	ands	r0, r4
 8004fc8:	6018      	str	r0, [r3, #0]

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8004fca:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 8004fcc:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8004fce:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x00000000;
 8004fd0:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00000000;
 8004fd2:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x00000000;
 8004fd4:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 8004fd6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x00000000;
 8004fd8:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8004fda:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x00000000;
 8004fdc:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8004fde:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8004fe0:	6818      	ldr	r0, [r3, #0]
 8004fe2:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
 8004fe6:	6018      	str	r0, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8004fe8:	661a      	str	r2, [r3, #96]	; 0x60
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 8004fea:	4b0a      	ldr	r3, [pc, #40]	; (8005014 <SystemInit+0x70>)
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	0c1b      	lsrs	r3, r3, #16
 8004ff0:	041b      	lsls	r3, r3, #16
 8004ff2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004ff6:	d203      	bcs.n	8005000 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 8004ff8:	4b07      	ldr	r3, [pc, #28]	; (8005018 <SystemInit+0x74>)
 8004ffa:	2201      	movs	r2, #1
 8004ffc:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005000:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8005004:	608b      	str	r3, [r1, #8]
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
 8005006:	bd10      	pop	{r4, pc}
 8005008:	e000ed00 	.word	0xe000ed00
 800500c:	eaf6ed7f 	.word	0xeaf6ed7f
 8005010:	58024400 	.word	0x58024400
 8005014:	5c001000 	.word	0x5c001000
 8005018:	51008000 	.word	0x51008000

0800501c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800501c:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800501e:	2003      	movs	r0, #3
 8005020:	f000 f854 	bl	80050cc <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8005024:	f001 ffac 	bl	8006f80 <HAL_RCC_GetSysClockFreq>
 8005028:	490f      	ldr	r1, [pc, #60]	; (8005068 <HAL_Init+0x4c>)
 800502a:	4a10      	ldr	r2, [pc, #64]	; (800506c <HAL_Init+0x50>)
 800502c:	698b      	ldr	r3, [r1, #24]
 800502e:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8005032:	5cd3      	ldrb	r3, [r2, r3]
 8005034:	f003 031f 	and.w	r3, r3, #31
 8005038:	40d8      	lsrs	r0, r3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800503a:	698b      	ldr	r3, [r1, #24]
 800503c:	f003 030f 	and.w	r3, r3, #15
 8005040:	5cd3      	ldrb	r3, [r2, r3]
 8005042:	4a0b      	ldr	r2, [pc, #44]	; (8005070 <HAL_Init+0x54>)
 8005044:	f003 031f 	and.w	r3, r3, #31
 8005048:	fa20 f303 	lsr.w	r3, r0, r3
 800504c:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800504e:	4b09      	ldr	r3, [pc, #36]	; (8005074 <HAL_Init+0x58>)
 8005050:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8005052:	2000      	movs	r0, #0
 8005054:	f7fc fea0 	bl	8001d98 <HAL_InitTick>
 8005058:	4604      	mov	r4, r0
 800505a:	b918      	cbnz	r0, 8005064 <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 800505c:	f7fc fbd2 	bl	8001804 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005060:	4620      	mov	r0, r4
 8005062:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005064:	2401      	movs	r4, #1
 8005066:	e7fb      	b.n	8005060 <HAL_Init+0x44>
 8005068:	58024400 	.word	0x58024400
 800506c:	08023240 	.word	0x08023240
 8005070:	24000070 	.word	0x24000070
 8005074:	2400006c 	.word	0x2400006c

08005078 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8005078:	4a03      	ldr	r2, [pc, #12]	; (8005088 <HAL_IncTick+0x10>)
 800507a:	4b04      	ldr	r3, [pc, #16]	; (800508c <HAL_IncTick+0x14>)
 800507c:	6811      	ldr	r1, [r2, #0]
 800507e:	781b      	ldrb	r3, [r3, #0]
 8005080:	440b      	add	r3, r1
 8005082:	6013      	str	r3, [r2, #0]
}
 8005084:	4770      	bx	lr
 8005086:	bf00      	nop
 8005088:	240056c0 	.word	0x240056c0
 800508c:	24000074 	.word	0x24000074

08005090 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005090:	4b01      	ldr	r3, [pc, #4]	; (8005098 <HAL_GetTick+0x8>)
 8005092:	6818      	ldr	r0, [r3, #0]
}
 8005094:	4770      	bx	lr
 8005096:	bf00      	nop
 8005098:	240056c0 	.word	0x240056c0

0800509c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800509c:	b538      	push	{r3, r4, r5, lr}
 800509e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80050a0:	f7ff fff6 	bl	8005090 <HAL_GetTick>
 80050a4:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80050a6:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80050a8:	bf1e      	ittt	ne
 80050aa:	4b04      	ldrne	r3, [pc, #16]	; (80050bc <HAL_Delay+0x20>)
 80050ac:	781b      	ldrbne	r3, [r3, #0]
 80050ae:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80050b0:	f7ff ffee 	bl	8005090 <HAL_GetTick>
 80050b4:	1b43      	subs	r3, r0, r5
 80050b6:	42a3      	cmp	r3, r4
 80050b8:	d3fa      	bcc.n	80050b0 <HAL_Delay+0x14>
  {
  }
}
 80050ba:	bd38      	pop	{r3, r4, r5, pc}
 80050bc:	24000074 	.word	0x24000074

080050c0 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
 80050c0:	4b01      	ldr	r3, [pc, #4]	; (80050c8 <HAL_GetREVID+0x8>)
 80050c2:	6818      	ldr	r0, [r3, #0]
}
 80050c4:	0c00      	lsrs	r0, r0, #16
 80050c6:	4770      	bx	lr
 80050c8:	5c001000 	.word	0x5c001000

080050cc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80050cc:	4907      	ldr	r1, [pc, #28]	; (80050ec <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80050ce:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80050d0:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80050d2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80050d6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80050da:	0412      	lsls	r2, r2, #16
 80050dc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80050de:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80050e0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80050e4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80050e8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80050ea:	4770      	bx	lr
 80050ec:	e000ed00 	.word	0xe000ed00

080050f0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80050f0:	4b16      	ldr	r3, [pc, #88]	; (800514c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80050f2:	b530      	push	{r4, r5, lr}
 80050f4:	68dc      	ldr	r4, [r3, #12]
 80050f6:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80050fa:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80050fe:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005100:	2b04      	cmp	r3, #4
 8005102:	bf28      	it	cs
 8005104:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005106:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005108:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800510c:	bf8c      	ite	hi
 800510e:	3c03      	subhi	r4, #3
 8005110:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005112:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 8005116:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005118:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800511c:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005120:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005124:	fa03 f304 	lsl.w	r3, r3, r4
 8005128:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800512c:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8005130:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8005132:	db06      	blt.n	8005142 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005134:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8005138:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800513c:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005140:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005142:	f000 000f 	and.w	r0, r0, #15
 8005146:	4a02      	ldr	r2, [pc, #8]	; (8005150 <HAL_NVIC_SetPriority+0x60>)
 8005148:	5413      	strb	r3, [r2, r0]
 800514a:	e7f9      	b.n	8005140 <HAL_NVIC_SetPriority+0x50>
 800514c:	e000ed00 	.word	0xe000ed00
 8005150:	e000ed14 	.word	0xe000ed14

08005154 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005154:	2800      	cmp	r0, #0
 8005156:	db07      	blt.n	8005168 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005158:	2301      	movs	r3, #1
 800515a:	0941      	lsrs	r1, r0, #5
 800515c:	f000 001f 	and.w	r0, r0, #31
 8005160:	4a02      	ldr	r2, [pc, #8]	; (800516c <HAL_NVIC_EnableIRQ+0x18>)
 8005162:	4083      	lsls	r3, r0
 8005164:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005168:	4770      	bx	lr
 800516a:	bf00      	nop
 800516c:	e000e100 	.word	0xe000e100

08005170 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005170:	2800      	cmp	r0, #0
 8005172:	db0c      	blt.n	800518e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005174:	0943      	lsrs	r3, r0, #5
 8005176:	2201      	movs	r2, #1
 8005178:	f000 001f 	and.w	r0, r0, #31
 800517c:	4904      	ldr	r1, [pc, #16]	; (8005190 <HAL_NVIC_DisableIRQ+0x20>)
 800517e:	3320      	adds	r3, #32
 8005180:	4082      	lsls	r2, r0
 8005182:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8005186:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800518a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800518e:	4770      	bx	lr
 8005190:	e000e100 	.word	0xe000e100

08005194 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8005194:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8005198:	4b04      	ldr	r3, [pc, #16]	; (80051ac <HAL_MPU_Disable+0x18>)
 800519a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800519c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80051a0:	625a      	str	r2, [r3, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 80051a2:	2200      	movs	r2, #0
 80051a4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
 80051a8:	4770      	bx	lr
 80051aa:	bf00      	nop
 80051ac:	e000ed00 	.word	0xe000ed00

080051b0 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 80051b0:	4b06      	ldr	r3, [pc, #24]	; (80051cc <HAL_MPU_Enable+0x1c>)
 80051b2:	f040 0001 	orr.w	r0, r0, #1
 80051b6:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 80051ba:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80051bc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80051c0:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 80051c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80051c6:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 80051ca:	4770      	bx	lr
 80051cc:	e000ed00 	.word	0xe000ed00

080051d0 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 80051d0:	7843      	ldrb	r3, [r0, #1]
 80051d2:	4a14      	ldr	r2, [pc, #80]	; (8005224 <HAL_MPU_ConfigRegion+0x54>)
{
 80051d4:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 80051d6:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
 80051da:	7801      	ldrb	r1, [r0, #0]
 80051dc:	b1e9      	cbz	r1, 800521a <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 80051de:	6843      	ldr	r3, [r0, #4]
 80051e0:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80051e4:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80051e6:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80051e8:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80051ea:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80051ee:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 80051f0:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80051f2:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 80051f6:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80051f8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 80051fc:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80051fe:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8005202:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005204:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8005208:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 800520a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800520e:	7a01      	ldrb	r1, [r0, #8]
 8005210:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005214:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8005218:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 800521a:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
 800521e:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
 8005222:	e7f9      	b.n	8005218 <HAL_MPU_ConfigRegion+0x48>
 8005224:	e000ed00 	.word	0xe000ed00

08005228 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005228:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800522a:	4604      	mov	r4, r0
 800522c:	b908      	cbnz	r0, 8005232 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 800522e:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8005230:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005232:	7f43      	ldrb	r3, [r0, #29]
 8005234:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005238:	b913      	cbnz	r3, 8005240 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 800523a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 800523c:	f7fc fafa 	bl	8001834 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8005240:	2302      	movs	r3, #2
 8005242:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8005244:	7923      	ldrb	r3, [r4, #4]
 8005246:	b9e3      	cbnz	r3, 8005282 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8005248:	6823      	ldr	r3, [r4, #0]
 800524a:	4a13      	ldr	r2, [pc, #76]	; (8005298 <HAL_CRC_Init+0x70>)
 800524c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 800524e:	689a      	ldr	r2, [r3, #8]
 8005250:	f022 0218 	bic.w	r2, r2, #24
 8005254:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8005256:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8005258:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800525a:	b9d2      	cbnz	r2, 8005292 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800525c:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005260:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8005262:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005264:	689a      	ldr	r2, [r3, #8]
 8005266:	6961      	ldr	r1, [r4, #20]
 8005268:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800526c:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800526e:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005270:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005272:	689a      	ldr	r2, [r3, #8]
 8005274:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005278:	430a      	orrs	r2, r1
 800527a:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 800527c:	2301      	movs	r3, #1
 800527e:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8005280:	e7d6      	b.n	8005230 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8005282:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8005286:	4620      	mov	r0, r4
 8005288:	f000 f808 	bl	800529c <HAL_CRCEx_Polynomial_Set>
 800528c:	2800      	cmp	r0, #0
 800528e:	d0e2      	beq.n	8005256 <HAL_CRC_Init+0x2e>
 8005290:	e7cd      	b.n	800522e <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005292:	6922      	ldr	r2, [r4, #16]
 8005294:	e7e4      	b.n	8005260 <HAL_CRC_Init+0x38>
 8005296:	bf00      	nop
 8005298:	04c11db7 	.word	0x04c11db7

0800529c <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 800529c:	07cb      	lsls	r3, r1, #31
{
 800529e:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80052a0:	d50c      	bpl.n	80052bc <HAL_CRCEx_Polynomial_Set+0x20>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80052a2:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80052a4:	3b01      	subs	r3, #1
 80052a6:	d31c      	bcc.n	80052e2 <HAL_CRCEx_Polynomial_Set+0x46>
 80052a8:	fa21 f403 	lsr.w	r4, r1, r3
 80052ac:	07e4      	lsls	r4, r4, #31
 80052ae:	d5f9      	bpl.n	80052a4 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 80052b0:	2a10      	cmp	r2, #16
 80052b2:	d012      	beq.n	80052da <HAL_CRCEx_Polynomial_Set+0x3e>
 80052b4:	d804      	bhi.n	80052c0 <HAL_CRCEx_Polynomial_Set+0x24>
 80052b6:	b13a      	cbz	r2, 80052c8 <HAL_CRCEx_Polynomial_Set+0x2c>
 80052b8:	2a08      	cmp	r2, #8
 80052ba:	d010      	beq.n	80052de <HAL_CRCEx_Polynomial_Set+0x42>
        }
        break;
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
        {
          status =   HAL_ERROR;
 80052bc:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 80052be:	e00b      	b.n	80052d8 <HAL_CRCEx_Polynomial_Set+0x3c>
    switch (PolyLength)
 80052c0:	2a18      	cmp	r2, #24
 80052c2:	d1fb      	bne.n	80052bc <HAL_CRCEx_Polynomial_Set+0x20>
        if (msb >= HAL_CRC_LENGTH_7B)
 80052c4:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 80052c6:	d8f9      	bhi.n	80052bc <HAL_CRCEx_Polynomial_Set+0x20>
    WRITE_REG(hcrc->Instance->POL, Pol);
 80052c8:	6800      	ldr	r0, [r0, #0]
 80052ca:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80052cc:	6883      	ldr	r3, [r0, #8]
 80052ce:	f023 0318 	bic.w	r3, r3, #24
 80052d2:	4313      	orrs	r3, r2
 80052d4:	6083      	str	r3, [r0, #8]
 80052d6:	2000      	movs	r0, #0
}
 80052d8:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 80052da:	2b07      	cmp	r3, #7
 80052dc:	e7f3      	b.n	80052c6 <HAL_CRCEx_Polynomial_Set+0x2a>
        if (msb >= HAL_CRC_LENGTH_16B)
 80052de:	2b0f      	cmp	r3, #15
 80052e0:	e7f1      	b.n	80052c6 <HAL_CRCEx_Polynomial_Set+0x2a>
    switch (PolyLength)
 80052e2:	2a00      	cmp	r2, #0
 80052e4:	d1ea      	bne.n	80052bc <HAL_CRCEx_Polynomial_Set+0x20>
 80052e6:	e7ef      	b.n	80052c8 <HAL_CRCEx_Polynomial_Set+0x2c>

080052e8 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80052e8:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80052ea:	4604      	mov	r4, r0
 80052ec:	2800      	cmp	r0, #0
 80052ee:	d036      	beq.n	800535e <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80052f0:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
 80052f4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80052f8:	b91b      	cbnz	r3, 8005302 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80052fa:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80052fe:	f7fc fab1 	bl	8001864 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005302:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005304:	69e0      	ldr	r0, [r4, #28]
 8005306:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005308:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 800530c:	6823      	ldr	r3, [r4, #0]
 800530e:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8005310:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005312:	6819      	ldr	r1, [r3, #0]
 8005314:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 8005318:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800531c:	430a      	orrs	r2, r1
 800531e:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8005320:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005322:	68a2      	ldr	r2, [r4, #8]
 8005324:	f421 7183 	bic.w	r1, r1, #262	; 0x106
 8005328:	4302      	orrs	r2, r0
 800532a:	f021 0101 	bic.w	r1, r1, #1
 800532e:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005330:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8005332:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005334:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005336:	0c12      	lsrs	r2, r2, #16
 8005338:	0412      	lsls	r2, r2, #16
 800533a:	430a      	orrs	r2, r1
 800533c:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 800533e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005340:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8005344:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 8005348:	0552      	lsls	r2, r2, #21
 800534a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800534e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8005350:	430a      	orrs	r2, r1
 8005352:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005354:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005356:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005358:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
 800535c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800535e:	2001      	movs	r0, #1
 8005360:	e7fc      	b.n	800535c <HAL_DMA2D_Init+0x74>

08005362 <HAL_DMA2D_LineEventCallback>:
 8005362:	4770      	bx	lr

08005364 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005364:	4770      	bx	lr

08005366 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005366:	6803      	ldr	r3, [r0, #0]
{
 8005368:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800536a:	685e      	ldr	r6, [r3, #4]
{
 800536c:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800536e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005370:	07f2      	lsls	r2, r6, #31
 8005372:	d514      	bpl.n	800539e <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005374:	05e9      	lsls	r1, r5, #23
 8005376:	d512      	bpl.n	800539e <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005378:	681a      	ldr	r2, [r3, #0]
 800537a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800537e:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005380:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8005382:	f042 0201 	orr.w	r2, r2, #1
 8005386:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005388:	2201      	movs	r2, #1
 800538a:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800538c:	2304      	movs	r3, #4
 800538e:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005392:	2300      	movs	r3, #0
 8005394:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8005398:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800539a:	b103      	cbz	r3, 800539e <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800539c:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800539e:	06b2      	lsls	r2, r6, #26
 80053a0:	d516      	bpl.n	80053d0 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80053a2:	04ab      	lsls	r3, r5, #18
 80053a4:	d514      	bpl.n	80053d0 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80053a6:	6823      	ldr	r3, [r4, #0]
 80053a8:	681a      	ldr	r2, [r3, #0]
 80053aa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80053ae:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80053b0:	2220      	movs	r2, #32
 80053b2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80053b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80053b6:	f043 0302 	orr.w	r3, r3, #2
 80053ba:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80053bc:	2304      	movs	r3, #4
 80053be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80053c2:	2300      	movs	r3, #0
 80053c4:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 80053c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80053ca:	b10b      	cbz	r3, 80053d0 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80053cc:	4620      	mov	r0, r4
 80053ce:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80053d0:	0730      	lsls	r0, r6, #28
 80053d2:	d516      	bpl.n	8005402 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80053d4:	0529      	lsls	r1, r5, #20
 80053d6:	d514      	bpl.n	8005402 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80053d8:	6823      	ldr	r3, [r4, #0]
 80053da:	681a      	ldr	r2, [r3, #0]
 80053dc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80053e0:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80053e2:	2208      	movs	r2, #8
 80053e4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80053e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80053e8:	f043 0304 	orr.w	r3, r3, #4
 80053ec:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80053ee:	2304      	movs	r3, #4
 80053f0:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80053f4:	2300      	movs	r3, #0
 80053f6:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 80053fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80053fc:	b10b      	cbz	r3, 8005402 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80053fe:	4620      	mov	r0, r4
 8005400:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005402:	0772      	lsls	r2, r6, #29
 8005404:	d50b      	bpl.n	800541e <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005406:	056b      	lsls	r3, r5, #21
 8005408:	d509      	bpl.n	800541e <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800540a:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800540c:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800540e:	681a      	ldr	r2, [r3, #0]
 8005410:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005414:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005416:	2204      	movs	r2, #4
 8005418:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800541a:	f7ff ffa2 	bl	8005362 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800541e:	07b0      	lsls	r0, r6, #30
 8005420:	d514      	bpl.n	800544c <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005422:	05a9      	lsls	r1, r5, #22
 8005424:	d512      	bpl.n	800544c <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005426:	6823      	ldr	r3, [r4, #0]
 8005428:	681a      	ldr	r2, [r3, #0]
 800542a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800542e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005430:	2202      	movs	r2, #2
 8005432:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005434:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005436:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005438:	2301      	movs	r3, #1
 800543a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800543e:	2300      	movs	r3, #0
 8005440:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 8005444:	6a23      	ldr	r3, [r4, #32]
 8005446:	b10b      	cbz	r3, 800544c <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8005448:	4620      	mov	r0, r4
 800544a:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800544c:	06f2      	lsls	r2, r6, #27
 800544e:	d513      	bpl.n	8005478 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005450:	04eb      	lsls	r3, r5, #19
 8005452:	d511      	bpl.n	8005478 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005454:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005456:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005458:	681a      	ldr	r2, [r3, #0]
 800545a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800545e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8005460:	2210      	movs	r2, #16
 8005462:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005464:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005466:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005468:	2301      	movs	r3, #1
 800546a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
 800546e:	2300      	movs	r3, #0
 8005470:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005474:	f7ff ff76 	bl	8005364 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8005478:	bd70      	pop	{r4, r5, r6, pc}
	...

0800547c <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800547c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8005480:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005482:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 800564c <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8005486:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 800548a:	680a      	ldr	r2, [r1, #0]
 800548c:	fa32 f503 	lsrs.w	r5, r2, r3
 8005490:	d102      	bne.n	8005498 <HAL_GPIO_Init+0x1c>
      }
    }

    position++;
  }
}
 8005492:	b003      	add	sp, #12
 8005494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8005498:	f04f 0e01 	mov.w	lr, #1
 800549c:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00U)
 80054a0:	ea1e 0202 	ands.w	r2, lr, r2
 80054a4:	f000 80bc 	beq.w	8005620 <HAL_GPIO_Init+0x1a4>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80054a8:	684e      	ldr	r6, [r1, #4]
 80054aa:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80054ae:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80054b2:	f006 0503 	and.w	r5, r6, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80054b6:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80054ba:	1e6f      	subs	r7, r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80054bc:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80054c0:	2f01      	cmp	r7, #1
 80054c2:	d834      	bhi.n	800552e <HAL_GPIO_Init+0xb2>
        temp = GPIOx->OSPEEDR;
 80054c4:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80054c6:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80054ca:	68cf      	ldr	r7, [r1, #12]
 80054cc:	fa07 f708 	lsl.w	r7, r7, r8
 80054d0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80054d4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80054d6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80054d8:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80054dc:	f3c6 1700 	ubfx	r7, r6, #4, #1
 80054e0:	409f      	lsls	r7, r3
 80054e2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80054e6:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80054e8:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80054ea:	2d02      	cmp	r5, #2
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80054ec:	ea07 0e0c 	and.w	lr, r7, ip
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80054f0:	688f      	ldr	r7, [r1, #8]
 80054f2:	fa07 f708 	lsl.w	r7, r7, r8
 80054f6:	ea47 070e 	orr.w	r7, r7, lr
      GPIOx->PUPDR = temp;
 80054fa:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80054fc:	d119      	bne.n	8005532 <HAL_GPIO_Init+0xb6>
        temp = GPIOx->AFR[position >> 3U];
 80054fe:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8005502:	f003 0b07 	and.w	fp, r3, #7
 8005506:	f04f 0e0f 	mov.w	lr, #15
 800550a:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 800550e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
 8005512:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8005516:	fa0e fe0b 	lsl.w	lr, lr, fp
 800551a:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 800551e:	690f      	ldr	r7, [r1, #16]
 8005520:	fa07 f70b 	lsl.w	r7, r7, fp
 8005524:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8005528:	f8ca 7020 	str.w	r7, [sl, #32]
 800552c:	e001      	b.n	8005532 <HAL_GPIO_Init+0xb6>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800552e:	2d03      	cmp	r5, #3
 8005530:	d1da      	bne.n	80054e8 <HAL_GPIO_Init+0x6c>
      temp = GPIOx->MODER;
 8005532:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005534:	fa05 f508 	lsl.w	r5, r5, r8
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005538:	f416 3f40 	tst.w	r6, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 800553c:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005540:	ea45 0507 	orr.w	r5, r5, r7
      GPIOx->MODER = temp;
 8005544:	6005      	str	r5, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005546:	d06b      	beq.n	8005620 <HAL_GPIO_Init+0x1a4>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005548:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 800554c:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8005550:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005554:	f045 0502 	orr.w	r5, r5, #2
 8005558:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 800555c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005560:	f8c9 50f4 	str.w	r5, [r9, #244]	; 0xf4
 8005564:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8005568:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 800556c:	f005 0502 	and.w	r5, r5, #2
 8005570:	9501      	str	r5, [sp, #4]
 8005572:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8005574:	250f      	movs	r5, #15
        temp = SYSCFG->EXTICR[position >> 2U];
 8005576:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 800557a:	fa05 f50c 	lsl.w	r5, r5, ip
 800557e:	ea2e 0e05 	bic.w	lr, lr, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005582:	4d31      	ldr	r5, [pc, #196]	; (8005648 <HAL_GPIO_Init+0x1cc>)
 8005584:	42a8      	cmp	r0, r5
 8005586:	d04d      	beq.n	8005624 <HAL_GPIO_Init+0x1a8>
 8005588:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800558c:	42a8      	cmp	r0, r5
 800558e:	d04b      	beq.n	8005628 <HAL_GPIO_Init+0x1ac>
 8005590:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005594:	42a8      	cmp	r0, r5
 8005596:	d049      	beq.n	800562c <HAL_GPIO_Init+0x1b0>
 8005598:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800559c:	42a8      	cmp	r0, r5
 800559e:	d047      	beq.n	8005630 <HAL_GPIO_Init+0x1b4>
 80055a0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055a4:	42a8      	cmp	r0, r5
 80055a6:	d045      	beq.n	8005634 <HAL_GPIO_Init+0x1b8>
 80055a8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055ac:	42a8      	cmp	r0, r5
 80055ae:	d043      	beq.n	8005638 <HAL_GPIO_Init+0x1bc>
 80055b0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055b4:	42a8      	cmp	r0, r5
 80055b6:	d041      	beq.n	800563c <HAL_GPIO_Init+0x1c0>
 80055b8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055bc:	42a8      	cmp	r0, r5
 80055be:	d03f      	beq.n	8005640 <HAL_GPIO_Init+0x1c4>
 80055c0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055c4:	42a8      	cmp	r0, r5
 80055c6:	d03d      	beq.n	8005644 <HAL_GPIO_Init+0x1c8>
 80055c8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055cc:	42a8      	cmp	r0, r5
 80055ce:	bf0c      	ite	eq
 80055d0:	2509      	moveq	r5, #9
 80055d2:	250a      	movne	r5, #10
 80055d4:	fa05 f50c 	lsl.w	r5, r5, ip
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80055d8:	f416 1f80 	tst.w	r6, #1048576	; 0x100000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80055dc:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80055e0:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
 80055e2:	ea6f 0702 	mvn.w	r7, r2
        temp = EXTI->RTSR1;
 80055e6:	6825      	ldr	r5, [r4, #0]
        temp &= ~(iocurrent);
 80055e8:	bf0c      	ite	eq
 80055ea:	403d      	andeq	r5, r7
          temp |= iocurrent;
 80055ec:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80055ee:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
 80055f2:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 80055f4:	6865      	ldr	r5, [r4, #4]
        temp &= ~(iocurrent);
 80055f6:	bf0c      	ite	eq
 80055f8:	403d      	andeq	r5, r7
          temp |= iocurrent;
 80055fa:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80055fc:	f416 3f00 	tst.w	r6, #131072	; 0x20000
        EXTI->FTSR1 = temp;
 8005600:	6065      	str	r5, [r4, #4]
        temp = EXTI_CurrentCPU->EMR1;
 8005602:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
        temp &= ~(iocurrent);
 8005606:	bf0c      	ite	eq
 8005608:	403d      	andeq	r5, r7
          temp |= iocurrent;
 800560a:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800560c:	03f6      	lsls	r6, r6, #15
        EXTI_CurrentCPU->EMR1 = temp;
 800560e:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
 8005612:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
        temp &= ~(iocurrent);
 8005616:	bf54      	ite	pl
 8005618:	403d      	andpl	r5, r7
          temp |= iocurrent;
 800561a:	4315      	orrmi	r5, r2
        EXTI_CurrentCPU->IMR1 = temp;
 800561c:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    position++;
 8005620:	3301      	adds	r3, #1
 8005622:	e732      	b.n	800548a <HAL_GPIO_Init+0xe>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005624:	2500      	movs	r5, #0
 8005626:	e7d5      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 8005628:	2501      	movs	r5, #1
 800562a:	e7d3      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 800562c:	2502      	movs	r5, #2
 800562e:	e7d1      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 8005630:	2503      	movs	r5, #3
 8005632:	e7cf      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 8005634:	2504      	movs	r5, #4
 8005636:	e7cd      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 8005638:	2505      	movs	r5, #5
 800563a:	e7cb      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 800563c:	2506      	movs	r5, #6
 800563e:	e7c9      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 8005640:	2507      	movs	r5, #7
 8005642:	e7c7      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 8005644:	2508      	movs	r5, #8
 8005646:	e7c5      	b.n	80055d4 <HAL_GPIO_Init+0x158>
 8005648:	58020000 	.word	0x58020000
 800564c:	58024400 	.word	0x58024400

08005650 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8005650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8005654:	2200      	movs	r2, #0
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8005656:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8005780 <HAL_GPIO_DeInit+0x130>
 800565a:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8005784 <HAL_GPIO_DeInit+0x134>
 800565e:	f8df a128 	ldr.w	sl, [pc, #296]	; 8005788 <HAL_GPIO_DeInit+0x138>
 8005662:	f8df b128 	ldr.w	fp, [pc, #296]	; 800578c <HAL_GPIO_DeInit+0x13c>
  while ((GPIO_Pin >> position) != 0x00U)
 8005666:	fa31 f302 	lsrs.w	r3, r1, r2
 800566a:	d101      	bne.n	8005670 <HAL_GPIO_DeInit+0x20>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
 800566c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
 8005670:	2301      	movs	r3, #1
 8005672:	fa03 fc02 	lsl.w	ip, r3, r2
    if (iocurrent != 0x00U)
 8005676:	ea1c 0601 	ands.w	r6, ip, r1
 800567a:	d06b      	beq.n	8005754 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800567c:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8005680:	f002 0703 	and.w	r7, r2, #3
 8005684:	250f      	movs	r5, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8005686:	4b3d      	ldr	r3, [pc, #244]	; (800577c <HAL_GPIO_DeInit+0x12c>)
 8005688:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 800568c:	00bf      	lsls	r7, r7, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 800568e:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8005690:	fa05 f507 	lsl.w	r5, r5, r7
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005694:	f8d4 e408 	ldr.w	lr, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8005698:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800569c:	ea05 0e0e 	and.w	lr, r5, lr
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80056a0:	d05a      	beq.n	8005758 <HAL_GPIO_DeInit+0x108>
 80056a2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056a6:	4298      	cmp	r0, r3
 80056a8:	d058      	beq.n	800575c <HAL_GPIO_DeInit+0x10c>
 80056aa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056ae:	4298      	cmp	r0, r3
 80056b0:	d056      	beq.n	8005760 <HAL_GPIO_DeInit+0x110>
 80056b2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056b6:	4298      	cmp	r0, r3
 80056b8:	d054      	beq.n	8005764 <HAL_GPIO_DeInit+0x114>
 80056ba:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056be:	4298      	cmp	r0, r3
 80056c0:	d052      	beq.n	8005768 <HAL_GPIO_DeInit+0x118>
 80056c2:	4540      	cmp	r0, r8
 80056c4:	d052      	beq.n	800576c <HAL_GPIO_DeInit+0x11c>
 80056c6:	4548      	cmp	r0, r9
 80056c8:	d052      	beq.n	8005770 <HAL_GPIO_DeInit+0x120>
 80056ca:	4550      	cmp	r0, sl
 80056cc:	d052      	beq.n	8005774 <HAL_GPIO_DeInit+0x124>
 80056ce:	4558      	cmp	r0, fp
 80056d0:	d052      	beq.n	8005778 <HAL_GPIO_DeInit+0x128>
 80056d2:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 80056d6:	4298      	cmp	r0, r3
 80056d8:	bf0c      	ite	eq
 80056da:	2309      	moveq	r3, #9
 80056dc:	230a      	movne	r3, #10
 80056de:	40bb      	lsls	r3, r7
 80056e0:	4573      	cmp	r3, lr
 80056e2:	d119      	bne.n	8005718 <HAL_GPIO_DeInit+0xc8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 80056e4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80056e8:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
 80056ec:	ea27 0706 	bic.w	r7, r7, r6
 80056f0:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 80056f4:	f8d3 7084 	ldr.w	r7, [r3, #132]	; 0x84
 80056f8:	ea27 0706 	bic.w	r7, r7, r6
 80056fc:	f8c3 7084 	str.w	r7, [r3, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 8005700:	685f      	ldr	r7, [r3, #4]
 8005702:	ea27 0706 	bic.w	r7, r7, r6
 8005706:	605f      	str	r7, [r3, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 8005708:	681f      	ldr	r7, [r3, #0]
 800570a:	ea27 0706 	bic.w	r7, r7, r6
 800570e:	601f      	str	r7, [r3, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8005710:	68a3      	ldr	r3, [r4, #8]
 8005712:	ea23 0305 	bic.w	r3, r3, r5
 8005716:	60a3      	str	r3, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8005718:	0055      	lsls	r5, r2, #1
 800571a:	2303      	movs	r3, #3
 800571c:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 800571e:	f002 0707 	and.w	r7, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8005722:	40ab      	lsls	r3, r5
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8005724:	260f      	movs	r6, #15
 8005726:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8005728:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 800572a:	40be      	lsls	r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 800572c:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 800572e:	08d4      	lsrs	r4, r2, #3
 8005730:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 8005734:	6a25      	ldr	r5, [r4, #32]
 8005736:	ea25 0506 	bic.w	r5, r5, r6
 800573a:	6225      	str	r5, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 800573c:	68c4      	ldr	r4, [r0, #12]
 800573e:	ea24 0403 	bic.w	r4, r4, r3
 8005742:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 8005744:	6844      	ldr	r4, [r0, #4]
 8005746:	ea24 040c 	bic.w	r4, r4, ip
 800574a:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 800574c:	6884      	ldr	r4, [r0, #8]
 800574e:	ea24 0303 	bic.w	r3, r4, r3
 8005752:	6083      	str	r3, [r0, #8]
    position++;
 8005754:	3201      	adds	r2, #1
 8005756:	e786      	b.n	8005666 <HAL_GPIO_DeInit+0x16>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8005758:	2300      	movs	r3, #0
 800575a:	e7c0      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 800575c:	2301      	movs	r3, #1
 800575e:	e7be      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 8005760:	2302      	movs	r3, #2
 8005762:	e7bc      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 8005764:	2303      	movs	r3, #3
 8005766:	e7ba      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 8005768:	2304      	movs	r3, #4
 800576a:	e7b8      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 800576c:	2305      	movs	r3, #5
 800576e:	e7b6      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 8005770:	2306      	movs	r3, #6
 8005772:	e7b4      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 8005774:	2307      	movs	r3, #7
 8005776:	e7b2      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 8005778:	2308      	movs	r3, #8
 800577a:	e7b0      	b.n	80056de <HAL_GPIO_DeInit+0x8e>
 800577c:	58020000 	.word	0x58020000
 8005780:	58021400 	.word	0x58021400
 8005784:	58021800 	.word	0x58021800
 8005788:	58021c00 	.word	0x58021c00
 800578c:	58022000 	.word	0x58022000

08005790 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 8005790:	6903      	ldr	r3, [r0, #16]
 8005792:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005794:	bf14      	ite	ne
 8005796:	2001      	movne	r0, #1
 8005798:	2000      	moveq	r0, #0
 800579a:	4770      	bx	lr

0800579c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 800579c:	b10a      	cbz	r2, 80057a2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 800579e:	6181      	str	r1, [r0, #24]
  }
}
 80057a0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80057a2:	0409      	lsls	r1, r1, #16
 80057a4:	e7fb      	b.n	800579e <HAL_GPIO_WritePin+0x2>

080057a6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80057a6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80057a8:	ea01 0203 	and.w	r2, r1, r3
 80057ac:	ea21 0103 	bic.w	r1, r1, r3
 80057b0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80057b4:	6181      	str	r1, [r0, #24]
}
 80057b6:	4770      	bx	lr

080057b8 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80057b8:	6803      	ldr	r3, [r0, #0]
 80057ba:	699a      	ldr	r2, [r3, #24]
 80057bc:	0791      	lsls	r1, r2, #30
 80057be:	d501      	bpl.n	80057c4 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 80057c0:	2200      	movs	r2, #0
 80057c2:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80057c4:	699a      	ldr	r2, [r3, #24]
 80057c6:	07d2      	lsls	r2, r2, #31
 80057c8:	d403      	bmi.n	80057d2 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80057ca:	699a      	ldr	r2, [r3, #24]
 80057cc:	f042 0201 	orr.w	r2, r2, #1
 80057d0:	619a      	str	r2, [r3, #24]
  }
}
 80057d2:	4770      	bx	lr

080057d4 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 80057d4:	b530      	push	{r4, r5, lr}
 80057d6:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80057d8:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 80057dc:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80057de:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 80057e0:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80057e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 80057e6:	4a05      	ldr	r2, [pc, #20]	; (80057fc <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80057e8:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 80057ea:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80057ee:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 80057f2:	ea20 0002 	bic.w	r0, r0, r2
 80057f6:	4303      	orrs	r3, r0
 80057f8:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 80057fa:	bd30      	pop	{r4, r5, pc}
 80057fc:	03ff63ff 	.word	0x03ff63ff

08005800 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8005800:	6803      	ldr	r3, [r0, #0]
{
 8005802:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8005806:	699c      	ldr	r4, [r3, #24]
{
 8005808:	4605      	mov	r5, r0
 800580a:	460f      	mov	r7, r1
 800580c:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 800580e:	f014 0410 	ands.w	r4, r4, #16
 8005812:	d06f      	beq.n	80058f4 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8005814:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005816:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8005818:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800581a:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 800581c:	682b      	ldr	r3, [r5, #0]
 800581e:	699a      	ldr	r2, [r3, #24]
 8005820:	0690      	lsls	r0, r2, #26
 8005822:	d461      	bmi.n	80058e8 <I2C_IsErrorOccurred+0xe8>
 8005824:	f1b8 0f00 	cmp.w	r8, #0
 8005828:	d035      	beq.n	8005896 <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 800582a:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 800582e:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 8005830:	682e      	ldr	r6, [r5, #0]
 8005832:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8005834:	05d9      	lsls	r1, r3, #23
 8005836:	d505      	bpl.n	8005844 <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8005838:	f44f 7280 	mov.w	r2, #256	; 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 800583c:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8005840:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8005842:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8005844:	055a      	lsls	r2, r3, #21
 8005846:	d505      	bpl.n	8005854 <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8005848:	f44f 6280 	mov.w	r2, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 800584c:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8005850:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8005852:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8005854:	059b      	lsls	r3, r3, #22
 8005856:	d54f      	bpl.n	80058f8 <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005858:	f44f 7300 	mov.w	r3, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 800585c:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005860:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 8005862:	4628      	mov	r0, r5
 8005864:	f7ff ffa8 	bl	80057b8 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8005868:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 800586a:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 800586c:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8005870:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8005874:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8005878:	f023 0301 	bic.w	r3, r3, #1
 800587c:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 800587e:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8005880:	4323      	orrs	r3, r4
 8005882:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8005884:	2320      	movs	r3, #32
 8005886:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800588a:	2300      	movs	r3, #0
 800588c:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8005890:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 8005894:	e032      	b.n	80058fc <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 8005896:	1c7a      	adds	r2, r7, #1
 8005898:	d0c1      	beq.n	800581e <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800589a:	f7ff fbf9 	bl	8005090 <HAL_GetTick>
 800589e:	1b80      	subs	r0, r0, r6
 80058a0:	42b8      	cmp	r0, r7
 80058a2:	d801      	bhi.n	80058a8 <I2C_IsErrorOccurred+0xa8>
 80058a4:	2f00      	cmp	r7, #0
 80058a6:	d1b9      	bne.n	800581c <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 80058a8:	682b      	ldr	r3, [r5, #0]
 80058aa:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 80058ac:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80058b0:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 80058b2:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80058b4:	0400      	lsls	r0, r0, #16
 80058b6:	d50a      	bpl.n	80058ce <I2C_IsErrorOccurred+0xce>
 80058b8:	0449      	lsls	r1, r1, #17
 80058ba:	d408      	bmi.n	80058ce <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 80058bc:	2a20      	cmp	r2, #32
 80058be:	d006      	beq.n	80058ce <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 80058c0:	685a      	ldr	r2, [r3, #4]
 80058c2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80058c6:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 80058c8:	f7ff fbe2 	bl	8005090 <HAL_GetTick>
 80058cc:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80058ce:	682b      	ldr	r3, [r5, #0]
 80058d0:	699b      	ldr	r3, [r3, #24]
 80058d2:	069b      	lsls	r3, r3, #26
 80058d4:	d4a2      	bmi.n	800581c <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80058d6:	f7ff fbdb 	bl	8005090 <HAL_GetTick>
 80058da:	1b80      	subs	r0, r0, r6
 80058dc:	2819      	cmp	r0, #25
 80058de:	d9f6      	bls.n	80058ce <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 80058e0:	2420      	movs	r4, #32
              status = HAL_ERROR;
 80058e2:	f04f 0801 	mov.w	r8, #1
 80058e6:	e799      	b.n	800581c <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 80058e8:	f1b8 0f00 	cmp.w	r8, #0
 80058ec:	d19d      	bne.n	800582a <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80058ee:	2220      	movs	r2, #32
 80058f0:	61da      	str	r2, [r3, #28]
 80058f2:	e79a      	b.n	800582a <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 80058f4:	4620      	mov	r0, r4
 80058f6:	e79b      	b.n	8005830 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 80058f8:	2800      	cmp	r0, #0
 80058fa:	d1b2      	bne.n	8005862 <I2C_IsErrorOccurred+0x62>
}
 80058fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005900 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8005900:	b570      	push	{r4, r5, r6, lr}
 8005902:	4604      	mov	r4, r0
 8005904:	460d      	mov	r5, r1
 8005906:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8005908:	6823      	ldr	r3, [r4, #0]
 800590a:	699b      	ldr	r3, [r3, #24]
 800590c:	079b      	lsls	r3, r3, #30
 800590e:	d501      	bpl.n	8005914 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8005910:	2000      	movs	r0, #0
}
 8005912:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005914:	4632      	mov	r2, r6
 8005916:	4629      	mov	r1, r5
 8005918:	4620      	mov	r0, r4
 800591a:	f7ff ff71 	bl	8005800 <I2C_IsErrorOccurred>
 800591e:	b9c0      	cbnz	r0, 8005952 <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8005920:	1c6a      	adds	r2, r5, #1
 8005922:	d0f1      	beq.n	8005908 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005924:	f7ff fbb4 	bl	8005090 <HAL_GetTick>
 8005928:	1b80      	subs	r0, r0, r6
 800592a:	42a8      	cmp	r0, r5
 800592c:	d801      	bhi.n	8005932 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 800592e:	2d00      	cmp	r5, #0
 8005930:	d1ea      	bne.n	8005908 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8005932:	6823      	ldr	r3, [r4, #0]
 8005934:	699b      	ldr	r3, [r3, #24]
 8005936:	f013 0302 	ands.w	r3, r3, #2
 800593a:	d1e5      	bne.n	8005908 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800593c:	6c62      	ldr	r2, [r4, #68]	; 0x44
          __HAL_UNLOCK(hi2c);
 800593e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005942:	f042 0220 	orr.w	r2, r2, #32
 8005946:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8005948:	2220      	movs	r2, #32
 800594a:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800594e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 8005952:	2001      	movs	r0, #1
 8005954:	e7dd      	b.n	8005912 <I2C_WaitOnTXISFlagUntilTimeout+0x12>

08005956 <I2C_WaitOnFlagUntilTimeout>:
{
 8005956:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800595a:	9f06      	ldr	r7, [sp, #24]
 800595c:	4604      	mov	r4, r0
 800595e:	4688      	mov	r8, r1
 8005960:	4616      	mov	r6, r2
 8005962:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005964:	6822      	ldr	r2, [r4, #0]
 8005966:	6993      	ldr	r3, [r2, #24]
 8005968:	ea38 0303 	bics.w	r3, r8, r3
 800596c:	bf0c      	ite	eq
 800596e:	2301      	moveq	r3, #1
 8005970:	2300      	movne	r3, #0
 8005972:	42b3      	cmp	r3, r6
 8005974:	d001      	beq.n	800597a <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8005976:	2000      	movs	r0, #0
 8005978:	e01e      	b.n	80059b8 <I2C_WaitOnFlagUntilTimeout+0x62>
    if (Timeout != HAL_MAX_DELAY)
 800597a:	1c6b      	adds	r3, r5, #1
 800597c:	d0f3      	beq.n	8005966 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800597e:	f7ff fb87 	bl	8005090 <HAL_GetTick>
 8005982:	1bc0      	subs	r0, r0, r7
 8005984:	42a8      	cmp	r0, r5
 8005986:	d801      	bhi.n	800598c <I2C_WaitOnFlagUntilTimeout+0x36>
 8005988:	2d00      	cmp	r5, #0
 800598a:	d1eb      	bne.n	8005964 <I2C_WaitOnFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800598c:	6823      	ldr	r3, [r4, #0]
 800598e:	699b      	ldr	r3, [r3, #24]
 8005990:	ea38 0303 	bics.w	r3, r8, r3
 8005994:	bf0c      	ite	eq
 8005996:	2301      	moveq	r3, #1
 8005998:	2300      	movne	r3, #0
 800599a:	42b3      	cmp	r3, r6
 800599c:	d1e2      	bne.n	8005964 <I2C_WaitOnFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800599e:	6c63      	ldr	r3, [r4, #68]	; 0x44
          return HAL_ERROR;
 80059a0:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80059a2:	f043 0320 	orr.w	r3, r3, #32
 80059a6:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80059a8:	2320      	movs	r3, #32
 80059aa:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80059ae:	2300      	movs	r3, #0
 80059b0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
 80059b4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80059b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080059bc <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 80059bc:	b570      	push	{r4, r5, r6, lr}
 80059be:	4604      	mov	r4, r0
 80059c0:	460d      	mov	r5, r1
 80059c2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80059c4:	6823      	ldr	r3, [r4, #0]
 80059c6:	699b      	ldr	r3, [r3, #24]
 80059c8:	069b      	lsls	r3, r3, #26
 80059ca:	d501      	bpl.n	80059d0 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 80059cc:	2000      	movs	r0, #0
}
 80059ce:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80059d0:	4632      	mov	r2, r6
 80059d2:	4629      	mov	r1, r5
 80059d4:	4620      	mov	r0, r4
 80059d6:	f7ff ff13 	bl	8005800 <I2C_IsErrorOccurred>
 80059da:	b9b0      	cbnz	r0, 8005a0a <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80059dc:	f7ff fb58 	bl	8005090 <HAL_GetTick>
 80059e0:	1b80      	subs	r0, r0, r6
 80059e2:	42a8      	cmp	r0, r5
 80059e4:	d801      	bhi.n	80059ea <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 80059e6:	2d00      	cmp	r5, #0
 80059e8:	d1ec      	bne.n	80059c4 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 80059ea:	6823      	ldr	r3, [r4, #0]
 80059ec:	699b      	ldr	r3, [r3, #24]
 80059ee:	f013 0320 	ands.w	r3, r3, #32
 80059f2:	d1e7      	bne.n	80059c4 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80059f4:	6c62      	ldr	r2, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 80059f6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80059fa:	f042 0220 	orr.w	r2, r2, #32
 80059fe:	6462      	str	r2, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8005a00:	2220      	movs	r2, #32
 8005a02:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a06:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 8005a0a:	2001      	movs	r0, #1
 8005a0c:	e7df      	b.n	80059ce <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

08005a0e <HAL_I2C_MspInit>:
}
 8005a0e:	4770      	bx	lr

08005a10 <HAL_I2C_Init>:
{
 8005a10:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005a12:	4604      	mov	r4, r0
 8005a14:	2800      	cmp	r0, #0
 8005a16:	d04a      	beq.n	8005aae <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005a18:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005a1c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005a20:	b91b      	cbnz	r3, 8005a2a <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8005a22:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8005a26:	f7ff fff2 	bl	8005a0e <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005a2a:	2324      	movs	r3, #36	; 0x24
 8005a2c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005a30:	6823      	ldr	r3, [r4, #0]
 8005a32:	681a      	ldr	r2, [r3, #0]
 8005a34:	f022 0201 	bic.w	r2, r2, #1
 8005a38:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8005a3a:	6862      	ldr	r2, [r4, #4]
 8005a3c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005a40:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005a42:	689a      	ldr	r2, [r3, #8]
 8005a44:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005a48:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005a4a:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005a4e:	2901      	cmp	r1, #1
 8005a50:	d124      	bne.n	8005a9c <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005a52:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005a56:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005a58:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005a5a:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005a5c:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8005a60:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005a64:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8005a66:	68da      	ldr	r2, [r3, #12]
 8005a68:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005a6c:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005a6e:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8005a72:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005a74:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005a76:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005a7a:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005a7c:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8005a80:	430a      	orrs	r2, r1
 8005a82:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8005a84:	681a      	ldr	r2, [r3, #0]
 8005a86:	f042 0201 	orr.w	r2, r2, #1
 8005a8a:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8005a8c:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005a8e:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005a90:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005a94:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a96:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8005a9a:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005a9c:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005aa0:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005aa2:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005aa4:	d1d8      	bne.n	8005a58 <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8005aa6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8005aaa:	605a      	str	r2, [r3, #4]
 8005aac:	e7d4      	b.n	8005a58 <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8005aae:	2001      	movs	r0, #1
 8005ab0:	e7f3      	b.n	8005a9a <HAL_I2C_Init+0x8a>

08005ab2 <HAL_I2C_MspDeInit>:
 8005ab2:	4770      	bx	lr

08005ab4 <HAL_I2C_DeInit>:
{
 8005ab4:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005ab6:	4604      	mov	r4, r0
 8005ab8:	b198      	cbz	r0, 8005ae2 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005aba:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005abc:	2324      	movs	r3, #36	; 0x24
 8005abe:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005ac2:	6813      	ldr	r3, [r2, #0]
 8005ac4:	f023 0301 	bic.w	r3, r3, #1
 8005ac8:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005aca:	f7ff fff2 	bl	8005ab2 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005ace:	2000      	movs	r0, #0
 8005ad0:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 8005ad2:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8005ad6:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005ada:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005adc:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8005ae0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005ae2:	2001      	movs	r0, #1
 8005ae4:	e7fc      	b.n	8005ae0 <HAL_I2C_DeInit+0x2c>
	...

08005ae8 <HAL_I2C_Mem_Write>:
{
 8005ae8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005aec:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005aee:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 8005af2:	4604      	mov	r4, r0
 8005af4:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005af6:	2b20      	cmp	r3, #32
{
 8005af8:	4616      	mov	r6, r2
 8005afa:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8005afe:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b02:	f040 80c6 	bne.w	8005c92 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8005b06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b08:	b113      	cbz	r3, 8005b10 <HAL_I2C_Mem_Write+0x28>
 8005b0a:	f1ba 0f00 	cmp.w	sl, #0
 8005b0e:	d106      	bne.n	8005b1e <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005b10:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005b14:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8005b16:	2001      	movs	r0, #1
}
 8005b18:	b003      	add	sp, #12
 8005b1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005b1e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005b22:	2b01      	cmp	r3, #1
 8005b24:	f000 80b5 	beq.w	8005c92 <HAL_I2C_Mem_Write+0x1aa>
 8005b28:	f04f 0b01 	mov.w	fp, #1
 8005b2c:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8005b30:	f7ff faae 	bl	8005090 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005b34:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8005b36:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005b38:	9000      	str	r0, [sp, #0]
 8005b3a:	465a      	mov	r2, fp
 8005b3c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005b40:	4620      	mov	r0, r4
 8005b42:	f7ff ff08 	bl	8005956 <I2C_WaitOnFlagUntilTimeout>
 8005b46:	2800      	cmp	r0, #0
 8005b48:	d1e5      	bne.n	8005b16 <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005b4a:	2321      	movs	r3, #33	; 0x21
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005b4c:	fa5f f289 	uxtb.w	r2, r9
 8005b50:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 8005b52:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005b54:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005b58:	2340      	movs	r3, #64	; 0x40
 8005b5a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8005b5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b60:	6460      	str	r0, [r4, #68]	; 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005b62:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005b64:	6263      	str	r3, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005b66:	4b4c      	ldr	r3, [pc, #304]	; (8005c98 <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 8005b68:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005b6c:	9300      	str	r3, [sp, #0]
 8005b6e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005b72:	f7ff fe2f 	bl	80057d4 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b76:	462a      	mov	r2, r5
 8005b78:	4641      	mov	r1, r8
 8005b7a:	4620      	mov	r0, r4
 8005b7c:	f7ff fec0 	bl	8005900 <I2C_WaitOnTXISFlagUntilTimeout>
 8005b80:	bb18      	cbnz	r0, 8005bca <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b82:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005b86:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b88:	d115      	bne.n	8005bb6 <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005b8a:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005b8c:	2200      	movs	r2, #0
 8005b8e:	2180      	movs	r1, #128	; 0x80
 8005b90:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005b92:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005b94:	4643      	mov	r3, r8
 8005b96:	9500      	str	r5, [sp, #0]
 8005b98:	f7ff fedd 	bl	8005956 <I2C_WaitOnFlagUntilTimeout>
 8005b9c:	b9a8      	cbnz	r0, 8005bca <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005b9e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005ba0:	b29b      	uxth	r3, r3
 8005ba2:	2bff      	cmp	r3, #255	; 0xff
 8005ba4:	d815      	bhi.n	8005bd2 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005ba6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005ba8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005bac:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 8005bae:	b292      	uxth	r2, r2
 8005bb0:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005bb2:	b2d2      	uxtb	r2, r2
 8005bb4:	e012      	b.n	8005bdc <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005bb6:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005bb8:	4641      	mov	r1, r8
 8005bba:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005bbc:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005bbe:	462a      	mov	r2, r5
 8005bc0:	f7ff fe9e 	bl	8005900 <I2C_WaitOnTXISFlagUntilTimeout>
 8005bc4:	b908      	cbnz	r0, 8005bca <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005bc6:	6823      	ldr	r3, [r4, #0]
 8005bc8:	e7df      	b.n	8005b8a <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8005bca:	2300      	movs	r3, #0
 8005bcc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8005bd0:	e7a1      	b.n	8005b16 <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005bd2:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005bd4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005bd8:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005bda:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005bdc:	4639      	mov	r1, r7
 8005bde:	4620      	mov	r0, r4
 8005be0:	f7ff fdf8 	bl	80057d4 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005be4:	462a      	mov	r2, r5
 8005be6:	4641      	mov	r1, r8
 8005be8:	4620      	mov	r0, r4
 8005bea:	f7ff fe89 	bl	8005900 <I2C_WaitOnTXISFlagUntilTimeout>
 8005bee:	2800      	cmp	r0, #0
 8005bf0:	d191      	bne.n	8005b16 <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8005bf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005bf4:	6822      	ldr	r2, [r4, #0]
 8005bf6:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005bfa:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 8005bfc:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005bfe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005c00:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005c02:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005c04:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005c06:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8005c08:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005c0a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005c0c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005c0e:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005c10:	b29b      	uxth	r3, r3
 8005c12:	b1b3      	cbz	r3, 8005c42 <HAL_I2C_Mem_Write+0x15a>
 8005c14:	b9aa      	cbnz	r2, 8005c42 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005c16:	4643      	mov	r3, r8
 8005c18:	2180      	movs	r1, #128	; 0x80
 8005c1a:	4620      	mov	r0, r4
 8005c1c:	9500      	str	r5, [sp, #0]
 8005c1e:	f7ff fe9a 	bl	8005956 <I2C_WaitOnFlagUntilTimeout>
 8005c22:	2800      	cmp	r0, #0
 8005c24:	f47f af77 	bne.w	8005b16 <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005c28:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c2a:	b29b      	uxth	r3, r3
 8005c2c:	2bff      	cmp	r3, #255	; 0xff
 8005c2e:	d928      	bls.n	8005c82 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005c30:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005c32:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005c36:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005c38:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005c3a:	4639      	mov	r1, r7
 8005c3c:	4620      	mov	r0, r4
 8005c3e:	f7ff fdc9 	bl	80057d4 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005c42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c44:	b29b      	uxth	r3, r3
 8005c46:	2b00      	cmp	r3, #0
 8005c48:	d1cc      	bne.n	8005be4 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c4a:	462a      	mov	r2, r5
 8005c4c:	4641      	mov	r1, r8
 8005c4e:	4620      	mov	r0, r4
 8005c50:	f7ff feb4 	bl	80059bc <I2C_WaitOnSTOPFlagUntilTimeout>
 8005c54:	2800      	cmp	r0, #0
 8005c56:	f47f af5e 	bne.w	8005b16 <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005c5a:	6823      	ldr	r3, [r4, #0]
 8005c5c:	2120      	movs	r1, #32
 8005c5e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005c60:	685a      	ldr	r2, [r3, #4]
 8005c62:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8005c66:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005c6a:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8005c6e:	f022 0201 	bic.w	r2, r2, #1
 8005c72:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005c74:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005c78:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005c7c:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8005c80:	e74a      	b.n	8005b18 <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005c82:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005c84:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005c88:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8005c8a:	b292      	uxth	r2, r2
 8005c8c:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005c8e:	b2d2      	uxtb	r2, r2
 8005c90:	e7d3      	b.n	8005c3a <HAL_I2C_Mem_Write+0x152>
    return HAL_BUSY;
 8005c92:	2002      	movs	r0, #2
 8005c94:	e740      	b.n	8005b18 <HAL_I2C_Mem_Write+0x30>
 8005c96:	bf00      	nop
 8005c98:	80002000 	.word	0x80002000

08005c9c <HAL_I2C_Mem_Read>:
{
 8005c9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ca0:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005ca2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 8005ca6:	4604      	mov	r4, r0
 8005ca8:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005caa:	2b20      	cmp	r3, #32
{
 8005cac:	4616      	mov	r6, r2
 8005cae:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8005cb2:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005cb6:	f040 80c9 	bne.w	8005e4c <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8005cba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005cbc:	b113      	cbz	r3, 8005cc4 <HAL_I2C_Mem_Read+0x28>
 8005cbe:	f1ba 0f00 	cmp.w	sl, #0
 8005cc2:	d106      	bne.n	8005cd2 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005cc4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005cc8:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8005cca:	2001      	movs	r0, #1
}
 8005ccc:	b003      	add	sp, #12
 8005cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005cd2:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005cd6:	2b01      	cmp	r3, #1
 8005cd8:	f000 80b8 	beq.w	8005e4c <HAL_I2C_Mem_Read+0x1b0>
 8005cdc:	f04f 0b01 	mov.w	fp, #1
 8005ce0:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8005ce4:	f7ff f9d4 	bl	8005090 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005ce8:	2319      	movs	r3, #25
 8005cea:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005cec:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005cee:	465a      	mov	r2, fp
 8005cf0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005cf4:	4620      	mov	r0, r4
 8005cf6:	f7ff fe2e 	bl	8005956 <I2C_WaitOnFlagUntilTimeout>
 8005cfa:	4603      	mov	r3, r0
 8005cfc:	2800      	cmp	r0, #0
 8005cfe:	d1e4      	bne.n	8005cca <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005d00:	2222      	movs	r2, #34	; 0x22
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005d02:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 8005d04:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005d06:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005d0a:	2240      	movs	r2, #64	; 0x40
 8005d0c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8005d10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005d12:	6460      	str	r0, [r4, #68]	; 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005d14:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005d16:	6262      	str	r2, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005d18:	4a4d      	ldr	r2, [pc, #308]	; (8005e50 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 8005d1a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005d1e:	9200      	str	r2, [sp, #0]
 8005d20:	fa5f f289 	uxtb.w	r2, r9
 8005d24:	f7ff fd56 	bl	80057d4 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d28:	462a      	mov	r2, r5
 8005d2a:	4641      	mov	r1, r8
 8005d2c:	4620      	mov	r0, r4
 8005d2e:	f7ff fde7 	bl	8005900 <I2C_WaitOnTXISFlagUntilTimeout>
 8005d32:	bb20      	cbnz	r0, 8005d7e <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005d34:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005d38:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005d3a:	d116      	bne.n	8005d6a <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005d3c:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005d3e:	2200      	movs	r2, #0
 8005d40:	2140      	movs	r1, #64	; 0x40
 8005d42:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005d44:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005d46:	4643      	mov	r3, r8
 8005d48:	9500      	str	r5, [sp, #0]
 8005d4a:	f7ff fe04 	bl	8005956 <I2C_WaitOnFlagUntilTimeout>
 8005d4e:	b9b0      	cbnz	r0, 8005d7e <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005d50:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005d52:	b29b      	uxth	r3, r3
 8005d54:	2bff      	cmp	r3, #255	; 0xff
 8005d56:	4b3f      	ldr	r3, [pc, #252]	; (8005e54 <HAL_I2C_Mem_Read+0x1b8>)
 8005d58:	d815      	bhi.n	8005d86 <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005d5a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005d5c:	9300      	str	r3, [sp, #0]
 8005d5e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8005d62:	b292      	uxth	r2, r2
 8005d64:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005d66:	b2d2      	uxtb	r2, r2
 8005d68:	e012      	b.n	8005d90 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005d6a:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d6c:	4641      	mov	r1, r8
 8005d6e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005d70:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d72:	462a      	mov	r2, r5
 8005d74:	f7ff fdc4 	bl	8005900 <I2C_WaitOnTXISFlagUntilTimeout>
 8005d78:	b908      	cbnz	r0, 8005d7e <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005d7a:	6823      	ldr	r3, [r4, #0]
 8005d7c:	e7de      	b.n	8005d3c <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8005d7e:	2300      	movs	r3, #0
 8005d80:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8005d84:	e7a1      	b.n	8005cca <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005d86:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005d88:	9300      	str	r3, [sp, #0]
 8005d8a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005d8e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005d90:	4639      	mov	r1, r7
 8005d92:	4620      	mov	r0, r4
 8005d94:	f7ff fd1e 	bl	80057d4 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8005d98:	4643      	mov	r3, r8
 8005d9a:	2200      	movs	r2, #0
 8005d9c:	2104      	movs	r1, #4
 8005d9e:	4620      	mov	r0, r4
 8005da0:	9500      	str	r5, [sp, #0]
 8005da2:	f7ff fdd8 	bl	8005956 <I2C_WaitOnFlagUntilTimeout>
 8005da6:	2800      	cmp	r0, #0
 8005da8:	d18f      	bne.n	8005cca <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005daa:	6823      	ldr	r3, [r4, #0]
 8005dac:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005dae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005db0:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005db2:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8005db4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 8005db6:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8005db8:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8005dba:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005dbc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005dbe:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005dc0:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005dc2:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005dc4:	b29b      	uxth	r3, r3
 8005dc6:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005dc8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005dca:	b29b      	uxth	r3, r3
 8005dcc:	b1b3      	cbz	r3, 8005dfc <HAL_I2C_Mem_Read+0x160>
 8005dce:	b9aa      	cbnz	r2, 8005dfc <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005dd0:	4643      	mov	r3, r8
 8005dd2:	2180      	movs	r1, #128	; 0x80
 8005dd4:	4620      	mov	r0, r4
 8005dd6:	9500      	str	r5, [sp, #0]
 8005dd8:	f7ff fdbd 	bl	8005956 <I2C_WaitOnFlagUntilTimeout>
 8005ddc:	2800      	cmp	r0, #0
 8005dde:	f47f af74 	bne.w	8005cca <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005de2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005de4:	b29b      	uxth	r3, r3
 8005de6:	2bff      	cmp	r3, #255	; 0xff
 8005de8:	d928      	bls.n	8005e3c <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005dea:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005dec:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005df0:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005df2:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005df4:	4639      	mov	r1, r7
 8005df6:	4620      	mov	r0, r4
 8005df8:	f7ff fcec 	bl	80057d4 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005dfc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005dfe:	b29b      	uxth	r3, r3
 8005e00:	2b00      	cmp	r3, #0
 8005e02:	d1c9      	bne.n	8005d98 <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005e04:	462a      	mov	r2, r5
 8005e06:	4641      	mov	r1, r8
 8005e08:	4620      	mov	r0, r4
 8005e0a:	f7ff fdd7 	bl	80059bc <I2C_WaitOnSTOPFlagUntilTimeout>
 8005e0e:	2800      	cmp	r0, #0
 8005e10:	f47f af5b 	bne.w	8005cca <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005e14:	6823      	ldr	r3, [r4, #0]
 8005e16:	2120      	movs	r1, #32
 8005e18:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005e1a:	685a      	ldr	r2, [r3, #4]
 8005e1c:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8005e20:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005e24:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8005e28:	f022 0201 	bic.w	r2, r2, #1
 8005e2c:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005e2e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005e32:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005e36:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8005e3a:	e747      	b.n	8005ccc <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005e3c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005e3e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005e42:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8005e44:	b292      	uxth	r2, r2
 8005e46:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005e48:	b2d2      	uxtb	r2, r2
 8005e4a:	e7d3      	b.n	8005df4 <HAL_I2C_Mem_Read+0x158>
    return HAL_BUSY;
 8005e4c:	2002      	movs	r0, #2
 8005e4e:	e73d      	b.n	8005ccc <HAL_I2C_Mem_Read+0x30>
 8005e50:	80002000 	.word	0x80002000
 8005e54:	80002400 	.word	0x80002400

08005e58 <HAL_I2C_GetState>:
  return hi2c->State;
 8005e58:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 8005e5c:	4770      	bx	lr

08005e5e <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 8005e5e:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
 8005e60:	4770      	bx	lr

08005e62 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005e62:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005e64:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005e68:	2b20      	cmp	r3, #32
 8005e6a:	b2dc      	uxtb	r4, r3
 8005e6c:	d11d      	bne.n	8005eaa <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005e6e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005e72:	2b01      	cmp	r3, #1
 8005e74:	d019      	beq.n	8005eaa <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005e76:	2324      	movs	r3, #36	; 0x24
 8005e78:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005e7c:	6803      	ldr	r3, [r0, #0]
 8005e7e:	681a      	ldr	r2, [r3, #0]
 8005e80:	f022 0201 	bic.w	r2, r2, #1
 8005e84:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005e86:	681a      	ldr	r2, [r3, #0]
 8005e88:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005e8c:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005e8e:	681a      	ldr	r2, [r3, #0]
 8005e90:	4311      	orrs	r1, r2
 8005e92:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005e94:	681a      	ldr	r2, [r3, #0]
 8005e96:	f042 0201 	orr.w	r2, r2, #1
 8005e9a:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005e9c:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005e9e:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005ea2:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8005ea6:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005ea8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005eaa:	2002      	movs	r0, #2
 8005eac:	e7fc      	b.n	8005ea8 <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005eae <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005eae:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005eb0:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005eb4:	2b20      	cmp	r3, #32
 8005eb6:	b2dc      	uxtb	r4, r3
 8005eb8:	d11c      	bne.n	8005ef4 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005eba:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005ebe:	2b01      	cmp	r3, #1
 8005ec0:	d018      	beq.n	8005ef4 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005ec2:	2324      	movs	r3, #36	; 0x24
 8005ec4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005ec8:	6803      	ldr	r3, [r0, #0]
 8005eca:	681a      	ldr	r2, [r3, #0]
 8005ecc:	f022 0201 	bic.w	r2, r2, #1
 8005ed0:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005ed2:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005ed4:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005ed8:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8005edc:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005ede:	681a      	ldr	r2, [r3, #0]
 8005ee0:	f042 0201 	orr.w	r2, r2, #1
 8005ee4:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005ee6:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005ee8:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005eec:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8005ef0:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005ef2:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005ef4:	2002      	movs	r0, #2
 8005ef6:	e7fc      	b.n	8005ef2 <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005ef8 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005ef8:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005efa:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005efc:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f00:	3284      	adds	r2, #132	; 0x84
 8005f02:	1883      	adds	r3, r0, r2
{
 8005f04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f08:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005f0a:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f0e:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005f10:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f14:	684c      	ldr	r4, [r1, #4]
 8005f16:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f1a:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005f1e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f22:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f24:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005f26:	68c5      	ldr	r5, [r0, #12]
 8005f28:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8005f2c:	443d      	add	r5, r7
 8005f2e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005f32:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005f34:	68c6      	ldr	r6, [r0, #12]
 8005f36:	68cd      	ldr	r5, [r1, #12]
 8005f38:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005f3c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005f3e:	689d      	ldr	r5, [r3, #8]
 8005f40:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005f44:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005f46:	688d      	ldr	r5, [r1, #8]
 8005f48:	68c7      	ldr	r7, [r0, #12]
 8005f4a:	3501      	adds	r5, #1
 8005f4c:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005f50:	443d      	add	r5, r7
 8005f52:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005f56:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005f58:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005f5a:	691d      	ldr	r5, [r3, #16]
 8005f5c:	f025 0507 	bic.w	r5, r5, #7
 8005f60:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005f62:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005f64:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005f66:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005f6a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005f6e:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005f72:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005f76:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005f7a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005f7e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005f82:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005f84:	695d      	ldr	r5, [r3, #20]
 8005f86:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005f8a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005f8c:	694d      	ldr	r5, [r1, #20]
 8005f8e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005f90:	69dd      	ldr	r5, [r3, #28]
 8005f92:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005f96:	f025 0507 	bic.w	r5, r5, #7
 8005f9a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005f9c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005fa0:	433d      	orrs	r5, r7
 8005fa2:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005fa4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005fa6:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005fa8:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005fac:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005fae:	b1fe      	cbz	r6, 8005ff0 <LTDC_SetConfig+0xf8>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005fb0:	3e01      	subs	r6, #1
 8005fb2:	2e06      	cmp	r6, #6
 8005fb4:	d81e      	bhi.n	8005ff4 <LTDC_SetConfig+0xfc>
 8005fb6:	4d10      	ldr	r5, [pc, #64]	; (8005ff8 <LTDC_SetConfig+0x100>)
 8005fb8:	5dad      	ldrb	r5, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005fba:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005fbc:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005fc0:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005fc4:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005fc6:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005fc8:	3407      	adds	r4, #7
 8005fca:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005fcc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005fce:	436e      	muls	r6, r5
 8005fd0:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005fd4:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005fd6:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005fd8:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005fdc:	f024 0407 	bic.w	r4, r4, #7
 8005fe0:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005fe2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005fe4:	5883      	ldr	r3, [r0, r2]
 8005fe6:	f043 0301 	orr.w	r3, r3, #1
 8005fea:	5083      	str	r3, [r0, r2]
}
 8005fec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005ff0:	2504      	movs	r5, #4
 8005ff2:	e7e2      	b.n	8005fba <LTDC_SetConfig+0xc2>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005ff4:	2501      	movs	r5, #1
 8005ff6:	e7e0      	b.n	8005fba <LTDC_SetConfig+0xc2>
 8005ff8:	08023250 	.word	0x08023250

08005ffc <HAL_LTDC_Init>:
{
 8005ffc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005ffe:	4604      	mov	r4, r0
 8006000:	2800      	cmp	r0, #0
 8006002:	d063      	beq.n	80060cc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006004:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006008:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800600c:	b91b      	cbnz	r3, 8006016 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800600e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006012:	f7fb fc4b 	bl	80018ac <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006016:	2302      	movs	r3, #2
 8006018:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800601c:	6823      	ldr	r3, [r4, #0]
 800601e:	699a      	ldr	r2, [r3, #24]
 8006020:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006024:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006026:	6999      	ldr	r1, [r3, #24]
 8006028:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800602c:	4302      	orrs	r2, r0
 800602e:	68e0      	ldr	r0, [r4, #12]
 8006030:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006032:	6920      	ldr	r0, [r4, #16]
 8006034:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006036:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006038:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800603a:	4925      	ldr	r1, [pc, #148]	; (80060d0 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800603c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800603e:	689a      	ldr	r2, [r3, #8]
 8006040:	400a      	ands	r2, r1
 8006042:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006044:	689a      	ldr	r2, [r3, #8]
 8006046:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800604a:	69a0      	ldr	r0, [r4, #24]
 800604c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800604e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006050:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006052:	68da      	ldr	r2, [r3, #12]
 8006054:	400a      	ands	r2, r1
 8006056:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006058:	68da      	ldr	r2, [r3, #12]
 800605a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800605e:	6a20      	ldr	r0, [r4, #32]
 8006060:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006062:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006064:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006066:	691a      	ldr	r2, [r3, #16]
 8006068:	400a      	ands	r2, r1
 800606a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800606c:	691a      	ldr	r2, [r3, #16]
 800606e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006072:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006074:	4302      	orrs	r2, r0
 8006076:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006078:	695a      	ldr	r2, [r3, #20]
 800607a:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 800607c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800607e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006080:	695a      	ldr	r2, [r3, #20]
 8006082:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006086:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006088:	430a      	orrs	r2, r1
 800608a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800608c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800608e:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006092:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006096:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800609a:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800609c:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800609e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80060a2:	432a      	orrs	r2, r5
 80060a4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80060a8:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80060aa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80060ae:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80060b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80060b2:	f042 0206 	orr.w	r2, r2, #6
 80060b6:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80060b8:	699a      	ldr	r2, [r3, #24]
 80060ba:	f042 0201 	orr.w	r2, r2, #1
 80060be:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 80060c0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80060c2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80060c6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80060ca:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80060cc:	2001      	movs	r0, #1
 80060ce:	e7fc      	b.n	80060ca <HAL_LTDC_Init+0xce>
 80060d0:	f000f800 	.word	0xf000f800

080060d4 <HAL_LTDC_ErrorCallback>:
 80060d4:	4770      	bx	lr

080060d6 <HAL_LTDC_ReloadEventCallback>:
 80060d6:	4770      	bx	lr

080060d8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80060d8:	6803      	ldr	r3, [r0, #0]
{
 80060da:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80060dc:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 80060de:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80060e0:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80060e2:	0772      	lsls	r2, r6, #29
 80060e4:	d514      	bpl.n	8006110 <HAL_LTDC_IRQHandler+0x38>
 80060e6:	0769      	lsls	r1, r5, #29
 80060e8:	d512      	bpl.n	8006110 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80060ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80060ec:	f022 0204 	bic.w	r2, r2, #4
 80060f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80060f2:	2204      	movs	r2, #4
 80060f4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80060f6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80060fa:	f043 0301 	orr.w	r3, r3, #1
 80060fe:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8006102:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006104:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006108:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800610c:	f7ff ffe2 	bl	80060d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006110:	07b2      	lsls	r2, r6, #30
 8006112:	d516      	bpl.n	8006142 <HAL_LTDC_IRQHandler+0x6a>
 8006114:	07ab      	lsls	r3, r5, #30
 8006116:	d514      	bpl.n	8006142 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006118:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 800611a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800611c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800611e:	f022 0202 	bic.w	r2, r2, #2
 8006122:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006124:	2202      	movs	r2, #2
 8006126:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006128:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800612c:	4313      	orrs	r3, r2
 800612e:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006132:	2304      	movs	r3, #4
 8006134:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006138:	2300      	movs	r3, #0
 800613a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800613e:	f7ff ffc9 	bl	80060d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006142:	07f0      	lsls	r0, r6, #31
 8006144:	d510      	bpl.n	8006168 <HAL_LTDC_IRQHandler+0x90>
 8006146:	07e9      	lsls	r1, r5, #31
 8006148:	d50e      	bpl.n	8006168 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800614a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 800614c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800614e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006150:	f022 0201 	bic.w	r2, r2, #1
 8006154:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006156:	2201      	movs	r2, #1
 8006158:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800615a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800615c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006160:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006164:	f7fb f862 	bl	800122c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006168:	0732      	lsls	r2, r6, #28
 800616a:	d511      	bpl.n	8006190 <HAL_LTDC_IRQHandler+0xb8>
 800616c:	072b      	lsls	r3, r5, #28
 800616e:	d50f      	bpl.n	8006190 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006170:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006172:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006176:	f022 0208 	bic.w	r2, r2, #8
 800617a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800617c:	2208      	movs	r2, #8
 800617e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006180:	2301      	movs	r3, #1
 8006182:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006186:	2300      	movs	r3, #0
 8006188:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800618c:	f7ff ffa3 	bl	80060d6 <HAL_LTDC_ReloadEventCallback>
}
 8006190:	bd70      	pop	{r4, r5, r6, pc}

08006192 <HAL_LTDC_ConfigLayer>:
{
 8006192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8006196:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 800619a:	4606      	mov	r6, r0
 800619c:	460f      	mov	r7, r1
 800619e:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 80061a0:	2b01      	cmp	r3, #1
 80061a2:	f04f 0002 	mov.w	r0, #2
 80061a6:	d01f      	beq.n	80061e8 <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80061a8:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 80061aa:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80061ae:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80061b0:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80061b4:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 80061b8:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80061bc:	3438      	adds	r4, #56	; 0x38
 80061be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80061c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80061c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80061c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80061c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80061c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80061ca:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80061cc:	4630      	mov	r0, r6
 80061ce:	4662      	mov	r2, ip
 80061d0:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80061d2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80061d4:	f7ff fe90 	bl	8005ef8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80061d8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80061da:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80061dc:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80061e0:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80061e4:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80061e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080061ec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80061ec:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80061f0:	2b01      	cmp	r3, #1
 80061f2:	f04f 0302 	mov.w	r3, #2
 80061f6:	d012      	beq.n	800621e <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80061f8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80061fc:	6803      	ldr	r3, [r0, #0]
 80061fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006200:	f022 0201 	bic.w	r2, r2, #1
 8006204:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006206:	4a07      	ldr	r2, [pc, #28]	; (8006224 <HAL_LTDC_ProgramLineEvent+0x38>)
 8006208:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800620a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800620c:	f042 0201 	orr.w	r2, r2, #1
 8006210:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006212:	2301      	movs	r3, #1
 8006214:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006218:	2300      	movs	r3, #0
 800621a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800621e:	4618      	mov	r0, r3
}
 8006220:	4770      	bx	lr
 8006222:	bf00      	nop
 8006224:	50001000 	.word	0x50001000

08006228 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
 8006228:	b538      	push	{r3, r4, r5, lr}
 800622a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800622c:	f7fe ff30 	bl	8005090 <HAL_GetTick>
 8006230:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 8006232:	2c00      	cmp	r4, #0
 8006234:	d061      	beq.n	80062fa <HAL_MDMA_Init+0xd2>
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset));


  /* Allocate lock resource */
  __HAL_UNLOCK(hmdma);
 8006236:	2300      	movs	r3, #0

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
 8006238:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hmdma);
 800623a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_BUSY;
 800623e:	2302      	movs	r3, #2
 8006240:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_MDMA_DISABLE(hmdma);
 8006244:	68d3      	ldr	r3, [r2, #12]
 8006246:	f023 0301 	bic.w	r3, r3, #1
 800624a:	60d3      	str	r3, [r2, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 800624c:	6823      	ldr	r3, [r4, #0]
 800624e:	68da      	ldr	r2, [r3, #12]
 8006250:	07d2      	lsls	r2, r2, #31
 8006252:	d448      	bmi.n	80062e6 <HAL_MDMA_Init+0xbe>
static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
  uint32_t blockoffset;

  /* Prepare the MDMA Channel configuration */
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 8006254:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 8006258:	430a      	orrs	r2, r1
 800625a:	60da      	str	r2, [r3, #12]
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 800625c:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 8006260:	430a      	orrs	r2, r1
 8006262:	69e1      	ldr	r1, [r4, #28]
 8006264:	430a      	orrs	r2, r1
 8006266:	6a21      	ldr	r1, [r4, #32]
 8006268:	430a      	orrs	r2, r1
 800626a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800626c:	430a      	orrs	r2, r1
 800626e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006270:	430a      	orrs	r2, r1
 8006272:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006274:	430a      	orrs	r2, r1
 8006276:	68a1      	ldr	r1, [r4, #8]
 8006278:	430a      	orrs	r2, r1
 800627a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800627c:	3901      	subs	r1, #1
 800627e:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 8006282:	6861      	ldr	r1, [r4, #4]
 8006284:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 8006288:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 800628a:	d103      	bne.n	8006294 <HAL_MDMA_Init+0x6c>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
 800628c:	691a      	ldr	r2, [r3, #16]
 800628e:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
 8006292:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
 8006294:	2200      	movs	r2, #0
 8006296:	615a      	str	r2, [r3, #20]

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
 8006298:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800629a:	2a00      	cmp	r2, #0
 800629c:	da04      	bge.n	80062a8 <HAL_MDMA_Init+0x80>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 800629e:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : source repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
 80062a0:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 80062a2:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 80062a6:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
 80062a8:	b292      	uxth	r2, r2
 80062aa:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
 80062ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80062ae:	2a00      	cmp	r2, #0
 80062b0:	da25      	bge.n	80062fe <HAL_MDMA_Init+0xd6>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 80062b2:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : destination repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
 80062b4:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 80062b6:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
 80062ba:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 80062bc:	6a18      	ldr	r0, [r3, #32]
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 80062be:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 80062c2:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 80062c6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 80062c8:	f04f 0200 	mov.w	r2, #0
 80062cc:	d019      	beq.n	8006302 <HAL_MDMA_Init+0xda>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
 80062ce:	b2c9      	uxtb	r1, r1
 80062d0:	6299      	str	r1, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
 80062d2:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
 80062d4:	2000      	movs	r0, #0
  hmdma->State = HAL_MDMA_STATE_READY;
 80062d6:	2301      	movs	r3, #1
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 80062d8:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 80062da:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
 80062dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
 80062e0:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
 80062e4:	bd38      	pop	{r3, r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 80062e6:	f7fe fed3 	bl	8005090 <HAL_GetTick>
 80062ea:	1b40      	subs	r0, r0, r5
 80062ec:	2805      	cmp	r0, #5
 80062ee:	d9ad      	bls.n	800624c <HAL_MDMA_Init+0x24>
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
 80062f0:	2340      	movs	r3, #64	; 0x40
 80062f2:	66a3      	str	r3, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
 80062f4:	2303      	movs	r3, #3
 80062f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_ERROR;
 80062fa:	2001      	movs	r0, #1
 80062fc:	e7f2      	b.n	80062e4 <HAL_MDMA_Init+0xbc>
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 80062fe:	6a18      	ldr	r0, [r3, #32]
 8006300:	e7dd      	b.n	80062be <HAL_MDMA_Init+0x96>
    hmdma->Instance->CTBR = 0;
 8006302:	629a      	str	r2, [r3, #40]	; 0x28
 8006304:	e7e5      	b.n	80062d2 <HAL_MDMA_Init+0xaa>

08006306 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
 8006306:	b1d8      	cbz	r0, 8006340 <HAL_MDMA_DeInit+0x3a>
  __HAL_MDMA_DISABLE(hmdma);
 8006308:	6802      	ldr	r2, [r0, #0]
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 800630a:	211f      	movs	r1, #31
  __HAL_MDMA_DISABLE(hmdma);
 800630c:	68d3      	ldr	r3, [r2, #12]
 800630e:	f023 0301 	bic.w	r3, r3, #1
 8006312:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CCR  = 0;
 8006314:	2300      	movs	r3, #0
 8006316:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
 8006318:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
 800631a:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
 800631c:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
 800631e:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
 8006320:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
 8006322:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
 8006324:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
 8006326:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
 8006328:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 800632a:	6051      	str	r1, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 800632c:	6683      	str	r3, [r0, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 800632e:	6643      	str	r3, [r0, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_RESET;
 8006330:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
 8006334:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  hmdma->LastLinkedListNodeAddress   = 0;
 8006338:	e9c0 3317 	strd	r3, r3, [r0, #92]	; 0x5c
  return HAL_OK;
 800633c:	4618      	mov	r0, r3
 800633e:	4770      	bx	lr
    return HAL_ERROR;
 8006340:	2001      	movs	r0, #1
}
 8006342:	4770      	bx	lr

08006344 <HAL_MDMA_Abort>:
{
 8006344:	b538      	push	{r3, r4, r5, lr}
 8006346:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8006348:	f7fe fea2 	bl	8005090 <HAL_GetTick>
 800634c:	4605      	mov	r5, r0
  if(hmdma == NULL)
 800634e:	b144      	cbz	r4, 8006362 <HAL_MDMA_Abort+0x1e>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
 8006350:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006354:	2b02      	cmp	r3, #2
 8006356:	d006      	beq.n	8006366 <HAL_MDMA_Abort+0x22>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 8006358:	2380      	movs	r3, #128	; 0x80
 800635a:	66a3      	str	r3, [r4, #104]	; 0x68
    __HAL_UNLOCK(hmdma);
 800635c:	2300      	movs	r3, #0
 800635e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_ERROR;
 8006362:	2001      	movs	r0, #1
 8006364:	e015      	b.n	8006392 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
 8006366:	6823      	ldr	r3, [r4, #0]
 8006368:	68da      	ldr	r2, [r3, #12]
 800636a:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
 800636e:	60da      	str	r2, [r3, #12]
    __HAL_MDMA_DISABLE(hmdma);
 8006370:	68da      	ldr	r2, [r3, #12]
 8006372:	f022 0201 	bic.w	r2, r2, #1
 8006376:	60da      	str	r2, [r3, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8006378:	6822      	ldr	r2, [r4, #0]
 800637a:	68d3      	ldr	r3, [r2, #12]
 800637c:	f013 0301 	ands.w	r3, r3, #1
 8006380:	d108      	bne.n	8006394 <HAL_MDMA_Abort+0x50>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8006382:	211f      	movs	r1, #31
  return HAL_OK;
 8006384:	4618      	mov	r0, r3
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8006386:	6051      	str	r1, [r2, #4]
    hmdma->State = HAL_MDMA_STATE_READY;
 8006388:	2201      	movs	r2, #1
    __HAL_UNLOCK(hmdma);
 800638a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
 800638e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
}
 8006392:	bd38      	pop	{r3, r4, r5, pc}
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 8006394:	f7fe fe7c 	bl	8005090 <HAL_GetTick>
 8006398:	1b40      	subs	r0, r0, r5
 800639a:	2805      	cmp	r0, #5
 800639c:	d9ec      	bls.n	8006378 <HAL_MDMA_Abort+0x34>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
 800639e:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80063a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80063a4:	66a3      	str	r3, [r4, #104]	; 0x68
        __HAL_UNLOCK(hmdma);
 80063a6:	2300      	movs	r3, #0
 80063a8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_ERROR;
 80063ac:	2303      	movs	r3, #3
 80063ae:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        return HAL_ERROR;
 80063b2:	e7d6      	b.n	8006362 <HAL_MDMA_Abort+0x1e>

080063b4 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 80063b4:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 80063b6:	4c10      	ldr	r4, [pc, #64]	; (80063f8 <HAL_PWREx_ConfigSupply+0x44>)
 80063b8:	68e3      	ldr	r3, [r4, #12]
 80063ba:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 80063be:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 80063c0:	d105      	bne.n	80063ce <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 80063c2:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 80063c6:	1a18      	subs	r0, r3, r0
 80063c8:	bf18      	it	ne
 80063ca:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
 80063cc:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 80063ce:	f023 0307 	bic.w	r3, r3, #7
 80063d2:	4318      	orrs	r0, r3
 80063d4:	60e0      	str	r0, [r4, #12]
  tickstart = HAL_GetTick ();
 80063d6:	f7fe fe5b 	bl	8005090 <HAL_GetTick>
 80063da:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 80063dc:	6863      	ldr	r3, [r4, #4]
 80063de:	049b      	lsls	r3, r3, #18
 80063e0:	d501      	bpl.n	80063e6 <HAL_PWREx_ConfigSupply+0x32>
  return HAL_OK;
 80063e2:	2000      	movs	r0, #0
 80063e4:	e7f2      	b.n	80063cc <HAL_PWREx_ConfigSupply+0x18>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 80063e6:	f7fe fe53 	bl	8005090 <HAL_GetTick>
 80063ea:	1b40      	subs	r0, r0, r5
 80063ec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80063f0:	d9f4      	bls.n	80063dc <HAL_PWREx_ConfigSupply+0x28>
      return HAL_ERROR;
 80063f2:	2001      	movs	r0, #1
 80063f4:	e7ea      	b.n	80063cc <HAL_PWREx_ConfigSupply+0x18>
 80063f6:	bf00      	nop
 80063f8:	58024800 	.word	0x58024800

080063fc <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 80063fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8006400:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8006402:	b136      	cbz	r6, 8006412 <QSPI_Config+0x16>
 8006404:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
 8006408:	d003      	beq.n	8006412 <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800640a:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 800640c:	6804      	ldr	r4, [r0, #0]
 800640e:	3b01      	subs	r3, #1
 8006410:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006412:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006416:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800641a:	f1ba 0f00 	cmp.w	sl, #0
 800641e:	d04c      	beq.n	80064ba <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006420:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8006422:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006424:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 8006428:	ea4a 0406 	orr.w	r4, sl, r6
 800642c:	680b      	ldr	r3, [r1, #0]
 800642e:	f8d1 8034 	ldr.w	r8, [r1, #52]	; 0x34
 8006432:	ea44 0a02 	orr.w	sl, r4, r2
 8006436:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	; 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800643a:	f1be 0f00 	cmp.w	lr, #0
 800643e:	d024      	beq.n	800648a <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006440:	688e      	ldr	r6, [r1, #8]
 8006442:	ea4a 040e 	orr.w	r4, sl, lr
 8006446:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006448:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800644a:	b19f      	cbz	r7, 8006474 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800644c:	433b      	orrs	r3, r7
 800644e:	4303      	orrs	r3, r0
 8006450:	68c8      	ldr	r0, [r1, #12]
 8006452:	ea43 0309 	orr.w	r3, r3, r9
 8006456:	ea43 0308 	orr.w	r3, r3, r8
 800645a:	4333      	orrs	r3, r6
 800645c:	4303      	orrs	r3, r0
 800645e:	ea43 030c 	orr.w	r3, r3, ip
 8006462:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006464:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006468:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800646a:	d001      	beq.n	8006470 <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800646c:	684b      	ldr	r3, [r1, #4]
 800646e:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8006470:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006474:	4303      	orrs	r3, r0
 8006476:	ea43 0309 	orr.w	r3, r3, r9
 800647a:	ea43 0308 	orr.w	r3, r3, r8
 800647e:	4333      	orrs	r3, r6
 8006480:	ea43 030c 	orr.w	r3, r3, ip
 8006484:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006486:	616b      	str	r3, [r5, #20]
 8006488:	e7f2      	b.n	8006470 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800648a:	b167      	cbz	r7, 80064a6 <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800648c:	433b      	orrs	r3, r7
 800648e:	4303      	orrs	r3, r0
 8006490:	68c8      	ldr	r0, [r1, #12]
 8006492:	ea43 0309 	orr.w	r3, r3, r9
 8006496:	ea43 0308 	orr.w	r3, r3, r8
 800649a:	4303      	orrs	r3, r0
 800649c:	ea43 030c 	orr.w	r3, r3, ip
 80064a0:	ea43 030a 	orr.w	r3, r3, sl
 80064a4:	e7de      	b.n	8006464 <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064a6:	4303      	orrs	r3, r0
 80064a8:	ea43 0309 	orr.w	r3, r3, r9
 80064ac:	ea43 0408 	orr.w	r4, r3, r8
 80064b0:	ea44 030c 	orr.w	r3, r4, ip
 80064b4:	ea43 030a 	orr.w	r3, r3, sl
 80064b8:	e7e5      	b.n	8006486 <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80064ba:	f1be 0f00 	cmp.w	lr, #0
 80064be:	d02c      	beq.n	800651a <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80064c0:	ea46 050e 	orr.w	r5, r6, lr
 80064c4:	688b      	ldr	r3, [r1, #8]
 80064c6:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064c8:	694e      	ldr	r6, [r1, #20]
 80064ca:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80064cc:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064ce:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80064d2:	04b6      	lsls	r6, r6, #18
 80064d4:	690b      	ldr	r3, [r1, #16]
 80064d6:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80064da:	b1a7      	cbz	r7, 8006506 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064dc:	433b      	orrs	r3, r7
 80064de:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80064e0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064e4:	ea43 0308 	orr.w	r3, r3, r8
 80064e8:	ea43 030e 	orr.w	r3, r3, lr
 80064ec:	ea43 030c 	orr.w	r3, r3, ip
 80064f0:	ea43 0300 	orr.w	r3, r3, r0
 80064f4:	ea43 0306 	orr.w	r3, r3, r6
 80064f8:	ea43 0305 	orr.w	r3, r3, r5
 80064fc:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80064fe:	d0b7      	beq.n	8006470 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006500:	684b      	ldr	r3, [r1, #4]
 8006502:	61a3      	str	r3, [r4, #24]
 8006504:	e7b4      	b.n	8006470 <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006506:	ea43 0308 	orr.w	r3, r3, r8
 800650a:	ea43 030e 	orr.w	r3, r3, lr
 800650e:	ea43 030c 	orr.w	r3, r3, ip
 8006512:	4333      	orrs	r3, r6
 8006514:	432b      	orrs	r3, r5
 8006516:	6163      	str	r3, [r4, #20]
 8006518:	e7aa      	b.n	8006470 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800651a:	b1d7      	cbz	r7, 8006552 <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800651c:	ea46 0307 	orr.w	r3, r6, r7
 8006520:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8006522:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006524:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006528:	ea43 0302 	orr.w	r3, r3, r2
 800652c:	ea43 0304 	orr.w	r3, r3, r4
 8006530:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8006532:	ea43 0304 	orr.w	r3, r3, r4
 8006536:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8006538:	ea43 0304 	orr.w	r3, r3, r4
 800653c:	68cc      	ldr	r4, [r1, #12]
 800653e:	ea43 0304 	orr.w	r3, r3, r4
 8006542:	694c      	ldr	r4, [r1, #20]
 8006544:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8006548:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800654a:	d091      	beq.n	8006470 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800654c:	684b      	ldr	r3, [r1, #4]
 800654e:	6183      	str	r3, [r0, #24]
 8006550:	e78e      	b.n	8006470 <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8006552:	2e00      	cmp	r6, #0
 8006554:	d08c      	beq.n	8006470 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006556:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8006558:	6800      	ldr	r0, [r0, #0]
 800655a:	4333      	orrs	r3, r6
 800655c:	4313      	orrs	r3, r2
 800655e:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8006560:	4313      	orrs	r3, r2
 8006562:	6b4a      	ldr	r2, [r1, #52]	; 0x34
 8006564:	4313      	orrs	r3, r2
 8006566:	694a      	ldr	r2, [r1, #20]
 8006568:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 800656c:	6143      	str	r3, [r0, #20]
}
 800656e:	e77f      	b.n	8006470 <QSPI_Config+0x74>

08006570 <QSPI_WaitFlagStateUntilTimeout>:
{
 8006570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006574:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8006578:	4604      	mov	r4, r0
 800657a:	460e      	mov	r6, r1
 800657c:	4615      	mov	r5, r2
 800657e:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006580:	6822      	ldr	r2, [r4, #0]
 8006582:	6893      	ldr	r3, [r2, #8]
 8006584:	4233      	tst	r3, r6
 8006586:	bf14      	ite	ne
 8006588:	2301      	movne	r3, #1
 800658a:	2300      	moveq	r3, #0
 800658c:	42ab      	cmp	r3, r5
 800658e:	d101      	bne.n	8006594 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8006590:	2000      	movs	r0, #0
 8006592:	e012      	b.n	80065ba <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8006594:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006598:	d0f3      	beq.n	8006582 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800659a:	f7fe fd79 	bl	8005090 <HAL_GetTick>
 800659e:	1bc0      	subs	r0, r0, r7
 80065a0:	4540      	cmp	r0, r8
 80065a2:	d802      	bhi.n	80065aa <QSPI_WaitFlagStateUntilTimeout+0x3a>
 80065a4:	f1b8 0f00 	cmp.w	r8, #0
 80065a8:	d1ea      	bne.n	8006580 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80065aa:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80065ac:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80065ae:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80065b2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80065b4:	f043 0301 	orr.w	r3, r3, #1
 80065b8:	6463      	str	r3, [r4, #68]	; 0x44
}
 80065ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080065c0 <HAL_QSPI_Init>:
{
 80065c0:	b530      	push	{r4, r5, lr}
 80065c2:	4604      	mov	r4, r0
 80065c4:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 80065c6:	f7fe fd63 	bl	8005090 <HAL_GetTick>
 80065ca:	4603      	mov	r3, r0
  if(hqspi == NULL)
 80065cc:	2c00      	cmp	r4, #0
 80065ce:	d040      	beq.n	8006652 <HAL_QSPI_Init+0x92>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80065d0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80065d4:	b93a      	cbnz	r2, 80065e6 <HAL_QSPI_Init+0x26>
 80065d6:	9003      	str	r0, [sp, #12]
    HAL_QSPI_MspInit(hqspi);
 80065d8:	4620      	mov	r0, r4
 80065da:	f7fb f9f9 	bl	80019d0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80065de:	f241 3288 	movw	r2, #5000	; 0x1388
 80065e2:	9b03      	ldr	r3, [sp, #12]
 80065e4:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80065e6:	6820      	ldr	r0, [r4, #0]
 80065e8:	68a1      	ldr	r1, [r4, #8]
 80065ea:	6802      	ldr	r2, [r0, #0]
 80065ec:	3901      	subs	r1, #1
 80065ee:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80065f2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80065f6:	2120      	movs	r1, #32
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80065f8:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80065fa:	4620      	mov	r0, r4
 80065fc:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80065fe:	9200      	str	r2, [sp, #0]
 8006600:	2200      	movs	r2, #0
 8006602:	f7ff ffb5 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8006606:	bb10      	cbnz	r0, 800664e <HAL_QSPI_Init+0x8e>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006608:	6822      	ldr	r2, [r4, #0]
 800660a:	69e5      	ldr	r5, [r4, #28]
 800660c:	68e3      	ldr	r3, [r4, #12]
 800660e:	6811      	ldr	r1, [r2, #0]
 8006610:	432b      	orrs	r3, r5
 8006612:	6a25      	ldr	r5, [r4, #32]
 8006614:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8006618:	432b      	orrs	r3, r5
 800661a:	6865      	ldr	r5, [r4, #4]
 800661c:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8006620:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8006624:	430b      	orrs	r3, r1
 8006626:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8006628:	6855      	ldr	r5, [r2, #4]
 800662a:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800662e:	430b      	orrs	r3, r1
 8006630:	6921      	ldr	r1, [r4, #16]
 8006632:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8006636:	4908      	ldr	r1, [pc, #32]	; (8006658 <HAL_QSPI_Init+0x98>)
 8006638:	4029      	ands	r1, r5
 800663a:	430b      	orrs	r3, r1
 800663c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800663e:	6813      	ldr	r3, [r2, #0]
 8006640:	f043 0301 	orr.w	r3, r3, #1
 8006644:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8006646:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006648:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800664a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800664e:	b005      	add	sp, #20
 8006650:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8006652:	2001      	movs	r0, #1
 8006654:	e7fb      	b.n	800664e <HAL_QSPI_Init+0x8e>
 8006656:	bf00      	nop
 8006658:	ffe0f8fe 	.word	0xffe0f8fe

0800665c <HAL_QSPI_DeInit>:
{
 800665c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800665e:	4604      	mov	r4, r0
 8006660:	b158      	cbz	r0, 800667a <HAL_QSPI_DeInit+0x1e>
  __HAL_QSPI_DISABLE(hqspi);
 8006662:	6802      	ldr	r2, [r0, #0]
 8006664:	6813      	ldr	r3, [r2, #0]
 8006666:	f023 0301 	bic.w	r3, r3, #1
 800666a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800666c:	f7fb fa7c 	bl	8001b68 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006670:	2000      	movs	r0, #0
 8006672:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8006674:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
}
 8006678:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800667a:	2001      	movs	r0, #1
 800667c:	e7fc      	b.n	8006678 <HAL_QSPI_DeInit+0x1c>

0800667e <HAL_QSPI_Command>:
{
 800667e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006682:	4604      	mov	r4, r0
 8006684:	b085      	sub	sp, #20
 8006686:	4617      	mov	r7, r2
 8006688:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800668a:	f7fe fd01 	bl	8005090 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800668e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8006692:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006694:	2a01      	cmp	r2, #1
 8006696:	d033      	beq.n	8006700 <HAL_QSPI_Command+0x82>
 8006698:	2201      	movs	r2, #1
 800669a:	2602      	movs	r6, #2
 800669c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80066a0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80066a4:	2a01      	cmp	r2, #1
 80066a6:	fa5f f882 	uxtb.w	r8, r2
 80066aa:	d127      	bne.n	80066fc <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80066ac:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80066ae:	9003      	str	r0, [sp, #12]
 80066b0:	2120      	movs	r1, #32
 80066b2:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80066b4:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80066b6:	9700      	str	r7, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80066b8:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80066bc:	f7ff ff58 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80066c0:	4605      	mov	r5, r0
 80066c2:	b9a0      	cbnz	r0, 80066ee <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80066c4:	4602      	mov	r2, r0
 80066c6:	4649      	mov	r1, r9
 80066c8:	4620      	mov	r0, r4
 80066ca:	f7ff fe97 	bl	80063fc <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80066ce:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 80066d2:	9b03      	ldr	r3, [sp, #12]
 80066d4:	b94a      	cbnz	r2, 80066ea <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80066d6:	4642      	mov	r2, r8
 80066d8:	4631      	mov	r1, r6
 80066da:	4620      	mov	r0, r4
 80066dc:	9700      	str	r7, [sp, #0]
 80066de:	f7ff ff47 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80066e2:	4605      	mov	r5, r0
 80066e4:	b918      	cbnz	r0, 80066ee <HAL_QSPI_Command+0x70>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80066e6:	6823      	ldr	r3, [r4, #0]
 80066e8:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80066ea:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80066ee:	2300      	movs	r3, #0
 80066f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80066f4:	4628      	mov	r0, r5
 80066f6:	b005      	add	sp, #20
 80066f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80066fc:	4635      	mov	r5, r6
 80066fe:	e7f6      	b.n	80066ee <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8006700:	2502      	movs	r5, #2
 8006702:	e7f7      	b.n	80066f4 <HAL_QSPI_Command+0x76>

08006704 <HAL_QSPI_Transmit>:
{
 8006704:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006706:	4604      	mov	r4, r0
 8006708:	b085      	sub	sp, #20
 800670a:	4616      	mov	r6, r2
 800670c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800670e:	f7fe fcbf 	bl	8005090 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006712:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8006716:	4603      	mov	r3, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8006718:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800671a:	2a01      	cmp	r2, #1
 800671c:	d049      	beq.n	80067b2 <HAL_QSPI_Transmit+0xae>
 800671e:	2201      	movs	r2, #1
 8006720:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006724:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006728:	2a01      	cmp	r2, #1
 800672a:	b2d0      	uxtb	r0, r2
 800672c:	d13f      	bne.n	80067ae <HAL_QSPI_Transmit+0xaa>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800672e:	2200      	movs	r2, #0
 8006730:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8006732:	2f00      	cmp	r7, #0
 8006734:	d036      	beq.n	80067a4 <HAL_QSPI_Transmit+0xa0>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8006736:	2212      	movs	r2, #18
 8006738:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800673c:	692a      	ldr	r2, [r5, #16]
 800673e:	3201      	adds	r2, #1
 8006740:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006742:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8006744:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006746:	3201      	adds	r2, #1
 8006748:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800674a:	696a      	ldr	r2, [r5, #20]
 800674c:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8006750:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8006752:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006754:	b98a      	cbnz	r2, 800677a <HAL_QSPI_Transmit+0x76>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006756:	2201      	movs	r2, #1
 8006758:	2102      	movs	r1, #2
 800675a:	4620      	mov	r0, r4
 800675c:	9600      	str	r6, [sp, #0]
 800675e:	f7ff ff07 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006762:	b910      	cbnz	r0, 800676a <HAL_QSPI_Transmit+0x66>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006764:	6823      	ldr	r3, [r4, #0]
 8006766:	2202      	movs	r2, #2
 8006768:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 800676a:	2301      	movs	r3, #1
 800676c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006770:	2300      	movs	r3, #0
 8006772:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006776:	b005      	add	sp, #20
 8006778:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800677a:	2201      	movs	r2, #1
 800677c:	2104      	movs	r1, #4
 800677e:	4620      	mov	r0, r4
 8006780:	9600      	str	r6, [sp, #0]
 8006782:	9303      	str	r3, [sp, #12]
 8006784:	f7ff fef4 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006788:	2800      	cmp	r0, #0
 800678a:	d1ee      	bne.n	800676a <HAL_QSPI_Transmit+0x66>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800678c:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800678e:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006790:	7812      	ldrb	r2, [r2, #0]
 8006792:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8006796:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006798:	3201      	adds	r2, #1
 800679a:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800679c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800679e:	3a01      	subs	r2, #1
 80067a0:	62e2      	str	r2, [r4, #44]	; 0x2c
 80067a2:	e7d6      	b.n	8006752 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80067a4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80067a6:	f043 0308 	orr.w	r3, r3, #8
 80067aa:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 80067ac:	e7e0      	b.n	8006770 <HAL_QSPI_Transmit+0x6c>
    status = HAL_BUSY;
 80067ae:	2002      	movs	r0, #2
 80067b0:	e7de      	b.n	8006770 <HAL_QSPI_Transmit+0x6c>
  __HAL_LOCK(hqspi);
 80067b2:	2002      	movs	r0, #2
 80067b4:	e7df      	b.n	8006776 <HAL_QSPI_Transmit+0x72>

080067b6 <HAL_QSPI_Receive>:
{
 80067b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067b8:	4604      	mov	r4, r0
 80067ba:	b085      	sub	sp, #20
 80067bc:	4616      	mov	r6, r2
 80067be:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80067c0:	f7fe fc66 	bl	8005090 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80067c4:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80067c6:	4603      	mov	r3, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80067c8:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 80067cc:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80067d0:	2a01      	cmp	r2, #1
 80067d2:	d04d      	beq.n	8006870 <HAL_QSPI_Receive+0xba>
 80067d4:	2201      	movs	r2, #1
 80067d6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80067da:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80067de:	2a01      	cmp	r2, #1
 80067e0:	b2d0      	uxtb	r0, r2
 80067e2:	d143      	bne.n	800686c <HAL_QSPI_Receive+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80067e4:	2200      	movs	r2, #0
 80067e6:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80067e8:	2f00      	cmp	r7, #0
 80067ea:	d03a      	beq.n	8006862 <HAL_QSPI_Receive+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80067ec:	2222      	movs	r2, #34	; 0x22
 80067ee:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80067f2:	692a      	ldr	r2, [r5, #16]
 80067f4:	3201      	adds	r2, #1
 80067f6:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80067f8:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80067fa:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80067fc:	3201      	adds	r2, #1
 80067fe:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006800:	6969      	ldr	r1, [r5, #20]
 8006802:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8006806:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800680a:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800680c:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8006810:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006812:	b98a      	cbnz	r2, 8006838 <HAL_QSPI_Receive+0x82>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006814:	2201      	movs	r2, #1
 8006816:	2102      	movs	r1, #2
 8006818:	4620      	mov	r0, r4
 800681a:	9600      	str	r6, [sp, #0]
 800681c:	f7ff fea8 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8006820:	b910      	cbnz	r0, 8006828 <HAL_QSPI_Receive+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006822:	6823      	ldr	r3, [r4, #0]
 8006824:	2202      	movs	r2, #2
 8006826:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006828:	2301      	movs	r3, #1
 800682a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800682e:	2300      	movs	r3, #0
 8006830:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006834:	b005      	add	sp, #20
 8006836:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006838:	2201      	movs	r2, #1
 800683a:	2106      	movs	r1, #6
 800683c:	4620      	mov	r0, r4
 800683e:	9600      	str	r6, [sp, #0]
 8006840:	9303      	str	r3, [sp, #12]
 8006842:	f7ff fe95 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006846:	2800      	cmp	r0, #0
 8006848:	d1ee      	bne.n	8006828 <HAL_QSPI_Receive+0x72>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800684a:	f895 1020 	ldrb.w	r1, [r5, #32]
 800684e:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006850:	9b03      	ldr	r3, [sp, #12]
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006852:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8006854:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006856:	3201      	adds	r2, #1
 8006858:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800685a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800685c:	3a01      	subs	r2, #1
 800685e:	63a2      	str	r2, [r4, #56]	; 0x38
 8006860:	e7d6      	b.n	8006810 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006862:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006864:	f043 0308 	orr.w	r3, r3, #8
 8006868:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800686a:	e7e0      	b.n	800682e <HAL_QSPI_Receive+0x78>
    status = HAL_BUSY;
 800686c:	2002      	movs	r0, #2
 800686e:	e7de      	b.n	800682e <HAL_QSPI_Receive+0x78>
  __HAL_LOCK(hqspi);
 8006870:	2002      	movs	r0, #2
 8006872:	e7df      	b.n	8006834 <HAL_QSPI_Receive+0x7e>

08006874 <HAL_QSPI_AutoPolling>:
{
 8006874:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006878:	4604      	mov	r4, r0
 800687a:	4615      	mov	r5, r2
 800687c:	461e      	mov	r6, r3
 800687e:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8006880:	f7fe fc06 	bl	8005090 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006884:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8006888:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800688a:	2a01      	cmp	r2, #1
 800688c:	d040      	beq.n	8006910 <HAL_QSPI_AutoPolling+0x9c>
 800688e:	2201      	movs	r2, #1
 8006890:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006894:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006898:	2a01      	cmp	r2, #1
 800689a:	b2d7      	uxtb	r7, r2
 800689c:	d136      	bne.n	800690c <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800689e:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80068a0:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80068a2:	9003      	str	r0, [sp, #12]
 80068a4:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80068a6:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80068a8:	9600      	str	r6, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80068aa:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80068ae:	2120      	movs	r1, #32
 80068b0:	f7ff fe5e 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80068b4:	bb20      	cbnz	r0, 8006900 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80068b6:	6821      	ldr	r1, [r4, #0]
 80068b8:	682a      	ldr	r2, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80068ba:	6928      	ldr	r0, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80068bc:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 80068be:	686a      	ldr	r2, [r5, #4]
 80068c0:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 80068c2:	68aa      	ldr	r2, [r5, #8]
 80068c4:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80068c6:	680a      	ldr	r2, [r1, #0]
 80068c8:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80068cc:	4302      	orrs	r2, r0
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80068ce:	4620      	mov	r0, r4
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80068d0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80068d4:	600a      	str	r2, [r1, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80068d6:	4641      	mov	r1, r8
      cmd->NbData = cfg->StatusBytesSize;
 80068d8:	68ea      	ldr	r2, [r5, #12]
 80068da:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80068de:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80068e2:	f7ff fd8b 	bl	80063fc <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 80068e6:	9b03      	ldr	r3, [sp, #12]
 80068e8:	463a      	mov	r2, r7
 80068ea:	2108      	movs	r1, #8
 80068ec:	4620      	mov	r0, r4
 80068ee:	9600      	str	r6, [sp, #0]
 80068f0:	f7ff fe3e 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80068f4:	b920      	cbnz	r0, 8006900 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 80068f6:	6823      	ldr	r3, [r4, #0]
 80068f8:	2208      	movs	r2, #8
 80068fa:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80068fc:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006900:	2300      	movs	r3, #0
 8006902:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006906:	b004      	add	sp, #16
 8006908:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800690c:	2002      	movs	r0, #2
 800690e:	e7f7      	b.n	8006900 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8006910:	2002      	movs	r0, #2
 8006912:	e7f8      	b.n	8006906 <HAL_QSPI_AutoPolling+0x92>

08006914 <HAL_QSPI_MemoryMapped>:
{
 8006914:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006916:	4604      	mov	r4, r0
 8006918:	4616      	mov	r6, r2
 800691a:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800691c:	f7fe fbb8 	bl	8005090 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006920:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8006924:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006926:	2a01      	cmp	r2, #1
 8006928:	d033      	beq.n	8006992 <HAL_QSPI_MemoryMapped+0x7e>
 800692a:	2201      	movs	r2, #1
 800692c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006930:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006934:	2a01      	cmp	r2, #1
 8006936:	d12a      	bne.n	800698e <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006938:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800693a:	2182      	movs	r1, #130	; 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800693c:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800693e:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006940:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006944:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8006946:	9100      	str	r1, [sp, #0]
 8006948:	2120      	movs	r1, #32
 800694a:	f7ff fe11 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800694e:	4605      	mov	r5, r0
 8006950:	b9b8      	cbnz	r0, 8006982 <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8006952:	6823      	ldr	r3, [r4, #0]
 8006954:	6872      	ldr	r2, [r6, #4]
 8006956:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006958:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800695a:	f020 0008 	bic.w	r0, r0, #8
 800695e:	ea40 0002 	orr.w	r0, r0, r2
 8006962:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006964:	d107      	bne.n	8006976 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8006966:	6832      	ldr	r2, [r6, #0]
 8006968:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800696a:	2210      	movs	r2, #16
 800696c:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800696e:	681a      	ldr	r2, [r3, #0]
 8006970:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8006974:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8006976:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800697a:	4639      	mov	r1, r7
 800697c:	4620      	mov	r0, r4
 800697e:	f7ff fd3d 	bl	80063fc <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8006982:	2300      	movs	r3, #0
 8006984:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006988:	4628      	mov	r0, r5
 800698a:	b003      	add	sp, #12
 800698c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800698e:	2502      	movs	r5, #2
 8006990:	e7f7      	b.n	8006982 <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 8006992:	2502      	movs	r5, #2
 8006994:	e7f8      	b.n	8006988 <HAL_QSPI_MemoryMapped+0x74>

08006996 <HAL_QSPI_Abort>:
{
 8006996:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006998:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800699a:	f7fe fb79 	bl	8005090 <HAL_GetTick>
 800699e:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 80069a0:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 80069a4:	f010 0002 	ands.w	r0, r0, #2
 80069a8:	d03a      	beq.n	8006a20 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 80069aa:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 80069ac:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 80069ae:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 80069b2:	680a      	ldr	r2, [r1, #0]
 80069b4:	f012 0204 	ands.w	r2, r2, #4
 80069b8:	d034      	beq.n	8006a24 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80069ba:	680a      	ldr	r2, [r1, #0]
      status = HAL_MDMA_Abort(hqspi->hmdma);
 80069bc:	6be0      	ldr	r0, [r4, #60]	; 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80069be:	f022 0204 	bic.w	r2, r2, #4
 80069c2:	9303      	str	r3, [sp, #12]
 80069c4:	600a      	str	r2, [r1, #0]
      status = HAL_MDMA_Abort(hqspi->hmdma);
 80069c6:	f7ff fcbd 	bl	8006344 <HAL_MDMA_Abort>
      if(status != HAL_OK)
 80069ca:	9b03      	ldr	r3, [sp, #12]
 80069cc:	b118      	cbz	r0, 80069d6 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 80069ce:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80069d0:	f042 0204 	orr.w	r2, r2, #4
 80069d4:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 80069d6:	6822      	ldr	r2, [r4, #0]
 80069d8:	6891      	ldr	r1, [r2, #8]
 80069da:	0689      	lsls	r1, r1, #26
 80069dc:	d51d      	bpl.n	8006a1a <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80069de:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80069e0:	4620      	mov	r0, r4
 80069e2:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80069e4:	f041 0102 	orr.w	r1, r1, #2
 80069e8:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80069ea:	2102      	movs	r1, #2
 80069ec:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80069ee:	9200      	str	r2, [sp, #0]
 80069f0:	2201      	movs	r2, #1
 80069f2:	f7ff fdbd 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80069f6:	9b03      	ldr	r3, [sp, #12]
 80069f8:	b990      	cbnz	r0, 8006a20 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80069fa:	6822      	ldr	r2, [r4, #0]
 80069fc:	2102      	movs	r1, #2
 80069fe:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006a00:	2120      	movs	r1, #32
 8006a02:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006a04:	9200      	str	r2, [sp, #0]
 8006a06:	4602      	mov	r2, r0
 8006a08:	4620      	mov	r0, r4
 8006a0a:	f7ff fdb1 	bl	8006570 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006a0e:	b938      	cbnz	r0, 8006a20 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8006a10:	6822      	ldr	r2, [r4, #0]
 8006a12:	6953      	ldr	r3, [r2, #20]
 8006a14:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006a18:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006a1a:	2301      	movs	r3, #1
 8006a1c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8006a20:	b004      	add	sp, #16
 8006a22:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8006a24:	4610      	mov	r0, r2
 8006a26:	e7d6      	b.n	80069d6 <HAL_QSPI_Abort+0x40>

08006a28 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006a28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006a2a:	4604      	mov	r4, r0
 8006a2c:	b908      	cbnz	r0, 8006a32 <HAL_RCC_OscConfig+0xa>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
      {
        return HAL_ERROR;
 8006a2e:	2001      	movs	r0, #1
 8006a30:	e08c      	b.n	8006b4c <HAL_RCC_OscConfig+0x124>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006a32:	6803      	ldr	r3, [r0, #0]
 8006a34:	07d8      	lsls	r0, r3, #31
 8006a36:	d45e      	bmi.n	8006af6 <HAL_RCC_OscConfig+0xce>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006a38:	6823      	ldr	r3, [r4, #0]
 8006a3a:	0799      	lsls	r1, r3, #30
 8006a3c:	f100 80ac 	bmi.w	8006b98 <HAL_RCC_OscConfig+0x170>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006a40:	6823      	ldr	r3, [r4, #0]
 8006a42:	06da      	lsls	r2, r3, #27
 8006a44:	d527      	bpl.n	8006a96 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006a46:	4a9c      	ldr	r2, [pc, #624]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006a48:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006a4a:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006a4c:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8006a50:	2b08      	cmp	r3, #8
 8006a52:	d007      	beq.n	8006a64 <HAL_RCC_OscConfig+0x3c>
 8006a54:	2b18      	cmp	r3, #24
 8006a56:	f040 8103 	bne.w	8006c60 <HAL_RCC_OscConfig+0x238>
 8006a5a:	f001 0303 	and.w	r3, r1, #3
 8006a5e:	2b01      	cmp	r3, #1
 8006a60:	f040 80fe 	bne.w	8006c60 <HAL_RCC_OscConfig+0x238>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006a64:	6813      	ldr	r3, [r2, #0]
 8006a66:	05db      	lsls	r3, r3, #23
 8006a68:	d502      	bpl.n	8006a70 <HAL_RCC_OscConfig+0x48>
 8006a6a:	69e3      	ldr	r3, [r4, #28]
 8006a6c:	2b80      	cmp	r3, #128	; 0x80
 8006a6e:	d1de      	bne.n	8006a2e <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006a70:	f7fe fb26 	bl	80050c0 <HAL_GetREVID>
 8006a74:	f241 0303 	movw	r3, #4099	; 0x1003
 8006a78:	6a21      	ldr	r1, [r4, #32]
 8006a7a:	4298      	cmp	r0, r3
 8006a7c:	4b8e      	ldr	r3, [pc, #568]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006a7e:	f200 80e8 	bhi.w	8006c52 <HAL_RCC_OscConfig+0x22a>
 8006a82:	685a      	ldr	r2, [r3, #4]
 8006a84:	2920      	cmp	r1, #32
 8006a86:	f022 42f8 	bic.w	r2, r2, #2080374784	; 0x7c000000
 8006a8a:	bf0c      	ite	eq
 8006a8c:	f042 4280 	orreq.w	r2, r2, #1073741824	; 0x40000000
 8006a90:	ea42 6281 	orrne.w	r2, r2, r1, lsl #26
 8006a94:	605a      	str	r2, [r3, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006a96:	6823      	ldr	r3, [r4, #0]
 8006a98:	0719      	lsls	r1, r3, #28
 8006a9a:	f100 8122 	bmi.w	8006ce2 <HAL_RCC_OscConfig+0x2ba>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8006a9e:	6823      	ldr	r3, [r4, #0]
 8006aa0:	069a      	lsls	r2, r3, #26
 8006aa2:	f100 8143 	bmi.w	8006d2c <HAL_RCC_OscConfig+0x304>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006aa6:	6823      	ldr	r3, [r4, #0]
 8006aa8:	075d      	lsls	r5, r3, #29
 8006aaa:	d51e      	bpl.n	8006aea <HAL_RCC_OscConfig+0xc2>
    PWR->CR1 |= PWR_CR1_DBP;
 8006aac:	4d83      	ldr	r5, [pc, #524]	; (8006cbc <HAL_RCC_OscConfig+0x294>)
 8006aae:	682b      	ldr	r3, [r5, #0]
 8006ab0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006ab4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006ab6:	f7fe faeb 	bl	8005090 <HAL_GetTick>
 8006aba:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8006abc:	682b      	ldr	r3, [r5, #0]
 8006abe:	05da      	lsls	r2, r3, #23
 8006ac0:	f140 8159 	bpl.w	8006d76 <HAL_RCC_OscConfig+0x34e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006ac4:	68a3      	ldr	r3, [r4, #8]
 8006ac6:	4d7c      	ldr	r5, [pc, #496]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006ac8:	2b01      	cmp	r3, #1
 8006aca:	f040 815b 	bne.w	8006d84 <HAL_RCC_OscConfig+0x35c>
 8006ace:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006ad0:	f043 0301 	orr.w	r3, r3, #1
 8006ad4:	672b      	str	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006ad6:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006ada:	f7fe fad9 	bl	8005090 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006ade:	4e76      	ldr	r6, [pc, #472]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 8006ae0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006ae2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006ae4:	079b      	lsls	r3, r3, #30
 8006ae6:	f140 8173 	bpl.w	8006dd0 <HAL_RCC_OscConfig+0x3a8>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006aea:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006aec:	2800      	cmp	r0, #0
 8006aee:	f040 8176 	bne.w	8006dde <HAL_RCC_OscConfig+0x3b6>
          __HAL_RCC_PLLFRACN_ENABLE();
        }
      }
    }
  }
  return HAL_OK;
 8006af2:	2000      	movs	r0, #0
 8006af4:	e02a      	b.n	8006b4c <HAL_RCC_OscConfig+0x124>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006af6:	4a70      	ldr	r2, [pc, #448]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006af8:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006afa:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006afc:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8006b00:	2b10      	cmp	r3, #16
 8006b02:	d005      	beq.n	8006b10 <HAL_RCC_OscConfig+0xe8>
 8006b04:	2b18      	cmp	r3, #24
 8006b06:	d10a      	bne.n	8006b1e <HAL_RCC_OscConfig+0xf6>
 8006b08:	f001 0303 	and.w	r3, r1, #3
 8006b0c:	2b02      	cmp	r3, #2
 8006b0e:	d106      	bne.n	8006b1e <HAL_RCC_OscConfig+0xf6>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006b10:	6813      	ldr	r3, [r2, #0]
 8006b12:	039a      	lsls	r2, r3, #14
 8006b14:	d590      	bpl.n	8006a38 <HAL_RCC_OscConfig+0x10>
 8006b16:	6863      	ldr	r3, [r4, #4]
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d18d      	bne.n	8006a38 <HAL_RCC_OscConfig+0x10>
 8006b1c:	e787      	b.n	8006a2e <HAL_RCC_OscConfig+0x6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006b1e:	6863      	ldr	r3, [r4, #4]
 8006b20:	4d65      	ldr	r5, [pc, #404]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006b22:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006b26:	d112      	bne.n	8006b4e <HAL_RCC_OscConfig+0x126>
 8006b28:	682b      	ldr	r3, [r5, #0]
 8006b2a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006b2e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006b30:	f7fe faae 	bl	8005090 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006b34:	4e60      	ldr	r6, [pc, #384]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 8006b36:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006b38:	6833      	ldr	r3, [r6, #0]
 8006b3a:	039b      	lsls	r3, r3, #14
 8006b3c:	f53f af7c 	bmi.w	8006a38 <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006b40:	f7fe faa6 	bl	8005090 <HAL_GetTick>
 8006b44:	1b40      	subs	r0, r0, r5
 8006b46:	2864      	cmp	r0, #100	; 0x64
 8006b48:	d9f6      	bls.n	8006b38 <HAL_RCC_OscConfig+0x110>
            return HAL_TIMEOUT;
 8006b4a:	2003      	movs	r0, #3
}
 8006b4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006b4e:	b9a3      	cbnz	r3, 8006b7a <HAL_RCC_OscConfig+0x152>
 8006b50:	682b      	ldr	r3, [r5, #0]
 8006b52:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006b56:	602b      	str	r3, [r5, #0]
 8006b58:	682b      	ldr	r3, [r5, #0]
 8006b5a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006b5e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006b60:	f7fe fa96 	bl	8005090 <HAL_GetTick>
 8006b64:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006b66:	682b      	ldr	r3, [r5, #0]
 8006b68:	039f      	lsls	r7, r3, #14
 8006b6a:	f57f af65 	bpl.w	8006a38 <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006b6e:	f7fe fa8f 	bl	8005090 <HAL_GetTick>
 8006b72:	1b80      	subs	r0, r0, r6
 8006b74:	2864      	cmp	r0, #100	; 0x64
 8006b76:	d9f6      	bls.n	8006b66 <HAL_RCC_OscConfig+0x13e>
 8006b78:	e7e7      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006b7a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006b7e:	682b      	ldr	r3, [r5, #0]
 8006b80:	d103      	bne.n	8006b8a <HAL_RCC_OscConfig+0x162>
 8006b82:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006b86:	602b      	str	r3, [r5, #0]
 8006b88:	e7ce      	b.n	8006b28 <HAL_RCC_OscConfig+0x100>
 8006b8a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006b8e:	602b      	str	r3, [r5, #0]
 8006b90:	682b      	ldr	r3, [r5, #0]
 8006b92:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006b96:	e7ca      	b.n	8006b2e <HAL_RCC_OscConfig+0x106>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006b98:	4947      	ldr	r1, [pc, #284]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006b9a:	68e2      	ldr	r2, [r4, #12]
 8006b9c:	690b      	ldr	r3, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006b9e:	6a88      	ldr	r0, [r1, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8006ba0:	f013 0338 	ands.w	r3, r3, #56	; 0x38
 8006ba4:	d003      	beq.n	8006bae <HAL_RCC_OscConfig+0x186>
 8006ba6:	2b18      	cmp	r3, #24
 8006ba8:	d12b      	bne.n	8006c02 <HAL_RCC_OscConfig+0x1da>
 8006baa:	0780      	lsls	r0, r0, #30
 8006bac:	d129      	bne.n	8006c02 <HAL_RCC_OscConfig+0x1da>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006bae:	680b      	ldr	r3, [r1, #0]
 8006bb0:	075b      	lsls	r3, r3, #29
 8006bb2:	d502      	bpl.n	8006bba <HAL_RCC_OscConfig+0x192>
 8006bb4:	2a00      	cmp	r2, #0
 8006bb6:	f43f af3a 	beq.w	8006a2e <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006bba:	4d3f      	ldr	r5, [pc, #252]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006bbc:	682b      	ldr	r3, [r5, #0]
 8006bbe:	f023 0319 	bic.w	r3, r3, #25
 8006bc2:	4313      	orrs	r3, r2
 8006bc4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006bc6:	f7fe fa63 	bl	8005090 <HAL_GetTick>
 8006bca:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006bcc:	682b      	ldr	r3, [r5, #0]
 8006bce:	075f      	lsls	r7, r3, #29
 8006bd0:	d511      	bpl.n	8006bf6 <HAL_RCC_OscConfig+0x1ce>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006bd2:	f7fe fa75 	bl	80050c0 <HAL_GetREVID>
 8006bd6:	f241 0303 	movw	r3, #4099	; 0x1003
 8006bda:	6922      	ldr	r2, [r4, #16]
 8006bdc:	4298      	cmp	r0, r3
 8006bde:	686b      	ldr	r3, [r5, #4]
 8006be0:	d822      	bhi.n	8006c28 <HAL_RCC_OscConfig+0x200>
 8006be2:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8006be6:	2a40      	cmp	r2, #64	; 0x40
 8006be8:	bf0c      	ite	eq
 8006bea:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
 8006bee:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
 8006bf2:	606b      	str	r3, [r5, #4]
 8006bf4:	e724      	b.n	8006a40 <HAL_RCC_OscConfig+0x18>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006bf6:	f7fe fa4b 	bl	8005090 <HAL_GetTick>
 8006bfa:	1b80      	subs	r0, r0, r6
 8006bfc:	2802      	cmp	r0, #2
 8006bfe:	d9e5      	bls.n	8006bcc <HAL_RCC_OscConfig+0x1a4>
 8006c00:	e7a3      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006c02:	4d2d      	ldr	r5, [pc, #180]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006c04:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006c06:	b1a2      	cbz	r2, 8006c32 <HAL_RCC_OscConfig+0x20a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006c08:	f023 0319 	bic.w	r3, r3, #25
 8006c0c:	4313      	orrs	r3, r2
 8006c0e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c10:	f7fe fa3e 	bl	8005090 <HAL_GetTick>
 8006c14:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006c16:	682b      	ldr	r3, [r5, #0]
 8006c18:	0758      	lsls	r0, r3, #29
 8006c1a:	d4da      	bmi.n	8006bd2 <HAL_RCC_OscConfig+0x1aa>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006c1c:	f7fe fa38 	bl	8005090 <HAL_GetTick>
 8006c20:	1b80      	subs	r0, r0, r6
 8006c22:	2802      	cmp	r0, #2
 8006c24:	d9f7      	bls.n	8006c16 <HAL_RCC_OscConfig+0x1ee>
 8006c26:	e790      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006c28:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8006c2c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006c30:	e7df      	b.n	8006bf2 <HAL_RCC_OscConfig+0x1ca>
        __HAL_RCC_HSI_DISABLE();
 8006c32:	f023 0301 	bic.w	r3, r3, #1
 8006c36:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c38:	f7fe fa2a 	bl	8005090 <HAL_GetTick>
 8006c3c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006c3e:	682b      	ldr	r3, [r5, #0]
 8006c40:	0759      	lsls	r1, r3, #29
 8006c42:	f57f aefd 	bpl.w	8006a40 <HAL_RCC_OscConfig+0x18>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006c46:	f7fe fa23 	bl	8005090 <HAL_GetTick>
 8006c4a:	1b80      	subs	r0, r0, r6
 8006c4c:	2802      	cmp	r0, #2
 8006c4e:	d9f6      	bls.n	8006c3e <HAL_RCC_OscConfig+0x216>
 8006c50:	e77b      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006c52:	68da      	ldr	r2, [r3, #12]
 8006c54:	f022 527c 	bic.w	r2, r2, #1056964608	; 0x3f000000
 8006c58:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8006c5c:	60da      	str	r2, [r3, #12]
 8006c5e:	e71a      	b.n	8006a96 <HAL_RCC_OscConfig+0x6e>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8006c60:	69e3      	ldr	r3, [r4, #28]
 8006c62:	4d15      	ldr	r5, [pc, #84]	; (8006cb8 <HAL_RCC_OscConfig+0x290>)
 8006c64:	b363      	cbz	r3, 8006cc0 <HAL_RCC_OscConfig+0x298>
        __HAL_RCC_CSI_ENABLE();
 8006c66:	682b      	ldr	r3, [r5, #0]
 8006c68:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006c6c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c6e:	f7fe fa0f 	bl	8005090 <HAL_GetTick>
 8006c72:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006c74:	682b      	ldr	r3, [r5, #0]
 8006c76:	05df      	lsls	r7, r3, #23
 8006c78:	d511      	bpl.n	8006c9e <HAL_RCC_OscConfig+0x276>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006c7a:	f7fe fa21 	bl	80050c0 <HAL_GetREVID>
 8006c7e:	f241 0303 	movw	r3, #4099	; 0x1003
 8006c82:	6a22      	ldr	r2, [r4, #32]
 8006c84:	4298      	cmp	r0, r3
 8006c86:	d810      	bhi.n	8006caa <HAL_RCC_OscConfig+0x282>
 8006c88:	686b      	ldr	r3, [r5, #4]
 8006c8a:	2a20      	cmp	r2, #32
 8006c8c:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8006c90:	bf0c      	ite	eq
 8006c92:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
 8006c96:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
 8006c9a:	606b      	str	r3, [r5, #4]
 8006c9c:	e6fb      	b.n	8006a96 <HAL_RCC_OscConfig+0x6e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006c9e:	f7fe f9f7 	bl	8005090 <HAL_GetTick>
 8006ca2:	1b80      	subs	r0, r0, r6
 8006ca4:	2802      	cmp	r0, #2
 8006ca6:	d9e5      	bls.n	8006c74 <HAL_RCC_OscConfig+0x24c>
 8006ca8:	e74f      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006caa:	68eb      	ldr	r3, [r5, #12]
 8006cac:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8006cb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006cb4:	60eb      	str	r3, [r5, #12]
 8006cb6:	e6ee      	b.n	8006a96 <HAL_RCC_OscConfig+0x6e>
 8006cb8:	58024400 	.word	0x58024400
 8006cbc:	58024800 	.word	0x58024800
        __HAL_RCC_CSI_DISABLE();
 8006cc0:	682b      	ldr	r3, [r5, #0]
 8006cc2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006cc6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006cc8:	f7fe f9e2 	bl	8005090 <HAL_GetTick>
 8006ccc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8006cce:	682b      	ldr	r3, [r5, #0]
 8006cd0:	05d8      	lsls	r0, r3, #23
 8006cd2:	f57f aee0 	bpl.w	8006a96 <HAL_RCC_OscConfig+0x6e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006cd6:	f7fe f9db 	bl	8005090 <HAL_GetTick>
 8006cda:	1b80      	subs	r0, r0, r6
 8006cdc:	2802      	cmp	r0, #2
 8006cde:	d9f6      	bls.n	8006cce <HAL_RCC_OscConfig+0x2a6>
 8006ce0:	e733      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8006ce2:	6963      	ldr	r3, [r4, #20]
 8006ce4:	4da5      	ldr	r5, [pc, #660]	; (8006f7c <HAL_RCC_OscConfig+0x554>)
 8006ce6:	b183      	cbz	r3, 8006d0a <HAL_RCC_OscConfig+0x2e2>
      __HAL_RCC_LSI_ENABLE();
 8006ce8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006cea:	f043 0301 	orr.w	r3, r3, #1
 8006cee:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006cf0:	f7fe f9ce 	bl	8005090 <HAL_GetTick>
 8006cf4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8006cf6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006cf8:	079b      	lsls	r3, r3, #30
 8006cfa:	f53f aed0 	bmi.w	8006a9e <HAL_RCC_OscConfig+0x76>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006cfe:	f7fe f9c7 	bl	8005090 <HAL_GetTick>
 8006d02:	1b80      	subs	r0, r0, r6
 8006d04:	2802      	cmp	r0, #2
 8006d06:	d9f6      	bls.n	8006cf6 <HAL_RCC_OscConfig+0x2ce>
 8006d08:	e71f      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_LSI_DISABLE();
 8006d0a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006d0c:	f023 0301 	bic.w	r3, r3, #1
 8006d10:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006d12:	f7fe f9bd 	bl	8005090 <HAL_GetTick>
 8006d16:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006d18:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006d1a:	079f      	lsls	r7, r3, #30
 8006d1c:	f57f aebf 	bpl.w	8006a9e <HAL_RCC_OscConfig+0x76>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006d20:	f7fe f9b6 	bl	8005090 <HAL_GetTick>
 8006d24:	1b80      	subs	r0, r0, r6
 8006d26:	2802      	cmp	r0, #2
 8006d28:	d9f6      	bls.n	8006d18 <HAL_RCC_OscConfig+0x2f0>
 8006d2a:	e70e      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 8006d2c:	69a3      	ldr	r3, [r4, #24]
 8006d2e:	4d93      	ldr	r5, [pc, #588]	; (8006f7c <HAL_RCC_OscConfig+0x554>)
 8006d30:	b183      	cbz	r3, 8006d54 <HAL_RCC_OscConfig+0x32c>
      __HAL_RCC_HSI48_ENABLE();
 8006d32:	682b      	ldr	r3, [r5, #0]
 8006d34:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006d38:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006d3a:	f7fe f9a9 	bl	8005090 <HAL_GetTick>
 8006d3e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8006d40:	682b      	ldr	r3, [r5, #0]
 8006d42:	0498      	lsls	r0, r3, #18
 8006d44:	f53f aeaf 	bmi.w	8006aa6 <HAL_RCC_OscConfig+0x7e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006d48:	f7fe f9a2 	bl	8005090 <HAL_GetTick>
 8006d4c:	1b80      	subs	r0, r0, r6
 8006d4e:	2802      	cmp	r0, #2
 8006d50:	d9f6      	bls.n	8006d40 <HAL_RCC_OscConfig+0x318>
 8006d52:	e6fa      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_HSI48_DISABLE();
 8006d54:	682b      	ldr	r3, [r5, #0]
 8006d56:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006d5a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006d5c:	f7fe f998 	bl	8005090 <HAL_GetTick>
 8006d60:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8006d62:	682b      	ldr	r3, [r5, #0]
 8006d64:	0499      	lsls	r1, r3, #18
 8006d66:	f57f ae9e 	bpl.w	8006aa6 <HAL_RCC_OscConfig+0x7e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006d6a:	f7fe f991 	bl	8005090 <HAL_GetTick>
 8006d6e:	1b80      	subs	r0, r0, r6
 8006d70:	2802      	cmp	r0, #2
 8006d72:	d9f6      	bls.n	8006d62 <HAL_RCC_OscConfig+0x33a>
 8006d74:	e6e9      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006d76:	f7fe f98b 	bl	8005090 <HAL_GetTick>
 8006d7a:	1b80      	subs	r0, r0, r6
 8006d7c:	2864      	cmp	r0, #100	; 0x64
 8006d7e:	f67f ae9d 	bls.w	8006abc <HAL_RCC_OscConfig+0x94>
 8006d82:	e6e2      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006d84:	b9b3      	cbnz	r3, 8006db4 <HAL_RCC_OscConfig+0x38c>
 8006d86:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006d88:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006d8c:	f023 0301 	bic.w	r3, r3, #1
 8006d90:	672b      	str	r3, [r5, #112]	; 0x70
 8006d92:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006d94:	f023 0304 	bic.w	r3, r3, #4
 8006d98:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006d9a:	f7fe f979 	bl	8005090 <HAL_GetTick>
 8006d9e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8006da0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006da2:	0798      	lsls	r0, r3, #30
 8006da4:	f57f aea1 	bpl.w	8006aea <HAL_RCC_OscConfig+0xc2>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006da8:	f7fe f972 	bl	8005090 <HAL_GetTick>
 8006dac:	1b80      	subs	r0, r0, r6
 8006dae:	42b8      	cmp	r0, r7
 8006db0:	d9f6      	bls.n	8006da0 <HAL_RCC_OscConfig+0x378>
 8006db2:	e6ca      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006db4:	2b05      	cmp	r3, #5
 8006db6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006db8:	d103      	bne.n	8006dc2 <HAL_RCC_OscConfig+0x39a>
 8006dba:	f043 0304 	orr.w	r3, r3, #4
 8006dbe:	672b      	str	r3, [r5, #112]	; 0x70
 8006dc0:	e685      	b.n	8006ace <HAL_RCC_OscConfig+0xa6>
 8006dc2:	f023 0301 	bic.w	r3, r3, #1
 8006dc6:	672b      	str	r3, [r5, #112]	; 0x70
 8006dc8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006dca:	f023 0304 	bic.w	r3, r3, #4
 8006dce:	e681      	b.n	8006ad4 <HAL_RCC_OscConfig+0xac>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006dd0:	f7fe f95e 	bl	8005090 <HAL_GetTick>
 8006dd4:	1b40      	subs	r0, r0, r5
 8006dd6:	42b8      	cmp	r0, r7
 8006dd8:	f67f ae83 	bls.w	8006ae2 <HAL_RCC_OscConfig+0xba>
 8006ddc:	e6b5      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 8006dde:	4d67      	ldr	r5, [pc, #412]	; (8006f7c <HAL_RCC_OscConfig+0x554>)
 8006de0:	692b      	ldr	r3, [r5, #16]
 8006de2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006de6:	2b18      	cmp	r3, #24
 8006de8:	d07a      	beq.n	8006ee0 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
 8006dea:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006dec:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006dee:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006df2:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006df4:	d167      	bne.n	8006ec6 <HAL_RCC_OscConfig+0x49e>
        tickstart = HAL_GetTick();
 8006df6:	f7fe f94b 	bl	8005090 <HAL_GetTick>
 8006dfa:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006dfc:	682b      	ldr	r3, [r5, #0]
 8006dfe:	0199      	lsls	r1, r3, #6
 8006e00:	d45b      	bmi.n	8006eba <HAL_RCC_OscConfig+0x492>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8006e02:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8006e04:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006e06:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
 8006e0a:	f023 0303 	bic.w	r3, r3, #3
 8006e0e:	4313      	orrs	r3, r2
 8006e10:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006e12:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8006e16:	62ab      	str	r3, [r5, #40]	; 0x28
 8006e18:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006e1a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006e1c:	3b01      	subs	r3, #1
 8006e1e:	3a01      	subs	r2, #1
 8006e20:	025b      	lsls	r3, r3, #9
 8006e22:	0412      	lsls	r2, r2, #16
 8006e24:	b29b      	uxth	r3, r3
 8006e26:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8006e2a:	4313      	orrs	r3, r2
 8006e2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006e2e:	3a01      	subs	r2, #1
 8006e30:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006e34:	4313      	orrs	r3, r2
 8006e36:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006e38:	3a01      	subs	r2, #1
 8006e3a:	0612      	lsls	r2, r2, #24
 8006e3c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8006e40:	4313      	orrs	r3, r2
 8006e42:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
 8006e44:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006e46:	f023 0301 	bic.w	r3, r3, #1
 8006e4a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8006e4c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8006e4e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006e50:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006e54:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006e58:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006e5c:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8006e5e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006e60:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006e62:	f023 030c 	bic.w	r3, r3, #12
 8006e66:	4313      	orrs	r3, r2
 8006e68:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8006e6a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006e6c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006e6e:	f023 0302 	bic.w	r3, r3, #2
 8006e72:	4313      	orrs	r3, r2
 8006e74:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8006e76:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006e78:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006e7c:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006e7e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006e80:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006e84:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8006e86:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006e88:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006e8c:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
 8006e8e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006e90:	f043 0301 	orr.w	r3, r3, #1
 8006e94:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
 8006e96:	682b      	ldr	r3, [r5, #0]
 8006e98:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8006e9c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e9e:	f7fe f8f7 	bl	8005090 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006ea2:	4d36      	ldr	r5, [pc, #216]	; (8006f7c <HAL_RCC_OscConfig+0x554>)
        tickstart = HAL_GetTick();
 8006ea4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006ea6:	682b      	ldr	r3, [r5, #0]
 8006ea8:	019a      	lsls	r2, r3, #6
 8006eaa:	f53f ae22 	bmi.w	8006af2 <HAL_RCC_OscConfig+0xca>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006eae:	f7fe f8ef 	bl	8005090 <HAL_GetTick>
 8006eb2:	1b00      	subs	r0, r0, r4
 8006eb4:	2802      	cmp	r0, #2
 8006eb6:	d9f6      	bls.n	8006ea6 <HAL_RCC_OscConfig+0x47e>
 8006eb8:	e647      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006eba:	f7fe f8e9 	bl	8005090 <HAL_GetTick>
 8006ebe:	1b80      	subs	r0, r0, r6
 8006ec0:	2802      	cmp	r0, #2
 8006ec2:	d99b      	bls.n	8006dfc <HAL_RCC_OscConfig+0x3d4>
 8006ec4:	e641      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
        tickstart = HAL_GetTick();
 8006ec6:	f7fe f8e3 	bl	8005090 <HAL_GetTick>
 8006eca:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006ecc:	682b      	ldr	r3, [r5, #0]
 8006ece:	019b      	lsls	r3, r3, #6
 8006ed0:	f57f ae0f 	bpl.w	8006af2 <HAL_RCC_OscConfig+0xca>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006ed4:	f7fe f8dc 	bl	8005090 <HAL_GetTick>
 8006ed8:	1b00      	subs	r0, r0, r4
 8006eda:	2802      	cmp	r0, #2
 8006edc:	d9f6      	bls.n	8006ecc <HAL_RCC_OscConfig+0x4a4>
 8006ede:	e634      	b.n	8006b4a <HAL_RCC_OscConfig+0x122>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006ee0:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
 8006ee2:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 8006ee4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006ee6:	f43f ae31 	beq.w	8006b4c <HAL_RCC_OscConfig+0x124>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006eea:	f002 0103 	and.w	r1, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006eee:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006ef0:	4281      	cmp	r1, r0
 8006ef2:	f47f ad9c 	bne.w	8006a2e <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8006ef6:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006efa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006efc:	428a      	cmp	r2, r1
 8006efe:	f47f ad96 	bne.w	8006a2e <HAL_RCC_OscConfig+0x6>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006f02:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006f04:	f3c3 0108 	ubfx	r1, r3, #0, #9
 8006f08:	3a01      	subs	r2, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8006f0a:	4291      	cmp	r1, r2
 8006f0c:	f47f ad8f 	bne.w	8006a2e <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006f10:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8006f12:	f3c3 2146 	ubfx	r1, r3, #9, #7
 8006f16:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006f18:	4291      	cmp	r1, r2
 8006f1a:	f47f ad88 	bne.w	8006a2e <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006f1e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006f20:	f3c3 4106 	ubfx	r1, r3, #16, #7
 8006f24:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006f26:	4291      	cmp	r1, r2
 8006f28:	f47f ad81 	bne.w	8006a2e <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 8006f2c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006f2e:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8006f32:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006f34:	4293      	cmp	r3, r2
 8006f36:	f47f ad7a 	bne.w	8006a2e <HAL_RCC_OscConfig+0x6>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8006f3a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8006f3c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8006f3e:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8006f42:	429a      	cmp	r2, r3
 8006f44:	f43f add5 	beq.w	8006af2 <HAL_RCC_OscConfig+0xca>
          __HAL_RCC_PLLFRACN_DISABLE();
 8006f48:	4d0c      	ldr	r5, [pc, #48]	; (8006f7c <HAL_RCC_OscConfig+0x554>)
 8006f4a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006f4c:	f023 0301 	bic.w	r3, r3, #1
 8006f50:	62eb      	str	r3, [r5, #44]	; 0x2c
          tickstart = HAL_GetTick();
 8006f52:	f7fe f89d 	bl	8005090 <HAL_GetTick>
 8006f56:	4606      	mov	r6, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 8006f58:	f7fe f89a 	bl	8005090 <HAL_GetTick>
 8006f5c:	42b0      	cmp	r0, r6
 8006f5e:	d0fb      	beq.n	8006f58 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8006f60:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8006f62:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006f64:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006f68:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006f6c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006f70:	636b      	str	r3, [r5, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
 8006f72:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006f74:	f043 0301 	orr.w	r3, r3, #1
 8006f78:	62eb      	str	r3, [r5, #44]	; 0x2c
 8006f7a:	e5ba      	b.n	8006af2 <HAL_RCC_OscConfig+0xca>
 8006f7c:	58024400 	.word	0x58024400

08006f80 <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006f80:	4b49      	ldr	r3, [pc, #292]	; (80070a8 <HAL_RCC_GetSysClockFreq+0x128>)
 8006f82:	691a      	ldr	r2, [r3, #16]
 8006f84:	f002 0238 	and.w	r2, r2, #56	; 0x38
 8006f88:	2a10      	cmp	r2, #16
{
 8006f8a:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006f8c:	f000 8088 	beq.w	80070a0 <HAL_RCC_GetSysClockFreq+0x120>
 8006f90:	2a18      	cmp	r2, #24
 8006f92:	d00c      	beq.n	8006fae <HAL_RCC_GetSysClockFreq+0x2e>
 8006f94:	2a00      	cmp	r2, #0
 8006f96:	f040 8085 	bne.w	80070a4 <HAL_RCC_GetSysClockFreq+0x124>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8006f9a:	681a      	ldr	r2, [r3, #0]
 8006f9c:	4843      	ldr	r0, [pc, #268]	; (80070ac <HAL_RCC_GetSysClockFreq+0x12c>)
 8006f9e:	f012 0f20 	tst.w	r2, #32
 8006fa2:	d003      	beq.n	8006fac <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	f3c3 03c1 	ubfx	r3, r3, #3, #2
 8006faa:	40d8      	lsrs	r0, r3
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
 8006fac:	bd30      	pop	{r4, r5, pc}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8006fae:	6a99      	ldr	r1, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8006fb0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8006fb2:	6adc      	ldr	r4, [r3, #44]	; 0x2c
      if (pllm != 0U)
 8006fb4:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8006fb8:	f3c5 1005 	ubfx	r0, r5, #4, #6
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006fbc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
      if (pllm != 0U)
 8006fbe:	d0f5      	beq.n	8006fac <HAL_RCC_GetSysClockFreq+0x2c>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006fc0:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8006fc4:	f004 0401 	and.w	r4, r4, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8006fc8:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006fcc:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006fd0:	4362      	muls	r2, r4
 8006fd2:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8006fd6:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006fd8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006fdc:	ee06 2a90 	vmov	s13, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006fe0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
 8006fe4:	d04e      	beq.n	8007084 <HAL_RCC_GetSysClockFreq+0x104>
 8006fe6:	2902      	cmp	r1, #2
 8006fe8:	d03e      	beq.n	8007068 <HAL_RCC_GetSysClockFreq+0xe8>
 8006fea:	2900      	cmp	r1, #0
 8006fec:	d14a      	bne.n	8007084 <HAL_RCC_GetSysClockFreq+0x104>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8006fee:	681a      	ldr	r2, [r3, #0]
 8006ff0:	0692      	lsls	r2, r2, #26
 8006ff2:	d527      	bpl.n	8007044 <HAL_RCC_GetSysClockFreq+0xc4>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006ff4:	6819      	ldr	r1, [r3, #0]
 8006ff6:	4a2d      	ldr	r2, [pc, #180]	; (80070ac <HAL_RCC_GetSysClockFreq+0x12c>)
 8006ff8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006ffc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8006ffe:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007000:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007004:	ee07 2a90 	vmov	s15, r2
 8007008:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 800700c:	eec5 7a87 	vdiv.f32	s15, s11, s14
 8007010:	ee07 3a10 	vmov	s14, r3
 8007014:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007018:	ee37 7a26 	vadd.f32	s14, s14, s13
 800701c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8007020:	ee67 7a87 	vmul.f32	s15, s15, s14
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8007024:	4b20      	ldr	r3, [pc, #128]	; (80070a8 <HAL_RCC_GetSysClockFreq+0x128>)
 8007026:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007028:	f3c3 2346 	ubfx	r3, r3, #9, #7
 800702c:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 800702e:	ee07 3a10 	vmov	s14, r3
 8007032:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007036:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800703a:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 800703e:	ee17 0a90 	vmov	r0, s15
 8007042:	e7b3      	b.n	8006fac <HAL_RCC_GetSysClockFreq+0x2c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007044:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007046:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800704a:	ee07 3a90 	vmov	s15, r3
 800704e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007052:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007056:	ee77 7a86 	vadd.f32	s15, s15, s12
 800705a:	ed9f 6a15 	vldr	s12, [pc, #84]	; 80070b0 <HAL_RCC_GetSysClockFreq+0x130>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800705e:	eec6 6a07 	vdiv.f32	s13, s12, s14
 8007062:	ee67 7aa6 	vmul.f32	s15, s15, s13
            break;
 8007066:	e7dd      	b.n	8007024 <HAL_RCC_GetSysClockFreq+0xa4>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007068:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800706a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800706e:	ee07 3a90 	vmov	s15, r3
 8007072:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007076:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800707a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800707e:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 80070b4 <HAL_RCC_GetSysClockFreq+0x134>
 8007082:	e7ec      	b.n	800705e <HAL_RCC_GetSysClockFreq+0xde>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007084:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007086:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800708a:	ee07 3a90 	vmov	s15, r3
 800708e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007092:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007096:	ee77 7a86 	vadd.f32	s15, s15, s12
 800709a:	ed9f 6a07 	vldr	s12, [pc, #28]	; 80070b8 <HAL_RCC_GetSysClockFreq+0x138>
 800709e:	e7de      	b.n	800705e <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80070a0:	4806      	ldr	r0, [pc, #24]	; (80070bc <HAL_RCC_GetSysClockFreq+0x13c>)
 80070a2:	e783      	b.n	8006fac <HAL_RCC_GetSysClockFreq+0x2c>
      sysclockfreq = CSI_VALUE;
 80070a4:	4806      	ldr	r0, [pc, #24]	; (80070c0 <HAL_RCC_GetSysClockFreq+0x140>)
 80070a6:	e781      	b.n	8006fac <HAL_RCC_GetSysClockFreq+0x2c>
 80070a8:	58024400 	.word	0x58024400
 80070ac:	03d09000 	.word	0x03d09000
 80070b0:	4c742400 	.word	0x4c742400
 80070b4:	4bbebc20 	.word	0x4bbebc20
 80070b8:	4a742400 	.word	0x4a742400
 80070bc:	017d7840 	.word	0x017d7840
 80070c0:	003d0900 	.word	0x003d0900

080070c4 <HAL_RCC_ClockConfig>:
{
 80070c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80070c8:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 80070ca:	4604      	mov	r4, r0
 80070cc:	b910      	cbnz	r0, 80070d4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80070ce:	2001      	movs	r0, #1
}
 80070d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80070d4:	4a88      	ldr	r2, [pc, #544]	; (80072f8 <HAL_RCC_ClockConfig+0x234>)
 80070d6:	6813      	ldr	r3, [r2, #0]
 80070d8:	f003 030f 	and.w	r3, r3, #15
 80070dc:	428b      	cmp	r3, r1
 80070de:	f0c0 8093 	bcc.w	8007208 <HAL_RCC_ClockConfig+0x144>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80070e2:	6823      	ldr	r3, [r4, #0]
 80070e4:	075f      	lsls	r7, r3, #29
 80070e6:	f100 809b 	bmi.w	8007220 <HAL_RCC_ClockConfig+0x15c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80070ea:	071e      	lsls	r6, r3, #28
 80070ec:	d50b      	bpl.n	8007106 <HAL_RCC_ClockConfig+0x42>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80070ee:	4983      	ldr	r1, [pc, #524]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 80070f0:	6960      	ldr	r0, [r4, #20]
 80070f2:	69ca      	ldr	r2, [r1, #28]
 80070f4:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80070f8:	4290      	cmp	r0, r2
 80070fa:	d904      	bls.n	8007106 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80070fc:	69ca      	ldr	r2, [r1, #28]
 80070fe:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007102:	4302      	orrs	r2, r0
 8007104:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007106:	06d8      	lsls	r0, r3, #27
 8007108:	d50b      	bpl.n	8007122 <HAL_RCC_ClockConfig+0x5e>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 800710a:	497c      	ldr	r1, [pc, #496]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 800710c:	69a0      	ldr	r0, [r4, #24]
 800710e:	69ca      	ldr	r2, [r1, #28]
 8007110:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8007114:	4290      	cmp	r0, r2
 8007116:	d904      	bls.n	8007122 <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8007118:	69ca      	ldr	r2, [r1, #28]
 800711a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800711e:	4302      	orrs	r2, r0
 8007120:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8007122:	0699      	lsls	r1, r3, #26
 8007124:	d50b      	bpl.n	800713e <HAL_RCC_ClockConfig+0x7a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8007126:	4975      	ldr	r1, [pc, #468]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 8007128:	69e0      	ldr	r0, [r4, #28]
 800712a:	6a0a      	ldr	r2, [r1, #32]
 800712c:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007130:	4290      	cmp	r0, r2
 8007132:	d904      	bls.n	800713e <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8007134:	6a0a      	ldr	r2, [r1, #32]
 8007136:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800713a:	4302      	orrs	r2, r0
 800713c:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800713e:	079a      	lsls	r2, r3, #30
 8007140:	d50b      	bpl.n	800715a <HAL_RCC_ClockConfig+0x96>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007142:	496e      	ldr	r1, [pc, #440]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 8007144:	68e0      	ldr	r0, [r4, #12]
 8007146:	698a      	ldr	r2, [r1, #24]
 8007148:	f002 020f 	and.w	r2, r2, #15
 800714c:	4290      	cmp	r0, r2
 800714e:	d904      	bls.n	800715a <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007150:	698a      	ldr	r2, [r1, #24]
 8007152:	f022 020f 	bic.w	r2, r2, #15
 8007156:	4302      	orrs	r2, r0
 8007158:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800715a:	07df      	lsls	r7, r3, #31
 800715c:	d46e      	bmi.n	800723c <HAL_RCC_ClockConfig+0x178>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800715e:	6823      	ldr	r3, [r4, #0]
 8007160:	079e      	lsls	r6, r3, #30
 8007162:	f100 80a1 	bmi.w	80072a8 <HAL_RCC_ClockConfig+0x1e4>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007166:	4964      	ldr	r1, [pc, #400]	; (80072f8 <HAL_RCC_ClockConfig+0x234>)
 8007168:	680a      	ldr	r2, [r1, #0]
 800716a:	f002 020f 	and.w	r2, r2, #15
 800716e:	42aa      	cmp	r2, r5
 8007170:	f200 80a8 	bhi.w	80072c4 <HAL_RCC_ClockConfig+0x200>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007174:	0758      	lsls	r0, r3, #29
 8007176:	f100 80b1 	bmi.w	80072dc <HAL_RCC_ClockConfig+0x218>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800717a:	0719      	lsls	r1, r3, #28
 800717c:	d50b      	bpl.n	8007196 <HAL_RCC_ClockConfig+0xd2>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 800717e:	495f      	ldr	r1, [pc, #380]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 8007180:	6960      	ldr	r0, [r4, #20]
 8007182:	69ca      	ldr	r2, [r1, #28]
 8007184:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007188:	4290      	cmp	r0, r2
 800718a:	d204      	bcs.n	8007196 <HAL_RCC_ClockConfig+0xd2>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 800718c:	69ca      	ldr	r2, [r1, #28]
 800718e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007192:	4302      	orrs	r2, r0
 8007194:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007196:	06da      	lsls	r2, r3, #27
 8007198:	d50b      	bpl.n	80071b2 <HAL_RCC_ClockConfig+0xee>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 800719a:	4958      	ldr	r1, [pc, #352]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 800719c:	69a0      	ldr	r0, [r4, #24]
 800719e:	69ca      	ldr	r2, [r1, #28]
 80071a0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80071a4:	4290      	cmp	r0, r2
 80071a6:	d204      	bcs.n	80071b2 <HAL_RCC_ClockConfig+0xee>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80071a8:	69ca      	ldr	r2, [r1, #28]
 80071aa:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80071ae:	4302      	orrs	r2, r0
 80071b0:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80071b2:	069b      	lsls	r3, r3, #26
 80071b4:	d50b      	bpl.n	80071ce <HAL_RCC_ClockConfig+0x10a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80071b6:	4a51      	ldr	r2, [pc, #324]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 80071b8:	69e1      	ldr	r1, [r4, #28]
 80071ba:	6a13      	ldr	r3, [r2, #32]
 80071bc:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80071c0:	4299      	cmp	r1, r3
 80071c2:	d204      	bcs.n	80071ce <HAL_RCC_ClockConfig+0x10a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 80071c4:	6a13      	ldr	r3, [r2, #32]
 80071c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80071ca:	430b      	orrs	r3, r1
 80071cc:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 80071ce:	f7ff fed7 	bl	8006f80 <HAL_RCC_GetSysClockFreq>
 80071d2:	494a      	ldr	r1, [pc, #296]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 80071d4:	4a4a      	ldr	r2, [pc, #296]	; (8007300 <HAL_RCC_ClockConfig+0x23c>)
 80071d6:	698b      	ldr	r3, [r1, #24]
 80071d8:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80071dc:	5cd3      	ldrb	r3, [r2, r3]
 80071de:	f003 031f 	and.w	r3, r3, #31
 80071e2:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80071e4:	698b      	ldr	r3, [r1, #24]
 80071e6:	f003 030f 	and.w	r3, r3, #15
 80071ea:	5cd3      	ldrb	r3, [r2, r3]
 80071ec:	4a45      	ldr	r2, [pc, #276]	; (8007304 <HAL_RCC_ClockConfig+0x240>)
 80071ee:	f003 031f 	and.w	r3, r3, #31
 80071f2:	fa20 f303 	lsr.w	r3, r0, r3
 80071f6:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
 80071f8:	4b43      	ldr	r3, [pc, #268]	; (8007308 <HAL_RCC_ClockConfig+0x244>)
 80071fa:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick(uwTickPrio);
 80071fc:	4b43      	ldr	r3, [pc, #268]	; (800730c <HAL_RCC_ClockConfig+0x248>)
}
 80071fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
 8007202:	6818      	ldr	r0, [r3, #0]
 8007204:	f7fa bdc8 	b.w	8001d98 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007208:	6813      	ldr	r3, [r2, #0]
 800720a:	f023 030f 	bic.w	r3, r3, #15
 800720e:	430b      	orrs	r3, r1
 8007210:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007212:	6813      	ldr	r3, [r2, #0]
 8007214:	f003 030f 	and.w	r3, r3, #15
 8007218:	428b      	cmp	r3, r1
 800721a:	f47f af58 	bne.w	80070ce <HAL_RCC_ClockConfig+0xa>
 800721e:	e760      	b.n	80070e2 <HAL_RCC_ClockConfig+0x1e>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007220:	4936      	ldr	r1, [pc, #216]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 8007222:	6920      	ldr	r0, [r4, #16]
 8007224:	698a      	ldr	r2, [r1, #24]
 8007226:	f002 0270 	and.w	r2, r2, #112	; 0x70
 800722a:	4290      	cmp	r0, r2
 800722c:	f67f af5d 	bls.w	80070ea <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007230:	698a      	ldr	r2, [r1, #24]
 8007232:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007236:	4302      	orrs	r2, r0
 8007238:	618a      	str	r2, [r1, #24]
 800723a:	e756      	b.n	80070ea <HAL_RCC_ClockConfig+0x26>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 800723c:	4b2f      	ldr	r3, [pc, #188]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 800723e:	68a1      	ldr	r1, [r4, #8]
 8007240:	699a      	ldr	r2, [r3, #24]
 8007242:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8007246:	430a      	orrs	r2, r1
 8007248:	619a      	str	r2, [r3, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800724a:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800724c:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800724e:	2902      	cmp	r1, #2
 8007250:	d11d      	bne.n	800728e <HAL_RCC_ClockConfig+0x1ca>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007252:	f412 3f00 	tst.w	r2, #131072	; 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007256:	f43f af3a 	beq.w	80070ce <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 800725a:	691a      	ldr	r2, [r3, #16]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800725c:	f241 3888 	movw	r8, #5000	; 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007260:	4f26      	ldr	r7, [pc, #152]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8007262:	f022 0207 	bic.w	r2, r2, #7
 8007266:	430a      	orrs	r2, r1
 8007268:	611a      	str	r2, [r3, #16]
    tickstart = HAL_GetTick();
 800726a:	f7fd ff11 	bl	8005090 <HAL_GetTick>
 800726e:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007270:	693b      	ldr	r3, [r7, #16]
 8007272:	6862      	ldr	r2, [r4, #4]
 8007274:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007278:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 800727c:	f43f af6f 	beq.w	800715e <HAL_RCC_ClockConfig+0x9a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007280:	f7fd ff06 	bl	8005090 <HAL_GetTick>
 8007284:	1b80      	subs	r0, r0, r6
 8007286:	4540      	cmp	r0, r8
 8007288:	d9f2      	bls.n	8007270 <HAL_RCC_ClockConfig+0x1ac>
        return HAL_TIMEOUT;
 800728a:	2003      	movs	r0, #3
 800728c:	e720      	b.n	80070d0 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800728e:	2903      	cmp	r1, #3
 8007290:	d102      	bne.n	8007298 <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007292:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 8007296:	e7de      	b.n	8007256 <HAL_RCC_ClockConfig+0x192>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8007298:	2901      	cmp	r1, #1
 800729a:	d102      	bne.n	80072a2 <HAL_RCC_ClockConfig+0x1de>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 800729c:	f412 7f80 	tst.w	r2, #256	; 0x100
 80072a0:	e7d9      	b.n	8007256 <HAL_RCC_ClockConfig+0x192>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80072a2:	f012 0f04 	tst.w	r2, #4
 80072a6:	e7d6      	b.n	8007256 <HAL_RCC_ClockConfig+0x192>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 80072a8:	4914      	ldr	r1, [pc, #80]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 80072aa:	68e0      	ldr	r0, [r4, #12]
 80072ac:	698a      	ldr	r2, [r1, #24]
 80072ae:	f002 020f 	and.w	r2, r2, #15
 80072b2:	4290      	cmp	r0, r2
 80072b4:	f4bf af57 	bcs.w	8007166 <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80072b8:	698a      	ldr	r2, [r1, #24]
 80072ba:	f022 020f 	bic.w	r2, r2, #15
 80072be:	4302      	orrs	r2, r0
 80072c0:	618a      	str	r2, [r1, #24]
 80072c2:	e750      	b.n	8007166 <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80072c4:	680a      	ldr	r2, [r1, #0]
 80072c6:	f022 020f 	bic.w	r2, r2, #15
 80072ca:	432a      	orrs	r2, r5
 80072cc:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80072ce:	680a      	ldr	r2, [r1, #0]
 80072d0:	f002 020f 	and.w	r2, r2, #15
 80072d4:	42aa      	cmp	r2, r5
 80072d6:	f47f aefa 	bne.w	80070ce <HAL_RCC_ClockConfig+0xa>
 80072da:	e74b      	b.n	8007174 <HAL_RCC_ClockConfig+0xb0>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 80072dc:	4907      	ldr	r1, [pc, #28]	; (80072fc <HAL_RCC_ClockConfig+0x238>)
 80072de:	6920      	ldr	r0, [r4, #16]
 80072e0:	698a      	ldr	r2, [r1, #24]
 80072e2:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80072e6:	4290      	cmp	r0, r2
 80072e8:	f4bf af47 	bcs.w	800717a <HAL_RCC_ClockConfig+0xb6>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 80072ec:	698a      	ldr	r2, [r1, #24]
 80072ee:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80072f2:	4302      	orrs	r2, r0
 80072f4:	618a      	str	r2, [r1, #24]
 80072f6:	e740      	b.n	800717a <HAL_RCC_ClockConfig+0xb6>
 80072f8:	52002000 	.word	0x52002000
 80072fc:	58024400 	.word	0x58024400
 8007300:	08023240 	.word	0x08023240
 8007304:	24000070 	.word	0x24000070
 8007308:	2400006c 	.word	0x2400006c
 800730c:	24000078 	.word	0x24000078

08007310 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8007310:	b510      	push	{r4, lr}
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8007312:	4c0c      	ldr	r4, [pc, #48]	; (8007344 <HAL_RCC_GetHCLKFreq+0x34>)
 8007314:	f7ff fe34 	bl	8006f80 <HAL_RCC_GetSysClockFreq>
 8007318:	490b      	ldr	r1, [pc, #44]	; (8007348 <HAL_RCC_GetHCLKFreq+0x38>)
 800731a:	69a3      	ldr	r3, [r4, #24]
 800731c:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8007320:	5ccb      	ldrb	r3, [r1, r3]
 8007322:	f003 031f 	and.w	r3, r3, #31
 8007326:	fa20 f203 	lsr.w	r2, r0, r3
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800732a:	69a3      	ldr	r3, [r4, #24]
 800732c:	f003 030f 	and.w	r3, r3, #15
 8007330:	5ccb      	ldrb	r3, [r1, r3]
 8007332:	f003 031f 	and.w	r3, r3, #31
 8007336:	fa22 f003 	lsr.w	r0, r2, r3
 800733a:	4b04      	ldr	r3, [pc, #16]	; (800734c <HAL_RCC_GetHCLKFreq+0x3c>)
 800733c:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800733e:	4b04      	ldr	r3, [pc, #16]	; (8007350 <HAL_RCC_GetHCLKFreq+0x40>)
 8007340:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
 8007342:	bd10      	pop	{r4, pc}
 8007344:	58024400 	.word	0x58024400
 8007348:	08023240 	.word	0x08023240
 800734c:	24000070 	.word	0x24000070
 8007350:	2400006c 	.word	0x2400006c

08007354 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007354:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8007356:	f7ff ffdb 	bl	8007310 <HAL_RCC_GetHCLKFreq>
 800735a:	4b05      	ldr	r3, [pc, #20]	; (8007370 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800735c:	4a05      	ldr	r2, [pc, #20]	; (8007374 <HAL_RCC_GetPCLK1Freq+0x20>)
 800735e:	69db      	ldr	r3, [r3, #28]
 8007360:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8007364:	5cd3      	ldrb	r3, [r2, r3]
 8007366:	f003 031f 	and.w	r3, r3, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 800736a:	40d8      	lsrs	r0, r3
 800736c:	bd08      	pop	{r3, pc}
 800736e:	bf00      	nop
 8007370:	58024400 	.word	0x58024400
 8007374:	08023240 	.word	0x08023240

08007378 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
 8007378:	233f      	movs	r3, #63	; 0x3f
 800737a:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800737c:	4b11      	ldr	r3, [pc, #68]	; (80073c4 <HAL_RCC_GetClockConfig+0x4c>)
 800737e:	691a      	ldr	r2, [r3, #16]
 8007380:	f002 0207 	and.w	r2, r2, #7
 8007384:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 8007386:	699a      	ldr	r2, [r3, #24]
 8007388:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 800738c:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 800738e:	699a      	ldr	r2, [r3, #24]
 8007390:	f002 020f 	and.w	r2, r2, #15
 8007394:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 8007396:	699a      	ldr	r2, [r3, #24]
 8007398:	f002 0270 	and.w	r2, r2, #112	; 0x70
 800739c:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 800739e:	69da      	ldr	r2, [r3, #28]
 80073a0:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80073a4:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 80073a6:	69da      	ldr	r2, [r3, #28]
 80073a8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80073ac:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 80073ae:	6a1b      	ldr	r3, [r3, #32]
 80073b0:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80073b4:	61c3      	str	r3, [r0, #28]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80073b6:	4b04      	ldr	r3, [pc, #16]	; (80073c8 <HAL_RCC_GetClockConfig+0x50>)
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	f003 030f 	and.w	r3, r3, #15
 80073be:	600b      	str	r3, [r1, #0]
}
 80073c0:	4770      	bx	lr
 80073c2:	bf00      	nop
 80073c4:	58024400 	.word	0x58024400
 80073c8:	52002000 	.word	0x52002000

080073cc <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 80073cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80073ce:	4c3a      	ldr	r4, [pc, #232]	; (80074b8 <RCCEx_PLL2_Config+0xec>)
{
 80073d0:	4606      	mov	r6, r0
 80073d2:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80073d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80073d6:	f003 0303 	and.w	r3, r3, #3
 80073da:	2b03      	cmp	r3, #3
 80073dc:	d069      	beq.n	80074b2 <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 80073de:	6823      	ldr	r3, [r4, #0]
 80073e0:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80073e4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80073e6:	f7fd fe53 	bl	8005090 <HAL_GetTick>
 80073ea:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80073ec:	6823      	ldr	r3, [r4, #0]
 80073ee:	011a      	lsls	r2, r3, #4
 80073f0:	d44b      	bmi.n	800748a <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 80073f2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80073f4:	6832      	ldr	r2, [r6, #0]
 80073f6:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 80073fa:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 80073fe:	62a3      	str	r3, [r4, #40]	; 0x28
 8007400:	68b3      	ldr	r3, [r6, #8]
 8007402:	68f2      	ldr	r2, [r6, #12]
 8007404:	3b01      	subs	r3, #1
 8007406:	3a01      	subs	r2, #1
 8007408:	025b      	lsls	r3, r3, #9
 800740a:	0412      	lsls	r2, r2, #16
 800740c:	b29b      	uxth	r3, r3
 800740e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8007412:	4313      	orrs	r3, r2
 8007414:	6872      	ldr	r2, [r6, #4]
 8007416:	3a01      	subs	r2, #1
 8007418:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800741c:	4313      	orrs	r3, r2
 800741e:	6932      	ldr	r2, [r6, #16]
 8007420:	3a01      	subs	r2, #1
 8007422:	0612      	lsls	r2, r2, #24
 8007424:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8007428:	4313      	orrs	r3, r2
 800742a:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 800742c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800742e:	6972      	ldr	r2, [r6, #20]
 8007430:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8007434:	4313      	orrs	r3, r2
 8007436:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 8007438:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800743a:	69b2      	ldr	r2, [r6, #24]
 800743c:	f023 0320 	bic.w	r3, r3, #32
 8007440:	4313      	orrs	r3, r2
 8007442:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8007444:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007446:	f023 0310 	bic.w	r3, r3, #16
 800744a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800744c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800744e:	69f2      	ldr	r2, [r6, #28]
 8007450:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007454:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007458:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800745c:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 800745e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007460:	f043 0310 	orr.w	r3, r3, #16
 8007464:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8007466:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 8007468:	b9b5      	cbnz	r5, 8007498 <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 800746a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 800746e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 8007470:	4c11      	ldr	r4, [pc, #68]	; (80074b8 <RCCEx_PLL2_Config+0xec>)
 8007472:	6823      	ldr	r3, [r4, #0]
 8007474:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8007478:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800747a:	f7fd fe09 	bl	8005090 <HAL_GetTick>
 800747e:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8007480:	6823      	ldr	r3, [r4, #0]
 8007482:	011b      	lsls	r3, r3, #4
 8007484:	d50f      	bpl.n	80074a6 <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
 8007486:	2000      	movs	r0, #0
 8007488:	e005      	b.n	8007496 <RCCEx_PLL2_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800748a:	f7fd fe01 	bl	8005090 <HAL_GetTick>
 800748e:	1bc0      	subs	r0, r0, r7
 8007490:	2802      	cmp	r0, #2
 8007492:	d9ab      	bls.n	80073ec <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
 8007494:	2003      	movs	r0, #3
}
 8007496:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 8007498:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 800749a:	bf0c      	ite	eq
 800749c:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 80074a0:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
 80074a4:	e7e3      	b.n	800746e <RCCEx_PLL2_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80074a6:	f7fd fdf3 	bl	8005090 <HAL_GetTick>
 80074aa:	1b40      	subs	r0, r0, r5
 80074ac:	2802      	cmp	r0, #2
 80074ae:	d9e7      	bls.n	8007480 <RCCEx_PLL2_Config+0xb4>
 80074b0:	e7f0      	b.n	8007494 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
 80074b2:	2001      	movs	r0, #1
 80074b4:	e7ef      	b.n	8007496 <RCCEx_PLL2_Config+0xca>
 80074b6:	bf00      	nop
 80074b8:	58024400 	.word	0x58024400

080074bc <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 80074bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80074be:	4c3a      	ldr	r4, [pc, #232]	; (80075a8 <RCCEx_PLL3_Config+0xec>)
{
 80074c0:	4606      	mov	r6, r0
 80074c2:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80074c4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80074c6:	f003 0303 	and.w	r3, r3, #3
 80074ca:	2b03      	cmp	r3, #3
 80074cc:	d069      	beq.n	80075a2 <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 80074ce:	6823      	ldr	r3, [r4, #0]
 80074d0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80074d4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80074d6:	f7fd fddb 	bl	8005090 <HAL_GetTick>
 80074da:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80074dc:	6823      	ldr	r3, [r4, #0]
 80074de:	009a      	lsls	r2, r3, #2
 80074e0:	d44b      	bmi.n	800757a <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 80074e2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80074e4:	6832      	ldr	r2, [r6, #0]
 80074e6:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
 80074ea:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 80074ee:	62a3      	str	r3, [r4, #40]	; 0x28
 80074f0:	68b3      	ldr	r3, [r6, #8]
 80074f2:	68f2      	ldr	r2, [r6, #12]
 80074f4:	3b01      	subs	r3, #1
 80074f6:	3a01      	subs	r2, #1
 80074f8:	025b      	lsls	r3, r3, #9
 80074fa:	0412      	lsls	r2, r2, #16
 80074fc:	b29b      	uxth	r3, r3
 80074fe:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8007502:	4313      	orrs	r3, r2
 8007504:	6872      	ldr	r2, [r6, #4]
 8007506:	3a01      	subs	r2, #1
 8007508:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800750c:	4313      	orrs	r3, r2
 800750e:	6932      	ldr	r2, [r6, #16]
 8007510:	3a01      	subs	r2, #1
 8007512:	0612      	lsls	r2, r2, #24
 8007514:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8007518:	4313      	orrs	r3, r2
 800751a:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 800751c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800751e:	6972      	ldr	r2, [r6, #20]
 8007520:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8007524:	4313      	orrs	r3, r2
 8007526:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8007528:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800752a:	69b2      	ldr	r2, [r6, #24]
 800752c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007530:	4313      	orrs	r3, r2
 8007532:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8007534:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007536:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800753a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 800753c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800753e:	69f2      	ldr	r2, [r6, #28]
 8007540:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007544:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007548:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800754c:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 800754e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007550:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007554:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8007556:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 8007558:	b9b5      	cbnz	r5, 8007588 <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 800755a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800755e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 8007560:	4c11      	ldr	r4, [pc, #68]	; (80075a8 <RCCEx_PLL3_Config+0xec>)
 8007562:	6823      	ldr	r3, [r4, #0]
 8007564:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007568:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800756a:	f7fd fd91 	bl	8005090 <HAL_GetTick>
 800756e:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8007570:	6823      	ldr	r3, [r4, #0]
 8007572:	009b      	lsls	r3, r3, #2
 8007574:	d50f      	bpl.n	8007596 <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
 8007576:	2000      	movs	r0, #0
 8007578:	e005      	b.n	8007586 <RCCEx_PLL3_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800757a:	f7fd fd89 	bl	8005090 <HAL_GetTick>
 800757e:	1bc0      	subs	r0, r0, r7
 8007580:	2802      	cmp	r0, #2
 8007582:	d9ab      	bls.n	80074dc <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
 8007584:	2003      	movs	r0, #3
}
 8007586:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 8007588:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 800758a:	bf0c      	ite	eq
 800758c:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8007590:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
 8007594:	e7e3      	b.n	800755e <RCCEx_PLL3_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8007596:	f7fd fd7b 	bl	8005090 <HAL_GetTick>
 800759a:	1b40      	subs	r0, r0, r5
 800759c:	2802      	cmp	r0, #2
 800759e:	d9e7      	bls.n	8007570 <RCCEx_PLL3_Config+0xb4>
 80075a0:	e7f0      	b.n	8007584 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
 80075a2:	2001      	movs	r0, #1
 80075a4:	e7ef      	b.n	8007586 <RCCEx_PLL3_Config+0xca>
 80075a6:	bf00      	nop
 80075a8:	58024400 	.word	0x58024400

080075ac <HAL_RCCEx_PeriphCLKConfig>:
{
 80075ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80075b0:	6803      	ldr	r3, [r0, #0]
{
 80075b2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80075b4:	0118      	lsls	r0, r3, #4
 80075b6:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
 80075ba:	d509      	bpl.n	80075d0 <HAL_RCCEx_PeriphCLKConfig+0x24>
    switch (PeriphClkInit->SpdifrxClockSelection)
 80075bc:	6eab      	ldr	r3, [r5, #104]	; 0x68
 80075be:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80075c2:	d02f      	beq.n	8007624 <HAL_RCCEx_PeriphCLKConfig+0x78>
 80075c4:	d813      	bhi.n	80075ee <HAL_RCCEx_PeriphCLKConfig+0x42>
 80075c6:	b1f3      	cbz	r3, 8007606 <HAL_RCCEx_PeriphCLKConfig+0x5a>
 80075c8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80075cc:	d021      	beq.n	8007612 <HAL_RCCEx_PeriphCLKConfig+0x66>
 80075ce:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 80075d0:	682b      	ldr	r3, [r5, #0]
 80075d2:	05d9      	lsls	r1, r3, #23
 80075d4:	f140 80ed 	bpl.w	80077b2 <HAL_RCCEx_PeriphCLKConfig+0x206>
    switch (PeriphClkInit->Sai1ClockSelection)
 80075d8:	6dab      	ldr	r3, [r5, #88]	; 0x58
 80075da:	2b04      	cmp	r3, #4
 80075dc:	f200 80e8 	bhi.w	80077b0 <HAL_RCCEx_PeriphCLKConfig+0x204>
 80075e0:	e8df f013 	tbh	[pc, r3, lsl #1]
 80075e4:	002d0026 	.word	0x002d0026
 80075e8:	002b00e0 	.word	0x002b00e0
 80075ec:	002b      	.short	0x002b
    switch (PeriphClkInit->SpdifrxClockSelection)
 80075ee:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80075f2:	d1ec      	bne.n	80075ce <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 80075f4:	4aa9      	ldr	r2, [pc, #676]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80075f6:	2600      	movs	r6, #0
 80075f8:	6ea9      	ldr	r1, [r5, #104]	; 0x68
 80075fa:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80075fc:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8007600:	430b      	orrs	r3, r1
 8007602:	6513      	str	r3, [r2, #80]	; 0x50
 8007604:	e7e4      	b.n	80075d0 <HAL_RCCEx_PeriphCLKConfig+0x24>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007606:	4aa5      	ldr	r2, [pc, #660]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007608:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800760a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800760e:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007610:	e7f0      	b.n	80075f4 <HAL_RCCEx_PeriphCLKConfig+0x48>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007612:	2102      	movs	r1, #2
 8007614:	f105 0008 	add.w	r0, r5, #8
 8007618:	f7ff fed8 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800761c:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 800761e:	2800      	cmp	r0, #0
 8007620:	d1d6      	bne.n	80075d0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007622:	e7e7      	b.n	80075f4 <HAL_RCCEx_PeriphCLKConfig+0x48>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007624:	2102      	movs	r1, #2
 8007626:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800762a:	f7ff ff47 	bl	80074bc <RCCEx_PLL3_Config>
 800762e:	e7f5      	b.n	800761c <HAL_RCCEx_PeriphCLKConfig+0x70>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007630:	4a9a      	ldr	r2, [pc, #616]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007632:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007634:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007638:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch (PeriphClkInit->Sai1ClockSelection)
 800763a:	4634      	mov	r4, r6
 800763c:	e005      	b.n	800764a <HAL_RCCEx_PeriphCLKConfig+0x9e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800763e:	2100      	movs	r1, #0
 8007640:	f105 0008 	add.w	r0, r5, #8
 8007644:	f7ff fec2 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007648:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 800764a:	2c00      	cmp	r4, #0
 800764c:	f040 80b3 	bne.w	80077b6 <HAL_RCCEx_PeriphCLKConfig+0x20a>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007650:	4a92      	ldr	r2, [pc, #584]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007652:	6da9      	ldr	r1, [r5, #88]	; 0x58
 8007654:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007656:	f023 0307 	bic.w	r3, r3, #7
 800765a:	430b      	orrs	r3, r1
 800765c:	6513      	str	r3, [r2, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
 800765e:	682b      	ldr	r3, [r5, #0]
 8007660:	059a      	lsls	r2, r3, #22
 8007662:	d50d      	bpl.n	8007680 <HAL_RCCEx_PeriphCLKConfig+0xd4>
    switch (PeriphClkInit->Sai23ClockSelection)
 8007664:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8007666:	2b80      	cmp	r3, #128	; 0x80
 8007668:	f000 80c3 	beq.w	80077f2 <HAL_RCCEx_PeriphCLKConfig+0x246>
 800766c:	f200 80a5 	bhi.w	80077ba <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8007670:	2b00      	cmp	r3, #0
 8007672:	f000 80b1 	beq.w	80077d8 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8007676:	2b40      	cmp	r3, #64	; 0x40
 8007678:	f000 80b4 	beq.w	80077e4 <HAL_RCCEx_PeriphCLKConfig+0x238>
 800767c:	2601      	movs	r6, #1
 800767e:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8007680:	682b      	ldr	r3, [r5, #0]
 8007682:	055b      	lsls	r3, r3, #21
 8007684:	d510      	bpl.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xfc>
    switch (PeriphClkInit->Sai4AClockSelection)
 8007686:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
 800768a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800768e:	f000 80d6 	beq.w	800783e <HAL_RCCEx_PeriphCLKConfig+0x292>
 8007692:	f200 80b6 	bhi.w	8007802 <HAL_RCCEx_PeriphCLKConfig+0x256>
 8007696:	2b00      	cmp	r3, #0
 8007698:	f000 80c4 	beq.w	8007824 <HAL_RCCEx_PeriphCLKConfig+0x278>
 800769c:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80076a0:	f000 80c6 	beq.w	8007830 <HAL_RCCEx_PeriphCLKConfig+0x284>
 80076a4:	2601      	movs	r6, #1
 80076a6:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 80076a8:	682b      	ldr	r3, [r5, #0]
 80076aa:	051f      	lsls	r7, r3, #20
 80076ac:	d510      	bpl.n	80076d0 <HAL_RCCEx_PeriphCLKConfig+0x124>
    switch (PeriphClkInit->Sai4BClockSelection)
 80076ae:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
 80076b2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80076b6:	f000 80e8 	beq.w	800788a <HAL_RCCEx_PeriphCLKConfig+0x2de>
 80076ba:	f200 80c8 	bhi.w	800784e <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 80076be:	2b00      	cmp	r3, #0
 80076c0:	f000 80d6 	beq.w	8007870 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 80076c4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80076c8:	f000 80d8 	beq.w	800787c <HAL_RCCEx_PeriphCLKConfig+0x2d0>
 80076cc:	2601      	movs	r6, #1
 80076ce:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
 80076d0:	682b      	ldr	r3, [r5, #0]
 80076d2:	0198      	lsls	r0, r3, #6
 80076d4:	d50d      	bpl.n	80076f2 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
 80076d6:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80076d8:	2b20      	cmp	r3, #32
 80076da:	f000 80f3 	beq.w	80078c4 <HAL_RCCEx_PeriphCLKConfig+0x318>
 80076de:	f200 80df 	bhi.w	80078a0 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	f000 80df 	beq.w	80078a6 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 80076e8:	2b10      	cmp	r3, #16
 80076ea:	f000 80e5 	beq.w	80078b8 <HAL_RCCEx_PeriphCLKConfig+0x30c>
 80076ee:	2601      	movs	r6, #1
 80076f0:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 80076f2:	682b      	ldr	r3, [r5, #0]
 80076f4:	04d9      	lsls	r1, r3, #19
 80076f6:	d50f      	bpl.n	8007718 <HAL_RCCEx_PeriphCLKConfig+0x16c>
    switch (PeriphClkInit->Spi123ClockSelection)
 80076f8:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80076fa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80076fe:	f000 8107 	beq.w	8007910 <HAL_RCCEx_PeriphCLKConfig+0x364>
 8007702:	f200 80e8 	bhi.w	80078d6 <HAL_RCCEx_PeriphCLKConfig+0x32a>
 8007706:	2b00      	cmp	r3, #0
 8007708:	f000 80f5 	beq.w	80078f6 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 800770c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007710:	f000 80f7 	beq.w	8007902 <HAL_RCCEx_PeriphCLKConfig+0x356>
 8007714:	2601      	movs	r6, #1
 8007716:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8007718:	682b      	ldr	r3, [r5, #0]
 800771a:	049a      	lsls	r2, r3, #18
 800771c:	d50f      	bpl.n	800773e <HAL_RCCEx_PeriphCLKConfig+0x192>
    switch (PeriphClkInit->Spi45ClockSelection)
 800771e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007720:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8007724:	f000 8115 	beq.w	8007952 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 8007728:	f200 80fa 	bhi.w	8007920 <HAL_RCCEx_PeriphCLKConfig+0x374>
 800772c:	2b00      	cmp	r3, #0
 800772e:	f000 8100 	beq.w	8007932 <HAL_RCCEx_PeriphCLKConfig+0x386>
 8007732:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007736:	f000 8105 	beq.w	8007944 <HAL_RCCEx_PeriphCLKConfig+0x398>
 800773a:	2601      	movs	r6, #1
 800773c:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 800773e:	682b      	ldr	r3, [r5, #0]
 8007740:	045b      	lsls	r3, r3, #17
 8007742:	d510      	bpl.n	8007766 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    switch (PeriphClkInit->Spi6ClockSelection)
 8007744:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
 8007748:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800774c:	f000 8123 	beq.w	8007996 <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8007750:	f200 8107 	bhi.w	8007962 <HAL_RCCEx_PeriphCLKConfig+0x3b6>
 8007754:	2b00      	cmp	r3, #0
 8007756:	f000 810d 	beq.w	8007974 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 800775a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800775e:	f000 8113 	beq.w	8007988 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 8007762:	2601      	movs	r6, #1
 8007764:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8007766:	682b      	ldr	r3, [r5, #0]
 8007768:	041f      	lsls	r7, r3, #16
 800776a:	d50d      	bpl.n	8007788 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (PeriphClkInit->FdcanClockSelection)
 800776c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800776e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007772:	f000 8118 	beq.w	80079a6 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 8007776:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800777a:	f000 8122 	beq.w	80079c2 <HAL_RCCEx_PeriphCLKConfig+0x416>
 800777e:	2b00      	cmp	r3, #0
 8007780:	f000 8116 	beq.w	80079b0 <HAL_RCCEx_PeriphCLKConfig+0x404>
 8007784:	2601      	movs	r6, #1
 8007786:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 8007788:	682b      	ldr	r3, [r5, #0]
 800778a:	01d8      	lsls	r0, r3, #7
 800778c:	f140 8130 	bpl.w	80079f0 <HAL_RCCEx_PeriphCLKConfig+0x444>
    switch (PeriphClkInit->FmcClockSelection)
 8007790:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8007792:	2b03      	cmp	r3, #3
 8007794:	f200 8171 	bhi.w	8007a7a <HAL_RCCEx_PeriphCLKConfig+0x4ce>
 8007798:	e8df f013 	tbh	[pc, r3, lsl #1]
 800779c:	011c0121 	.word	0x011c0121
 80077a0:	01210168 	.word	0x01210168
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80077a4:	2100      	movs	r1, #0
 80077a6:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80077aa:	f7ff fe87 	bl	80074bc <RCCEx_PLL3_Config>
 80077ae:	e74b      	b.n	8007648 <HAL_RCCEx_PeriphCLKConfig+0x9c>
    switch (PeriphClkInit->Sai1ClockSelection)
 80077b0:	2601      	movs	r6, #1
 80077b2:	4634      	mov	r4, r6
 80077b4:	e753      	b.n	800765e <HAL_RCCEx_PeriphCLKConfig+0xb2>
 80077b6:	4626      	mov	r6, r4
 80077b8:	e751      	b.n	800765e <HAL_RCCEx_PeriphCLKConfig+0xb2>
    switch (PeriphClkInit->Sai23ClockSelection)
 80077ba:	2bc0      	cmp	r3, #192	; 0xc0
 80077bc:	d003      	beq.n	80077c6 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 80077be:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80077c2:	f47f af5b 	bne.w	800767c <HAL_RCCEx_PeriphCLKConfig+0xd0>
    if (ret == HAL_OK)
 80077c6:	b9d4      	cbnz	r4, 80077fe <HAL_RCCEx_PeriphCLKConfig+0x252>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
 80077c8:	4a34      	ldr	r2, [pc, #208]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80077ca:	6de9      	ldr	r1, [r5, #92]	; 0x5c
 80077cc:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80077ce:	f423 73e0 	bic.w	r3, r3, #448	; 0x1c0
 80077d2:	430b      	orrs	r3, r1
 80077d4:	6513      	str	r3, [r2, #80]	; 0x50
 80077d6:	e753      	b.n	8007680 <HAL_RCCEx_PeriphCLKConfig+0xd4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80077d8:	4a30      	ldr	r2, [pc, #192]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80077da:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80077dc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80077e0:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 80077e2:	e7f0      	b.n	80077c6 <HAL_RCCEx_PeriphCLKConfig+0x21a>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80077e4:	2100      	movs	r1, #0
 80077e6:	f105 0008 	add.w	r0, r5, #8
 80077ea:	f7ff fdef 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80077ee:	4604      	mov	r4, r0
        break;
 80077f0:	e7e9      	b.n	80077c6 <HAL_RCCEx_PeriphCLKConfig+0x21a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80077f2:	2100      	movs	r1, #0
 80077f4:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80077f8:	f7ff fe60 	bl	80074bc <RCCEx_PLL3_Config>
 80077fc:	e7f7      	b.n	80077ee <HAL_RCCEx_PeriphCLKConfig+0x242>
 80077fe:	4626      	mov	r6, r4
 8007800:	e73e      	b.n	8007680 <HAL_RCCEx_PeriphCLKConfig+0xd4>
    switch (PeriphClkInit->Sai4AClockSelection)
 8007802:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8007806:	d003      	beq.n	8007810 <HAL_RCCEx_PeriphCLKConfig+0x264>
 8007808:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800780c:	f47f af4a 	bne.w	80076a4 <HAL_RCCEx_PeriphCLKConfig+0xf8>
    if (ret == HAL_OK)
 8007810:	b9dc      	cbnz	r4, 800784a <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8007812:	4a22      	ldr	r2, [pc, #136]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007814:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 8007818:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800781a:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 800781e:	430b      	orrs	r3, r1
 8007820:	6593      	str	r3, [r2, #88]	; 0x58
 8007822:	e741      	b.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xfc>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007824:	4a1d      	ldr	r2, [pc, #116]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007826:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007828:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800782c:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 800782e:	e7ef      	b.n	8007810 <HAL_RCCEx_PeriphCLKConfig+0x264>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007830:	2100      	movs	r1, #0
 8007832:	f105 0008 	add.w	r0, r5, #8
 8007836:	f7ff fdc9 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800783a:	4604      	mov	r4, r0
        break;
 800783c:	e7e8      	b.n	8007810 <HAL_RCCEx_PeriphCLKConfig+0x264>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800783e:	2100      	movs	r1, #0
 8007840:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007844:	f7ff fe3a 	bl	80074bc <RCCEx_PLL3_Config>
 8007848:	e7f7      	b.n	800783a <HAL_RCCEx_PeriphCLKConfig+0x28e>
 800784a:	4626      	mov	r6, r4
 800784c:	e72c      	b.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xfc>
    switch (PeriphClkInit->Sai4BClockSelection)
 800784e:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8007852:	d003      	beq.n	800785c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8007854:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8007858:	f47f af38 	bne.w	80076cc <HAL_RCCEx_PeriphCLKConfig+0x120>
    if (ret == HAL_OK)
 800785c:	b9dc      	cbnz	r4, 8007896 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 800785e:	4a0f      	ldr	r2, [pc, #60]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007860:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
 8007864:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007866:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 800786a:	430b      	orrs	r3, r1
 800786c:	6593      	str	r3, [r2, #88]	; 0x58
 800786e:	e72f      	b.n	80076d0 <HAL_RCCEx_PeriphCLKConfig+0x124>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007870:	4a0a      	ldr	r2, [pc, #40]	; (800789c <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007872:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007874:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007878:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 800787a:	e7ef      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800787c:	2100      	movs	r1, #0
 800787e:	f105 0008 	add.w	r0, r5, #8
 8007882:	f7ff fda3 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007886:	4604      	mov	r4, r0
        break;
 8007888:	e7e8      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800788a:	2100      	movs	r1, #0
 800788c:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007890:	f7ff fe14 	bl	80074bc <RCCEx_PLL3_Config>
 8007894:	e7f7      	b.n	8007886 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8007896:	4626      	mov	r6, r4
 8007898:	e71a      	b.n	80076d0 <HAL_RCCEx_PeriphCLKConfig+0x124>
 800789a:	bf00      	nop
 800789c:	58024400 	.word	0x58024400
    switch (PeriphClkInit->QspiClockSelection)
 80078a0:	2b30      	cmp	r3, #48	; 0x30
 80078a2:	f47f af24 	bne.w	80076ee <HAL_RCCEx_PeriphCLKConfig+0x142>
    if (ret == HAL_OK)
 80078a6:	b9a4      	cbnz	r4, 80078d2 <HAL_RCCEx_PeriphCLKConfig+0x326>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
 80078a8:	4aa0      	ldr	r2, [pc, #640]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80078aa:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
 80078ac:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80078ae:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80078b2:	430b      	orrs	r3, r1
 80078b4:	64d3      	str	r3, [r2, #76]	; 0x4c
 80078b6:	e71c      	b.n	80076f2 <HAL_RCCEx_PeriphCLKConfig+0x146>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80078b8:	4a9c      	ldr	r2, [pc, #624]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80078ba:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80078bc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80078c0:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 80078c2:	e7f0      	b.n	80078a6 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80078c4:	2102      	movs	r1, #2
 80078c6:	f105 0008 	add.w	r0, r5, #8
 80078ca:	f7ff fd7f 	bl	80073cc <RCCEx_PLL2_Config>
 80078ce:	4604      	mov	r4, r0
        break;
 80078d0:	e7e9      	b.n	80078a6 <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 80078d2:	4626      	mov	r6, r4
 80078d4:	e70d      	b.n	80076f2 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Spi123ClockSelection)
 80078d6:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80078da:	d003      	beq.n	80078e4 <HAL_RCCEx_PeriphCLKConfig+0x338>
 80078dc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80078e0:	f47f af18 	bne.w	8007714 <HAL_RCCEx_PeriphCLKConfig+0x168>
    if (ret == HAL_OK)
 80078e4:	b9d4      	cbnz	r4, 800791c <HAL_RCCEx_PeriphCLKConfig+0x370>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 80078e6:	4a91      	ldr	r2, [pc, #580]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80078e8:	6e29      	ldr	r1, [r5, #96]	; 0x60
 80078ea:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80078ec:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80078f0:	430b      	orrs	r3, r1
 80078f2:	6513      	str	r3, [r2, #80]	; 0x50
 80078f4:	e710      	b.n	8007718 <HAL_RCCEx_PeriphCLKConfig+0x16c>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80078f6:	4a8d      	ldr	r2, [pc, #564]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80078f8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80078fa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80078fe:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 8007900:	e7f0      	b.n	80078e4 <HAL_RCCEx_PeriphCLKConfig+0x338>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007902:	2100      	movs	r1, #0
 8007904:	f105 0008 	add.w	r0, r5, #8
 8007908:	f7ff fd60 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800790c:	4604      	mov	r4, r0
        break;
 800790e:	e7e9      	b.n	80078e4 <HAL_RCCEx_PeriphCLKConfig+0x338>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007910:	2100      	movs	r1, #0
 8007912:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007916:	f7ff fdd1 	bl	80074bc <RCCEx_PLL3_Config>
 800791a:	e7f7      	b.n	800790c <HAL_RCCEx_PeriphCLKConfig+0x360>
 800791c:	4626      	mov	r6, r4
 800791e:	e6fb      	b.n	8007718 <HAL_RCCEx_PeriphCLKConfig+0x16c>
    switch (PeriphClkInit->Spi45ClockSelection)
 8007920:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8007924:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 8007928:	d003      	beq.n	8007932 <HAL_RCCEx_PeriphCLKConfig+0x386>
 800792a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800792e:	f47f af04 	bne.w	800773a <HAL_RCCEx_PeriphCLKConfig+0x18e>
    if (ret == HAL_OK)
 8007932:	b9a4      	cbnz	r4, 800795e <HAL_RCCEx_PeriphCLKConfig+0x3b2>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8007934:	4a7d      	ldr	r2, [pc, #500]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007936:	6e69      	ldr	r1, [r5, #100]	; 0x64
 8007938:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800793a:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 800793e:	430b      	orrs	r3, r1
 8007940:	6513      	str	r3, [r2, #80]	; 0x50
 8007942:	e6fc      	b.n	800773e <HAL_RCCEx_PeriphCLKConfig+0x192>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007944:	2101      	movs	r1, #1
 8007946:	f105 0008 	add.w	r0, r5, #8
 800794a:	f7ff fd3f 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800794e:	4604      	mov	r4, r0
        break;
 8007950:	e7ef      	b.n	8007932 <HAL_RCCEx_PeriphCLKConfig+0x386>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007952:	2101      	movs	r1, #1
 8007954:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007958:	f7ff fdb0 	bl	80074bc <RCCEx_PLL3_Config>
 800795c:	e7f7      	b.n	800794e <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 800795e:	4626      	mov	r6, r4
 8007960:	e6ed      	b.n	800773e <HAL_RCCEx_PeriphCLKConfig+0x192>
    switch (PeriphClkInit->Spi6ClockSelection)
 8007962:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8007966:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800796a:	d003      	beq.n	8007974 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 800796c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007970:	f47f aef7 	bne.w	8007762 <HAL_RCCEx_PeriphCLKConfig+0x1b6>
    if (ret == HAL_OK)
 8007974:	b9ac      	cbnz	r4, 80079a2 <HAL_RCCEx_PeriphCLKConfig+0x3f6>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8007976:	4a6d      	ldr	r2, [pc, #436]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007978:	f8d5 10b0 	ldr.w	r1, [r5, #176]	; 0xb0
 800797c:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800797e:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007982:	430b      	orrs	r3, r1
 8007984:	6593      	str	r3, [r2, #88]	; 0x58
 8007986:	e6ee      	b.n	8007766 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007988:	2101      	movs	r1, #1
 800798a:	f105 0008 	add.w	r0, r5, #8
 800798e:	f7ff fd1d 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007992:	4604      	mov	r4, r0
        break;
 8007994:	e7ee      	b.n	8007974 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007996:	2101      	movs	r1, #1
 8007998:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800799c:	f7ff fd8e 	bl	80074bc <RCCEx_PLL3_Config>
 80079a0:	e7f7      	b.n	8007992 <HAL_RCCEx_PeriphCLKConfig+0x3e6>
 80079a2:	4626      	mov	r6, r4
 80079a4:	e6df      	b.n	8007766 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80079a6:	4a61      	ldr	r2, [pc, #388]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80079a8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80079aa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80079ae:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 80079b0:	b974      	cbnz	r4, 80079d0 <HAL_RCCEx_PeriphCLKConfig+0x424>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 80079b2:	4a5e      	ldr	r2, [pc, #376]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80079b4:	6f29      	ldr	r1, [r5, #112]	; 0x70
 80079b6:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80079b8:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80079bc:	430b      	orrs	r3, r1
 80079be:	6513      	str	r3, [r2, #80]	; 0x50
 80079c0:	e6e2      	b.n	8007788 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80079c2:	2101      	movs	r1, #1
 80079c4:	f105 0008 	add.w	r0, r5, #8
 80079c8:	f7ff fd00 	bl	80073cc <RCCEx_PLL2_Config>
 80079cc:	4604      	mov	r4, r0
        break;
 80079ce:	e7ef      	b.n	80079b0 <HAL_RCCEx_PeriphCLKConfig+0x404>
 80079d0:	4626      	mov	r6, r4
 80079d2:	e6d9      	b.n	8007788 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80079d4:	4a55      	ldr	r2, [pc, #340]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80079d6:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80079d8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80079dc:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 80079de:	2c00      	cmp	r4, #0
 80079e0:	d14e      	bne.n	8007a80 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 80079e2:	4a52      	ldr	r2, [pc, #328]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80079e4:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 80079e6:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80079e8:	f023 0303 	bic.w	r3, r3, #3
 80079ec:	430b      	orrs	r3, r1
 80079ee:	64d3      	str	r3, [r2, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80079f0:	682b      	ldr	r3, [r5, #0]
 80079f2:	0259      	lsls	r1, r3, #9
 80079f4:	d54e      	bpl.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x4e8>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80079f6:	4f4e      	ldr	r7, [pc, #312]	; (8007b30 <HAL_RCCEx_PeriphCLKConfig+0x584>)
 80079f8:	683b      	ldr	r3, [r7, #0]
 80079fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80079fe:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 8007a00:	f7fd fb46 	bl	8005090 <HAL_GetTick>
 8007a04:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007a06:	683b      	ldr	r3, [r7, #0]
 8007a08:	05da      	lsls	r2, r3, #23
 8007a0a:	d53b      	bpl.n	8007a84 <HAL_RCCEx_PeriphCLKConfig+0x4d8>
    if (ret == HAL_OK)
 8007a0c:	2c00      	cmp	r4, #0
 8007a0e:	d16d      	bne.n	8007aec <HAL_RCCEx_PeriphCLKConfig+0x540>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8007a10:	4b46      	ldr	r3, [pc, #280]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a12:	f8d5 00b4 	ldr.w	r0, [r5, #180]	; 0xb4
 8007a16:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8007a18:	4042      	eors	r2, r0
 8007a1a:	f412 7f40 	tst.w	r2, #768	; 0x300
 8007a1e:	d00b      	beq.n	8007a38 <HAL_RCCEx_PeriphCLKConfig+0x48c>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007a20:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
 8007a22:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007a24:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8007a28:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8007a2c:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 8007a2e:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8007a30:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8007a34:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
 8007a36:	671a      	str	r2, [r3, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 8007a38:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8007a3c:	d041      	beq.n	8007ac2 <HAL_RCCEx_PeriphCLKConfig+0x516>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007a3e:	f8d5 30b4 	ldr.w	r3, [r5, #180]	; 0xb4
 8007a42:	493a      	ldr	r1, [pc, #232]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a44:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007a48:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007a4c:	d14a      	bne.n	8007ae4 <HAL_RCCEx_PeriphCLKConfig+0x538>
 8007a4e:	6908      	ldr	r0, [r1, #16]
 8007a50:	4a38      	ldr	r2, [pc, #224]	; (8007b34 <HAL_RCCEx_PeriphCLKConfig+0x588>)
 8007a52:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8007a56:	ea02 1213 	and.w	r2, r2, r3, lsr #4
 8007a5a:	4302      	orrs	r2, r0
 8007a5c:	610a      	str	r2, [r1, #16]
 8007a5e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007a62:	4a32      	ldr	r2, [pc, #200]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a64:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007a66:	430b      	orrs	r3, r1
 8007a68:	6713      	str	r3, [r2, #112]	; 0x70
 8007a6a:	e013      	b.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x4e8>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007a6c:	2102      	movs	r1, #2
 8007a6e:	f105 0008 	add.w	r0, r5, #8
 8007a72:	f7ff fcab 	bl	80073cc <RCCEx_PLL2_Config>
 8007a76:	4604      	mov	r4, r0
        break;
 8007a78:	e7b1      	b.n	80079de <HAL_RCCEx_PeriphCLKConfig+0x432>
    switch (PeriphClkInit->FmcClockSelection)
 8007a7a:	2601      	movs	r6, #1
 8007a7c:	4634      	mov	r4, r6
 8007a7e:	e7b7      	b.n	80079f0 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8007a80:	4626      	mov	r6, r4
 8007a82:	e7b5      	b.n	80079f0 <HAL_RCCEx_PeriphCLKConfig+0x444>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007a84:	f7fd fb04 	bl	8005090 <HAL_GetTick>
 8007a88:	eba0 0008 	sub.w	r0, r0, r8
 8007a8c:	2864      	cmp	r0, #100	; 0x64
 8007a8e:	d9ba      	bls.n	8007a06 <HAL_RCCEx_PeriphCLKConfig+0x45a>
        ret = HAL_TIMEOUT;
 8007a90:	2603      	movs	r6, #3
 8007a92:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8007a94:	682b      	ldr	r3, [r5, #0]
 8007a96:	07d8      	lsls	r0, r3, #31
 8007a98:	d508      	bpl.n	8007aac <HAL_RCCEx_PeriphCLKConfig+0x500>
    switch (PeriphClkInit->Usart16ClockSelection)
 8007a9a:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 8007a9c:	2b10      	cmp	r3, #16
 8007a9e:	d03d      	beq.n	8007b1c <HAL_RCCEx_PeriphCLKConfig+0x570>
 8007aa0:	d826      	bhi.n	8007af0 <HAL_RCCEx_PeriphCLKConfig+0x544>
 8007aa2:	b35b      	cbz	r3, 8007afc <HAL_RCCEx_PeriphCLKConfig+0x550>
 8007aa4:	2b08      	cmp	r3, #8
 8007aa6:	d032      	beq.n	8007b0e <HAL_RCCEx_PeriphCLKConfig+0x562>
 8007aa8:	2601      	movs	r6, #1
 8007aaa:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8007aac:	682b      	ldr	r3, [r5, #0]
 8007aae:	0799      	lsls	r1, r3, #30
 8007ab0:	d550      	bpl.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
    switch (PeriphClkInit->Usart234578ClockSelection)
 8007ab2:	6fab      	ldr	r3, [r5, #120]	; 0x78
 8007ab4:	2b05      	cmp	r3, #5
 8007ab6:	d863      	bhi.n	8007b80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 8007ab8:	e8df f003 	tbb	[pc, r3]
 8007abc:	445c3e44 	.word	0x445c3e44
 8007ac0:	4444      	.short	0x4444
        tickstart = HAL_GetTick();
 8007ac2:	f7fd fae5 	bl	8005090 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007ac6:	f8df 8064 	ldr.w	r8, [pc, #100]	; 8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>
        tickstart = HAL_GetTick();
 8007aca:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007acc:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007ad0:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
 8007ad4:	079b      	lsls	r3, r3, #30
 8007ad6:	d4b2      	bmi.n	8007a3e <HAL_RCCEx_PeriphCLKConfig+0x492>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007ad8:	f7fd fada 	bl	8005090 <HAL_GetTick>
 8007adc:	1bc0      	subs	r0, r0, r7
 8007ade:	4548      	cmp	r0, r9
 8007ae0:	d9f6      	bls.n	8007ad0 <HAL_RCCEx_PeriphCLKConfig+0x524>
 8007ae2:	e7d5      	b.n	8007a90 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007ae4:	690a      	ldr	r2, [r1, #16]
 8007ae6:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8007aea:	e7b7      	b.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8007aec:	4626      	mov	r6, r4
 8007aee:	e7d1      	b.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x4e8>
    switch (PeriphClkInit->Usart16ClockSelection)
 8007af0:	f023 0208 	bic.w	r2, r3, #8
 8007af4:	2a20      	cmp	r2, #32
 8007af6:	d001      	beq.n	8007afc <HAL_RCCEx_PeriphCLKConfig+0x550>
 8007af8:	2b18      	cmp	r3, #24
 8007afa:	d1d5      	bne.n	8007aa8 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    if (ret == HAL_OK)
 8007afc:	b9a4      	cbnz	r4, 8007b28 <HAL_RCCEx_PeriphCLKConfig+0x57c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 8007afe:	4a0b      	ldr	r2, [pc, #44]	; (8007b2c <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007b00:	6fe9      	ldr	r1, [r5, #124]	; 0x7c
 8007b02:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007b04:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8007b08:	430b      	orrs	r3, r1
 8007b0a:	6553      	str	r3, [r2, #84]	; 0x54
 8007b0c:	e7ce      	b.n	8007aac <HAL_RCCEx_PeriphCLKConfig+0x500>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007b0e:	2101      	movs	r1, #1
 8007b10:	f105 0008 	add.w	r0, r5, #8
 8007b14:	f7ff fc5a 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007b18:	4604      	mov	r4, r0
        break;
 8007b1a:	e7ef      	b.n	8007afc <HAL_RCCEx_PeriphCLKConfig+0x550>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007b1c:	2101      	movs	r1, #1
 8007b1e:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007b22:	f7ff fccb 	bl	80074bc <RCCEx_PLL3_Config>
 8007b26:	e7f7      	b.n	8007b18 <HAL_RCCEx_PeriphCLKConfig+0x56c>
 8007b28:	4626      	mov	r6, r4
 8007b2a:	e7bf      	b.n	8007aac <HAL_RCCEx_PeriphCLKConfig+0x500>
 8007b2c:	58024400 	.word	0x58024400
 8007b30:	58024800 	.word	0x58024800
 8007b34:	00ffffcf 	.word	0x00ffffcf
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007b38:	2101      	movs	r1, #1
 8007b3a:	f105 0008 	add.w	r0, r5, #8
 8007b3e:	f7ff fc45 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007b42:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007b44:	b9fc      	cbnz	r4, 8007b86 <HAL_RCCEx_PeriphCLKConfig+0x5da>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8007b46:	4a11      	ldr	r2, [pc, #68]	; (8007b8c <HAL_RCCEx_PeriphCLKConfig+0x5e0>)
 8007b48:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 8007b4a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007b4c:	f023 0307 	bic.w	r3, r3, #7
 8007b50:	430b      	orrs	r3, r1
 8007b52:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8007b54:	682b      	ldr	r3, [r5, #0]
 8007b56:	075a      	lsls	r2, r3, #29
 8007b58:	d52b      	bpl.n	8007bb2 <HAL_RCCEx_PeriphCLKConfig+0x606>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8007b5a:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
 8007b5e:	2b05      	cmp	r3, #5
 8007b60:	f200 817c 	bhi.w	8007e5c <HAL_RCCEx_PeriphCLKConfig+0x8b0>
 8007b64:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007b68:	0014001a 	.word	0x0014001a
 8007b6c:	001a0174 	.word	0x001a0174
 8007b70:	001a001a 	.word	0x001a001a
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007b74:	2101      	movs	r1, #1
 8007b76:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007b7a:	f7ff fc9f 	bl	80074bc <RCCEx_PLL3_Config>
 8007b7e:	e7e0      	b.n	8007b42 <HAL_RCCEx_PeriphCLKConfig+0x596>
    switch (PeriphClkInit->Usart234578ClockSelection)
 8007b80:	2601      	movs	r6, #1
 8007b82:	4634      	mov	r4, r6
 8007b84:	e7e6      	b.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8007b86:	4626      	mov	r6, r4
 8007b88:	e7e4      	b.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8007b8a:	bf00      	nop
 8007b8c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007b90:	2101      	movs	r1, #1
 8007b92:	f105 0008 	add.w	r0, r5, #8
 8007b96:	f7ff fc19 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007b9a:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007b9c:	2c00      	cmp	r4, #0
 8007b9e:	f040 8160 	bne.w	8007e62 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8007ba2:	4aaa      	ldr	r2, [pc, #680]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007ba4:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
 8007ba8:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007baa:	f023 0307 	bic.w	r3, r3, #7
 8007bae:	430b      	orrs	r3, r1
 8007bb0:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8007bb2:	682b      	ldr	r3, [r5, #0]
 8007bb4:	069b      	lsls	r3, r3, #26
 8007bb6:	d510      	bpl.n	8007bda <HAL_RCCEx_PeriphCLKConfig+0x62e>
    switch (PeriphClkInit->Lptim1ClockSelection)
 8007bb8:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8007bbc:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007bc0:	f000 816b 	beq.w	8007e9a <HAL_RCCEx_PeriphCLKConfig+0x8ee>
 8007bc4:	f200 814f 	bhi.w	8007e66 <HAL_RCCEx_PeriphCLKConfig+0x8ba>
 8007bc8:	2b00      	cmp	r3, #0
 8007bca:	f000 8155 	beq.w	8007e78 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 8007bce:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007bd2:	f000 815b 	beq.w	8007e8c <HAL_RCCEx_PeriphCLKConfig+0x8e0>
 8007bd6:	2601      	movs	r6, #1
 8007bd8:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8007bda:	682b      	ldr	r3, [r5, #0]
 8007bdc:	065f      	lsls	r7, r3, #25
 8007bde:	d510      	bpl.n	8007c02 <HAL_RCCEx_PeriphCLKConfig+0x656>
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007be0:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8007be4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007be8:	f000 8179 	beq.w	8007ede <HAL_RCCEx_PeriphCLKConfig+0x932>
 8007bec:	f200 815d 	bhi.w	8007eaa <HAL_RCCEx_PeriphCLKConfig+0x8fe>
 8007bf0:	2b00      	cmp	r3, #0
 8007bf2:	f000 8163 	beq.w	8007ebc <HAL_RCCEx_PeriphCLKConfig+0x910>
 8007bf6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007bfa:	f000 8169 	beq.w	8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x924>
 8007bfe:	2601      	movs	r6, #1
 8007c00:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8007c02:	682b      	ldr	r3, [r5, #0]
 8007c04:	0618      	lsls	r0, r3, #24
 8007c06:	d510      	bpl.n	8007c2a <HAL_RCCEx_PeriphCLKConfig+0x67e>
    switch (PeriphClkInit->Lptim345ClockSelection)
 8007c08:	f8d5 30a0 	ldr.w	r3, [r5, #160]	; 0xa0
 8007c0c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007c10:	f000 8187 	beq.w	8007f22 <HAL_RCCEx_PeriphCLKConfig+0x976>
 8007c14:	f200 816b 	bhi.w	8007eee <HAL_RCCEx_PeriphCLKConfig+0x942>
 8007c18:	2b00      	cmp	r3, #0
 8007c1a:	f000 8171 	beq.w	8007f00 <HAL_RCCEx_PeriphCLKConfig+0x954>
 8007c1e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007c22:	f000 8177 	beq.w	8007f14 <HAL_RCCEx_PeriphCLKConfig+0x968>
 8007c26:	2601      	movs	r6, #1
 8007c28:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
 8007c2a:	682b      	ldr	r3, [r5, #0]
 8007c2c:	0719      	lsls	r1, r3, #28
 8007c2e:	d514      	bpl.n	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x6ae>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
 8007c30:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 8007c34:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007c38:	d107      	bne.n	8007c4a <HAL_RCCEx_PeriphCLKConfig+0x69e>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007c3a:	2102      	movs	r1, #2
 8007c3c:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007c40:	f7ff fc3c 	bl	80074bc <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8007c44:	2800      	cmp	r0, #0
 8007c46:	bf18      	it	ne
 8007c48:	2601      	movne	r6, #1
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
 8007c4a:	4a80      	ldr	r2, [pc, #512]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007c4c:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
 8007c50:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007c52:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8007c56:	430b      	orrs	r3, r1
 8007c58:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8007c5a:	682b      	ldr	r3, [r5, #0]
 8007c5c:	06da      	lsls	r2, r3, #27
 8007c5e:	d514      	bpl.n	8007c8a <HAL_RCCEx_PeriphCLKConfig+0x6de>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 8007c60:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
 8007c64:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007c68:	d107      	bne.n	8007c7a <HAL_RCCEx_PeriphCLKConfig+0x6ce>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007c6a:	2102      	movs	r1, #2
 8007c6c:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007c70:	f7ff fc24 	bl	80074bc <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8007c74:	2800      	cmp	r0, #0
 8007c76:	bf18      	it	ne
 8007c78:	2601      	movne	r6, #1
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8007c7a:	4a74      	ldr	r2, [pc, #464]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007c7c:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
 8007c80:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007c82:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007c86:	430b      	orrs	r3, r1
 8007c88:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8007c8a:	682b      	ldr	r3, [r5, #0]
 8007c8c:	031b      	lsls	r3, r3, #12
 8007c8e:	d51b      	bpl.n	8007cc8 <HAL_RCCEx_PeriphCLKConfig+0x71c>
    switch (PeriphClkInit->AdcClockSelection)
 8007c90:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 8007c94:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8007c98:	f000 814b 	beq.w	8007f32 <HAL_RCCEx_PeriphCLKConfig+0x986>
 8007c9c:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
 8007ca0:	d007      	beq.n	8007cb2 <HAL_RCCEx_PeriphCLKConfig+0x706>
 8007ca2:	2900      	cmp	r1, #0
 8007ca4:	f040 814b 	bne.w	8007f3e <HAL_RCCEx_PeriphCLKConfig+0x992>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007ca8:	f105 0008 	add.w	r0, r5, #8
 8007cac:	f7ff fb8e 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007cb0:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007cb2:	2c00      	cmp	r4, #0
 8007cb4:	f040 8146 	bne.w	8007f44 <HAL_RCCEx_PeriphCLKConfig+0x998>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8007cb8:	4a64      	ldr	r2, [pc, #400]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007cba:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 8007cbe:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007cc0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007cc4:	430b      	orrs	r3, r1
 8007cc6:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8007cc8:	682b      	ldr	r3, [r5, #0]
 8007cca:	035f      	lsls	r7, r3, #13
 8007ccc:	d51c      	bpl.n	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x75c>
    switch (PeriphClkInit->UsbClockSelection)
 8007cce:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 8007cd2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007cd6:	f000 8137 	beq.w	8007f48 <HAL_RCCEx_PeriphCLKConfig+0x99c>
 8007cda:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007cde:	d008      	beq.n	8007cf2 <HAL_RCCEx_PeriphCLKConfig+0x746>
 8007ce0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007ce4:	f040 8137 	bne.w	8007f56 <HAL_RCCEx_PeriphCLKConfig+0x9aa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007ce8:	4a58      	ldr	r2, [pc, #352]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007cea:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007cec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007cf0:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007cf2:	2c00      	cmp	r4, #0
 8007cf4:	f040 8132 	bne.w	8007f5c <HAL_RCCEx_PeriphCLKConfig+0x9b0>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8007cf8:	4a54      	ldr	r2, [pc, #336]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007cfa:	f8d5 1088 	ldr.w	r1, [r5, #136]	; 0x88
 8007cfe:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007d00:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8007d04:	430b      	orrs	r3, r1
 8007d06:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8007d08:	682b      	ldr	r3, [r5, #0]
 8007d0a:	03d8      	lsls	r0, r3, #15
 8007d0c:	d509      	bpl.n	8007d22 <HAL_RCCEx_PeriphCLKConfig+0x776>
    switch (PeriphClkInit->SdmmcClockSelection)
 8007d0e:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8007d10:	2b00      	cmp	r3, #0
 8007d12:	f000 8125 	beq.w	8007f60 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
 8007d16:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007d1a:	f000 812f 	beq.w	8007f7c <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 8007d1e:	2601      	movs	r6, #1
 8007d20:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007d22:	682b      	ldr	r3, [r5, #0]
 8007d24:	0099      	lsls	r1, r3, #2
 8007d26:	d507      	bpl.n	8007d38 <HAL_RCCEx_PeriphCLKConfig+0x78c>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007d28:	2102      	movs	r1, #2
 8007d2a:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007d2e:	f7ff fbc5 	bl	80074bc <RCCEx_PLL3_Config>
      status = HAL_ERROR;
 8007d32:	2800      	cmp	r0, #0
 8007d34:	bf18      	it	ne
 8007d36:	2601      	movne	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007d38:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007d3c:	039a      	lsls	r2, r3, #14
 8007d3e:	d50b      	bpl.n	8007d58 <HAL_RCCEx_PeriphCLKConfig+0x7ac>
    switch (PeriphClkInit->RngClockSelection)
 8007d40:	f8d5 0080 	ldr.w	r0, [r5, #128]	; 0x80
 8007d44:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8007d48:	f000 812f 	beq.w	8007faa <HAL_RCCEx_PeriphCLKConfig+0x9fe>
 8007d4c:	f200 811f 	bhi.w	8007f8e <HAL_RCCEx_PeriphCLKConfig+0x9e2>
 8007d50:	2800      	cmp	r0, #0
 8007d52:	f000 8122 	beq.w	8007f9a <HAL_RCCEx_PeriphCLKConfig+0x9ee>
 8007d56:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8007d58:	02df      	lsls	r7, r3, #11
 8007d5a:	d506      	bpl.n	8007d6a <HAL_RCCEx_PeriphCLKConfig+0x7be>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8007d5c:	483b      	ldr	r0, [pc, #236]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d5e:	6f6c      	ldr	r4, [r5, #116]	; 0x74
 8007d60:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007d62:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8007d66:	4322      	orrs	r2, r4
 8007d68:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
 8007d6a:	00dc      	lsls	r4, r3, #3
 8007d6c:	d507      	bpl.n	8007d7e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
 8007d6e:	4837      	ldr	r0, [pc, #220]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d70:	f8d5 40b8 	ldr.w	r4, [r5, #184]	; 0xb8
 8007d74:	6902      	ldr	r2, [r0, #16]
 8007d76:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8007d7a:	4322      	orrs	r2, r4
 8007d7c:	6102      	str	r2, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8007d7e:	0298      	lsls	r0, r3, #10
 8007d80:	d506      	bpl.n	8007d90 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8007d82:	4832      	ldr	r0, [pc, #200]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d84:	6eec      	ldr	r4, [r5, #108]	; 0x6c
 8007d86:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007d88:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8007d8c:	4322      	orrs	r2, r4
 8007d8e:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8007d90:	005a      	lsls	r2, r3, #1
 8007d92:	d509      	bpl.n	8007da8 <HAL_RCCEx_PeriphCLKConfig+0x7fc>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007d94:	4a2d      	ldr	r2, [pc, #180]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d96:	6910      	ldr	r0, [r2, #16]
 8007d98:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 8007d9c:	6110      	str	r0, [r2, #16]
 8007d9e:	6910      	ldr	r0, [r2, #16]
 8007da0:	f8d5 40bc 	ldr.w	r4, [r5, #188]	; 0xbc
 8007da4:	4320      	orrs	r0, r4
 8007da6:	6110      	str	r0, [r2, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8007da8:	2b00      	cmp	r3, #0
 8007daa:	da06      	bge.n	8007dba <HAL_RCCEx_PeriphCLKConfig+0x80e>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8007dac:	4827      	ldr	r0, [pc, #156]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007dae:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8007db0:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8007db2:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007db6:	4322      	orrs	r2, r4
 8007db8:	64c2      	str	r2, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8007dba:	021b      	lsls	r3, r3, #8
 8007dbc:	d507      	bpl.n	8007dce <HAL_RCCEx_PeriphCLKConfig+0x822>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8007dbe:	4a23      	ldr	r2, [pc, #140]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007dc0:	f8d5 008c 	ldr.w	r0, [r5, #140]	; 0x8c
 8007dc4:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007dc6:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8007dca:	4303      	orrs	r3, r0
 8007dcc:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8007dce:	07cf      	lsls	r7, r1, #31
 8007dd0:	d507      	bpl.n	8007de2 <HAL_RCCEx_PeriphCLKConfig+0x836>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007dd2:	2100      	movs	r1, #0
 8007dd4:	f105 0008 	add.w	r0, r5, #8
 8007dd8:	f7ff faf8 	bl	80073cc <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007ddc:	2800      	cmp	r0, #0
 8007dde:	bf18      	it	ne
 8007de0:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8007de2:	686b      	ldr	r3, [r5, #4]
 8007de4:	079c      	lsls	r4, r3, #30
 8007de6:	d507      	bpl.n	8007df8 <HAL_RCCEx_PeriphCLKConfig+0x84c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007de8:	2101      	movs	r1, #1
 8007dea:	f105 0008 	add.w	r0, r5, #8
 8007dee:	f7ff faed 	bl	80073cc <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007df2:	2800      	cmp	r0, #0
 8007df4:	bf18      	it	ne
 8007df6:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8007df8:	686b      	ldr	r3, [r5, #4]
 8007dfa:	0758      	lsls	r0, r3, #29
 8007dfc:	d507      	bpl.n	8007e0e <HAL_RCCEx_PeriphCLKConfig+0x862>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007dfe:	2102      	movs	r1, #2
 8007e00:	f105 0008 	add.w	r0, r5, #8
 8007e04:	f7ff fae2 	bl	80073cc <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007e08:	2800      	cmp	r0, #0
 8007e0a:	bf18      	it	ne
 8007e0c:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8007e0e:	686b      	ldr	r3, [r5, #4]
 8007e10:	0719      	lsls	r1, r3, #28
 8007e12:	d507      	bpl.n	8007e24 <HAL_RCCEx_PeriphCLKConfig+0x878>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007e14:	2100      	movs	r1, #0
 8007e16:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007e1a:	f7ff fb4f 	bl	80074bc <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007e1e:	2800      	cmp	r0, #0
 8007e20:	bf18      	it	ne
 8007e22:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8007e24:	686b      	ldr	r3, [r5, #4]
 8007e26:	06da      	lsls	r2, r3, #27
 8007e28:	d507      	bpl.n	8007e3a <HAL_RCCEx_PeriphCLKConfig+0x88e>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007e2a:	2101      	movs	r1, #1
 8007e2c:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007e30:	f7ff fb44 	bl	80074bc <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007e34:	2800      	cmp	r0, #0
 8007e36:	bf18      	it	ne
 8007e38:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8007e3a:	686b      	ldr	r3, [r5, #4]
 8007e3c:	069b      	lsls	r3, r3, #26
 8007e3e:	f100 80bc 	bmi.w	8007fba <HAL_RCCEx_PeriphCLKConfig+0xa0e>
    return HAL_OK;
 8007e42:	1e30      	subs	r0, r6, #0
 8007e44:	bf18      	it	ne
 8007e46:	2001      	movne	r0, #1
}
 8007e48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007e4c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007e50:	2101      	movs	r1, #1
 8007e52:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007e56:	f7ff fb31 	bl	80074bc <RCCEx_PLL3_Config>
 8007e5a:	e69e      	b.n	8007b9a <HAL_RCCEx_PeriphCLKConfig+0x5ee>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8007e5c:	2601      	movs	r6, #1
 8007e5e:	4634      	mov	r4, r6
 8007e60:	e6a7      	b.n	8007bb2 <HAL_RCCEx_PeriphCLKConfig+0x606>
 8007e62:	4626      	mov	r6, r4
 8007e64:	e6a5      	b.n	8007bb2 <HAL_RCCEx_PeriphCLKConfig+0x606>
    switch (PeriphClkInit->Lptim1ClockSelection)
 8007e66:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8007e6a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8007e6e:	d003      	beq.n	8007e78 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 8007e70:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007e74:	f47f aeaf 	bne.w	8007bd6 <HAL_RCCEx_PeriphCLKConfig+0x62a>
    if (ret == HAL_OK)
 8007e78:	b9ac      	cbnz	r4, 8007ea6 <HAL_RCCEx_PeriphCLKConfig+0x8fa>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8007e7a:	4a55      	ldr	r2, [pc, #340]	; (8007fd0 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007e7c:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
 8007e80:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007e82:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007e86:	430b      	orrs	r3, r1
 8007e88:	6553      	str	r3, [r2, #84]	; 0x54
 8007e8a:	e6a6      	b.n	8007bda <HAL_RCCEx_PeriphCLKConfig+0x62e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007e8c:	2100      	movs	r1, #0
 8007e8e:	f105 0008 	add.w	r0, r5, #8
 8007e92:	f7ff fa9b 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007e96:	4604      	mov	r4, r0
        break;
 8007e98:	e7ee      	b.n	8007e78 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007e9a:	2102      	movs	r1, #2
 8007e9c:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007ea0:	f7ff fb0c 	bl	80074bc <RCCEx_PLL3_Config>
 8007ea4:	e7f7      	b.n	8007e96 <HAL_RCCEx_PeriphCLKConfig+0x8ea>
 8007ea6:	4626      	mov	r6, r4
 8007ea8:	e697      	b.n	8007bda <HAL_RCCEx_PeriphCLKConfig+0x62e>
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007eaa:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8007eae:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8007eb2:	d003      	beq.n	8007ebc <HAL_RCCEx_PeriphCLKConfig+0x910>
 8007eb4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8007eb8:	f47f aea1 	bne.w	8007bfe <HAL_RCCEx_PeriphCLKConfig+0x652>
    if (ret == HAL_OK)
 8007ebc:	b9ac      	cbnz	r4, 8007eea <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8007ebe:	4a44      	ldr	r2, [pc, #272]	; (8007fd0 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007ec0:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
 8007ec4:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007ec6:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007eca:	430b      	orrs	r3, r1
 8007ecc:	6593      	str	r3, [r2, #88]	; 0x58
 8007ece:	e698      	b.n	8007c02 <HAL_RCCEx_PeriphCLKConfig+0x656>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007ed0:	2100      	movs	r1, #0
 8007ed2:	f105 0008 	add.w	r0, r5, #8
 8007ed6:	f7ff fa79 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007eda:	4604      	mov	r4, r0
        break;
 8007edc:	e7ee      	b.n	8007ebc <HAL_RCCEx_PeriphCLKConfig+0x910>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007ede:	2102      	movs	r1, #2
 8007ee0:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007ee4:	f7ff faea 	bl	80074bc <RCCEx_PLL3_Config>
 8007ee8:	e7f7      	b.n	8007eda <HAL_RCCEx_PeriphCLKConfig+0x92e>
 8007eea:	4626      	mov	r6, r4
 8007eec:	e689      	b.n	8007c02 <HAL_RCCEx_PeriphCLKConfig+0x656>
    switch (PeriphClkInit->Lptim345ClockSelection)
 8007eee:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007ef2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007ef6:	d003      	beq.n	8007f00 <HAL_RCCEx_PeriphCLKConfig+0x954>
 8007ef8:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8007efc:	f47f ae93 	bne.w	8007c26 <HAL_RCCEx_PeriphCLKConfig+0x67a>
    if (ret == HAL_OK)
 8007f00:	b9ac      	cbnz	r4, 8007f2e <HAL_RCCEx_PeriphCLKConfig+0x982>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8007f02:	4a33      	ldr	r2, [pc, #204]	; (8007fd0 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007f04:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 8007f08:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007f0a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007f0e:	430b      	orrs	r3, r1
 8007f10:	6593      	str	r3, [r2, #88]	; 0x58
 8007f12:	e68a      	b.n	8007c2a <HAL_RCCEx_PeriphCLKConfig+0x67e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007f14:	2100      	movs	r1, #0
 8007f16:	f105 0008 	add.w	r0, r5, #8
 8007f1a:	f7ff fa57 	bl	80073cc <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007f1e:	4604      	mov	r4, r0
        break;
 8007f20:	e7ee      	b.n	8007f00 <HAL_RCCEx_PeriphCLKConfig+0x954>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007f22:	2102      	movs	r1, #2
 8007f24:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007f28:	f7ff fac8 	bl	80074bc <RCCEx_PLL3_Config>
 8007f2c:	e7f7      	b.n	8007f1e <HAL_RCCEx_PeriphCLKConfig+0x972>
 8007f2e:	4626      	mov	r6, r4
 8007f30:	e67b      	b.n	8007c2a <HAL_RCCEx_PeriphCLKConfig+0x67e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007f32:	2102      	movs	r1, #2
 8007f34:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007f38:	f7ff fac0 	bl	80074bc <RCCEx_PLL3_Config>
 8007f3c:	e6b8      	b.n	8007cb0 <HAL_RCCEx_PeriphCLKConfig+0x704>
    switch (PeriphClkInit->AdcClockSelection)
 8007f3e:	2601      	movs	r6, #1
 8007f40:	4634      	mov	r4, r6
 8007f42:	e6c1      	b.n	8007cc8 <HAL_RCCEx_PeriphCLKConfig+0x71c>
 8007f44:	4626      	mov	r6, r4
 8007f46:	e6bf      	b.n	8007cc8 <HAL_RCCEx_PeriphCLKConfig+0x71c>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007f48:	2101      	movs	r1, #1
 8007f4a:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007f4e:	f7ff fab5 	bl	80074bc <RCCEx_PLL3_Config>
 8007f52:	4604      	mov	r4, r0
        break;
 8007f54:	e6cd      	b.n	8007cf2 <HAL_RCCEx_PeriphCLKConfig+0x746>
    switch (PeriphClkInit->UsbClockSelection)
 8007f56:	2601      	movs	r6, #1
 8007f58:	4634      	mov	r4, r6
 8007f5a:	e6d5      	b.n	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x75c>
 8007f5c:	4626      	mov	r6, r4
 8007f5e:	e6d3      	b.n	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x75c>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007f60:	4a1b      	ldr	r2, [pc, #108]	; (8007fd0 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007f62:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007f64:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007f68:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007f6a:	b974      	cbnz	r4, 8007f8a <HAL_RCCEx_PeriphCLKConfig+0x9de>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8007f6c:	4a18      	ldr	r2, [pc, #96]	; (8007fd0 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007f6e:	6d29      	ldr	r1, [r5, #80]	; 0x50
 8007f70:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007f72:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007f76:	430b      	orrs	r3, r1
 8007f78:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007f7a:	e6d2      	b.n	8007d22 <HAL_RCCEx_PeriphCLKConfig+0x776>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007f7c:	2102      	movs	r1, #2
 8007f7e:	f105 0008 	add.w	r0, r5, #8
 8007f82:	f7ff fa23 	bl	80073cc <RCCEx_PLL2_Config>
 8007f86:	4604      	mov	r4, r0
        break;
 8007f88:	e7ef      	b.n	8007f6a <HAL_RCCEx_PeriphCLKConfig+0x9be>
 8007f8a:	4626      	mov	r6, r4
 8007f8c:	e6c9      	b.n	8007d22 <HAL_RCCEx_PeriphCLKConfig+0x776>
    switch (PeriphClkInit->RngClockSelection)
 8007f8e:	f420 7280 	bic.w	r2, r0, #256	; 0x100
 8007f92:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8007f96:	f47f aede 	bne.w	8007d56 <HAL_RCCEx_PeriphCLKConfig+0x7aa>
    if (ret == HAL_OK)
 8007f9a:	b964      	cbnz	r4, 8007fb6 <HAL_RCCEx_PeriphCLKConfig+0xa0a>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8007f9c:	4c0c      	ldr	r4, [pc, #48]	; (8007fd0 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007f9e:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8007fa0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8007fa4:	4302      	orrs	r2, r0
 8007fa6:	6562      	str	r2, [r4, #84]	; 0x54
 8007fa8:	e6d6      	b.n	8007d58 <HAL_RCCEx_PeriphCLKConfig+0x7ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007faa:	4f09      	ldr	r7, [pc, #36]	; (8007fd0 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007fac:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007fae:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8007fb2:	62fa      	str	r2, [r7, #44]	; 0x2c
        break;
 8007fb4:	e7f1      	b.n	8007f9a <HAL_RCCEx_PeriphCLKConfig+0x9ee>
 8007fb6:	4626      	mov	r6, r4
 8007fb8:	e6ce      	b.n	8007d58 <HAL_RCCEx_PeriphCLKConfig+0x7ac>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007fba:	2102      	movs	r1, #2
 8007fbc:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007fc0:	f7ff fa7c 	bl	80074bc <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007fc4:	2800      	cmp	r0, #0
 8007fc6:	f43f af3c 	beq.w	8007e42 <HAL_RCCEx_PeriphCLKConfig+0x896>
  return HAL_ERROR;
 8007fca:	2001      	movs	r0, #1
 8007fcc:	e73c      	b.n	8007e48 <HAL_RCCEx_PeriphCLKConfig+0x89c>
 8007fce:	bf00      	nop
 8007fd0:	58024400 	.word	0x58024400

08007fd4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8007fd4:	b538      	push	{r3, r4, r5, lr}
 8007fd6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8007fd8:	4604      	mov	r4, r0
 8007fda:	b1f0      	cbz	r0, 800801a <HAL_SDRAM_Init+0x46>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8007fdc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007fe0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007fe4:	b91b      	cbnz	r3, 8007fee <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007fe6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007fea:	f7f9 fdf1 	bl	8001bd0 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007fee:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007ff0:	1d21      	adds	r1, r4, #4
 8007ff2:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007ff4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007ff8:	f000 f9e5 	bl	80083c6 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8007ffc:	6862      	ldr	r2, [r4, #4]
 8007ffe:	4629      	mov	r1, r5
 8008000:	6820      	ldr	r0, [r4, #0]
 8008002:	f000 fa18 	bl	8008436 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
 8008006:	4a06      	ldr	r2, [pc, #24]	; (8008020 <HAL_SDRAM_Init+0x4c>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;

  return HAL_OK;
 8008008:	2000      	movs	r0, #0
  __FMC_ENABLE();
 800800a:	6813      	ldr	r3, [r2, #0]
 800800c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008010:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
 8008012:	2301      	movs	r3, #1
 8008014:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 8008018:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800801a:	2001      	movs	r0, #1
 800801c:	e7fc      	b.n	8008018 <HAL_SDRAM_Init+0x44>
 800801e:	bf00      	nop
 8008020:	52004000 	.word	0x52004000

08008024 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8008024:	b510      	push	{r4, lr}
 8008026:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8008028:	f7f9 fe6c 	bl	8001d04 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800802c:	e9d4 0100 	ldrd	r0, r1, [r4]
 8008030:	f000 fa37 	bl	80084a2 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8008034:	2000      	movs	r0, #0
 8008036:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800803a:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800803e:	bd10      	pop	{r4, pc}

08008040 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8008040:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8008042:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 8008046:	4605      	mov	r5, r0
 8008048:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800804a:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800804c:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800804e:	d010      	beq.n	8008072 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8008050:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8008054:	2c01      	cmp	r4, #1
 8008056:	d110      	bne.n	800807a <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008058:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800805a:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800805c:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8008060:	f000 fa2e 	bl	80084c0 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008064:	6833      	ldr	r3, [r6, #0]
 8008066:	2b02      	cmp	r3, #2
 8008068:	d104      	bne.n	8008074 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800806a:	2305      	movs	r3, #5
 800806c:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008070:	2000      	movs	r0, #0
}
 8008072:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8008074:	f885 402c 	strb.w	r4, [r5, #44]	; 0x2c
 8008078:	e7fa      	b.n	8008070 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 800807a:	2001      	movs	r0, #1
 800807c:	e7f9      	b.n	8008072 <HAL_SDRAM_SendCommand+0x32>

0800807e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800807e:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008080:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 8008084:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008086:	2b02      	cmp	r3, #2
 8008088:	b2d8      	uxtb	r0, r3
 800808a:	d00d      	beq.n	80080a8 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800808c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8008090:	2b01      	cmp	r3, #1
 8008092:	b2dd      	uxtb	r5, r3
 8008094:	d109      	bne.n	80080aa <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008096:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008098:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800809a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800809e:	f000 fa21 	bl	80084e4 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80080a2:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 80080a4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
 80080a8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80080aa:	2001      	movs	r0, #1
 80080ac:	e7fc      	b.n	80080a8 <HAL_SDRAM_ProgramRefreshRate+0x2a>

080080ae <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80080ae:	4770      	bx	lr

080080b0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80080b0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80080b4:	2b01      	cmp	r3, #1
 80080b6:	d133      	bne.n	8008120 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80080b8:	2302      	movs	r3, #2
 80080ba:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80080be:	6803      	ldr	r3, [r0, #0]
 80080c0:	68da      	ldr	r2, [r3, #12]
 80080c2:	f042 0201 	orr.w	r2, r2, #1
 80080c6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80080c8:	4a16      	ldr	r2, [pc, #88]	; (8008124 <HAL_TIM_Base_Start_IT+0x74>)
 80080ca:	4293      	cmp	r3, r2
 80080cc:	d01a      	beq.n	8008104 <HAL_TIM_Base_Start_IT+0x54>
 80080ce:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80080d2:	d017      	beq.n	8008104 <HAL_TIM_Base_Start_IT+0x54>
 80080d4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80080d8:	4293      	cmp	r3, r2
 80080da:	d013      	beq.n	8008104 <HAL_TIM_Base_Start_IT+0x54>
 80080dc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80080e0:	4293      	cmp	r3, r2
 80080e2:	d00f      	beq.n	8008104 <HAL_TIM_Base_Start_IT+0x54>
 80080e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80080e8:	4293      	cmp	r3, r2
 80080ea:	d00b      	beq.n	8008104 <HAL_TIM_Base_Start_IT+0x54>
 80080ec:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80080f0:	4293      	cmp	r3, r2
 80080f2:	d007      	beq.n	8008104 <HAL_TIM_Base_Start_IT+0x54>
 80080f4:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 80080f8:	4293      	cmp	r3, r2
 80080fa:	d003      	beq.n	8008104 <HAL_TIM_Base_Start_IT+0x54>
 80080fc:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 8008100:	4293      	cmp	r3, r2
 8008102:	d107      	bne.n	8008114 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008104:	6899      	ldr	r1, [r3, #8]
 8008106:	4a08      	ldr	r2, [pc, #32]	; (8008128 <HAL_TIM_Base_Start_IT+0x78>)
 8008108:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800810a:	2a06      	cmp	r2, #6
 800810c:	d006      	beq.n	800811c <HAL_TIM_Base_Start_IT+0x6c>
 800810e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8008112:	d003      	beq.n	800811c <HAL_TIM_Base_Start_IT+0x6c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8008114:	681a      	ldr	r2, [r3, #0]
 8008116:	f042 0201 	orr.w	r2, r2, #1
 800811a:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800811c:	2000      	movs	r0, #0
}
 800811e:	4770      	bx	lr
    return HAL_ERROR;
 8008120:	2001      	movs	r0, #1
 8008122:	4770      	bx	lr
 8008124:	40010000 	.word	0x40010000
 8008128:	00010007 	.word	0x00010007

0800812c <HAL_TIM_OC_DelayElapsedCallback>:
 800812c:	4770      	bx	lr

0800812e <HAL_TIM_IC_CaptureCallback>:
 800812e:	4770      	bx	lr

08008130 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008130:	4770      	bx	lr

08008132 <HAL_TIM_TriggerCallback>:
 8008132:	4770      	bx	lr

08008134 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008134:	6803      	ldr	r3, [r0, #0]
 8008136:	691a      	ldr	r2, [r3, #16]
 8008138:	0791      	lsls	r1, r2, #30
{
 800813a:	b510      	push	{r4, lr}
 800813c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800813e:	d50f      	bpl.n	8008160 <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8008140:	68da      	ldr	r2, [r3, #12]
 8008142:	0792      	lsls	r2, r2, #30
 8008144:	d50c      	bpl.n	8008160 <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008146:	f06f 0202 	mvn.w	r2, #2
 800814a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800814c:	2201      	movs	r2, #1
 800814e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008150:	699b      	ldr	r3, [r3, #24]
 8008152:	0799      	lsls	r1, r3, #30
 8008154:	f000 8085 	beq.w	8008262 <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008158:	f7ff ffe9 	bl	800812e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800815c:	2300      	movs	r3, #0
 800815e:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8008160:	6823      	ldr	r3, [r4, #0]
 8008162:	691a      	ldr	r2, [r3, #16]
 8008164:	0752      	lsls	r2, r2, #29
 8008166:	d510      	bpl.n	800818a <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8008168:	68da      	ldr	r2, [r3, #12]
 800816a:	0750      	lsls	r0, r2, #29
 800816c:	d50d      	bpl.n	800818a <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800816e:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008172:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8008174:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8008176:	2202      	movs	r2, #2
 8008178:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800817a:	699b      	ldr	r3, [r3, #24]
 800817c:	f413 7f40 	tst.w	r3, #768	; 0x300
 8008180:	d075      	beq.n	800826e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008182:	f7ff ffd4 	bl	800812e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008186:	2300      	movs	r3, #0
 8008188:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800818a:	6823      	ldr	r3, [r4, #0]
 800818c:	691a      	ldr	r2, [r3, #16]
 800818e:	0711      	lsls	r1, r2, #28
 8008190:	d50f      	bpl.n	80081b2 <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8008192:	68da      	ldr	r2, [r3, #12]
 8008194:	0712      	lsls	r2, r2, #28
 8008196:	d50c      	bpl.n	80081b2 <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008198:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800819c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800819e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80081a0:	2204      	movs	r2, #4
 80081a2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80081a4:	69db      	ldr	r3, [r3, #28]
 80081a6:	079b      	lsls	r3, r3, #30
 80081a8:	d067      	beq.n	800827a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80081aa:	f7ff ffc0 	bl	800812e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081ae:	2300      	movs	r3, #0
 80081b0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80081b2:	6823      	ldr	r3, [r4, #0]
 80081b4:	691a      	ldr	r2, [r3, #16]
 80081b6:	06d0      	lsls	r0, r2, #27
 80081b8:	d510      	bpl.n	80081dc <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80081ba:	68da      	ldr	r2, [r3, #12]
 80081bc:	06d1      	lsls	r1, r2, #27
 80081be:	d50d      	bpl.n	80081dc <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80081c0:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80081c4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80081c6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80081c8:	2208      	movs	r2, #8
 80081ca:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80081cc:	69db      	ldr	r3, [r3, #28]
 80081ce:	f413 7f40 	tst.w	r3, #768	; 0x300
 80081d2:	d058      	beq.n	8008286 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 80081d4:	f7ff ffab 	bl	800812e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081d8:	2300      	movs	r3, #0
 80081da:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80081dc:	6823      	ldr	r3, [r4, #0]
 80081de:	691a      	ldr	r2, [r3, #16]
 80081e0:	07d2      	lsls	r2, r2, #31
 80081e2:	d508      	bpl.n	80081f6 <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80081e4:	68da      	ldr	r2, [r3, #12]
 80081e6:	07d0      	lsls	r0, r2, #31
 80081e8:	d505      	bpl.n	80081f6 <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80081ea:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80081ee:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80081f0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80081f2:	f7f9 fafb 	bl	80017ec <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80081f6:	6823      	ldr	r3, [r4, #0]
 80081f8:	691a      	ldr	r2, [r3, #16]
 80081fa:	0611      	lsls	r1, r2, #24
 80081fc:	d508      	bpl.n	8008210 <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80081fe:	68da      	ldr	r2, [r3, #12]
 8008200:	0612      	lsls	r2, r2, #24
 8008202:	d505      	bpl.n	8008210 <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008204:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008208:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800820a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800820c:	f000 f8d9 	bl	80083c2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8008210:	6823      	ldr	r3, [r4, #0]
 8008212:	691a      	ldr	r2, [r3, #16]
 8008214:	05d0      	lsls	r0, r2, #23
 8008216:	d508      	bpl.n	800822a <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008218:	68da      	ldr	r2, [r3, #12]
 800821a:	0611      	lsls	r1, r2, #24
 800821c:	d505      	bpl.n	800822a <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800821e:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 8008222:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8008224:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8008226:	f000 f8cd 	bl	80083c4 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800822a:	6823      	ldr	r3, [r4, #0]
 800822c:	691a      	ldr	r2, [r3, #16]
 800822e:	0652      	lsls	r2, r2, #25
 8008230:	d508      	bpl.n	8008244 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008232:	68da      	ldr	r2, [r3, #12]
 8008234:	0650      	lsls	r0, r2, #25
 8008236:	d505      	bpl.n	8008244 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008238:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800823c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800823e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8008240:	f7ff ff77 	bl	8008132 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008244:	6823      	ldr	r3, [r4, #0]
 8008246:	691a      	ldr	r2, [r3, #16]
 8008248:	0691      	lsls	r1, r2, #26
 800824a:	d522      	bpl.n	8008292 <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800824c:	68da      	ldr	r2, [r3, #12]
 800824e:	0692      	lsls	r2, r2, #26
 8008250:	d51f      	bpl.n	8008292 <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008252:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008256:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008258:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800825a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800825e:	f000 b8af 	b.w	80083c0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8008262:	f7ff ff63 	bl	800812c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008266:	4620      	mov	r0, r4
 8008268:	f7ff ff62 	bl	8008130 <HAL_TIM_PWM_PulseFinishedCallback>
 800826c:	e776      	b.n	800815c <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800826e:	f7ff ff5d 	bl	800812c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008272:	4620      	mov	r0, r4
 8008274:	f7ff ff5c 	bl	8008130 <HAL_TIM_PWM_PulseFinishedCallback>
 8008278:	e785      	b.n	8008186 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800827a:	f7ff ff57 	bl	800812c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800827e:	4620      	mov	r0, r4
 8008280:	f7ff ff56 	bl	8008130 <HAL_TIM_PWM_PulseFinishedCallback>
 8008284:	e793      	b.n	80081ae <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008286:	f7ff ff51 	bl	800812c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800828a:	4620      	mov	r0, r4
 800828c:	f7ff ff50 	bl	8008130 <HAL_TIM_PWM_PulseFinishedCallback>
 8008290:	e7a2      	b.n	80081d8 <HAL_TIM_IRQHandler+0xa4>
}
 8008292:	bd10      	pop	{r4, pc}

08008294 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008294:	4a30      	ldr	r2, [pc, #192]	; (8008358 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8008296:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008298:	4290      	cmp	r0, r2
 800829a:	d012      	beq.n	80082c2 <TIM_Base_SetConfig+0x2e>
 800829c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80082a0:	d00f      	beq.n	80082c2 <TIM_Base_SetConfig+0x2e>
 80082a2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80082a6:	4290      	cmp	r0, r2
 80082a8:	d00b      	beq.n	80082c2 <TIM_Base_SetConfig+0x2e>
 80082aa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082ae:	4290      	cmp	r0, r2
 80082b0:	d007      	beq.n	80082c2 <TIM_Base_SetConfig+0x2e>
 80082b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082b6:	4290      	cmp	r0, r2
 80082b8:	d003      	beq.n	80082c2 <TIM_Base_SetConfig+0x2e>
 80082ba:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80082be:	4290      	cmp	r0, r2
 80082c0:	d119      	bne.n	80082f6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80082c2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80082c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80082c8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80082ca:	4a23      	ldr	r2, [pc, #140]	; (8008358 <TIM_Base_SetConfig+0xc4>)
 80082cc:	4290      	cmp	r0, r2
 80082ce:	d01d      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 80082d0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80082d4:	d01a      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 80082d6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80082da:	4290      	cmp	r0, r2
 80082dc:	d016      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 80082de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082e2:	4290      	cmp	r0, r2
 80082e4:	d012      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 80082e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082ea:	4290      	cmp	r0, r2
 80082ec:	d00e      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 80082ee:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80082f2:	4290      	cmp	r0, r2
 80082f4:	d00a      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 80082f6:	4a19      	ldr	r2, [pc, #100]	; (800835c <TIM_Base_SetConfig+0xc8>)
 80082f8:	4290      	cmp	r0, r2
 80082fa:	d007      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 80082fc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008300:	4290      	cmp	r0, r2
 8008302:	d003      	beq.n	800830c <TIM_Base_SetConfig+0x78>
 8008304:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008308:	4290      	cmp	r0, r2
 800830a:	d103      	bne.n	8008314 <TIM_Base_SetConfig+0x80>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800830c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008310:	68ca      	ldr	r2, [r1, #12]
 8008312:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008314:	694a      	ldr	r2, [r1, #20]
 8008316:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800831a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800831c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800831e:	688b      	ldr	r3, [r1, #8]
 8008320:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008322:	680b      	ldr	r3, [r1, #0]
 8008324:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008326:	4b0c      	ldr	r3, [pc, #48]	; (8008358 <TIM_Base_SetConfig+0xc4>)
 8008328:	4298      	cmp	r0, r3
 800832a:	d00f      	beq.n	800834c <TIM_Base_SetConfig+0xb8>
 800832c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008330:	4298      	cmp	r0, r3
 8008332:	d00b      	beq.n	800834c <TIM_Base_SetConfig+0xb8>
 8008334:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
 8008338:	4298      	cmp	r0, r3
 800833a:	d007      	beq.n	800834c <TIM_Base_SetConfig+0xb8>
 800833c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008340:	4298      	cmp	r0, r3
 8008342:	d003      	beq.n	800834c <TIM_Base_SetConfig+0xb8>
 8008344:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008348:	4298      	cmp	r0, r3
 800834a:	d101      	bne.n	8008350 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800834c:	690b      	ldr	r3, [r1, #16]
 800834e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008350:	2301      	movs	r3, #1
 8008352:	6143      	str	r3, [r0, #20]
}
 8008354:	4770      	bx	lr
 8008356:	bf00      	nop
 8008358:	40010000 	.word	0x40010000
 800835c:	40014000 	.word	0x40014000

08008360 <HAL_TIM_Base_Init>:
{
 8008360:	b510      	push	{r4, lr}
  if (htim == NULL)
 8008362:	4604      	mov	r4, r0
 8008364:	b350      	cbz	r0, 80083bc <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008366:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800836a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800836e:	b91b      	cbnz	r3, 8008378 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8008370:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008374:	f7ff fe9b 	bl	80080ae <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008378:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800837a:	6820      	ldr	r0, [r4, #0]
 800837c:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 800837e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008382:	f7ff ff87 	bl	8008294 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008386:	2301      	movs	r3, #1
  return HAL_OK;
 8008388:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800838a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800838e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8008392:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8008396:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800839a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 800839e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80083a2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80083a6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80083aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80083ae:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 80083b2:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 80083b6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80083ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80083bc:	2001      	movs	r0, #1
 80083be:	e7fc      	b.n	80083ba <HAL_TIM_Base_Init+0x5a>

080083c0 <HAL_TIMEx_CommutCallback>:
 80083c0:	4770      	bx	lr

080083c2 <HAL_TIMEx_BreakCallback>:
 80083c2:	4770      	bx	lr

080083c4 <HAL_TIMEx_Break2Callback>:
 80083c4:	4770      	bx	lr

080083c6 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80083c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80083ca:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80083ce:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80083d2:	f8d1 e024 	ldr.w	lr, [r1, #36]	; 0x24
 80083d6:	ea43 0308 	orr.w	r3, r3, r8
 80083da:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80083de:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80083e2:	6809      	ldr	r1, [r1, #0]
 80083e4:	b991      	cbnz	r1, 800840c <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80083e6:	ea43 030e 	orr.w	r3, r3, lr
 80083ea:	6801      	ldr	r1, [r0, #0]
 80083ec:	4313      	orrs	r3, r2
 80083ee:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 80083f2:	ea43 030c 	orr.w	r3, r3, ip
 80083f6:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 80083fa:	433b      	orrs	r3, r7
 80083fc:	4333      	orrs	r3, r6
 80083fe:	432b      	orrs	r3, r5
 8008400:	4323      	orrs	r3, r4
 8008402:	430b      	orrs	r3, r1
 8008404:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8008406:	2000      	movs	r0, #0
 8008408:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800840c:	6801      	ldr	r1, [r0, #0]
 800840e:	ea43 030e 	orr.w	r3, r3, lr
 8008412:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8008416:	430b      	orrs	r3, r1
 8008418:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800841a:	ea42 030c 	orr.w	r3, r2, ip
 800841e:	6841      	ldr	r1, [r0, #4]
 8008420:	433b      	orrs	r3, r7
 8008422:	f421 42ff 	bic.w	r2, r1, #32640	; 0x7f80
 8008426:	4333      	orrs	r3, r6
 8008428:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800842c:	432b      	orrs	r3, r5
 800842e:	4323      	orrs	r3, r4
 8008430:	4313      	orrs	r3, r2
 8008432:	6043      	str	r3, [r0, #4]
 8008434:	e7e7      	b.n	8008406 <FMC_SDRAM_Init+0x40>

08008436 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008436:	68cb      	ldr	r3, [r1, #12]
 8008438:	f103 3cff 	add.w	ip, r3, #4294967295
 800843c:	694b      	ldr	r3, [r1, #20]
{
 800843e:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008440:	3b01      	subs	r3, #1
 8008442:	680f      	ldr	r7, [r1, #0]
 8008444:	684c      	ldr	r4, [r1, #4]
 8008446:	688e      	ldr	r6, [r1, #8]
 8008448:	051b      	lsls	r3, r3, #20
 800844a:	690d      	ldr	r5, [r1, #16]
 800844c:	3c01      	subs	r4, #1
 800844e:	6989      	ldr	r1, [r1, #24]
 8008450:	3e01      	subs	r6, #1
 8008452:	3d01      	subs	r5, #1
 8008454:	3f01      	subs	r7, #1
 8008456:	3901      	subs	r1, #1
 8008458:	0124      	lsls	r4, r4, #4
 800845a:	0236      	lsls	r6, r6, #8
 800845c:	042d      	lsls	r5, r5, #16
 800845e:	0609      	lsls	r1, r1, #24
 8008460:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8008464:	b95a      	cbnz	r2, 800847e <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008466:	433b      	orrs	r3, r7
 8008468:	6882      	ldr	r2, [r0, #8]
 800846a:	4323      	orrs	r3, r4
 800846c:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8008470:	4333      	orrs	r3, r6
 8008472:	432b      	orrs	r3, r5
 8008474:	430b      	orrs	r3, r1
 8008476:	4313      	orrs	r3, r2
 8008478:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
 800847a:	2000      	movs	r0, #0
 800847c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800847e:	6882      	ldr	r2, [r0, #8]
 8008480:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8008484:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8008488:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800848a:	ea44 0306 	orr.w	r3, r4, r6
 800848e:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008490:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8008492:	68c2      	ldr	r2, [r0, #12]
 8008494:	432b      	orrs	r3, r5
 8008496:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800849a:	430b      	orrs	r3, r1
 800849c:	4313      	orrs	r3, r2
 800849e:	60c3      	str	r3, [r0, #12]
 80084a0:	e7eb      	b.n	800847a <FMC_SDRAM_Timing_Init+0x44>

080084a2 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80084a2:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80084a6:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80084aa:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 80084ae:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80084b2:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80084b4:	2300      	movs	r3, #0
 80084b6:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80084b8:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80084ba:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80084bc:	4618      	mov	r0, r3
 80084be:	4770      	bx	lr

080084c0 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80084c0:	6902      	ldr	r2, [r0, #16]
{
 80084c2:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80084c4:	e9d1 3400 	ldrd	r3, r4, [r1]
 80084c8:	0d92      	lsrs	r2, r2, #22
 80084ca:	4323      	orrs	r3, r4
 80084cc:	68cc      	ldr	r4, [r1, #12]
 80084ce:	0592      	lsls	r2, r2, #22
 80084d0:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 80084d4:	4313      	orrs	r3, r2
 80084d6:	688a      	ldr	r2, [r1, #8]
 80084d8:	3a01      	subs	r2, #1
 80084da:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80084de:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 80084e0:	2000      	movs	r0, #0
 80084e2:	bd10      	pop	{r4, pc}

080084e4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80084e4:	6943      	ldr	r3, [r0, #20]
 80084e6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80084ea:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 80084ee:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80084f2:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 80084f4:	2000      	movs	r0, #0
 80084f6:	4770      	bx	lr

080084f8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80084f8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80084fa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80084fe:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008500:	f001 fe36 	bl	800a170 <xTaskGetSchedulerState>
 8008504:	2801      	cmp	r0, #1
 8008506:	d003      	beq.n	8008510 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8008508:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800850c:	f000 bbda 	b.w	8008cc4 <xPortSysTickHandler>
}
 8008510:	bd08      	pop	{r3, pc}
	...

08008514 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008514:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008518:	b92b      	cbnz	r3, 8008526 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800851a:	4b06      	ldr	r3, [pc, #24]	; (8008534 <osKernelInitialize+0x20>)
 800851c:	6818      	ldr	r0, [r3, #0]
 800851e:	b928      	cbnz	r0, 800852c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008520:	2201      	movs	r2, #1
 8008522:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008524:	4770      	bx	lr
    stat = osErrorISR;
 8008526:	f06f 0005 	mvn.w	r0, #5
 800852a:	4770      	bx	lr
    } else {
      stat = osError;
 800852c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008530:	4770      	bx	lr
 8008532:	bf00      	nop
 8008534:	24005924 	.word	0x24005924

08008538 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008538:	b510      	push	{r4, lr}
 800853a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800853e:	b95c      	cbnz	r4, 8008558 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8008540:	4b08      	ldr	r3, [pc, #32]	; (8008564 <osKernelStart+0x2c>)
 8008542:	681a      	ldr	r2, [r3, #0]
 8008544:	2a01      	cmp	r2, #1
 8008546:	d10a      	bne.n	800855e <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008548:	4a07      	ldr	r2, [pc, #28]	; (8008568 <osKernelStart+0x30>)
 800854a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800854c:	2202      	movs	r2, #2
 800854e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008550:	f001 fcb2 	bl	8009eb8 <vTaskStartScheduler>
      stat = osOK;
 8008554:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8008556:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008558:	f06f 0005 	mvn.w	r0, #5
 800855c:	e7fb      	b.n	8008556 <osKernelStart+0x1e>
      stat = osError;
 800855e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008562:	e7f8      	b.n	8008556 <osKernelStart+0x1e>
 8008564:	24005924 	.word	0x24005924
 8008568:	e000ed00 	.word	0xe000ed00

0800856c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800856c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800856e:	460b      	mov	r3, r1
 8008570:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008572:	2100      	movs	r1, #0
 8008574:	9105      	str	r1, [sp, #20]
 8008576:	f3ef 8405 	mrs	r4, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800857a:	b9cc      	cbnz	r4, 80085b0 <osThreadNew+0x44>
 800857c:	b1c0      	cbz	r0, 80085b0 <osThreadNew+0x44>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800857e:	b36a      	cbz	r2, 80085dc <osThreadNew+0x70>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008580:	6995      	ldr	r5, [r2, #24]
 8008582:	428d      	cmp	r5, r1
 8008584:	bf08      	it	eq
 8008586:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008588:	1e69      	subs	r1, r5, #1
 800858a:	46ac      	mov	ip, r5
 800858c:	2937      	cmp	r1, #55	; 0x37
 800858e:	d82a      	bhi.n	80085e6 <osThreadNew+0x7a>
 8008590:	6851      	ldr	r1, [r2, #4]
 8008592:	07c9      	lsls	r1, r1, #31
 8008594:	d427      	bmi.n	80085e6 <osThreadNew+0x7a>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008596:	6956      	ldr	r6, [r2, #20]
 8008598:	b16e      	cbz	r6, 80085b6 <osThreadNew+0x4a>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800859a:	08b4      	lsrs	r4, r6, #2
      if (attr->name != NULL) {
 800859c:	6811      	ldr	r1, [r2, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800859e:	e9d2 7e02 	ldrd	r7, lr, [r2, #8]
 80085a2:	b157      	cbz	r7, 80085ba <osThreadNew+0x4e>
 80085a4:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80085a8:	d902      	bls.n	80085b0 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80085aa:	6912      	ldr	r2, [r2, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80085ac:	b102      	cbz	r2, 80085b0 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80085ae:	b9e6      	cbnz	r6, 80085ea <osThreadNew+0x7e>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80085b0:	9805      	ldr	r0, [sp, #20]
}
 80085b2:	b007      	add	sp, #28
 80085b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80085b6:	2480      	movs	r4, #128	; 0x80
 80085b8:	e7f0      	b.n	800859c <osThreadNew+0x30>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80085ba:	f1be 0f00 	cmp.w	lr, #0
 80085be:	d1f7      	bne.n	80085b0 <osThreadNew+0x44>
      if (mem == 0) {
 80085c0:	6912      	ldr	r2, [r2, #16]
 80085c2:	2a00      	cmp	r2, #0
 80085c4:	d1f4      	bne.n	80085b0 <osThreadNew+0x44>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80085c6:	aa05      	add	r2, sp, #20
 80085c8:	e9cd c200 	strd	ip, r2, [sp]
 80085cc:	b2a2      	uxth	r2, r4
 80085ce:	f001 faee 	bl	8009bae <xTaskCreate>
 80085d2:	2801      	cmp	r0, #1
            hTask = NULL;
 80085d4:	bf1c      	itt	ne
 80085d6:	2300      	movne	r3, #0
 80085d8:	9305      	strne	r3, [sp, #20]
 80085da:	e7e9      	b.n	80085b0 <osThreadNew+0x44>
    name = NULL;
 80085dc:	4611      	mov	r1, r2
    prio  = (UBaseType_t)osPriorityNormal;
 80085de:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80085e2:	2480      	movs	r4, #128	; 0x80
 80085e4:	e7ef      	b.n	80085c6 <osThreadNew+0x5a>
        return (NULL);
 80085e6:	4620      	mov	r0, r4
 80085e8:	e7e3      	b.n	80085b2 <osThreadNew+0x46>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80085ea:	e9cd 2701 	strd	r2, r7, [sp, #4]
 80085ee:	9500      	str	r5, [sp, #0]
 80085f0:	4622      	mov	r2, r4
 80085f2:	f001 faa4 	bl	8009b3e <xTaskCreateStatic>
 80085f6:	9005      	str	r0, [sp, #20]
 80085f8:	e7da      	b.n	80085b0 <osThreadNew+0x44>

080085fa <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80085fa:	b510      	push	{r4, lr}
 80085fc:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008600:	b924      	cbnz	r4, 800860c <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008602:	b110      	cbz	r0, 800860a <osDelay+0x10>
      vTaskDelay(ticks);
 8008604:	f001 fc18 	bl	8009e38 <vTaskDelay>
    stat = osOK;
 8008608:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800860a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800860c:	f06f 0005 	mvn.w	r0, #5
 8008610:	e7fb      	b.n	800860a <osDelay+0x10>

08008612 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008612:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008614:	4604      	mov	r4, r0
 8008616:	460e      	mov	r6, r1
 8008618:	4615      	mov	r5, r2
 800861a:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800861e:	b11a      	cbz	r2, 8008628 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008620:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008622:	4620      	mov	r0, r4
 8008624:	b003      	add	sp, #12
 8008626:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008628:	2800      	cmp	r0, #0
 800862a:	d0f9      	beq.n	8008620 <osSemaphoreNew+0xe>
 800862c:	4288      	cmp	r0, r1
 800862e:	d3f7      	bcc.n	8008620 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8008630:	b1e5      	cbz	r5, 800866c <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008632:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8008636:	b1bb      	cbz	r3, 8008668 <osSemaphoreNew+0x56>
 8008638:	2f4f      	cmp	r7, #79	; 0x4f
 800863a:	d9f1      	bls.n	8008620 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800863c:	2801      	cmp	r0, #1
 800863e:	d12a      	bne.n	8008696 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008640:	2103      	movs	r1, #3
 8008642:	9100      	str	r1, [sp, #0]
 8008644:	4611      	mov	r1, r2
 8008646:	f000 fce5 	bl	8009014 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800864a:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800864c:	2800      	cmp	r0, #0
 800864e:	d0e7      	beq.n	8008620 <osSemaphoreNew+0xe>
 8008650:	b1de      	cbz	r6, 800868a <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008652:	2300      	movs	r3, #0
 8008654:	461a      	mov	r2, r3
 8008656:	4619      	mov	r1, r3
 8008658:	f000 fd91 	bl	800917e <xQueueGenericSend>
 800865c:	2801      	cmp	r0, #1
 800865e:	d014      	beq.n	800868a <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8008660:	4620      	mov	r0, r4
 8008662:	f001 f8cd 	bl	8009800 <vQueueDelete>
 8008666:	e7db      	b.n	8008620 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008668:	2f00      	cmp	r7, #0
 800866a:	d1d9      	bne.n	8008620 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800866c:	2c01      	cmp	r4, #1
 800866e:	d105      	bne.n	800867c <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8008670:	2203      	movs	r2, #3
 8008672:	2100      	movs	r1, #0
 8008674:	4620      	mov	r0, r4
 8008676:	f000 fd1b 	bl	80090b0 <xQueueGenericCreate>
 800867a:	e7e6      	b.n	800864a <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800867c:	4620      	mov	r0, r4
 800867e:	4631      	mov	r1, r6
 8008680:	f000 fd5f 	bl	8009142 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008684:	4604      	mov	r4, r0
 8008686:	2800      	cmp	r0, #0
 8008688:	d0ca      	beq.n	8008620 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800868a:	b955      	cbnz	r5, 80086a2 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800868c:	4629      	mov	r1, r5
 800868e:	4620      	mov	r0, r4
 8008690:	f001 f890 	bl	80097b4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008694:	e7c5      	b.n	8008622 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008696:	461a      	mov	r2, r3
 8008698:	f000 fd31 	bl	80090fe <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800869c:	4604      	mov	r4, r0
 800869e:	2800      	cmp	r0, #0
 80086a0:	d0be      	beq.n	8008620 <osSemaphoreNew+0xe>
          name = attr->name;
 80086a2:	682d      	ldr	r5, [r5, #0]
 80086a4:	e7f2      	b.n	800868c <osSemaphoreNew+0x7a>

080086a6 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80086a6:	b513      	push	{r0, r1, r4, lr}
 80086a8:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086aa:	b308      	cbz	r0, 80086f0 <osSemaphoreAcquire+0x4a>
 80086ac:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80086b0:	b1b3      	cbz	r3, 80086e0 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 80086b2:	b9e9      	cbnz	r1, 80086f0 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086b4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80086b6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086b8:	f001 f82c 	bl	8009714 <xQueueReceiveFromISR>
 80086bc:	2801      	cmp	r0, #1
 80086be:	d114      	bne.n	80086ea <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80086c0:	9b01      	ldr	r3, [sp, #4]
 80086c2:	b913      	cbnz	r3, 80086ca <osSemaphoreAcquire+0x24>
  stat = osOK;
 80086c4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80086c6:	b002      	add	sp, #8
 80086c8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80086ca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086d6:	f3bf 8f4f 	dsb	sy
 80086da:	f3bf 8f6f 	isb	sy
 80086de:	e7f1      	b.n	80086c4 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80086e0:	f000 ff55 	bl	800958e <xQueueSemaphoreTake>
 80086e4:	2801      	cmp	r0, #1
 80086e6:	d0ed      	beq.n	80086c4 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 80086e8:	b92c      	cbnz	r4, 80086f6 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 80086ea:	f06f 0002 	mvn.w	r0, #2
 80086ee:	e7ea      	b.n	80086c6 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 80086f0:	f06f 0003 	mvn.w	r0, #3
 80086f4:	e7e7      	b.n	80086c6 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 80086f6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80086fa:	e7e4      	b.n	80086c6 <osSemaphoreAcquire+0x20>

080086fc <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80086fc:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086fe:	b310      	cbz	r0, 8008746 <osSemaphoreRelease+0x4a>
 8008700:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008704:	b1b3      	cbz	r3, 8008734 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8008706:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008708:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800870a:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800870c:	f000 fe4c 	bl	80093a8 <xQueueGiveFromISR>
 8008710:	2801      	cmp	r0, #1
 8008712:	d115      	bne.n	8008740 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8008714:	9b01      	ldr	r3, [sp, #4]
 8008716:	b913      	cbnz	r3, 800871e <osSemaphoreRelease+0x22>
  stat = osOK;
 8008718:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800871a:	b002      	add	sp, #8
 800871c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800871e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008722:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008726:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800872a:	f3bf 8f4f 	dsb	sy
 800872e:	f3bf 8f6f 	isb	sy
 8008732:	e7f1      	b.n	8008718 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008734:	461a      	mov	r2, r3
 8008736:	4619      	mov	r1, r3
 8008738:	f000 fd21 	bl	800917e <xQueueGenericSend>
 800873c:	2801      	cmp	r0, #1
 800873e:	d0eb      	beq.n	8008718 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8008740:	f06f 0002 	mvn.w	r0, #2
 8008744:	e7e9      	b.n	800871a <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008746:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800874a:	e7e6      	b.n	800871a <osSemaphoreRelease+0x1e>

0800874c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800874c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800874e:	4605      	mov	r5, r0
 8008750:	460e      	mov	r6, r1
 8008752:	4614      	mov	r4, r2
 8008754:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008758:	b11f      	cbz	r7, 8008762 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800875a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800875c:	4628      	mov	r0, r5
 800875e:	b003      	add	sp, #12
 8008760:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008762:	2800      	cmp	r0, #0
 8008764:	d0f9      	beq.n	800875a <osMessageQueueNew+0xe>
 8008766:	2900      	cmp	r1, #0
 8008768:	d0f7      	beq.n	800875a <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800876a:	b1da      	cbz	r2, 80087a4 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800876c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8008770:	b183      	cbz	r3, 8008794 <osMessageQueueNew+0x48>
 8008772:	2a4f      	cmp	r2, #79	; 0x4f
 8008774:	d9f1      	bls.n	800875a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008776:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008778:	2a00      	cmp	r2, #0
 800877a:	d0ee      	beq.n	800875a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800877c:	434d      	muls	r5, r1
 800877e:	6966      	ldr	r6, [r4, #20]
 8008780:	42ae      	cmp	r6, r5
 8008782:	d3ea      	bcc.n	800875a <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008784:	9700      	str	r7, [sp, #0]
 8008786:	f000 fc45 	bl	8009014 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800878a:	4605      	mov	r5, r0
 800878c:	2800      	cmp	r0, #0
 800878e:	d0e4      	beq.n	800875a <osMessageQueueNew+0xe>
        name = attr->name;
 8008790:	6824      	ldr	r4, [r4, #0]
 8008792:	e011      	b.n	80087b8 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008794:	2a00      	cmp	r2, #0
 8008796:	d1e0      	bne.n	800875a <osMessageQueueNew+0xe>
 8008798:	6923      	ldr	r3, [r4, #16]
 800879a:	2b00      	cmp	r3, #0
 800879c:	d1dd      	bne.n	800875a <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800879e:	6963      	ldr	r3, [r4, #20]
 80087a0:	2b00      	cmp	r3, #0
 80087a2:	d1da      	bne.n	800875a <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80087a4:	4628      	mov	r0, r5
 80087a6:	2200      	movs	r2, #0
 80087a8:	4631      	mov	r1, r6
 80087aa:	f000 fc81 	bl	80090b0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80087ae:	4605      	mov	r5, r0
 80087b0:	2800      	cmp	r0, #0
 80087b2:	d0d2      	beq.n	800875a <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80087b4:	2c00      	cmp	r4, #0
 80087b6:	d1eb      	bne.n	8008790 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80087b8:	4621      	mov	r1, r4
 80087ba:	4628      	mov	r0, r5
 80087bc:	f000 fffa 	bl	80097b4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80087c0:	e7cc      	b.n	800875c <osMessageQueueNew+0x10>

080087c2 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80087c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80087c4:	461c      	mov	r4, r3
 80087c6:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80087ca:	b1c6      	cbz	r6, 80087fe <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80087cc:	b318      	cbz	r0, 8008816 <osMessageQueuePut+0x54>
 80087ce:	b311      	cbz	r1, 8008816 <osMessageQueuePut+0x54>
 80087d0:	bb0b      	cbnz	r3, 8008816 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80087d2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80087d4:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80087d6:	f000 fd85 	bl	80092e4 <xQueueGenericSendFromISR>
 80087da:	2801      	cmp	r0, #1
 80087dc:	d118      	bne.n	8008810 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80087de:	9b01      	ldr	r3, [sp, #4]
 80087e0:	b913      	cbnz	r3, 80087e8 <osMessageQueuePut+0x26>
  stat = osOK;
 80087e2:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80087e4:	b002      	add	sp, #8
 80087e6:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80087e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80087ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80087f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80087f4:	f3bf 8f4f 	dsb	sy
 80087f8:	f3bf 8f6f 	isb	sy
 80087fc:	e7f1      	b.n	80087e2 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80087fe:	b150      	cbz	r0, 8008816 <osMessageQueuePut+0x54>
 8008800:	b149      	cbz	r1, 8008816 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008802:	4633      	mov	r3, r6
 8008804:	4622      	mov	r2, r4
 8008806:	f000 fcba 	bl	800917e <xQueueGenericSend>
 800880a:	2801      	cmp	r0, #1
 800880c:	d0e9      	beq.n	80087e2 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800880e:	b92c      	cbnz	r4, 800881c <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8008810:	f06f 0002 	mvn.w	r0, #2
 8008814:	e7e6      	b.n	80087e4 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8008816:	f06f 0003 	mvn.w	r0, #3
 800881a:	e7e3      	b.n	80087e4 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800881c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008820:	e7e0      	b.n	80087e4 <osMessageQueuePut+0x22>

08008822 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008822:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008824:	461c      	mov	r4, r3
 8008826:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800882a:	b1c3      	cbz	r3, 800885e <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800882c:	b310      	cbz	r0, 8008874 <osMessageQueueGet+0x52>
 800882e:	b309      	cbz	r1, 8008874 <osMessageQueueGet+0x52>
 8008830:	bb04      	cbnz	r4, 8008874 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008832:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008834:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008836:	f000 ff6d 	bl	8009714 <xQueueReceiveFromISR>
 800883a:	2801      	cmp	r0, #1
 800883c:	d117      	bne.n	800886e <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800883e:	9b01      	ldr	r3, [sp, #4]
 8008840:	b913      	cbnz	r3, 8008848 <osMessageQueueGet+0x26>
  stat = osOK;
 8008842:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008844:	b003      	add	sp, #12
 8008846:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8008848:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800884c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008850:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008854:	f3bf 8f4f 	dsb	sy
 8008858:	f3bf 8f6f 	isb	sy
 800885c:	e7f1      	b.n	8008842 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800885e:	b148      	cbz	r0, 8008874 <osMessageQueueGet+0x52>
 8008860:	b141      	cbz	r1, 8008874 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008862:	4622      	mov	r2, r4
 8008864:	f000 fdf4 	bl	8009450 <xQueueReceive>
 8008868:	2801      	cmp	r0, #1
 800886a:	d0ea      	beq.n	8008842 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800886c:	b92c      	cbnz	r4, 800887a <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800886e:	f06f 0002 	mvn.w	r0, #2
 8008872:	e7e7      	b.n	8008844 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8008874:	f06f 0003 	mvn.w	r0, #3
 8008878:	e7e4      	b.n	8008844 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800887a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800887e:	e7e1      	b.n	8008844 <osMessageQueueGet+0x22>

08008880 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008880:	4b03      	ldr	r3, [pc, #12]	; (8008890 <vApplicationGetIdleTaskMemory+0x10>)
 8008882:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008884:	4b03      	ldr	r3, [pc, #12]	; (8008894 <vApplicationGetIdleTaskMemory+0x14>)
 8008886:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008888:	2380      	movs	r3, #128	; 0x80
 800888a:	6013      	str	r3, [r2, #0]
}
 800888c:	4770      	bx	lr
 800888e:	bf00      	nop
 8008890:	240058c4 	.word	0x240058c4
 8008894:	240056c4 	.word	0x240056c4

08008898 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008898:	4b03      	ldr	r3, [pc, #12]	; (80088a8 <vApplicationGetTimerTaskMemory+0x10>)
 800889a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800889c:	4b03      	ldr	r3, [pc, #12]	; (80088ac <vApplicationGetTimerTaskMemory+0x14>)
 800889e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80088a0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80088a4:	6013      	str	r3, [r2, #0]
}
 80088a6:	4770      	bx	lr
 80088a8:	24005d28 	.word	0x24005d28
 80088ac:	24005928 	.word	0x24005928

080088b0 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80088b0:	4b10      	ldr	r3, [pc, #64]	; (80088f4 <prvInsertBlockIntoFreeList+0x44>)
{
 80088b2:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80088b4:	461a      	mov	r2, r3
 80088b6:	681b      	ldr	r3, [r3, #0]
 80088b8:	4283      	cmp	r3, r0
 80088ba:	d3fb      	bcc.n	80088b4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80088bc:	6854      	ldr	r4, [r2, #4]
 80088be:	1911      	adds	r1, r2, r4
 80088c0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80088c2:	bf01      	itttt	eq
 80088c4:	6841      	ldreq	r1, [r0, #4]
 80088c6:	4610      	moveq	r0, r2
 80088c8:	1909      	addeq	r1, r1, r4
 80088ca:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80088cc:	6844      	ldr	r4, [r0, #4]
 80088ce:	1901      	adds	r1, r0, r4
 80088d0:	428b      	cmp	r3, r1
 80088d2:	d10c      	bne.n	80088ee <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80088d4:	4908      	ldr	r1, [pc, #32]	; (80088f8 <prvInsertBlockIntoFreeList+0x48>)
 80088d6:	6809      	ldr	r1, [r1, #0]
 80088d8:	428b      	cmp	r3, r1
 80088da:	d003      	beq.n	80088e4 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80088dc:	6859      	ldr	r1, [r3, #4]
 80088de:	4421      	add	r1, r4
 80088e0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80088e2:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80088e4:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 80088e6:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80088e8:	bf18      	it	ne
 80088ea:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80088ec:	bd10      	pop	{r4, pc}
 80088ee:	4619      	mov	r1, r3
 80088f0:	e7f8      	b.n	80088e4 <prvInsertBlockIntoFreeList+0x34>
 80088f2:	bf00      	nop
 80088f4:	2400dda0 	.word	0x2400dda0
 80088f8:	24005d88 	.word	0x24005d88

080088fc <pvPortMalloc>:
{
 80088fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008900:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008902:	f001 f981 	bl	8009c08 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008906:	4942      	ldr	r1, [pc, #264]	; (8008a10 <pvPortMalloc+0x114>)
 8008908:	4d42      	ldr	r5, [pc, #264]	; (8008a14 <pvPortMalloc+0x118>)
 800890a:	680b      	ldr	r3, [r1, #0]
 800890c:	bb0b      	cbnz	r3, 8008952 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800890e:	4a42      	ldr	r2, [pc, #264]	; (8008a18 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008910:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008912:	4e42      	ldr	r6, [pc, #264]	; (8008a1c <pvPortMalloc+0x120>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008914:	bf1b      	ittet	ne
 8008916:	1dd0      	addne	r0, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008918:	f502 4200 	addne.w	r2, r2, #32768	; 0x8000
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800891c:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008920:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008924:	bf1c      	itt	ne
 8008926:	1a13      	subne	r3, r2, r0
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008928:	4602      	movne	r2, r0
	xStart.xBlockSize = ( size_t ) 0;
 800892a:	2000      	movs	r0, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800892c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800892e:	6032      	str	r2, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8008930:	6070      	str	r0, [r6, #4]
	uxAddress -= xHeapStructSize;
 8008932:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008934:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8008938:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800893c:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 800893e:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008940:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008944:	4b36      	ldr	r3, [pc, #216]	; (8008a20 <pvPortMalloc+0x124>)
 8008946:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008948:	4b36      	ldr	r3, [pc, #216]	; (8008a24 <pvPortMalloc+0x128>)
 800894a:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800894c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008950:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008952:	682e      	ldr	r6, [r5, #0]
 8008954:	4226      	tst	r6, r4
 8008956:	d155      	bne.n	8008a04 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8008958:	2c00      	cmp	r4, #0
 800895a:	d046      	beq.n	80089ea <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800895c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008960:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008962:	bf1c      	itt	ne
 8008964:	f023 0307 	bicne.w	r3, r3, #7
 8008968:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800896a:	2b00      	cmp	r3, #0
 800896c:	d04a      	beq.n	8008a04 <pvPortMalloc+0x108>
 800896e:	4f2d      	ldr	r7, [pc, #180]	; (8008a24 <pvPortMalloc+0x128>)
 8008970:	683c      	ldr	r4, [r7, #0]
 8008972:	429c      	cmp	r4, r3
 8008974:	d346      	bcc.n	8008a04 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8008976:	4a29      	ldr	r2, [pc, #164]	; (8008a1c <pvPortMalloc+0x120>)
 8008978:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800897a:	6868      	ldr	r0, [r5, #4]
 800897c:	4298      	cmp	r0, r3
 800897e:	d204      	bcs.n	800898a <pvPortMalloc+0x8e>
 8008980:	f8d5 c000 	ldr.w	ip, [r5]
 8008984:	f1bc 0f00 	cmp.w	ip, #0
 8008988:	d115      	bne.n	80089b6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800898a:	6809      	ldr	r1, [r1, #0]
 800898c:	42a9      	cmp	r1, r5
 800898e:	d039      	beq.n	8008a04 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008990:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008992:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008996:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008998:	1ac2      	subs	r2, r0, r3
 800899a:	2a10      	cmp	r2, #16
 800899c:	d912      	bls.n	80089c4 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800899e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80089a0:	0741      	lsls	r1, r0, #29
 80089a2:	d00b      	beq.n	80089bc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80089a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089a8:	f383 8811 	msr	BASEPRI, r3
 80089ac:	f3bf 8f6f 	isb	sy
 80089b0:	f3bf 8f4f 	dsb	sy
 80089b4:	e7fe      	b.n	80089b4 <pvPortMalloc+0xb8>
 80089b6:	462a      	mov	r2, r5
 80089b8:	4665      	mov	r5, ip
 80089ba:	e7de      	b.n	800897a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80089bc:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80089be:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80089c0:	f7ff ff76 	bl	80088b0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80089c4:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80089c6:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80089c8:	4915      	ldr	r1, [pc, #84]	; (8008a20 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80089ca:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80089cc:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80089ce:	6808      	ldr	r0, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 80089d0:	4a15      	ldr	r2, [pc, #84]	; (8008a28 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80089d2:	4284      	cmp	r4, r0
					pxBlock->pxNextFreeBlock = NULL;
 80089d4:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80089d6:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80089d8:	603c      	str	r4, [r7, #0]
					xNumberOfSuccessfulAllocations++;
 80089da:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80089de:	bf38      	it	cc
 80089e0:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80089e2:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80089e6:	606e      	str	r6, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80089e8:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80089ea:	f001 f9b1 	bl	8009d50 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80089ee:	0763      	lsls	r3, r4, #29
 80089f0:	d00a      	beq.n	8008a08 <pvPortMalloc+0x10c>
 80089f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089f6:	f383 8811 	msr	BASEPRI, r3
 80089fa:	f3bf 8f6f 	isb	sy
 80089fe:	f3bf 8f4f 	dsb	sy
 8008a02:	e7fe      	b.n	8008a02 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008a04:	2400      	movs	r4, #0
 8008a06:	e7f0      	b.n	80089ea <pvPortMalloc+0xee>
}
 8008a08:	4620      	mov	r0, r4
 8008a0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a0e:	bf00      	nop
 8008a10:	24005d88 	.word	0x24005d88
 8008a14:	2400dd8c 	.word	0x2400dd8c
 8008a18:	24005d8c 	.word	0x24005d8c
 8008a1c:	2400dda0 	.word	0x2400dda0
 8008a20:	2400dd94 	.word	0x2400dd94
 8008a24:	2400dd90 	.word	0x2400dd90
 8008a28:	2400dd98 	.word	0x2400dd98

08008a2c <vPortFree>:
{
 8008a2c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008a2e:	4604      	mov	r4, r0
 8008a30:	b390      	cbz	r0, 8008a98 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008a32:	4a1a      	ldr	r2, [pc, #104]	; (8008a9c <vPortFree+0x70>)
 8008a34:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008a38:	6812      	ldr	r2, [r2, #0]
 8008a3a:	4213      	tst	r3, r2
 8008a3c:	d108      	bne.n	8008a50 <vPortFree+0x24>
 8008a3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a42:	f383 8811 	msr	BASEPRI, r3
 8008a46:	f3bf 8f6f 	isb	sy
 8008a4a:	f3bf 8f4f 	dsb	sy
 8008a4e:	e7fe      	b.n	8008a4e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008a50:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008a54:	b141      	cbz	r1, 8008a68 <vPortFree+0x3c>
 8008a56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5a:	f383 8811 	msr	BASEPRI, r3
 8008a5e:	f3bf 8f6f 	isb	sy
 8008a62:	f3bf 8f4f 	dsb	sy
 8008a66:	e7fe      	b.n	8008a66 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008a68:	ea23 0302 	bic.w	r3, r3, r2
 8008a6c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008a70:	f001 f8ca 	bl	8009c08 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008a74:	4a0a      	ldr	r2, [pc, #40]	; (8008aa0 <vPortFree+0x74>)
 8008a76:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008a7a:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008a7e:	6811      	ldr	r1, [r2, #0]
 8008a80:	440b      	add	r3, r1
 8008a82:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008a84:	f7ff ff14 	bl	80088b0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008a88:	4a06      	ldr	r2, [pc, #24]	; (8008aa4 <vPortFree+0x78>)
 8008a8a:	6813      	ldr	r3, [r2, #0]
 8008a8c:	3301      	adds	r3, #1
}
 8008a8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8008a92:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008a94:	f001 b95c 	b.w	8009d50 <xTaskResumeAll>
}
 8008a98:	bd10      	pop	{r4, pc}
 8008a9a:	bf00      	nop
 8008a9c:	2400dd8c 	.word	0x2400dd8c
 8008aa0:	2400dd90 	.word	0x2400dd90
 8008aa4:	2400dd9c 	.word	0x2400dd9c

08008aa8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008aa8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008aac:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008ab0:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008ab2:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008ab4:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008ab8:	2300      	movs	r3, #0
 8008aba:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008abc:	4770      	bx	lr

08008abe <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008abe:	2300      	movs	r3, #0
 8008ac0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008ac2:	4770      	bx	lr

08008ac4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008ac4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008ac6:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8008ac8:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008aca:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008acc:	689a      	ldr	r2, [r3, #8]
 8008ace:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008ad0:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008ad2:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008ad4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008ad6:	3301      	adds	r3, #1
 8008ad8:	6003      	str	r3, [r0, #0]
}
 8008ada:	4770      	bx	lr

08008adc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008adc:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008ade:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008ae0:	1c63      	adds	r3, r4, #1
 8008ae2:	d10a      	bne.n	8008afa <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008ae4:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008ae6:	685a      	ldr	r2, [r3, #4]
 8008ae8:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008aea:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008aec:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008aee:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008af0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008af2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008af4:	3301      	adds	r3, #1
 8008af6:	6003      	str	r3, [r0, #0]
}
 8008af8:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008afa:	f100 0208 	add.w	r2, r0, #8
 8008afe:	4613      	mov	r3, r2
 8008b00:	6852      	ldr	r2, [r2, #4]
 8008b02:	6815      	ldr	r5, [r2, #0]
 8008b04:	42a5      	cmp	r5, r4
 8008b06:	d9fa      	bls.n	8008afe <vListInsert+0x22>
 8008b08:	e7ed      	b.n	8008ae6 <vListInsert+0xa>

08008b0a <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8008b0a:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b0c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008b10:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008b12:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008b14:	6859      	ldr	r1, [r3, #4]
 8008b16:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008b18:	bf08      	it	eq
 8008b1a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008b1c:	2200      	movs	r2, #0
 8008b1e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008b20:	681a      	ldr	r2, [r3, #0]
 8008b22:	3a01      	subs	r2, #1
 8008b24:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008b26:	6818      	ldr	r0, [r3, #0]
}
 8008b28:	4770      	bx	lr
	...

08008b2c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008b2c:	4808      	ldr	r0, [pc, #32]	; (8008b50 <prvPortStartFirstTask+0x24>)
 8008b2e:	6800      	ldr	r0, [r0, #0]
 8008b30:	6800      	ldr	r0, [r0, #0]
 8008b32:	f380 8808 	msr	MSP, r0
 8008b36:	f04f 0000 	mov.w	r0, #0
 8008b3a:	f380 8814 	msr	CONTROL, r0
 8008b3e:	b662      	cpsie	i
 8008b40:	b661      	cpsie	f
 8008b42:	f3bf 8f4f 	dsb	sy
 8008b46:	f3bf 8f6f 	isb	sy
 8008b4a:	df00      	svc	0
 8008b4c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008b4e:	0000      	.short	0x0000
 8008b50:	e000ed08 	.word	0xe000ed08

08008b54 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008b54:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008b64 <vPortEnableVFP+0x10>
 8008b58:	6801      	ldr	r1, [r0, #0]
 8008b5a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008b5e:	6001      	str	r1, [r0, #0]
 8008b60:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008b62:	0000      	.short	0x0000
 8008b64:	e000ed88 	.word	0xe000ed88

08008b68 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8008b68:	2300      	movs	r3, #0
{
 8008b6a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008b6c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008b6e:	4b0d      	ldr	r3, [pc, #52]	; (8008ba4 <prvTaskExitError+0x3c>)
 8008b70:	681b      	ldr	r3, [r3, #0]
 8008b72:	3301      	adds	r3, #1
 8008b74:	d008      	beq.n	8008b88 <prvTaskExitError+0x20>
 8008b76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b7a:	f383 8811 	msr	BASEPRI, r3
 8008b7e:	f3bf 8f6f 	isb	sy
 8008b82:	f3bf 8f4f 	dsb	sy
 8008b86:	e7fe      	b.n	8008b86 <prvTaskExitError+0x1e>
 8008b88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b8c:	f383 8811 	msr	BASEPRI, r3
 8008b90:	f3bf 8f6f 	isb	sy
 8008b94:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008b98:	9b01      	ldr	r3, [sp, #4]
 8008b9a:	2b00      	cmp	r3, #0
 8008b9c:	d0fc      	beq.n	8008b98 <prvTaskExitError+0x30>
}
 8008b9e:	b002      	add	sp, #8
 8008ba0:	4770      	bx	lr
 8008ba2:	bf00      	nop
 8008ba4:	2400007c 	.word	0x2400007c

08008ba8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008ba8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008bac:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008bb0:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8008bb4:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008bb6:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008bb8:	4b03      	ldr	r3, [pc, #12]	; (8008bc8 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008bba:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008bbc:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008bbe:	f06f 0302 	mvn.w	r3, #2
 8008bc2:	6203      	str	r3, [r0, #32]
}
 8008bc4:	4770      	bx	lr
 8008bc6:	bf00      	nop
 8008bc8:	08008b69 	.word	0x08008b69
 8008bcc:	00000000 	.word	0x00000000

08008bd0 <SVC_Handler>:
	__asm volatile (
 8008bd0:	4b07      	ldr	r3, [pc, #28]	; (8008bf0 <pxCurrentTCBConst2>)
 8008bd2:	6819      	ldr	r1, [r3, #0]
 8008bd4:	6808      	ldr	r0, [r1, #0]
 8008bd6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bda:	f380 8809 	msr	PSP, r0
 8008bde:	f3bf 8f6f 	isb	sy
 8008be2:	f04f 0000 	mov.w	r0, #0
 8008be6:	f380 8811 	msr	BASEPRI, r0
 8008bea:	4770      	bx	lr
 8008bec:	f3af 8000 	nop.w

08008bf0 <pxCurrentTCBConst2>:
 8008bf0:	2400ddf0 	.word	0x2400ddf0

08008bf4 <vPortEnterCritical>:
 8008bf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bf8:	f383 8811 	msr	BASEPRI, r3
 8008bfc:	f3bf 8f6f 	isb	sy
 8008c00:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008c04:	4a0a      	ldr	r2, [pc, #40]	; (8008c30 <vPortEnterCritical+0x3c>)
 8008c06:	6813      	ldr	r3, [r2, #0]
 8008c08:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008c0a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008c0c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008c0e:	d10e      	bne.n	8008c2e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008c10:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c14:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008c18:	b2db      	uxtb	r3, r3
 8008c1a:	b143      	cbz	r3, 8008c2e <vPortEnterCritical+0x3a>
 8008c1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c20:	f383 8811 	msr	BASEPRI, r3
 8008c24:	f3bf 8f6f 	isb	sy
 8008c28:	f3bf 8f4f 	dsb	sy
 8008c2c:	e7fe      	b.n	8008c2c <vPortEnterCritical+0x38>
}
 8008c2e:	4770      	bx	lr
 8008c30:	2400007c 	.word	0x2400007c

08008c34 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008c34:	4a08      	ldr	r2, [pc, #32]	; (8008c58 <vPortExitCritical+0x24>)
 8008c36:	6813      	ldr	r3, [r2, #0]
 8008c38:	b943      	cbnz	r3, 8008c4c <vPortExitCritical+0x18>
 8008c3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3e:	f383 8811 	msr	BASEPRI, r3
 8008c42:	f3bf 8f6f 	isb	sy
 8008c46:	f3bf 8f4f 	dsb	sy
 8008c4a:	e7fe      	b.n	8008c4a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008c4c:	3b01      	subs	r3, #1
 8008c4e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008c50:	b90b      	cbnz	r3, 8008c56 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008c52:	f383 8811 	msr	BASEPRI, r3
}
 8008c56:	4770      	bx	lr
 8008c58:	2400007c 	.word	0x2400007c
 8008c5c:	00000000 	.word	0x00000000

08008c60 <PendSV_Handler>:
	__asm volatile
 8008c60:	f3ef 8009 	mrs	r0, PSP
 8008c64:	f3bf 8f6f 	isb	sy
 8008c68:	4b15      	ldr	r3, [pc, #84]	; (8008cc0 <pxCurrentTCBConst>)
 8008c6a:	681a      	ldr	r2, [r3, #0]
 8008c6c:	f01e 0f10 	tst.w	lr, #16
 8008c70:	bf08      	it	eq
 8008c72:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008c76:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c7a:	6010      	str	r0, [r2, #0]
 8008c7c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008c80:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008c84:	f380 8811 	msr	BASEPRI, r0
 8008c88:	f3bf 8f4f 	dsb	sy
 8008c8c:	f3bf 8f6f 	isb	sy
 8008c90:	f001 f960 	bl	8009f54 <vTaskSwitchContext>
 8008c94:	f04f 0000 	mov.w	r0, #0
 8008c98:	f380 8811 	msr	BASEPRI, r0
 8008c9c:	bc09      	pop	{r0, r3}
 8008c9e:	6819      	ldr	r1, [r3, #0]
 8008ca0:	6808      	ldr	r0, [r1, #0]
 8008ca2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ca6:	f01e 0f10 	tst.w	lr, #16
 8008caa:	bf08      	it	eq
 8008cac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008cb0:	f380 8809 	msr	PSP, r0
 8008cb4:	f3bf 8f6f 	isb	sy
 8008cb8:	4770      	bx	lr
 8008cba:	bf00      	nop
 8008cbc:	f3af 8000 	nop.w

08008cc0 <pxCurrentTCBConst>:
 8008cc0:	2400ddf0 	.word	0x2400ddf0

08008cc4 <xPortSysTickHandler>:
{
 8008cc4:	b508      	push	{r3, lr}
	__asm volatile
 8008cc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cca:	f383 8811 	msr	BASEPRI, r3
 8008cce:	f3bf 8f6f 	isb	sy
 8008cd2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008cd6:	f000 ffa5 	bl	8009c24 <xTaskIncrementTick>
 8008cda:	b128      	cbz	r0, 8008ce8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008cdc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ce0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ce4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008ce8:	2300      	movs	r3, #0
 8008cea:	f383 8811 	msr	BASEPRI, r3
}
 8008cee:	bd08      	pop	{r3, pc}

08008cf0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008cf0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008cf4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008cf6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008cfa:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008cfc:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008cfe:	4b04      	ldr	r3, [pc, #16]	; (8008d10 <vPortSetupTimerInterrupt+0x20>)
 8008d00:	681b      	ldr	r3, [r3, #0]
 8008d02:	fbb3 f3f1 	udiv	r3, r3, r1
 8008d06:	3b01      	subs	r3, #1
 8008d08:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008d0a:	2307      	movs	r3, #7
 8008d0c:	6113      	str	r3, [r2, #16]
}
 8008d0e:	4770      	bx	lr
 8008d10:	2400006c 	.word	0x2400006c

08008d14 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008d18:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d1a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008d1e:	4a3a      	ldr	r2, [pc, #232]	; (8008e08 <xPortStartScheduler+0xf4>)
 8008d20:	4291      	cmp	r1, r2
 8008d22:	d108      	bne.n	8008d36 <xPortStartScheduler+0x22>
	__asm volatile
 8008d24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d28:	f383 8811 	msr	BASEPRI, r3
 8008d2c:	f3bf 8f6f 	isb	sy
 8008d30:	f3bf 8f4f 	dsb	sy
 8008d34:	e7fe      	b.n	8008d34 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008d36:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008d3a:	4b34      	ldr	r3, [pc, #208]	; (8008e0c <xPortStartScheduler+0xf8>)
 8008d3c:	429a      	cmp	r2, r3
 8008d3e:	d108      	bne.n	8008d52 <xPortStartScheduler+0x3e>
 8008d40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d44:	f383 8811 	msr	BASEPRI, r3
 8008d48:	f3bf 8f6f 	isb	sy
 8008d4c:	f3bf 8f4f 	dsb	sy
 8008d50:	e7fe      	b.n	8008d50 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008d52:	4b2f      	ldr	r3, [pc, #188]	; (8008e10 <xPortStartScheduler+0xfc>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008d54:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008d56:	781a      	ldrb	r2, [r3, #0]
 8008d58:	b2d2      	uxtb	r2, r2
 8008d5a:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008d5c:	22ff      	movs	r2, #255	; 0xff
 8008d5e:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008d60:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008d62:	4a2c      	ldr	r2, [pc, #176]	; (8008e14 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008d64:	b2db      	uxtb	r3, r3
 8008d66:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008d6a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008d6e:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008d72:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008d74:	2307      	movs	r3, #7
 8008d76:	4a28      	ldr	r2, [pc, #160]	; (8008e18 <xPortStartScheduler+0x104>)
 8008d78:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008d7a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008d7e:	1e5c      	subs	r4, r3, #1
 8008d80:	0600      	lsls	r0, r0, #24
 8008d82:	d40c      	bmi.n	8008d9e <xPortStartScheduler+0x8a>
 8008d84:	b111      	cbz	r1, 8008d8c <xPortStartScheduler+0x78>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008d86:	2b03      	cmp	r3, #3
 8008d88:	6013      	str	r3, [r2, #0]
 8008d8a:	d011      	beq.n	8008db0 <xPortStartScheduler+0x9c>
 8008d8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d90:	f383 8811 	msr	BASEPRI, r3
 8008d94:	f3bf 8f6f 	isb	sy
 8008d98:	f3bf 8f4f 	dsb	sy
 8008d9c:	e7fe      	b.n	8008d9c <xPortStartScheduler+0x88>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008d9e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008da2:	2101      	movs	r1, #1
 8008da4:	005b      	lsls	r3, r3, #1
 8008da6:	b2db      	uxtb	r3, r3
 8008da8:	f88d 3003 	strb.w	r3, [sp, #3]
 8008dac:	4623      	mov	r3, r4
 8008dae:	e7e4      	b.n	8008d7a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008db0:	f44f 7340 	mov.w	r3, #768	; 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008db4:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
	uxCriticalNesting = 0;
 8008db8:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008dba:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008dbc:	9b01      	ldr	r3, [sp, #4]
 8008dbe:	4a14      	ldr	r2, [pc, #80]	; (8008e10 <xPortStartScheduler+0xfc>)
 8008dc0:	b2db      	uxtb	r3, r3
 8008dc2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008dc4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008dc8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008dcc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008dd0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008dd4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008dd8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008ddc:	f7ff ff88 	bl	8008cf0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008de0:	4b0e      	ldr	r3, [pc, #56]	; (8008e1c <xPortStartScheduler+0x108>)
 8008de2:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008de4:	f7ff feb6 	bl	8008b54 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008de8:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008dec:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008df0:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008df4:	f7ff fe9a 	bl	8008b2c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008df8:	f001 f8ac 	bl	8009f54 <vTaskSwitchContext>
}
 8008dfc:	4628      	mov	r0, r5
	prvTaskExitError();
 8008dfe:	f7ff feb3 	bl	8008b68 <prvTaskExitError>
}
 8008e02:	b003      	add	sp, #12
 8008e04:	bd30      	pop	{r4, r5, pc}
 8008e06:	bf00      	nop
 8008e08:	410fc271 	.word	0x410fc271
 8008e0c:	410fc270 	.word	0x410fc270
 8008e10:	e000e400 	.word	0xe000e400
 8008e14:	2400dda8 	.word	0x2400dda8
 8008e18:	2400ddac 	.word	0x2400ddac
 8008e1c:	2400007c 	.word	0x2400007c

08008e20 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008e20:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008e24:	2b0f      	cmp	r3, #15
 8008e26:	d90e      	bls.n	8008e46 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008e28:	4a11      	ldr	r2, [pc, #68]	; (8008e70 <vPortValidateInterruptPriority+0x50>)
 8008e2a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008e2c:	4a11      	ldr	r2, [pc, #68]	; (8008e74 <vPortValidateInterruptPriority+0x54>)
 8008e2e:	7812      	ldrb	r2, [r2, #0]
 8008e30:	429a      	cmp	r2, r3
 8008e32:	d908      	bls.n	8008e46 <vPortValidateInterruptPriority+0x26>
 8008e34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e38:	f383 8811 	msr	BASEPRI, r3
 8008e3c:	f3bf 8f6f 	isb	sy
 8008e40:	f3bf 8f4f 	dsb	sy
 8008e44:	e7fe      	b.n	8008e44 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008e46:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e4a:	4a0b      	ldr	r2, [pc, #44]	; (8008e78 <vPortValidateInterruptPriority+0x58>)
 8008e4c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008e50:	6812      	ldr	r2, [r2, #0]
 8008e52:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008e56:	4293      	cmp	r3, r2
 8008e58:	d908      	bls.n	8008e6c <vPortValidateInterruptPriority+0x4c>
 8008e5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e5e:	f383 8811 	msr	BASEPRI, r3
 8008e62:	f3bf 8f6f 	isb	sy
 8008e66:	f3bf 8f4f 	dsb	sy
 8008e6a:	e7fe      	b.n	8008e6a <vPortValidateInterruptPriority+0x4a>
	}
 8008e6c:	4770      	bx	lr
 8008e6e:	bf00      	nop
 8008e70:	e000e3f0 	.word	0xe000e3f0
 8008e74:	2400dda8 	.word	0x2400dda8
 8008e78:	2400ddac 	.word	0x2400ddac

08008e7c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008e7c:	b510      	push	{r4, lr}
 8008e7e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008e80:	f7ff feb8 	bl	8008bf4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008e84:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008e86:	f7ff fed5 	bl	8008c34 <vPortExitCritical>

	return xReturn;
}
 8008e8a:	fab4 f084 	clz	r0, r4
 8008e8e:	0940      	lsrs	r0, r0, #5
 8008e90:	bd10      	pop	{r4, pc}

08008e92 <prvCopyDataToQueue>:
{
 8008e92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e94:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008e96:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 8008e98:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e9a:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008e9c:	b952      	cbnz	r2, 8008eb4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008e9e:	6807      	ldr	r7, [r0, #0]
 8008ea0:	bb47      	cbnz	r7, 8008ef4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008ea2:	6880      	ldr	r0, [r0, #8]
 8008ea4:	f001 f9b4 	bl	800a210 <xTaskPriorityDisinherit>
 8008ea8:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008eaa:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008eac:	3601      	adds	r6, #1
}
 8008eae:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008eb0:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008eb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008eb4:	b965      	cbnz	r5, 8008ed0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008eb6:	6840      	ldr	r0, [r0, #4]
 8008eb8:	f018 fa73 	bl	80213a2 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008ebc:	6863      	ldr	r3, [r4, #4]
 8008ebe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008ec0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008ec2:	68a2      	ldr	r2, [r4, #8]
 8008ec4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008ec6:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008ec8:	d3f0      	bcc.n	8008eac <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008eca:	6823      	ldr	r3, [r4, #0]
 8008ecc:	6063      	str	r3, [r4, #4]
 8008ece:	e7ed      	b.n	8008eac <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008ed0:	68c0      	ldr	r0, [r0, #12]
 8008ed2:	f018 fa66 	bl	80213a2 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008ed6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008ed8:	68e3      	ldr	r3, [r4, #12]
 8008eda:	4251      	negs	r1, r2
 8008edc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008ede:	6822      	ldr	r2, [r4, #0]
 8008ee0:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008ee2:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008ee4:	bf3e      	ittt	cc
 8008ee6:	68a3      	ldrcc	r3, [r4, #8]
 8008ee8:	185b      	addcc	r3, r3, r1
 8008eea:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008eec:	2d02      	cmp	r5, #2
 8008eee:	d101      	bne.n	8008ef4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008ef0:	b116      	cbz	r6, 8008ef8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008ef2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008ef4:	2500      	movs	r5, #0
 8008ef6:	e7d9      	b.n	8008eac <prvCopyDataToQueue+0x1a>
 8008ef8:	4635      	mov	r5, r6
 8008efa:	e7d7      	b.n	8008eac <prvCopyDataToQueue+0x1a>

08008efc <prvCopyDataFromQueue>:
{
 8008efc:	4603      	mov	r3, r0
 8008efe:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f00:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008f02:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f04:	b162      	cbz	r2, 8008f20 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f06:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f08:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f0a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f0c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f0e:	60dc      	str	r4, [r3, #12]
}
 8008f10:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f14:	bf24      	itt	cs
 8008f16:	6819      	ldrcs	r1, [r3, #0]
 8008f18:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f1a:	68d9      	ldr	r1, [r3, #12]
 8008f1c:	f018 ba41 	b.w	80213a2 <memcpy>
}
 8008f20:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008f24:	4770      	bx	lr

08008f26 <prvUnlockQueue>:
{
 8008f26:	b570      	push	{r4, r5, r6, lr}
 8008f28:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008f2a:	f7ff fe63 	bl	8008bf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008f2e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f32:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008f36:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008f38:	2d00      	cmp	r5, #0
 8008f3a:	dc14      	bgt.n	8008f66 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008f3c:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f3e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8008f42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008f46:	f7ff fe75 	bl	8008c34 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008f4a:	f7ff fe53 	bl	8008bf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008f4e:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 8008f52:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008f54:	2d00      	cmp	r5, #0
 8008f56:	dc12      	bgt.n	8008f7e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008f58:	23ff      	movs	r3, #255	; 0xff
 8008f5a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008f5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008f62:	f7ff be67 	b.w	8008c34 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008f66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008f68:	2b00      	cmp	r3, #0
 8008f6a:	d0e7      	beq.n	8008f3c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f6c:	4630      	mov	r0, r6
 8008f6e:	f001 f86d 	bl	800a04c <xTaskRemoveFromEventList>
 8008f72:	b108      	cbz	r0, 8008f78 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008f74:	f001 f8f6 	bl	800a164 <vTaskMissedYield>
			--cTxLock;
 8008f78:	3d01      	subs	r5, #1
 8008f7a:	b26d      	sxtb	r5, r5
 8008f7c:	e7dc      	b.n	8008f38 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f7e:	6923      	ldr	r3, [r4, #16]
 8008f80:	2b00      	cmp	r3, #0
 8008f82:	d0e9      	beq.n	8008f58 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f84:	4630      	mov	r0, r6
 8008f86:	f001 f861 	bl	800a04c <xTaskRemoveFromEventList>
 8008f8a:	b108      	cbz	r0, 8008f90 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008f8c:	f001 f8ea 	bl	800a164 <vTaskMissedYield>
				--cRxLock;
 8008f90:	3d01      	subs	r5, #1
 8008f92:	b26d      	sxtb	r5, r5
 8008f94:	e7de      	b.n	8008f54 <prvUnlockQueue+0x2e>

08008f96 <xQueueGenericReset>:
{
 8008f96:	b538      	push	{r3, r4, r5, lr}
 8008f98:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008f9a:	4604      	mov	r4, r0
 8008f9c:	b940      	cbnz	r0, 8008fb0 <xQueueGenericReset+0x1a>
 8008f9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fa2:	f383 8811 	msr	BASEPRI, r3
 8008fa6:	f3bf 8f6f 	isb	sy
 8008faa:	f3bf 8f4f 	dsb	sy
 8008fae:	e7fe      	b.n	8008fae <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008fb0:	f7ff fe20 	bl	8008bf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fb4:	6822      	ldr	r2, [r4, #0]
 8008fb6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008fba:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fbc:	434b      	muls	r3, r1
 8008fbe:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fc0:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fc2:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fc4:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008fc6:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008fc8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fca:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008fcc:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008fce:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008fd2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008fd6:	b9a5      	cbnz	r5, 8009002 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008fd8:	6923      	ldr	r3, [r4, #16]
 8008fda:	b173      	cbz	r3, 8008ffa <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fdc:	f104 0010 	add.w	r0, r4, #16
 8008fe0:	f001 f834 	bl	800a04c <xTaskRemoveFromEventList>
 8008fe4:	b148      	cbz	r0, 8008ffa <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008fe6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008fee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008ff2:	f3bf 8f4f 	dsb	sy
 8008ff6:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008ffa:	f7ff fe1b 	bl	8008c34 <vPortExitCritical>
}
 8008ffe:	2001      	movs	r0, #1
 8009000:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009002:	f104 0010 	add.w	r0, r4, #16
 8009006:	f7ff fd4f 	bl	8008aa8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800900a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800900e:	f7ff fd4b 	bl	8008aa8 <vListInitialise>
 8009012:	e7f2      	b.n	8008ffa <xQueueGenericReset+0x64>

08009014 <xQueueGenericCreateStatic>:
	{
 8009014:	b513      	push	{r0, r1, r4, lr}
 8009016:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009018:	b940      	cbnz	r0, 800902c <xQueueGenericCreateStatic+0x18>
 800901a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800901e:	f383 8811 	msr	BASEPRI, r3
 8009022:	f3bf 8f6f 	isb	sy
 8009026:	f3bf 8f4f 	dsb	sy
 800902a:	e7fe      	b.n	800902a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800902c:	b943      	cbnz	r3, 8009040 <xQueueGenericCreateStatic+0x2c>
 800902e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009032:	f383 8811 	msr	BASEPRI, r3
 8009036:	f3bf 8f6f 	isb	sy
 800903a:	f3bf 8f4f 	dsb	sy
 800903e:	e7fe      	b.n	800903e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009040:	b14a      	cbz	r2, 8009056 <xQueueGenericCreateStatic+0x42>
 8009042:	b991      	cbnz	r1, 800906a <xQueueGenericCreateStatic+0x56>
 8009044:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009048:	f383 8811 	msr	BASEPRI, r3
 800904c:	f3bf 8f6f 	isb	sy
 8009050:	f3bf 8f4f 	dsb	sy
 8009054:	e7fe      	b.n	8009054 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8009056:	b141      	cbz	r1, 800906a <xQueueGenericCreateStatic+0x56>
 8009058:	f04f 0350 	mov.w	r3, #80	; 0x50
 800905c:	f383 8811 	msr	BASEPRI, r3
 8009060:	f3bf 8f6f 	isb	sy
 8009064:	f3bf 8f4f 	dsb	sy
 8009068:	e7fe      	b.n	8009068 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800906a:	2350      	movs	r3, #80	; 0x50
 800906c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800906e:	9b01      	ldr	r3, [sp, #4]
 8009070:	2b50      	cmp	r3, #80	; 0x50
 8009072:	d008      	beq.n	8009086 <xQueueGenericCreateStatic+0x72>
 8009074:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009078:	f383 8811 	msr	BASEPRI, r3
 800907c:	f3bf 8f6f 	isb	sy
 8009080:	f3bf 8f4f 	dsb	sy
 8009084:	e7fe      	b.n	8009084 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009086:	2900      	cmp	r1, #0
 8009088:	bf08      	it	eq
 800908a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800908c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800908e:	2301      	movs	r3, #1
 8009090:	6022      	str	r2, [r4, #0]
 8009092:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8009096:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800909a:	4619      	mov	r1, r3
 800909c:	4620      	mov	r0, r4
 800909e:	f7ff ff7a 	bl	8008f96 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80090a2:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 80090a6:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 80090a8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80090ac:	b002      	add	sp, #8
 80090ae:	bd10      	pop	{r4, pc}

080090b0 <xQueueGenericCreate>:
	{
 80090b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090b2:	460d      	mov	r5, r1
 80090b4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80090b6:	4606      	mov	r6, r0
 80090b8:	b940      	cbnz	r0, 80090cc <xQueueGenericCreate+0x1c>
 80090ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090be:	f383 8811 	msr	BASEPRI, r3
 80090c2:	f3bf 8f6f 	isb	sy
 80090c6:	f3bf 8f4f 	dsb	sy
 80090ca:	e7fe      	b.n	80090ca <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80090cc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80090ce:	3050      	adds	r0, #80	; 0x50
 80090d0:	f7ff fc14 	bl	80088fc <pvPortMalloc>
		if( pxNewQueue != NULL )
 80090d4:	4604      	mov	r4, r0
 80090d6:	b170      	cbz	r0, 80090f6 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80090d8:	2300      	movs	r3, #0
 80090da:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80090de:	b165      	cbz	r5, 80090fa <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80090e0:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80090e4:	2101      	movs	r1, #1
 80090e6:	4620      	mov	r0, r4
 80090e8:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80090ea:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80090ee:	f7ff ff52 	bl	8008f96 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80090f2:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80090f6:	4620      	mov	r0, r4
 80090f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090fa:	4603      	mov	r3, r0
 80090fc:	e7f2      	b.n	80090e4 <xQueueGenericCreate+0x34>

080090fe <xQueueCreateCountingSemaphoreStatic>:
	{
 80090fe:	b513      	push	{r0, r1, r4, lr}
 8009100:	4613      	mov	r3, r2
 8009102:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009104:	b940      	cbnz	r0, 8009118 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009106:	f04f 0350 	mov.w	r3, #80	; 0x50
 800910a:	f383 8811 	msr	BASEPRI, r3
 800910e:	f3bf 8f6f 	isb	sy
 8009112:	f3bf 8f4f 	dsb	sy
 8009116:	e7fe      	b.n	8009116 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8009118:	4288      	cmp	r0, r1
 800911a:	d208      	bcs.n	800912e <xQueueCreateCountingSemaphoreStatic+0x30>
 800911c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009120:	f383 8811 	msr	BASEPRI, r3
 8009124:	f3bf 8f6f 	isb	sy
 8009128:	f3bf 8f4f 	dsb	sy
 800912c:	e7fe      	b.n	800912c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800912e:	2202      	movs	r2, #2
 8009130:	9200      	str	r2, [sp, #0]
 8009132:	2200      	movs	r2, #0
 8009134:	4611      	mov	r1, r2
 8009136:	f7ff ff6d 	bl	8009014 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800913a:	b100      	cbz	r0, 800913e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800913c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800913e:	b002      	add	sp, #8
 8009140:	bd10      	pop	{r4, pc}

08009142 <xQueueCreateCountingSemaphore>:
	{
 8009142:	b510      	push	{r4, lr}
 8009144:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009146:	b940      	cbnz	r0, 800915a <xQueueCreateCountingSemaphore+0x18>
 8009148:	f04f 0350 	mov.w	r3, #80	; 0x50
 800914c:	f383 8811 	msr	BASEPRI, r3
 8009150:	f3bf 8f6f 	isb	sy
 8009154:	f3bf 8f4f 	dsb	sy
 8009158:	e7fe      	b.n	8009158 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800915a:	4288      	cmp	r0, r1
 800915c:	d208      	bcs.n	8009170 <xQueueCreateCountingSemaphore+0x2e>
 800915e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009162:	f383 8811 	msr	BASEPRI, r3
 8009166:	f3bf 8f6f 	isb	sy
 800916a:	f3bf 8f4f 	dsb	sy
 800916e:	e7fe      	b.n	800916e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009170:	2202      	movs	r2, #2
 8009172:	2100      	movs	r1, #0
 8009174:	f7ff ff9c 	bl	80090b0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8009178:	b100      	cbz	r0, 800917c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800917a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800917c:	bd10      	pop	{r4, pc}

0800917e <xQueueGenericSend>:
{
 800917e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009182:	b085      	sub	sp, #20
 8009184:	4688      	mov	r8, r1
 8009186:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009188:	4604      	mov	r4, r0
{
 800918a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800918c:	b940      	cbnz	r0, 80091a0 <xQueueGenericSend+0x22>
 800918e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009192:	f383 8811 	msr	BASEPRI, r3
 8009196:	f3bf 8f6f 	isb	sy
 800919a:	f3bf 8f4f 	dsb	sy
 800919e:	e7fe      	b.n	800919e <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80091a0:	b951      	cbnz	r1, 80091b8 <xQueueGenericSend+0x3a>
 80091a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80091a4:	b143      	cbz	r3, 80091b8 <xQueueGenericSend+0x3a>
 80091a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091aa:	f383 8811 	msr	BASEPRI, r3
 80091ae:	f3bf 8f6f 	isb	sy
 80091b2:	f3bf 8f4f 	dsb	sy
 80091b6:	e7fe      	b.n	80091b6 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80091b8:	2f02      	cmp	r7, #2
 80091ba:	d10b      	bne.n	80091d4 <xQueueGenericSend+0x56>
 80091bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80091be:	2b01      	cmp	r3, #1
 80091c0:	d008      	beq.n	80091d4 <xQueueGenericSend+0x56>
 80091c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c6:	f383 8811 	msr	BASEPRI, r3
 80091ca:	f3bf 8f6f 	isb	sy
 80091ce:	f3bf 8f4f 	dsb	sy
 80091d2:	e7fe      	b.n	80091d2 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80091d4:	f000 ffcc 	bl	800a170 <xTaskGetSchedulerState>
 80091d8:	4606      	mov	r6, r0
 80091da:	b950      	cbnz	r0, 80091f2 <xQueueGenericSend+0x74>
 80091dc:	9b01      	ldr	r3, [sp, #4]
 80091de:	b14b      	cbz	r3, 80091f4 <xQueueGenericSend+0x76>
 80091e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091e4:	f383 8811 	msr	BASEPRI, r3
 80091e8:	f3bf 8f6f 	isb	sy
 80091ec:	f3bf 8f4f 	dsb	sy
 80091f0:	e7fe      	b.n	80091f0 <xQueueGenericSend+0x72>
 80091f2:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80091f4:	f04f 0900 	mov.w	r9, #0
 80091f8:	e037      	b.n	800926a <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 80091fa:	9d01      	ldr	r5, [sp, #4]
 80091fc:	b91d      	cbnz	r5, 8009206 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 80091fe:	f7ff fd19 	bl	8008c34 <vPortExitCritical>
			return errQUEUE_FULL;
 8009202:	2000      	movs	r0, #0
 8009204:	e052      	b.n	80092ac <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009206:	b916      	cbnz	r6, 800920e <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009208:	a802      	add	r0, sp, #8
 800920a:	f000 ff63 	bl	800a0d4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800920e:	f7ff fd11 	bl	8008c34 <vPortExitCritical>
		vTaskSuspendAll();
 8009212:	f000 fcf9 	bl	8009c08 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009216:	f7ff fced 	bl	8008bf4 <vPortEnterCritical>
 800921a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800921e:	2bff      	cmp	r3, #255	; 0xff
 8009220:	d101      	bne.n	8009226 <xQueueGenericSend+0xa8>
 8009222:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 8009226:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800922a:	2bff      	cmp	r3, #255	; 0xff
 800922c:	d101      	bne.n	8009232 <xQueueGenericSend+0xb4>
 800922e:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 8009232:	f7ff fcff 	bl	8008c34 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009236:	a901      	add	r1, sp, #4
 8009238:	a802      	add	r0, sp, #8
 800923a:	f000 ff57 	bl	800a0ec <xTaskCheckForTimeOut>
 800923e:	2800      	cmp	r0, #0
 8009240:	d14a      	bne.n	80092d8 <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009242:	f7ff fcd7 	bl	8008bf4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009246:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009248:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800924a:	429a      	cmp	r2, r3
 800924c:	d131      	bne.n	80092b2 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800924e:	f7ff fcf1 	bl	8008c34 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009252:	9901      	ldr	r1, [sp, #4]
 8009254:	f104 0010 	add.w	r0, r4, #16
 8009258:	f000 fec0 	bl	8009fdc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800925c:	4620      	mov	r0, r4
 800925e:	f7ff fe62 	bl	8008f26 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009262:	f000 fd75 	bl	8009d50 <xTaskResumeAll>
 8009266:	b360      	cbz	r0, 80092c2 <xQueueGenericSend+0x144>
 8009268:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800926a:	f7ff fcc3 	bl	8008bf4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800926e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009270:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009272:	429a      	cmp	r2, r3
 8009274:	d301      	bcc.n	800927a <xQueueGenericSend+0xfc>
 8009276:	2f02      	cmp	r7, #2
 8009278:	d1bf      	bne.n	80091fa <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800927a:	463a      	mov	r2, r7
 800927c:	4641      	mov	r1, r8
 800927e:	4620      	mov	r0, r4
 8009280:	f7ff fe07 	bl	8008e92 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009284:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009286:	b11b      	cbz	r3, 8009290 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009288:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800928c:	f000 fede 	bl	800a04c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009290:	b148      	cbz	r0, 80092a6 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009292:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009296:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800929a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800929e:	f3bf 8f4f 	dsb	sy
 80092a2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80092a6:	f7ff fcc5 	bl	8008c34 <vPortExitCritical>
				return pdPASS;
 80092aa:	2001      	movs	r0, #1
}
 80092ac:	b005      	add	sp, #20
 80092ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 80092b2:	f7ff fcbf 	bl	8008c34 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80092b6:	4620      	mov	r0, r4
 80092b8:	f7ff fe35 	bl	8008f26 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80092bc:	f000 fd48 	bl	8009d50 <xTaskResumeAll>
 80092c0:	e7d2      	b.n	8009268 <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80092c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80092c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80092ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80092ce:	f3bf 8f4f 	dsb	sy
 80092d2:	f3bf 8f6f 	isb	sy
 80092d6:	e7c7      	b.n	8009268 <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 80092d8:	4620      	mov	r0, r4
 80092da:	f7ff fe24 	bl	8008f26 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80092de:	f000 fd37 	bl	8009d50 <xTaskResumeAll>
 80092e2:	e78e      	b.n	8009202 <xQueueGenericSend+0x84>

080092e4 <xQueueGenericSendFromISR>:
{
 80092e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80092e8:	4689      	mov	r9, r1
 80092ea:	4690      	mov	r8, r2
 80092ec:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80092ee:	4604      	mov	r4, r0
 80092f0:	b940      	cbnz	r0, 8009304 <xQueueGenericSendFromISR+0x20>
 80092f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f6:	f383 8811 	msr	BASEPRI, r3
 80092fa:	f3bf 8f6f 	isb	sy
 80092fe:	f3bf 8f4f 	dsb	sy
 8009302:	e7fe      	b.n	8009302 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009304:	b951      	cbnz	r1, 800931c <xQueueGenericSendFromISR+0x38>
 8009306:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009308:	b143      	cbz	r3, 800931c <xQueueGenericSendFromISR+0x38>
 800930a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800930e:	f383 8811 	msr	BASEPRI, r3
 8009312:	f3bf 8f6f 	isb	sy
 8009316:	f3bf 8f4f 	dsb	sy
 800931a:	e7fe      	b.n	800931a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800931c:	2f02      	cmp	r7, #2
 800931e:	d10b      	bne.n	8009338 <xQueueGenericSendFromISR+0x54>
 8009320:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009322:	2b01      	cmp	r3, #1
 8009324:	d008      	beq.n	8009338 <xQueueGenericSendFromISR+0x54>
 8009326:	f04f 0350 	mov.w	r3, #80	; 0x50
 800932a:	f383 8811 	msr	BASEPRI, r3
 800932e:	f3bf 8f6f 	isb	sy
 8009332:	f3bf 8f4f 	dsb	sy
 8009336:	e7fe      	b.n	8009336 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009338:	f7ff fd72 	bl	8008e20 <vPortValidateInterruptPriority>
	__asm volatile
 800933c:	f3ef 8611 	mrs	r6, BASEPRI
 8009340:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009344:	f383 8811 	msr	BASEPRI, r3
 8009348:	f3bf 8f6f 	isb	sy
 800934c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009350:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009352:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009354:	429a      	cmp	r2, r3
 8009356:	d301      	bcc.n	800935c <xQueueGenericSendFromISR+0x78>
 8009358:	2f02      	cmp	r7, #2
 800935a:	d123      	bne.n	80093a4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800935c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009360:	463a      	mov	r2, r7
 8009362:	4649      	mov	r1, r9
 8009364:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8009366:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009368:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800936a:	f7ff fd92 	bl	8008e92 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800936e:	1c6b      	adds	r3, r5, #1
 8009370:	d113      	bne.n	800939a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009372:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009374:	b90b      	cbnz	r3, 800937a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8009376:	2001      	movs	r0, #1
 8009378:	e00b      	b.n	8009392 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800937a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800937e:	f000 fe65 	bl	800a04c <xTaskRemoveFromEventList>
 8009382:	2800      	cmp	r0, #0
 8009384:	d0f7      	beq.n	8009376 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8009386:	f1b8 0f00 	cmp.w	r8, #0
 800938a:	d0f4      	beq.n	8009376 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800938c:	2001      	movs	r0, #1
 800938e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009392:	f386 8811 	msr	BASEPRI, r6
}
 8009396:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800939a:	3501      	adds	r5, #1
 800939c:	b26d      	sxtb	r5, r5
 800939e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80093a2:	e7e8      	b.n	8009376 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 80093a4:	2000      	movs	r0, #0
 80093a6:	e7f4      	b.n	8009392 <xQueueGenericSendFromISR+0xae>

080093a8 <xQueueGiveFromISR>:
{
 80093a8:	b570      	push	{r4, r5, r6, lr}
 80093aa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80093ac:	4604      	mov	r4, r0
 80093ae:	b940      	cbnz	r0, 80093c2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80093b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093b4:	f383 8811 	msr	BASEPRI, r3
 80093b8:	f3bf 8f6f 	isb	sy
 80093bc:	f3bf 8f4f 	dsb	sy
 80093c0:	e7fe      	b.n	80093c0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80093c2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80093c4:	b143      	cbz	r3, 80093d8 <xQueueGiveFromISR+0x30>
 80093c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ca:	f383 8811 	msr	BASEPRI, r3
 80093ce:	f3bf 8f6f 	isb	sy
 80093d2:	f3bf 8f4f 	dsb	sy
 80093d6:	e7fe      	b.n	80093d6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80093d8:	6803      	ldr	r3, [r0, #0]
 80093da:	b953      	cbnz	r3, 80093f2 <xQueueGiveFromISR+0x4a>
 80093dc:	6883      	ldr	r3, [r0, #8]
 80093de:	b143      	cbz	r3, 80093f2 <xQueueGiveFromISR+0x4a>
 80093e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093e4:	f383 8811 	msr	BASEPRI, r3
 80093e8:	f3bf 8f6f 	isb	sy
 80093ec:	f3bf 8f4f 	dsb	sy
 80093f0:	e7fe      	b.n	80093f0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80093f2:	f7ff fd15 	bl	8008e20 <vPortValidateInterruptPriority>
	__asm volatile
 80093f6:	f3ef 8611 	mrs	r6, BASEPRI
 80093fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093fe:	f383 8811 	msr	BASEPRI, r3
 8009402:	f3bf 8f6f 	isb	sy
 8009406:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800940a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800940c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800940e:	4293      	cmp	r3, r2
 8009410:	d91c      	bls.n	800944c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009412:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009416:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009418:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800941a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800941c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800941e:	d110      	bne.n	8009442 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009420:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009422:	b90b      	cbnz	r3, 8009428 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009424:	2001      	movs	r0, #1
 8009426:	e009      	b.n	800943c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009428:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800942c:	f000 fe0e 	bl	800a04c <xTaskRemoveFromEventList>
 8009430:	2800      	cmp	r0, #0
 8009432:	d0f7      	beq.n	8009424 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009434:	2d00      	cmp	r5, #0
 8009436:	d0f5      	beq.n	8009424 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009438:	2001      	movs	r0, #1
 800943a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800943c:	f386 8811 	msr	BASEPRI, r6
}
 8009440:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009442:	3301      	adds	r3, #1
 8009444:	b25b      	sxtb	r3, r3
 8009446:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800944a:	e7eb      	b.n	8009424 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800944c:	2000      	movs	r0, #0
 800944e:	e7f5      	b.n	800943c <xQueueGiveFromISR+0x94>

08009450 <xQueueReceive>:
{
 8009450:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009454:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 8009456:	4604      	mov	r4, r0
{
 8009458:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800945a:	b940      	cbnz	r0, 800946e <xQueueReceive+0x1e>
	__asm volatile
 800945c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009460:	f383 8811 	msr	BASEPRI, r3
 8009464:	f3bf 8f6f 	isb	sy
 8009468:	f3bf 8f4f 	dsb	sy
 800946c:	e7fe      	b.n	800946c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800946e:	b951      	cbnz	r1, 8009486 <xQueueReceive+0x36>
 8009470:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009472:	b143      	cbz	r3, 8009486 <xQueueReceive+0x36>
 8009474:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009478:	f383 8811 	msr	BASEPRI, r3
 800947c:	f3bf 8f6f 	isb	sy
 8009480:	f3bf 8f4f 	dsb	sy
 8009484:	e7fe      	b.n	8009484 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009486:	f000 fe73 	bl	800a170 <xTaskGetSchedulerState>
 800948a:	4606      	mov	r6, r0
 800948c:	b950      	cbnz	r0, 80094a4 <xQueueReceive+0x54>
 800948e:	9b01      	ldr	r3, [sp, #4]
 8009490:	b14b      	cbz	r3, 80094a6 <xQueueReceive+0x56>
 8009492:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009496:	f383 8811 	msr	BASEPRI, r3
 800949a:	f3bf 8f6f 	isb	sy
 800949e:	f3bf 8f4f 	dsb	sy
 80094a2:	e7fe      	b.n	80094a2 <xQueueReceive+0x52>
 80094a4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80094a6:	f04f 0800 	mov.w	r8, #0
 80094aa:	e03d      	b.n	8009528 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80094ac:	9d01      	ldr	r5, [sp, #4]
 80094ae:	b91d      	cbnz	r5, 80094b8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 80094b0:	f7ff fbc0 	bl	8008c34 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80094b4:	2000      	movs	r0, #0
 80094b6:	e056      	b.n	8009566 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 80094b8:	b916      	cbnz	r6, 80094c0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80094ba:	a802      	add	r0, sp, #8
 80094bc:	f000 fe0a 	bl	800a0d4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80094c0:	f7ff fbb8 	bl	8008c34 <vPortExitCritical>
		vTaskSuspendAll();
 80094c4:	f000 fba0 	bl	8009c08 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80094c8:	f7ff fb94 	bl	8008bf4 <vPortEnterCritical>
 80094cc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80094d0:	2bff      	cmp	r3, #255	; 0xff
 80094d2:	d101      	bne.n	80094d8 <xQueueReceive+0x88>
 80094d4:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 80094d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80094dc:	2bff      	cmp	r3, #255	; 0xff
 80094de:	d101      	bne.n	80094e4 <xQueueReceive+0x94>
 80094e0:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 80094e4:	f7ff fba6 	bl	8008c34 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80094e8:	a901      	add	r1, sp, #4
 80094ea:	a802      	add	r0, sp, #8
 80094ec:	f000 fdfe 	bl	800a0ec <xTaskCheckForTimeOut>
 80094f0:	2800      	cmp	r0, #0
 80094f2:	d141      	bne.n	8009578 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80094f4:	4620      	mov	r0, r4
 80094f6:	f7ff fcc1 	bl	8008e7c <prvIsQueueEmpty>
 80094fa:	b3b8      	cbz	r0, 800956c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80094fc:	9901      	ldr	r1, [sp, #4]
 80094fe:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009502:	f000 fd6b 	bl	8009fdc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009506:	4620      	mov	r0, r4
 8009508:	f7ff fd0d 	bl	8008f26 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800950c:	f000 fc20 	bl	8009d50 <xTaskResumeAll>
 8009510:	b948      	cbnz	r0, 8009526 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009512:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009516:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800951a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800951e:	f3bf 8f4f 	dsb	sy
 8009522:	f3bf 8f6f 	isb	sy
 8009526:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009528:	f7ff fb64 	bl	8008bf4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800952c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800952e:	2d00      	cmp	r5, #0
 8009530:	d0bc      	beq.n	80094ac <xQueueReceive+0x5c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009532:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009534:	4639      	mov	r1, r7
 8009536:	4620      	mov	r0, r4
 8009538:	f7ff fce0 	bl	8008efc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800953c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800953e:	6923      	ldr	r3, [r4, #16]
 8009540:	b173      	cbz	r3, 8009560 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009542:	f104 0010 	add.w	r0, r4, #16
 8009546:	f000 fd81 	bl	800a04c <xTaskRemoveFromEventList>
 800954a:	b148      	cbz	r0, 8009560 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800954c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009550:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009554:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009558:	f3bf 8f4f 	dsb	sy
 800955c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009560:	f7ff fb68 	bl	8008c34 <vPortExitCritical>
				return pdPASS;
 8009564:	2001      	movs	r0, #1
}
 8009566:	b004      	add	sp, #16
 8009568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800956c:	4620      	mov	r0, r4
 800956e:	f7ff fcda 	bl	8008f26 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009572:	f000 fbed 	bl	8009d50 <xTaskResumeAll>
 8009576:	e7d6      	b.n	8009526 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009578:	4620      	mov	r0, r4
 800957a:	f7ff fcd4 	bl	8008f26 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800957e:	f000 fbe7 	bl	8009d50 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009582:	4620      	mov	r0, r4
 8009584:	f7ff fc7a 	bl	8008e7c <prvIsQueueEmpty>
 8009588:	2800      	cmp	r0, #0
 800958a:	d0cc      	beq.n	8009526 <xQueueReceive+0xd6>
 800958c:	e792      	b.n	80094b4 <xQueueReceive+0x64>

0800958e <xQueueSemaphoreTake>:
{
 800958e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009590:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009592:	4604      	mov	r4, r0
{
 8009594:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009596:	b940      	cbnz	r0, 80095aa <xQueueSemaphoreTake+0x1c>
 8009598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800959c:	f383 8811 	msr	BASEPRI, r3
 80095a0:	f3bf 8f6f 	isb	sy
 80095a4:	f3bf 8f4f 	dsb	sy
 80095a8:	e7fe      	b.n	80095a8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80095aa:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80095ac:	b145      	cbz	r5, 80095c0 <xQueueSemaphoreTake+0x32>
 80095ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095b2:	f383 8811 	msr	BASEPRI, r3
 80095b6:	f3bf 8f6f 	isb	sy
 80095ba:	f3bf 8f4f 	dsb	sy
 80095be:	e7fe      	b.n	80095be <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80095c0:	f000 fdd6 	bl	800a170 <xTaskGetSchedulerState>
 80095c4:	4606      	mov	r6, r0
 80095c6:	b950      	cbnz	r0, 80095de <xQueueSemaphoreTake+0x50>
 80095c8:	9b01      	ldr	r3, [sp, #4]
 80095ca:	b15b      	cbz	r3, 80095e4 <xQueueSemaphoreTake+0x56>
 80095cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095d0:	f383 8811 	msr	BASEPRI, r3
 80095d4:	f3bf 8f6f 	isb	sy
 80095d8:	f3bf 8f4f 	dsb	sy
 80095dc:	e7fe      	b.n	80095dc <xQueueSemaphoreTake+0x4e>
 80095de:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80095e0:	2700      	movs	r7, #0
 80095e2:	e053      	b.n	800968c <xQueueSemaphoreTake+0xfe>
 80095e4:	4605      	mov	r5, r0
 80095e6:	e7fb      	b.n	80095e0 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80095e8:	9b01      	ldr	r3, [sp, #4]
 80095ea:	b963      	cbnz	r3, 8009606 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80095ec:	b145      	cbz	r5, 8009600 <xQueueSemaphoreTake+0x72>
 80095ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095f2:	f383 8811 	msr	BASEPRI, r3
 80095f6:	f3bf 8f6f 	isb	sy
 80095fa:	f3bf 8f4f 	dsb	sy
 80095fe:	e7fe      	b.n	80095fe <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009600:	f7ff fb18 	bl	8008c34 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009604:	e062      	b.n	80096cc <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009606:	b916      	cbnz	r6, 800960e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009608:	a802      	add	r0, sp, #8
 800960a:	f000 fd63 	bl	800a0d4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800960e:	f7ff fb11 	bl	8008c34 <vPortExitCritical>
		vTaskSuspendAll();
 8009612:	f000 faf9 	bl	8009c08 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009616:	f7ff faed 	bl	8008bf4 <vPortEnterCritical>
 800961a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800961e:	2bff      	cmp	r3, #255	; 0xff
 8009620:	d101      	bne.n	8009626 <xQueueSemaphoreTake+0x98>
 8009622:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 8009626:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800962a:	2bff      	cmp	r3, #255	; 0xff
 800962c:	d101      	bne.n	8009632 <xQueueSemaphoreTake+0xa4>
 800962e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8009632:	f7ff faff 	bl	8008c34 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009636:	a901      	add	r1, sp, #4
 8009638:	a802      	add	r0, sp, #8
 800963a:	f000 fd57 	bl	800a0ec <xTaskCheckForTimeOut>
 800963e:	2800      	cmp	r0, #0
 8009640:	d14d      	bne.n	80096de <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009642:	4620      	mov	r0, r4
 8009644:	f7ff fc1a 	bl	8008e7c <prvIsQueueEmpty>
 8009648:	2800      	cmp	r0, #0
 800964a:	d042      	beq.n	80096d2 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800964c:	6823      	ldr	r3, [r4, #0]
 800964e:	b93b      	cbnz	r3, 8009660 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009650:	f7ff fad0 	bl	8008bf4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009654:	68a0      	ldr	r0, [r4, #8]
 8009656:	f000 fd9b 	bl	800a190 <xTaskPriorityInherit>
 800965a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800965c:	f7ff faea 	bl	8008c34 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009660:	9901      	ldr	r1, [sp, #4]
 8009662:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009666:	f000 fcb9 	bl	8009fdc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800966a:	4620      	mov	r0, r4
 800966c:	f7ff fc5b 	bl	8008f26 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009670:	f000 fb6e 	bl	8009d50 <xTaskResumeAll>
 8009674:	b948      	cbnz	r0, 800968a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009676:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800967a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800967e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009682:	f3bf 8f4f 	dsb	sy
 8009686:	f3bf 8f6f 	isb	sy
 800968a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800968c:	f7ff fab2 	bl	8008bf4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009690:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009692:	2b00      	cmp	r3, #0
 8009694:	d0a8      	beq.n	80095e8 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009696:	3b01      	subs	r3, #1
 8009698:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800969a:	6823      	ldr	r3, [r4, #0]
 800969c:	b913      	cbnz	r3, 80096a4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800969e:	f000 fe4d 	bl	800a33c <pvTaskIncrementMutexHeldCount>
 80096a2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096a4:	6923      	ldr	r3, [r4, #16]
 80096a6:	b173      	cbz	r3, 80096c6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096a8:	f104 0010 	add.w	r0, r4, #16
 80096ac:	f000 fcce 	bl	800a04c <xTaskRemoveFromEventList>
 80096b0:	b148      	cbz	r0, 80096c6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 80096b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096be:	f3bf 8f4f 	dsb	sy
 80096c2:	f3bf 8f6f 	isb	sy
				return pdPASS;
 80096c6:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 80096c8:	f7ff fab4 	bl	8008c34 <vPortExitCritical>
}
 80096cc:	4628      	mov	r0, r5
 80096ce:	b005      	add	sp, #20
 80096d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 80096d2:	4620      	mov	r0, r4
 80096d4:	f7ff fc27 	bl	8008f26 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80096d8:	f000 fb3a 	bl	8009d50 <xTaskResumeAll>
 80096dc:	e7d5      	b.n	800968a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 80096de:	4620      	mov	r0, r4
 80096e0:	f7ff fc21 	bl	8008f26 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80096e4:	f000 fb34 	bl	8009d50 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096e8:	4620      	mov	r0, r4
 80096ea:	f7ff fbc7 	bl	8008e7c <prvIsQueueEmpty>
 80096ee:	2800      	cmp	r0, #0
 80096f0:	d0cb      	beq.n	800968a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80096f2:	2d00      	cmp	r5, #0
 80096f4:	d0ea      	beq.n	80096cc <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 80096f6:	f7ff fa7d 	bl	8008bf4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80096fa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80096fc:	b119      	cbz	r1, 8009706 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80096fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009700:	6819      	ldr	r1, [r3, #0]
 8009702:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009706:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 8009708:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800970a:	f000 fdc5 	bl	800a298 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800970e:	f7ff fa91 	bl	8008c34 <vPortExitCritical>
 8009712:	e7db      	b.n	80096cc <xQueueSemaphoreTake+0x13e>

08009714 <xQueueReceiveFromISR>:
{
 8009714:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009718:	4689      	mov	r9, r1
 800971a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800971c:	4605      	mov	r5, r0
 800971e:	b940      	cbnz	r0, 8009732 <xQueueReceiveFromISR+0x1e>
 8009720:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009724:	f383 8811 	msr	BASEPRI, r3
 8009728:	f3bf 8f6f 	isb	sy
 800972c:	f3bf 8f4f 	dsb	sy
 8009730:	e7fe      	b.n	8009730 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009732:	b951      	cbnz	r1, 800974a <xQueueReceiveFromISR+0x36>
 8009734:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009736:	b143      	cbz	r3, 800974a <xQueueReceiveFromISR+0x36>
 8009738:	f04f 0350 	mov.w	r3, #80	; 0x50
 800973c:	f383 8811 	msr	BASEPRI, r3
 8009740:	f3bf 8f6f 	isb	sy
 8009744:	f3bf 8f4f 	dsb	sy
 8009748:	e7fe      	b.n	8009748 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800974a:	f7ff fb69 	bl	8008e20 <vPortValidateInterruptPriority>
	__asm volatile
 800974e:	f3ef 8711 	mrs	r7, BASEPRI
 8009752:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009756:	f383 8811 	msr	BASEPRI, r3
 800975a:	f3bf 8f6f 	isb	sy
 800975e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009762:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009764:	b31c      	cbz	r4, 80097ae <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009766:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800976a:	4649      	mov	r1, r9
 800976c:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800976e:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 8009770:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009772:	f7ff fbc3 	bl	8008efc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009776:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009778:	1c73      	adds	r3, r6, #1
 800977a:	d113      	bne.n	80097a4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800977c:	692b      	ldr	r3, [r5, #16]
 800977e:	b90b      	cbnz	r3, 8009784 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009780:	2001      	movs	r0, #1
 8009782:	e00b      	b.n	800979c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009784:	f105 0010 	add.w	r0, r5, #16
 8009788:	f000 fc60 	bl	800a04c <xTaskRemoveFromEventList>
 800978c:	2800      	cmp	r0, #0
 800978e:	d0f7      	beq.n	8009780 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009790:	f1b8 0f00 	cmp.w	r8, #0
 8009794:	d0f4      	beq.n	8009780 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009796:	2001      	movs	r0, #1
 8009798:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800979c:	f387 8811 	msr	BASEPRI, r7
}
 80097a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80097a4:	3601      	adds	r6, #1
 80097a6:	b276      	sxtb	r6, r6
 80097a8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80097ac:	e7e8      	b.n	8009780 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80097ae:	4620      	mov	r0, r4
 80097b0:	e7f4      	b.n	800979c <xQueueReceiveFromISR+0x88>
	...

080097b4 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097b4:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80097b6:	4a07      	ldr	r2, [pc, #28]	; (80097d4 <vQueueAddToRegistry+0x20>)
	{
 80097b8:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80097ba:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80097be:	b92c      	cbnz	r4, 80097cc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80097c0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80097c4:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 80097c8:	6050      	str	r0, [r2, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80097ca:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097cc:	3301      	adds	r3, #1
 80097ce:	2b08      	cmp	r3, #8
 80097d0:	d1f3      	bne.n	80097ba <vQueueAddToRegistry+0x6>
 80097d2:	e7fa      	b.n	80097ca <vQueueAddToRegistry+0x16>
 80097d4:	2400ddb0 	.word	0x2400ddb0

080097d8 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097d8:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80097da:	4a08      	ldr	r2, [pc, #32]	; (80097fc <vQueueUnregisterQueue+0x24>)
	{
 80097dc:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80097de:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80097e2:	684c      	ldr	r4, [r1, #4]
 80097e4:	4284      	cmp	r4, r0
 80097e6:	d104      	bne.n	80097f2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80097e8:	2000      	movs	r0, #0
 80097ea:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80097ee:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80097f0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097f2:	3301      	adds	r3, #1
 80097f4:	2b08      	cmp	r3, #8
 80097f6:	d1f2      	bne.n	80097de <vQueueUnregisterQueue+0x6>
 80097f8:	e7fa      	b.n	80097f0 <vQueueUnregisterQueue+0x18>
 80097fa:	bf00      	nop
 80097fc:	2400ddb0 	.word	0x2400ddb0

08009800 <vQueueDelete>:
{
 8009800:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009802:	4604      	mov	r4, r0
 8009804:	b940      	cbnz	r0, 8009818 <vQueueDelete+0x18>
	__asm volatile
 8009806:	f04f 0350 	mov.w	r3, #80	; 0x50
 800980a:	f383 8811 	msr	BASEPRI, r3
 800980e:	f3bf 8f6f 	isb	sy
 8009812:	f3bf 8f4f 	dsb	sy
 8009816:	e7fe      	b.n	8009816 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009818:	f7ff ffde 	bl	80097d8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800981c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009820:	b923      	cbnz	r3, 800982c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009822:	4620      	mov	r0, r4
}
 8009824:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009828:	f7ff b900 	b.w	8008a2c <vPortFree>
}
 800982c:	bd10      	pop	{r4, pc}

0800982e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800982e:	b570      	push	{r4, r5, r6, lr}
 8009830:	4604      	mov	r4, r0
 8009832:	460d      	mov	r5, r1
 8009834:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009836:	f7ff f9dd 	bl	8008bf4 <vPortEnterCritical>
 800983a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800983e:	2bff      	cmp	r3, #255	; 0xff
 8009840:	d102      	bne.n	8009848 <vQueueWaitForMessageRestricted+0x1a>
 8009842:	2300      	movs	r3, #0
 8009844:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8009848:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800984c:	2bff      	cmp	r3, #255	; 0xff
 800984e:	d102      	bne.n	8009856 <vQueueWaitForMessageRestricted+0x28>
 8009850:	2300      	movs	r3, #0
 8009852:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009856:	f7ff f9ed 	bl	8008c34 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800985a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800985c:	b92b      	cbnz	r3, 800986a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800985e:	4632      	mov	r2, r6
 8009860:	4629      	mov	r1, r5
 8009862:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009866:	f000 fbd3 	bl	800a010 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800986a:	4620      	mov	r0, r4
	}
 800986c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009870:	f7ff bb59 	b.w	8008f26 <prvUnlockQueue>

08009874 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009878:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800987a:	f7ff f9bb 	bl	8008bf4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800987e:	4b2f      	ldr	r3, [pc, #188]	; (800993c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009880:	4e2f      	ldr	r6, [pc, #188]	; (8009940 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009882:	681a      	ldr	r2, [r3, #0]
 8009884:	4f2f      	ldr	r7, [pc, #188]	; (8009944 <prvAddNewTaskToReadyList+0xd0>)
 8009886:	3201      	adds	r2, #1
 8009888:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800988a:	6835      	ldr	r5, [r6, #0]
 800988c:	2d00      	cmp	r5, #0
 800988e:	d14a      	bne.n	8009926 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009890:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009892:	681b      	ldr	r3, [r3, #0]
 8009894:	2b01      	cmp	r3, #1
 8009896:	d11f      	bne.n	80098d8 <prvAddNewTaskToReadyList+0x64>
 8009898:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800989a:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800989c:	4640      	mov	r0, r8
 800989e:	f7ff f903 	bl	8008aa8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098a2:	f108 0814 	add.w	r8, r8, #20
 80098a6:	2d38      	cmp	r5, #56	; 0x38
 80098a8:	d1f7      	bne.n	800989a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80098aa:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800996c <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 80098ae:	4d26      	ldr	r5, [pc, #152]	; (8009948 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80098b0:	4640      	mov	r0, r8
 80098b2:	f7ff f8f9 	bl	8008aa8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80098b6:	4628      	mov	r0, r5
 80098b8:	f7ff f8f6 	bl	8008aa8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80098bc:	4823      	ldr	r0, [pc, #140]	; (800994c <prvAddNewTaskToReadyList+0xd8>)
 80098be:	f7ff f8f3 	bl	8008aa8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80098c2:	4823      	ldr	r0, [pc, #140]	; (8009950 <prvAddNewTaskToReadyList+0xdc>)
 80098c4:	f7ff f8f0 	bl	8008aa8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80098c8:	4822      	ldr	r0, [pc, #136]	; (8009954 <prvAddNewTaskToReadyList+0xe0>)
 80098ca:	f7ff f8ed 	bl	8008aa8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80098ce:	4b22      	ldr	r3, [pc, #136]	; (8009958 <prvAddNewTaskToReadyList+0xe4>)
 80098d0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80098d4:	4b21      	ldr	r3, [pc, #132]	; (800995c <prvAddNewTaskToReadyList+0xe8>)
 80098d6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80098d8:	4a21      	ldr	r2, [pc, #132]	; (8009960 <prvAddNewTaskToReadyList+0xec>)
 80098da:	6813      	ldr	r3, [r2, #0]
 80098dc:	3301      	adds	r3, #1
 80098de:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80098e0:	4a20      	ldr	r2, [pc, #128]	; (8009964 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80098e2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80098e4:	6811      	ldr	r1, [r2, #0]
 80098e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80098e8:	428b      	cmp	r3, r1
 80098ea:	d900      	bls.n	80098ee <prvAddNewTaskToReadyList+0x7a>
 80098ec:	6013      	str	r3, [r2, #0]
 80098ee:	2014      	movs	r0, #20
 80098f0:	1d21      	adds	r1, r4, #4
 80098f2:	fb00 7003 	mla	r0, r0, r3, r7
 80098f6:	f7ff f8e5 	bl	8008ac4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80098fa:	f7ff f99b 	bl	8008c34 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80098fe:	4b1a      	ldr	r3, [pc, #104]	; (8009968 <prvAddNewTaskToReadyList+0xf4>)
 8009900:	681b      	ldr	r3, [r3, #0]
 8009902:	b173      	cbz	r3, 8009922 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009904:	6833      	ldr	r3, [r6, #0]
 8009906:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009908:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800990a:	429a      	cmp	r2, r3
 800990c:	d209      	bcs.n	8009922 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800990e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009912:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009916:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800991a:	f3bf 8f4f 	dsb	sy
 800991e:	f3bf 8f6f 	isb	sy
}
 8009922:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009926:	4b10      	ldr	r3, [pc, #64]	; (8009968 <prvAddNewTaskToReadyList+0xf4>)
 8009928:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800992a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			if( xSchedulerRunning == pdFALSE )
 800992c:	2a00      	cmp	r2, #0
 800992e:	d1d3      	bne.n	80098d8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009930:	6832      	ldr	r2, [r6, #0]
 8009932:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009934:	429a      	cmp	r2, r3
 8009936:	d8cf      	bhi.n	80098d8 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 8009938:	6034      	str	r4, [r6, #0]
 800993a:	e7cd      	b.n	80098d8 <prvAddNewTaskToReadyList+0x64>
 800993c:	2400e25c 	.word	0x2400e25c
 8009940:	2400ddf0 	.word	0x2400ddf0
 8009944:	2400ddfc 	.word	0x2400ddfc
 8009948:	2400e284 	.word	0x2400e284
 800994c:	2400e2a4 	.word	0x2400e2a4
 8009950:	2400e2d0 	.word	0x2400e2d0
 8009954:	2400e2bc 	.word	0x2400e2bc
 8009958:	2400ddf4 	.word	0x2400ddf4
 800995c:	2400ddf8 	.word	0x2400ddf8
 8009960:	2400e268 	.word	0x2400e268
 8009964:	2400e26c 	.word	0x2400e26c
 8009968:	2400e2b8 	.word	0x2400e2b8
 800996c:	2400e270 	.word	0x2400e270

08009970 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009972:	4b15      	ldr	r3, [pc, #84]	; (80099c8 <prvAddCurrentTaskToDelayedList+0x58>)
{
 8009974:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009976:	4d15      	ldr	r5, [pc, #84]	; (80099cc <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8009978:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800997a:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800997c:	6828      	ldr	r0, [r5, #0]
 800997e:	3004      	adds	r0, #4
 8009980:	f7ff f8c3 	bl	8008b0a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009984:	1c73      	adds	r3, r6, #1
 8009986:	d107      	bne.n	8009998 <prvAddCurrentTaskToDelayedList+0x28>
 8009988:	b137      	cbz	r7, 8009998 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800998a:	6829      	ldr	r1, [r5, #0]
 800998c:	4810      	ldr	r0, [pc, #64]	; (80099d0 <prvAddCurrentTaskToDelayedList+0x60>)
 800998e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009990:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009994:	f7ff b896 	b.w	8008ac4 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8009998:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800999a:	682b      	ldr	r3, [r5, #0]
 800999c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800999e:	d307      	bcc.n	80099b0 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099a0:	4b0c      	ldr	r3, [pc, #48]	; (80099d4 <prvAddCurrentTaskToDelayedList+0x64>)
 80099a2:	6818      	ldr	r0, [r3, #0]
 80099a4:	6829      	ldr	r1, [r5, #0]
}
 80099a6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099aa:	3104      	adds	r1, #4
 80099ac:	f7ff b896 	b.w	8008adc <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099b0:	4b09      	ldr	r3, [pc, #36]	; (80099d8 <prvAddCurrentTaskToDelayedList+0x68>)
 80099b2:	6818      	ldr	r0, [r3, #0]
 80099b4:	6829      	ldr	r1, [r5, #0]
 80099b6:	3104      	adds	r1, #4
 80099b8:	f7ff f890 	bl	8008adc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80099bc:	4b07      	ldr	r3, [pc, #28]	; (80099dc <prvAddCurrentTaskToDelayedList+0x6c>)
 80099be:	681a      	ldr	r2, [r3, #0]
 80099c0:	42a2      	cmp	r2, r4
 80099c2:	d900      	bls.n	80099c6 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 80099c4:	601c      	str	r4, [r3, #0]
}
 80099c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80099c8:	2400e2e4 	.word	0x2400e2e4
 80099cc:	2400ddf0 	.word	0x2400ddf0
 80099d0:	2400e2bc 	.word	0x2400e2bc
 80099d4:	2400ddf8 	.word	0x2400ddf8
 80099d8:	2400ddf4 	.word	0x2400ddf4
 80099dc:	2400e298 	.word	0x2400e298

080099e0 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80099e0:	4a06      	ldr	r2, [pc, #24]	; (80099fc <prvResetNextTaskUnblockTime+0x1c>)
 80099e2:	6813      	ldr	r3, [r2, #0]
 80099e4:	6819      	ldr	r1, [r3, #0]
 80099e6:	4b06      	ldr	r3, [pc, #24]	; (8009a00 <prvResetNextTaskUnblockTime+0x20>)
 80099e8:	b919      	cbnz	r1, 80099f2 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80099ea:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80099ee:	601a      	str	r2, [r3, #0]
}
 80099f0:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099f2:	6812      	ldr	r2, [r2, #0]
 80099f4:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80099f6:	68d2      	ldr	r2, [r2, #12]
 80099f8:	6852      	ldr	r2, [r2, #4]
 80099fa:	e7f8      	b.n	80099ee <prvResetNextTaskUnblockTime+0xe>
 80099fc:	2400ddf4 	.word	0x2400ddf4
 8009a00:	2400e298 	.word	0x2400e298

08009a04 <prvDeleteTCB>:
	{
 8009a04:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a06:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8009a0a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a0c:	b93b      	cbnz	r3, 8009a1e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009a0e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009a10:	f7ff f80c 	bl	8008a2c <vPortFree>
				vPortFree( pxTCB );
 8009a14:	4620      	mov	r0, r4
	}
 8009a16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009a1a:	f7ff b807 	b.w	8008a2c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009a1e:	2b01      	cmp	r3, #1
 8009a20:	d0f9      	beq.n	8009a16 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009a22:	2b02      	cmp	r3, #2
 8009a24:	d008      	beq.n	8009a38 <prvDeleteTCB+0x34>
 8009a26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a2a:	f383 8811 	msr	BASEPRI, r3
 8009a2e:	f3bf 8f6f 	isb	sy
 8009a32:	f3bf 8f4f 	dsb	sy
 8009a36:	e7fe      	b.n	8009a36 <prvDeleteTCB+0x32>
	}
 8009a38:	bd10      	pop	{r4, pc}
	...

08009a3c <prvIdleTask>:
{
 8009a3c:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a3e:	4c14      	ldr	r4, [pc, #80]	; (8009a90 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a40:	4f14      	ldr	r7, [pc, #80]	; (8009a94 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009a42:	4d15      	ldr	r5, [pc, #84]	; (8009a98 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a44:	6823      	ldr	r3, [r4, #0]
 8009a46:	b983      	cbnz	r3, 8009a6a <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009a48:	4b14      	ldr	r3, [pc, #80]	; (8009a9c <prvIdleTask+0x60>)
 8009a4a:	681b      	ldr	r3, [r3, #0]
 8009a4c:	2b01      	cmp	r3, #1
 8009a4e:	d909      	bls.n	8009a64 <prvIdleTask+0x28>
				taskYIELD();
 8009a50:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a54:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a58:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a5c:	f3bf 8f4f 	dsb	sy
 8009a60:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009a64:	f7f7 fc14 	bl	8001290 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8009a68:	e7eb      	b.n	8009a42 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009a6a:	f7ff f8c3 	bl	8008bf4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a6e:	68fb      	ldr	r3, [r7, #12]
 8009a70:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009a72:	1d30      	adds	r0, r6, #4
 8009a74:	f7ff f849 	bl	8008b0a <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009a78:	682b      	ldr	r3, [r5, #0]
 8009a7a:	3b01      	subs	r3, #1
 8009a7c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009a7e:	6823      	ldr	r3, [r4, #0]
 8009a80:	3b01      	subs	r3, #1
 8009a82:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009a84:	f7ff f8d6 	bl	8008c34 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009a88:	4630      	mov	r0, r6
 8009a8a:	f7ff ffbb 	bl	8009a04 <prvDeleteTCB>
 8009a8e:	e7d9      	b.n	8009a44 <prvIdleTask+0x8>
 8009a90:	2400e260 	.word	0x2400e260
 8009a94:	2400e2d0 	.word	0x2400e2d0
 8009a98:	2400e25c 	.word	0x2400e25c
 8009a9c:	2400ddfc 	.word	0x2400ddfc

08009aa0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009aa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009aa4:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009aa8:	4606      	mov	r6, r0
 8009aaa:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009aac:	21a5      	movs	r1, #165	; 0xa5
 8009aae:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009ab0:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009ab2:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009ab6:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009aba:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009abc:	f017 fba1 	bl	8021202 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009ac0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009ac2:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009ac4:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8009ac8:	b3b5      	cbz	r5, 8009b38 <prvInitialiseNewTask.constprop.0+0x98>
 8009aca:	1e6b      	subs	r3, r5, #1
 8009acc:	f104 0233 	add.w	r2, r4, #51	; 0x33
 8009ad0:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009ad2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009ad6:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8009ada:	b109      	cbz	r1, 8009ae0 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009adc:	42ab      	cmp	r3, r5
 8009ade:	d1f8      	bne.n	8009ad2 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009ae0:	2300      	movs	r3, #0
 8009ae2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009ae6:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 8009ae8:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009aec:	1d20      	adds	r0, r4, #4
 8009aee:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009af0:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 8009af4:	bf28      	it	cs
 8009af6:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 8009af8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009afa:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009afc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b00:	f7fe ffdd 	bl	8008abe <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b04:	f104 0018 	add.w	r0, r4, #24
 8009b08:	f7fe ffd9 	bl	8008abe <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009b0c:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009b10:	463a      	mov	r2, r7
 8009b12:	4631      	mov	r1, r6
 8009b14:	4648      	mov	r0, r9
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b16:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b18:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b1a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009b1c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009b20:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009b24:	f7ff f840 	bl	8008ba8 <pxPortInitialiseStack>
 8009b28:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009b2a:	f1b8 0f00 	cmp.w	r8, #0
 8009b2e:	d001      	beq.n	8009b34 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009b30:	f8c8 4000 	str.w	r4, [r8]
}
 8009b34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009b38:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009b3c:	e7d3      	b.n	8009ae6 <prvInitialiseNewTask.constprop.0+0x46>

08009b3e <xTaskCreateStatic>:
	{
 8009b3e:	b570      	push	{r4, r5, r6, lr}
 8009b40:	b086      	sub	sp, #24
 8009b42:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009b46:	b945      	cbnz	r5, 8009b5a <xTaskCreateStatic+0x1c>
 8009b48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b4c:	f383 8811 	msr	BASEPRI, r3
 8009b50:	f3bf 8f6f 	isb	sy
 8009b54:	f3bf 8f4f 	dsb	sy
 8009b58:	e7fe      	b.n	8009b58 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009b5a:	b944      	cbnz	r4, 8009b6e <xTaskCreateStatic+0x30>
 8009b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b60:	f383 8811 	msr	BASEPRI, r3
 8009b64:	f3bf 8f6f 	isb	sy
 8009b68:	f3bf 8f4f 	dsb	sy
 8009b6c:	e7fe      	b.n	8009b6c <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009b6e:	2660      	movs	r6, #96	; 0x60
 8009b70:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009b72:	9e05      	ldr	r6, [sp, #20]
 8009b74:	2e60      	cmp	r6, #96	; 0x60
 8009b76:	d008      	beq.n	8009b8a <xTaskCreateStatic+0x4c>
 8009b78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b7c:	f383 8811 	msr	BASEPRI, r3
 8009b80:	f3bf 8f6f 	isb	sy
 8009b84:	f3bf 8f4f 	dsb	sy
 8009b88:	e7fe      	b.n	8009b88 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009b8a:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009b8c:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009b8e:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009b90:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009b94:	ad04      	add	r5, sp, #16
 8009b96:	9402      	str	r4, [sp, #8]
 8009b98:	9501      	str	r5, [sp, #4]
 8009b9a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009b9c:	9500      	str	r5, [sp, #0]
 8009b9e:	f7ff ff7f 	bl	8009aa0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009ba2:	4620      	mov	r0, r4
 8009ba4:	f7ff fe66 	bl	8009874 <prvAddNewTaskToReadyList>
	}
 8009ba8:	9804      	ldr	r0, [sp, #16]
 8009baa:	b006      	add	sp, #24
 8009bac:	bd70      	pop	{r4, r5, r6, pc}

08009bae <xTaskCreate>:
	{
 8009bae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bb2:	4607      	mov	r7, r0
 8009bb4:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009bb6:	0090      	lsls	r0, r2, #2
	{
 8009bb8:	4688      	mov	r8, r1
 8009bba:	4616      	mov	r6, r2
 8009bbc:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009bbe:	f7fe fe9d 	bl	80088fc <pvPortMalloc>
			if( pxStack != NULL )
 8009bc2:	4605      	mov	r5, r0
 8009bc4:	b1e8      	cbz	r0, 8009c02 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009bc6:	2060      	movs	r0, #96	; 0x60
 8009bc8:	f7fe fe98 	bl	80088fc <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009bcc:	4604      	mov	r4, r0
 8009bce:	b1a8      	cbz	r0, 8009bfc <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009bd0:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 8009bd2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009bd4:	4632      	mov	r2, r6
 8009bd6:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009bd8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009bdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009bde:	9002      	str	r0, [sp, #8]
 8009be0:	4638      	mov	r0, r7
 8009be2:	9301      	str	r3, [sp, #4]
 8009be4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009be6:	9300      	str	r3, [sp, #0]
 8009be8:	464b      	mov	r3, r9
 8009bea:	f7ff ff59 	bl	8009aa0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009bee:	4620      	mov	r0, r4
 8009bf0:	f7ff fe40 	bl	8009874 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009bf4:	2001      	movs	r0, #1
	}
 8009bf6:	b005      	add	sp, #20
 8009bf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009bfc:	4628      	mov	r0, r5
 8009bfe:	f7fe ff15 	bl	8008a2c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c02:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009c06:	e7f6      	b.n	8009bf6 <xTaskCreate+0x48>

08009c08 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009c08:	4a02      	ldr	r2, [pc, #8]	; (8009c14 <vTaskSuspendAll+0xc>)
 8009c0a:	6813      	ldr	r3, [r2, #0]
 8009c0c:	3301      	adds	r3, #1
 8009c0e:	6013      	str	r3, [r2, #0]
}
 8009c10:	4770      	bx	lr
 8009c12:	bf00      	nop
 8009c14:	2400e264 	.word	0x2400e264

08009c18 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009c18:	4b01      	ldr	r3, [pc, #4]	; (8009c20 <xTaskGetTickCount+0x8>)
 8009c1a:	6818      	ldr	r0, [r3, #0]
}
 8009c1c:	4770      	bx	lr
 8009c1e:	bf00      	nop
 8009c20:	2400e2e4 	.word	0x2400e2e4

08009c24 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c24:	4b3f      	ldr	r3, [pc, #252]	; (8009d24 <xTaskIncrementTick+0x100>)
 8009c26:	681b      	ldr	r3, [r3, #0]
{
 8009c28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c2c:	2b00      	cmp	r3, #0
 8009c2e:	d172      	bne.n	8009d16 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009c30:	4b3d      	ldr	r3, [pc, #244]	; (8009d28 <xTaskIncrementTick+0x104>)
 8009c32:	681d      	ldr	r5, [r3, #0]
 8009c34:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009c36:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009c38:	b9bd      	cbnz	r5, 8009c6a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009c3a:	4b3c      	ldr	r3, [pc, #240]	; (8009d2c <xTaskIncrementTick+0x108>)
 8009c3c:	681a      	ldr	r2, [r3, #0]
 8009c3e:	6812      	ldr	r2, [r2, #0]
 8009c40:	b142      	cbz	r2, 8009c54 <xTaskIncrementTick+0x30>
 8009c42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c46:	f383 8811 	msr	BASEPRI, r3
 8009c4a:	f3bf 8f6f 	isb	sy
 8009c4e:	f3bf 8f4f 	dsb	sy
 8009c52:	e7fe      	b.n	8009c52 <xTaskIncrementTick+0x2e>
 8009c54:	4a36      	ldr	r2, [pc, #216]	; (8009d30 <xTaskIncrementTick+0x10c>)
 8009c56:	6819      	ldr	r1, [r3, #0]
 8009c58:	6810      	ldr	r0, [r2, #0]
 8009c5a:	6018      	str	r0, [r3, #0]
 8009c5c:	6011      	str	r1, [r2, #0]
 8009c5e:	4a35      	ldr	r2, [pc, #212]	; (8009d34 <xTaskIncrementTick+0x110>)
 8009c60:	6813      	ldr	r3, [r2, #0]
 8009c62:	3301      	adds	r3, #1
 8009c64:	6013      	str	r3, [r2, #0]
 8009c66:	f7ff febb 	bl	80099e0 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009c6a:	4e33      	ldr	r6, [pc, #204]	; (8009d38 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
 8009c6c:	2400      	movs	r4, #0
 8009c6e:	4f33      	ldr	r7, [pc, #204]	; (8009d3c <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009c70:	6833      	ldr	r3, [r6, #0]
 8009c72:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009d48 <xTaskIncrementTick+0x124>
 8009c76:	429d      	cmp	r5, r3
 8009c78:	d211      	bcs.n	8009c9e <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009c7a:	f8d8 3000 	ldr.w	r3, [r8]
 8009c7e:	2214      	movs	r2, #20
 8009c80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c82:	4353      	muls	r3, r2
 8009c84:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009c86:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8009c88:	4b2d      	ldr	r3, [pc, #180]	; (8009d40 <xTaskIncrementTick+0x11c>)
 8009c8a:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8009c8c:	bf28      	it	cs
 8009c8e:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8009c90:	2b00      	cmp	r3, #0
 8009c92:	bf18      	it	ne
 8009c94:	2401      	movne	r4, #1
}
 8009c96:	4620      	mov	r0, r4
 8009c98:	b003      	add	sp, #12
 8009c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009c9e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8009d2c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009ca2:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 8009d4c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ca6:	f8d9 3000 	ldr.w	r3, [r9]
 8009caa:	681b      	ldr	r3, [r3, #0]
 8009cac:	b91b      	cbnz	r3, 8009cb6 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cae:	f04f 33ff 	mov.w	r3, #4294967295
 8009cb2:	6033      	str	r3, [r6, #0]
					break;
 8009cb4:	e7e1      	b.n	8009c7a <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009cb6:	f8d9 3000 	ldr.w	r3, [r9]
 8009cba:	68db      	ldr	r3, [r3, #12]
 8009cbc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009cc0:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009cc4:	4295      	cmp	r5, r2
 8009cc6:	d201      	bcs.n	8009ccc <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
 8009cc8:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009cca:	e7d6      	b.n	8009c7a <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ccc:	f10b 0104 	add.w	r1, fp, #4
 8009cd0:	4608      	mov	r0, r1
 8009cd2:	9101      	str	r1, [sp, #4]
 8009cd4:	f7fe ff19 	bl	8008b0a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009cd8:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009cdc:	9901      	ldr	r1, [sp, #4]
 8009cde:	b122      	cbz	r2, 8009cea <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009ce0:	f10b 0018 	add.w	r0, fp, #24
 8009ce4:	f7fe ff11 	bl	8008b0a <uxListRemove>
 8009ce8:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009cea:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009cee:	f8da 2000 	ldr.w	r2, [sl]
 8009cf2:	4290      	cmp	r0, r2
 8009cf4:	d901      	bls.n	8009cfa <xTaskIncrementTick+0xd6>
 8009cf6:	f8ca 0000 	str.w	r0, [sl]
 8009cfa:	2314      	movs	r3, #20
 8009cfc:	fb03 7000 	mla	r0, r3, r0, r7
 8009d00:	f7fe fee0 	bl	8008ac4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009d04:	f8d8 1000 	ldr.w	r1, [r8]
 8009d08:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009d0c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009d0e:	429a      	cmp	r2, r3
 8009d10:	bf28      	it	cs
 8009d12:	2401      	movcs	r4, #1
 8009d14:	e7c7      	b.n	8009ca6 <xTaskIncrementTick+0x82>
		++xPendedTicks;
 8009d16:	4a0b      	ldr	r2, [pc, #44]	; (8009d44 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
 8009d18:	2400      	movs	r4, #0
		++xPendedTicks;
 8009d1a:	6813      	ldr	r3, [r2, #0]
 8009d1c:	3301      	adds	r3, #1
 8009d1e:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
 8009d20:	e7b9      	b.n	8009c96 <xTaskIncrementTick+0x72>
 8009d22:	bf00      	nop
 8009d24:	2400e264 	.word	0x2400e264
 8009d28:	2400e2e4 	.word	0x2400e2e4
 8009d2c:	2400ddf4 	.word	0x2400ddf4
 8009d30:	2400ddf8 	.word	0x2400ddf8
 8009d34:	2400e29c 	.word	0x2400e29c
 8009d38:	2400e298 	.word	0x2400e298
 8009d3c:	2400ddfc 	.word	0x2400ddfc
 8009d40:	2400e2e8 	.word	0x2400e2e8
 8009d44:	2400e2a0 	.word	0x2400e2a0
 8009d48:	2400ddf0 	.word	0x2400ddf0
 8009d4c:	2400e26c 	.word	0x2400e26c

08009d50 <xTaskResumeAll>:
{
 8009d50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009d52:	4c31      	ldr	r4, [pc, #196]	; (8009e18 <xTaskResumeAll+0xc8>)
 8009d54:	6823      	ldr	r3, [r4, #0]
 8009d56:	b943      	cbnz	r3, 8009d6a <xTaskResumeAll+0x1a>
 8009d58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d5c:	f383 8811 	msr	BASEPRI, r3
 8009d60:	f3bf 8f6f 	isb	sy
 8009d64:	f3bf 8f4f 	dsb	sy
 8009d68:	e7fe      	b.n	8009d68 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009d6a:	f7fe ff43 	bl	8008bf4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009d6e:	6823      	ldr	r3, [r4, #0]
 8009d70:	3b01      	subs	r3, #1
 8009d72:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d74:	6824      	ldr	r4, [r4, #0]
 8009d76:	b12c      	cbz	r4, 8009d84 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009d78:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009d7a:	f7fe ff5b 	bl	8008c34 <vPortExitCritical>
}
 8009d7e:	4620      	mov	r0, r4
 8009d80:	b003      	add	sp, #12
 8009d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009d84:	4b25      	ldr	r3, [pc, #148]	; (8009e1c <xTaskResumeAll+0xcc>)
 8009d86:	681b      	ldr	r3, [r3, #0]
 8009d88:	2b00      	cmp	r3, #0
 8009d8a:	d0f5      	beq.n	8009d78 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009d8c:	4d24      	ldr	r5, [pc, #144]	; (8009e20 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009d8e:	4e25      	ldr	r6, [pc, #148]	; (8009e24 <xTaskResumeAll+0xd4>)
 8009d90:	4f25      	ldr	r7, [pc, #148]	; (8009e28 <xTaskResumeAll+0xd8>)
 8009d92:	e01e      	b.n	8009dd2 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d94:	68eb      	ldr	r3, [r5, #12]
 8009d96:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009d98:	f104 0018 	add.w	r0, r4, #24
 8009d9c:	f7fe feb5 	bl	8008b0a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009da0:	1d21      	adds	r1, r4, #4
 8009da2:	4608      	mov	r0, r1
 8009da4:	9101      	str	r1, [sp, #4]
 8009da6:	f7fe feb0 	bl	8008b0a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009daa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009dac:	6832      	ldr	r2, [r6, #0]
 8009dae:	9901      	ldr	r1, [sp, #4]
 8009db0:	4293      	cmp	r3, r2
 8009db2:	d900      	bls.n	8009db6 <xTaskResumeAll+0x66>
 8009db4:	6033      	str	r3, [r6, #0]
 8009db6:	2014      	movs	r0, #20
 8009db8:	fb00 7003 	mla	r0, r0, r3, r7
 8009dbc:	f7fe fe82 	bl	8008ac4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009dc0:	4b1a      	ldr	r3, [pc, #104]	; (8009e2c <xTaskResumeAll+0xdc>)
 8009dc2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009dc4:	681b      	ldr	r3, [r3, #0]
 8009dc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dc8:	429a      	cmp	r2, r3
 8009dca:	d302      	bcc.n	8009dd2 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009dcc:	4b18      	ldr	r3, [pc, #96]	; (8009e30 <xTaskResumeAll+0xe0>)
 8009dce:	2201      	movs	r2, #1
 8009dd0:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009dd2:	682b      	ldr	r3, [r5, #0]
 8009dd4:	2b00      	cmp	r3, #0
 8009dd6:	d1dd      	bne.n	8009d94 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009dd8:	b10c      	cbz	r4, 8009dde <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009dda:	f7ff fe01 	bl	80099e0 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009dde:	4d15      	ldr	r5, [pc, #84]	; (8009e34 <xTaskResumeAll+0xe4>)
 8009de0:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8009de2:	b144      	cbz	r4, 8009df6 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009de4:	4e12      	ldr	r6, [pc, #72]	; (8009e30 <xTaskResumeAll+0xe0>)
 8009de6:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009de8:	f7ff ff1c 	bl	8009c24 <xTaskIncrementTick>
 8009dec:	b100      	cbz	r0, 8009df0 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009dee:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8009df0:	3c01      	subs	r4, #1
 8009df2:	d1f9      	bne.n	8009de8 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8009df4:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009df6:	4b0e      	ldr	r3, [pc, #56]	; (8009e30 <xTaskResumeAll+0xe0>)
 8009df8:	681b      	ldr	r3, [r3, #0]
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	d0bc      	beq.n	8009d78 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009dfe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e06:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e0a:	f3bf 8f4f 	dsb	sy
 8009e0e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009e12:	2401      	movs	r4, #1
 8009e14:	e7b1      	b.n	8009d7a <xTaskResumeAll+0x2a>
 8009e16:	bf00      	nop
 8009e18:	2400e264 	.word	0x2400e264
 8009e1c:	2400e25c 	.word	0x2400e25c
 8009e20:	2400e2a4 	.word	0x2400e2a4
 8009e24:	2400e26c 	.word	0x2400e26c
 8009e28:	2400ddfc 	.word	0x2400ddfc
 8009e2c:	2400ddf0 	.word	0x2400ddf0
 8009e30:	2400e2e8 	.word	0x2400e2e8
 8009e34:	2400e2a0 	.word	0x2400e2a0

08009e38 <vTaskDelay>:
	{
 8009e38:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009e3a:	b950      	cbnz	r0, 8009e52 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009e3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e48:	f3bf 8f4f 	dsb	sy
 8009e4c:	f3bf 8f6f 	isb	sy
	}
 8009e50:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009e52:	4b0a      	ldr	r3, [pc, #40]	; (8009e7c <vTaskDelay+0x44>)
 8009e54:	6819      	ldr	r1, [r3, #0]
 8009e56:	b141      	cbz	r1, 8009e6a <vTaskDelay+0x32>
 8009e58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e5c:	f383 8811 	msr	BASEPRI, r3
 8009e60:	f3bf 8f6f 	isb	sy
 8009e64:	f3bf 8f4f 	dsb	sy
 8009e68:	e7fe      	b.n	8009e68 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009e6a:	f7ff fecd 	bl	8009c08 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009e6e:	f7ff fd7f 	bl	8009970 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009e72:	f7ff ff6d 	bl	8009d50 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009e76:	2800      	cmp	r0, #0
 8009e78:	d0e0      	beq.n	8009e3c <vTaskDelay+0x4>
 8009e7a:	e7e9      	b.n	8009e50 <vTaskDelay+0x18>
 8009e7c:	2400e264 	.word	0x2400e264

08009e80 <vTaskSetApplicationTaskTag>:
	{
 8009e80:	b538      	push	{r3, r4, r5, lr}
 8009e82:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009e84:	4604      	mov	r4, r0
 8009e86:	b908      	cbnz	r0, 8009e8c <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009e88:	4b04      	ldr	r3, [pc, #16]	; (8009e9c <vTaskSetApplicationTaskTag+0x1c>)
 8009e8a:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009e8c:	f7fe feb2 	bl	8008bf4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009e90:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8009e92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009e96:	f7fe becd 	b.w	8008c34 <vPortExitCritical>
 8009e9a:	bf00      	nop
 8009e9c:	2400ddf0 	.word	0x2400ddf0

08009ea0 <xTaskCallApplicationTaskHook>:
	{
 8009ea0:	4603      	mov	r3, r0
 8009ea2:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009ea4:	b90b      	cbnz	r3, 8009eaa <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009ea6:	4b03      	ldr	r3, [pc, #12]	; (8009eb4 <xTaskCallApplicationTaskHook+0x14>)
 8009ea8:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009eaa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009eac:	b103      	cbz	r3, 8009eb0 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8009eae:	4718      	bx	r3
	}
 8009eb0:	4618      	mov	r0, r3
 8009eb2:	4770      	bx	lr
 8009eb4:	2400ddf0 	.word	0x2400ddf0

08009eb8 <vTaskStartScheduler>:
{
 8009eb8:	b510      	push	{r4, lr}
 8009eba:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009ebc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009ebe:	aa07      	add	r2, sp, #28
 8009ec0:	a906      	add	r1, sp, #24
 8009ec2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009ec4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009ec8:	f7fe fcda 	bl	8008880 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009ecc:	9b05      	ldr	r3, [sp, #20]
 8009ece:	9a07      	ldr	r2, [sp, #28]
 8009ed0:	9302      	str	r3, [sp, #8]
 8009ed2:	9b06      	ldr	r3, [sp, #24]
 8009ed4:	4919      	ldr	r1, [pc, #100]	; (8009f3c <vTaskStartScheduler+0x84>)
 8009ed6:	481a      	ldr	r0, [pc, #104]	; (8009f40 <vTaskStartScheduler+0x88>)
 8009ed8:	e9cd 4300 	strd	r4, r3, [sp]
 8009edc:	4623      	mov	r3, r4
 8009ede:	f7ff fe2e 	bl	8009b3e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009ee2:	b340      	cbz	r0, 8009f36 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009ee4:	f000 fa88 	bl	800a3f8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009ee8:	2801      	cmp	r0, #1
 8009eea:	d119      	bne.n	8009f20 <vTaskStartScheduler+0x68>
 8009eec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ef0:	f383 8811 	msr	BASEPRI, r3
 8009ef4:	f3bf 8f6f 	isb	sy
 8009ef8:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009efc:	f04f 32ff 	mov.w	r2, #4294967295
 8009f00:	4b10      	ldr	r3, [pc, #64]	; (8009f44 <vTaskStartScheduler+0x8c>)
		traceTASK_SWITCHED_IN();
 8009f02:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8009f04:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009f06:	4b10      	ldr	r3, [pc, #64]	; (8009f48 <vTaskStartScheduler+0x90>)
 8009f08:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009f0a:	4b10      	ldr	r3, [pc, #64]	; (8009f4c <vTaskStartScheduler+0x94>)
 8009f0c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009f0e:	4b10      	ldr	r3, [pc, #64]	; (8009f50 <vTaskStartScheduler+0x98>)
 8009f10:	6818      	ldr	r0, [r3, #0]
 8009f12:	f7ff ffc5 	bl	8009ea0 <xTaskCallApplicationTaskHook>
}
 8009f16:	b008      	add	sp, #32
 8009f18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009f1c:	f7fe befa 	b.w	8008d14 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009f20:	3001      	adds	r0, #1
 8009f22:	d108      	bne.n	8009f36 <vTaskStartScheduler+0x7e>
 8009f24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f28:	f383 8811 	msr	BASEPRI, r3
 8009f2c:	f3bf 8f6f 	isb	sy
 8009f30:	f3bf 8f4f 	dsb	sy
 8009f34:	e7fe      	b.n	8009f34 <vTaskStartScheduler+0x7c>
}
 8009f36:	b008      	add	sp, #32
 8009f38:	bd10      	pop	{r4, pc}
 8009f3a:	bf00      	nop
 8009f3c:	08023257 	.word	0x08023257
 8009f40:	08009a3d 	.word	0x08009a3d
 8009f44:	2400e298 	.word	0x2400e298
 8009f48:	2400e2b8 	.word	0x2400e2b8
 8009f4c:	2400e2e4 	.word	0x2400e2e4
 8009f50:	2400ddf0 	.word	0x2400ddf0

08009f54 <vTaskSwitchContext>:
{
 8009f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009f56:	4b1c      	ldr	r3, [pc, #112]	; (8009fc8 <vTaskSwitchContext+0x74>)
 8009f58:	681a      	ldr	r2, [r3, #0]
 8009f5a:	4b1c      	ldr	r3, [pc, #112]	; (8009fcc <vTaskSwitchContext+0x78>)
 8009f5c:	b112      	cbz	r2, 8009f64 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009f5e:	2201      	movs	r2, #1
 8009f60:	601a      	str	r2, [r3, #0]
}
 8009f62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009f64:	4c1a      	ldr	r4, [pc, #104]	; (8009fd0 <vTaskSwitchContext+0x7c>)
 8009f66:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f68:	4e1a      	ldr	r6, [pc, #104]	; (8009fd4 <vTaskSwitchContext+0x80>)
 8009f6a:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 8009f6c:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8009f6e:	6820      	ldr	r0, [r4, #0]
 8009f70:	f7ff ff96 	bl	8009ea0 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f74:	6832      	ldr	r2, [r6, #0]
 8009f76:	4918      	ldr	r1, [pc, #96]	; (8009fd8 <vTaskSwitchContext+0x84>)
 8009f78:	fb07 f302 	mul.w	r3, r7, r2
 8009f7c:	58cd      	ldr	r5, [r1, r3]
 8009f7e:	18c8      	adds	r0, r1, r3
 8009f80:	b1ad      	cbz	r5, 8009fae <vTaskSwitchContext+0x5a>
 8009f82:	6845      	ldr	r5, [r0, #4]
 8009f84:	3308      	adds	r3, #8
 8009f86:	686d      	ldr	r5, [r5, #4]
 8009f88:	440b      	add	r3, r1
 8009f8a:	429d      	cmp	r5, r3
 8009f8c:	6045      	str	r5, [r0, #4]
 8009f8e:	bf04      	itt	eq
 8009f90:	686b      	ldreq	r3, [r5, #4]
 8009f92:	6043      	streq	r3, [r0, #4]
 8009f94:	2314      	movs	r3, #20
 8009f96:	fb03 1102 	mla	r1, r3, r2, r1
 8009f9a:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 8009f9c:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f9e:	68db      	ldr	r3, [r3, #12]
 8009fa0:	6023      	str	r3, [r4, #0]
 8009fa2:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009fa4:	6820      	ldr	r0, [r4, #0]
}
 8009fa6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8009faa:	f7ff bf79 	b.w	8009ea0 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fae:	b942      	cbnz	r2, 8009fc2 <vTaskSwitchContext+0x6e>
 8009fb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb4:	f383 8811 	msr	BASEPRI, r3
 8009fb8:	f3bf 8f6f 	isb	sy
 8009fbc:	f3bf 8f4f 	dsb	sy
 8009fc0:	e7fe      	b.n	8009fc0 <vTaskSwitchContext+0x6c>
 8009fc2:	3a01      	subs	r2, #1
 8009fc4:	e7d8      	b.n	8009f78 <vTaskSwitchContext+0x24>
 8009fc6:	bf00      	nop
 8009fc8:	2400e264 	.word	0x2400e264
 8009fcc:	2400e2e8 	.word	0x2400e2e8
 8009fd0:	2400ddf0 	.word	0x2400ddf0
 8009fd4:	2400e26c 	.word	0x2400e26c
 8009fd8:	2400ddfc 	.word	0x2400ddfc

08009fdc <vTaskPlaceOnEventList>:
{
 8009fdc:	b510      	push	{r4, lr}
 8009fde:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009fe0:	b940      	cbnz	r0, 8009ff4 <vTaskPlaceOnEventList+0x18>
 8009fe2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fe6:	f383 8811 	msr	BASEPRI, r3
 8009fea:	f3bf 8f6f 	isb	sy
 8009fee:	f3bf 8f4f 	dsb	sy
 8009ff2:	e7fe      	b.n	8009ff2 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009ff4:	4b05      	ldr	r3, [pc, #20]	; (800a00c <vTaskPlaceOnEventList+0x30>)
 8009ff6:	6819      	ldr	r1, [r3, #0]
 8009ff8:	3118      	adds	r1, #24
 8009ffa:	f7fe fd6f 	bl	8008adc <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009ffe:	4620      	mov	r0, r4
 800a000:	2101      	movs	r1, #1
}
 800a002:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a006:	f7ff bcb3 	b.w	8009970 <prvAddCurrentTaskToDelayedList>
 800a00a:	bf00      	nop
 800a00c:	2400ddf0 	.word	0x2400ddf0

0800a010 <vTaskPlaceOnEventListRestricted>:
	{
 800a010:	b538      	push	{r3, r4, r5, lr}
 800a012:	460d      	mov	r5, r1
 800a014:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a016:	b940      	cbnz	r0, 800a02a <vTaskPlaceOnEventListRestricted+0x1a>
 800a018:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a01c:	f383 8811 	msr	BASEPRI, r3
 800a020:	f3bf 8f6f 	isb	sy
 800a024:	f3bf 8f4f 	dsb	sy
 800a028:	e7fe      	b.n	800a028 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a02a:	4b07      	ldr	r3, [pc, #28]	; (800a048 <vTaskPlaceOnEventListRestricted+0x38>)
 800a02c:	6819      	ldr	r1, [r3, #0]
 800a02e:	3118      	adds	r1, #24
 800a030:	f7fe fd48 	bl	8008ac4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a034:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a036:	4621      	mov	r1, r4
 800a038:	bf0c      	ite	eq
 800a03a:	4628      	moveq	r0, r5
 800a03c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a040:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a044:	f7ff bc94 	b.w	8009970 <prvAddCurrentTaskToDelayedList>
 800a048:	2400ddf0 	.word	0x2400ddf0

0800a04c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a04c:	68c3      	ldr	r3, [r0, #12]
{
 800a04e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a050:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a052:	b944      	cbnz	r4, 800a066 <xTaskRemoveFromEventList+0x1a>
 800a054:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a058:	f383 8811 	msr	BASEPRI, r3
 800a05c:	f3bf 8f6f 	isb	sy
 800a060:	f3bf 8f4f 	dsb	sy
 800a064:	e7fe      	b.n	800a064 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a066:	f104 0118 	add.w	r1, r4, #24
 800a06a:	4608      	mov	r0, r1
 800a06c:	9101      	str	r1, [sp, #4]
 800a06e:	f7fe fd4c 	bl	8008b0a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a072:	4b12      	ldr	r3, [pc, #72]	; (800a0bc <xTaskRemoveFromEventList+0x70>)
 800a074:	9901      	ldr	r1, [sp, #4]
 800a076:	681b      	ldr	r3, [r3, #0]
 800a078:	b9e3      	cbnz	r3, 800a0b4 <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a07a:	1d21      	adds	r1, r4, #4
 800a07c:	4608      	mov	r0, r1
 800a07e:	9101      	str	r1, [sp, #4]
 800a080:	f7fe fd43 	bl	8008b0a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a084:	4a0e      	ldr	r2, [pc, #56]	; (800a0c0 <xTaskRemoveFromEventList+0x74>)
 800a086:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a088:	6810      	ldr	r0, [r2, #0]
 800a08a:	9901      	ldr	r1, [sp, #4]
 800a08c:	4283      	cmp	r3, r0
 800a08e:	d900      	bls.n	800a092 <xTaskRemoveFromEventList+0x46>
 800a090:	6013      	str	r3, [r2, #0]
 800a092:	4a0c      	ldr	r2, [pc, #48]	; (800a0c4 <xTaskRemoveFromEventList+0x78>)
 800a094:	2014      	movs	r0, #20
 800a096:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a09a:	f7fe fd13 	bl	8008ac4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a09e:	4b0a      	ldr	r3, [pc, #40]	; (800a0c8 <xTaskRemoveFromEventList+0x7c>)
 800a0a0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a0a2:	681b      	ldr	r3, [r3, #0]
 800a0a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0a6:	429a      	cmp	r2, r3
 800a0a8:	d906      	bls.n	800a0b8 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
 800a0aa:	2001      	movs	r0, #1
 800a0ac:	4b07      	ldr	r3, [pc, #28]	; (800a0cc <xTaskRemoveFromEventList+0x80>)
 800a0ae:	6018      	str	r0, [r3, #0]
}
 800a0b0:	b002      	add	sp, #8
 800a0b2:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0b4:	4806      	ldr	r0, [pc, #24]	; (800a0d0 <xTaskRemoveFromEventList+0x84>)
 800a0b6:	e7f0      	b.n	800a09a <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
 800a0b8:	2000      	movs	r0, #0
	return xReturn;
 800a0ba:	e7f9      	b.n	800a0b0 <xTaskRemoveFromEventList+0x64>
 800a0bc:	2400e264 	.word	0x2400e264
 800a0c0:	2400e26c 	.word	0x2400e26c
 800a0c4:	2400ddfc 	.word	0x2400ddfc
 800a0c8:	2400ddf0 	.word	0x2400ddf0
 800a0cc:	2400e2e8 	.word	0x2400e2e8
 800a0d0:	2400e2a4 	.word	0x2400e2a4

0800a0d4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a0d4:	4b03      	ldr	r3, [pc, #12]	; (800a0e4 <vTaskInternalSetTimeOutState+0x10>)
 800a0d6:	681b      	ldr	r3, [r3, #0]
 800a0d8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a0da:	4b03      	ldr	r3, [pc, #12]	; (800a0e8 <vTaskInternalSetTimeOutState+0x14>)
 800a0dc:	681b      	ldr	r3, [r3, #0]
 800a0de:	6043      	str	r3, [r0, #4]
}
 800a0e0:	4770      	bx	lr
 800a0e2:	bf00      	nop
 800a0e4:	2400e29c 	.word	0x2400e29c
 800a0e8:	2400e2e4 	.word	0x2400e2e4

0800a0ec <xTaskCheckForTimeOut>:
{
 800a0ec:	b570      	push	{r4, r5, r6, lr}
 800a0ee:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a0f0:	4605      	mov	r5, r0
 800a0f2:	b940      	cbnz	r0, 800a106 <xTaskCheckForTimeOut+0x1a>
 800a0f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0f8:	f383 8811 	msr	BASEPRI, r3
 800a0fc:	f3bf 8f6f 	isb	sy
 800a100:	f3bf 8f4f 	dsb	sy
 800a104:	e7fe      	b.n	800a104 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a106:	b941      	cbnz	r1, 800a11a <xTaskCheckForTimeOut+0x2e>
 800a108:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a10c:	f383 8811 	msr	BASEPRI, r3
 800a110:	f3bf 8f6f 	isb	sy
 800a114:	f3bf 8f4f 	dsb	sy
 800a118:	e7fe      	b.n	800a118 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a11a:	f7fe fd6b 	bl	8008bf4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a11e:	4b0f      	ldr	r3, [pc, #60]	; (800a15c <xTaskCheckForTimeOut+0x70>)
 800a120:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a122:	6823      	ldr	r3, [r4, #0]
 800a124:	1c5a      	adds	r2, r3, #1
 800a126:	d010      	beq.n	800a14a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a128:	480d      	ldr	r0, [pc, #52]	; (800a160 <xTaskCheckForTimeOut+0x74>)
 800a12a:	682e      	ldr	r6, [r5, #0]
 800a12c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a12e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a130:	4286      	cmp	r6, r0
 800a132:	d001      	beq.n	800a138 <xTaskCheckForTimeOut+0x4c>
 800a134:	428a      	cmp	r2, r1
 800a136:	d90f      	bls.n	800a158 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a138:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a13a:	4283      	cmp	r3, r0
 800a13c:	d90a      	bls.n	800a154 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a13e:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a140:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 800a142:	4413      	add	r3, r2
 800a144:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a146:	f7ff ffc5 	bl	800a0d4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a14a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a14c:	f7fe fd72 	bl	8008c34 <vPortExitCritical>
}
 800a150:	4620      	mov	r0, r4
 800a152:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a154:	2300      	movs	r3, #0
 800a156:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a158:	2401      	movs	r4, #1
 800a15a:	e7f7      	b.n	800a14c <xTaskCheckForTimeOut+0x60>
 800a15c:	2400e2e4 	.word	0x2400e2e4
 800a160:	2400e29c 	.word	0x2400e29c

0800a164 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a164:	4b01      	ldr	r3, [pc, #4]	; (800a16c <vTaskMissedYield+0x8>)
 800a166:	2201      	movs	r2, #1
 800a168:	601a      	str	r2, [r3, #0]
}
 800a16a:	4770      	bx	lr
 800a16c:	2400e2e8 	.word	0x2400e2e8

0800a170 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a170:	4b05      	ldr	r3, [pc, #20]	; (800a188 <xTaskGetSchedulerState+0x18>)
 800a172:	681b      	ldr	r3, [r3, #0]
 800a174:	b133      	cbz	r3, 800a184 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a176:	4b05      	ldr	r3, [pc, #20]	; (800a18c <xTaskGetSchedulerState+0x1c>)
 800a178:	6818      	ldr	r0, [r3, #0]
 800a17a:	fab0 f080 	clz	r0, r0
 800a17e:	0940      	lsrs	r0, r0, #5
 800a180:	0040      	lsls	r0, r0, #1
 800a182:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a184:	2001      	movs	r0, #1
	}
 800a186:	4770      	bx	lr
 800a188:	2400e2b8 	.word	0x2400e2b8
 800a18c:	2400e264 	.word	0x2400e264

0800a190 <xTaskPriorityInherit>:
	{
 800a190:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a192:	4604      	mov	r4, r0
 800a194:	b340      	cbz	r0, 800a1e8 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a196:	4d1b      	ldr	r5, [pc, #108]	; (800a204 <xTaskPriorityInherit+0x74>)
 800a198:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a19a:	682a      	ldr	r2, [r5, #0]
 800a19c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a19e:	4293      	cmp	r3, r2
 800a1a0:	d228      	bcs.n	800a1f4 <xTaskPriorityInherit+0x64>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1a2:	6982      	ldr	r2, [r0, #24]
 800a1a4:	2a00      	cmp	r2, #0
 800a1a6:	db04      	blt.n	800a1b2 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a1a8:	682a      	ldr	r2, [r5, #0]
 800a1aa:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a1ac:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800a1b0:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1b2:	2214      	movs	r2, #20
 800a1b4:	4e14      	ldr	r6, [pc, #80]	; (800a208 <xTaskPriorityInherit+0x78>)
 800a1b6:	fb02 6303 	mla	r3, r2, r3, r6
 800a1ba:	6962      	ldr	r2, [r4, #20]
 800a1bc:	429a      	cmp	r2, r3
 800a1be:	d115      	bne.n	800a1ec <xTaskPriorityInherit+0x5c>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a1c0:	1d21      	adds	r1, r4, #4
 800a1c2:	4608      	mov	r0, r1
 800a1c4:	9101      	str	r1, [sp, #4]
 800a1c6:	f7fe fca0 	bl	8008b0a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1ca:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a1cc:	4a0f      	ldr	r2, [pc, #60]	; (800a20c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a1d0:	6810      	ldr	r0, [r2, #0]
 800a1d2:	9901      	ldr	r1, [sp, #4]
 800a1d4:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1d6:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a1d8:	d900      	bls.n	800a1dc <xTaskPriorityInherit+0x4c>
 800a1da:	6013      	str	r3, [r2, #0]
 800a1dc:	2014      	movs	r0, #20
 800a1de:	fb00 6003 	mla	r0, r0, r3, r6
 800a1e2:	f7fe fc6f 	bl	8008ac4 <vListInsertEnd>
				xReturn = pdTRUE;
 800a1e6:	2001      	movs	r0, #1
	}
 800a1e8:	b002      	add	sp, #8
 800a1ea:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1ec:	682b      	ldr	r3, [r5, #0]
 800a1ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1f0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a1f2:	e7f8      	b.n	800a1e6 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a1f4:	682b      	ldr	r3, [r5, #0]
 800a1f6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a1f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1fa:	4298      	cmp	r0, r3
 800a1fc:	bf2c      	ite	cs
 800a1fe:	2000      	movcs	r0, #0
 800a200:	2001      	movcc	r0, #1
 800a202:	e7f1      	b.n	800a1e8 <xTaskPriorityInherit+0x58>
 800a204:	2400ddf0 	.word	0x2400ddf0
 800a208:	2400ddfc 	.word	0x2400ddfc
 800a20c:	2400e26c 	.word	0x2400e26c

0800a210 <xTaskPriorityDisinherit>:
	{
 800a210:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a212:	b910      	cbnz	r0, 800a21a <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a214:	2000      	movs	r0, #0
	}
 800a216:	b002      	add	sp, #8
 800a218:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a21a:	4b1c      	ldr	r3, [pc, #112]	; (800a28c <xTaskPriorityDisinherit+0x7c>)
 800a21c:	681c      	ldr	r4, [r3, #0]
 800a21e:	4284      	cmp	r4, r0
 800a220:	d008      	beq.n	800a234 <xTaskPriorityDisinherit+0x24>
 800a222:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a226:	f383 8811 	msr	BASEPRI, r3
 800a22a:	f3bf 8f6f 	isb	sy
 800a22e:	f3bf 8f4f 	dsb	sy
 800a232:	e7fe      	b.n	800a232 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a234:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a236:	b943      	cbnz	r3, 800a24a <xTaskPriorityDisinherit+0x3a>
 800a238:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a23c:	f383 8811 	msr	BASEPRI, r3
 800a240:	f3bf 8f6f 	isb	sy
 800a244:	f3bf 8f4f 	dsb	sy
 800a248:	e7fe      	b.n	800a248 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a24a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 800a24c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a24e:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a250:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a252:	4291      	cmp	r1, r2
 800a254:	d0de      	beq.n	800a214 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a256:	2b00      	cmp	r3, #0
 800a258:	d1dc      	bne.n	800a214 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a25a:	1d21      	adds	r1, r4, #4
 800a25c:	4608      	mov	r0, r1
 800a25e:	9101      	str	r1, [sp, #4]
 800a260:	f7fe fc53 	bl	8008b0a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a264:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a266:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a268:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a26c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a26e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a270:	4a07      	ldr	r2, [pc, #28]	; (800a290 <xTaskPriorityDisinherit+0x80>)
 800a272:	6810      	ldr	r0, [r2, #0]
 800a274:	4283      	cmp	r3, r0
 800a276:	d900      	bls.n	800a27a <xTaskPriorityDisinherit+0x6a>
 800a278:	6013      	str	r3, [r2, #0]
 800a27a:	4a06      	ldr	r2, [pc, #24]	; (800a294 <xTaskPriorityDisinherit+0x84>)
 800a27c:	2014      	movs	r0, #20
 800a27e:	fb00 2003 	mla	r0, r0, r3, r2
 800a282:	f7fe fc1f 	bl	8008ac4 <vListInsertEnd>
					xReturn = pdTRUE;
 800a286:	2001      	movs	r0, #1
		return xReturn;
 800a288:	e7c5      	b.n	800a216 <xTaskPriorityDisinherit+0x6>
 800a28a:	bf00      	nop
 800a28c:	2400ddf0 	.word	0x2400ddf0
 800a290:	2400e26c 	.word	0x2400e26c
 800a294:	2400ddfc 	.word	0x2400ddfc

0800a298 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a298:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a29a:	4604      	mov	r4, r0
 800a29c:	2800      	cmp	r0, #0
 800a29e:	d044      	beq.n	800a32a <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2a0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a2a2:	b942      	cbnz	r2, 800a2b6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a2a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2a8:	f383 8811 	msr	BASEPRI, r3
 800a2ac:	f3bf 8f6f 	isb	sy
 800a2b0:	f3bf 8f4f 	dsb	sy
 800a2b4:	e7fe      	b.n	800a2b4 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a2b6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a2b8:	4299      	cmp	r1, r3
 800a2ba:	bf38      	it	cc
 800a2bc:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a2be:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a2c0:	428b      	cmp	r3, r1
 800a2c2:	d032      	beq.n	800a32a <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a2c4:	2a01      	cmp	r2, #1
 800a2c6:	d130      	bne.n	800a32a <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a2c8:	4a19      	ldr	r2, [pc, #100]	; (800a330 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a2ca:	6812      	ldr	r2, [r2, #0]
 800a2cc:	4282      	cmp	r2, r0
 800a2ce:	d108      	bne.n	800a2e2 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a2d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2d4:	f383 8811 	msr	BASEPRI, r3
 800a2d8:	f3bf 8f6f 	isb	sy
 800a2dc:	f3bf 8f4f 	dsb	sy
 800a2e0:	e7fe      	b.n	800a2e0 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a2e2:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2e4:	4d13      	ldr	r5, [pc, #76]	; (800a334 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a2e6:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2e8:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800a2ec:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2ee:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2f2:	bfa8      	it	ge
 800a2f4:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2f8:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2fa:	bfa8      	it	ge
 800a2fc:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2fe:	429a      	cmp	r2, r3
 800a300:	d113      	bne.n	800a32a <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a302:	1d01      	adds	r1, r0, #4
 800a304:	4608      	mov	r0, r1
 800a306:	9101      	str	r1, [sp, #4]
 800a308:	f7fe fbff 	bl	8008b0a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a30c:	4a0a      	ldr	r2, [pc, #40]	; (800a338 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a30e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a310:	6810      	ldr	r0, [r2, #0]
 800a312:	9901      	ldr	r1, [sp, #4]
 800a314:	4283      	cmp	r3, r0
 800a316:	d900      	bls.n	800a31a <vTaskPriorityDisinheritAfterTimeout+0x82>
 800a318:	6013      	str	r3, [r2, #0]
 800a31a:	2014      	movs	r0, #20
 800a31c:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800a320:	b003      	add	sp, #12
 800a322:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a326:	f7fe bbcd 	b.w	8008ac4 <vListInsertEnd>
	}
 800a32a:	b003      	add	sp, #12
 800a32c:	bd30      	pop	{r4, r5, pc}
 800a32e:	bf00      	nop
 800a330:	2400ddf0 	.word	0x2400ddf0
 800a334:	2400ddfc 	.word	0x2400ddfc
 800a338:	2400e26c 	.word	0x2400e26c

0800a33c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a33c:	4b04      	ldr	r3, [pc, #16]	; (800a350 <pvTaskIncrementMutexHeldCount+0x14>)
 800a33e:	681a      	ldr	r2, [r3, #0]
 800a340:	b11a      	cbz	r2, 800a34a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a342:	6819      	ldr	r1, [r3, #0]
 800a344:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a346:	3201      	adds	r2, #1
 800a348:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a34a:	6818      	ldr	r0, [r3, #0]
	}
 800a34c:	4770      	bx	lr
 800a34e:	bf00      	nop
 800a350:	2400ddf0 	.word	0x2400ddf0

0800a354 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a354:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a356:	4c11      	ldr	r4, [pc, #68]	; (800a39c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a358:	f7fe fc4c 	bl	8008bf4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a35c:	6825      	ldr	r5, [r4, #0]
 800a35e:	b9bd      	cbnz	r5, 800a390 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a360:	4f0f      	ldr	r7, [pc, #60]	; (800a3a0 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a362:	4e10      	ldr	r6, [pc, #64]	; (800a3a4 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a364:	4638      	mov	r0, r7
 800a366:	f7fe fb9f 	bl	8008aa8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a36a:	4630      	mov	r0, r6
 800a36c:	f7fe fb9c 	bl	8008aa8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a370:	4b0d      	ldr	r3, [pc, #52]	; (800a3a8 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a372:	4a0e      	ldr	r2, [pc, #56]	; (800a3ac <prvCheckForValidListAndQueue+0x58>)
 800a374:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800a376:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a378:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800a37a:	4b0d      	ldr	r3, [pc, #52]	; (800a3b0 <prvCheckForValidListAndQueue+0x5c>)
 800a37c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a37e:	4b0d      	ldr	r3, [pc, #52]	; (800a3b4 <prvCheckForValidListAndQueue+0x60>)
 800a380:	9500      	str	r5, [sp, #0]
 800a382:	f7fe fe47 	bl	8009014 <xQueueGenericCreateStatic>
 800a386:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a388:	b110      	cbz	r0, 800a390 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a38a:	490b      	ldr	r1, [pc, #44]	; (800a3b8 <prvCheckForValidListAndQueue+0x64>)
 800a38c:	f7ff fa12 	bl	80097b4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a390:	b003      	add	sp, #12
 800a392:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a396:	f7fe bc4d 	b.w	8008c34 <vPortExitCritical>
 800a39a:	bf00      	nop
 800a39c:	2400e410 	.word	0x2400e410
 800a3a0:	2400e394 	.word	0x2400e394
 800a3a4:	2400e3a8 	.word	0x2400e3a8
 800a3a8:	2400e2ec 	.word	0x2400e2ec
 800a3ac:	2400e2f4 	.word	0x2400e2f4
 800a3b0:	2400e2f0 	.word	0x2400e2f0
 800a3b4:	2400e3c0 	.word	0x2400e3c0
 800a3b8:	0802325c 	.word	0x0802325c

0800a3bc <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a3bc:	4291      	cmp	r1, r2
{
 800a3be:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a3c0:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a3c2:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a3c4:	d80a      	bhi.n	800a3dc <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3c6:	1ad3      	subs	r3, r2, r3
 800a3c8:	6982      	ldr	r2, [r0, #24]
 800a3ca:	4293      	cmp	r3, r2
 800a3cc:	d20d      	bcs.n	800a3ea <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a3ce:	1d01      	adds	r1, r0, #4
 800a3d0:	4b07      	ldr	r3, [pc, #28]	; (800a3f0 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a3d2:	6818      	ldr	r0, [r3, #0]
 800a3d4:	f7fe fb82 	bl	8008adc <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a3d8:	2000      	movs	r0, #0
}
 800a3da:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a3dc:	429a      	cmp	r2, r3
 800a3de:	d201      	bcs.n	800a3e4 <prvInsertTimerInActiveList+0x28>
 800a3e0:	4299      	cmp	r1, r3
 800a3e2:	d202      	bcs.n	800a3ea <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a3e4:	1d01      	adds	r1, r0, #4
 800a3e6:	4b03      	ldr	r3, [pc, #12]	; (800a3f4 <prvInsertTimerInActiveList+0x38>)
 800a3e8:	e7f3      	b.n	800a3d2 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a3ea:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a3ec:	e7f5      	b.n	800a3da <prvInsertTimerInActiveList+0x1e>
 800a3ee:	bf00      	nop
 800a3f0:	2400e2f0 	.word	0x2400e2f0
 800a3f4:	2400e2ec 	.word	0x2400e2ec

0800a3f8 <xTimerCreateTimerTask>:
{
 800a3f8:	b510      	push	{r4, lr}
 800a3fa:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a3fc:	f7ff ffaa 	bl	800a354 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a400:	4b12      	ldr	r3, [pc, #72]	; (800a44c <xTimerCreateTimerTask+0x54>)
 800a402:	681b      	ldr	r3, [r3, #0]
 800a404:	b1b3      	cbz	r3, 800a434 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a406:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a408:	aa07      	add	r2, sp, #28
 800a40a:	a906      	add	r1, sp, #24
 800a40c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a40e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a412:	f7fe fa41 	bl	8008898 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a416:	9b05      	ldr	r3, [sp, #20]
 800a418:	9a07      	ldr	r2, [sp, #28]
 800a41a:	9302      	str	r3, [sp, #8]
 800a41c:	9b06      	ldr	r3, [sp, #24]
 800a41e:	490c      	ldr	r1, [pc, #48]	; (800a450 <xTimerCreateTimerTask+0x58>)
 800a420:	9301      	str	r3, [sp, #4]
 800a422:	2302      	movs	r3, #2
 800a424:	480b      	ldr	r0, [pc, #44]	; (800a454 <xTimerCreateTimerTask+0x5c>)
 800a426:	9300      	str	r3, [sp, #0]
 800a428:	4623      	mov	r3, r4
 800a42a:	f7ff fb88 	bl	8009b3e <xTaskCreateStatic>
 800a42e:	4b0a      	ldr	r3, [pc, #40]	; (800a458 <xTimerCreateTimerTask+0x60>)
 800a430:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a432:	b940      	cbnz	r0, 800a446 <xTimerCreateTimerTask+0x4e>
 800a434:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a438:	f383 8811 	msr	BASEPRI, r3
 800a43c:	f3bf 8f6f 	isb	sy
 800a440:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a444:	e7fe      	b.n	800a444 <xTimerCreateTimerTask+0x4c>
}
 800a446:	2001      	movs	r0, #1
 800a448:	b008      	add	sp, #32
 800a44a:	bd10      	pop	{r4, pc}
 800a44c:	2400e410 	.word	0x2400e410
 800a450:	08023261 	.word	0x08023261
 800a454:	0800a55d 	.word	0x0800a55d
 800a458:	2400e414 	.word	0x2400e414

0800a45c <xTimerGenericCommand>:
{
 800a45c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a45e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a460:	4604      	mov	r4, r0
{
 800a462:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a464:	b940      	cbnz	r0, 800a478 <xTimerGenericCommand+0x1c>
 800a466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a46a:	f383 8811 	msr	BASEPRI, r3
 800a46e:	f3bf 8f6f 	isb	sy
 800a472:	f3bf 8f4f 	dsb	sy
 800a476:	e7fe      	b.n	800a476 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a478:	4d0c      	ldr	r5, [pc, #48]	; (800a4ac <xTimerGenericCommand+0x50>)
 800a47a:	6828      	ldr	r0, [r5, #0]
 800a47c:	b178      	cbz	r0, 800a49e <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a47e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a480:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a482:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a486:	dc0c      	bgt.n	800a4a2 <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a488:	f7ff fe72 	bl	800a170 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a48c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a48e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a490:	4669      	mov	r1, sp
 800a492:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a494:	bf0c      	ite	eq
 800a496:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a498:	461a      	movne	r2, r3
 800a49a:	f7fe fe70 	bl	800917e <xQueueGenericSend>
}
 800a49e:	b004      	add	sp, #16
 800a4a0:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a4a2:	2300      	movs	r3, #0
 800a4a4:	4669      	mov	r1, sp
 800a4a6:	f7fe ff1d 	bl	80092e4 <xQueueGenericSendFromISR>
 800a4aa:	e7f8      	b.n	800a49e <xTimerGenericCommand+0x42>
 800a4ac:	2400e410 	.word	0x2400e410

0800a4b0 <prvSampleTimeNow>:
{
 800a4b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a4b4:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a558 <prvSampleTimeNow+0xa8>
{
 800a4b8:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a4ba:	f7ff fbad 	bl	8009c18 <xTaskGetTickCount>
 800a4be:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a4c0:	f8d8 3000 	ldr.w	r3, [r8]
 800a4c4:	4283      	cmp	r3, r0
 800a4c6:	d90b      	bls.n	800a4e0 <prvSampleTimeNow+0x30>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a4c8:	4f21      	ldr	r7, [pc, #132]	; (800a550 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a4ca:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a4ce:	683b      	ldr	r3, [r7, #0]
 800a4d0:	681a      	ldr	r2, [r3, #0]
 800a4d2:	b96a      	cbnz	r2, 800a4f0 <prvSampleTimeNow+0x40>
	pxCurrentTimerList = pxOverflowTimerList;
 800a4d4:	4a1f      	ldr	r2, [pc, #124]	; (800a554 <prvSampleTimeNow+0xa4>)
 800a4d6:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800a4d8:	6013      	str	r3, [r2, #0]
 800a4da:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800a4dc:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a4de:	e000      	b.n	800a4e2 <prvSampleTimeNow+0x32>
 800a4e0:	2300      	movs	r3, #0
}
 800a4e2:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a4e4:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a4e6:	f8c8 5000 	str.w	r5, [r8]
}
 800a4ea:	b004      	add	sp, #16
 800a4ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4f0:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4f2:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4f4:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a4f8:	1d21      	adds	r1, r4, #4
 800a4fa:	4608      	mov	r0, r1
 800a4fc:	9103      	str	r1, [sp, #12]
 800a4fe:	f7fe fb04 	bl	8008b0a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a502:	6a23      	ldr	r3, [r4, #32]
 800a504:	4620      	mov	r0, r4
 800a506:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a508:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a50c:	9903      	ldr	r1, [sp, #12]
 800a50e:	f013 0f04 	tst.w	r3, #4
 800a512:	d0dc      	beq.n	800a4ce <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a514:	69a3      	ldr	r3, [r4, #24]
 800a516:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a518:	459a      	cmp	sl, r3
 800a51a:	d205      	bcs.n	800a528 <prvSampleTimeNow+0x78>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a51c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a51e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a520:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a522:	f7fe fadb 	bl	8008adc <vListInsert>
 800a526:	e7d2      	b.n	800a4ce <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a528:	2300      	movs	r3, #0
 800a52a:	4652      	mov	r2, sl
 800a52c:	4620      	mov	r0, r4
 800a52e:	f8cd 9000 	str.w	r9, [sp]
 800a532:	4619      	mov	r1, r3
 800a534:	f7ff ff92 	bl	800a45c <xTimerGenericCommand>
				configASSERT( xResult );
 800a538:	2800      	cmp	r0, #0
 800a53a:	d1c8      	bne.n	800a4ce <prvSampleTimeNow+0x1e>
 800a53c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a540:	f383 8811 	msr	BASEPRI, r3
 800a544:	f3bf 8f6f 	isb	sy
 800a548:	f3bf 8f4f 	dsb	sy
 800a54c:	e7fe      	b.n	800a54c <prvSampleTimeNow+0x9c>
 800a54e:	bf00      	nop
 800a550:	2400e2ec 	.word	0x2400e2ec
 800a554:	2400e2f0 	.word	0x2400e2f0
 800a558:	2400e3bc 	.word	0x2400e3bc

0800a55c <prvTimerTask>:
{
 800a55c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a560:	4d6e      	ldr	r5, [pc, #440]	; (800a71c <prvTimerTask+0x1c0>)
{
 800a562:	b089      	sub	sp, #36	; 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a564:	4e6e      	ldr	r6, [pc, #440]	; (800a720 <prvTimerTask+0x1c4>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a566:	682b      	ldr	r3, [r5, #0]
 800a568:	f8d3 8000 	ldr.w	r8, [r3]
 800a56c:	f1b8 0f00 	cmp.w	r8, #0
 800a570:	d035      	beq.n	800a5de <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a572:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a574:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a576:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800a57a:	f7ff fb45 	bl	8009c08 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a57e:	a804      	add	r0, sp, #16
 800a580:	f7ff ff96 	bl	800a4b0 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a584:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a586:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a588:	2b00      	cmp	r3, #0
 800a58a:	d169      	bne.n	800a660 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a58c:	2c00      	cmp	r4, #0
 800a58e:	d14c      	bne.n	800a62a <prvTimerTask+0xce>
 800a590:	4540      	cmp	r0, r8
 800a592:	d350      	bcc.n	800a636 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a594:	f7ff fbdc 	bl	8009d50 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a598:	682b      	ldr	r3, [r5, #0]
 800a59a:	68db      	ldr	r3, [r3, #12]
 800a59c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a59e:	1d38      	adds	r0, r7, #4
 800a5a0:	f7fe fab3 	bl	8008b0a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5a4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a5a8:	0758      	lsls	r0, r3, #29
 800a5aa:	d51a      	bpl.n	800a5e2 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a5ac:	69b9      	ldr	r1, [r7, #24]
 800a5ae:	4643      	mov	r3, r8
 800a5b0:	464a      	mov	r2, r9
 800a5b2:	4638      	mov	r0, r7
 800a5b4:	4441      	add	r1, r8
 800a5b6:	f7ff ff01 	bl	800a3bc <prvInsertTimerInActiveList>
 800a5ba:	b1b0      	cbz	r0, 800a5ea <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a5bc:	4623      	mov	r3, r4
 800a5be:	4642      	mov	r2, r8
 800a5c0:	4621      	mov	r1, r4
 800a5c2:	4638      	mov	r0, r7
 800a5c4:	9400      	str	r4, [sp, #0]
 800a5c6:	f7ff ff49 	bl	800a45c <xTimerGenericCommand>
			configASSERT( xResult );
 800a5ca:	b970      	cbnz	r0, 800a5ea <prvTimerTask+0x8e>
 800a5cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5d0:	f383 8811 	msr	BASEPRI, r3
 800a5d4:	f3bf 8f6f 	isb	sy
 800a5d8:	f3bf 8f4f 	dsb	sy
 800a5dc:	e7fe      	b.n	800a5dc <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5de:	2401      	movs	r4, #1
 800a5e0:	e7cb      	b.n	800a57a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a5e2:	f023 0301 	bic.w	r3, r3, #1
 800a5e6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a5ea:	6a3b      	ldr	r3, [r7, #32]
 800a5ec:	4638      	mov	r0, r7
 800a5ee:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a5f0:	2200      	movs	r2, #0
 800a5f2:	a904      	add	r1, sp, #16
 800a5f4:	6830      	ldr	r0, [r6, #0]
 800a5f6:	f7fe ff2b 	bl	8009450 <xQueueReceive>
 800a5fa:	2800      	cmp	r0, #0
 800a5fc:	d0b3      	beq.n	800a566 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a5fe:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a600:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a602:	2b00      	cmp	r3, #0
 800a604:	db2f      	blt.n	800a666 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a606:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a608:	6963      	ldr	r3, [r4, #20]
 800a60a:	2b00      	cmp	r3, #0
 800a60c:	d132      	bne.n	800a674 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a60e:	a803      	add	r0, sp, #12
 800a610:	f7ff ff4e 	bl	800a4b0 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a614:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a616:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a618:	2b09      	cmp	r3, #9
 800a61a:	d8e9      	bhi.n	800a5f0 <prvTimerTask+0x94>
 800a61c:	e8df f003 	tbb	[pc, r3]
 800a620:	572e2e2e 	.word	0x572e2e2e
 800a624:	2e2e765e 	.word	0x2e2e765e
 800a628:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a62a:	4b3e      	ldr	r3, [pc, #248]	; (800a724 <prvTimerTask+0x1c8>)
 800a62c:	681b      	ldr	r3, [r3, #0]
 800a62e:	681c      	ldr	r4, [r3, #0]
 800a630:	fab4 f484 	clz	r4, r4
 800a634:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a636:	4622      	mov	r2, r4
 800a638:	eba8 0109 	sub.w	r1, r8, r9
 800a63c:	6830      	ldr	r0, [r6, #0]
 800a63e:	f7ff f8f6 	bl	800982e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a642:	f7ff fb85 	bl	8009d50 <xTaskResumeAll>
 800a646:	2800      	cmp	r0, #0
 800a648:	d1d2      	bne.n	800a5f0 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a64a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a64e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a652:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a656:	f3bf 8f4f 	dsb	sy
 800a65a:	f3bf 8f6f 	isb	sy
 800a65e:	e7c7      	b.n	800a5f0 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a660:	f7ff fb76 	bl	8009d50 <xTaskResumeAll>
}
 800a664:	e7c4      	b.n	800a5f0 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a666:	9b05      	ldr	r3, [sp, #20]
 800a668:	9907      	ldr	r1, [sp, #28]
 800a66a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a66c:	9b04      	ldr	r3, [sp, #16]
 800a66e:	2b00      	cmp	r3, #0
 800a670:	dbbe      	blt.n	800a5f0 <prvTimerTask+0x94>
 800a672:	e7c8      	b.n	800a606 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a674:	1d20      	adds	r0, r4, #4
 800a676:	f7fe fa48 	bl	8008b0a <uxListRemove>
 800a67a:	e7c8      	b.n	800a60e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a67c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a680:	4620      	mov	r0, r4
 800a682:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a684:	f043 0301 	orr.w	r3, r3, #1
 800a688:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a68c:	9b05      	ldr	r3, [sp, #20]
 800a68e:	4419      	add	r1, r3
 800a690:	f7ff fe94 	bl	800a3bc <prvInsertTimerInActiveList>
 800a694:	2800      	cmp	r0, #0
 800a696:	d0ab      	beq.n	800a5f0 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a698:	6a23      	ldr	r3, [r4, #32]
 800a69a:	4620      	mov	r0, r4
 800a69c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a69e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a6a2:	0759      	lsls	r1, r3, #29
 800a6a4:	d5a4      	bpl.n	800a5f0 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a6a6:	69a2      	ldr	r2, [r4, #24]
 800a6a8:	2300      	movs	r3, #0
 800a6aa:	9905      	ldr	r1, [sp, #20]
 800a6ac:	4620      	mov	r0, r4
 800a6ae:	9300      	str	r3, [sp, #0]
 800a6b0:	440a      	add	r2, r1
 800a6b2:	4619      	mov	r1, r3
 800a6b4:	f7ff fed2 	bl	800a45c <xTimerGenericCommand>
							configASSERT( xResult );
 800a6b8:	2800      	cmp	r0, #0
 800a6ba:	d199      	bne.n	800a5f0 <prvTimerTask+0x94>
 800a6bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6c0:	f383 8811 	msr	BASEPRI, r3
 800a6c4:	f3bf 8f6f 	isb	sy
 800a6c8:	f3bf 8f4f 	dsb	sy
 800a6cc:	e7fe      	b.n	800a6cc <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a6ce:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a6d2:	f023 0301 	bic.w	r3, r3, #1
 800a6d6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a6da:	e789      	b.n	800a5f0 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6dc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a6e0:	f043 0301 	orr.w	r3, r3, #1
 800a6e4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a6e8:	9905      	ldr	r1, [sp, #20]
 800a6ea:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a6ec:	b941      	cbnz	r1, 800a700 <prvTimerTask+0x1a4>
 800a6ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6f2:	f383 8811 	msr	BASEPRI, r3
 800a6f6:	f3bf 8f6f 	isb	sy
 800a6fa:	f3bf 8f4f 	dsb	sy
 800a6fe:	e7fe      	b.n	800a6fe <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a700:	4603      	mov	r3, r0
 800a702:	4401      	add	r1, r0
 800a704:	4620      	mov	r0, r4
 800a706:	f7ff fe59 	bl	800a3bc <prvInsertTimerInActiveList>
					break;
 800a70a:	e771      	b.n	800a5f0 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a70c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a710:	079a      	lsls	r2, r3, #30
 800a712:	d4de      	bmi.n	800a6d2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a714:	4620      	mov	r0, r4
 800a716:	f7fe f989 	bl	8008a2c <vPortFree>
 800a71a:	e769      	b.n	800a5f0 <prvTimerTask+0x94>
 800a71c:	2400e2ec 	.word	0x2400e2ec
 800a720:	2400e410 	.word	0x2400e410
 800a724:	2400e2f0 	.word	0x2400e2f0

0800a728 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a728:	8880      	ldrh	r0, [r0, #4]
 800a72a:	4770      	bx	lr

0800a72c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a72c:	b570      	push	{r4, r5, r6, lr}
 800a72e:	6803      	ldr	r3, [r0, #0]
 800a730:	460c      	mov	r4, r1
 800a732:	2100      	movs	r1, #0
 800a734:	4605      	mov	r5, r0
 800a736:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a738:	4798      	blx	r3
 800a73a:	4606      	mov	r6, r0
 800a73c:	682b      	ldr	r3, [r5, #0]
 800a73e:	4628      	mov	r0, r5
 800a740:	1ba4      	subs	r4, r4, r6
 800a742:	6a1b      	ldr	r3, [r3, #32]
 800a744:	b2a4      	uxth	r4, r4
 800a746:	4798      	blx	r3
 800a748:	fbb4 f0f0 	udiv	r0, r4, r0
 800a74c:	bd70      	pop	{r4, r5, r6, pc}

0800a74e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a74e:	2300      	movs	r3, #0
 800a750:	8083      	strh	r3, [r0, #4]
 800a752:	4770      	bx	lr

0800a754 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a754:	b510      	push	{r4, lr}
 800a756:	6803      	ldr	r3, [r0, #0]
 800a758:	4604      	mov	r4, r0
 800a75a:	8881      	ldrh	r1, [r0, #4]
 800a75c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a75e:	4798      	blx	r3
 800a760:	88a3      	ldrh	r3, [r4, #4]
 800a762:	3301      	adds	r3, #1
 800a764:	80a3      	strh	r3, [r4, #4]
 800a766:	bd10      	pop	{r4, pc}

0800a768 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a768:	6803      	ldr	r3, [r0, #0]
 800a76a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a76c:	4718      	bx	r3

0800a76e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a76e:	4770      	bx	lr

0800a770 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a770:	4a02      	ldr	r2, [pc, #8]	; (800a77c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a772:	6002      	str	r2, [r0, #0]
 800a774:	2200      	movs	r2, #0
 800a776:	8082      	strh	r2, [r0, #4]
 800a778:	4770      	bx	lr
 800a77a:	bf00      	nop
 800a77c:	08023274 	.word	0x08023274

0800a780 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a780:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a782:	2000      	movs	r0, #0
 800a784:	b12b      	cbz	r3, 800a792 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a786:	b920      	cbnz	r0, 800a792 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a788:	1a5a      	subs	r2, r3, r1
 800a78a:	699b      	ldr	r3, [r3, #24]
 800a78c:	4250      	negs	r0, r2
 800a78e:	4150      	adcs	r0, r2
 800a790:	e7f8      	b.n	800a784 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a792:	4770      	bx	lr

0800a794 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a794:	2300      	movs	r3, #0
 800a796:	6148      	str	r0, [r1, #20]
 800a798:	618b      	str	r3, [r1, #24]
 800a79a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a79c:	b913      	cbnz	r3, 800a7a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a79e:	6281      	str	r1, [r0, #40]	; 0x28
 800a7a0:	4770      	bx	lr
 800a7a2:	4613      	mov	r3, r2
 800a7a4:	699a      	ldr	r2, [r3, #24]
 800a7a6:	2a00      	cmp	r2, #0
 800a7a8:	d1fb      	bne.n	800a7a2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a7aa:	6199      	str	r1, [r3, #24]
 800a7ac:	4770      	bx	lr

0800a7ae <_ZN8touchgfx9Container9removeAllEv>:
 800a7ae:	2200      	movs	r2, #0
 800a7b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a7b2:	b123      	cbz	r3, 800a7be <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a7b4:	6999      	ldr	r1, [r3, #24]
 800a7b6:	6281      	str	r1, [r0, #40]	; 0x28
 800a7b8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a7bc:	e7f8      	b.n	800a7b0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a7be:	4770      	bx	lr

0800a7c0 <_ZN8touchgfx9Container6unlinkEv>:
 800a7c0:	2300      	movs	r3, #0
 800a7c2:	6283      	str	r3, [r0, #40]	; 0x28
 800a7c4:	4770      	bx	lr

0800a7c6 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a7c6:	2200      	movs	r2, #0
 800a7c8:	8002      	strh	r2, [r0, #0]
 800a7ca:	8042      	strh	r2, [r0, #2]
 800a7cc:	8082      	strh	r2, [r0, #4]
 800a7ce:	80c2      	strh	r2, [r0, #6]
 800a7d0:	4770      	bx	lr

0800a7d2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a7d2:	b570      	push	{r4, r5, r6, lr}
 800a7d4:	460d      	mov	r5, r1
 800a7d6:	4616      	mov	r6, r2
 800a7d8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a7da:	b13c      	cbz	r4, 800a7ec <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a7dc:	6823      	ldr	r3, [r4, #0]
 800a7de:	4620      	mov	r0, r4
 800a7e0:	4632      	mov	r2, r6
 800a7e2:	4629      	mov	r1, r5
 800a7e4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a7e6:	4798      	blx	r3
 800a7e8:	69a4      	ldr	r4, [r4, #24]
 800a7ea:	e7f6      	b.n	800a7da <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a7ec:	bd70      	pop	{r4, r5, r6, pc}

0800a7ee <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a7ee:	b538      	push	{r3, r4, r5, lr}
 800a7f0:	460d      	mov	r5, r1
 800a7f2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a7f4:	b134      	cbz	r4, 800a804 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a7f6:	682b      	ldr	r3, [r5, #0]
 800a7f8:	4621      	mov	r1, r4
 800a7fa:	4628      	mov	r0, r5
 800a7fc:	689b      	ldr	r3, [r3, #8]
 800a7fe:	4798      	blx	r3
 800a800:	69a4      	ldr	r4, [r4, #24]
 800a802:	e7f7      	b.n	800a7f4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a804:	bd38      	pop	{r3, r4, r5, pc}

0800a806 <_ZN8touchgfx9ContainerD1Ev>:
 800a806:	4770      	bx	lr

0800a808 <_ZN8touchgfx9ContainerD0Ev>:
 800a808:	b510      	push	{r4, lr}
 800a80a:	4604      	mov	r4, r0
 800a80c:	212c      	movs	r1, #44	; 0x2c
 800a80e:	f016 fac4 	bl	8020d9a <_ZdlPvj>
 800a812:	4620      	mov	r0, r4
 800a814:	bd10      	pop	{r4, pc}

0800a816 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a816:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a818:	b19b      	cbz	r3, 800a842 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a81a:	428b      	cmp	r3, r1
 800a81c:	d109      	bne.n	800a832 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a81e:	699a      	ldr	r2, [r3, #24]
 800a820:	2100      	movs	r1, #0
 800a822:	6159      	str	r1, [r3, #20]
 800a824:	6282      	str	r2, [r0, #40]	; 0x28
 800a826:	b902      	cbnz	r2, 800a82a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a828:	4770      	bx	lr
 800a82a:	6199      	str	r1, [r3, #24]
 800a82c:	4770      	bx	lr
 800a82e:	4613      	mov	r3, r2
 800a830:	b13a      	cbz	r2, 800a842 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a832:	699a      	ldr	r2, [r3, #24]
 800a834:	428a      	cmp	r2, r1
 800a836:	d1fa      	bne.n	800a82e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a838:	698a      	ldr	r2, [r1, #24]
 800a83a:	619a      	str	r2, [r3, #24]
 800a83c:	2300      	movs	r3, #0
 800a83e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a842:	4770      	bx	lr

0800a844 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a844:	b410      	push	{r4}
 800a846:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a848:	4604      	mov	r4, r0
 800a84a:	b92b      	cbnz	r3, 800a858 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a84c:	6803      	ldr	r3, [r0, #0]
 800a84e:	4611      	mov	r1, r2
 800a850:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a854:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a856:	4718      	bx	r3
 800a858:	b941      	cbnz	r1, 800a86c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a85a:	6193      	str	r3, [r2, #24]
 800a85c:	6282      	str	r2, [r0, #40]	; 0x28
 800a85e:	6154      	str	r4, [r2, #20]
 800a860:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a864:	4770      	bx	lr
 800a866:	4603      	mov	r3, r0
 800a868:	2800      	cmp	r0, #0
 800a86a:	d0f9      	beq.n	800a860 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a86c:	4299      	cmp	r1, r3
 800a86e:	6998      	ldr	r0, [r3, #24]
 800a870:	d1f9      	bne.n	800a866 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a872:	6190      	str	r0, [r2, #24]
 800a874:	618a      	str	r2, [r1, #24]
 800a876:	e7f2      	b.n	800a85e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a878 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a87c:	461f      	mov	r7, r3
 800a87e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a882:	460d      	mov	r5, r1
 800a884:	4616      	mov	r6, r2
 800a886:	b103      	cbz	r3, 800a88a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a888:	6038      	str	r0, [r7, #0]
 800a88a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a88c:	b314      	cbz	r4, 800a8d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a88e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a892:	b1eb      	cbz	r3, 800a8d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a894:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a898:	428d      	cmp	r5, r1
 800a89a:	db19      	blt.n	800a8d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a89c:	b289      	uxth	r1, r1
 800a89e:	8923      	ldrh	r3, [r4, #8]
 800a8a0:	440b      	add	r3, r1
 800a8a2:	b21b      	sxth	r3, r3
 800a8a4:	429d      	cmp	r5, r3
 800a8a6:	da13      	bge.n	800a8d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a8a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a8ac:	4296      	cmp	r6, r2
 800a8ae:	db0f      	blt.n	800a8d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a8b0:	b292      	uxth	r2, r2
 800a8b2:	8963      	ldrh	r3, [r4, #10]
 800a8b4:	4413      	add	r3, r2
 800a8b6:	b21b      	sxth	r3, r3
 800a8b8:	429e      	cmp	r6, r3
 800a8ba:	da09      	bge.n	800a8d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a8bc:	6823      	ldr	r3, [r4, #0]
 800a8be:	1ab2      	subs	r2, r6, r2
 800a8c0:	1a69      	subs	r1, r5, r1
 800a8c2:	4620      	mov	r0, r4
 800a8c4:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a8c8:	b212      	sxth	r2, r2
 800a8ca:	463b      	mov	r3, r7
 800a8cc:	b209      	sxth	r1, r1
 800a8ce:	47c0      	blx	r8
 800a8d0:	69a4      	ldr	r4, [r4, #24]
 800a8d2:	e7db      	b.n	800a88c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a8d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a8d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8dc:	4c6d      	ldr	r4, [pc, #436]	; (800aa94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800a8de:	b0a1      	sub	sp, #132	; 0x84
 800a8e0:	4606      	mov	r6, r0
 800a8e2:	6824      	ldr	r4, [r4, #0]
 800a8e4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a8e6:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a8ea:	2400      	movs	r4, #0
 800a8ec:	9303      	str	r3, [sp, #12]
 800a8ee:	802c      	strh	r4, [r5, #0]
 800a8f0:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a8f2:	802c      	strh	r4, [r5, #0]
 800a8f4:	601c      	str	r4, [r3, #0]
 800a8f6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a8fa:	f7ff ffbd 	bl	800a878 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a8fe:	f1b9 0f03 	cmp.w	r9, #3
 800a902:	f340 80c1 	ble.w	800aa88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800a906:	4631      	mov	r1, r6
 800a908:	a80c      	add	r0, sp, #48	; 0x30
 800a90a:	f006 fe0f 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a90e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a912:	9306      	str	r3, [sp, #24]
 800a914:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a918:	9307      	str	r3, [sp, #28]
 800a91a:	9b03      	ldr	r3, [sp, #12]
 800a91c:	f8d3 a000 	ldr.w	sl, [r3]
 800a920:	f1ba 0f00 	cmp.w	sl, #0
 800a924:	f000 80b3 	beq.w	800aa8e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800a928:	4651      	mov	r1, sl
 800a92a:	a810      	add	r0, sp, #64	; 0x40
 800a92c:	f006 fdfe 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a930:	2002      	movs	r0, #2
 800a932:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a936:	9b01      	ldr	r3, [sp, #4]
 800a938:	9a06      	ldr	r2, [sp, #24]
 800a93a:	fb91 f1f0 	sdiv	r1, r1, r0
 800a93e:	189d      	adds	r5, r3, r2
 800a940:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a944:	9a07      	ldr	r2, [sp, #28]
 800a946:	4419      	add	r1, r3
 800a948:	9b02      	ldr	r3, [sp, #8]
 800a94a:	4413      	add	r3, r2
 800a94c:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a950:	1a6d      	subs	r5, r5, r1
 800a952:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a956:	fb92 f2f0 	sdiv	r2, r2, r0
 800a95a:	440a      	add	r2, r1
 800a95c:	1a9b      	subs	r3, r3, r2
 800a95e:	435b      	muls	r3, r3
 800a960:	fb05 3505 	mla	r5, r5, r5, r3
 800a964:	4f4c      	ldr	r7, [pc, #304]	; (800aa98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a966:	ac10      	add	r4, sp, #64	; 0x40
 800a968:	f1b9 0f0c 	cmp.w	r9, #12
 800a96c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a96e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a970:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a972:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a974:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a976:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a978:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a97c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a980:	f04f 0303 	mov.w	r3, #3
 800a984:	bfd8      	it	le
 800a986:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a98a:	f04f 0400 	mov.w	r4, #0
 800a98e:	f8cd 9000 	str.w	r9, [sp]
 800a992:	bfcc      	ite	gt
 800a994:	4698      	movgt	r8, r3
 800a996:	fb92 f8f3 	sdivle	r8, r2, r3
 800a99a:	1c63      	adds	r3, r4, #1
 800a99c:	aa10      	add	r2, sp, #64	; 0x40
 800a99e:	f004 0401 	and.w	r4, r4, #1
 800a9a2:	f04f 0b00 	mov.w	fp, #0
 800a9a6:	9308      	str	r3, [sp, #32]
 800a9a8:	9b00      	ldr	r3, [sp, #0]
 800a9aa:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a9ae:	fb93 f3f8 	sdiv	r3, r3, r8
 800a9b2:	3404      	adds	r4, #4
 800a9b4:	b29b      	uxth	r3, r3
 800a9b6:	9304      	str	r3, [sp, #16]
 800a9b8:	9a04      	ldr	r2, [sp, #16]
 800a9ba:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a9be:	fb13 f302 	smulbb	r3, r3, r2
 800a9c2:	9a01      	ldr	r2, [sp, #4]
 800a9c4:	b29b      	uxth	r3, r3
 800a9c6:	1899      	adds	r1, r3, r2
 800a9c8:	9305      	str	r3, [sp, #20]
 800a9ca:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a9ce:	b209      	sxth	r1, r1
 800a9d0:	4299      	cmp	r1, r3
 800a9d2:	db4d      	blt.n	800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a9d4:	8932      	ldrh	r2, [r6, #8]
 800a9d6:	4413      	add	r3, r2
 800a9d8:	b21b      	sxth	r3, r3
 800a9da:	4299      	cmp	r1, r3
 800a9dc:	da48      	bge.n	800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a9de:	9b04      	ldr	r3, [sp, #16]
 800a9e0:	6827      	ldr	r7, [r4, #0]
 800a9e2:	fb17 f703 	smulbb	r7, r7, r3
 800a9e6:	9b02      	ldr	r3, [sp, #8]
 800a9e8:	b2bf      	uxth	r7, r7
 800a9ea:	18fa      	adds	r2, r7, r3
 800a9ec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a9f0:	b212      	sxth	r2, r2
 800a9f2:	429a      	cmp	r2, r3
 800a9f4:	db3c      	blt.n	800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a9f6:	8970      	ldrh	r0, [r6, #10]
 800a9f8:	4403      	add	r3, r0
 800a9fa:	b21b      	sxth	r3, r3
 800a9fc:	429a      	cmp	r2, r3
 800a9fe:	da37      	bge.n	800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa00:	2300      	movs	r3, #0
 800aa02:	4630      	mov	r0, r6
 800aa04:	930b      	str	r3, [sp, #44]	; 0x2c
 800aa06:	ab0b      	add	r3, sp, #44	; 0x2c
 800aa08:	f7ff ff36 	bl	800a878 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aa0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aa0e:	b37a      	cbz	r2, 800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa10:	4552      	cmp	r2, sl
 800aa12:	d02d      	beq.n	800aa70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa14:	4611      	mov	r1, r2
 800aa16:	a80e      	add	r0, sp, #56	; 0x38
 800aa18:	9209      	str	r2, [sp, #36]	; 0x24
 800aa1a:	f006 fd87 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aa1e:	f04f 0e02 	mov.w	lr, #2
 800aa22:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800aa26:	9a06      	ldr	r2, [sp, #24]
 800aa28:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800aa2c:	9b01      	ldr	r3, [sp, #4]
 800aa2e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800aa32:	4413      	add	r3, r2
 800aa34:	9a07      	ldr	r2, [sp, #28]
 800aa36:	fb91 f1fe 	sdiv	r1, r1, lr
 800aa3a:	fb9c fcfe 	sdiv	ip, ip, lr
 800aa3e:	4401      	add	r1, r0
 800aa40:	1a58      	subs	r0, r3, r1
 800aa42:	9b02      	ldr	r3, [sp, #8]
 800aa44:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800aa48:	4413      	add	r3, r2
 800aa4a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aa4c:	448c      	add	ip, r1
 800aa4e:	eba3 030c 	sub.w	r3, r3, ip
 800aa52:	435b      	muls	r3, r3
 800aa54:	fb00 3300 	mla	r3, r0, r0, r3
 800aa58:	42ab      	cmp	r3, r5
 800aa5a:	d208      	bcs.n	800aa6e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800aa5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aa5e:	461d      	mov	r5, r3
 800aa60:	9803      	ldr	r0, [sp, #12]
 800aa62:	6001      	str	r1, [r0, #0]
 800aa64:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800aa66:	9805      	ldr	r0, [sp, #20]
 800aa68:	8008      	strh	r0, [r1, #0]
 800aa6a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800aa6c:	800f      	strh	r7, [r1, #0]
 800aa6e:	4692      	mov	sl, r2
 800aa70:	f10b 0b01 	add.w	fp, fp, #1
 800aa74:	3408      	adds	r4, #8
 800aa76:	f1bb 0f04 	cmp.w	fp, #4
 800aa7a:	d19d      	bne.n	800a9b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800aa7c:	9b00      	ldr	r3, [sp, #0]
 800aa7e:	9c08      	ldr	r4, [sp, #32]
 800aa80:	444b      	add	r3, r9
 800aa82:	4544      	cmp	r4, r8
 800aa84:	9300      	str	r3, [sp, #0]
 800aa86:	d188      	bne.n	800a99a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800aa88:	b021      	add	sp, #132	; 0x84
 800aa8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa8e:	f04f 35ff 	mov.w	r5, #4294967295
 800aa92:	e767      	b.n	800a964 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800aa94:	2400e424 	.word	0x2400e424
 800aa98:	08021e64 	.word	0x08021e64

0800aa9c <_ZN8touchgfx4RectaNERKS0_>:
 800aa9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aaa0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800aaa4:	888c      	ldrh	r4, [r1, #4]
 800aaa6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800aaaa:	443c      	add	r4, r7
 800aaac:	b2a4      	uxth	r4, r4
 800aaae:	fa0f f884 	sxth.w	r8, r4
 800aab2:	45c1      	cmp	r9, r8
 800aab4:	da2f      	bge.n	800ab16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aab6:	8882      	ldrh	r2, [r0, #4]
 800aab8:	444a      	add	r2, r9
 800aaba:	b292      	uxth	r2, r2
 800aabc:	fa0f fe82 	sxth.w	lr, r2
 800aac0:	4577      	cmp	r7, lr
 800aac2:	da28      	bge.n	800ab16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aac4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800aac8:	88cb      	ldrh	r3, [r1, #6]
 800aaca:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800aace:	442b      	add	r3, r5
 800aad0:	b21b      	sxth	r3, r3
 800aad2:	429e      	cmp	r6, r3
 800aad4:	da1f      	bge.n	800ab16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aad6:	88c3      	ldrh	r3, [r0, #6]
 800aad8:	4433      	add	r3, r6
 800aada:	b29b      	uxth	r3, r3
 800aadc:	fa0f fc83 	sxth.w	ip, r3
 800aae0:	4565      	cmp	r5, ip
 800aae2:	da18      	bge.n	800ab16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aae4:	454f      	cmp	r7, r9
 800aae6:	bfb8      	it	lt
 800aae8:	464f      	movlt	r7, r9
 800aaea:	42b5      	cmp	r5, r6
 800aaec:	bfb8      	it	lt
 800aaee:	4635      	movlt	r5, r6
 800aaf0:	45f0      	cmp	r8, lr
 800aaf2:	bfd8      	it	le
 800aaf4:	4622      	movle	r2, r4
 800aaf6:	1bd2      	subs	r2, r2, r7
 800aaf8:	8082      	strh	r2, [r0, #4]
 800aafa:	884a      	ldrh	r2, [r1, #2]
 800aafc:	88c9      	ldrh	r1, [r1, #6]
 800aafe:	8007      	strh	r7, [r0, #0]
 800ab00:	440a      	add	r2, r1
 800ab02:	8045      	strh	r5, [r0, #2]
 800ab04:	b292      	uxth	r2, r2
 800ab06:	b211      	sxth	r1, r2
 800ab08:	458c      	cmp	ip, r1
 800ab0a:	bfa8      	it	ge
 800ab0c:	4613      	movge	r3, r2
 800ab0e:	1b5b      	subs	r3, r3, r5
 800ab10:	80c3      	strh	r3, [r0, #6]
 800ab12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab16:	2300      	movs	r3, #0
 800ab18:	8003      	strh	r3, [r0, #0]
 800ab1a:	8043      	strh	r3, [r0, #2]
 800ab1c:	8083      	strh	r3, [r0, #4]
 800ab1e:	80c3      	strh	r3, [r0, #6]
 800ab20:	e7f7      	b.n	800ab12 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ab22:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ab26:	2b00      	cmp	r3, #0
 800ab28:	dd06      	ble.n	800ab38 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ab2a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ab2e:	2800      	cmp	r0, #0
 800ab30:	bfcc      	ite	gt
 800ab32:	2000      	movgt	r0, #0
 800ab34:	2001      	movle	r0, #1
 800ab36:	4770      	bx	lr
 800ab38:	2001      	movs	r0, #1
 800ab3a:	4770      	bx	lr

0800ab3c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ab3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab40:	2300      	movs	r3, #0
 800ab42:	4604      	mov	r4, r0
 800ab44:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ab46:	8003      	strh	r3, [r0, #0]
 800ab48:	8043      	strh	r3, [r0, #2]
 800ab4a:	8083      	strh	r3, [r0, #4]
 800ab4c:	80c3      	strh	r3, [r0, #6]
 800ab4e:	2d00      	cmp	r5, #0
 800ab50:	d040      	beq.n	800abd4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ab52:	1d28      	adds	r0, r5, #4
 800ab54:	f7ff ffe5 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ab58:	b988      	cbnz	r0, 800ab7e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ab5a:	4620      	mov	r0, r4
 800ab5c:	f7ff ffe1 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ab60:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ab64:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ab68:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ab6c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ab70:	b138      	cbz	r0, 800ab82 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ab72:	8022      	strh	r2, [r4, #0]
 800ab74:	8063      	strh	r3, [r4, #2]
 800ab76:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ab7a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ab7e:	69ad      	ldr	r5, [r5, #24]
 800ab80:	e7e5      	b.n	800ab4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ab82:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ab86:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ab8a:	4290      	cmp	r0, r2
 800ab8c:	4607      	mov	r7, r0
 800ab8e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ab92:	460e      	mov	r6, r1
 800ab94:	bfa8      	it	ge
 800ab96:	4617      	movge	r7, r2
 800ab98:	4299      	cmp	r1, r3
 800ab9a:	4472      	add	r2, lr
 800ab9c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800aba0:	bfa8      	it	ge
 800aba2:	461e      	movge	r6, r3
 800aba4:	4440      	add	r0, r8
 800aba6:	4471      	add	r1, lr
 800aba8:	4463      	add	r3, ip
 800abaa:	b200      	sxth	r0, r0
 800abac:	8027      	strh	r7, [r4, #0]
 800abae:	b212      	sxth	r2, r2
 800abb0:	8066      	strh	r6, [r4, #2]
 800abb2:	b209      	sxth	r1, r1
 800abb4:	b21b      	sxth	r3, r3
 800abb6:	4290      	cmp	r0, r2
 800abb8:	bfac      	ite	ge
 800abba:	ebc7 0200 	rsbge	r2, r7, r0
 800abbe:	ebc7 0202 	rsblt	r2, r7, r2
 800abc2:	4299      	cmp	r1, r3
 800abc4:	bfac      	ite	ge
 800abc6:	ebc6 0301 	rsbge	r3, r6, r1
 800abca:	ebc6 0303 	rsblt	r3, r6, r3
 800abce:	80a2      	strh	r2, [r4, #4]
 800abd0:	80e3      	strh	r3, [r4, #6]
 800abd2:	e7d4      	b.n	800ab7e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800abd4:	4620      	mov	r0, r4
 800abd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800abda <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800abda:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800abde:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800abe2:	b383      	cbz	r3, 800ac46 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800abe4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800abe6:	b374      	cbz	r4, 800ac46 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800abe8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800abec:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800abf0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800abf4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800abf8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800abfc:	b303      	cbz	r3, 800ac40 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800abfe:	4668      	mov	r0, sp
 800ac00:	1d21      	adds	r1, r4, #4
 800ac02:	f8ad 5000 	strh.w	r5, [sp]
 800ac06:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ac0a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ac0e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ac12:	f7ff ff43 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800ac16:	4668      	mov	r0, sp
 800ac18:	f7ff ff83 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac1c:	b980      	cbnz	r0, 800ac40 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ac1e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ac22:	4669      	mov	r1, sp
 800ac24:	88a2      	ldrh	r2, [r4, #4]
 800ac26:	4620      	mov	r0, r4
 800ac28:	1a9b      	subs	r3, r3, r2
 800ac2a:	88e2      	ldrh	r2, [r4, #6]
 800ac2c:	f8ad 3000 	strh.w	r3, [sp]
 800ac30:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ac34:	1a9b      	subs	r3, r3, r2
 800ac36:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ac3a:	6823      	ldr	r3, [r4, #0]
 800ac3c:	689b      	ldr	r3, [r3, #8]
 800ac3e:	4798      	blx	r3
 800ac40:	69a4      	ldr	r4, [r4, #24]
 800ac42:	2c00      	cmp	r4, #0
 800ac44:	d1d8      	bne.n	800abf8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ac46:	b002      	add	sp, #8
 800ac48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac4c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ac4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ac4e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ac52:	460d      	mov	r5, r1
 800ac54:	4616      	mov	r6, r2
 800ac56:	b323      	cbz	r3, 800aca2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ac58:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac5a:	b314      	cbz	r4, 800aca2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ac5c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ac60:	b1eb      	cbz	r3, 800ac9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ac62:	6828      	ldr	r0, [r5, #0]
 800ac64:	466b      	mov	r3, sp
 800ac66:	6869      	ldr	r1, [r5, #4]
 800ac68:	c303      	stmia	r3!, {r0, r1}
 800ac6a:	4668      	mov	r0, sp
 800ac6c:	1d21      	adds	r1, r4, #4
 800ac6e:	f7ff ff15 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800ac72:	4668      	mov	r0, sp
 800ac74:	f7ff ff55 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac78:	b988      	cbnz	r0, 800ac9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ac7a:	f8bd 3000 	ldrh.w	r3, [sp]
 800ac7e:	4669      	mov	r1, sp
 800ac80:	88a2      	ldrh	r2, [r4, #4]
 800ac82:	4620      	mov	r0, r4
 800ac84:	1a9b      	subs	r3, r3, r2
 800ac86:	88e2      	ldrh	r2, [r4, #6]
 800ac88:	f8ad 3000 	strh.w	r3, [sp]
 800ac8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ac90:	1a9b      	subs	r3, r3, r2
 800ac92:	4632      	mov	r2, r6
 800ac94:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ac98:	6823      	ldr	r3, [r4, #0]
 800ac9a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ac9c:	4798      	blx	r3
 800ac9e:	69a4      	ldr	r4, [r4, #24]
 800aca0:	e7db      	b.n	800ac5a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800aca2:	b002      	add	sp, #8
 800aca4:	bd70      	pop	{r4, r5, r6, pc}

0800aca6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800aca6:	6803      	ldr	r3, [r0, #0]
 800aca8:	b513      	push	{r0, r1, r4, lr}
 800acaa:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800acae:	2300      	movs	r3, #0
 800acb0:	e9cd 3300 	strd	r3, r3, [sp]
 800acb4:	466b      	mov	r3, sp
 800acb6:	47a0      	blx	r4
 800acb8:	b002      	add	sp, #8
 800acba:	bd10      	pop	{r4, pc}

0800acbc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800acbc:	2301      	movs	r3, #1
 800acbe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800acc2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800acc6:	4770      	bx	lr

0800acc8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800acc8:	2301      	movs	r3, #1
 800acca:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800acce:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800acd2:	4770      	bx	lr

0800acd4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800acd4:	6843      	ldr	r3, [r0, #4]
 800acd6:	2201      	movs	r2, #1
 800acd8:	725a      	strb	r2, [r3, #9]
 800acda:	6840      	ldr	r0, [r0, #4]
 800acdc:	6803      	ldr	r3, [r0, #0]
 800acde:	691b      	ldr	r3, [r3, #16]
 800ace0:	4718      	bx	r3

0800ace2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ace2:	6840      	ldr	r0, [r0, #4]
 800ace4:	6803      	ldr	r3, [r0, #0]
 800ace6:	689b      	ldr	r3, [r3, #8]
 800ace8:	4718      	bx	r3

0800acea <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800acea:	b530      	push	{r4, r5, lr}
 800acec:	b08b      	sub	sp, #44	; 0x2c
 800acee:	6804      	ldr	r4, [r0, #0]
 800acf0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800acf4:	9509      	str	r5, [sp, #36]	; 0x24
 800acf6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800acfa:	9508      	str	r5, [sp, #32]
 800acfc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ad00:	9507      	str	r5, [sp, #28]
 800ad02:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ad06:	9506      	str	r5, [sp, #24]
 800ad08:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ad0c:	9505      	str	r5, [sp, #20]
 800ad0e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ad12:	9504      	str	r5, [sp, #16]
 800ad14:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ad18:	9503      	str	r5, [sp, #12]
 800ad1a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ad1e:	9502      	str	r5, [sp, #8]
 800ad20:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ad24:	e9cd 3500 	strd	r3, r5, [sp]
 800ad28:	4613      	mov	r3, r2
 800ad2a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ad2c:	2200      	movs	r2, #0
 800ad2e:	47a0      	blx	r4
 800ad30:	b00b      	add	sp, #44	; 0x2c
 800ad32:	bd30      	pop	{r4, r5, pc}

0800ad34 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ad34:	4b04      	ldr	r3, [pc, #16]	; (800ad48 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ad36:	781b      	ldrb	r3, [r3, #0]
 800ad38:	b123      	cbz	r3, 800ad44 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ad3a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800ad3e:	f080 0001 	eor.w	r0, r0, #1
 800ad42:	4770      	bx	lr
 800ad44:	2001      	movs	r0, #1
 800ad46:	4770      	bx	lr
 800ad48:	2400e422 	.word	0x2400e422

0800ad4c <_ZN8touchgfx3HAL8endFrameEv>:
 800ad4c:	b510      	push	{r4, lr}
 800ad4e:	4604      	mov	r4, r0
 800ad50:	6840      	ldr	r0, [r0, #4]
 800ad52:	6803      	ldr	r3, [r0, #0]
 800ad54:	689b      	ldr	r3, [r3, #8]
 800ad56:	4798      	blx	r3
 800ad58:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ad5c:	b113      	cbz	r3, 800ad64 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ad5e:	2301      	movs	r3, #1
 800ad60:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800ad64:	bd10      	pop	{r4, pc}

0800ad66 <_ZN8touchgfx3HAL10initializeEv>:
 800ad66:	b510      	push	{r4, lr}
 800ad68:	4604      	mov	r4, r0
 800ad6a:	f7f5 fd91 	bl	8000890 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ad6e:	f7f5 fc6f 	bl	8000650 <_ZN8touchgfx4GPIO4initEv>
 800ad72:	6860      	ldr	r0, [r4, #4]
 800ad74:	6803      	ldr	r3, [r0, #0]
 800ad76:	68db      	ldr	r3, [r3, #12]
 800ad78:	4798      	blx	r3
 800ad7a:	68e0      	ldr	r0, [r4, #12]
 800ad7c:	6803      	ldr	r3, [r0, #0]
 800ad7e:	689b      	ldr	r3, [r3, #8]
 800ad80:	4798      	blx	r3
 800ad82:	6823      	ldr	r3, [r4, #0]
 800ad84:	4620      	mov	r0, r4
 800ad86:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ad88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ad8c:	4718      	bx	r3
	...

0800ad90 <_ZN8touchgfx3HAL4tickEv>:
 800ad90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ad92:	6803      	ldr	r3, [r0, #0]
 800ad94:	4604      	mov	r4, r0
 800ad96:	4d5b      	ldr	r5, [pc, #364]	; (800af04 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ad98:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ad9c:	4798      	blx	r3
 800ad9e:	2800      	cmp	r0, #0
 800ada0:	f000 8095 	beq.w	800aece <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ada4:	2001      	movs	r0, #1
 800ada6:	2600      	movs	r6, #0
 800ada8:	f7f5 fbc0 	bl	800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800adac:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800adb0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800adb4:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800adb8:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800adbc:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800adc0:	b133      	cbz	r3, 800add0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800adc2:	6823      	ldr	r3, [r4, #0]
 800adc4:	4620      	mov	r0, r4
 800adc6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800adca:	4798      	blx	r3
 800adcc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800add0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800add4:	2601      	movs	r6, #1
 800add6:	6862      	ldr	r2, [r4, #4]
 800add8:	f083 0301 	eor.w	r3, r3, #1
 800addc:	702e      	strb	r6, [r5, #0]
 800adde:	7253      	strb	r3, [r2, #9]
 800ade0:	f005 fa90 	bl	8010304 <_ZN8touchgfx11Application11getInstanceEv>
 800ade4:	6803      	ldr	r3, [r0, #0]
 800ade6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ade8:	4798      	blx	r3
 800adea:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800adee:	b90b      	cbnz	r3, 800adf4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800adf0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800adf4:	f005 fa86 	bl	8010304 <_ZN8touchgfx11Application11getInstanceEv>
 800adf8:	6803      	ldr	r3, [r0, #0]
 800adfa:	695b      	ldr	r3, [r3, #20]
 800adfc:	4798      	blx	r3
 800adfe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ae00:	6803      	ldr	r3, [r0, #0]
 800ae02:	691b      	ldr	r3, [r3, #16]
 800ae04:	4798      	blx	r3
 800ae06:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ae0a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800ae0e:	3b01      	subs	r3, #1
 800ae10:	b2db      	uxtb	r3, r3
 800ae12:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ae16:	b10a      	cbz	r2, 800ae1c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ae18:	2b00      	cmp	r3, #0
 800ae1a:	d1eb      	bne.n	800adf4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ae1c:	4a3a      	ldr	r2, [pc, #232]	; (800af08 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ae1e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800ae22:	7813      	ldrb	r3, [r2, #0]
 800ae24:	3301      	adds	r3, #1
 800ae26:	b25b      	sxtb	r3, r3
 800ae28:	4299      	cmp	r1, r3
 800ae2a:	7013      	strb	r3, [r2, #0]
 800ae2c:	dc10      	bgt.n	800ae50 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ae2e:	2300      	movs	r3, #0
 800ae30:	68e0      	ldr	r0, [r4, #12]
 800ae32:	a902      	add	r1, sp, #8
 800ae34:	7013      	strb	r3, [r2, #0]
 800ae36:	aa03      	add	r2, sp, #12
 800ae38:	6803      	ldr	r3, [r0, #0]
 800ae3a:	68db      	ldr	r3, [r3, #12]
 800ae3c:	4798      	blx	r3
 800ae3e:	6823      	ldr	r3, [r4, #0]
 800ae40:	2800      	cmp	r0, #0
 800ae42:	d050      	beq.n	800aee6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ae44:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ae48:	4620      	mov	r0, r4
 800ae4a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ae4e:	4798      	blx	r3
 800ae50:	2300      	movs	r3, #0
 800ae52:	6960      	ldr	r0, [r4, #20]
 800ae54:	f88d 3007 	strb.w	r3, [sp, #7]
 800ae58:	b158      	cbz	r0, 800ae72 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ae5a:	6803      	ldr	r3, [r0, #0]
 800ae5c:	f10d 0107 	add.w	r1, sp, #7
 800ae60:	68db      	ldr	r3, [r3, #12]
 800ae62:	4798      	blx	r3
 800ae64:	b128      	cbz	r0, 800ae72 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ae66:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ae68:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ae6c:	6803      	ldr	r3, [r0, #0]
 800ae6e:	68db      	ldr	r3, [r3, #12]
 800ae70:	4798      	blx	r3
 800ae72:	f104 001c 	add.w	r0, r4, #28
 800ae76:	f015 fbb3 	bl	80205e0 <_ZN8touchgfx8Gestures4tickEv>
 800ae7a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800ae7e:	b30b      	cbz	r3, 800aec4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ae80:	6920      	ldr	r0, [r4, #16]
 800ae82:	6803      	ldr	r3, [r0, #0]
 800ae84:	691b      	ldr	r3, [r3, #16]
 800ae86:	4798      	blx	r3
 800ae88:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800ae8a:	4606      	mov	r6, r0
 800ae8c:	b903      	cbnz	r3, 800ae90 <_ZN8touchgfx3HAL4tickEv+0x100>
 800ae8e:	6760      	str	r0, [r4, #116]	; 0x74
 800ae90:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800ae92:	4a1e      	ldr	r2, [pc, #120]	; (800af0c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ae94:	1af3      	subs	r3, r6, r3
 800ae96:	4293      	cmp	r3, r2
 800ae98:	d914      	bls.n	800aec4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ae9a:	6920      	ldr	r0, [r4, #16]
 800ae9c:	6803      	ldr	r3, [r0, #0]
 800ae9e:	699b      	ldr	r3, [r3, #24]
 800aea0:	4798      	blx	r3
 800aea2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800aea4:	2264      	movs	r2, #100	; 0x64
 800aea6:	1af3      	subs	r3, r6, r3
 800aea8:	fbb3 f3f2 	udiv	r3, r3, r2
 800aeac:	fbb0 f0f3 	udiv	r0, r0, r3
 800aeb0:	2800      	cmp	r0, #0
 800aeb2:	dc1d      	bgt.n	800aef0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800aeb4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800aeb8:	6920      	ldr	r0, [r4, #16]
 800aeba:	2100      	movs	r1, #0
 800aebc:	6803      	ldr	r3, [r0, #0]
 800aebe:	69db      	ldr	r3, [r3, #28]
 800aec0:	4798      	blx	r3
 800aec2:	6766      	str	r6, [r4, #116]	; 0x74
 800aec4:	f005 fa1e 	bl	8010304 <_ZN8touchgfx11Application11getInstanceEv>
 800aec8:	6803      	ldr	r3, [r0, #0]
 800aeca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aecc:	4798      	blx	r3
 800aece:	6823      	ldr	r3, [r4, #0]
 800aed0:	4620      	mov	r0, r4
 800aed2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800aed6:	4798      	blx	r3
 800aed8:	2001      	movs	r0, #1
 800aeda:	f7f5 fb55 	bl	8000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800aede:	2300      	movs	r3, #0
 800aee0:	702b      	strb	r3, [r5, #0]
 800aee2:	b004      	add	sp, #16
 800aee4:	bd70      	pop	{r4, r5, r6, pc}
 800aee6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800aeea:	4620      	mov	r0, r4
 800aeec:	4798      	blx	r3
 800aeee:	e7af      	b.n	800ae50 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800aef0:	2863      	cmp	r0, #99	; 0x63
 800aef2:	bfcb      	itete	gt
 800aef4:	2300      	movgt	r3, #0
 800aef6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800aefa:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800aefe:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800af02:	e7d9      	b.n	800aeb8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800af04:	2400e428 	.word	0x2400e428
 800af08:	2400e429 	.word	0x2400e429
 800af0c:	05f5e100 	.word	0x05f5e100

0800af10 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800af10:	b510      	push	{r4, lr}
 800af12:	4604      	mov	r4, r0
 800af14:	f7f5 fcec 	bl	80008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800af18:	2200      	movs	r2, #0
 800af1a:	6863      	ldr	r3, [r4, #4]
 800af1c:	729a      	strb	r2, [r3, #10]
 800af1e:	bd10      	pop	{r4, pc}

0800af20 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800af20:	65c1      	str	r1, [r0, #92]	; 0x5c
 800af22:	301c      	adds	r0, #28
 800af24:	f015 bb5a 	b.w	80205dc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800af28 <_ZN8touchgfx3HAL5touchEll>:
 800af28:	b530      	push	{r4, r5, lr}
 800af2a:	b087      	sub	sp, #28
 800af2c:	4604      	mov	r4, r0
 800af2e:	a804      	add	r0, sp, #16
 800af30:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800af34:	f004 ffb2 	bl	800fe9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800af38:	9b04      	ldr	r3, [sp, #16]
 800af3a:	a906      	add	r1, sp, #24
 800af3c:	a803      	add	r0, sp, #12
 800af3e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800af42:	9b05      	ldr	r3, [sp, #20]
 800af44:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800af48:	f004 fffa 	bl	800ff40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800af4c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800af50:	f104 001c 	add.w	r0, r4, #28
 800af54:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800af58:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800af5c:	b189      	cbz	r1, 800af82 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800af5e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800af62:	9300      	str	r3, [sp, #0]
 800af64:	4613      	mov	r3, r2
 800af66:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800af6a:	462a      	mov	r2, r5
 800af6c:	f015 fb46 	bl	80205fc <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800af70:	b128      	cbz	r0, 800af7e <_ZN8touchgfx3HAL5touchEll+0x56>
 800af72:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800af76:	6623      	str	r3, [r4, #96]	; 0x60
 800af78:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800af7c:	6663      	str	r3, [r4, #100]	; 0x64
 800af7e:	b007      	add	sp, #28
 800af80:	bd30      	pop	{r4, r5, pc}
 800af82:	f015 fb7b 	bl	802067c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800af86:	2301      	movs	r3, #1
 800af88:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800af8c:	e7f1      	b.n	800af72 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800af8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800af8e:	b510      	push	{r4, lr}
 800af90:	2b00      	cmp	r3, #0
 800af92:	d046      	beq.n	800b022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800af94:	ea81 0002 	eor.w	r0, r1, r2
 800af98:	07c4      	lsls	r4, r0, #31
 800af9a:	d508      	bpl.n	800afae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800af9c:	440b      	add	r3, r1
 800af9e:	3a01      	subs	r2, #1
 800afa0:	428b      	cmp	r3, r1
 800afa2:	d93e      	bls.n	800b022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800afa4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800afa8:	f801 0b01 	strb.w	r0, [r1], #1
 800afac:	e7f8      	b.n	800afa0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800afae:	07d0      	lsls	r0, r2, #31
 800afb0:	bf42      	ittt	mi
 800afb2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800afb6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800afba:	f801 0b01 	strbmi.w	r0, [r1], #1
 800afbe:	2b01      	cmp	r3, #1
 800afc0:	d911      	bls.n	800afe6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800afc2:	ea81 0402 	eor.w	r4, r1, r2
 800afc6:	4610      	mov	r0, r2
 800afc8:	07a4      	lsls	r4, r4, #30
 800afca:	d022      	beq.n	800b012 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800afcc:	f023 0401 	bic.w	r4, r3, #1
 800afd0:	440c      	add	r4, r1
 800afd2:	428c      	cmp	r4, r1
 800afd4:	4602      	mov	r2, r0
 800afd6:	d904      	bls.n	800afe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800afd8:	8812      	ldrh	r2, [r2, #0]
 800afda:	3002      	adds	r0, #2
 800afdc:	f821 2b02 	strh.w	r2, [r1], #2
 800afe0:	e7f7      	b.n	800afd2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800afe2:	f003 0301 	and.w	r3, r3, #1
 800afe6:	f023 0003 	bic.w	r0, r3, #3
 800afea:	4408      	add	r0, r1
 800afec:	4288      	cmp	r0, r1
 800afee:	4614      	mov	r4, r2
 800aff0:	d904      	bls.n	800affc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800aff2:	6824      	ldr	r4, [r4, #0]
 800aff4:	3204      	adds	r2, #4
 800aff6:	f841 4b04 	str.w	r4, [r1], #4
 800affa:	e7f7      	b.n	800afec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800affc:	f003 0303 	and.w	r3, r3, #3
 800b000:	3a01      	subs	r2, #1
 800b002:	440b      	add	r3, r1
 800b004:	428b      	cmp	r3, r1
 800b006:	d90c      	bls.n	800b022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b008:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b00c:	f801 0b01 	strb.w	r0, [r1], #1
 800b010:	e7f8      	b.n	800b004 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b012:	0790      	lsls	r0, r2, #30
 800b014:	d0e7      	beq.n	800afe6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b016:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b01a:	3b02      	subs	r3, #2
 800b01c:	f821 0b02 	strh.w	r0, [r1], #2
 800b020:	e7e1      	b.n	800afe6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b022:	2001      	movs	r0, #1
 800b024:	bd10      	pop	{r4, pc}

0800b026 <_ZN8touchgfx3HAL7noTouchEv>:
 800b026:	b510      	push	{r4, lr}
 800b028:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800b02c:	4604      	mov	r4, r0
 800b02e:	b153      	cbz	r3, 800b046 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b030:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800b034:	2101      	movs	r1, #1
 800b036:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800b03a:	301c      	adds	r0, #28
 800b03c:	f015 fb1e 	bl	802067c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b040:	2300      	movs	r3, #0
 800b042:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800b046:	bd10      	pop	{r4, pc}

0800b048 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b048:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b04c:	b085      	sub	sp, #20
 800b04e:	4604      	mov	r4, r0
 800b050:	2000      	movs	r0, #0
 800b052:	4699      	mov	r9, r3
 800b054:	ad04      	add	r5, sp, #16
 800b056:	460f      	mov	r7, r1
 800b058:	4690      	mov	r8, r2
 800b05a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b05e:	69a0      	ldr	r0, [r4, #24]
 800b060:	6806      	ldr	r6, [r0, #0]
 800b062:	9501      	str	r5, [sp, #4]
 800b064:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b068:	9500      	str	r5, [sp, #0]
 800b06a:	6835      	ldr	r5, [r6, #0]
 800b06c:	47a8      	blx	r5
 800b06e:	4d10      	ldr	r5, [pc, #64]	; (800b0b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b070:	4606      	mov	r6, r0
 800b072:	f8a5 9000 	strh.w	r9, [r5]
 800b076:	f7f7 f9d3 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b07a:	6803      	ldr	r3, [r0, #0]
 800b07c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b07e:	4798      	blx	r3
 800b080:	b128      	cbz	r0, 800b08e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b082:	2801      	cmp	r0, #1
 800b084:	d00b      	beq.n	800b09e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b086:	4630      	mov	r0, r6
 800b088:	b005      	add	sp, #20
 800b08a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b08e:	882b      	ldrh	r3, [r5, #0]
 800b090:	fb08 7203 	mla	r2, r8, r3, r7
 800b094:	9b03      	ldr	r3, [sp, #12]
 800b096:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b09a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b09c:	e7f3      	b.n	800b086 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b09e:	882a      	ldrh	r2, [r5, #0]
 800b0a0:	9b03      	ldr	r3, [sp, #12]
 800b0a2:	fb08 7202 	mla	r2, r8, r2, r7
 800b0a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b0aa:	1a9a      	subs	r2, r3, r2
 800b0ac:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b0ae:	e7ea      	b.n	800b086 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b0b0:	2400e41e 	.word	0x2400e41e

0800b0b4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b0b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b0b6:	b08b      	sub	sp, #44	; 0x2c
 800b0b8:	4617      	mov	r7, r2
 800b0ba:	4604      	mov	r4, r0
 800b0bc:	460e      	mov	r6, r1
 800b0be:	461d      	mov	r5, r3
 800b0c0:	f7f7 f9ae 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b0c4:	6803      	ldr	r3, [r0, #0]
 800b0c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0c8:	4798      	blx	r3
 800b0ca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b0ce:	9007      	str	r0, [sp, #28]
 800b0d0:	4631      	mov	r1, r6
 800b0d2:	6822      	ldr	r2, [r4, #0]
 800b0d4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b0d8:	4b0c      	ldr	r3, [pc, #48]	; (800b10c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b0da:	4620      	mov	r0, r4
 800b0dc:	881b      	ldrh	r3, [r3, #0]
 800b0de:	9306      	str	r3, [sp, #24]
 800b0e0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b0e4:	9305      	str	r3, [sp, #20]
 800b0e6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b0ea:	9304      	str	r3, [sp, #16]
 800b0ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b0f0:	9303      	str	r3, [sp, #12]
 800b0f2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b0f6:	9302      	str	r3, [sp, #8]
 800b0f8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b0fc:	e9cd 5300 	strd	r5, r3, [sp]
 800b100:	463b      	mov	r3, r7
 800b102:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b104:	2200      	movs	r2, #0
 800b106:	47a8      	blx	r5
 800b108:	b00b      	add	sp, #44	; 0x2c
 800b10a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b10c:	2400e41e 	.word	0x2400e41e

0800b110 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b110:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b114:	4698      	mov	r8, r3
 800b116:	6803      	ldr	r3, [r0, #0]
 800b118:	b08b      	sub	sp, #44	; 0x2c
 800b11a:	4617      	mov	r7, r2
 800b11c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b11e:	460e      	mov	r6, r1
 800b120:	4b13      	ldr	r3, [pc, #76]	; (800b170 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b122:	4604      	mov	r4, r0
 800b124:	f8b3 9000 	ldrh.w	r9, [r3]
 800b128:	f7f7 f97a 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b12c:	6803      	ldr	r3, [r0, #0]
 800b12e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b130:	4798      	blx	r3
 800b132:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b136:	2200      	movs	r2, #0
 800b138:	4631      	mov	r1, r6
 800b13a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b13e:	2302      	movs	r3, #2
 800b140:	4620      	mov	r0, r4
 800b142:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b146:	2301      	movs	r3, #1
 800b148:	9305      	str	r3, [sp, #20]
 800b14a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b14e:	9304      	str	r3, [sp, #16]
 800b150:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b154:	9303      	str	r3, [sp, #12]
 800b156:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b15a:	9302      	str	r3, [sp, #8]
 800b15c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b160:	e9cd 8300 	strd	r8, r3, [sp]
 800b164:	463b      	mov	r3, r7
 800b166:	47a8      	blx	r5
 800b168:	b00b      	add	sp, #44	; 0x2c
 800b16a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b16e:	bf00      	nop
 800b170:	2400e41e 	.word	0x2400e41e

0800b174 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b174:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b178:	4698      	mov	r8, r3
 800b17a:	6803      	ldr	r3, [r0, #0]
 800b17c:	b087      	sub	sp, #28
 800b17e:	460e      	mov	r6, r1
 800b180:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b182:	4617      	mov	r7, r2
 800b184:	4b0f      	ldr	r3, [pc, #60]	; (800b1c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b186:	4604      	mov	r4, r0
 800b188:	f8b3 9000 	ldrh.w	r9, [r3]
 800b18c:	f7f7 f948 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b190:	6803      	ldr	r3, [r0, #0]
 800b192:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b194:	4798      	blx	r3
 800b196:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b19a:	463a      	mov	r2, r7
 800b19c:	4631      	mov	r1, r6
 800b19e:	f8cd 900c 	str.w	r9, [sp, #12]
 800b1a2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b1a6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b1aa:	4620      	mov	r0, r4
 800b1ac:	9302      	str	r3, [sp, #8]
 800b1ae:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b1b2:	9301      	str	r3, [sp, #4]
 800b1b4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b1b8:	9300      	str	r3, [sp, #0]
 800b1ba:	4643      	mov	r3, r8
 800b1bc:	47a8      	blx	r5
 800b1be:	b007      	add	sp, #28
 800b1c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b1c4:	2400e41e 	.word	0x2400e41e

0800b1c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b1c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b1cc:	4604      	mov	r4, r0
 800b1ce:	b08f      	sub	sp, #60	; 0x3c
 800b1d0:	4610      	mov	r0, r2
 800b1d2:	460d      	mov	r5, r1
 800b1d4:	4691      	mov	r9, r2
 800b1d6:	461e      	mov	r6, r3
 800b1d8:	f007 fdd4 	bl	8012d84 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b1dc:	2800      	cmp	r0, #0
 800b1de:	f000 809d 	beq.w	800b31c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b1e2:	6823      	ldr	r3, [r4, #0]
 800b1e4:	4620      	mov	r0, r4
 800b1e6:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b1ea:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b1ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b1f0:	4798      	blx	r3
 800b1f2:	6823      	ldr	r3, [r4, #0]
 800b1f4:	4620      	mov	r0, r4
 800b1f6:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800b384 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b1fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1fc:	4798      	blx	r3
 800b1fe:	f8bb 3000 	ldrh.w	r3, [fp]
 800b202:	4f5c      	ldr	r7, [pc, #368]	; (800b374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b204:	9301      	str	r3, [sp, #4]
 800b206:	f8ba 3000 	ldrh.w	r3, [sl]
 800b20a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b20e:	4640      	mov	r0, r8
 800b210:	9302      	str	r3, [sp, #8]
 800b212:	883b      	ldrh	r3, [r7, #0]
 800b214:	9303      	str	r3, [sp, #12]
 800b216:	4b58      	ldr	r3, [pc, #352]	; (800b378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b218:	881a      	ldrh	r2, [r3, #0]
 800b21a:	9305      	str	r3, [sp, #20]
 800b21c:	9204      	str	r2, [sp, #16]
 800b21e:	f007 fe45 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b222:	8038      	strh	r0, [r7, #0]
 800b224:	4640      	mov	r0, r8
 800b226:	f007 fe75 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b22a:	9b05      	ldr	r3, [sp, #20]
 800b22c:	b280      	uxth	r0, r0
 800b22e:	8018      	strh	r0, [r3, #0]
 800b230:	4b52      	ldr	r3, [pc, #328]	; (800b37c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b232:	781b      	ldrb	r3, [r3, #0]
 800b234:	2b00      	cmp	r3, #0
 800b236:	d174      	bne.n	800b322 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b238:	883b      	ldrh	r3, [r7, #0]
 800b23a:	f8aa 0000 	strh.w	r0, [sl]
 800b23e:	f8ab 3000 	strh.w	r3, [fp]
 800b242:	4648      	mov	r0, r9
 800b244:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b248:	f007 fd9c 	bl	8012d84 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b24c:	2200      	movs	r2, #0
 800b24e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b252:	4611      	mov	r1, r2
 800b254:	4628      	mov	r0, r5
 800b256:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b25a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b25e:	f7f7 faf9 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800b262:	2301      	movs	r3, #1
 800b264:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b268:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b26c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b270:	2b00      	cmp	r3, #0
 800b272:	dd5c      	ble.n	800b32e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b274:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b278:	2b00      	cmp	r3, #0
 800b27a:	dd58      	ble.n	800b32e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b27c:	462a      	mov	r2, r5
 800b27e:	ab0a      	add	r3, sp, #40	; 0x28
 800b280:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b284:	6851      	ldr	r1, [r2, #4]
 800b286:	c303      	stmia	r3!, {r0, r1}
 800b288:	4631      	mov	r1, r6
 800b28a:	a80a      	add	r0, sp, #40	; 0x28
 800b28c:	f7ff fc06 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800b290:	4b38      	ldr	r3, [pc, #224]	; (800b374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b292:	2100      	movs	r1, #0
 800b294:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b298:	4b37      	ldr	r3, [pc, #220]	; (800b378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b29a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b29e:	aa0a      	add	r2, sp, #40	; 0x28
 800b2a0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b2a4:	910c      	str	r1, [sp, #48]	; 0x30
 800b2a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b2aa:	ab08      	add	r3, sp, #32
 800b2ac:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b2b0:	e883 0003 	stmia.w	r3, {r0, r1}
 800b2b4:	4618      	mov	r0, r3
 800b2b6:	a90c      	add	r1, sp, #48	; 0x30
 800b2b8:	f7ff fbf0 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800b2bc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b2be:	2b00      	cmp	r3, #0
 800b2c0:	d13c      	bne.n	800b33c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b2c2:	2000      	movs	r0, #0
 800b2c4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800b2c8:	2600      	movs	r6, #0
 800b2ca:	696b      	ldr	r3, [r5, #20]
 800b2cc:	a908      	add	r1, sp, #32
 800b2ce:	682a      	ldr	r2, [r5, #0]
 800b2d0:	4628      	mov	r0, r5
 800b2d2:	9305      	str	r3, [sp, #20]
 800b2d4:	616e      	str	r6, [r5, #20]
 800b2d6:	6892      	ldr	r2, [r2, #8]
 800b2d8:	4790      	blx	r2
 800b2da:	9b05      	ldr	r3, [sp, #20]
 800b2dc:	4652      	mov	r2, sl
 800b2de:	4649      	mov	r1, r9
 800b2e0:	616b      	str	r3, [r5, #20]
 800b2e2:	4628      	mov	r0, r5
 800b2e4:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800b2e8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b2ec:	f7f7 fab2 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800b2f0:	9a01      	ldr	r2, [sp, #4]
 800b2f2:	4b23      	ldr	r3, [pc, #140]	; (800b380 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b2f4:	4620      	mov	r0, r4
 800b2f6:	801a      	strh	r2, [r3, #0]
 800b2f8:	9a02      	ldr	r2, [sp, #8]
 800b2fa:	4b22      	ldr	r3, [pc, #136]	; (800b384 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b2fc:	801a      	strh	r2, [r3, #0]
 800b2fe:	9a03      	ldr	r2, [sp, #12]
 800b300:	4b1c      	ldr	r3, [pc, #112]	; (800b374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b302:	801a      	strh	r2, [r3, #0]
 800b304:	4b1c      	ldr	r3, [pc, #112]	; (800b378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b306:	9a04      	ldr	r2, [sp, #16]
 800b308:	801a      	strh	r2, [r3, #0]
 800b30a:	6823      	ldr	r3, [r4, #0]
 800b30c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b310:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b312:	4798      	blx	r3
 800b314:	6823      	ldr	r3, [r4, #0]
 800b316:	4620      	mov	r0, r4
 800b318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b31a:	4798      	blx	r3
 800b31c:	b00f      	add	sp, #60	; 0x3c
 800b31e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b322:	883b      	ldrh	r3, [r7, #0]
 800b324:	f8ab 0000 	strh.w	r0, [fp]
 800b328:	f8aa 3000 	strh.w	r3, [sl]
 800b32c:	e789      	b.n	800b242 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b32e:	462a      	mov	r2, r5
 800b330:	ab0a      	add	r3, sp, #40	; 0x28
 800b332:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b336:	6851      	ldr	r1, [r2, #4]
 800b338:	c303      	stmia	r3!, {r0, r1}
 800b33a:	e7a9      	b.n	800b290 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b33c:	a807      	add	r0, sp, #28
 800b33e:	f007 ff25 	bl	801318c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b342:	4606      	mov	r6, r0
 800b344:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b346:	6803      	ldr	r3, [r0, #0]
 800b348:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b34a:	4798      	blx	r3
 800b34c:	4286      	cmp	r6, r0
 800b34e:	d1b8      	bne.n	800b2c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b350:	f7f7 f866 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b354:	6803      	ldr	r3, [r0, #0]
 800b356:	4606      	mov	r6, r0
 800b358:	a807      	add	r0, sp, #28
 800b35a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b35c:	9305      	str	r3, [sp, #20]
 800b35e:	f007 ff15 	bl	801318c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b362:	9b05      	ldr	r3, [sp, #20]
 800b364:	4601      	mov	r1, r0
 800b366:	4630      	mov	r0, r6
 800b368:	4798      	blx	r3
 800b36a:	f080 0001 	eor.w	r0, r0, #1
 800b36e:	b2c0      	uxtb	r0, r0
 800b370:	e7a8      	b.n	800b2c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b372:	bf00      	nop
 800b374:	2400e418 	.word	0x2400e418
 800b378:	2400e41a 	.word	0x2400e41a
 800b37c:	2400e41c 	.word	0x2400e41c
 800b380:	2400e41e 	.word	0x2400e41e
 800b384:	2400e420 	.word	0x2400e420

0800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b388:	4b07      	ldr	r3, [pc, #28]	; (800b3a8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b38a:	b510      	push	{r4, lr}
 800b38c:	781b      	ldrb	r3, [r3, #0]
 800b38e:	4604      	mov	r4, r0
 800b390:	b13b      	cbz	r3, 800b3a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b392:	6803      	ldr	r3, [r0, #0]
 800b394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b396:	4798      	blx	r3
 800b398:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b39a:	4283      	cmp	r3, r0
 800b39c:	d101      	bne.n	800b3a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b39e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b3a0:	bd10      	pop	{r4, pc}
 800b3a2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b3a4:	e7fc      	b.n	800b3a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b3a6:	bf00      	nop
 800b3a8:	2400e422 	.word	0x2400e422

0800b3ac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b3ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3b0:	461d      	mov	r5, r3
 800b3b2:	b08a      	sub	sp, #40	; 0x28
 800b3b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b3b8:	4690      	mov	r8, r2
 800b3ba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b3be:	2400      	movs	r4, #0
 800b3c0:	4607      	mov	r7, r0
 800b3c2:	fb06 8505 	mla	r5, r6, r5, r8
 800b3c6:	9404      	str	r4, [sp, #16]
 800b3c8:	f88d 4020 	strb.w	r4, [sp, #32]
 800b3cc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b3d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b3d4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b3d8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b3dc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b3e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b3e8:	f7ff ffce 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b3ec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b3f0:	6878      	ldr	r0, [r7, #4]
 800b3f2:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b3f6:	a901      	add	r1, sp, #4
 800b3f8:	9505      	str	r5, [sp, #20]
 800b3fa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b3fe:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b402:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b406:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b40a:	6803      	ldr	r3, [r0, #0]
 800b40c:	685b      	ldr	r3, [r3, #4]
 800b40e:	4798      	blx	r3
 800b410:	b00a      	add	sp, #40	; 0x28
 800b412:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b416 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b416:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b41a:	b08b      	sub	sp, #44	; 0x2c
 800b41c:	2400      	movs	r4, #0
 800b41e:	4691      	mov	r9, r2
 800b420:	461d      	mov	r5, r3
 800b422:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b426:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b42a:	4688      	mov	r8, r1
 800b42c:	4607      	mov	r7, r0
 800b42e:	9404      	str	r4, [sp, #16]
 800b430:	fb06 9505 	mla	r5, r6, r5, r9
 800b434:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b438:	f7ff ffa6 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b43c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b440:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b444:	6878      	ldr	r0, [r7, #4]
 800b446:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b44a:	a901      	add	r1, sp, #4
 800b44c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b450:	9505      	str	r5, [sp, #20]
 800b452:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b456:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b45a:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b45e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b462:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b466:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b46a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b46e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b472:	6803      	ldr	r3, [r0, #0]
 800b474:	685b      	ldr	r3, [r3, #4]
 800b476:	4798      	blx	r3
 800b478:	b00b      	add	sp, #44	; 0x2c
 800b47a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b484:	b08a      	sub	sp, #40	; 0x28
 800b486:	4698      	mov	r8, r3
 800b488:	2300      	movs	r3, #0
 800b48a:	4606      	mov	r6, r0
 800b48c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b490:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b494:	2d0b      	cmp	r5, #11
 800b496:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b49a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b49e:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b4a2:	9304      	str	r3, [sp, #16]
 800b4a4:	d137      	bne.n	800b516 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b4a6:	2380      	movs	r3, #128	; 0x80
 800b4a8:	f88d 0020 	strb.w	r0, [sp, #32]
 800b4ac:	4630      	mov	r0, r6
 800b4ae:	9203      	str	r2, [sp, #12]
 800b4b0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b4b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b4b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b4bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b4c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b4c4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b4c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b4cc:	f7ff ff5c 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b4d0:	2c0b      	cmp	r4, #11
 800b4d2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b4d6:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b4da:	bf94      	ite	ls
 800b4dc:	4b19      	ldrls	r3, [pc, #100]	; (800b544 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b4de:	2100      	movhi	r1, #0
 800b4e0:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b4e4:	bf98      	it	ls
 800b4e6:	5d19      	ldrbls	r1, [r3, r4]
 800b4e8:	fb02 8307 	mla	r3, r2, r7, r8
 800b4ec:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b4f0:	10c9      	asrs	r1, r1, #3
 800b4f2:	fb01 0003 	mla	r0, r1, r3, r0
 800b4f6:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b4fa:	a901      	add	r1, sp, #4
 800b4fc:	9005      	str	r0, [sp, #20]
 800b4fe:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b502:	2300      	movs	r3, #0
 800b504:	6870      	ldr	r0, [r6, #4]
 800b506:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b50a:	6803      	ldr	r3, [r0, #0]
 800b50c:	685b      	ldr	r3, [r3, #4]
 800b50e:	4798      	blx	r3
 800b510:	b00a      	add	sp, #40	; 0x28
 800b512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b516:	2d02      	cmp	r5, #2
 800b518:	d109      	bne.n	800b52e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b51a:	28ff      	cmp	r0, #255	; 0xff
 800b51c:	d105      	bne.n	800b52a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b51e:	f1bc 0f00 	cmp.w	ip, #0
 800b522:	bf14      	ite	ne
 800b524:	2340      	movne	r3, #64	; 0x40
 800b526:	2320      	moveq	r3, #32
 800b528:	e7be      	b.n	800b4a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b52a:	2340      	movs	r3, #64	; 0x40
 800b52c:	e7bc      	b.n	800b4a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b52e:	28ff      	cmp	r0, #255	; 0xff
 800b530:	d105      	bne.n	800b53e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b532:	f1bc 0f00 	cmp.w	ip, #0
 800b536:	bf14      	ite	ne
 800b538:	2304      	movne	r3, #4
 800b53a:	2301      	moveq	r3, #1
 800b53c:	e7b4      	b.n	800b4a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b53e:	2304      	movs	r3, #4
 800b540:	e7b2      	b.n	800b4a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b542:	bf00      	nop
 800b544:	08023330 	.word	0x08023330

0800b548 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b54c:	b08b      	sub	sp, #44	; 0x2c
 800b54e:	461d      	mov	r5, r3
 800b550:	2400      	movs	r4, #0
 800b552:	4688      	mov	r8, r1
 800b554:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b558:	4693      	mov	fp, r2
 800b55a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b55e:	4607      	mov	r7, r0
 800b560:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b564:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b568:	9404      	str	r4, [sp, #16]
 800b56a:	bf14      	ite	ne
 800b56c:	2308      	movne	r3, #8
 800b56e:	2302      	moveq	r3, #2
 800b570:	fb05 b50a 	mla	r5, r5, sl, fp
 800b574:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b578:	f7ff ff06 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b57c:	2e0b      	cmp	r6, #11
 800b57e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b582:	a901      	add	r1, sp, #4
 800b584:	bf98      	it	ls
 800b586:	4b13      	ldrls	r3, [pc, #76]	; (800b5d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b588:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b58c:	bf98      	it	ls
 800b58e:	5d9c      	ldrbls	r4, [r3, r6]
 800b590:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b594:	10e4      	asrs	r4, r4, #3
 800b596:	f8cd 8010 	str.w	r8, [sp, #16]
 800b59a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b59e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b5a2:	fb04 0405 	mla	r4, r4, r5, r0
 800b5a6:	6878      	ldr	r0, [r7, #4]
 800b5a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b5ac:	2300      	movs	r3, #0
 800b5ae:	9405      	str	r4, [sp, #20]
 800b5b0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b5b4:	f88d 9020 	strb.w	r9, [sp, #32]
 800b5b8:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b5bc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b5c0:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b5c4:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b5c8:	6803      	ldr	r3, [r0, #0]
 800b5ca:	685b      	ldr	r3, [r3, #4]
 800b5cc:	4798      	blx	r3
 800b5ce:	b00b      	add	sp, #44	; 0x2c
 800b5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5d4:	08023330 	.word	0x08023330

0800b5d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b5d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5dc:	461e      	mov	r6, r3
 800b5de:	4b0a      	ldr	r3, [pc, #40]	; (800b608 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b5e0:	460f      	mov	r7, r1
 800b5e2:	4690      	mov	r8, r2
 800b5e4:	881d      	ldrh	r5, [r3, #0]
 800b5e6:	f7f6 ff1b 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b5ea:	6803      	ldr	r3, [r0, #0]
 800b5ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5ee:	4798      	blx	r3
 800b5f0:	280b      	cmp	r0, #11
 800b5f2:	bf96      	itet	ls
 800b5f4:	4b05      	ldrls	r3, [pc, #20]	; (800b60c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b5f6:	2400      	movhi	r4, #0
 800b5f8:	5c1c      	ldrbls	r4, [r3, r0]
 800b5fa:	fb08 7005 	mla	r0, r8, r5, r7
 800b5fe:	10e4      	asrs	r4, r4, #3
 800b600:	fb04 6000 	mla	r0, r4, r0, r6
 800b604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b608:	2400e41e 	.word	0x2400e41e
 800b60c:	08023330 	.word	0x08023330

0800b610 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b610:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b612:	b08b      	sub	sp, #44	; 0x2c
 800b614:	461f      	mov	r7, r3
 800b616:	4604      	mov	r4, r0
 800b618:	4616      	mov	r6, r2
 800b61a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b61e:	2500      	movs	r5, #0
 800b620:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b624:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b628:	9504      	str	r5, [sp, #16]
 800b62a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b62e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b632:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b636:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b63a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b63e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b642:	f88d 3020 	strb.w	r3, [sp, #32]
 800b646:	f7ff fe9f 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b64a:	463a      	mov	r2, r7
 800b64c:	4631      	mov	r1, r6
 800b64e:	4603      	mov	r3, r0
 800b650:	4620      	mov	r0, r4
 800b652:	f7ff ffc1 	bl	800b5d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b656:	4b0e      	ldr	r3, [pc, #56]	; (800b690 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b658:	9005      	str	r0, [sp, #20]
 800b65a:	881b      	ldrh	r3, [r3, #0]
 800b65c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b660:	f7f6 fede 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b664:	6803      	ldr	r3, [r0, #0]
 800b666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b668:	4798      	blx	r3
 800b66a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b66c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b670:	a901      	add	r1, sp, #4
 800b672:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b676:	9304      	str	r3, [sp, #16]
 800b678:	6860      	ldr	r0, [r4, #4]
 800b67a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b67e:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b682:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b686:	6803      	ldr	r3, [r0, #0]
 800b688:	685b      	ldr	r3, [r3, #4]
 800b68a:	4798      	blx	r3
 800b68c:	b00b      	add	sp, #44	; 0x2c
 800b68e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b690:	2400e41e 	.word	0x2400e41e

0800b694 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b694:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b696:	b08d      	sub	sp, #52	; 0x34
 800b698:	2501      	movs	r5, #1
 800b69a:	4604      	mov	r4, r0
 800b69c:	466b      	mov	r3, sp
 800b69e:	9503      	str	r5, [sp, #12]
 800b6a0:	e883 0006 	stmia.w	r3, {r1, r2}
 800b6a4:	2300      	movs	r3, #0
 800b6a6:	f8bd 6000 	ldrh.w	r6, [sp]
 800b6aa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b6ae:	9306      	str	r3, [sp, #24]
 800b6b0:	6803      	ldr	r3, [r0, #0]
 800b6b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b6b4:	4798      	blx	r3
 800b6b6:	463a      	mov	r2, r7
 800b6b8:	4631      	mov	r1, r6
 800b6ba:	4603      	mov	r3, r0
 800b6bc:	4620      	mov	r0, r4
 800b6be:	f7ff ff8b 	bl	800b5d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b6c2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b6c4:	9004      	str	r0, [sp, #16]
 800b6c6:	9307      	str	r3, [sp, #28]
 800b6c8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b6cc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b6d0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b6d4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b6d8:	4b0e      	ldr	r3, [pc, #56]	; (800b714 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b6da:	881b      	ldrh	r3, [r3, #0]
 800b6dc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b6e0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b6e4:	f7f6 fe9c 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b6e8:	6803      	ldr	r3, [r0, #0]
 800b6ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6ec:	4798      	blx	r3
 800b6ee:	23ff      	movs	r3, #255	; 0xff
 800b6f0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b6f4:	a903      	add	r1, sp, #12
 800b6f6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b6fa:	6860      	ldr	r0, [r4, #4]
 800b6fc:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b700:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b704:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b708:	6803      	ldr	r3, [r0, #0]
 800b70a:	685b      	ldr	r3, [r3, #4]
 800b70c:	4798      	blx	r3
 800b70e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b710:	b00d      	add	sp, #52	; 0x34
 800b712:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b714:	2400e41e 	.word	0x2400e41e

0800b718 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b71c:	b08c      	sub	sp, #48	; 0x30
 800b71e:	461e      	mov	r6, r3
 800b720:	2300      	movs	r3, #0
 800b722:	4604      	mov	r4, r0
 800b724:	466d      	mov	r5, sp
 800b726:	9306      	str	r3, [sp, #24]
 800b728:	6803      	ldr	r3, [r0, #0]
 800b72a:	e885 0006 	stmia.w	r5, {r1, r2}
 800b72e:	2501      	movs	r5, #1
 800b730:	f8bd 7000 	ldrh.w	r7, [sp]
 800b734:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b738:	9503      	str	r5, [sp, #12]
 800b73a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b73c:	4798      	blx	r3
 800b73e:	4642      	mov	r2, r8
 800b740:	4639      	mov	r1, r7
 800b742:	4603      	mov	r3, r0
 800b744:	4620      	mov	r0, r4
 800b746:	f7ff ff47 	bl	800b5d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b74a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b74e:	9004      	str	r0, [sp, #16]
 800b750:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b754:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b758:	9607      	str	r6, [sp, #28]
 800b75a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b75e:	4b10      	ldr	r3, [pc, #64]	; (800b7a0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b760:	881b      	ldrh	r3, [r3, #0]
 800b762:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b766:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b768:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b76c:	f7f6 fe58 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b770:	6803      	ldr	r3, [r0, #0]
 800b772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b774:	4798      	blx	r3
 800b776:	23ff      	movs	r3, #255	; 0xff
 800b778:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b77c:	a903      	add	r1, sp, #12
 800b77e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b782:	6860      	ldr	r0, [r4, #4]
 800b784:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b788:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b78c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b790:	6803      	ldr	r3, [r0, #0]
 800b792:	685b      	ldr	r3, [r3, #4]
 800b794:	4798      	blx	r3
 800b796:	4630      	mov	r0, r6
 800b798:	b00c      	add	sp, #48	; 0x30
 800b79a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b79e:	bf00      	nop
 800b7a0:	2400e41e 	.word	0x2400e41e

0800b7a4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b7a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7a6:	b085      	sub	sp, #20
 800b7a8:	4605      	mov	r5, r0
 800b7aa:	ac02      	add	r4, sp, #8
 800b7ac:	e884 0006 	stmia.w	r4, {r1, r2}
 800b7b0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b7b4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b7b8:	f7ff fde6 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7bc:	4631      	mov	r1, r6
 800b7be:	4603      	mov	r3, r0
 800b7c0:	463a      	mov	r2, r7
 800b7c2:	4628      	mov	r0, r5
 800b7c4:	f7ff ff08 	bl	800b5d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b7c8:	4a05      	ldr	r2, [pc, #20]	; (800b7e0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b7ca:	682b      	ldr	r3, [r5, #0]
 800b7cc:	8812      	ldrh	r2, [r2, #0]
 800b7ce:	9200      	str	r2, [sp, #0]
 800b7d0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b7d2:	4603      	mov	r3, r0
 800b7d4:	4628      	mov	r0, r5
 800b7d6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b7da:	47b0      	blx	r6
 800b7dc:	b005      	add	sp, #20
 800b7de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b7e0:	2400e41e 	.word	0x2400e41e

0800b7e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b7e4:	b570      	push	{r4, r5, r6, lr}
 800b7e6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800b7ea:	4604      	mov	r4, r0
 800b7ec:	b19b      	cbz	r3, 800b816 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b7ee:	2002      	movs	r0, #2
 800b7f0:	f7f4 fef8 	bl	80005e4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b7f4:	2300      	movs	r3, #0
 800b7f6:	4620      	mov	r0, r4
 800b7f8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800b7fc:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800b800:	6823      	ldr	r3, [r4, #0]
 800b802:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b806:	f7ff fdbf 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b80a:	4601      	mov	r1, r0
 800b80c:	4620      	mov	r0, r4
 800b80e:	462b      	mov	r3, r5
 800b810:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b814:	4718      	bx	r3
 800b816:	bd70      	pop	{r4, r5, r6, pc}

0800b818 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b818:	b570      	push	{r4, r5, r6, lr}
 800b81a:	4605      	mov	r5, r0
 800b81c:	460c      	mov	r4, r1
 800b81e:	2003      	movs	r0, #3
 800b820:	b149      	cbz	r1, 800b836 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b822:	f7f4 fe83 	bl	800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b826:	6928      	ldr	r0, [r5, #16]
 800b828:	b168      	cbz	r0, 800b846 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b82a:	6803      	ldr	r3, [r0, #0]
 800b82c:	2101      	movs	r1, #1
 800b82e:	695b      	ldr	r3, [r3, #20]
 800b830:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b834:	4718      	bx	r3
 800b836:	f7f4 fea7 	bl	8000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b83a:	6928      	ldr	r0, [r5, #16]
 800b83c:	b118      	cbz	r0, 800b846 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b83e:	6803      	ldr	r3, [r0, #0]
 800b840:	4621      	mov	r1, r4
 800b842:	695b      	ldr	r3, [r3, #20]
 800b844:	e7f4      	b.n	800b830 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b846:	bd70      	pop	{r4, r5, r6, pc}

0800b848 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b848:	b538      	push	{r3, r4, r5, lr}
 800b84a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800b84e:	4604      	mov	r4, r0
 800b850:	460d      	mov	r5, r1
 800b852:	428b      	cmp	r3, r1
 800b854:	d006      	beq.n	800b864 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b856:	6803      	ldr	r3, [r0, #0]
 800b858:	b929      	cbnz	r1, 800b866 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b85a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b85e:	4798      	blx	r3
 800b860:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800b864:	bd38      	pop	{r3, r4, r5, pc}
 800b866:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b86a:	e7f8      	b.n	800b85e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b86c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b86c:	4b0d      	ldr	r3, [pc, #52]	; (800b8a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b86e:	b510      	push	{r4, lr}
 800b870:	781b      	ldrb	r3, [r3, #0]
 800b872:	4604      	mov	r4, r0
 800b874:	b95b      	cbnz	r3, 800b88e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b876:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b87a:	2b02      	cmp	r3, #2
 800b87c:	d007      	beq.n	800b88e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b87e:	6840      	ldr	r0, [r0, #4]
 800b880:	f000 f92c 	bl	800badc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b884:	b118      	cbz	r0, 800b88e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b886:	6862      	ldr	r2, [r4, #4]
 800b888:	7a53      	ldrb	r3, [r2, #9]
 800b88a:	2b00      	cmp	r3, #0
 800b88c:	d0fc      	beq.n	800b888 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b88e:	f7f5 f827 	bl	80008e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b892:	4620      	mov	r0, r4
 800b894:	2100      	movs	r1, #0
 800b896:	f7ff ffd7 	bl	800b848 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b89a:	4620      	mov	r0, r4
 800b89c:	f7ff fd74 	bl	800b388 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8a0:	bd10      	pop	{r4, pc}
 800b8a2:	bf00      	nop
 800b8a4:	2400e422 	.word	0x2400e422

0800b8a8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b8a8:	b570      	push	{r4, r5, r6, lr}
 800b8aa:	4604      	mov	r4, r0
 800b8ac:	6803      	ldr	r3, [r0, #0]
 800b8ae:	b919      	cbnz	r1, 800b8b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b8b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b8b6:	4718      	bx	r3
 800b8b8:	2200      	movs	r2, #0
 800b8ba:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 800b8be:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 800b8c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8c4:	4798      	blx	r3
 800b8c6:	6863      	ldr	r3, [r4, #4]
 800b8c8:	2101      	movs	r1, #1
 800b8ca:	4605      	mov	r5, r0
 800b8cc:	4620      	mov	r0, r4
 800b8ce:	7299      	strb	r1, [r3, #10]
 800b8d0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 800b8d4:	f7ff ffb8 	bl	800b848 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b8d8:	4628      	mov	r0, r5
 800b8da:	bd70      	pop	{r4, r5, r6, pc}

0800b8dc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b8dc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b8e0:	1a13      	subs	r3, r2, r0
 800b8e2:	4258      	negs	r0, r3
 800b8e4:	4158      	adcs	r0, r3
 800b8e6:	4770      	bx	lr

0800b8e8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b8e8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b8ec:	1a9b      	subs	r3, r3, r2
 800b8ee:	2b00      	cmp	r3, #0
 800b8f0:	bfdc      	itt	le
 800b8f2:	6882      	ldrle	r2, [r0, #8]
 800b8f4:	189b      	addle	r3, r3, r2
 800b8f6:	2b01      	cmp	r3, #1
 800b8f8:	bfcc      	ite	gt
 800b8fa:	2000      	movgt	r0, #0
 800b8fc:	2001      	movle	r0, #1
 800b8fe:	4770      	bx	lr

0800b900 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b900:	6902      	ldr	r2, [r0, #16]
 800b902:	6843      	ldr	r3, [r0, #4]
 800b904:	2024      	movs	r0, #36	; 0x24
 800b906:	fb00 3002 	mla	r0, r0, r2, r3
 800b90a:	4770      	bx	lr

0800b90c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b90c:	6803      	ldr	r3, [r0, #0]
 800b90e:	691b      	ldr	r3, [r3, #16]
 800b910:	4718      	bx	r3

0800b912 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b912:	2301      	movs	r3, #1
 800b914:	b570      	push	{r4, r5, r6, lr}
 800b916:	7203      	strb	r3, [r0, #8]
 800b918:	4604      	mov	r4, r0
 800b91a:	6840      	ldr	r0, [r0, #4]
 800b91c:	6803      	ldr	r3, [r0, #0]
 800b91e:	699b      	ldr	r3, [r3, #24]
 800b920:	4798      	blx	r3
 800b922:	6803      	ldr	r3, [r0, #0]
 800b924:	4605      	mov	r5, r0
 800b926:	2b40      	cmp	r3, #64	; 0x40
 800b928:	d00c      	beq.n	800b944 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b92a:	d810      	bhi.n	800b94e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b92c:	2b04      	cmp	r3, #4
 800b92e:	d01d      	beq.n	800b96c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b930:	d804      	bhi.n	800b93c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b932:	2b01      	cmp	r3, #1
 800b934:	d006      	beq.n	800b944 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b936:	2b02      	cmp	r3, #2
 800b938:	d02c      	beq.n	800b994 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b93a:	bd70      	pop	{r4, r5, r6, pc}
 800b93c:	2b08      	cmp	r3, #8
 800b93e:	d01d      	beq.n	800b97c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b940:	2b20      	cmp	r3, #32
 800b942:	d1fa      	bne.n	800b93a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b944:	6823      	ldr	r3, [r4, #0]
 800b946:	4620      	mov	r0, r4
 800b948:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b94a:	4798      	blx	r3
 800b94c:	e013      	b.n	800b976 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b94e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b952:	d0f7      	beq.n	800b944 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b954:	d804      	bhi.n	800b960 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b956:	2b80      	cmp	r3, #128	; 0x80
 800b958:	d0f4      	beq.n	800b944 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b95a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b95e:	e7f0      	b.n	800b942 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b960:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b964:	d0ee      	beq.n	800b944 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b966:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b96a:	e7e5      	b.n	800b938 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b96c:	6823      	ldr	r3, [r4, #0]
 800b96e:	7f01      	ldrb	r1, [r0, #28]
 800b970:	4620      	mov	r0, r4
 800b972:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b974:	4798      	blx	r3
 800b976:	6823      	ldr	r3, [r4, #0]
 800b978:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b97a:	e006      	b.n	800b98a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b97c:	6823      	ldr	r3, [r4, #0]
 800b97e:	7f01      	ldrb	r1, [r0, #28]
 800b980:	4620      	mov	r0, r4
 800b982:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b984:	4798      	blx	r3
 800b986:	6823      	ldr	r3, [r4, #0]
 800b988:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b98a:	4629      	mov	r1, r5
 800b98c:	4620      	mov	r0, r4
 800b98e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b992:	4718      	bx	r3
 800b994:	6823      	ldr	r3, [r4, #0]
 800b996:	4620      	mov	r0, r4
 800b998:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b99a:	4798      	blx	r3
 800b99c:	e7f3      	b.n	800b986 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b99e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b99e:	4770      	bx	lr

0800b9a0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b9a0:	4770      	bx	lr

0800b9a2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b9a2:	4770      	bx	lr

0800b9a4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b9a4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b9a8:	b510      	push	{r4, lr}
 800b9aa:	1ad2      	subs	r2, r2, r3
 800b9ac:	2a00      	cmp	r2, #0
 800b9ae:	bfdc      	itt	le
 800b9b0:	6884      	ldrle	r4, [r0, #8]
 800b9b2:	1912      	addle	r2, r2, r4
 800b9b4:	2a01      	cmp	r2, #1
 800b9b6:	dd16      	ble.n	800b9e6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b9b8:	6842      	ldr	r2, [r0, #4]
 800b9ba:	2424      	movs	r4, #36	; 0x24
 800b9bc:	fb04 2303 	mla	r3, r4, r3, r2
 800b9c0:	f101 0220 	add.w	r2, r1, #32
 800b9c4:	f851 4b04 	ldr.w	r4, [r1], #4
 800b9c8:	4291      	cmp	r1, r2
 800b9ca:	f843 4b04 	str.w	r4, [r3], #4
 800b9ce:	d1f9      	bne.n	800b9c4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b9d0:	780a      	ldrb	r2, [r1, #0]
 800b9d2:	701a      	strb	r2, [r3, #0]
 800b9d4:	68c3      	ldr	r3, [r0, #12]
 800b9d6:	6882      	ldr	r2, [r0, #8]
 800b9d8:	f3bf 8f5b 	dmb	ish
 800b9dc:	3301      	adds	r3, #1
 800b9de:	429a      	cmp	r2, r3
 800b9e0:	bfd8      	it	le
 800b9e2:	1a9b      	suble	r3, r3, r2
 800b9e4:	60c3      	str	r3, [r0, #12]
 800b9e6:	bd10      	pop	{r4, pc}

0800b9e8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b9e8:	6903      	ldr	r3, [r0, #16]
 800b9ea:	6882      	ldr	r2, [r0, #8]
 800b9ec:	f3bf 8f5b 	dmb	ish
 800b9f0:	3301      	adds	r3, #1
 800b9f2:	429a      	cmp	r2, r3
 800b9f4:	bfd8      	it	le
 800b9f6:	1a9b      	suble	r3, r3, r2
 800b9f8:	6103      	str	r3, [r0, #16]
 800b9fa:	4770      	bx	lr

0800b9fc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b9fc:	b570      	push	{r4, r5, r6, lr}
 800b9fe:	4604      	mov	r4, r0
 800ba00:	460e      	mov	r6, r1
 800ba02:	6860      	ldr	r0, [r4, #4]
 800ba04:	6803      	ldr	r3, [r0, #0]
 800ba06:	685b      	ldr	r3, [r3, #4]
 800ba08:	4798      	blx	r3
 800ba0a:	2800      	cmp	r0, #0
 800ba0c:	d1f9      	bne.n	800ba02 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ba0e:	4d0d      	ldr	r5, [pc, #52]	; (800ba44 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ba10:	6828      	ldr	r0, [r5, #0]
 800ba12:	6803      	ldr	r3, [r0, #0]
 800ba14:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ba16:	4798      	blx	r3
 800ba18:	f7f4 ff70 	bl	80008fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ba1c:	6828      	ldr	r0, [r5, #0]
 800ba1e:	2101      	movs	r1, #1
 800ba20:	f7ff ff12 	bl	800b848 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ba24:	6860      	ldr	r0, [r4, #4]
 800ba26:	4631      	mov	r1, r6
 800ba28:	6803      	ldr	r3, [r0, #0]
 800ba2a:	689b      	ldr	r3, [r3, #8]
 800ba2c:	4798      	blx	r3
 800ba2e:	6823      	ldr	r3, [r4, #0]
 800ba30:	4620      	mov	r0, r4
 800ba32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba34:	4798      	blx	r3
 800ba36:	6828      	ldr	r0, [r5, #0]
 800ba38:	6803      	ldr	r3, [r0, #0]
 800ba3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba3e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ba40:	4718      	bx	r3
 800ba42:	bf00      	nop
 800ba44:	2400e424 	.word	0x2400e424

0800ba48 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ba48:	b508      	push	{r3, lr}
 800ba4a:	f7f4 ff49 	bl	80008e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ba4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ba52:	f7f4 bf4d 	b.w	80008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ba56 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ba56:	b510      	push	{r4, lr}
 800ba58:	4604      	mov	r4, r0
 800ba5a:	2114      	movs	r1, #20
 800ba5c:	f015 f99d 	bl	8020d9a <_ZdlPvj>
 800ba60:	4620      	mov	r0, r4
 800ba62:	bd10      	pop	{r4, pc}

0800ba64 <_ZN8touchgfx13DMA_Interface5startEv>:
 800ba64:	b510      	push	{r4, lr}
 800ba66:	4604      	mov	r4, r0
 800ba68:	6840      	ldr	r0, [r0, #4]
 800ba6a:	6803      	ldr	r3, [r0, #0]
 800ba6c:	681b      	ldr	r3, [r3, #0]
 800ba6e:	4798      	blx	r3
 800ba70:	b948      	cbnz	r0, 800ba86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ba72:	7a63      	ldrb	r3, [r4, #9]
 800ba74:	b13b      	cbz	r3, 800ba86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ba76:	7a23      	ldrb	r3, [r4, #8]
 800ba78:	b92b      	cbnz	r3, 800ba86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ba7a:	6823      	ldr	r3, [r4, #0]
 800ba7c:	4620      	mov	r0, r4
 800ba7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba84:	4718      	bx	r3
 800ba86:	bd10      	pop	{r4, pc}

0800ba88 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800ba88:	b570      	push	{r4, r5, r6, lr}
 800ba8a:	4604      	mov	r4, r0
 800ba8c:	6840      	ldr	r0, [r0, #4]
 800ba8e:	6803      	ldr	r3, [r0, #0]
 800ba90:	681b      	ldr	r3, [r3, #0]
 800ba92:	4798      	blx	r3
 800ba94:	4605      	mov	r5, r0
 800ba96:	b930      	cbnz	r0, 800baa6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ba98:	7a23      	ldrb	r3, [r4, #8]
 800ba9a:	b123      	cbz	r3, 800baa6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ba9c:	6860      	ldr	r0, [r4, #4]
 800ba9e:	6803      	ldr	r3, [r0, #0]
 800baa0:	695b      	ldr	r3, [r3, #20]
 800baa2:	4798      	blx	r3
 800baa4:	7225      	strb	r5, [r4, #8]
 800baa6:	6860      	ldr	r0, [r4, #4]
 800baa8:	6803      	ldr	r3, [r0, #0]
 800baaa:	681b      	ldr	r3, [r3, #0]
 800baac:	4798      	blx	r3
 800baae:	b928      	cbnz	r0, 800babc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bab0:	6823      	ldr	r3, [r4, #0]
 800bab2:	4620      	mov	r0, r4
 800bab4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bab6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800baba:	4718      	bx	r3
 800babc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bac0:	f7f4 bf24 	b.w	800090c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bac4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bac4:	b510      	push	{r4, lr}
 800bac6:	6082      	str	r2, [r0, #8]
 800bac8:	2200      	movs	r2, #0
 800baca:	4c03      	ldr	r4, [pc, #12]	; (800bad8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bacc:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bad0:	e9c0 4100 	strd	r4, r1, [r0]
 800bad4:	bd10      	pop	{r4, pc}
 800bad6:	bf00      	nop
 800bad8:	08023344 	.word	0x08023344

0800badc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800badc:	6840      	ldr	r0, [r0, #4]
 800bade:	6803      	ldr	r3, [r0, #0]
 800bae0:	681b      	ldr	r3, [r3, #0]
 800bae2:	4718      	bx	r3

0800bae4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bae4:	094a      	lsrs	r2, r1, #5
 800bae6:	4b06      	ldr	r3, [pc, #24]	; (800bb00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bae8:	60c1      	str	r1, [r0, #12]
 800baea:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800baee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800baf2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800baf6:	4313      	orrs	r3, r2
 800baf8:	4319      	orrs	r1, r3
 800bafa:	8201      	strh	r1, [r0, #16]
 800bafc:	4770      	bx	lr
 800bafe:	bf00      	nop
 800bb00:	fffff800 	.word	0xfffff800

0800bb04 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bb04:	f1a0 0008 	sub.w	r0, r0, #8
 800bb08:	e7ec      	b.n	800bae4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bb0a:	bf00      	nop

0800bb0c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bb0c:	b508      	push	{r3, lr}
 800bb0e:	4b05      	ldr	r3, [pc, #20]	; (800bb24 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bb10:	6818      	ldr	r0, [r3, #0]
 800bb12:	6803      	ldr	r3, [r0, #0]
 800bb14:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bb18:	4798      	blx	r3
 800bb1a:	1e43      	subs	r3, r0, #1
 800bb1c:	4258      	negs	r0, r3
 800bb1e:	4158      	adcs	r0, r3
 800bb20:	bd08      	pop	{r3, pc}
 800bb22:	bf00      	nop
 800bb24:	2400e424 	.word	0x2400e424

0800bb28 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bb28:	4770      	bx	lr

0800bb2a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bb2a:	3808      	subs	r0, #8
 800bb2c:	4770      	bx	lr

0800bb2e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bb2e:	b430      	push	{r4, r5}
 800bb30:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bb34:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bb38:	8a02      	ldrh	r2, [r0, #16]
 800bb3a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bb3e:	4629      	mov	r1, r5
 800bb40:	9202      	str	r2, [sp, #8]
 800bb42:	68c2      	ldr	r2, [r0, #12]
 800bb44:	4620      	mov	r0, r4
 800bb46:	bc30      	pop	{r4, r5}
 800bb48:	f7f5 b8a6 	b.w	8000c98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bb4c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bb4c:	f7f5 b89a 	b.w	8000c84 <_ZN8touchgfx5paint8tearDownEv>

0800bb50 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bb50:	b510      	push	{r4, lr}
 800bb52:	4604      	mov	r4, r0
 800bb54:	2114      	movs	r1, #20
 800bb56:	f015 f920 	bl	8020d9a <_ZdlPvj>
 800bb5a:	4620      	mov	r0, r4
 800bb5c:	bd10      	pop	{r4, pc}

0800bb5e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bb5e:	f1a0 0008 	sub.w	r0, r0, #8
 800bb62:	e7f5      	b.n	800bb50 <_ZN8touchgfx13PainterRGB565D0Ev>

0800bb64 <_ZN8touchgfx6CircleD1Ev>:
 800bb64:	4770      	bx	lr

0800bb66 <_ZN8touchgfx6CircleD0Ev>:
 800bb66:	b510      	push	{r4, lr}
 800bb68:	4604      	mov	r4, r0
 800bb6a:	2148      	movs	r1, #72	; 0x48
 800bb6c:	f015 f915 	bl	8020d9a <_ZdlPvj>
 800bb70:	4620      	mov	r0, r4
 800bb72:	bd10      	pop	{r4, pc}

0800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800bb74:	b507      	push	{r0, r1, r2, lr}
 800bb76:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800bb7a:	ab01      	add	r3, sp, #4
 800bb7c:	6809      	ldr	r1, [r1, #0]
 800bb7e:	6800      	ldr	r0, [r0, #0]
 800bb80:	f005 fe06 	bl	8011790 <_ZN8touchgfx6muldivElllRl>
 800bb84:	b003      	add	sp, #12
 800bb86:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800bb8c <_ZN8touchgfx7CWRUtil4sineEi>:
 800bb8c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800bb90:	fb90 f2f3 	sdiv	r2, r0, r3
 800bb94:	fb02 0013 	mls	r0, r2, r3, r0
 800bb98:	2800      	cmp	r0, #0
 800bb9a:	bfb8      	it	lt
 800bb9c:	18c0      	addlt	r0, r0, r3
 800bb9e:	4b0a      	ldr	r3, [pc, #40]	; (800bbc8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800bba0:	285a      	cmp	r0, #90	; 0x5a
 800bba2:	dc02      	bgt.n	800bbaa <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800bba4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800bba8:	4770      	bx	lr
 800bbaa:	28b4      	cmp	r0, #180	; 0xb4
 800bbac:	dc02      	bgt.n	800bbb4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800bbae:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800bbb2:	e7f7      	b.n	800bba4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800bbb4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800bbb8:	bfd4      	ite	le
 800bbba:	38b4      	suble	r0, #180	; 0xb4
 800bbbc:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800bbc0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800bbc4:	4240      	negs	r0, r0
 800bbc6:	4770      	bx	lr
 800bbc8:	08023398 	.word	0x08023398

0800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800bbcc:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 800bbd0:	fb90 f2f3 	sdiv	r2, r0, r3
 800bbd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbd6:	fb02 0013 	mls	r0, r2, r3, r0
 800bbda:	2800      	cmp	r0, #0
 800bbdc:	bfb8      	it	lt
 800bbde:	18c0      	addlt	r0, r0, r3
 800bbe0:	1144      	asrs	r4, r0, #5
 800bbe2:	f000 061f 	and.w	r6, r0, #31
 800bbe6:	4620      	mov	r0, r4
 800bbe8:	f7ff ffd0 	bl	800bb8c <_ZN8touchgfx7CWRUtil4sineEi>
 800bbec:	4605      	mov	r5, r0
 800bbee:	b90e      	cbnz	r6, 800bbf4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800bbf0:	b002      	add	sp, #8
 800bbf2:	bd70      	pop	{r4, r5, r6, pc}
 800bbf4:	1c60      	adds	r0, r4, #1
 800bbf6:	f7ff ffc9 	bl	800bb8c <_ZN8touchgfx7CWRUtil4sineEi>
 800bbfa:	ab01      	add	r3, sp, #4
 800bbfc:	2220      	movs	r2, #32
 800bbfe:	4631      	mov	r1, r6
 800bc00:	1b40      	subs	r0, r0, r5
 800bc02:	f005 fdc5 	bl	8011790 <_ZN8touchgfx6muldivElllRl>
 800bc06:	4428      	add	r0, r5
 800bc08:	e7f2      	b.n	800bbf0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800bc0a:	b508      	push	{r3, lr}
 800bc0c:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800bc10:	f7ff ffdc 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bc14:	bd08      	pop	{r3, pc}
	...

0800bc18 <_ZN8touchgfx6CircleC1Ev>:
 800bc18:	b510      	push	{r4, lr}
 800bc1a:	4604      	mov	r4, r0
 800bc1c:	f000 fd04 	bl	800c628 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800bc20:	4b08      	ldr	r3, [pc, #32]	; (800bc44 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800bc22:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800bc26:	4620      	mov	r0, r4
 800bc28:	6023      	str	r3, [r4, #0]
 800bc2a:	2300      	movs	r3, #0
 800bc2c:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 800bc30:	f24b 4205 	movw	r2, #46085	; 0xb405
 800bc34:	60a3      	str	r3, [r4, #8]
 800bc36:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800bc3a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 800bc3e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800bc42:	bd10      	pop	{r4, pc}
 800bc44:	08023458 	.word	0x08023458

0800bc48 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800bc48:	29b4      	cmp	r1, #180	; 0xb4
 800bc4a:	bfa8      	it	ge
 800bc4c:	21b4      	movge	r1, #180	; 0xb4
 800bc4e:	2901      	cmp	r1, #1
 800bc50:	bfb8      	it	lt
 800bc52:	2101      	movlt	r1, #1
 800bc54:	f880 1045 	strb.w	r1, [r0, #69]	; 0x45
 800bc58:	4770      	bx	lr

0800bc5a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800bc5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc5e:	428a      	cmp	r2, r1
 800bc60:	4680      	mov	r8, r0
 800bc62:	4610      	mov	r0, r2
 800bc64:	4699      	mov	r9, r3
 800bc66:	bfaa      	itet	ge
 800bc68:	460a      	movge	r2, r1
 800bc6a:	460b      	movlt	r3, r1
 800bc6c:	4603      	movge	r3, r0
 800bc6e:	b085      	sub	sp, #20
 800bc70:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 800bc74:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 800bc78:	1a99      	subs	r1, r3, r2
 800bc7a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800bc7c:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 800bc80:	bfa4      	itt	ge
 800bc82:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800bc86:	2200      	movge	r2, #0
 800bc88:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 800bc8c:	9300      	str	r3, [sp, #0]
 800bc8e:	f102 0b01 	add.w	fp, r2, #1
 800bc92:	2c00      	cmp	r4, #0
 800bc94:	f040 80ae 	bne.w	800bdf4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
 800bc98:	4610      	mov	r0, r2
 800bc9a:	9201      	str	r2, [sp, #4]
 800bc9c:	f7ff ff96 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bca0:	a903      	add	r1, sp, #12
 800bca2:	9003      	str	r0, [sp, #12]
 800bca4:	4650      	mov	r0, sl
 800bca6:	f7ff ff65 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bcaa:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800bcae:	9a01      	ldr	r2, [sp, #4]
 800bcb0:	4408      	add	r0, r1
 800bcb2:	f8d9 1000 	ldr.w	r1, [r9]
 800bcb6:	4281      	cmp	r1, r0
 800bcb8:	bfc8      	it	gt
 800bcba:	f8c9 0000 	strgt.w	r0, [r9]
 800bcbe:	6839      	ldr	r1, [r7, #0]
 800bcc0:	4288      	cmp	r0, r1
 800bcc2:	bfc8      	it	gt
 800bcc4:	6038      	strgt	r0, [r7, #0]
 800bcc6:	4610      	mov	r0, r2
 800bcc8:	f7ff ff9f 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bccc:	a903      	add	r1, sp, #12
 800bcce:	9003      	str	r0, [sp, #12]
 800bcd0:	4650      	mov	r0, sl
 800bcd2:	f7ff ff4f 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bcd6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bcda:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800bcde:	1a10      	subs	r0, r2, r0
 800bce0:	6832      	ldr	r2, [r6, #0]
 800bce2:	4282      	cmp	r2, r0
 800bce4:	bfc8      	it	gt
 800bce6:	6030      	strgt	r0, [r6, #0]
 800bce8:	682a      	ldr	r2, [r5, #0]
 800bcea:	4290      	cmp	r0, r2
 800bcec:	fb9b f2f1 	sdiv	r2, fp, r1
 800bcf0:	fb01 b212 	mls	r2, r1, r2, fp
 800bcf4:	bfc8      	it	gt
 800bcf6:	6028      	strgt	r0, [r5, #0]
 800bcf8:	1a8a      	subs	r2, r1, r2
 800bcfa:	fb92 f0f1 	sdiv	r0, r2, r1
 800bcfe:	fb01 2210 	mls	r2, r1, r0, r2
 800bd02:	4493      	add	fp, r2
 800bd04:	9b00      	ldr	r3, [sp, #0]
 800bd06:	455b      	cmp	r3, fp
 800bd08:	db2a      	blt.n	800bd60 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
 800bd0a:	4658      	mov	r0, fp
 800bd0c:	f7ff ff5e 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bd10:	a903      	add	r1, sp, #12
 800bd12:	9003      	str	r0, [sp, #12]
 800bd14:	4650      	mov	r0, sl
 800bd16:	f7ff ff2d 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bd1a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bd1e:	4410      	add	r0, r2
 800bd20:	f8d9 2000 	ldr.w	r2, [r9]
 800bd24:	4282      	cmp	r2, r0
 800bd26:	bfc8      	it	gt
 800bd28:	f8c9 0000 	strgt.w	r0, [r9]
 800bd2c:	683a      	ldr	r2, [r7, #0]
 800bd2e:	4290      	cmp	r0, r2
 800bd30:	bfc8      	it	gt
 800bd32:	6038      	strgt	r0, [r7, #0]
 800bd34:	4658      	mov	r0, fp
 800bd36:	f7ff ff68 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bd3a:	a903      	add	r1, sp, #12
 800bd3c:	9003      	str	r0, [sp, #12]
 800bd3e:	4650      	mov	r0, sl
 800bd40:	f7ff ff18 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bd44:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bd48:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800bd4c:	1a10      	subs	r0, r2, r0
 800bd4e:	6832      	ldr	r2, [r6, #0]
 800bd50:	4282      	cmp	r2, r0
 800bd52:	bfc8      	it	gt
 800bd54:	6030      	strgt	r0, [r6, #0]
 800bd56:	682a      	ldr	r2, [r5, #0]
 800bd58:	4290      	cmp	r0, r2
 800bd5a:	bfc8      	it	gt
 800bd5c:	6028      	strgt	r0, [r5, #0]
 800bd5e:	e7d1      	b.n	800bd04 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
 800bd60:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800bd64:	9b00      	ldr	r3, [sp, #0]
 800bd66:	455b      	cmp	r3, fp
 800bd68:	dd27      	ble.n	800bdba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
 800bd6a:	4618      	mov	r0, r3
 800bd6c:	f7ff ff2e 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bd70:	a903      	add	r1, sp, #12
 800bd72:	9003      	str	r0, [sp, #12]
 800bd74:	4650      	mov	r0, sl
 800bd76:	f7ff fefd 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bd7a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bd7e:	4410      	add	r0, r2
 800bd80:	f8d9 2000 	ldr.w	r2, [r9]
 800bd84:	4282      	cmp	r2, r0
 800bd86:	bfc8      	it	gt
 800bd88:	f8c9 0000 	strgt.w	r0, [r9]
 800bd8c:	683a      	ldr	r2, [r7, #0]
 800bd8e:	4290      	cmp	r0, r2
 800bd90:	bfc8      	it	gt
 800bd92:	6038      	strgt	r0, [r7, #0]
 800bd94:	9800      	ldr	r0, [sp, #0]
 800bd96:	f7ff ff38 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bd9a:	a903      	add	r1, sp, #12
 800bd9c:	9003      	str	r0, [sp, #12]
 800bd9e:	4650      	mov	r0, sl
 800bda0:	f7ff fee8 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bda4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bda8:	1a10      	subs	r0, r2, r0
 800bdaa:	6832      	ldr	r2, [r6, #0]
 800bdac:	4282      	cmp	r2, r0
 800bdae:	bfc8      	it	gt
 800bdb0:	6030      	strgt	r0, [r6, #0]
 800bdb2:	682a      	ldr	r2, [r5, #0]
 800bdb4:	4290      	cmp	r0, r2
 800bdb6:	bfc8      	it	gt
 800bdb8:	6028      	strgt	r0, [r5, #0]
 800bdba:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bdbe:	f8d9 1000 	ldr.w	r1, [r9]
 800bdc2:	4291      	cmp	r1, r2
 800bdc4:	bfc8      	it	gt
 800bdc6:	f8c9 2000 	strgt.w	r2, [r9]
 800bdca:	683a      	ldr	r2, [r7, #0]
 800bdcc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 800bdd0:	429a      	cmp	r2, r3
 800bdd2:	bfb8      	it	lt
 800bdd4:	603b      	strlt	r3, [r7, #0]
 800bdd6:	6832      	ldr	r2, [r6, #0]
 800bdd8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800bddc:	429a      	cmp	r2, r3
 800bdde:	bfc8      	it	gt
 800bde0:	6033      	strgt	r3, [r6, #0]
 800bde2:	682a      	ldr	r2, [r5, #0]
 800bde4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800bde8:	429a      	cmp	r2, r3
 800bdea:	da00      	bge.n	800bdee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 800bdec:	602b      	str	r3, [r5, #0]
 800bdee:	b005      	add	sp, #20
 800bdf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdf4:	2002      	movs	r0, #2
 800bdf6:	3401      	adds	r4, #1
 800bdf8:	9201      	str	r2, [sp, #4]
 800bdfa:	fb94 f4f0 	sdiv	r4, r4, r0
 800bdfe:	4610      	mov	r0, r2
 800be00:	f7ff fee4 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800be04:	a903      	add	r1, sp, #12
 800be06:	9003      	str	r0, [sp, #12]
 800be08:	4650      	mov	r0, sl
 800be0a:	f7ff feb3 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800be0e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800be12:	9a01      	ldr	r2, [sp, #4]
 800be14:	4408      	add	r0, r1
 800be16:	f8d9 1000 	ldr.w	r1, [r9]
 800be1a:	1b03      	subs	r3, r0, r4
 800be1c:	4420      	add	r0, r4
 800be1e:	4299      	cmp	r1, r3
 800be20:	bfc8      	it	gt
 800be22:	f8c9 3000 	strgt.w	r3, [r9]
 800be26:	6839      	ldr	r1, [r7, #0]
 800be28:	428b      	cmp	r3, r1
 800be2a:	bfc8      	it	gt
 800be2c:	603b      	strgt	r3, [r7, #0]
 800be2e:	f8d9 1000 	ldr.w	r1, [r9]
 800be32:	4281      	cmp	r1, r0
 800be34:	bfc8      	it	gt
 800be36:	f8c9 0000 	strgt.w	r0, [r9]
 800be3a:	6839      	ldr	r1, [r7, #0]
 800be3c:	4288      	cmp	r0, r1
 800be3e:	bfc8      	it	gt
 800be40:	6038      	strgt	r0, [r7, #0]
 800be42:	4610      	mov	r0, r2
 800be44:	f7ff fee1 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800be48:	a903      	add	r1, sp, #12
 800be4a:	9003      	str	r0, [sp, #12]
 800be4c:	4650      	mov	r0, sl
 800be4e:	f7ff fe91 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800be52:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800be56:	1a10      	subs	r0, r2, r0
 800be58:	6832      	ldr	r2, [r6, #0]
 800be5a:	1b01      	subs	r1, r0, r4
 800be5c:	4420      	add	r0, r4
 800be5e:	428a      	cmp	r2, r1
 800be60:	bfc8      	it	gt
 800be62:	6031      	strgt	r1, [r6, #0]
 800be64:	682a      	ldr	r2, [r5, #0]
 800be66:	4291      	cmp	r1, r2
 800be68:	bfc8      	it	gt
 800be6a:	6029      	strgt	r1, [r5, #0]
 800be6c:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800be70:	6832      	ldr	r2, [r6, #0]
 800be72:	4282      	cmp	r2, r0
 800be74:	bfc8      	it	gt
 800be76:	6030      	strgt	r0, [r6, #0]
 800be78:	682a      	ldr	r2, [r5, #0]
 800be7a:	4290      	cmp	r0, r2
 800be7c:	fb9b f2f1 	sdiv	r2, fp, r1
 800be80:	fb01 b212 	mls	r2, r1, r2, fp
 800be84:	bfc8      	it	gt
 800be86:	6028      	strgt	r0, [r5, #0]
 800be88:	1a8a      	subs	r2, r1, r2
 800be8a:	fb92 f0f1 	sdiv	r0, r2, r1
 800be8e:	fb01 2210 	mls	r2, r1, r0, r2
 800be92:	4493      	add	fp, r2
 800be94:	9b00      	ldr	r3, [sp, #0]
 800be96:	455b      	cmp	r3, fp
 800be98:	db40      	blt.n	800bf1c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
 800be9a:	4658      	mov	r0, fp
 800be9c:	f7ff fe96 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bea0:	a903      	add	r1, sp, #12
 800bea2:	9003      	str	r0, [sp, #12]
 800bea4:	4650      	mov	r0, sl
 800bea6:	f7ff fe65 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800beaa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800beae:	4410      	add	r0, r2
 800beb0:	f8d9 2000 	ldr.w	r2, [r9]
 800beb4:	1b01      	subs	r1, r0, r4
 800beb6:	4420      	add	r0, r4
 800beb8:	428a      	cmp	r2, r1
 800beba:	bfc8      	it	gt
 800bebc:	f8c9 1000 	strgt.w	r1, [r9]
 800bec0:	683a      	ldr	r2, [r7, #0]
 800bec2:	4291      	cmp	r1, r2
 800bec4:	bfc8      	it	gt
 800bec6:	6039      	strgt	r1, [r7, #0]
 800bec8:	f8d9 2000 	ldr.w	r2, [r9]
 800becc:	4282      	cmp	r2, r0
 800bece:	bfc8      	it	gt
 800bed0:	f8c9 0000 	strgt.w	r0, [r9]
 800bed4:	683a      	ldr	r2, [r7, #0]
 800bed6:	4290      	cmp	r0, r2
 800bed8:	bfc8      	it	gt
 800beda:	6038      	strgt	r0, [r7, #0]
 800bedc:	4658      	mov	r0, fp
 800bede:	f7ff fe94 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bee2:	a903      	add	r1, sp, #12
 800bee4:	9003      	str	r0, [sp, #12]
 800bee6:	4650      	mov	r0, sl
 800bee8:	f7ff fe44 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800beec:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bef0:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800bef4:	1a10      	subs	r0, r2, r0
 800bef6:	6832      	ldr	r2, [r6, #0]
 800bef8:	1b01      	subs	r1, r0, r4
 800befa:	4420      	add	r0, r4
 800befc:	428a      	cmp	r2, r1
 800befe:	bfc8      	it	gt
 800bf00:	6031      	strgt	r1, [r6, #0]
 800bf02:	682a      	ldr	r2, [r5, #0]
 800bf04:	4291      	cmp	r1, r2
 800bf06:	bfc8      	it	gt
 800bf08:	6029      	strgt	r1, [r5, #0]
 800bf0a:	6832      	ldr	r2, [r6, #0]
 800bf0c:	4282      	cmp	r2, r0
 800bf0e:	bfc8      	it	gt
 800bf10:	6030      	strgt	r0, [r6, #0]
 800bf12:	682a      	ldr	r2, [r5, #0]
 800bf14:	4290      	cmp	r0, r2
 800bf16:	bfc8      	it	gt
 800bf18:	6028      	strgt	r0, [r5, #0]
 800bf1a:	e7bb      	b.n	800be94 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
 800bf1c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800bf20:	9b00      	ldr	r3, [sp, #0]
 800bf22:	455b      	cmp	r3, fp
 800bf24:	f77f af63 	ble.w	800bdee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 800bf28:	4618      	mov	r0, r3
 800bf2a:	f7ff fe4f 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bf2e:	a903      	add	r1, sp, #12
 800bf30:	9003      	str	r0, [sp, #12]
 800bf32:	4650      	mov	r0, sl
 800bf34:	f7ff fe1e 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bf38:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bf3c:	4410      	add	r0, r2
 800bf3e:	f8d9 2000 	ldr.w	r2, [r9]
 800bf42:	1b01      	subs	r1, r0, r4
 800bf44:	4420      	add	r0, r4
 800bf46:	428a      	cmp	r2, r1
 800bf48:	bfc8      	it	gt
 800bf4a:	f8c9 1000 	strgt.w	r1, [r9]
 800bf4e:	683a      	ldr	r2, [r7, #0]
 800bf50:	4291      	cmp	r1, r2
 800bf52:	bfc8      	it	gt
 800bf54:	6039      	strgt	r1, [r7, #0]
 800bf56:	f8d9 2000 	ldr.w	r2, [r9]
 800bf5a:	4282      	cmp	r2, r0
 800bf5c:	bfc8      	it	gt
 800bf5e:	f8c9 0000 	strgt.w	r0, [r9]
 800bf62:	683b      	ldr	r3, [r7, #0]
 800bf64:	4298      	cmp	r0, r3
 800bf66:	bfc8      	it	gt
 800bf68:	6038      	strgt	r0, [r7, #0]
 800bf6a:	9800      	ldr	r0, [sp, #0]
 800bf6c:	f7ff fe4d 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bf70:	a903      	add	r1, sp, #12
 800bf72:	9003      	str	r0, [sp, #12]
 800bf74:	4650      	mov	r0, sl
 800bf76:	f7ff fdfd 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bf7a:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800bf7e:	6832      	ldr	r2, [r6, #0]
 800bf80:	1a18      	subs	r0, r3, r0
 800bf82:	1b03      	subs	r3, r0, r4
 800bf84:	4404      	add	r4, r0
 800bf86:	429a      	cmp	r2, r3
 800bf88:	bfc8      	it	gt
 800bf8a:	6033      	strgt	r3, [r6, #0]
 800bf8c:	682a      	ldr	r2, [r5, #0]
 800bf8e:	4293      	cmp	r3, r2
 800bf90:	bfc8      	it	gt
 800bf92:	602b      	strgt	r3, [r5, #0]
 800bf94:	6833      	ldr	r3, [r6, #0]
 800bf96:	42a3      	cmp	r3, r4
 800bf98:	bfc8      	it	gt
 800bf9a:	6034      	strgt	r4, [r6, #0]
 800bf9c:	682b      	ldr	r3, [r5, #0]
 800bf9e:	429c      	cmp	r4, r3
 800bfa0:	bfc8      	it	gt
 800bfa2:	602c      	strgt	r4, [r5, #0]
 800bfa4:	e723      	b.n	800bdee <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

0800bfa6 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800bfa6:	b530      	push	{r4, r5, lr}
 800bfa8:	4604      	mov	r4, r0
 800bfaa:	4608      	mov	r0, r1
 800bfac:	4611      	mov	r1, r2
 800bfae:	461a      	mov	r2, r3
 800bfb0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800bfb4:	b089      	sub	sp, #36	; 0x24
 800bfb6:	2500      	movs	r5, #0
 800bfb8:	015b      	lsls	r3, r3, #5
 800bfba:	9505      	str	r5, [sp, #20]
 800bfbc:	9304      	str	r3, [sp, #16]
 800bfbe:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800bfc2:	015b      	lsls	r3, r3, #5
 800bfc4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800bfc8:	ab07      	add	r3, sp, #28
 800bfca:	2520      	movs	r5, #32
 800bfcc:	9302      	str	r3, [sp, #8]
 800bfce:	ab06      	add	r3, sp, #24
 800bfd0:	9301      	str	r3, [sp, #4]
 800bfd2:	ab05      	add	r3, sp, #20
 800bfd4:	9300      	str	r3, [sp, #0]
 800bfd6:	ab04      	add	r3, sp, #16
 800bfd8:	f7ff fe3f 	bl	800bc5a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800bfdc:	9a04      	ldr	r2, [sp, #16]
 800bfde:	9805      	ldr	r0, [sp, #20]
 800bfe0:	9b06      	ldr	r3, [sp, #24]
 800bfe2:	9907      	ldr	r1, [sp, #28]
 800bfe4:	fb92 f2f5 	sdiv	r2, r2, r5
 800bfe8:	fb90 f0f5 	sdiv	r0, r0, r5
 800bfec:	fb93 f3f5 	sdiv	r3, r3, r5
 800bff0:	fb91 f1f5 	sdiv	r1, r1, r5
 800bff4:	b292      	uxth	r2, r2
 800bff6:	3002      	adds	r0, #2
 800bff8:	b29b      	uxth	r3, r3
 800bffa:	3102      	adds	r1, #2
 800bffc:	1a80      	subs	r0, r0, r2
 800bffe:	3a01      	subs	r2, #1
 800c000:	1ac9      	subs	r1, r1, r3
 800c002:	3b01      	subs	r3, #1
 800c004:	80a0      	strh	r0, [r4, #4]
 800c006:	4620      	mov	r0, r4
 800c008:	8022      	strh	r2, [r4, #0]
 800c00a:	8063      	strh	r3, [r4, #2]
 800c00c:	80e1      	strh	r1, [r4, #6]
 800c00e:	b009      	add	sp, #36	; 0x24
 800c010:	bd30      	pop	{r4, r5, pc}

0800c012 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800c012:	b510      	push	{r4, lr}
 800c014:	4604      	mov	r4, r0
 800c016:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 800c01a:	f7ff ffc4 	bl	800bfa6 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800c01e:	4620      	mov	r0, r4
 800c020:	bd10      	pop	{r4, pc}
	...

0800c024 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800c024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c028:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 800c02c:	2220      	movs	r2, #32
 800c02e:	468b      	mov	fp, r1
 800c030:	42ae      	cmp	r6, r5
 800c032:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 800c036:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 800c03a:	b0ab      	sub	sp, #172	; 0xac
 800c03c:	bfa4      	itt	ge
 800c03e:	4633      	movge	r3, r6
 800c040:	462e      	movge	r6, r5
 800c042:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800c044:	4604      	mov	r4, r0
 800c046:	bfa8      	it	ge
 800c048:	461d      	movge	r5, r3
 800c04a:	1bab      	subs	r3, r5, r6
 800c04c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c050:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800c052:	bfa4      	itt	ge
 800c054:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 800c058:	2600      	movge	r6, #0
 800c05a:	fb99 f9f2 	sdiv	r9, r9, r2
 800c05e:	fb9a faf2 	sdiv	sl, sl, r2
 800c062:	2900      	cmp	r1, #0
 800c064:	f000 80f1 	beq.w	800c24a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x226>
 800c068:	f9bb 0000 	ldrsh.w	r0, [fp]
 800c06c:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 800c070:	eba9 0700 	sub.w	r7, r9, r0
 800c074:	ebaa 0802 	sub.w	r8, sl, r2
 800c078:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800c07c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800c080:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 800c084:	4407      	add	r7, r0
 800c086:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800c08a:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800c08e:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 800c092:	b23f      	sxth	r7, r7
 800c094:	4490      	add	r8, r2
 800c096:	2202      	movs	r2, #2
 800c098:	eba9 0707 	sub.w	r7, r9, r7
 800c09c:	fa0f f888 	sxth.w	r8, r8
 800c0a0:	9201      	str	r2, [sp, #4]
 800c0a2:	2f00      	cmp	r7, #0
 800c0a4:	ebaa 0808 	sub.w	r8, sl, r8
 800c0a8:	bfb8      	it	lt
 800c0aa:	427f      	neglt	r7, r7
 800c0ac:	f1b8 0f00 	cmp.w	r8, #0
 800c0b0:	bfb8      	it	lt
 800c0b2:	f1c8 0800 	rsblt	r8, r8, #0
 800c0b6:	45bc      	cmp	ip, r7
 800c0b8:	bfcc      	ite	gt
 800c0ba:	f10c 0701 	addgt.w	r7, ip, #1
 800c0be:	3701      	addle	r7, #1
 800c0c0:	4540      	cmp	r0, r8
 800c0c2:	bfc8      	it	gt
 800c0c4:	f100 0801 	addgt.w	r8, r0, #1
 800c0c8:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800c0cc:	bfd8      	it	le
 800c0ce:	f108 0801 	addle.w	r8, r8, #1
 800c0d2:	3001      	adds	r0, #1
 800c0d4:	fb08 f808 	mul.w	r8, r8, r8
 800c0d8:	1040      	asrs	r0, r0, #1
 800c0da:	fb07 8707 	mla	r7, r7, r7, r8
 800c0de:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c0e2:	fb91 f1f2 	sdiv	r1, r1, r2
 800c0e6:	1a5b      	subs	r3, r3, r1
 800c0e8:	930d      	str	r3, [sp, #52]	; 0x34
 800c0ea:	f7ff fd4f 	bl	800bb8c <_ZN8touchgfx7CWRUtil4sineEi>
 800c0ee:	a92a      	add	r1, sp, #168	; 0xa8
 800c0f0:	f841 0d70 	str.w	r0, [r1, #-112]!
 800c0f4:	a80d      	add	r0, sp, #52	; 0x34
 800c0f6:	f7ff fd3d 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c0fa:	f04f 0c20 	mov.w	ip, #32
 800c0fe:	9a01      	ldr	r2, [sp, #4]
 800c100:	fb90 f0fc 	sdiv	r0, r0, ip
 800c104:	4340      	muls	r0, r0
 800c106:	4287      	cmp	r7, r0
 800c108:	da04      	bge.n	800c114 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800c10a:	2401      	movs	r4, #1
 800c10c:	4620      	mov	r0, r4
 800c10e:	b02b      	add	sp, #172	; 0xac
 800c110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c114:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800c116:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c118:	fb91 f3f2 	sdiv	r3, r1, r2
 800c11c:	4403      	add	r3, r0
 800c11e:	fb93 f3fc 	sdiv	r3, r3, ip
 800c122:	f9bb 1000 	ldrsh.w	r1, [fp]
 800c126:	3301      	adds	r3, #1
 800c128:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 800c12c:	435b      	muls	r3, r3
 800c12e:	440a      	add	r2, r1
 800c130:	b212      	sxth	r2, r2
 800c132:	454a      	cmp	r2, r9
 800c134:	bfa8      	it	ge
 800c136:	464a      	movge	r2, r9
 800c138:	428a      	cmp	r2, r1
 800c13a:	bfac      	ite	ge
 800c13c:	eba9 0902 	subge.w	r9, r9, r2
 800c140:	eba9 0901 	sublt.w	r9, r9, r1
 800c144:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 800c148:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c14c:	440a      	add	r2, r1
 800c14e:	b212      	sxth	r2, r2
 800c150:	4552      	cmp	r2, sl
 800c152:	bfa8      	it	ge
 800c154:	4652      	movge	r2, sl
 800c156:	428a      	cmp	r2, r1
 800c158:	bfac      	ite	ge
 800c15a:	ebaa 0a02 	subge.w	sl, sl, r2
 800c15e:	ebaa 0a01 	sublt.w	sl, sl, r1
 800c162:	fb0a fa0a 	mul.w	sl, sl, sl
 800c166:	fb09 a909 	mla	r9, r9, r9, sl
 800c16a:	4599      	cmp	r9, r3
 800c16c:	dccd      	bgt.n	800c10a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe6>
 800c16e:	465a      	mov	r2, fp
 800c170:	4621      	mov	r1, r4
 800c172:	a80e      	add	r0, sp, #56	; 0x38
 800c174:	f014 fbd0 	bl	8020918 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800c178:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800c17a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c17c:	9209      	str	r2, [sp, #36]	; 0x24
 800c17e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800c182:	930a      	str	r3, [sp, #40]	; 0x28
 800c184:	dd07      	ble.n	800c196 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
 800c186:	2102      	movs	r1, #2
 800c188:	fb93 f3f1 	sdiv	r3, r3, r1
 800c18c:	4413      	add	r3, r2
 800c18e:	930a      	str	r3, [sp, #40]	; 0x28
 800c190:	fb93 f3f1 	sdiv	r3, r3, r1
 800c194:	9309      	str	r3, [sp, #36]	; 0x24
 800c196:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 800c19a:	f04f 0a02 	mov.w	sl, #2
 800c19e:	4630      	mov	r0, r6
 800c1a0:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 800c1a4:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 800c1a8:	017f      	lsls	r7, r7, #5
 800c1aa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c1ae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c1b2:	930b      	str	r3, [sp, #44]	; 0x2c
 800c1b4:	f7ff fd0a 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c1b8:	f849 0d74 	str.w	r0, [r9, #-116]!
 800c1bc:	a80b      	add	r0, sp, #44	; 0x2c
 800c1be:	4649      	mov	r1, r9
 800c1c0:	f7ff fcd8 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c1c4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c1c6:	fb90 f0fa 	sdiv	r0, r0, sl
 800c1ca:	eb00 0b03 	add.w	fp, r0, r3
 800c1ce:	4630      	mov	r0, r6
 800c1d0:	f7ff fd1b 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c1d4:	f848 0d78 	str.w	r0, [r8, #-120]!
 800c1d8:	a80b      	add	r0, sp, #44	; 0x2c
 800c1da:	4641      	mov	r1, r8
 800c1dc:	f7ff fcca 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c1e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c1e2:	4659      	mov	r1, fp
 800c1e4:	fb90 f0fa 	sdiv	r0, r0, sl
 800c1e8:	1a12      	subs	r2, r2, r0
 800c1ea:	a80e      	add	r0, sp, #56	; 0x38
 800c1ec:	f014 fd14 	bl	8020c18 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c1f0:	f106 0a20 	add.w	sl, r6, #32
 800c1f4:	bb67      	cbnz	r7, 800c250 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
 800c1f6:	46b3      	mov	fp, r6
 800c1f8:	45aa      	cmp	sl, r5
 800c1fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c1fc:	dc33      	bgt.n	800c266 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800c1fe:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c200:	4650      	mov	r0, sl
 800c202:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800c206:	920b      	str	r2, [sp, #44]	; 0x2c
 800c208:	f7ff fce0 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c20c:	4641      	mov	r1, r8
 800c20e:	900c      	str	r0, [sp, #48]	; 0x30
 800c210:	a80b      	add	r0, sp, #44	; 0x2c
 800c212:	f7ff fcaf 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c216:	2302      	movs	r3, #2
 800c218:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c21a:	fb90 f0f3 	sdiv	r0, r0, r3
 800c21e:	eb00 0b02 	add.w	fp, r0, r2
 800c222:	4650      	mov	r0, sl
 800c224:	f7ff fcf1 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c228:	4649      	mov	r1, r9
 800c22a:	900d      	str	r0, [sp, #52]	; 0x34
 800c22c:	a80b      	add	r0, sp, #44	; 0x2c
 800c22e:	f7ff fca1 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c232:	2302      	movs	r3, #2
 800c234:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c236:	4659      	mov	r1, fp
 800c238:	46d3      	mov	fp, sl
 800c23a:	44ba      	add	sl, r7
 800c23c:	fb90 f0f3 	sdiv	r0, r0, r3
 800c240:	1a12      	subs	r2, r2, r0
 800c242:	a80e      	add	r0, sp, #56	; 0x38
 800c244:	f014 fd35 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c248:	e7d6      	b.n	800c1f8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d4>
 800c24a:	fb93 f3f2 	sdiv	r3, r3, r2
 800c24e:	e768      	b.n	800c122 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xfe>
 800c250:	fb9a f2f7 	sdiv	r2, sl, r7
 800c254:	fb07 a212 	mls	r2, r7, r2, sl
 800c258:	1aba      	subs	r2, r7, r2
 800c25a:	fb92 f1f7 	sdiv	r1, r2, r7
 800c25e:	fb07 2211 	mls	r2, r7, r1, r2
 800c262:	4492      	add	sl, r2
 800c264:	e7c7      	b.n	800c1f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d2>
 800c266:	45ab      	cmp	fp, r5
 800c268:	da23      	bge.n	800c2b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x28e>
 800c26a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c26c:	f04f 0a02 	mov.w	sl, #2
 800c270:	4628      	mov	r0, r5
 800c272:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800c276:	920b      	str	r2, [sp, #44]	; 0x2c
 800c278:	f7ff fca8 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c27c:	4641      	mov	r1, r8
 800c27e:	900c      	str	r0, [sp, #48]	; 0x30
 800c280:	a80b      	add	r0, sp, #44	; 0x2c
 800c282:	f7ff fc77 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c286:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c288:	fb90 f0fa 	sdiv	r0, r0, sl
 800c28c:	4403      	add	r3, r0
 800c28e:	4628      	mov	r0, r5
 800c290:	9301      	str	r3, [sp, #4]
 800c292:	f7ff fcba 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c296:	4649      	mov	r1, r9
 800c298:	900d      	str	r0, [sp, #52]	; 0x34
 800c29a:	a80b      	add	r0, sp, #44	; 0x2c
 800c29c:	f7ff fc6a 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c2a0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c2a2:	9b01      	ldr	r3, [sp, #4]
 800c2a4:	fb90 f0fa 	sdiv	r0, r0, sl
 800c2a8:	4619      	mov	r1, r3
 800c2aa:	1a12      	subs	r2, r2, r0
 800c2ac:	a80e      	add	r0, sp, #56	; 0x38
 800c2ae:	f014 fd00 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c2b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c2b4:	b99b      	cbnz	r3, 800c2de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
 800c2b6:	1bad      	subs	r5, r5, r6
 800c2b8:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 800c2bc:	da04      	bge.n	800c2c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c2be:	a80e      	add	r0, sp, #56	; 0x38
 800c2c0:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 800c2c4:	f014 fcf5 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c2c8:	21ff      	movs	r1, #255	; 0xff
 800c2ca:	a80e      	add	r0, sp, #56	; 0x38
 800c2cc:	f014 fbe0 	bl	8020a90 <_ZN8touchgfx6Canvas6renderEh>
 800c2d0:	4604      	mov	r4, r0
 800c2d2:	4b8a      	ldr	r3, [pc, #552]	; (800c4fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d8>)
 800c2d4:	a816      	add	r0, sp, #88	; 0x58
 800c2d6:	930e      	str	r3, [sp, #56]	; 0x38
 800c2d8:	f001 fc8c 	bl	800dbf4 <_ZN8touchgfx7OutlineD1Ev>
 800c2dc:	e716      	b.n	800c10c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
 800c2de:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 800c2e2:	429a      	cmp	r2, r3
 800c2e4:	f0c0 8107 	bcc.w	800c4f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d2>
 800c2e8:	1bab      	subs	r3, r5, r6
 800c2ea:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 800c2ee:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c2f2:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800c2f6:	9301      	str	r3, [sp, #4]
 800c2f8:	da43      	bge.n	800c382 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
 800c2fa:	4628      	mov	r0, r5
 800c2fc:	f7ff fc66 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c300:	4649      	mov	r1, r9
 800c302:	900d      	str	r0, [sp, #52]	; 0x34
 800c304:	a809      	add	r0, sp, #36	; 0x24
 800c306:	f7ff fc35 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c30a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c30c:	18c3      	adds	r3, r0, r3
 800c30e:	4628      	mov	r0, r5
 800c310:	9303      	str	r3, [sp, #12]
 800c312:	f7ff fc7a 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c316:	4649      	mov	r1, r9
 800c318:	900d      	str	r0, [sp, #52]	; 0x34
 800c31a:	a809      	add	r0, sp, #36	; 0x24
 800c31c:	f7ff fc2a 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c320:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c322:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 800c326:	1a1b      	subs	r3, r3, r0
 800c328:	9204      	str	r2, [sp, #16]
 800c32a:	9302      	str	r3, [sp, #8]
 800c32c:	eb0a 0305 	add.w	r3, sl, r5
 800c330:	9a04      	ldr	r2, [sp, #16]
 800c332:	4293      	cmp	r3, r2
 800c334:	da25      	bge.n	800c382 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
 800c336:	4618      	mov	r0, r3
 800c338:	9306      	str	r3, [sp, #24]
 800c33a:	f7ff fc47 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c33e:	4649      	mov	r1, r9
 800c340:	900d      	str	r0, [sp, #52]	; 0x34
 800c342:	a80a      	add	r0, sp, #40	; 0x28
 800c344:	f7ff fc16 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c348:	2202      	movs	r2, #2
 800c34a:	9b03      	ldr	r3, [sp, #12]
 800c34c:	9207      	str	r2, [sp, #28]
 800c34e:	fb90 f0f2 	sdiv	r0, r0, r2
 800c352:	18c3      	adds	r3, r0, r3
 800c354:	9305      	str	r3, [sp, #20]
 800c356:	9b06      	ldr	r3, [sp, #24]
 800c358:	4618      	mov	r0, r3
 800c35a:	f7ff fc56 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c35e:	a92a      	add	r1, sp, #168	; 0xa8
 800c360:	f841 0d78 	str.w	r0, [r1, #-120]!
 800c364:	a80a      	add	r0, sp, #40	; 0x28
 800c366:	f7ff fc05 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c36a:	9a07      	ldr	r2, [sp, #28]
 800c36c:	9b02      	ldr	r3, [sp, #8]
 800c36e:	9905      	ldr	r1, [sp, #20]
 800c370:	fb90 f2f2 	sdiv	r2, r0, r2
 800c374:	a80e      	add	r0, sp, #56	; 0x38
 800c376:	1a9a      	subs	r2, r3, r2
 800c378:	f014 fc9b 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c37c:	9b06      	ldr	r3, [sp, #24]
 800c37e:	4453      	add	r3, sl
 800c380:	e7d6      	b.n	800c330 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x30c>
 800c382:	45ab      	cmp	fp, r5
 800c384:	da25      	bge.n	800c3d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ae>
 800c386:	4628      	mov	r0, r5
 800c388:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c38c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c390:	930b      	str	r3, [sp, #44]	; 0x2c
 800c392:	f7ff fc1b 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c396:	4641      	mov	r1, r8
 800c398:	900c      	str	r0, [sp, #48]	; 0x30
 800c39a:	a80b      	add	r0, sp, #44	; 0x2c
 800c39c:	f7ff fbea 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3a0:	2202      	movs	r2, #2
 800c3a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c3a4:	9202      	str	r2, [sp, #8]
 800c3a6:	fb90 f0f2 	sdiv	r0, r0, r2
 800c3aa:	eb00 0903 	add.w	r9, r0, r3
 800c3ae:	4628      	mov	r0, r5
 800c3b0:	f7ff fc2b 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c3b4:	a92a      	add	r1, sp, #168	; 0xa8
 800c3b6:	f841 0d74 	str.w	r0, [r1, #-116]!
 800c3ba:	a80b      	add	r0, sp, #44	; 0x2c
 800c3bc:	f7ff fbda 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3c0:	9a02      	ldr	r2, [sp, #8]
 800c3c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c3c4:	4649      	mov	r1, r9
 800c3c6:	fb90 f2f2 	sdiv	r2, r0, r2
 800c3ca:	a80e      	add	r0, sp, #56	; 0x38
 800c3cc:	1a9a      	subs	r2, r3, r2
 800c3ce:	f014 fc70 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c3d2:	46d9      	mov	r9, fp
 800c3d4:	2502      	movs	r5, #2
 800c3d6:	45b1      	cmp	r9, r6
 800c3d8:	db25      	blt.n	800c426 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x402>
 800c3da:	4648      	mov	r0, r9
 800c3dc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c3e0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c3e4:	930b      	str	r3, [sp, #44]	; 0x2c
 800c3e6:	f7ff fbf1 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c3ea:	4641      	mov	r1, r8
 800c3ec:	900c      	str	r0, [sp, #48]	; 0x30
 800c3ee:	a80b      	add	r0, sp, #44	; 0x2c
 800c3f0:	f7ff fbc0 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c3f6:	fb90 f0f5 	sdiv	r0, r0, r5
 800c3fa:	eb00 0b03 	add.w	fp, r0, r3
 800c3fe:	4648      	mov	r0, r9
 800c400:	f7ff fc03 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c404:	a90d      	add	r1, sp, #52	; 0x34
 800c406:	900d      	str	r0, [sp, #52]	; 0x34
 800c408:	a80b      	add	r0, sp, #44	; 0x2c
 800c40a:	f7ff fbb3 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c40e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c410:	4659      	mov	r1, fp
 800c412:	46cb      	mov	fp, r9
 800c414:	eba9 0907 	sub.w	r9, r9, r7
 800c418:	fb90 f0f5 	sdiv	r0, r0, r5
 800c41c:	1a12      	subs	r2, r2, r0
 800c41e:	a80e      	add	r0, sp, #56	; 0x38
 800c420:	f014 fc47 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c424:	e7d7      	b.n	800c3d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b2>
 800c426:	455e      	cmp	r6, fp
 800c428:	da22      	bge.n	800c470 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x44c>
 800c42a:	2502      	movs	r5, #2
 800c42c:	4630      	mov	r0, r6
 800c42e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c432:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c436:	930b      	str	r3, [sp, #44]	; 0x2c
 800c438:	f7ff fbc8 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c43c:	4641      	mov	r1, r8
 800c43e:	900c      	str	r0, [sp, #48]	; 0x30
 800c440:	a80b      	add	r0, sp, #44	; 0x2c
 800c442:	f7ff fb97 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c446:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800c448:	fb90 f0f5 	sdiv	r0, r0, r5
 800c44c:	4407      	add	r7, r0
 800c44e:	4630      	mov	r0, r6
 800c450:	f7ff fbdb 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c454:	a92a      	add	r1, sp, #168	; 0xa8
 800c456:	f841 0d74 	str.w	r0, [r1, #-116]!
 800c45a:	a80b      	add	r0, sp, #44	; 0x2c
 800c45c:	f7ff fb8a 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c460:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c462:	4639      	mov	r1, r7
 800c464:	fb90 f0f5 	sdiv	r0, r0, r5
 800c468:	1a12      	subs	r2, r2, r0
 800c46a:	a80e      	add	r0, sp, #56	; 0x38
 800c46c:	f014 fc21 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c470:	9b01      	ldr	r3, [sp, #4]
 800c472:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c476:	f6bf af27 	bge.w	800c2c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c47a:	ad2a      	add	r5, sp, #168	; 0xa8
 800c47c:	4630      	mov	r0, r6
 800c47e:	f7ff fba5 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c482:	f04f 0b02 	mov.w	fp, #2
 800c486:	f845 0d74 	str.w	r0, [r5, #-116]!
 800c48a:	a809      	add	r0, sp, #36	; 0x24
 800c48c:	4629      	mov	r1, r5
 800c48e:	f7ff fb71 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c492:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c494:	eb00 0903 	add.w	r9, r0, r3
 800c498:	4630      	mov	r0, r6
 800c49a:	f7ff fbb6 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c49e:	4629      	mov	r1, r5
 800c4a0:	900d      	str	r0, [sp, #52]	; 0x34
 800c4a2:	a809      	add	r0, sp, #36	; 0x24
 800c4a4:	f7ff fb66 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4a8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c4aa:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 800c4ae:	eba3 0800 	sub.w	r8, r3, r0
 800c4b2:	4454      	add	r4, sl
 800c4b4:	42a6      	cmp	r6, r4
 800c4b6:	f77f af07 	ble.w	800c2c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c4ba:	4620      	mov	r0, r4
 800c4bc:	f7ff fb86 	bl	800bbcc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c4c0:	4629      	mov	r1, r5
 800c4c2:	900d      	str	r0, [sp, #52]	; 0x34
 800c4c4:	a80a      	add	r0, sp, #40	; 0x28
 800c4c6:	f7ff fb55 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4ca:	fb90 f0fb 	sdiv	r0, r0, fp
 800c4ce:	eb00 0709 	add.w	r7, r0, r9
 800c4d2:	4620      	mov	r0, r4
 800c4d4:	f7ff fb99 	bl	800bc0a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c4d8:	a90c      	add	r1, sp, #48	; 0x30
 800c4da:	900c      	str	r0, [sp, #48]	; 0x30
 800c4dc:	a80a      	add	r0, sp, #40	; 0x28
 800c4de:	f7ff fb49 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4e2:	4639      	mov	r1, r7
 800c4e4:	4454      	add	r4, sl
 800c4e6:	fb90 f2fb 	sdiv	r2, r0, fp
 800c4ea:	a80e      	add	r0, sp, #56	; 0x38
 800c4ec:	eba8 0202 	sub.w	r2, r8, r2
 800c4f0:	f014 fbdf 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c4f4:	e7de      	b.n	800c4b4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x490>
 800c4f6:	2400      	movs	r4, #0
 800c4f8:	e6eb      	b.n	800c2d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ae>
 800c4fa:	bf00      	nop
 800c4fc:	08023cd4 	.word	0x08023cd4

0800c500 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c500:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c502:	6803      	ldr	r3, [r0, #0]
 800c504:	460d      	mov	r5, r1
 800c506:	4604      	mov	r4, r0
 800c508:	4601      	mov	r1, r0
 800c50a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c50c:	a802      	add	r0, sp, #8
 800c50e:	4798      	blx	r3
 800c510:	6828      	ldr	r0, [r5, #0]
 800c512:	6869      	ldr	r1, [r5, #4]
 800c514:	466b      	mov	r3, sp
 800c516:	c303      	stmia	r3!, {r0, r1}
 800c518:	4668      	mov	r0, sp
 800c51a:	4619      	mov	r1, r3
 800c51c:	f7fe fabe 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800c520:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c522:	b188      	cbz	r0, 800c548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c524:	6803      	ldr	r3, [r0, #0]
 800c526:	1d21      	adds	r1, r4, #4
 800c528:	68db      	ldr	r3, [r3, #12]
 800c52a:	4798      	blx	r3
 800c52c:	b160      	cbz	r0, 800c548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c52e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c532:	2b00      	cmp	r3, #0
 800c534:	dd08      	ble.n	800c548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c536:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800c53a:	2d00      	cmp	r5, #0
 800c53c:	dd04      	ble.n	800c548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c53e:	4a2b      	ldr	r2, [pc, #172]	; (800c5ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800c540:	7812      	ldrb	r2, [r2, #0]
 800c542:	b11a      	cbz	r2, 800c54c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800c544:	2a01      	cmp	r2, #1
 800c546:	d029      	beq.n	800c59c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800c548:	b004      	add	sp, #16
 800c54a:	bd70      	pop	{r4, r5, r6, pc}
 800c54c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c550:	441d      	add	r5, r3
 800c552:	b2ad      	uxth	r5, r5
 800c554:	b22e      	sxth	r6, r5
 800c556:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800c55a:	42b3      	cmp	r3, r6
 800c55c:	daf4      	bge.n	800c548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c55e:	6823      	ldr	r3, [r4, #0]
 800c560:	4669      	mov	r1, sp
 800c562:	4620      	mov	r0, r4
 800c564:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c566:	4798      	blx	r3
 800c568:	b940      	cbnz	r0, 800c57c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800c56a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c56e:	2b01      	cmp	r3, #1
 800c570:	d004      	beq.n	800c57c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800c572:	3301      	adds	r3, #1
 800c574:	105b      	asrs	r3, r3, #1
 800c576:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c57a:	e7f0      	b.n	800c55e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c57c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c580:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c584:	4413      	add	r3, r2
 800c586:	b29b      	uxth	r3, r3
 800c588:	441a      	add	r2, r3
 800c58a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c58e:	b212      	sxth	r2, r2
 800c590:	4296      	cmp	r6, r2
 800c592:	dae0      	bge.n	800c556 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800c594:	1aeb      	subs	r3, r5, r3
 800c596:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c59a:	e7dc      	b.n	800c556 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800c59c:	f8bd 5000 	ldrh.w	r5, [sp]
 800c5a0:	441d      	add	r5, r3
 800c5a2:	b2ad      	uxth	r5, r5
 800c5a4:	b22e      	sxth	r6, r5
 800c5a6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c5aa:	42b3      	cmp	r3, r6
 800c5ac:	dacc      	bge.n	800c548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c5ae:	6823      	ldr	r3, [r4, #0]
 800c5b0:	4669      	mov	r1, sp
 800c5b2:	4620      	mov	r0, r4
 800c5b4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c5b6:	4798      	blx	r3
 800c5b8:	b940      	cbnz	r0, 800c5cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800c5ba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c5be:	2b01      	cmp	r3, #1
 800c5c0:	d004      	beq.n	800c5cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800c5c2:	3301      	adds	r3, #1
 800c5c4:	105b      	asrs	r3, r3, #1
 800c5c6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c5ca:	e7f0      	b.n	800c5ae <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c5cc:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c5d0:	f8bd 3000 	ldrh.w	r3, [sp]
 800c5d4:	4413      	add	r3, r2
 800c5d6:	b29b      	uxth	r3, r3
 800c5d8:	441a      	add	r2, r3
 800c5da:	f8ad 3000 	strh.w	r3, [sp]
 800c5de:	b212      	sxth	r2, r2
 800c5e0:	4296      	cmp	r6, r2
 800c5e2:	dae0      	bge.n	800c5a6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800c5e4:	1aeb      	subs	r3, r5, r3
 800c5e6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c5ea:	e7dc      	b.n	800c5a6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800c5ec:	2400e41c 	.word	0x2400e41c

0800c5f0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c5f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c5f2:	6803      	ldr	r3, [r0, #0]
 800c5f4:	4604      	mov	r4, r0
 800c5f6:	4601      	mov	r1, r0
 800c5f8:	4668      	mov	r0, sp
 800c5fa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c5fc:	4798      	blx	r3
 800c5fe:	2100      	movs	r1, #0
 800c600:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c604:	4668      	mov	r0, sp
 800c606:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c60a:	9102      	str	r1, [sp, #8]
 800c60c:	a902      	add	r1, sp, #8
 800c60e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c612:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c616:	f7fe fa41 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800c61a:	6823      	ldr	r3, [r4, #0]
 800c61c:	4669      	mov	r1, sp
 800c61e:	4620      	mov	r0, r4
 800c620:	691b      	ldr	r3, [r3, #16]
 800c622:	4798      	blx	r3
 800c624:	b004      	add	sp, #16
 800c626:	bd10      	pop	{r4, pc}

0800c628 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c628:	2101      	movs	r1, #1
 800c62a:	2200      	movs	r2, #0
 800c62c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c630:	490a      	ldr	r1, [pc, #40]	; (800c65c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c632:	8082      	strh	r2, [r0, #4]
 800c634:	6001      	str	r1, [r0, #0]
 800c636:	21ff      	movs	r1, #255	; 0xff
 800c638:	80c2      	strh	r2, [r0, #6]
 800c63a:	8102      	strh	r2, [r0, #8]
 800c63c:	8142      	strh	r2, [r0, #10]
 800c63e:	8182      	strh	r2, [r0, #12]
 800c640:	81c2      	strh	r2, [r0, #14]
 800c642:	8202      	strh	r2, [r0, #16]
 800c644:	8242      	strh	r2, [r0, #18]
 800c646:	61c2      	str	r2, [r0, #28]
 800c648:	8402      	strh	r2, [r0, #32]
 800c64a:	8442      	strh	r2, [r0, #34]	; 0x22
 800c64c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c650:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c654:	6282      	str	r2, [r0, #40]	; 0x28
 800c656:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c65a:	4770      	bx	lr
 800c65c:	080234d0 	.word	0x080234d0

0800c660 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 800c660:	f101 0364 	add.w	r3, r1, #100	; 0x64
 800c664:	4602      	mov	r2, r0
 800c666:	cb03      	ldmia	r3!, {r0, r1}
 800c668:	6010      	str	r0, [r2, #0]
 800c66a:	4610      	mov	r0, r2
 800c66c:	6051      	str	r1, [r2, #4]
 800c66e:	4770      	bx	lr

0800c670 <_ZN8touchgfx4LineD1Ev>:
 800c670:	4770      	bx	lr

0800c672 <_ZN8touchgfx4LineD0Ev>:
 800c672:	b510      	push	{r4, lr}
 800c674:	4604      	mov	r4, r0
 800c676:	2170      	movs	r1, #112	; 0x70
 800c678:	f014 fb8f 	bl	8020d9a <_ZdlPvj>
 800c67c:	4620      	mov	r0, r4
 800c67e:	bd10      	pop	{r4, pc}

0800c680 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c680:	6800      	ldr	r0, [r0, #0]
 800c682:	2800      	cmp	r0, #0
 800c684:	bfb9      	ittee	lt
 800c686:	2320      	movlt	r3, #32
 800c688:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c68c:	301f      	addge	r0, #31
 800c68e:	1140      	asrge	r0, r0, #5
 800c690:	4770      	bx	lr

0800c692 <_ZNK8touchgfx4Line17invalidateContentEv>:
 800c692:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c696:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800c69a:	b089      	sub	sp, #36	; 0x24
 800c69c:	4604      	mov	r4, r0
 800c69e:	b353      	cbz	r3, 800c6f6 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 800c6a0:	6803      	ldr	r3, [r0, #0]
 800c6a2:	4601      	mov	r1, r0
 800c6a4:	a802      	add	r0, sp, #8
 800c6a6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c6a8:	4798      	blx	r3
 800c6aa:	2220      	movs	r2, #32
 800c6ac:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 800c6b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c6b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c6b4:	f8d4 b000 	ldr.w	fp, [r4]
 800c6b8:	fb9a f0f2 	sdiv	r0, sl, r2
 800c6bc:	fb91 f5f2 	sdiv	r5, r1, r2
 800c6c0:	fb93 f6f2 	sdiv	r6, r3, r2
 800c6c4:	1b40      	subs	r0, r0, r5
 800c6c6:	0076      	lsls	r6, r6, #1
 800c6c8:	2800      	cmp	r0, #0
 800c6ca:	bfb8      	it	lt
 800c6cc:	4240      	neglt	r0, r0
 800c6ce:	4286      	cmp	r6, r0
 800c6d0:	dc0c      	bgt.n	800c6ec <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 800c6d2:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c6d4:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 800c6d8:	fb95 f0f2 	sdiv	r0, r5, r2
 800c6dc:	fb98 f7f2 	sdiv	r7, r8, r2
 800c6e0:	1bc0      	subs	r0, r0, r7
 800c6e2:	2800      	cmp	r0, #0
 800c6e4:	bfb8      	it	lt
 800c6e6:	4240      	neglt	r0, r0
 800c6e8:	4286      	cmp	r6, r0
 800c6ea:	dd07      	ble.n	800c6fc <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 800c6ec:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c6f0:	a902      	add	r1, sp, #8
 800c6f2:	4620      	mov	r0, r4
 800c6f4:	4798      	blx	r3
 800c6f6:	b009      	add	sp, #36	; 0x24
 800c6f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6fc:	eb01 060a 	add.w	r6, r1, sl
 800c700:	2002      	movs	r0, #2
 800c702:	eb08 0705 	add.w	r7, r8, r5
 800c706:	3301      	adds	r3, #1
 800c708:	f10d 0920 	add.w	r9, sp, #32
 800c70c:	9101      	str	r1, [sp, #4]
 800c70e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800c712:	fb96 f6f0 	sdiv	r6, r6, r0
 800c716:	fb97 f7f0 	sdiv	r7, r7, r0
 800c71a:	4103      	asrs	r3, r0
 800c71c:	b236      	sxth	r6, r6
 800c71e:	b23f      	sxth	r7, r7
 800c720:	f849 3d08 	str.w	r3, [r9, #-8]!
 800c724:	4648      	mov	r0, r9
 800c726:	fb96 f6f2 	sdiv	r6, r6, r2
 800c72a:	fb97 f7f2 	sdiv	r7, r7, r2
 800c72e:	f7ff ffa7 	bl	800c680 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c732:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c736:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800c73a:	fa1f fe87 	uxth.w	lr, r7
 800c73e:	9901      	ldr	r1, [sp, #4]
 800c740:	fa1f fc86 	uxth.w	ip, r6
 800c744:	4293      	cmp	r3, r2
 800c746:	b280      	uxth	r0, r0
 800c748:	eba1 0a0a 	sub.w	sl, r1, sl
 800c74c:	da54      	bge.n	800c7f8 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 800c74e:	ebac 0100 	sub.w	r1, ip, r0
 800c752:	f1ba 0f00 	cmp.w	sl, #0
 800c756:	4460      	add	r0, ip
 800c758:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800c75c:	b289      	uxth	r1, r1
 800c75e:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 800c762:	b280      	uxth	r0, r0
 800c764:	b20e      	sxth	r6, r1
 800c766:	da29      	bge.n	800c7bc <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 800c768:	eba8 0505 	sub.w	r5, r8, r5
 800c76c:	2d00      	cmp	r5, #0
 800c76e:	da2a      	bge.n	800c7c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800c770:	fa1f f88a 	uxth.w	r8, sl
 800c774:	f8ad a010 	strh.w	sl, [sp, #16]
 800c778:	fa1f f58c 	uxth.w	r5, ip
 800c77c:	f8ad c012 	strh.w	ip, [sp, #18]
 800c780:	eba0 0008 	sub.w	r0, r0, r8
 800c784:	4443      	add	r3, r8
 800c786:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c78a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c78e:	1a59      	subs	r1, r3, r1
 800c790:	ebae 0005 	sub.w	r0, lr, r5
 800c794:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c798:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c79c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c7a0:	442a      	add	r2, r5
 800c7a2:	eba2 0e0e 	sub.w	lr, r2, lr
 800c7a6:	f8ad e01e 	strh.w	lr, [sp, #30]
 800c7aa:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c7ae:	a904      	add	r1, sp, #16
 800c7b0:	4620      	mov	r0, r4
 800c7b2:	4798      	blx	r3
 800c7b4:	6823      	ldr	r3, [r4, #0]
 800c7b6:	4649      	mov	r1, r9
 800c7b8:	691b      	ldr	r3, [r3, #16]
 800c7ba:	e79a      	b.n	800c6f2 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 800c7bc:	d003      	beq.n	800c7c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800c7be:	eba8 0505 	sub.w	r5, r8, r5
 800c7c2:	2d00      	cmp	r5, #0
 800c7c4:	dcd4      	bgt.n	800c770 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 800c7c6:	fa1f f88a 	uxth.w	r8, sl
 800c7ca:	f8ad 6010 	strh.w	r6, [sp, #16]
 800c7ce:	fa1f f58c 	uxth.w	r5, ip
 800c7d2:	f8ad c012 	strh.w	ip, [sp, #18]
 800c7d6:	4443      	add	r3, r8
 800c7d8:	eba0 0008 	sub.w	r0, r0, r8
 800c7dc:	f8ad a018 	strh.w	sl, [sp, #24]
 800c7e0:	1a59      	subs	r1, r3, r1
 800c7e2:	ebae 0305 	sub.w	r3, lr, r5
 800c7e6:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c7ea:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c7ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c7f2:	f8ad 001c 	strh.w	r0, [sp, #28]
 800c7f6:	e7d3      	b.n	800c7a0 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 800c7f8:	ebae 0100 	sub.w	r1, lr, r0
 800c7fc:	f1ba 0f00 	cmp.w	sl, #0
 800c800:	4470      	add	r0, lr
 800c802:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 800c806:	b289      	uxth	r1, r1
 800c808:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 800c80c:	b280      	uxth	r0, r0
 800c80e:	b20f      	sxth	r7, r1
 800c810:	da20      	bge.n	800c854 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 800c812:	eba8 0505 	sub.w	r5, r8, r5
 800c816:	2d00      	cmp	r5, #0
 800c818:	da21      	bge.n	800c85e <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800c81a:	fa1f f88e 	uxth.w	r8, lr
 800c81e:	f8ad e010 	strh.w	lr, [sp, #16]
 800c822:	fa1f f58a 	uxth.w	r5, sl
 800c826:	f8ad a012 	strh.w	sl, [sp, #18]
 800c82a:	4443      	add	r3, r8
 800c82c:	ebac 0e08 	sub.w	lr, ip, r8
 800c830:	442a      	add	r2, r5
 800c832:	1b40      	subs	r0, r0, r5
 800c834:	eba3 0c0c 	sub.w	ip, r3, ip
 800c838:	f8ad e014 	strh.w	lr, [sp, #20]
 800c83c:	1a51      	subs	r1, r2, r1
 800c83e:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c842:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c846:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c84a:	f8ad c01c 	strh.w	ip, [sp, #28]
 800c84e:	f8ad 101e 	strh.w	r1, [sp, #30]
 800c852:	e7aa      	b.n	800c7aa <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 800c854:	d003      	beq.n	800c85e <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800c856:	eba8 0505 	sub.w	r5, r8, r5
 800c85a:	2d00      	cmp	r5, #0
 800c85c:	dcdd      	bgt.n	800c81a <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 800c85e:	fa1f f58e 	uxth.w	r5, lr
 800c862:	f8ad 7012 	strh.w	r7, [sp, #18]
 800c866:	fa1f f88a 	uxth.w	r8, sl
 800c86a:	f8ad e010 	strh.w	lr, [sp, #16]
 800c86e:	442b      	add	r3, r5
 800c870:	ebac 0705 	sub.w	r7, ip, r5
 800c874:	4442      	add	r2, r8
 800c876:	eba0 0008 	sub.w	r0, r0, r8
 800c87a:	eba3 0c0c 	sub.w	ip, r3, ip
 800c87e:	f8ad 7014 	strh.w	r7, [sp, #20]
 800c882:	1a51      	subs	r1, r2, r1
 800c884:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c888:	f8ad a01a 	strh.w	sl, [sp, #26]
 800c88c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800c890:	f8ad c01c 	strh.w	ip, [sp, #28]
 800c894:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c898:	e787      	b.n	800c7aa <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0800c89a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 800c89a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800c89e:	f04f 0300 	mov.w	r3, #0
 800c8a2:	bf2c      	ite	cs
 800c8a4:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 800c8a8:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 800c8ac:	1899      	adds	r1, r3, r2
 800c8ae:	4288      	cmp	r0, r1
 800c8b0:	bf24      	itt	cs
 800c8b2:	1853      	addcs	r3, r2, r1
 800c8b4:	1a40      	subcs	r0, r0, r1
 800c8b6:	0892      	lsrs	r2, r2, #2
 800c8b8:	ea4f 0353 	mov.w	r3, r3, lsr #1
 800c8bc:	d1f6      	bne.n	800c8ac <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
 800c8be:	4618      	mov	r0, r3
 800c8c0:	4770      	bx	lr

0800c8c2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800c8c2:	b510      	push	{r4, lr}
 800c8c4:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800c8c8:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800c8cc:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800c8d0:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800c8d4:	139b      	asrs	r3, r3, #14
 800c8d6:	13a4      	asrs	r4, r4, #14
 800c8d8:	429c      	cmp	r4, r3
 800c8da:	bfb8      	it	lt
 800c8dc:	461c      	movlt	r4, r3
 800c8de:	2c01      	cmp	r4, #1
 800c8e0:	dd07      	ble.n	800c8f2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800c8e2:	fb91 f1f4 	sdiv	r1, r1, r4
 800c8e6:	fb90 f0f4 	sdiv	r0, r0, r4
 800c8ea:	f7ff ffea 	bl	800c8c2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c8ee:	4360      	muls	r0, r4
 800c8f0:	bd10      	pop	{r4, pc}
 800c8f2:	4340      	muls	r0, r0
 800c8f4:	fb01 0001 	mla	r0, r1, r1, r0
 800c8f8:	f7ff ffcf 	bl	800c89a <_ZN8touchgfx7CWRUtil5isqrtEm>
 800c8fc:	e7f8      	b.n	800c8f0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

0800c900 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 800c900:	2800      	cmp	r0, #0
 800c902:	b508      	push	{r3, lr}
 800c904:	da05      	bge.n	800c912 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 800c906:	4240      	negs	r0, r0
 800c908:	f7ff fffa 	bl	800c900 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800c90c:	4240      	negs	r0, r0
 800c90e:	b240      	sxtb	r0, r0
 800c910:	bd08      	pop	{r3, pc}
 800c912:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800c916:	dc11      	bgt.n	800c93c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 800c918:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 800c91c:	dd09      	ble.n	800c932 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 800c91e:	4340      	muls	r0, r0
 800c920:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 800c924:	f7ff ffb9 	bl	800c89a <_ZN8touchgfx7CWRUtil5isqrtEm>
 800c928:	f7ff ffea 	bl	800c900 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800c92c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c930:	e7ed      	b.n	800c90e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 800c932:	3003      	adds	r0, #3
 800c934:	4b02      	ldr	r3, [pc, #8]	; (800c940 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 800c936:	10c0      	asrs	r0, r0, #3
 800c938:	5618      	ldrsb	r0, [r3, r0]
 800c93a:	e7e9      	b.n	800c910 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800c93c:	2000      	movs	r0, #0
 800c93e:	e7e7      	b.n	800c910 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800c940:	08023540 	.word	0x08023540

0800c944 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 800c944:	4281      	cmp	r1, r0
 800c946:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c948:	460c      	mov	r4, r1
 800c94a:	4615      	mov	r5, r2
 800c94c:	dd07      	ble.n	800c95e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 800c94e:	4601      	mov	r1, r0
 800c950:	4620      	mov	r0, r4
 800c952:	f7ff fff7 	bl	800c944 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800c956:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c95a:	b003      	add	sp, #12
 800c95c:	bd30      	pop	{r4, r5, pc}
 800c95e:	f7ff ffb0 	bl	800c8c2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c962:	6028      	str	r0, [r5, #0]
 800c964:	2800      	cmp	r0, #0
 800c966:	d0f8      	beq.n	800c95a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 800c968:	4602      	mov	r2, r0
 800c96a:	ab01      	add	r3, sp, #4
 800c96c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800c970:	4620      	mov	r0, r4
 800c972:	f004 ff0d 	bl	8011790 <_ZN8touchgfx6muldivElllRl>
 800c976:	f7ff ffc3 	bl	800c900 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800c97a:	e7ee      	b.n	800c95a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

0800c97c <_ZN8touchgfx4LineC1Ev>:
 800c97c:	b510      	push	{r4, lr}
 800c97e:	4604      	mov	r4, r0
 800c980:	f7ff fe52 	bl	800c628 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800c984:	4b0c      	ldr	r3, [pc, #48]	; (800c9b8 <_ZN8touchgfx4LineC1Ev+0x3c>)
 800c986:	2220      	movs	r2, #32
 800c988:	4620      	mov	r0, r4
 800c98a:	6023      	str	r3, [r4, #0]
 800c98c:	2300      	movs	r3, #0
 800c98e:	63e2      	str	r2, [r4, #60]	; 0x3c
 800c990:	2212      	movs	r2, #18
 800c992:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c996:	66e2      	str	r2, [r4, #108]	; 0x6c
 800c998:	60a3      	str	r3, [r4, #8]
 800c99a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800c99e:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 800c9a2:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 800c9a6:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 800c9aa:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 800c9ae:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 800c9b2:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 800c9b6:	bd10      	pop	{r4, pc}
 800c9b8:	080235a4 	.word	0x080235a4

0800c9bc <_ZN8touchgfx4Line17updateCachedShapeEv>:
 800c9bc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c9c0:	6b47      	ldr	r7, [r0, #52]	; 0x34
 800c9c2:	4604      	mov	r4, r0
 800c9c4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800c9c6:	6b85      	ldr	r5, [r0, #56]	; 0x38
 800c9c8:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800c9ca:	1aff      	subs	r7, r7, r3
 800c9cc:	eba5 0502 	sub.w	r5, r5, r2
 800c9d0:	d142      	bne.n	800ca58 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 800c9d2:	b955      	cbnz	r5, 800c9ea <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 800c9d4:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 800c9d8:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 800c9dc:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 800c9e0:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 800c9e4:	b002      	add	sp, #8
 800c9e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c9ea:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 800c9ee:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 800c9f2:	4629      	mov	r1, r5
 800c9f4:	2502      	movs	r5, #2
 800c9f6:	4642      	mov	r2, r8
 800c9f8:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c9fa:	f004 fee8 	bl	80117ce <_ZN8touchgfx6muldivElll>
 800c9fe:	4642      	mov	r2, r8
 800ca00:	4639      	mov	r1, r7
 800ca02:	fb90 f6f5 	sdiv	r6, r0, r5
 800ca06:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ca08:	f004 fee1 	bl	80117ce <_ZN8touchgfx6muldivElll>
 800ca0c:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 800ca10:	fb90 f5f5 	sdiv	r5, r0, r5
 800ca14:	f1b9 0f00 	cmp.w	r9, #0
 800ca18:	d067      	beq.n	800caea <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 800ca1a:	f1b9 0f02 	cmp.w	r9, #2
 800ca1e:	d878      	bhi.n	800cb12 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 800ca20:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ca22:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ca24:	1b93      	subs	r3, r2, r6
 800ca26:	4432      	add	r2, r6
 800ca28:	1b5b      	subs	r3, r3, r5
 800ca2a:	1b52      	subs	r2, r2, r5
 800ca2c:	6463      	str	r3, [r4, #68]	; 0x44
 800ca2e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ca30:	6522      	str	r2, [r4, #80]	; 0x50
 800ca32:	18e9      	adds	r1, r5, r3
 800ca34:	1b5b      	subs	r3, r3, r5
 800ca36:	1b89      	subs	r1, r1, r6
 800ca38:	1b9b      	subs	r3, r3, r6
 800ca3a:	6561      	str	r1, [r4, #84]	; 0x54
 800ca3c:	1b81      	subs	r1, r0, r6
 800ca3e:	4430      	add	r0, r6
 800ca40:	4429      	add	r1, r5
 800ca42:	4428      	add	r0, r5
 800ca44:	64a1      	str	r1, [r4, #72]	; 0x48
 800ca46:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ca48:	64e0      	str	r0, [r4, #76]	; 0x4c
 800ca4a:	186f      	adds	r7, r5, r1
 800ca4c:	1b49      	subs	r1, r1, r5
 800ca4e:	4437      	add	r7, r6
 800ca50:	4431      	add	r1, r6
 800ca52:	65a7      	str	r7, [r4, #88]	; 0x58
 800ca54:	65e1      	str	r1, [r4, #92]	; 0x5c
 800ca56:	e05b      	b.n	800cb10 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 800ca58:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 800ca5c:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 800ca60:	2d00      	cmp	r5, #0
 800ca62:	d0c6      	beq.n	800c9f2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 800ca64:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 800ca68:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 800ca6c:	fb93 f2f8 	sdiv	r2, r3, r8
 800ca70:	fb08 3312 	mls	r3, r8, r2, r3
 800ca74:	b353      	cbz	r3, 800cacc <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 800ca76:	fb98 f2f3 	sdiv	r2, r8, r3
 800ca7a:	fb03 8812 	mls	r8, r3, r2, r8
 800ca7e:	f1b8 0f00 	cmp.w	r8, #0
 800ca82:	d1f3      	bne.n	800ca6c <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 800ca84:	2b01      	cmp	r3, #1
 800ca86:	f24b 5104 	movw	r1, #46340	; 0xb504
 800ca8a:	bf1c      	itt	ne
 800ca8c:	fb97 f7f3 	sdivne	r7, r7, r3
 800ca90:	fb95 f5f3 	sdivne	r5, r5, r3
 800ca94:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 800ca98:	4608      	mov	r0, r1
 800ca9a:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 800ca9e:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 800caa2:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 800caa6:	428b      	cmp	r3, r1
 800caa8:	dd01      	ble.n	800caae <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 800caaa:	428a      	cmp	r2, r1
 800caac:	dc10      	bgt.n	800cad0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 800caae:	fb90 f3f3 	sdiv	r3, r0, r3
 800cab2:	fb90 f2f2 	sdiv	r2, r0, r2
 800cab6:	4293      	cmp	r3, r2
 800cab8:	bfa8      	it	ge
 800caba:	4613      	movge	r3, r2
 800cabc:	435f      	muls	r7, r3
 800cabe:	435d      	muls	r5, r3
 800cac0:	4629      	mov	r1, r5
 800cac2:	4638      	mov	r0, r7
 800cac4:	f7ff fefd 	bl	800c8c2 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cac8:	4680      	mov	r8, r0
 800caca:	e792      	b.n	800c9f2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 800cacc:	4643      	mov	r3, r8
 800cace:	e7d9      	b.n	800ca84 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 800cad0:	fb93 f3f1 	sdiv	r3, r3, r1
 800cad4:	fb92 f2f1 	sdiv	r2, r2, r1
 800cad8:	4293      	cmp	r3, r2
 800cada:	bfcc      	ite	gt
 800cadc:	3301      	addgt	r3, #1
 800cade:	1c53      	addle	r3, r2, #1
 800cae0:	fb97 f7f3 	sdiv	r7, r7, r3
 800cae4:	fb95 f5f3 	sdiv	r5, r5, r3
 800cae8:	e7ea      	b.n	800cac0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 800caea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800caec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800caee:	1b93      	subs	r3, r2, r6
 800caf0:	4432      	add	r2, r6
 800caf2:	6463      	str	r3, [r4, #68]	; 0x44
 800caf4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800caf6:	6522      	str	r2, [r4, #80]	; 0x50
 800caf8:	18e9      	adds	r1, r5, r3
 800cafa:	1b5b      	subs	r3, r3, r5
 800cafc:	6561      	str	r1, [r4, #84]	; 0x54
 800cafe:	1b81      	subs	r1, r0, r6
 800cb00:	4430      	add	r0, r6
 800cb02:	64a1      	str	r1, [r4, #72]	; 0x48
 800cb04:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cb06:	64e0      	str	r0, [r4, #76]	; 0x4c
 800cb08:	186f      	adds	r7, r5, r1
 800cb0a:	1b49      	subs	r1, r1, r5
 800cb0c:	65a7      	str	r7, [r4, #88]	; 0x58
 800cb0e:	65e1      	str	r1, [r4, #92]	; 0x5c
 800cb10:	6623      	str	r3, [r4, #96]	; 0x60
 800cb12:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cb14:	f104 0148 	add.w	r1, r4, #72	; 0x48
 800cb18:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800cb1a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 800cb1e:	9200      	str	r2, [sp, #0]
 800cb20:	9301      	str	r3, [sp, #4]
 800cb22:	680f      	ldr	r7, [r1, #0]
 800cb24:	3104      	adds	r1, #4
 800cb26:	9800      	ldr	r0, [sp, #0]
 800cb28:	42ba      	cmp	r2, r7
 800cb2a:	bfa8      	it	ge
 800cb2c:	463a      	movge	r2, r7
 800cb2e:	4287      	cmp	r7, r0
 800cb30:	9801      	ldr	r0, [sp, #4]
 800cb32:	bfc8      	it	gt
 800cb34:	9700      	strgt	r7, [sp, #0]
 800cb36:	68cf      	ldr	r7, [r1, #12]
 800cb38:	42bb      	cmp	r3, r7
 800cb3a:	bfa8      	it	ge
 800cb3c:	463b      	movge	r3, r7
 800cb3e:	4287      	cmp	r7, r0
 800cb40:	bfc8      	it	gt
 800cb42:	9701      	strgt	r7, [sp, #4]
 800cb44:	458c      	cmp	ip, r1
 800cb46:	d1ec      	bne.n	800cb22 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 800cb48:	2720      	movs	r7, #32
 800cb4a:	4668      	mov	r0, sp
 800cb4c:	fb92 f8f7 	sdiv	r8, r2, r7
 800cb50:	fb93 f7f7 	sdiv	r7, r3, r7
 800cb54:	f7ff fd94 	bl	800c680 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cb58:	4682      	mov	sl, r0
 800cb5a:	a801      	add	r0, sp, #4
 800cb5c:	f7ff fd90 	bl	800c680 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cb60:	ebaa 0208 	sub.w	r2, sl, r8
 800cb64:	1bc0      	subs	r0, r0, r7
 800cb66:	f1b9 0f01 	cmp.w	r9, #1
 800cb6a:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 800cb6e:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 800cb72:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 800cb76:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 800cb7a:	f47f af33 	bne.w	800c9e4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 800cb7e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800cb80:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cb82:	1b83      	subs	r3, r0, r6
 800cb84:	6463      	str	r3, [r4, #68]	; 0x44
 800cb86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb88:	18ea      	adds	r2, r5, r3
 800cb8a:	6562      	str	r2, [r4, #84]	; 0x54
 800cb8c:	1b8a      	subs	r2, r1, r6
 800cb8e:	4431      	add	r1, r6
 800cb90:	4406      	add	r6, r0
 800cb92:	64a2      	str	r2, [r4, #72]	; 0x48
 800cb94:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cb96:	64e1      	str	r1, [r4, #76]	; 0x4c
 800cb98:	18af      	adds	r7, r5, r2
 800cb9a:	1b52      	subs	r2, r2, r5
 800cb9c:	1b5d      	subs	r5, r3, r5
 800cb9e:	6526      	str	r6, [r4, #80]	; 0x50
 800cba0:	65a7      	str	r7, [r4, #88]	; 0x58
 800cba2:	65e2      	str	r2, [r4, #92]	; 0x5c
 800cba4:	6625      	str	r5, [r4, #96]	; 0x60
 800cba6:	e71d      	b.n	800c9e4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0800cba8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 800cba8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800cbaa:	428b      	cmp	r3, r1
 800cbac:	d102      	bne.n	800cbb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 800cbae:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800cbb0:	4293      	cmp	r3, r2
 800cbb2:	d003      	beq.n	800cbbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 800cbb4:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 800cbb8:	f7ff bf00 	b.w	800c9bc <_ZN8touchgfx4Line17updateCachedShapeEv>
 800cbbc:	4770      	bx	lr

0800cbbe <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 800cbbe:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800cbc0:	428b      	cmp	r3, r1
 800cbc2:	d102      	bne.n	800cbca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 800cbc4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800cbc6:	4293      	cmp	r3, r2
 800cbc8:	d003      	beq.n	800cbd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 800cbca:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 800cbce:	f7ff bef5 	b.w	800c9bc <_ZN8touchgfx4Line17updateCachedShapeEv>
 800cbd2:	4770      	bx	lr

0800cbd4 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 800cbd4:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 800cbd8:	f7ff bef0 	b.w	800c9bc <_ZN8touchgfx4Line17updateCachedShapeEv>

0800cbdc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 800cbdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbe0:	b0a0      	sub	sp, #128	; 0x80
 800cbe2:	4604      	mov	r4, r0
 800cbe4:	460a      	mov	r2, r1
 800cbe6:	4601      	mov	r1, r0
 800cbe8:	a804      	add	r0, sp, #16
 800cbea:	f013 fe95 	bl	8020918 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800cbee:	2300      	movs	r3, #0
 800cbf0:	9301      	str	r3, [sp, #4]
 800cbf2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800cbf6:	2b01      	cmp	r3, #1
 800cbf8:	d17c      	bne.n	800ccf4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 800cbfa:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800cbfc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800cbfe:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800cc00:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc02:	1ac0      	subs	r0, r0, r3
 800cc04:	eba1 0102 	sub.w	r1, r1, r2
 800cc08:	d437      	bmi.n	800cc7a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 800cc0a:	2900      	cmp	r1, #0
 800cc0c:	aa01      	add	r2, sp, #4
 800cc0e:	db2e      	blt.n	800cc6e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 800cc10:	f7ff fe98 	bl	800c944 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800cc14:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 800cc18:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800cc1a:	a804      	add	r0, sp, #16
 800cc1c:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800cc1e:	f013 fffb 	bl	8020c18 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cc22:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800cc24:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800cc26:	a804      	add	r0, sp, #16
 800cc28:	f014 f843 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cc2c:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 800cc2e:	2db3      	cmp	r5, #179	; 0xb3
 800cc30:	dc33      	bgt.n	800cc9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 800cc32:	eba6 0805 	sub.w	r8, r6, r5
 800cc36:	4640      	mov	r0, r8
 800cc38:	f7fe ffa8 	bl	800bb8c <_ZN8touchgfx7CWRUtil4sineEi>
 800cc3c:	a902      	add	r1, sp, #8
 800cc3e:	9002      	str	r0, [sp, #8]
 800cc40:	a801      	add	r0, sp, #4
 800cc42:	f7fe ff97 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cc46:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cc48:	1847      	adds	r7, r0, r1
 800cc4a:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 800cc4e:	f7fe ff9d 	bl	800bb8c <_ZN8touchgfx7CWRUtil4sineEi>
 800cc52:	a903      	add	r1, sp, #12
 800cc54:	9003      	str	r0, [sp, #12]
 800cc56:	a801      	add	r0, sp, #4
 800cc58:	f7fe ff8c 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cc5c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cc5e:	4639      	mov	r1, r7
 800cc60:	1a12      	subs	r2, r2, r0
 800cc62:	a804      	add	r0, sp, #16
 800cc64:	f014 f825 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cc68:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 800cc6a:	441d      	add	r5, r3
 800cc6c:	e7df      	b.n	800cc2e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 800cc6e:	4249      	negs	r1, r1
 800cc70:	f7ff fe68 	bl	800c944 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800cc74:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 800cc78:	e7ce      	b.n	800cc18 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 800cc7a:	2900      	cmp	r1, #0
 800cc7c:	f1c0 0000 	rsb	r0, r0, #0
 800cc80:	aa01      	add	r2, sp, #4
 800cc82:	db04      	blt.n	800cc8e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 800cc84:	f7ff fe5e 	bl	800c944 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800cc88:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 800cc8c:	e7c4      	b.n	800cc18 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 800cc8e:	4249      	negs	r1, r1
 800cc90:	f7ff fe58 	bl	800c944 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800cc94:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 800cc98:	e7be      	b.n	800cc18 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 800cc9a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800cc9c:	a804      	add	r0, sp, #16
 800cc9e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800cca0:	f014 f807 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cca4:	6e22      	ldr	r2, [r4, #96]	; 0x60
 800cca6:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800cca8:	a804      	add	r0, sp, #16
 800ccaa:	f014 f802 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800ccae:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 800ccb0:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 800ccb4:	2d00      	cmp	r5, #0
 800ccb6:	dd31      	ble.n	800cd1c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 800ccb8:	eb05 0806 	add.w	r8, r5, r6
 800ccbc:	4640      	mov	r0, r8
 800ccbe:	f7fe ff65 	bl	800bb8c <_ZN8touchgfx7CWRUtil4sineEi>
 800ccc2:	a902      	add	r1, sp, #8
 800ccc4:	9002      	str	r0, [sp, #8]
 800ccc6:	a801      	add	r0, sp, #4
 800ccc8:	f7fe ff54 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cccc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ccce:	1847      	adds	r7, r0, r1
 800ccd0:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 800ccd4:	f7fe ff5a 	bl	800bb8c <_ZN8touchgfx7CWRUtil4sineEi>
 800ccd8:	a903      	add	r1, sp, #12
 800ccda:	9003      	str	r0, [sp, #12]
 800ccdc:	a801      	add	r0, sp, #4
 800ccde:	f7fe ff49 	bl	800bb74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cce2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cce4:	4639      	mov	r1, r7
 800cce6:	1a12      	subs	r2, r2, r0
 800cce8:	a804      	add	r0, sp, #16
 800ccea:	f013 ffe2 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800ccee:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 800ccf0:	1aed      	subs	r5, r5, r3
 800ccf2:	e7df      	b.n	800ccb4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 800ccf4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800ccf6:	a804      	add	r0, sp, #16
 800ccf8:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800ccfa:	f013 ff8d 	bl	8020c18 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800ccfe:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800cd00:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800cd02:	a804      	add	r0, sp, #16
 800cd04:	f013 ffd5 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd08:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800cd0a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800cd0c:	a804      	add	r0, sp, #16
 800cd0e:	f013 ffd0 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd12:	6e22      	ldr	r2, [r4, #96]	; 0x60
 800cd14:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800cd16:	a804      	add	r0, sp, #16
 800cd18:	f013 ffcb 	bl	8020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd1c:	21ff      	movs	r1, #255	; 0xff
 800cd1e:	a804      	add	r0, sp, #16
 800cd20:	f013 feb6 	bl	8020a90 <_ZN8touchgfx6Canvas6renderEh>
 800cd24:	4b04      	ldr	r3, [pc, #16]	; (800cd38 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 800cd26:	4604      	mov	r4, r0
 800cd28:	a80c      	add	r0, sp, #48	; 0x30
 800cd2a:	9304      	str	r3, [sp, #16]
 800cd2c:	f000 ff62 	bl	800dbf4 <_ZN8touchgfx7OutlineD1Ev>
 800cd30:	4620      	mov	r0, r4
 800cd32:	b020      	add	sp, #128	; 0x80
 800cd34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd38:	08023cd4 	.word	0x08023cd4

0800cd3c <_ZNK8touchgfx5Image17invalidateContentEv>:
 800cd3c:	b508      	push	{r3, lr}
 800cd3e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800cd42:	b10b      	cbz	r3, 800cd48 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 800cd44:	f7f4 f9f2 	bl	800112c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800cd48:	bd08      	pop	{r3, pc}

0800cd4a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800cd4a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800cd4e:	4770      	bx	lr

0800cd50 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800cd50:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800cd54:	4770      	bx	lr

0800cd56 <_ZN8touchgfx13ScalableImageD1Ev>:
 800cd56:	4770      	bx	lr

0800cd58 <_ZN8touchgfx13ScalableImageD0Ev>:
 800cd58:	b510      	push	{r4, lr}
 800cd5a:	4604      	mov	r4, r0
 800cd5c:	212c      	movs	r1, #44	; 0x2c
 800cd5e:	f014 f81c 	bl	8020d9a <_ZdlPvj>
 800cd62:	4620      	mov	r0, r4
 800cd64:	bd10      	pop	{r4, pc}

0800cd66 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800cd66:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd68:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800cd6c:	b085      	sub	sp, #20
 800cd6e:	4604      	mov	r4, r0
 800cd70:	460d      	mov	r5, r1
 800cd72:	2bff      	cmp	r3, #255	; 0xff
 800cd74:	d128      	bne.n	800cdc8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800cd76:	f101 0626 	add.w	r6, r1, #38	; 0x26
 800cd7a:	4668      	mov	r0, sp
 800cd7c:	4631      	mov	r1, r6
 800cd7e:	f006 f8fd 	bl	8012f7c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800cd82:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 800cd86:	4630      	mov	r0, r6
 800cd88:	f006 f890 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cd8c:	4287      	cmp	r7, r0
 800cd8e:	d11b      	bne.n	800cdc8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800cd90:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800cd94:	4630      	mov	r0, r6
 800cd96:	f006 f8bd 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cd9a:	4287      	cmp	r7, r0
 800cd9c:	d114      	bne.n	800cdc8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800cd9e:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 800cda2:	2100      	movs	r1, #0
 800cda4:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800cda8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cdac:	466b      	mov	r3, sp
 800cdae:	9102      	str	r1, [sp, #8]
 800cdb0:	f8ad 200c 	strh.w	r2, [sp, #12]
 800cdb4:	cb03      	ldmia	r3!, {r0, r1}
 800cdb6:	6020      	str	r0, [r4, #0]
 800cdb8:	4620      	mov	r0, r4
 800cdba:	6061      	str	r1, [r4, #4]
 800cdbc:	4619      	mov	r1, r3
 800cdbe:	f7fd fe6d 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800cdc2:	4620      	mov	r0, r4
 800cdc4:	b005      	add	sp, #20
 800cdc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cdc8:	2300      	movs	r3, #0
 800cdca:	8023      	strh	r3, [r4, #0]
 800cdcc:	8063      	strh	r3, [r4, #2]
 800cdce:	80a3      	strh	r3, [r4, #4]
 800cdd0:	80e3      	strh	r3, [r4, #6]
 800cdd2:	e7f6      	b.n	800cdc2 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

0800cdd4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800cdd4:	b538      	push	{r3, r4, r5, lr}
 800cdd6:	2300      	movs	r3, #0
 800cdd8:	2501      	movs	r5, #1
 800cdda:	4604      	mov	r4, r0
 800cddc:	8083      	strh	r3, [r0, #4]
 800cdde:	80c3      	strh	r3, [r0, #6]
 800cde0:	8103      	strh	r3, [r0, #8]
 800cde2:	8143      	strh	r3, [r0, #10]
 800cde4:	8183      	strh	r3, [r0, #12]
 800cde6:	81c3      	strh	r3, [r0, #14]
 800cde8:	8203      	strh	r3, [r0, #16]
 800cdea:	8243      	strh	r3, [r0, #18]
 800cdec:	61c3      	str	r3, [r0, #28]
 800cdee:	8403      	strh	r3, [r0, #32]
 800cdf0:	8443      	strh	r3, [r0, #34]	; 0x22
 800cdf2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800cdf6:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800cdfa:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800cdfe:	4b07      	ldr	r3, [pc, #28]	; (800ce1c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800ce00:	6003      	str	r3, [r0, #0]
 800ce02:	880b      	ldrh	r3, [r1, #0]
 800ce04:	84c3      	strh	r3, [r0, #38]	; 0x26
 800ce06:	23ff      	movs	r3, #255	; 0xff
 800ce08:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800ce0c:	f000 fe7e 	bl	800db0c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ce10:	4b03      	ldr	r3, [pc, #12]	; (800ce20 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800ce12:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800ce16:	4620      	mov	r0, r4
 800ce18:	6023      	str	r3, [r4, #0]
 800ce1a:	bd38      	pop	{r3, r4, r5, pc}
 800ce1c:	080237f0 	.word	0x080237f0
 800ce20:	0802361c 	.word	0x0802361c

0800ce24 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800ce24:	4603      	mov	r3, r0
 800ce26:	3026      	adds	r0, #38	; 0x26
 800ce28:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800ce2c:	b90b      	cbnz	r3, 800ce32 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800ce2e:	f004 bc21 	b.w	8011674 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800ce32:	f004 bc2f 	b.w	8011694 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800ce38 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800ce38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce3c:	4604      	mov	r4, r0
 800ce3e:	b0b3      	sub	sp, #204	; 0xcc
 800ce40:	469b      	mov	fp, r3
 800ce42:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800ce46:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ce4a:	2500      	movs	r5, #0
 800ce4c:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800ce50:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 800ce54:	ab11      	add	r3, sp, #68	; 0x44
 800ce56:	9206      	str	r2, [sp, #24]
 800ce58:	4618      	mov	r0, r3
 800ce5a:	9511      	str	r5, [sp, #68]	; 0x44
 800ce5c:	9307      	str	r3, [sp, #28]
 800ce5e:	ad13      	add	r5, sp, #76	; 0x4c
 800ce60:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800ce64:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800ce68:	f7fd fe18 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800ce6c:	9b07      	ldr	r3, [sp, #28]
 800ce6e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ce72:	e885 0003 	stmia.w	r5, {r0, r1}
 800ce76:	6821      	ldr	r1, [r4, #0]
 800ce78:	4620      	mov	r0, r4
 800ce7a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800ce7c:	4629      	mov	r1, r5
 800ce7e:	47b0      	blx	r6
 800ce80:	4621      	mov	r1, r4
 800ce82:	a815      	add	r0, sp, #84	; 0x54
 800ce84:	1d26      	adds	r6, r4, #4
 800ce86:	f004 fb51 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ce8a:	a815      	add	r0, sp, #84	; 0x54
 800ce8c:	f003 f886 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ce90:	9b07      	ldr	r3, [sp, #28]
 800ce92:	4631      	mov	r1, r6
 800ce94:	4618      	mov	r0, r3
 800ce96:	f003 f8c5 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ce9a:	4628      	mov	r0, r5
 800ce9c:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800cea0:	f003 f87c 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800cea4:	4628      	mov	r0, r5
 800cea6:	f006 f8ed 	bl	8013084 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ceaa:	9007      	str	r0, [sp, #28]
 800ceac:	2800      	cmp	r0, #0
 800ceae:	f000 80ce 	beq.w	800d04e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 800ceb2:	f8db 200c 	ldr.w	r2, [fp, #12]
 800ceb6:	a809      	add	r0, sp, #36	; 0x24
 800ceb8:	f8db 1000 	ldr.w	r1, [fp]
 800cebc:	920c      	str	r2, [sp, #48]	; 0x30
 800cebe:	f8da 2000 	ldr.w	r2, [sl]
 800cec2:	9109      	str	r1, [sp, #36]	; 0x24
 800cec4:	920d      	str	r2, [sp, #52]	; 0x34
 800cec6:	f8da 2004 	ldr.w	r2, [sl, #4]
 800ceca:	f8db 1004 	ldr.w	r1, [fp, #4]
 800cece:	920e      	str	r2, [sp, #56]	; 0x38
 800ced0:	f8da 2008 	ldr.w	r2, [sl, #8]
 800ced4:	910a      	str	r1, [sp, #40]	; 0x28
 800ced6:	920f      	str	r2, [sp, #60]	; 0x3c
 800ced8:	f8db 1008 	ldr.w	r1, [fp, #8]
 800cedc:	f8da 200c 	ldr.w	r2, [sl, #12]
 800cee0:	910b      	str	r1, [sp, #44]	; 0x2c
 800cee2:	a90d      	add	r1, sp, #52	; 0x34
 800cee4:	9210      	str	r2, [sp, #64]	; 0x40
 800cee6:	4632      	mov	r2, r6
 800cee8:	f003 f880 	bl	800ffec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800ceec:	4632      	mov	r2, r6
 800ceee:	a90e      	add	r1, sp, #56	; 0x38
 800cef0:	a80a      	add	r0, sp, #40	; 0x28
 800cef2:	f003 f87b 	bl	800ffec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cef6:	4632      	mov	r2, r6
 800cef8:	a90f      	add	r1, sp, #60	; 0x3c
 800cefa:	a80b      	add	r0, sp, #44	; 0x2c
 800cefc:	f003 f876 	bl	800ffec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cf00:	4632      	mov	r2, r6
 800cf02:	a910      	add	r1, sp, #64	; 0x40
 800cf04:	a80c      	add	r0, sp, #48	; 0x30
 800cf06:	f003 f871 	bl	800ffec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cf0a:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800cf0e:	ed97 3a00 	vldr	s6, [r7]
 800cf12:	eef0 6a67 	vmov.f32	s13, s15
 800cf16:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800cf1a:	edd7 4a01 	vldr	s9, [r7, #4]
 800cf1e:	eeb0 7a67 	vmov.f32	s14, s15
 800cf22:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800cf26:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800cf2a:	ed99 2a00 	vldr	s4, [r9]
 800cf2e:	eeb0 6a67 	vmov.f32	s12, s15
 800cf32:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800cf36:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800cf3a:	edd8 2a00 	vldr	s5, [r8]
 800cf3e:	edd9 3a01 	vldr	s7, [r9, #4]
 800cf42:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800cf46:	ed98 4a01 	vldr	s8, [r8, #4]
 800cf4a:	ed99 5a02 	vldr	s10, [r9, #8]
 800cf4e:	edd8 5a02 	vldr	s11, [r8, #8]
 800cf52:	ee16 6a10 	vmov	r6, s12
 800cf56:	eeb0 6a67 	vmov.f32	s12, s15
 800cf5a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800cf5e:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800cf62:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800cf66:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800cf6a:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800cf6e:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 800cf72:	ee16 0a10 	vmov	r0, s12
 800cf76:	eeb0 6a67 	vmov.f32	s12, s15
 800cf7a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800cf7e:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 800cf82:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800cf86:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 800cf8a:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800cf8e:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 800cf92:	ee16 1a10 	vmov	r1, s12
 800cf96:	eeb0 6a67 	vmov.f32	s12, s15
 800cf9a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800cf9e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 800cfa2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800cfa6:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 800cfaa:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800cfae:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800cfb2:	68ff      	ldr	r7, [r7, #12]
 800cfb4:	ee16 2a10 	vmov	r2, s12
 800cfb8:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800cfbc:	9624      	str	r6, [sp, #144]	; 0x90
 800cfbe:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800cfc2:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800cfc6:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800cfca:	4628      	mov	r0, r5
 800cfcc:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 800cfd0:	9b06      	ldr	r3, [sp, #24]
 800cfd2:	922d      	str	r2, [sp, #180]	; 0xb4
 800cfd4:	4a1f      	ldr	r2, [pc, #124]	; (800d054 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 800cfd6:	9317      	str	r3, [sp, #92]	; 0x5c
 800cfd8:	8812      	ldrh	r2, [r2, #0]
 800cfda:	9b07      	ldr	r3, [sp, #28]
 800cfdc:	9218      	str	r2, [sp, #96]	; 0x60
 800cfde:	9319      	str	r3, [sp, #100]	; 0x64
 800cfe0:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 800cfe4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800cfe8:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800cfec:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800cff0:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800cff4:	9731      	str	r7, [sp, #196]	; 0xc4
 800cff6:	f006 f875 	bl	80130e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800cffa:	901a      	str	r0, [sp, #104]	; 0x68
 800cffc:	4628      	mov	r0, r5
 800cffe:	f005 ff55 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d002:	901b      	str	r0, [sp, #108]	; 0x6c
 800d004:	4628      	mov	r0, r5
 800d006:	f005 ff85 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d00a:	901c      	str	r0, [sp, #112]	; 0x70
 800d00c:	4628      	mov	r0, r5
 800d00e:	f005 ff4d 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d012:	4b11      	ldr	r3, [pc, #68]	; (800d058 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800d014:	901d      	str	r0, [sp, #116]	; 0x74
 800d016:	681b      	ldr	r3, [r3, #0]
 800d018:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800d01c:	b10a      	cbz	r2, 800d022 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800d01e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800d020:	b905      	cbnz	r5, 800d024 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 800d022:	689d      	ldr	r5, [r3, #8]
 800d024:	682b      	ldr	r3, [r5, #0]
 800d026:	4620      	mov	r0, r4
 800d028:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800d02a:	f7ff fefb 	bl	800ce24 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800d02e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d032:	aa1e      	add	r2, sp, #120	; 0x78
 800d034:	a917      	add	r1, sp, #92	; 0x5c
 800d036:	9304      	str	r3, [sp, #16]
 800d038:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800d03c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800d040:	ab13      	add	r3, sp, #76	; 0x4c
 800d042:	4628      	mov	r0, r5
 800d044:	9301      	str	r3, [sp, #4]
 800d046:	ab15      	add	r3, sp, #84	; 0x54
 800d048:	9300      	str	r3, [sp, #0]
 800d04a:	ab19      	add	r3, sp, #100	; 0x64
 800d04c:	47b0      	blx	r6
 800d04e:	b033      	add	sp, #204	; 0xcc
 800d050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d054:	2400e41e 	.word	0x2400e41e
 800d058:	2400e424 	.word	0x2400e424

0800d05c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800d05c:	b570      	push	{r4, r5, r6, lr}
 800d05e:	ed2d 8b04 	vpush	{d8-d9}
 800d062:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800d066:	b098      	sub	sp, #96	; 0x60
 800d068:	4604      	mov	r4, r0
 800d06a:	460e      	mov	r6, r1
 800d06c:	2b00      	cmp	r3, #0
 800d06e:	d065      	beq.n	800d13c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800d070:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d074:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800d078:	ed9f 8a37 	vldr	s16, [pc, #220]	; 800d158 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800d07c:	ee09 3a10 	vmov	s18, r3
 800d080:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d084:	4628      	mov	r0, r5
 800d086:	ee08 3a90 	vmov	s17, r3
 800d08a:	4b34      	ldr	r3, [pc, #208]	; (800d15c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800d08c:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800d090:	930c      	str	r3, [sp, #48]	; 0x30
 800d092:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800d096:	930d      	str	r3, [sp, #52]	; 0x34
 800d098:	930e      	str	r3, [sp, #56]	; 0x38
 800d09a:	ee39 9a08 	vadd.f32	s18, s18, s16
 800d09e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d0a0:	f005 ff04 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d0a4:	ee07 0a90 	vmov	s15, r0
 800d0a8:	4628      	mov	r0, r5
 800d0aa:	ee78 8a88 	vadd.f32	s17, s17, s16
 800d0ae:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800d0b2:	f005 ff2f 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d0b6:	4b2a      	ldr	r3, [pc, #168]	; (800d160 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800d0b8:	ee07 0a90 	vmov	s15, r0
 800d0bc:	781b      	ldrb	r3, [r3, #0]
 800d0be:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800d0c2:	eef0 7a48 	vmov.f32	s15, s16
 800d0c6:	2b01      	cmp	r3, #1
 800d0c8:	d13c      	bne.n	800d144 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800d0ca:	eef0 6a69 	vmov.f32	s13, s19
 800d0ce:	ee19 3a90 	vmov	r3, s19
 800d0d2:	eeb0 6a47 	vmov.f32	s12, s14
 800d0d6:	eef0 5a47 	vmov.f32	s11, s14
 800d0da:	eef0 9a48 	vmov.f32	s19, s16
 800d0de:	eeb0 7a48 	vmov.f32	s14, s16
 800d0e2:	9314      	str	r3, [sp, #80]	; 0x50
 800d0e4:	ab14      	add	r3, sp, #80	; 0x50
 800d0e6:	2200      	movs	r2, #0
 800d0e8:	4631      	mov	r1, r6
 800d0ea:	9303      	str	r3, [sp, #12]
 800d0ec:	ab10      	add	r3, sp, #64	; 0x40
 800d0ee:	4620      	mov	r0, r4
 800d0f0:	edcd 7a04 	vstr	s15, [sp, #16]
 800d0f4:	9302      	str	r3, [sp, #8]
 800d0f6:	ab0c      	add	r3, sp, #48	; 0x30
 800d0f8:	ed8d 9a05 	vstr	s18, [sp, #20]
 800d0fc:	9301      	str	r3, [sp, #4]
 800d0fe:	ab08      	add	r3, sp, #32
 800d100:	ed8d 9a06 	vstr	s18, [sp, #24]
 800d104:	9300      	str	r3, [sp, #0]
 800d106:	ab04      	add	r3, sp, #16
 800d108:	edcd 7a07 	vstr	s15, [sp, #28]
 800d10c:	edcd 7a08 	vstr	s15, [sp, #32]
 800d110:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800d114:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800d118:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800d11c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800d120:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800d124:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800d128:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800d12c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800d130:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800d134:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800d138:	f7ff fe7e 	bl	800ce38 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800d13c:	b018      	add	sp, #96	; 0x60
 800d13e:	ecbd 8b04 	vpop	{d8-d9}
 800d142:	bd70      	pop	{r4, r5, r6, pc}
 800d144:	eef0 6a47 	vmov.f32	s13, s14
 800d148:	ee18 3a10 	vmov	r3, s16
 800d14c:	eef0 5a69 	vmov.f32	s11, s19
 800d150:	eeb0 6a48 	vmov.f32	s12, s16
 800d154:	e7c5      	b.n	800d0e2 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800d156:	bf00      	nop
 800d158:	00000000 	.word	0x00000000
 800d15c:	42c80000 	.word	0x42c80000
 800d160:	2400e41c 	.word	0x2400e41c

0800d164 <_ZN8touchgfx8TextArea8setWidthEs>:
 800d164:	b530      	push	{r4, r5, lr}
 800d166:	b085      	sub	sp, #20
 800d168:	6803      	ldr	r3, [r0, #0]
 800d16a:	4604      	mov	r4, r0
 800d16c:	8101      	strh	r1, [r0, #8]
 800d16e:	466d      	mov	r5, sp
 800d170:	4601      	mov	r1, r0
 800d172:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d176:	343c      	adds	r4, #60	; 0x3c
 800d178:	4628      	mov	r0, r5
 800d17a:	4798      	blx	r3
 800d17c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d180:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d184:	b005      	add	sp, #20
 800d186:	bd30      	pop	{r4, r5, pc}

0800d188 <_ZN8touchgfx8TextArea9setHeightEs>:
 800d188:	b530      	push	{r4, r5, lr}
 800d18a:	b085      	sub	sp, #20
 800d18c:	6803      	ldr	r3, [r0, #0]
 800d18e:	4604      	mov	r4, r0
 800d190:	8141      	strh	r1, [r0, #10]
 800d192:	466d      	mov	r5, sp
 800d194:	4601      	mov	r1, r0
 800d196:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d19a:	343c      	adds	r4, #60	; 0x3c
 800d19c:	4628      	mov	r0, r5
 800d19e:	4798      	blx	r3
 800d1a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d1a4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d1a8:	b005      	add	sp, #20
 800d1aa:	bd30      	pop	{r4, r5, pc}

0800d1ac <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800d1ac:	2200      	movs	r2, #0
 800d1ae:	8002      	strh	r2, [r0, #0]
 800d1b0:	8042      	strh	r2, [r0, #2]
 800d1b2:	8082      	strh	r2, [r0, #4]
 800d1b4:	80c2      	strh	r2, [r0, #6]
 800d1b6:	4770      	bx	lr

0800d1b8 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800d1b8:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800d1bc:	4770      	bx	lr
	...

0800d1c0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800d1c0:	b570      	push	{r4, r5, r6, lr}
 800d1c2:	6803      	ldr	r3, [r0, #0]
 800d1c4:	4604      	mov	r4, r0
 800d1c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d1c8:	460d      	mov	r5, r1
 800d1ca:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800d1cc:	4b08      	ldr	r3, [pc, #32]	; (800d1f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 800d1ce:	681b      	ldr	r3, [r3, #0]
 800d1d0:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d1d4:	4b07      	ldr	r3, [pc, #28]	; (800d1f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 800d1d6:	681b      	ldr	r3, [r3, #0]
 800d1d8:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800d1dc:	6803      	ldr	r3, [r0, #0]
 800d1de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d1e0:	4798      	blx	r3
 800d1e2:	1a29      	subs	r1, r5, r0
 800d1e4:	4633      	mov	r3, r6
 800d1e6:	4620      	mov	r0, r4
 800d1e8:	b209      	sxth	r1, r1
 800d1ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d1ee:	4718      	bx	r3
 800d1f0:	2400e47c 	.word	0x2400e47c
 800d1f4:	2400e484 	.word	0x2400e484

0800d1f8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800d1f8:	b570      	push	{r4, r5, r6, lr}
 800d1fa:	6803      	ldr	r3, [r0, #0]
 800d1fc:	4604      	mov	r4, r0
 800d1fe:	4615      	mov	r5, r2
 800d200:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d202:	4798      	blx	r3
 800d204:	6823      	ldr	r3, [r4, #0]
 800d206:	4629      	mov	r1, r5
 800d208:	4620      	mov	r0, r4
 800d20a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d20c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d210:	4718      	bx	r3

0800d212 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d212:	2000      	movs	r0, #0
 800d214:	4770      	bx	lr

0800d216 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800d216:	2000      	movs	r0, #0
 800d218:	4770      	bx	lr
	...

0800d21c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d21c:	4b07      	ldr	r3, [pc, #28]	; (800d23c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d21e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d220:	881b      	ldrh	r3, [r3, #0]
 800d222:	4293      	cmp	r3, r2
 800d224:	bf81      	itttt	hi
 800d226:	4b06      	ldrhi	r3, [pc, #24]	; (800d240 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d228:	681b      	ldrhi	r3, [r3, #0]
 800d22a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d22e:	7858      	ldrbhi	r0, [r3, #1]
 800d230:	bf8c      	ite	hi
 800d232:	f000 0003 	andhi.w	r0, r0, #3
 800d236:	2000      	movls	r0, #0
 800d238:	4770      	bx	lr
 800d23a:	bf00      	nop
 800d23c:	2400e480 	.word	0x2400e480
 800d240:	2400e47c 	.word	0x2400e47c

0800d244 <_ZN8touchgfx8TextAreaD1Ev>:
 800d244:	4770      	bx	lr
	...

0800d248 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d248:	4b11      	ldr	r3, [pc, #68]	; (800d290 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d24a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d24e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d250:	4604      	mov	r4, r0
 800d252:	881b      	ldrh	r3, [r3, #0]
 800d254:	428b      	cmp	r3, r1
 800d256:	d918      	bls.n	800d28a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d258:	6803      	ldr	r3, [r0, #0]
 800d25a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800d25c:	4b0d      	ldr	r3, [pc, #52]	; (800d294 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d25e:	6818      	ldr	r0, [r3, #0]
 800d260:	f7f6 f9aa 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d264:	6823      	ldr	r3, [r4, #0]
 800d266:	4606      	mov	r6, r0
 800d268:	4620      	mov	r0, r4
 800d26a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d26c:	4798      	blx	r3
 800d26e:	6823      	ldr	r3, [r4, #0]
 800d270:	4607      	mov	r7, r0
 800d272:	4620      	mov	r0, r4
 800d274:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d278:	4798      	blx	r3
 800d27a:	463a      	mov	r2, r7
 800d27c:	4603      	mov	r3, r0
 800d27e:	4631      	mov	r1, r6
 800d280:	4620      	mov	r0, r4
 800d282:	46ac      	mov	ip, r5
 800d284:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d288:	4760      	bx	ip
 800d28a:	2000      	movs	r0, #0
 800d28c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d290:	2400e480 	.word	0x2400e480
 800d294:	2400e488 	.word	0x2400e488

0800d298 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d298:	4b18      	ldr	r3, [pc, #96]	; (800d2fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d29a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d29e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d2a0:	4604      	mov	r4, r0
 800d2a2:	881b      	ldrh	r3, [r3, #0]
 800d2a4:	428b      	cmp	r3, r1
 800d2a6:	d926      	bls.n	800d2f6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d2a8:	4b15      	ldr	r3, [pc, #84]	; (800d300 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d2aa:	681b      	ldr	r3, [r3, #0]
 800d2ac:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d2b0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d2b4:	4b13      	ldr	r3, [pc, #76]	; (800d304 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d2b6:	7855      	ldrb	r5, [r2, #1]
 800d2b8:	681b      	ldr	r3, [r3, #0]
 800d2ba:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d2be:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d2c2:	6833      	ldr	r3, [r6, #0]
 800d2c4:	69df      	ldr	r7, [r3, #28]
 800d2c6:	4b10      	ldr	r3, [pc, #64]	; (800d308 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d2c8:	6818      	ldr	r0, [r3, #0]
 800d2ca:	f7f6 f975 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d2ce:	6823      	ldr	r3, [r4, #0]
 800d2d0:	4680      	mov	r8, r0
 800d2d2:	4620      	mov	r0, r4
 800d2d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d2d6:	4798      	blx	r3
 800d2d8:	6823      	ldr	r3, [r4, #0]
 800d2da:	4681      	mov	r9, r0
 800d2dc:	4620      	mov	r0, r4
 800d2de:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d2e2:	4798      	blx	r3
 800d2e4:	464b      	mov	r3, r9
 800d2e6:	9000      	str	r0, [sp, #0]
 800d2e8:	4642      	mov	r2, r8
 800d2ea:	4629      	mov	r1, r5
 800d2ec:	4630      	mov	r0, r6
 800d2ee:	47b8      	blx	r7
 800d2f0:	b003      	add	sp, #12
 800d2f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d2f6:	2000      	movs	r0, #0
 800d2f8:	e7fa      	b.n	800d2f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d2fa:	bf00      	nop
 800d2fc:	2400e480 	.word	0x2400e480
 800d300:	2400e47c 	.word	0x2400e47c
 800d304:	2400e484 	.word	0x2400e484
 800d308:	2400e488 	.word	0x2400e488

0800d30c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d30c:	b40e      	push	{r1, r2, r3}
 800d30e:	4b30      	ldr	r3, [pc, #192]	; (800d3d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d310:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d314:	881a      	ldrh	r2, [r3, #0]
 800d316:	b09d      	sub	sp, #116	; 0x74
 800d318:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d31a:	4604      	mov	r4, r0
 800d31c:	429a      	cmp	r2, r3
 800d31e:	d954      	bls.n	800d3ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d320:	aa26      	add	r2, sp, #152	; 0x98
 800d322:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800d3d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d326:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800d3d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d32a:	9202      	str	r2, [sp, #8]
 800d32c:	f8d9 2000 	ldr.w	r2, [r9]
 800d330:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d334:	f8d8 3000 	ldr.w	r3, [r8]
 800d338:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d33c:	682b      	ldr	r3, [r5, #0]
 800d33e:	4628      	mov	r0, r5
 800d340:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d342:	4798      	blx	r3
 800d344:	4606      	mov	r6, r0
 800d346:	b207      	sxth	r7, r0
 800d348:	a803      	add	r0, sp, #12
 800d34a:	f004 fd9d 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 800d34e:	682b      	ldr	r3, [r5, #0]
 800d350:	4628      	mov	r0, r5
 800d352:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d354:	4798      	blx	r3
 800d356:	682b      	ldr	r3, [r5, #0]
 800d358:	4682      	mov	sl, r0
 800d35a:	4628      	mov	r0, r5
 800d35c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d35e:	4798      	blx	r3
 800d360:	4653      	mov	r3, sl
 800d362:	9000      	str	r0, [sp, #0]
 800d364:	a803      	add	r0, sp, #12
 800d366:	9a02      	ldr	r2, [sp, #8]
 800d368:	9925      	ldr	r1, [sp, #148]	; 0x94
 800d36a:	f004 fde8 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d36e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d370:	f8d9 3000 	ldr.w	r3, [r9]
 800d374:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800d378:	8925      	ldrh	r5, [r4, #8]
 800d37a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d37e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d382:	eba5 050c 	sub.w	r5, r5, ip
 800d386:	784a      	ldrb	r2, [r1, #1]
 800d388:	f8d8 3000 	ldr.w	r3, [r8]
 800d38c:	b22d      	sxth	r5, r5
 800d38e:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800d392:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d396:	9500      	str	r5, [sp, #0]
 800d398:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d39c:	a803      	add	r0, sp, #12
 800d39e:	f002 fb03 	bl	800f9a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d3a2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800d3a6:	b203      	sxth	r3, r0
 800d3a8:	18b9      	adds	r1, r7, r2
 800d3aa:	2900      	cmp	r1, #0
 800d3ac:	dd0b      	ble.n	800d3c6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d3ae:	3b01      	subs	r3, #1
 800d3b0:	fb13 f302 	smulbb	r3, r3, r2
 800d3b4:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d3b8:	b21f      	sxth	r7, r3
 800d3ba:	4638      	mov	r0, r7
 800d3bc:	b01d      	add	sp, #116	; 0x74
 800d3be:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d3c2:	b003      	add	sp, #12
 800d3c4:	4770      	bx	lr
 800d3c6:	2b00      	cmp	r3, #0
 800d3c8:	dcf7      	bgt.n	800d3ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d3ca:	2700      	movs	r7, #0
 800d3cc:	e7f5      	b.n	800d3ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d3ce:	bf00      	nop
 800d3d0:	2400e480 	.word	0x2400e480
 800d3d4:	2400e47c 	.word	0x2400e47c
 800d3d8:	2400e484 	.word	0x2400e484

0800d3dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d3dc:	4bbd      	ldr	r3, [pc, #756]	; (800d6d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d3de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3e2:	460c      	mov	r4, r1
 800d3e4:	881b      	ldrh	r3, [r3, #0]
 800d3e6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800d3e8:	b0a9      	sub	sp, #164	; 0xa4
 800d3ea:	4680      	mov	r8, r0
 800d3ec:	428b      	cmp	r3, r1
 800d3ee:	d809      	bhi.n	800d404 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d3f0:	2300      	movs	r3, #0
 800d3f2:	f04f 32ff 	mov.w	r2, #4294967295
 800d3f6:	6083      	str	r3, [r0, #8]
 800d3f8:	e9c0 3200 	strd	r3, r2, [r0]
 800d3fc:	4640      	mov	r0, r8
 800d3fe:	b029      	add	sp, #164	; 0xa4
 800d400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d404:	4eb4      	ldr	r6, [pc, #720]	; (800d6d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800d406:	6833      	ldr	r3, [r6, #0]
 800d408:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d40c:	4bb3      	ldr	r3, [pc, #716]	; (800d6dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800d40e:	681b      	ldr	r3, [r3, #0]
 800d410:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d414:	4bb2      	ldr	r3, [pc, #712]	; (800d6e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d416:	6818      	ldr	r0, [r3, #0]
 800d418:	f7f6 f8ce 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d41c:	682b      	ldr	r3, [r5, #0]
 800d41e:	4681      	mov	r9, r0
 800d420:	4628      	mov	r0, r5
 800d422:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d424:	4798      	blx	r3
 800d426:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800d428:	b203      	sxth	r3, r0
 800d42a:	4682      	mov	sl, r0
 800d42c:	4407      	add	r7, r0
 800d42e:	a80f      	add	r0, sp, #60	; 0x3c
 800d430:	9304      	str	r3, [sp, #16]
 800d432:	b2bb      	uxth	r3, r7
 800d434:	9303      	str	r3, [sp, #12]
 800d436:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800d43a:	2b00      	cmp	r3, #0
 800d43c:	f040 80a5 	bne.w	800d58a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800d440:	f004 fd22 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 800d444:	682b      	ldr	r3, [r5, #0]
 800d446:	4628      	mov	r0, r5
 800d448:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d44a:	4798      	blx	r3
 800d44c:	682b      	ldr	r3, [r5, #0]
 800d44e:	4606      	mov	r6, r0
 800d450:	4628      	mov	r0, r5
 800d452:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d454:	4798      	blx	r3
 800d456:	6823      	ldr	r3, [r4, #0]
 800d458:	4607      	mov	r7, r0
 800d45a:	4620      	mov	r0, r4
 800d45c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d45e:	4798      	blx	r3
 800d460:	6823      	ldr	r3, [r4, #0]
 800d462:	4683      	mov	fp, r0
 800d464:	4620      	mov	r0, r4
 800d466:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d46a:	4798      	blx	r3
 800d46c:	463b      	mov	r3, r7
 800d46e:	4649      	mov	r1, r9
 800d470:	4632      	mov	r2, r6
 800d472:	2600      	movs	r6, #0
 800d474:	e9cd b000 	strd	fp, r0, [sp]
 800d478:	a80f      	add	r0, sp, #60	; 0x3c
 800d47a:	4637      	mov	r7, r6
 800d47c:	f004 fd74 	bl	8011f68 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d480:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d484:	f8df b250 	ldr.w	fp, [pc, #592]	; 800d6d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d488:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d48c:	bf0c      	ite	eq
 800d48e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800d492:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800d496:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d498:	4629      	mov	r1, r5
 800d49a:	f8db 3000 	ldr.w	r3, [fp]
 800d49e:	a80f      	add	r0, sp, #60	; 0x3c
 800d4a0:	3701      	adds	r7, #1
 800d4a2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d4a6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d4aa:	b2bf      	uxth	r7, r7
 800d4ac:	785b      	ldrb	r3, [r3, #1]
 800d4ae:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d4b2:	f001 ff94 	bl	800f3de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d4b6:	9b03      	ldr	r3, [sp, #12]
 800d4b8:	4286      	cmp	r6, r0
 800d4ba:	eba9 0903 	sub.w	r9, r9, r3
 800d4be:	bfb8      	it	lt
 800d4c0:	4606      	movlt	r6, r0
 800d4c2:	a80f      	add	r0, sp, #60	; 0x3c
 800d4c4:	fa0f f989 	sxth.w	r9, r9
 800d4c8:	b236      	sxth	r6, r6
 800d4ca:	f004 fd04 	bl	8011ed6 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d4ce:	b918      	cbnz	r0, 800d4d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d4d0:	7a2b      	ldrb	r3, [r5, #8]
 800d4d2:	444b      	add	r3, r9
 800d4d4:	2b00      	cmp	r3, #0
 800d4d6:	dcde      	bgt.n	800d496 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800d4d8:	9b03      	ldr	r3, [sp, #12]
 800d4da:	4620      	mov	r0, r4
 800d4dc:	9a04      	ldr	r2, [sp, #16]
 800d4de:	fb13 f707 	smulbb	r7, r3, r7
 800d4e2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d4e4:	f895 9009 	ldrb.w	r9, [r5, #9]
 800d4e8:	1aff      	subs	r7, r7, r3
 800d4ea:	b2bf      	uxth	r7, r7
 800d4ec:	b23b      	sxth	r3, r7
 800d4ee:	429a      	cmp	r2, r3
 800d4f0:	bfa8      	it	ge
 800d4f2:	4657      	movge	r7, sl
 800d4f4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d4f8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d4fc:	6823      	ldr	r3, [r4, #0]
 800d4fe:	444f      	add	r7, r9
 800d500:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d502:	bf08      	it	eq
 800d504:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800d508:	fa1f f987 	uxth.w	r9, r7
 800d50c:	bf18      	it	ne
 800d50e:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800d512:	4798      	blx	r3
 800d514:	2801      	cmp	r0, #1
 800d516:	fa0f f789 	sxth.w	r7, r9
 800d51a:	b2b3      	uxth	r3, r6
 800d51c:	f000 80e2 	beq.w	800d6e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800d520:	2802      	cmp	r0, #2
 800d522:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800d526:	f000 80e3 	beq.w	800d6f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800d52a:	7aea      	ldrb	r2, [r5, #11]
 800d52c:	b236      	sxth	r6, r6
 800d52e:	7b2d      	ldrb	r5, [r5, #12]
 800d530:	1ab6      	subs	r6, r6, r2
 800d532:	442a      	add	r2, r5
 800d534:	fa1f fa86 	uxth.w	sl, r6
 800d538:	4413      	add	r3, r2
 800d53a:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800d53e:	fa0f fb8a 	sxth.w	fp, sl
 800d542:	b29b      	uxth	r3, r3
 800d544:	2a02      	cmp	r2, #2
 800d546:	b21e      	sxth	r6, r3
 800d548:	f000 80d6 	beq.w	800d6f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800d54c:	2a03      	cmp	r2, #3
 800d54e:	f000 80de 	beq.w	800d70e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800d552:	2a01      	cmp	r2, #1
 800d554:	f040 80e6 	bne.w	800d724 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800d558:	8925      	ldrh	r5, [r4, #8]
 800d55a:	4633      	mov	r3, r6
 800d55c:	463e      	mov	r6, r7
 800d55e:	eba5 0909 	sub.w	r9, r5, r9
 800d562:	461f      	mov	r7, r3
 800d564:	465d      	mov	r5, fp
 800d566:	fa0f fb89 	sxth.w	fp, r9
 800d56a:	4b5d      	ldr	r3, [pc, #372]	; (800d6e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d56c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d56e:	6818      	ldr	r0, [r3, #0]
 800d570:	f7f6 f822 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d574:	f8a8 b000 	strh.w	fp, [r8]
 800d578:	f8a8 5002 	strh.w	r5, [r8, #2]
 800d57c:	f8a8 6004 	strh.w	r6, [r8, #4]
 800d580:	f8a8 7006 	strh.w	r7, [r8, #6]
 800d584:	f8c8 0008 	str.w	r0, [r8, #8]
 800d588:	e738      	b.n	800d3fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800d58a:	f004 fc7d 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 800d58e:	682b      	ldr	r3, [r5, #0]
 800d590:	4628      	mov	r0, r5
 800d592:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d594:	4798      	blx	r3
 800d596:	682b      	ldr	r3, [r5, #0]
 800d598:	4607      	mov	r7, r0
 800d59a:	4628      	mov	r0, r5
 800d59c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d59e:	4798      	blx	r3
 800d5a0:	6823      	ldr	r3, [r4, #0]
 800d5a2:	4683      	mov	fp, r0
 800d5a4:	4620      	mov	r0, r4
 800d5a6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d5a8:	4798      	blx	r3
 800d5aa:	6822      	ldr	r2, [r4, #0]
 800d5ac:	9005      	str	r0, [sp, #20]
 800d5ae:	4620      	mov	r0, r4
 800d5b0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800d5b4:	4790      	blx	r2
 800d5b6:	9b05      	ldr	r3, [sp, #20]
 800d5b8:	463a      	mov	r2, r7
 800d5ba:	4649      	mov	r1, r9
 800d5bc:	9001      	str	r0, [sp, #4]
 800d5be:	a80f      	add	r0, sp, #60	; 0x3c
 800d5c0:	9300      	str	r3, [sp, #0]
 800d5c2:	465b      	mov	r3, fp
 800d5c4:	f004 fcd0 	bl	8011f68 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d5c8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d5cc:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800d5d0:	af0f      	add	r7, sp, #60	; 0x3c
 800d5d2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d5d6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d5da:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d5dc:	bf0a      	itet	eq
 800d5de:	464a      	moveq	r2, r9
 800d5e0:	461a      	movne	r2, r3
 800d5e2:	4699      	moveq	r9, r3
 800d5e4:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800d5e8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800d5ec:	1ad2      	subs	r2, r2, r3
 800d5ee:	6833      	ldr	r3, [r6, #0]
 800d5f0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800d5f4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d5f8:	7859      	ldrb	r1, [r3, #1]
 800d5fa:	2300      	movs	r3, #0
 800d5fc:	9707      	str	r7, [sp, #28]
 800d5fe:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800d602:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d606:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d60a:	f88d 1020 	strb.w	r1, [sp, #32]
 800d60e:	9509      	str	r5, [sp, #36]	; 0x24
 800d610:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800d614:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800d618:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800d61c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d620:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800d624:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800d628:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800d62c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d630:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d634:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800d638:	b350      	cbz	r0, 800d690 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d63a:	682b      	ldr	r3, [r5, #0]
 800d63c:	4628      	mov	r0, r5
 800d63e:	695b      	ldr	r3, [r3, #20]
 800d640:	4798      	blx	r3
 800d642:	4607      	mov	r7, r0
 800d644:	b320      	cbz	r0, 800d690 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d646:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d648:	4639      	mov	r1, r7
 800d64a:	6803      	ldr	r3, [r0, #0]
 800d64c:	68db      	ldr	r3, [r3, #12]
 800d64e:	4798      	blx	r3
 800d650:	4606      	mov	r6, r0
 800d652:	b1e8      	cbz	r0, 800d690 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d654:	7b43      	ldrb	r3, [r0, #13]
 800d656:	7a82      	ldrb	r2, [r0, #10]
 800d658:	005b      	lsls	r3, r3, #1
 800d65a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d65e:	4313      	orrs	r3, r2
 800d660:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d664:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800d668:	2b06      	cmp	r3, #6
 800d66a:	d111      	bne.n	800d690 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d66c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d66e:	4632      	mov	r2, r6
 800d670:	4639      	mov	r1, r7
 800d672:	6803      	ldr	r3, [r0, #0]
 800d674:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d676:	4798      	blx	r3
 800d678:	7b73      	ldrb	r3, [r6, #13]
 800d67a:	005b      	lsls	r3, r3, #1
 800d67c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d680:	7ab3      	ldrb	r3, [r6, #10]
 800d682:	4313      	orrs	r3, r2
 800d684:	4418      	add	r0, r3
 800d686:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d68a:	4418      	add	r0, r3
 800d68c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800d690:	2600      	movs	r6, #0
 800d692:	4637      	mov	r7, r6
 800d694:	a806      	add	r0, sp, #24
 800d696:	3701      	adds	r7, #1
 800d698:	f002 f883 	bl	800f7a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d69c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800d6a0:	9b03      	ldr	r3, [sp, #12]
 800d6a2:	b2bf      	uxth	r7, r7
 800d6a4:	4286      	cmp	r6, r0
 800d6a6:	eba9 0903 	sub.w	r9, r9, r3
 800d6aa:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d6ae:	bfb8      	it	lt
 800d6b0:	4606      	movlt	r6, r0
 800d6b2:	fa0f f989 	sxth.w	r9, r9
 800d6b6:	b236      	sxth	r6, r6
 800d6b8:	2b00      	cmp	r3, #0
 800d6ba:	f43f af0d 	beq.w	800d4d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d6be:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800d6c2:	2b00      	cmp	r3, #0
 800d6c4:	f47f af08 	bne.w	800d4d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d6c8:	7a2b      	ldrb	r3, [r5, #8]
 800d6ca:	444b      	add	r3, r9
 800d6cc:	2b00      	cmp	r3, #0
 800d6ce:	dce1      	bgt.n	800d694 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800d6d0:	e702      	b.n	800d4d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d6d2:	bf00      	nop
 800d6d4:	2400e480 	.word	0x2400e480
 800d6d8:	2400e47c 	.word	0x2400e47c
 800d6dc:	2400e484 	.word	0x2400e484
 800d6e0:	2400e488 	.word	0x2400e488
 800d6e4:	ebaa 0606 	sub.w	r6, sl, r6
 800d6e8:	2002      	movs	r0, #2
 800d6ea:	fb96 f6f0 	sdiv	r6, r6, r0
 800d6ee:	e71c      	b.n	800d52a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d6f0:	441e      	add	r6, r3
 800d6f2:	ebaa 0606 	sub.w	r6, sl, r6
 800d6f6:	e718      	b.n	800d52a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d6f8:	8925      	ldrh	r5, [r4, #8]
 800d6fa:	1aed      	subs	r5, r5, r3
 800d6fc:	eba5 050a 	sub.w	r5, r5, sl
 800d700:	fa0f fb85 	sxth.w	fp, r5
 800d704:	8965      	ldrh	r5, [r4, #10]
 800d706:	eba5 0509 	sub.w	r5, r5, r9
 800d70a:	b22d      	sxth	r5, r5
 800d70c:	e72d      	b.n	800d56a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800d70e:	8965      	ldrh	r5, [r4, #10]
 800d710:	f04f 0b00 	mov.w	fp, #0
 800d714:	1aed      	subs	r5, r5, r3
 800d716:	4633      	mov	r3, r6
 800d718:	463e      	mov	r6, r7
 800d71a:	eba5 050a 	sub.w	r5, r5, sl
 800d71e:	461f      	mov	r7, r3
 800d720:	b22d      	sxth	r5, r5
 800d722:	e722      	b.n	800d56a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800d724:	2500      	movs	r5, #0
 800d726:	e720      	b.n	800d56a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800d728 <_ZN8touchgfx8TextAreaD0Ev>:
 800d728:	b510      	push	{r4, lr}
 800d72a:	4604      	mov	r4, r0
 800d72c:	2148      	movs	r1, #72	; 0x48
 800d72e:	f013 fb34 	bl	8020d9a <_ZdlPvj>
 800d732:	4620      	mov	r0, r4
 800d734:	bd10      	pop	{r4, pc}
	...

0800d738 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800d738:	b513      	push	{r0, r1, r4, lr}
 800d73a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d73e:	4604      	mov	r4, r0
 800d740:	b1fb      	cbz	r3, 800d782 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d742:	4b16      	ldr	r3, [pc, #88]	; (800d79c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800d744:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d746:	881b      	ldrh	r3, [r3, #0]
 800d748:	428b      	cmp	r3, r1
 800d74a:	d91a      	bls.n	800d782 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d74c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d750:	2b00      	cmp	r3, #0
 800d752:	dd16      	ble.n	800d782 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d754:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d758:	2b00      	cmp	r3, #0
 800d75a:	dd12      	ble.n	800d782 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d75c:	4b10      	ldr	r3, [pc, #64]	; (800d7a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800d75e:	6818      	ldr	r0, [r3, #0]
 800d760:	f7f5 ff2a 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d764:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d768:	6822      	ldr	r2, [r4, #0]
 800d76a:	2b00      	cmp	r3, #0
 800d76c:	db06      	blt.n	800d77c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d76e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d772:	2b00      	cmp	r3, #0
 800d774:	db02      	blt.n	800d77c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d776:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d778:	4298      	cmp	r0, r3
 800d77a:	d004      	beq.n	800d786 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800d77c:	6953      	ldr	r3, [r2, #20]
 800d77e:	4620      	mov	r0, r4
 800d780:	4798      	blx	r3
 800d782:	b002      	add	sp, #8
 800d784:	bd10      	pop	{r4, pc}
 800d786:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800d78a:	466b      	mov	r3, sp
 800d78c:	6912      	ldr	r2, [r2, #16]
 800d78e:	c903      	ldmia	r1, {r0, r1}
 800d790:	e883 0003 	stmia.w	r3, {r0, r1}
 800d794:	4619      	mov	r1, r3
 800d796:	4620      	mov	r0, r4
 800d798:	4790      	blx	r2
 800d79a:	e7f2      	b.n	800d782 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d79c:	2400e480 	.word	0x2400e480
 800d7a0:	2400e488 	.word	0x2400e488

0800d7a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d7a4:	4b45      	ldr	r3, [pc, #276]	; (800d8bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800d7a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7aa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d7ac:	b08e      	sub	sp, #56	; 0x38
 800d7ae:	881b      	ldrh	r3, [r3, #0]
 800d7b0:	4604      	mov	r4, r0
 800d7b2:	4293      	cmp	r3, r2
 800d7b4:	d97e      	bls.n	800d8b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d7b6:	6808      	ldr	r0, [r1, #0]
 800d7b8:	ab05      	add	r3, sp, #20
 800d7ba:	6849      	ldr	r1, [r1, #4]
 800d7bc:	4d40      	ldr	r5, [pc, #256]	; (800d8c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800d7be:	c303      	stmia	r3!, {r0, r1}
 800d7c0:	4611      	mov	r1, r2
 800d7c2:	6828      	ldr	r0, [r5, #0]
 800d7c4:	f7f5 fef8 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7c8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d7cc:	2b00      	cmp	r3, #0
 800d7ce:	db11      	blt.n	800d7f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d7d0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d7d4:	2b00      	cmp	r3, #0
 800d7d6:	db0d      	blt.n	800d7f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d7d8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d7da:	4298      	cmp	r0, r3
 800d7dc:	d10a      	bne.n	800d7f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d7de:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800d7e2:	ab09      	add	r3, sp, #36	; 0x24
 800d7e4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d7e8:	e883 0003 	stmia.w	r3, {r0, r1}
 800d7ec:	4619      	mov	r1, r3
 800d7ee:	a805      	add	r0, sp, #20
 800d7f0:	f7fd f954 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800d7f4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d7f8:	2b00      	cmp	r3, #0
 800d7fa:	dd5b      	ble.n	800d8b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d7fc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d800:	2b00      	cmp	r3, #0
 800d802:	dd57      	ble.n	800d8b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d804:	4f2f      	ldr	r7, [pc, #188]	; (800d8c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800d806:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d808:	683b      	ldr	r3, [r7, #0]
 800d80a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d80e:	4b2e      	ldr	r3, [pc, #184]	; (800d8c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800d810:	681b      	ldr	r3, [r3, #0]
 800d812:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800d816:	2e00      	cmp	r6, #0
 800d818:	d04c      	beq.n	800d8b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d81a:	6823      	ldr	r3, [r4, #0]
 800d81c:	4620      	mov	r0, r4
 800d81e:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800d822:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d824:	4798      	blx	r3
 800d826:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d828:	683b      	ldr	r3, [r7, #0]
 800d82a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800d82e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d832:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800d836:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800d83a:	785b      	ldrb	r3, [r3, #1]
 800d83c:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800d840:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d844:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d846:	9609      	str	r6, [sp, #36]	; 0x24
 800d848:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d84c:	4b1f      	ldr	r3, [pc, #124]	; (800d8cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800d84e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d852:	681b      	ldr	r3, [r3, #0]
 800d854:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800d858:	910b      	str	r1, [sp, #44]	; 0x2c
 800d85a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800d85e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800d862:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800d866:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800d86a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800d86e:	b10a      	cbz	r2, 800d874 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800d870:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800d872:	b906      	cbnz	r6, 800d876 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800d874:	689e      	ldr	r6, [r3, #8]
 800d876:	af07      	add	r7, sp, #28
 800d878:	4621      	mov	r1, r4
 800d87a:	4638      	mov	r0, r7
 800d87c:	f003 fe56 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d880:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d882:	6828      	ldr	r0, [r5, #0]
 800d884:	f7f5 fe98 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d888:	6823      	ldr	r3, [r4, #0]
 800d88a:	4605      	mov	r5, r0
 800d88c:	4620      	mov	r0, r4
 800d88e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d890:	4798      	blx	r3
 800d892:	6823      	ldr	r3, [r4, #0]
 800d894:	4680      	mov	r8, r0
 800d896:	4620      	mov	r0, r4
 800d898:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d89c:	4798      	blx	r3
 800d89e:	ab09      	add	r3, sp, #36	; 0x24
 800d8a0:	9501      	str	r5, [sp, #4]
 800d8a2:	9300      	str	r3, [sp, #0]
 800d8a4:	ab05      	add	r3, sp, #20
 800d8a6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800d8aa:	4630      	mov	r0, r6
 800d8ac:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d8b0:	f7f5 fe34 	bl	800351c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d8b4:	b00e      	add	sp, #56	; 0x38
 800d8b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8ba:	bf00      	nop
 800d8bc:	2400e480 	.word	0x2400e480
 800d8c0:	2400e488 	.word	0x2400e488
 800d8c4:	2400e47c 	.word	0x2400e47c
 800d8c8:	2400e484 	.word	0x2400e484
 800d8cc:	2400e424 	.word	0x2400e424

0800d8d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800d8d0:	b570      	push	{r4, r5, r6, lr}
 800d8d2:	6803      	ldr	r3, [r0, #0]
 800d8d4:	4604      	mov	r4, r0
 800d8d6:	4615      	mov	r5, r2
 800d8d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d8da:	4798      	blx	r3
 800d8dc:	6823      	ldr	r3, [r4, #0]
 800d8de:	4629      	mov	r1, r5
 800d8e0:	4620      	mov	r0, r4
 800d8e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d8e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d8e8:	4718      	bx	r3
	...

0800d8ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d8ec:	b538      	push	{r3, r4, r5, lr}
 800d8ee:	4b0e      	ldr	r3, [pc, #56]	; (800d928 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800d8f0:	4604      	mov	r4, r0
 800d8f2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d8f4:	881b      	ldrh	r3, [r3, #0]
 800d8f6:	429a      	cmp	r2, r3
 800d8f8:	d214      	bcs.n	800d924 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800d8fa:	6803      	ldr	r3, [r0, #0]
 800d8fc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d8fe:	4798      	blx	r3
 800d900:	6823      	ldr	r3, [r4, #0]
 800d902:	4605      	mov	r5, r0
 800d904:	4620      	mov	r0, r4
 800d906:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d908:	4798      	blx	r3
 800d90a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d90e:	b22d      	sxth	r5, r5
 800d910:	4601      	mov	r1, r0
 800d912:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d916:	bf06      	itte	eq
 800d918:	4602      	moveq	r2, r0
 800d91a:	4629      	moveq	r1, r5
 800d91c:	462a      	movne	r2, r5
 800d91e:	4620      	mov	r0, r4
 800d920:	f7ff ffd6 	bl	800d8d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800d924:	bd38      	pop	{r3, r4, r5, pc}
 800d926:	bf00      	nop
 800d928:	2400e480 	.word	0x2400e480

0800d92c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800d92c:	b530      	push	{r4, r5, lr}
 800d92e:	888b      	ldrh	r3, [r1, #4]
 800d930:	b085      	sub	sp, #20
 800d932:	4604      	mov	r4, r0
 800d934:	8583      	strh	r3, [r0, #44]	; 0x2c
 800d936:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d93a:	b923      	cbnz	r3, 800d946 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d93c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d940:	b90b      	cbnz	r3, 800d946 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d942:	f7ff ffd3 	bl	800d8ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d946:	6823      	ldr	r3, [r4, #0]
 800d948:	466d      	mov	r5, sp
 800d94a:	4621      	mov	r1, r4
 800d94c:	343c      	adds	r4, #60	; 0x3c
 800d94e:	4628      	mov	r0, r5
 800d950:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d954:	4798      	blx	r3
 800d956:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d95a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d95e:	b005      	add	sp, #20
 800d960:	bd30      	pop	{r4, r5, pc}

0800d962 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d962:	2300      	movs	r3, #0
 800d964:	8083      	strh	r3, [r0, #4]
 800d966:	80c3      	strh	r3, [r0, #6]
 800d968:	8003      	strh	r3, [r0, #0]
 800d96a:	8043      	strh	r3, [r0, #2]
 800d96c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d970:	2bff      	cmp	r3, #255	; 0xff
 800d972:	bf01      	itttt	eq
 800d974:	890b      	ldrheq	r3, [r1, #8]
 800d976:	8083      	strheq	r3, [r0, #4]
 800d978:	894b      	ldrheq	r3, [r1, #10]
 800d97a:	80c3      	strheq	r3, [r0, #6]
 800d97c:	4770      	bx	lr
	...

0800d980 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d980:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d982:	4604      	mov	r4, r0
 800d984:	466b      	mov	r3, sp
 800d986:	6808      	ldr	r0, [r1, #0]
 800d988:	6849      	ldr	r1, [r1, #4]
 800d98a:	c303      	stmia	r3!, {r0, r1}
 800d98c:	6823      	ldr	r3, [r4, #0]
 800d98e:	4669      	mov	r1, sp
 800d990:	4620      	mov	r0, r4
 800d992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d994:	4798      	blx	r3
 800d996:	4b08      	ldr	r3, [pc, #32]	; (800d9b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d998:	681b      	ldr	r3, [r3, #0]
 800d99a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800d99e:	b10a      	cbz	r2, 800d9a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d9a0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d9a2:	b900      	cbnz	r0, 800d9a6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d9a4:	6898      	ldr	r0, [r3, #8]
 800d9a6:	6803      	ldr	r3, [r0, #0]
 800d9a8:	4669      	mov	r1, sp
 800d9aa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d9ac:	6a1d      	ldr	r5, [r3, #32]
 800d9ae:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d9b2:	47a8      	blx	r5
 800d9b4:	b003      	add	sp, #12
 800d9b6:	bd30      	pop	{r4, r5, pc}
 800d9b8:	2400e424 	.word	0x2400e424

0800d9bc <_ZN8touchgfx3BoxD1Ev>:
 800d9bc:	4770      	bx	lr

0800d9be <_ZN8touchgfx3BoxD0Ev>:
 800d9be:	b510      	push	{r4, lr}
 800d9c0:	4604      	mov	r4, r0
 800d9c2:	212c      	movs	r1, #44	; 0x2c
 800d9c4:	f013 f9e9 	bl	8020d9a <_ZdlPvj>
 800d9c8:	4620      	mov	r0, r4
 800d9ca:	bd10      	pop	{r4, pc}

0800d9cc <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d9cc:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800d9d0:	b12a      	cbz	r2, 800d9de <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d9d2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d9d6:	b112      	cbz	r2, 800d9de <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d9d8:	6803      	ldr	r3, [r0, #0]
 800d9da:	695b      	ldr	r3, [r3, #20]
 800d9dc:	4718      	bx	r3
 800d9de:	4770      	bx	lr

0800d9e0 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800d9e0:	4770      	bx	lr

0800d9e2 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d9e2:	b510      	push	{r4, lr}
 800d9e4:	4604      	mov	r4, r0
 800d9e6:	2134      	movs	r1, #52	; 0x34
 800d9e8:	f013 f9d7 	bl	8020d9a <_ZdlPvj>
 800d9ec:	4620      	mov	r0, r4
 800d9ee:	bd10      	pop	{r4, pc}

0800d9f0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d9f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9f4:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d9f6:	4604      	mov	r4, r0
 800d9f8:	460e      	mov	r6, r1
 800d9fa:	b08e      	sub	sp, #56	; 0x38
 800d9fc:	b218      	sxth	r0, r3
 800d9fe:	8921      	ldrh	r1, [r4, #8]
 800da00:	005b      	lsls	r3, r3, #1
 800da02:	8962      	ldrh	r2, [r4, #10]
 800da04:	f8ad 0000 	strh.w	r0, [sp]
 800da08:	b29b      	uxth	r3, r3
 800da0a:	f8ad 0002 	strh.w	r0, [sp, #2]
 800da0e:	1ac9      	subs	r1, r1, r3
 800da10:	1ad3      	subs	r3, r2, r3
 800da12:	b209      	sxth	r1, r1
 800da14:	b21b      	sxth	r3, r3
 800da16:	2900      	cmp	r1, #0
 800da18:	f8ad 1004 	strh.w	r1, [sp, #4]
 800da1c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800da20:	dd5e      	ble.n	800dae0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800da22:	2b00      	cmp	r3, #0
 800da24:	dd5c      	ble.n	800dae0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800da26:	6830      	ldr	r0, [r6, #0]
 800da28:	ab02      	add	r3, sp, #8
 800da2a:	6871      	ldr	r1, [r6, #4]
 800da2c:	c303      	stmia	r3!, {r0, r1}
 800da2e:	4669      	mov	r1, sp
 800da30:	a802      	add	r0, sp, #8
 800da32:	f7fd f833 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800da36:	4620      	mov	r0, r4
 800da38:	a902      	add	r1, sp, #8
 800da3a:	f7ff ffa1 	bl	800d980 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800da3e:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800da40:	2800      	cmp	r0, #0
 800da42:	d05f      	beq.n	800db04 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800da44:	8963      	ldrh	r3, [r4, #10]
 800da46:	b202      	sxth	r2, r0
 800da48:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800da4c:	2500      	movs	r5, #0
 800da4e:	1a1f      	subs	r7, r3, r0
 800da50:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800da54:	f8ad 101c 	strh.w	r1, [sp, #28]
 800da58:	b21b      	sxth	r3, r3
 800da5a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800da5e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800da62:	af04      	add	r7, sp, #16
 800da64:	1a09      	subs	r1, r1, r0
 800da66:	9506      	str	r5, [sp, #24]
 800da68:	f8ad 201e 	strh.w	r2, [sp, #30]
 800da6c:	f8ad 5020 	strh.w	r5, [sp, #32]
 800da70:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800da74:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800da78:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800da7c:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800da80:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800da84:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800da88:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800da8c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800da90:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800da94:	ab06      	add	r3, sp, #24
 800da96:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800da9a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800da9e:	e887 0003 	stmia.w	r7, {r0, r1}
 800daa2:	4631      	mov	r1, r6
 800daa4:	4638      	mov	r0, r7
 800daa6:	f7fc fff9 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800daaa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800daae:	2b00      	cmp	r3, #0
 800dab0:	dd12      	ble.n	800dad8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800dab2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800dab6:	2b00      	cmp	r3, #0
 800dab8:	dd0e      	ble.n	800dad8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800daba:	6823      	ldr	r3, [r4, #0]
 800dabc:	4639      	mov	r1, r7
 800dabe:	4620      	mov	r0, r4
 800dac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dac2:	4798      	blx	r3
 800dac4:	f7f4 fcac 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800dac8:	6803      	ldr	r3, [r0, #0]
 800daca:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dacc:	4639      	mov	r1, r7
 800dace:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800dad2:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800dad6:	47c0      	blx	r8
 800dad8:	3501      	adds	r5, #1
 800dada:	2d04      	cmp	r5, #4
 800dadc:	d1da      	bne.n	800da94 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800dade:	e011      	b.n	800db04 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800dae0:	6830      	ldr	r0, [r6, #0]
 800dae2:	ab06      	add	r3, sp, #24
 800dae4:	6871      	ldr	r1, [r6, #4]
 800dae6:	c303      	stmia	r3!, {r0, r1}
 800dae8:	6823      	ldr	r3, [r4, #0]
 800daea:	a906      	add	r1, sp, #24
 800daec:	4620      	mov	r0, r4
 800daee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800daf0:	4798      	blx	r3
 800daf2:	f7f4 fc95 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800daf6:	6803      	ldr	r3, [r0, #0]
 800daf8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dafa:	a906      	add	r1, sp, #24
 800dafc:	6a1d      	ldr	r5, [r3, #32]
 800dafe:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800db02:	47a8      	blx	r5
 800db04:	b00e      	add	sp, #56	; 0x38
 800db06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800db0a <_ZN8touchgfx5ImageD1Ev>:
 800db0a:	4770      	bx	lr

0800db0c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800db0c:	b570      	push	{r4, r5, r6, lr}
 800db0e:	880b      	ldrh	r3, [r1, #0]
 800db10:	460d      	mov	r5, r1
 800db12:	4604      	mov	r4, r0
 800db14:	84c3      	strh	r3, [r0, #38]	; 0x26
 800db16:	4608      	mov	r0, r1
 800db18:	f005 f9c8 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800db1c:	4606      	mov	r6, r0
 800db1e:	4628      	mov	r0, r5
 800db20:	f005 f9f8 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800db24:	6823      	ldr	r3, [r4, #0]
 800db26:	4605      	mov	r5, r0
 800db28:	4631      	mov	r1, r6
 800db2a:	4620      	mov	r0, r4
 800db2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db2e:	4798      	blx	r3
 800db30:	6823      	ldr	r3, [r4, #0]
 800db32:	4629      	mov	r1, r5
 800db34:	4620      	mov	r0, r4
 800db36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800db38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800db3c:	4718      	bx	r3

0800db3e <_ZN8touchgfx5ImageD0Ev>:
 800db3e:	b510      	push	{r4, lr}
 800db40:	4604      	mov	r4, r0
 800db42:	212c      	movs	r1, #44	; 0x2c
 800db44:	f013 f929 	bl	8020d9a <_ZdlPvj>
 800db48:	4620      	mov	r0, r4
 800db4a:	bd10      	pop	{r4, pc}

0800db4c <_ZNK8touchgfx5Image12getSolidRectEv>:
 800db4c:	b510      	push	{r4, lr}
 800db4e:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800db52:	4604      	mov	r4, r0
 800db54:	2bff      	cmp	r3, #255	; 0xff
 800db56:	d006      	beq.n	800db66 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800db58:	2300      	movs	r3, #0
 800db5a:	8003      	strh	r3, [r0, #0]
 800db5c:	8043      	strh	r3, [r0, #2]
 800db5e:	8083      	strh	r3, [r0, #4]
 800db60:	80c3      	strh	r3, [r0, #6]
 800db62:	4620      	mov	r0, r4
 800db64:	bd10      	pop	{r4, pc}
 800db66:	3126      	adds	r1, #38	; 0x26
 800db68:	f005 fa08 	bl	8012f7c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800db6c:	e7f9      	b.n	800db62 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800db70 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800db70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db74:	4604      	mov	r4, r0
 800db76:	b088      	sub	sp, #32
 800db78:	2500      	movs	r5, #0
 800db7a:	460f      	mov	r7, r1
 800db7c:	f854 3b26 	ldr.w	r3, [r4], #38
 800db80:	a904      	add	r1, sp, #16
 800db82:	4606      	mov	r6, r0
 800db84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db86:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800db8a:	4798      	blx	r3
 800db8c:	4620      	mov	r0, r4
 800db8e:	f005 f98d 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800db92:	4680      	mov	r8, r0
 800db94:	4620      	mov	r0, r4
 800db96:	f005 f9bd 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800db9a:	9506      	str	r5, [sp, #24]
 800db9c:	ad06      	add	r5, sp, #24
 800db9e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800dba2:	4639      	mov	r1, r7
 800dba4:	f8ad 801c 	strh.w	r8, [sp, #28]
 800dba8:	4628      	mov	r0, r5
 800dbaa:	f7fc ff77 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 800dbae:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800dbb2:	2b00      	cmp	r3, #0
 800dbb4:	dd19      	ble.n	800dbea <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800dbb6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800dbba:	2b00      	cmp	r3, #0
 800dbbc:	dd15      	ble.n	800dbea <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800dbbe:	4b0c      	ldr	r3, [pc, #48]	; (800dbf0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800dbc0:	681b      	ldr	r3, [r3, #0]
 800dbc2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800dbc6:	b10a      	cbz	r2, 800dbcc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800dbc8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800dbca:	b900      	cbnz	r0, 800dbce <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800dbcc:	6898      	ldr	r0, [r3, #8]
 800dbce:	2701      	movs	r7, #1
 800dbd0:	6801      	ldr	r1, [r0, #0]
 800dbd2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800dbd6:	9702      	str	r7, [sp, #8]
 800dbd8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800dbdc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800dbe0:	e9cd 5600 	strd	r5, r6, [sp]
 800dbe4:	688d      	ldr	r5, [r1, #8]
 800dbe6:	4621      	mov	r1, r4
 800dbe8:	47a8      	blx	r5
 800dbea:	b008      	add	sp, #32
 800dbec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dbf0:	2400e424 	.word	0x2400e424

0800dbf4 <_ZN8touchgfx7OutlineD1Ev>:
 800dbf4:	4770      	bx	lr

0800dbf6 <_ZN8touchgfx7OutlineD0Ev>:
 800dbf6:	b510      	push	{r4, lr}
 800dbf8:	4604      	mov	r4, r0
 800dbfa:	2130      	movs	r1, #48	; 0x30
 800dbfc:	f013 f8cd 	bl	8020d9a <_ZdlPvj>
 800dc00:	4620      	mov	r0, r4
 800dc02:	bd10      	pop	{r4, pc}

0800dc04 <_ZN8touchgfx7Outline5resetEv>:
 800dc04:	b510      	push	{r4, lr}
 800dc06:	4604      	mov	r4, r0
 800dc08:	f000 fe86 	bl	800e918 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800dc0c:	60e0      	str	r0, [r4, #12]
 800dc0e:	f000 fe89 	bl	800e924 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800dc12:	68e3      	ldr	r3, [r4, #12]
 800dc14:	08c0      	lsrs	r0, r0, #3
 800dc16:	2200      	movs	r2, #0
 800dc18:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800dc1c:	6123      	str	r3, [r4, #16]
 800dc1e:	3801      	subs	r0, #1
 800dc20:	60a2      	str	r2, [r4, #8]
 800dc22:	6060      	str	r0, [r4, #4]
 800dc24:	8019      	strh	r1, [r3, #0]
 800dc26:	8059      	strh	r1, [r3, #2]
 800dc28:	809a      	strh	r2, [r3, #4]
 800dc2a:	80da      	strh	r2, [r3, #6]
 800dc2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc2e:	f023 0301 	bic.w	r3, r3, #1
 800dc32:	f043 0302 	orr.w	r3, r3, #2
 800dc36:	6263      	str	r3, [r4, #36]	; 0x24
 800dc38:	bd10      	pop	{r4, pc}
	...

0800dc3c <_ZN8touchgfx7OutlineC1Ev>:
 800dc3c:	4b0a      	ldr	r3, [pc, #40]	; (800dc68 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800dc3e:	b510      	push	{r4, lr}
 800dc40:	6003      	str	r3, [r0, #0]
 800dc42:	2300      	movs	r3, #0
 800dc44:	4604      	mov	r4, r0
 800dc46:	6243      	str	r3, [r0, #36]	; 0x24
 800dc48:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800dc4c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800dc50:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800dc54:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800dc58:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800dc5c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800dc60:	f7ff ffd0 	bl	800dc04 <_ZN8touchgfx7Outline5resetEv>
 800dc64:	4620      	mov	r0, r4
 800dc66:	bd10      	pop	{r4, pc}
 800dc68:	0802385c 	.word	0x0802385c

0800dc6c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800dc6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc70:	b093      	sub	sp, #76	; 0x4c
 800dc72:	1156      	asrs	r6, r2, #5
 800dc74:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800dc76:	9305      	str	r3, [sp, #20]
 800dc78:	1153      	asrs	r3, r2, #5
 800dc7a:	f004 051f 	and.w	r5, r4, #31
 800dc7e:	9303      	str	r3, [sp, #12]
 800dc80:	1163      	asrs	r3, r4, #5
 800dc82:	9504      	str	r5, [sp, #16]
 800dc84:	1165      	asrs	r5, r4, #5
 800dc86:	9306      	str	r3, [sp, #24]
 800dc88:	f002 031f 	and.w	r3, r2, #31
 800dc8c:	42ae      	cmp	r6, r5
 800dc8e:	f040 80f4 	bne.w	800de7a <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
 800dc92:	9c04      	ldr	r4, [sp, #16]
 800dc94:	9a05      	ldr	r2, [sp, #20]
 800dc96:	42a3      	cmp	r3, r4
 800dc98:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800dc9c:	6902      	ldr	r2, [r0, #16]
 800dc9e:	d125      	bne.n	800dcec <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
 800dca0:	f9b2 3000 	ldrsh.w	r3, [r2]
 800dca4:	459e      	cmp	lr, r3
 800dca6:	d103      	bne.n	800dcb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
 800dca8:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800dcac:	429e      	cmp	r6, r3
 800dcae:	d035      	beq.n	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800dcb0:	88d1      	ldrh	r1, [r2, #6]
 800dcb2:	8893      	ldrh	r3, [r2, #4]
 800dcb4:	430b      	orrs	r3, r1
 800dcb6:	d010      	beq.n	800dcda <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800dcb8:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800dcbc:	2b00      	cmp	r3, #0
 800dcbe:	db0c      	blt.n	800dcda <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800dcc0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800dcc2:	428b      	cmp	r3, r1
 800dcc4:	da09      	bge.n	800dcda <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800dcc6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dcca:	428b      	cmp	r3, r1
 800dccc:	f103 0301 	add.w	r3, r3, #1
 800dcd0:	bf38      	it	cc
 800dcd2:	3208      	addcc	r2, #8
 800dcd4:	6083      	str	r3, [r0, #8]
 800dcd6:	bf38      	it	cc
 800dcd8:	6102      	strcc	r2, [r0, #16]
 800dcda:	6903      	ldr	r3, [r0, #16]
 800dcdc:	9a03      	ldr	r2, [sp, #12]
 800dcde:	f8a3 e000 	strh.w	lr, [r3]
 800dce2:	805a      	strh	r2, [r3, #2]
 800dce4:	2200      	movs	r2, #0
 800dce6:	809a      	strh	r2, [r3, #4]
 800dce8:	80da      	strh	r2, [r3, #6]
 800dcea:	e017      	b.n	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800dcec:	9c05      	ldr	r4, [sp, #20]
 800dcee:	114e      	asrs	r6, r1, #5
 800dcf0:	f001 0c1f 	and.w	ip, r1, #31
 800dcf4:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800dcf8:	f004 041f 	and.w	r4, r4, #31
 800dcfc:	4576      	cmp	r6, lr
 800dcfe:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800dd02:	9402      	str	r4, [sp, #8]
 800dd04:	9c04      	ldr	r4, [sp, #16]
 800dd06:	eba4 0403 	sub.w	r4, r4, r3
 800dd0a:	d10a      	bne.n	800dd22 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
 800dd0c:	9b02      	ldr	r3, [sp, #8]
 800dd0e:	44a0      	add	r8, r4
 800dd10:	449c      	add	ip, r3
 800dd12:	f8a2 8004 	strh.w	r8, [r2, #4]
 800dd16:	fb04 a40c 	mla	r4, r4, ip, sl
 800dd1a:	80d4      	strh	r4, [r2, #6]
 800dd1c:	b013      	add	sp, #76	; 0x4c
 800dd1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd22:	9d05      	ldr	r5, [sp, #20]
 800dd24:	1a69      	subs	r1, r5, r1
 800dd26:	bf51      	iteee	pl
 800dd28:	f1cc 0520 	rsbpl	r5, ip, #32
 800dd2c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800dd30:	4249      	negmi	r1, r1
 800dd32:	2500      	movmi	r5, #0
 800dd34:	bf5d      	ittte	pl
 800dd36:	436c      	mulpl	r4, r5
 800dd38:	2520      	movpl	r5, #32
 800dd3a:	f04f 0901 	movpl.w	r9, #1
 800dd3e:	f04f 39ff 	movmi.w	r9, #4294967295
 800dd42:	9501      	str	r5, [sp, #4]
 800dd44:	9f01      	ldr	r7, [sp, #4]
 800dd46:	444e      	add	r6, r9
 800dd48:	fb94 f5f1 	sdiv	r5, r4, r1
 800dd4c:	fb01 4415 	mls	r4, r1, r5, r4
 800dd50:	44bc      	add	ip, r7
 800dd52:	2c00      	cmp	r4, #0
 800dd54:	bfbc      	itt	lt
 800dd56:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800dd5a:	1864      	addlt	r4, r4, r1
 800dd5c:	44a8      	add	r8, r5
 800dd5e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800dd62:	f8a2 8004 	strh.w	r8, [r2, #4]
 800dd66:	f8a2 c006 	strh.w	ip, [r2, #6]
 800dd6a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dd6e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800dd72:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800dd76:	ea58 0202 	orrs.w	r2, r8, r2
 800dd7a:	d011      	beq.n	800dda0 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800dd7c:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800dd80:	f1b8 0f00 	cmp.w	r8, #0
 800dd84:	db0c      	blt.n	800dda0 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800dd86:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800dd88:	4590      	cmp	r8, r2
 800dd8a:	da09      	bge.n	800dda0 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800dd8c:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800dd90:	4590      	cmp	r8, r2
 800dd92:	bf3c      	itt	cc
 800dd94:	f10c 0208 	addcc.w	r2, ip, #8
 800dd98:	6102      	strcc	r2, [r0, #16]
 800dd9a:	f108 0201 	add.w	r2, r8, #1
 800dd9e:	6082      	str	r2, [r0, #8]
 800dda0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dda4:	2700      	movs	r7, #0
 800dda6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ddaa:	45b6      	cmp	lr, r6
 800ddac:	f8ac 6000 	strh.w	r6, [ip]
 800ddb0:	442b      	add	r3, r5
 800ddb2:	f8ac 2002 	strh.w	r2, [ip, #2]
 800ddb6:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ddba:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ddbe:	d04b      	beq.n	800de58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
 800ddc0:	9f04      	ldr	r7, [sp, #16]
 800ddc2:	1a64      	subs	r4, r4, r1
 800ddc4:	f04f 0a00 	mov.w	sl, #0
 800ddc8:	1aff      	subs	r7, r7, r3
 800ddca:	443d      	add	r5, r7
 800ddcc:	016d      	lsls	r5, r5, #5
 800ddce:	fb95 f8f1 	sdiv	r8, r5, r1
 800ddd2:	fb01 5518 	mls	r5, r1, r8, r5
 800ddd6:	2d00      	cmp	r5, #0
 800ddd8:	bfbc      	itt	lt
 800ddda:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ddde:	186d      	addlt	r5, r5, r1
 800dde0:	f108 0701 	add.w	r7, r8, #1
 800dde4:	9703      	str	r7, [sp, #12]
 800dde6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ddea:	1964      	adds	r4, r4, r5
 800ddec:	444e      	add	r6, r9
 800ddee:	bf54      	ite	pl
 800ddf0:	9f03      	ldrpl	r7, [sp, #12]
 800ddf2:	4647      	movmi	r7, r8
 800ddf4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ddf8:	bf58      	it	pl
 800ddfa:	1a64      	subpl	r4, r4, r1
 800ddfc:	443b      	add	r3, r7
 800ddfe:	44bb      	add	fp, r7
 800de00:	f8ac b004 	strh.w	fp, [ip, #4]
 800de04:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800de08:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800de0c:	f8ac b006 	strh.w	fp, [ip, #6]
 800de10:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de14:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800de18:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800de1c:	ea5b 0707 	orrs.w	r7, fp, r7
 800de20:	d011      	beq.n	800de46 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800de22:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800de26:	f1bb 0f00 	cmp.w	fp, #0
 800de2a:	db0c      	blt.n	800de46 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800de2c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800de2e:	45bb      	cmp	fp, r7
 800de30:	da09      	bge.n	800de46 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800de32:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800de36:	45bb      	cmp	fp, r7
 800de38:	bf3c      	itt	cc
 800de3a:	f10c 0708 	addcc.w	r7, ip, #8
 800de3e:	6107      	strcc	r7, [r0, #16]
 800de40:	f10b 0701 	add.w	r7, fp, #1
 800de44:	6087      	str	r7, [r0, #8]
 800de46:	6907      	ldr	r7, [r0, #16]
 800de48:	45b6      	cmp	lr, r6
 800de4a:	803e      	strh	r6, [r7, #0]
 800de4c:	807a      	strh	r2, [r7, #2]
 800de4e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800de52:	f8a7 a006 	strh.w	sl, [r7, #6]
 800de56:	d1c6      	bne.n	800dde6 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
 800de58:	9a04      	ldr	r2, [sp, #16]
 800de5a:	1ad3      	subs	r3, r2, r3
 800de5c:	6902      	ldr	r2, [r0, #16]
 800de5e:	8891      	ldrh	r1, [r2, #4]
 800de60:	88d6      	ldrh	r6, [r2, #6]
 800de62:	4419      	add	r1, r3
 800de64:	8091      	strh	r1, [r2, #4]
 800de66:	9902      	ldr	r1, [sp, #8]
 800de68:	f101 0c20 	add.w	ip, r1, #32
 800de6c:	9901      	ldr	r1, [sp, #4]
 800de6e:	ebac 0c01 	sub.w	ip, ip, r1
 800de72:	fb03 630c 	mla	r3, r3, ip, r6
 800de76:	80d3      	strh	r3, [r2, #6]
 800de78:	e750      	b.n	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800de7a:	9d05      	ldr	r5, [sp, #20]
 800de7c:	1aa2      	subs	r2, r4, r2
 800de7e:	eba5 0501 	sub.w	r5, r5, r1
 800de82:	9202      	str	r2, [sp, #8]
 800de84:	9508      	str	r5, [sp, #32]
 800de86:	f140 8128 	bpl.w	800e0da <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
 800de8a:	9a03      	ldr	r2, [sp, #12]
 800de8c:	2a00      	cmp	r2, #0
 800de8e:	f6ff af45 	blt.w	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800de92:	9a02      	ldr	r2, [sp, #8]
 800de94:	f04f 34ff 	mov.w	r4, #4294967295
 800de98:	4252      	negs	r2, r2
 800de9a:	940b      	str	r4, [sp, #44]	; 0x2c
 800de9c:	2400      	movs	r4, #0
 800de9e:	9202      	str	r2, [sp, #8]
 800dea0:	9a06      	ldr	r2, [sp, #24]
 800dea2:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800dea6:	9206      	str	r2, [sp, #24]
 800dea8:	462a      	mov	r2, r5
 800deaa:	435a      	muls	r2, r3
 800deac:	9401      	str	r4, [sp, #4]
 800deae:	9c02      	ldr	r4, [sp, #8]
 800deb0:	9d02      	ldr	r5, [sp, #8]
 800deb2:	fb92 f4f4 	sdiv	r4, r2, r4
 800deb6:	fb05 2214 	mls	r2, r5, r4, r2
 800deba:	2a00      	cmp	r2, #0
 800debc:	9207      	str	r2, [sp, #28]
 800debe:	bfbc      	itt	lt
 800dec0:	1952      	addlt	r2, r2, r5
 800dec2:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800dec6:	6905      	ldr	r5, [r0, #16]
 800dec8:	bfb8      	it	lt
 800deca:	9207      	strlt	r2, [sp, #28]
 800decc:	eb04 0901 	add.w	r9, r4, r1
 800ded0:	9a01      	ldr	r2, [sp, #4]
 800ded2:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ded6:	429a      	cmp	r2, r3
 800ded8:	f040 8111 	bne.w	800e0fe <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
 800dedc:	f9b5 3000 	ldrsh.w	r3, [r5]
 800dee0:	429e      	cmp	r6, r3
 800dee2:	d104      	bne.n	800deee <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
 800dee4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800dee8:	9a03      	ldr	r2, [sp, #12]
 800deea:	429a      	cmp	r2, r3
 800deec:	d01b      	beq.n	800df26 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800deee:	88ea      	ldrh	r2, [r5, #6]
 800def0:	88ab      	ldrh	r3, [r5, #4]
 800def2:	4313      	orrs	r3, r2
 800def4:	d010      	beq.n	800df18 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800def6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800defa:	2a00      	cmp	r2, #0
 800defc:	db0c      	blt.n	800df18 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800defe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800df00:	429a      	cmp	r2, r3
 800df02:	da09      	bge.n	800df18 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800df04:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800df08:	429a      	cmp	r2, r3
 800df0a:	f102 0201 	add.w	r2, r2, #1
 800df0e:	bf38      	it	cc
 800df10:	3508      	addcc	r5, #8
 800df12:	6082      	str	r2, [r0, #8]
 800df14:	bf38      	it	cc
 800df16:	6105      	strcc	r5, [r0, #16]
 800df18:	6903      	ldr	r3, [r0, #16]
 800df1a:	9a03      	ldr	r2, [sp, #12]
 800df1c:	801e      	strh	r6, [r3, #0]
 800df1e:	805a      	strh	r2, [r3, #2]
 800df20:	2200      	movs	r2, #0
 800df22:	809a      	strh	r2, [r3, #4]
 800df24:	80da      	strh	r2, [r3, #6]
 800df26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800df28:	9a03      	ldr	r2, [sp, #12]
 800df2a:	6901      	ldr	r1, [r0, #16]
 800df2c:	441a      	add	r2, r3
 800df2e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800df32:	42b3      	cmp	r3, r6
 800df34:	d103      	bne.n	800df3e <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
 800df36:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800df3a:	429a      	cmp	r2, r3
 800df3c:	d01a      	beq.n	800df74 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
 800df3e:	88cc      	ldrh	r4, [r1, #6]
 800df40:	888b      	ldrh	r3, [r1, #4]
 800df42:	4323      	orrs	r3, r4
 800df44:	d010      	beq.n	800df68 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800df46:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800df4a:	2c00      	cmp	r4, #0
 800df4c:	db0c      	blt.n	800df68 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800df4e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800df50:	429c      	cmp	r4, r3
 800df52:	da09      	bge.n	800df68 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800df54:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800df58:	429c      	cmp	r4, r3
 800df5a:	f104 0401 	add.w	r4, r4, #1
 800df5e:	bf38      	it	cc
 800df60:	3108      	addcc	r1, #8
 800df62:	6084      	str	r4, [r0, #8]
 800df64:	bf38      	it	cc
 800df66:	6101      	strcc	r1, [r0, #16]
 800df68:	6903      	ldr	r3, [r0, #16]
 800df6a:	2100      	movs	r1, #0
 800df6c:	801e      	strh	r6, [r3, #0]
 800df6e:	805a      	strh	r2, [r3, #2]
 800df70:	8099      	strh	r1, [r3, #4]
 800df72:	80d9      	strh	r1, [r3, #6]
 800df74:	9b06      	ldr	r3, [sp, #24]
 800df76:	4293      	cmp	r3, r2
 800df78:	f000 8082 	beq.w	800e080 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
 800df7c:	9b08      	ldr	r3, [sp, #32]
 800df7e:	9902      	ldr	r1, [sp, #8]
 800df80:	015b      	lsls	r3, r3, #5
 800df82:	9c02      	ldr	r4, [sp, #8]
 800df84:	fb93 f1f1 	sdiv	r1, r3, r1
 800df88:	fb04 3311 	mls	r3, r4, r1, r3
 800df8c:	9103      	str	r1, [sp, #12]
 800df8e:	2b00      	cmp	r3, #0
 800df90:	9308      	str	r3, [sp, #32]
 800df92:	da04      	bge.n	800df9e <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
 800df94:	1e4b      	subs	r3, r1, #1
 800df96:	9303      	str	r3, [sp, #12]
 800df98:	9b08      	ldr	r3, [sp, #32]
 800df9a:	4423      	add	r3, r4
 800df9c:	9308      	str	r3, [sp, #32]
 800df9e:	9b07      	ldr	r3, [sp, #28]
 800dfa0:	464f      	mov	r7, r9
 800dfa2:	9902      	ldr	r1, [sp, #8]
 800dfa4:	2600      	movs	r6, #0
 800dfa6:	1a5b      	subs	r3, r3, r1
 800dfa8:	9307      	str	r3, [sp, #28]
 800dfaa:	9b01      	ldr	r3, [sp, #4]
 800dfac:	f1c3 0320 	rsb	r3, r3, #32
 800dfb0:	930e      	str	r3, [sp, #56]	; 0x38
 800dfb2:	990e      	ldr	r1, [sp, #56]	; 0x38
 800dfb4:	9b01      	ldr	r3, [sp, #4]
 800dfb6:	1a5b      	subs	r3, r3, r1
 800dfb8:	930a      	str	r3, [sp, #40]	; 0x28
 800dfba:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800dfbe:	185b      	adds	r3, r3, r1
 800dfc0:	bf58      	it	pl
 800dfc2:	9902      	ldrpl	r1, [sp, #8]
 800dfc4:	9307      	str	r3, [sp, #28]
 800dfc6:	bf57      	itett	pl
 800dfc8:	1a5b      	subpl	r3, r3, r1
 800dfca:	9903      	ldrmi	r1, [sp, #12]
 800dfcc:	9307      	strpl	r3, [sp, #28]
 800dfce:	9b03      	ldrpl	r3, [sp, #12]
 800dfd0:	bf58      	it	pl
 800dfd2:	1c59      	addpl	r1, r3, #1
 800dfd4:	2a00      	cmp	r2, #0
 800dfd6:	4489      	add	r9, r1
 800dfd8:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800dfdc:	db2e      	blt.n	800e03c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800dfde:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800dfe0:	4293      	cmp	r3, r2
 800dfe2:	dd2b      	ble.n	800e03c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800dfe4:	9c01      	ldr	r4, [sp, #4]
 800dfe6:	6905      	ldr	r5, [r0, #16]
 800dfe8:	46a0      	mov	r8, r4
 800dfea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800dfec:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800dff0:	45a0      	cmp	r8, r4
 800dff2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800dff6:	f040 814c 	bne.w	800e292 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
 800dffa:	f9b5 1000 	ldrsh.w	r1, [r5]
 800dffe:	4551      	cmp	r1, sl
 800e000:	d103      	bne.n	800e00a <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
 800e002:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e006:	4291      	cmp	r1, r2
 800e008:	d018      	beq.n	800e03c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e00a:	ea5c 010e 	orrs.w	r1, ip, lr
 800e00e:	d00f      	beq.n	800e030 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e010:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e014:	2900      	cmp	r1, #0
 800e016:	db0b      	blt.n	800e030 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e018:	428b      	cmp	r3, r1
 800e01a:	dd09      	ble.n	800e030 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e01c:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800e020:	4299      	cmp	r1, r3
 800e022:	f101 0101 	add.w	r1, r1, #1
 800e026:	bf38      	it	cc
 800e028:	3508      	addcc	r5, #8
 800e02a:	6081      	str	r1, [r0, #8]
 800e02c:	bf38      	it	cc
 800e02e:	6105      	strcc	r5, [r0, #16]
 800e030:	6903      	ldr	r3, [r0, #16]
 800e032:	f8a3 a000 	strh.w	sl, [r3]
 800e036:	805a      	strh	r2, [r3, #2]
 800e038:	809e      	strh	r6, [r3, #4]
 800e03a:	80de      	strh	r6, [r3, #6]
 800e03c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e03e:	6901      	ldr	r1, [r0, #16]
 800e040:	441a      	add	r2, r3
 800e042:	88cc      	ldrh	r4, [r1, #6]
 800e044:	888b      	ldrh	r3, [r1, #4]
 800e046:	4323      	orrs	r3, r4
 800e048:	d010      	beq.n	800e06c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e04a:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e04e:	2c00      	cmp	r4, #0
 800e050:	db0c      	blt.n	800e06c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e052:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e054:	429c      	cmp	r4, r3
 800e056:	da09      	bge.n	800e06c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e058:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e05c:	429c      	cmp	r4, r3
 800e05e:	f104 0401 	add.w	r4, r4, #1
 800e062:	bf38      	it	cc
 800e064:	3108      	addcc	r1, #8
 800e066:	6084      	str	r4, [r0, #8]
 800e068:	bf38      	it	cc
 800e06a:	6101      	strcc	r1, [r0, #16]
 800e06c:	6903      	ldr	r3, [r0, #16]
 800e06e:	464f      	mov	r7, r9
 800e070:	f8a3 a000 	strh.w	sl, [r3]
 800e074:	805a      	strh	r2, [r3, #2]
 800e076:	809e      	strh	r6, [r3, #4]
 800e078:	80de      	strh	r6, [r3, #6]
 800e07a:	9b06      	ldr	r3, [sp, #24]
 800e07c:	4293      	cmp	r3, r2
 800e07e:	d19c      	bne.n	800dfba <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
 800e080:	9b01      	ldr	r3, [sp, #4]
 800e082:	6907      	ldr	r7, [r0, #16]
 800e084:	f1c3 0620 	rsb	r6, r3, #32
 800e088:	9b05      	ldr	r3, [sp, #20]
 800e08a:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e08e:	9b04      	ldr	r3, [sp, #16]
 800e090:	429e      	cmp	r6, r3
 800e092:	f040 81c7 	bne.w	800e424 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 800e096:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e09a:	459e      	cmp	lr, r3
 800e09c:	d104      	bne.n	800e0a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
 800e09e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e0a2:	429a      	cmp	r2, r3
 800e0a4:	f43f ae3a 	beq.w	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e0a8:	88f9      	ldrh	r1, [r7, #6]
 800e0aa:	88bb      	ldrh	r3, [r7, #4]
 800e0ac:	430b      	orrs	r3, r1
 800e0ae:	d010      	beq.n	800e0d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e0b0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e0b4:	2b00      	cmp	r3, #0
 800e0b6:	db0c      	blt.n	800e0d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e0b8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800e0ba:	428b      	cmp	r3, r1
 800e0bc:	da09      	bge.n	800e0d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e0be:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e0c2:	428b      	cmp	r3, r1
 800e0c4:	f103 0301 	add.w	r3, r3, #1
 800e0c8:	bf38      	it	cc
 800e0ca:	3708      	addcc	r7, #8
 800e0cc:	6083      	str	r3, [r0, #8]
 800e0ce:	bf38      	it	cc
 800e0d0:	6107      	strcc	r7, [r0, #16]
 800e0d2:	6903      	ldr	r3, [r0, #16]
 800e0d4:	f8a3 e000 	strh.w	lr, [r3]
 800e0d8:	e603      	b.n	800dce2 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
 800e0da:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800e0dc:	9c03      	ldr	r4, [sp, #12]
 800e0de:	42a2      	cmp	r2, r4
 800e0e0:	f6ff ae1c 	blt.w	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e0e4:	9c06      	ldr	r4, [sp, #24]
 800e0e6:	42a2      	cmp	r2, r4
 800e0e8:	9c08      	ldr	r4, [sp, #32]
 800e0ea:	bfbc      	itt	lt
 800e0ec:	3201      	addlt	r2, #1
 800e0ee:	9206      	strlt	r2, [sp, #24]
 800e0f0:	f1c3 0220 	rsb	r2, r3, #32
 800e0f4:	4362      	muls	r2, r4
 800e0f6:	2401      	movs	r4, #1
 800e0f8:	940b      	str	r4, [sp, #44]	; 0x2c
 800e0fa:	2420      	movs	r4, #32
 800e0fc:	e6d6      	b.n	800deac <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 800e0fe:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e102:	f009 021f 	and.w	r2, r9, #31
 800e106:	f001 011f 	and.w	r1, r1, #31
 800e10a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e10e:	920c      	str	r2, [sp, #48]	; 0x30
 800e110:	45b0      	cmp	r8, r6
 800e112:	9a01      	ldr	r2, [sp, #4]
 800e114:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e118:	eba2 0203 	sub.w	r2, r2, r3
 800e11c:	d108      	bne.n	800e130 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
 800e11e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e120:	4496      	add	lr, r2
 800e122:	4419      	add	r1, r3
 800e124:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e128:	fb02 a101 	mla	r1, r2, r1, sl
 800e12c:	80e9      	strh	r1, [r5, #6]
 800e12e:	e6fa      	b.n	800df26 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800e130:	2c00      	cmp	r4, #0
 800e132:	f2c0 80a7 	blt.w	800e284 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
 800e136:	2701      	movs	r7, #1
 800e138:	f1c1 0c20 	rsb	ip, r1, #32
 800e13c:	970a      	str	r7, [sp, #40]	; 0x28
 800e13e:	2720      	movs	r7, #32
 800e140:	fb02 f20c 	mul.w	r2, r2, ip
 800e144:	9709      	str	r7, [sp, #36]	; 0x24
 800e146:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e148:	fb92 fcf4 	sdiv	ip, r2, r4
 800e14c:	fb04 221c 	mls	r2, r4, ip, r2
 800e150:	4439      	add	r1, r7
 800e152:	2a00      	cmp	r2, #0
 800e154:	bfbc      	itt	lt
 800e156:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e15a:	1912      	addlt	r2, r2, r4
 800e15c:	fb0c a101 	mla	r1, ip, r1, sl
 800e160:	44e6      	add	lr, ip
 800e162:	80e9      	strh	r1, [r5, #6]
 800e164:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e166:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e16a:	eb08 0501 	add.w	r5, r8, r1
 800e16e:	6901      	ldr	r1, [r0, #16]
 800e170:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e174:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e178:	ea58 070e 	orrs.w	r7, r8, lr
 800e17c:	d010      	beq.n	800e1a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e17e:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e182:	f1be 0f00 	cmp.w	lr, #0
 800e186:	db0b      	blt.n	800e1a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e188:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e18a:	45be      	cmp	lr, r7
 800e18c:	da08      	bge.n	800e1a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e18e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e192:	45be      	cmp	lr, r7
 800e194:	bf3c      	itt	cc
 800e196:	3108      	addcc	r1, #8
 800e198:	6101      	strcc	r1, [r0, #16]
 800e19a:	f10e 0101 	add.w	r1, lr, #1
 800e19e:	6081      	str	r1, [r0, #8]
 800e1a0:	6901      	ldr	r1, [r0, #16]
 800e1a2:	f04f 0e00 	mov.w	lr, #0
 800e1a6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e1aa:	42ae      	cmp	r6, r5
 800e1ac:	800d      	strh	r5, [r1, #0]
 800e1ae:	4463      	add	r3, ip
 800e1b0:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e1b4:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e1b8:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e1bc:	d053      	beq.n	800e266 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
 800e1be:	9901      	ldr	r1, [sp, #4]
 800e1c0:	1b12      	subs	r2, r2, r4
 800e1c2:	1ac9      	subs	r1, r1, r3
 800e1c4:	4461      	add	r1, ip
 800e1c6:	0149      	lsls	r1, r1, #5
 800e1c8:	fb91 fef4 	sdiv	lr, r1, r4
 800e1cc:	fb04 111e 	mls	r1, r4, lr, r1
 800e1d0:	2900      	cmp	r1, #0
 800e1d2:	bfbc      	itt	lt
 800e1d4:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e1d8:	1909      	addlt	r1, r1, r4
 800e1da:	f10e 0701 	add.w	r7, lr, #1
 800e1de:	970d      	str	r7, [sp, #52]	; 0x34
 800e1e0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e1e4:	1852      	adds	r2, r2, r1
 800e1e6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800e1e8:	bf54      	ite	pl
 800e1ea:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800e1ee:	46f4      	movmi	ip, lr
 800e1f0:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e1f4:	bf58      	it	pl
 800e1f6:	1b12      	subpl	r2, r2, r4
 800e1f8:	4463      	add	r3, ip
 800e1fa:	443d      	add	r5, r7
 800e1fc:	44e3      	add	fp, ip
 800e1fe:	f8aa b004 	strh.w	fp, [sl, #4]
 800e202:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e206:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e20a:	f8aa b006 	strh.w	fp, [sl, #6]
 800e20e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e212:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e216:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e21a:	ea5b 070a 	orrs.w	r7, fp, sl
 800e21e:	d014      	beq.n	800e24a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e220:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e224:	f1ba 0f00 	cmp.w	sl, #0
 800e228:	db0f      	blt.n	800e24a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e22a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e22c:	45ba      	cmp	sl, r7
 800e22e:	da0c      	bge.n	800e24a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e230:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e234:	45ba      	cmp	sl, r7
 800e236:	f10a 0a01 	add.w	sl, sl, #1
 800e23a:	bf38      	it	cc
 800e23c:	f10c 0c08 	addcc.w	ip, ip, #8
 800e240:	f8c0 a008 	str.w	sl, [r0, #8]
 800e244:	bf38      	it	cc
 800e246:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e24a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e24e:	f04f 0700 	mov.w	r7, #0
 800e252:	42ae      	cmp	r6, r5
 800e254:	f8ac 5000 	strh.w	r5, [ip]
 800e258:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e25c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e260:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e264:	d1bc      	bne.n	800e1e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
 800e266:	6904      	ldr	r4, [r0, #16]
 800e268:	9a01      	ldr	r2, [sp, #4]
 800e26a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e26c:	1ad3      	subs	r3, r2, r3
 800e26e:	88a2      	ldrh	r2, [r4, #4]
 800e270:	3120      	adds	r1, #32
 800e272:	441a      	add	r2, r3
 800e274:	80a2      	strh	r2, [r4, #4]
 800e276:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e278:	1a89      	subs	r1, r1, r2
 800e27a:	88e2      	ldrh	r2, [r4, #6]
 800e27c:	fb03 2301 	mla	r3, r3, r1, r2
 800e280:	80e3      	strh	r3, [r4, #6]
 800e282:	e650      	b.n	800df26 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800e284:	f04f 37ff 	mov.w	r7, #4294967295
 800e288:	434a      	muls	r2, r1
 800e28a:	4264      	negs	r4, r4
 800e28c:	970a      	str	r7, [sp, #40]	; 0x28
 800e28e:	2700      	movs	r7, #0
 800e290:	e758      	b.n	800e144 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
 800e292:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e296:	f009 031f 	and.w	r3, r9, #31
 800e29a:	f007 071f 	and.w	r7, r7, #31
 800e29e:	fa1f fc8c 	uxth.w	ip, ip
 800e2a2:	45d0      	cmp	r8, sl
 800e2a4:	930f      	str	r3, [sp, #60]	; 0x3c
 800e2a6:	fa1f fe8e 	uxth.w	lr, lr
 800e2aa:	d10a      	bne.n	800e2c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
 800e2ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e2ae:	449c      	add	ip, r3
 800e2b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e2b2:	441f      	add	r7, r3
 800e2b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e2b6:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e2ba:	fb03 e707 	mla	r7, r3, r7, lr
 800e2be:	80ef      	strh	r7, [r5, #6]
 800e2c0:	e6bc      	b.n	800e03c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e2c2:	2900      	cmp	r1, #0
 800e2c4:	f2c0 80a6 	blt.w	800e414 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
 800e2c8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e2ca:	f1c7 0320 	rsb	r3, r7, #32
 800e2ce:	4363      	muls	r3, r4
 800e2d0:	2401      	movs	r4, #1
 800e2d2:	940d      	str	r4, [sp, #52]	; 0x34
 800e2d4:	2420      	movs	r4, #32
 800e2d6:	940c      	str	r4, [sp, #48]	; 0x30
 800e2d8:	fb93 f4f1 	sdiv	r4, r3, r1
 800e2dc:	fb01 3b14 	mls	fp, r1, r4, r3
 800e2e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e2e2:	f1bb 0f00 	cmp.w	fp, #0
 800e2e6:	441f      	add	r7, r3
 800e2e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e2ea:	bfbc      	itt	lt
 800e2ec:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e2f0:	448b      	addlt	fp, r1
 800e2f2:	fb04 e707 	mla	r7, r4, r7, lr
 800e2f6:	44a4      	add	ip, r4
 800e2f8:	80ef      	strh	r7, [r5, #6]
 800e2fa:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e2fe:	eb08 0503 	add.w	r5, r8, r3
 800e302:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e306:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e30a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e30e:	ea5e 0307 	orrs.w	r3, lr, r7
 800e312:	d011      	beq.n	800e338 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e314:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e318:	f1be 0f00 	cmp.w	lr, #0
 800e31c:	db0c      	blt.n	800e338 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e31e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e320:	45be      	cmp	lr, r7
 800e322:	da09      	bge.n	800e338 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e324:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e328:	45be      	cmp	lr, r7
 800e32a:	bf3c      	itt	cc
 800e32c:	f10c 0708 	addcc.w	r7, ip, #8
 800e330:	6107      	strcc	r7, [r0, #16]
 800e332:	f10e 0701 	add.w	r7, lr, #1
 800e336:	6087      	str	r7, [r0, #8]
 800e338:	6907      	ldr	r7, [r0, #16]
 800e33a:	b213      	sxth	r3, r2
 800e33c:	4555      	cmp	r5, sl
 800e33e:	9310      	str	r3, [sp, #64]	; 0x40
 800e340:	807b      	strh	r3, [r7, #2]
 800e342:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e344:	803d      	strh	r5, [r7, #0]
 800e346:	80be      	strh	r6, [r7, #4]
 800e348:	eb04 0c03 	add.w	ip, r4, r3
 800e34c:	80fe      	strh	r6, [r7, #6]
 800e34e:	d050      	beq.n	800e3f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
 800e350:	9b01      	ldr	r3, [sp, #4]
 800e352:	eba3 070c 	sub.w	r7, r3, ip
 800e356:	ebab 0301 	sub.w	r3, fp, r1
 800e35a:	443c      	add	r4, r7
 800e35c:	9309      	str	r3, [sp, #36]	; 0x24
 800e35e:	0164      	lsls	r4, r4, #5
 800e360:	fb94 f8f1 	sdiv	r8, r4, r1
 800e364:	fb01 4418 	mls	r4, r1, r8, r4
 800e368:	2c00      	cmp	r4, #0
 800e36a:	bfbc      	itt	lt
 800e36c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e370:	1864      	addlt	r4, r4, r1
 800e372:	f108 0701 	add.w	r7, r8, #1
 800e376:	9711      	str	r7, [sp, #68]	; 0x44
 800e378:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e37a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e37e:	191b      	adds	r3, r3, r4
 800e380:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e384:	bf54      	ite	pl
 800e386:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800e388:	4647      	movmi	r7, r8
 800e38a:	9309      	str	r3, [sp, #36]	; 0x24
 800e38c:	bf58      	it	pl
 800e38e:	1a5b      	subpl	r3, r3, r1
 800e390:	44bb      	add	fp, r7
 800e392:	44bc      	add	ip, r7
 800e394:	bf58      	it	pl
 800e396:	9309      	strpl	r3, [sp, #36]	; 0x24
 800e398:	f8ae b004 	strh.w	fp, [lr, #4]
 800e39c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e3a0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e3a4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800e3a6:	f8ae b006 	strh.w	fp, [lr, #6]
 800e3aa:	443d      	add	r5, r7
 800e3ac:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e3b0:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e3b4:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e3b8:	ea5b 0307 	orrs.w	r3, fp, r7
 800e3bc:	d011      	beq.n	800e3e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e3be:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e3c2:	f1bb 0f00 	cmp.w	fp, #0
 800e3c6:	db0c      	blt.n	800e3e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e3c8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e3ca:	45bb      	cmp	fp, r7
 800e3cc:	da09      	bge.n	800e3e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e3ce:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e3d2:	45bb      	cmp	fp, r7
 800e3d4:	bf3c      	itt	cc
 800e3d6:	f10e 0708 	addcc.w	r7, lr, #8
 800e3da:	6107      	strcc	r7, [r0, #16]
 800e3dc:	f10b 0701 	add.w	r7, fp, #1
 800e3e0:	6087      	str	r7, [r0, #8]
 800e3e2:	6907      	ldr	r7, [r0, #16]
 800e3e4:	4555      	cmp	r5, sl
 800e3e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e3e8:	803d      	strh	r5, [r7, #0]
 800e3ea:	807b      	strh	r3, [r7, #2]
 800e3ec:	80be      	strh	r6, [r7, #4]
 800e3ee:	80fe      	strh	r6, [r7, #6]
 800e3f0:	d1c2      	bne.n	800e378 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
 800e3f2:	9b01      	ldr	r3, [sp, #4]
 800e3f4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e3f6:	eba3 0c0c 	sub.w	ip, r3, ip
 800e3fa:	6903      	ldr	r3, [r0, #16]
 800e3fc:	3720      	adds	r7, #32
 800e3fe:	8899      	ldrh	r1, [r3, #4]
 800e400:	4461      	add	r1, ip
 800e402:	8099      	strh	r1, [r3, #4]
 800e404:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e406:	1a7f      	subs	r7, r7, r1
 800e408:	88d9      	ldrh	r1, [r3, #6]
 800e40a:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e40e:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e412:	e613      	b.n	800e03c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e414:	f04f 34ff 	mov.w	r4, #4294967295
 800e418:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e41a:	4249      	negs	r1, r1
 800e41c:	940d      	str	r4, [sp, #52]	; 0x34
 800e41e:	2400      	movs	r4, #0
 800e420:	437b      	muls	r3, r7
 800e422:	e758      	b.n	800e2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
 800e424:	9905      	ldr	r1, [sp, #20]
 800e426:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e42a:	f009 0c1f 	and.w	ip, r9, #31
 800e42e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e432:	f001 011f 	and.w	r1, r1, #31
 800e436:	45f3      	cmp	fp, lr
 800e438:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e43c:	9102      	str	r1, [sp, #8]
 800e43e:	9904      	ldr	r1, [sp, #16]
 800e440:	eba1 0406 	sub.w	r4, r1, r6
 800e444:	d108      	bne.n	800e458 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
 800e446:	9b02      	ldr	r3, [sp, #8]
 800e448:	44a0      	add	r8, r4
 800e44a:	449c      	add	ip, r3
 800e44c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e450:	fb04 a40c 	mla	r4, r4, ip, sl
 800e454:	80fc      	strh	r4, [r7, #6]
 800e456:	e461      	b.n	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e458:	9905      	ldr	r1, [sp, #20]
 800e45a:	ebb1 0109 	subs.w	r1, r1, r9
 800e45e:	bf51      	iteee	pl
 800e460:	f1cc 0520 	rsbpl	r5, ip, #32
 800e464:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e468:	4249      	negmi	r1, r1
 800e46a:	2500      	movmi	r5, #0
 800e46c:	bf5d      	ittte	pl
 800e46e:	436c      	mulpl	r4, r5
 800e470:	2520      	movpl	r5, #32
 800e472:	f04f 0901 	movpl.w	r9, #1
 800e476:	f04f 39ff 	movmi.w	r9, #4294967295
 800e47a:	9501      	str	r5, [sp, #4]
 800e47c:	9b01      	ldr	r3, [sp, #4]
 800e47e:	fb94 f5f1 	sdiv	r5, r4, r1
 800e482:	fb01 4415 	mls	r4, r1, r5, r4
 800e486:	449c      	add	ip, r3
 800e488:	eb0b 0309 	add.w	r3, fp, r9
 800e48c:	2c00      	cmp	r4, #0
 800e48e:	bfbc      	itt	lt
 800e490:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e494:	1864      	addlt	r4, r4, r1
 800e496:	44a8      	add	r8, r5
 800e498:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e49c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e4a0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e4a4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e4a8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e4ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e4b0:	ea58 0707 	orrs.w	r7, r8, r7
 800e4b4:	d011      	beq.n	800e4da <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e4b6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e4ba:	f1b8 0f00 	cmp.w	r8, #0
 800e4be:	db0c      	blt.n	800e4da <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e4c0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e4c2:	45b8      	cmp	r8, r7
 800e4c4:	da09      	bge.n	800e4da <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e4c6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e4ca:	45b8      	cmp	r8, r7
 800e4cc:	bf3c      	itt	cc
 800e4ce:	f10c 0708 	addcc.w	r7, ip, #8
 800e4d2:	6107      	strcc	r7, [r0, #16]
 800e4d4:	f108 0701 	add.w	r7, r8, #1
 800e4d8:	6087      	str	r7, [r0, #8]
 800e4da:	6907      	ldr	r7, [r0, #16]
 800e4dc:	f04f 0c00 	mov.w	ip, #0
 800e4e0:	b212      	sxth	r2, r2
 800e4e2:	459e      	cmp	lr, r3
 800e4e4:	803b      	strh	r3, [r7, #0]
 800e4e6:	442e      	add	r6, r5
 800e4e8:	807a      	strh	r2, [r7, #2]
 800e4ea:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e4ee:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e4f2:	d04b      	beq.n	800e58c <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 800e4f4:	9f04      	ldr	r7, [sp, #16]
 800e4f6:	1a64      	subs	r4, r4, r1
 800e4f8:	f04f 0a00 	mov.w	sl, #0
 800e4fc:	1bbf      	subs	r7, r7, r6
 800e4fe:	443d      	add	r5, r7
 800e500:	016d      	lsls	r5, r5, #5
 800e502:	fb95 f8f1 	sdiv	r8, r5, r1
 800e506:	fb01 5518 	mls	r5, r1, r8, r5
 800e50a:	4565      	cmp	r5, ip
 800e50c:	bfbc      	itt	lt
 800e50e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e512:	186d      	addlt	r5, r5, r1
 800e514:	f108 0701 	add.w	r7, r8, #1
 800e518:	9703      	str	r7, [sp, #12]
 800e51a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e51e:	1964      	adds	r4, r4, r5
 800e520:	444b      	add	r3, r9
 800e522:	bf54      	ite	pl
 800e524:	9f03      	ldrpl	r7, [sp, #12]
 800e526:	4647      	movmi	r7, r8
 800e528:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e52c:	bf58      	it	pl
 800e52e:	1a64      	subpl	r4, r4, r1
 800e530:	443e      	add	r6, r7
 800e532:	44bb      	add	fp, r7
 800e534:	f8ac b004 	strh.w	fp, [ip, #4]
 800e538:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e53c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e540:	f8ac b006 	strh.w	fp, [ip, #6]
 800e544:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e548:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e54c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e550:	ea5b 0707 	orrs.w	r7, fp, r7
 800e554:	d011      	beq.n	800e57a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e556:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e55a:	f1bb 0f00 	cmp.w	fp, #0
 800e55e:	db0c      	blt.n	800e57a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e560:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e562:	45bb      	cmp	fp, r7
 800e564:	da09      	bge.n	800e57a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e566:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e56a:	45bb      	cmp	fp, r7
 800e56c:	bf3c      	itt	cc
 800e56e:	f10c 0708 	addcc.w	r7, ip, #8
 800e572:	6107      	strcc	r7, [r0, #16]
 800e574:	f10b 0701 	add.w	r7, fp, #1
 800e578:	6087      	str	r7, [r0, #8]
 800e57a:	6907      	ldr	r7, [r0, #16]
 800e57c:	459e      	cmp	lr, r3
 800e57e:	803b      	strh	r3, [r7, #0]
 800e580:	807a      	strh	r2, [r7, #2]
 800e582:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e586:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e58a:	d1c6      	bne.n	800e51a <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
 800e58c:	9b04      	ldr	r3, [sp, #16]
 800e58e:	1b9e      	subs	r6, r3, r6
 800e590:	6903      	ldr	r3, [r0, #16]
 800e592:	889a      	ldrh	r2, [r3, #4]
 800e594:	4432      	add	r2, r6
 800e596:	809a      	strh	r2, [r3, #4]
 800e598:	9a02      	ldr	r2, [sp, #8]
 800e59a:	f102 0c20 	add.w	ip, r2, #32
 800e59e:	9a01      	ldr	r2, [sp, #4]
 800e5a0:	ebac 0c02 	sub.w	ip, ip, r2
 800e5a4:	88da      	ldrh	r2, [r3, #6]
 800e5a6:	fb06 260c 	mla	r6, r6, ip, r2
 800e5aa:	80de      	strh	r6, [r3, #6]
 800e5ac:	f7ff bbb6 	b.w	800dd1c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

0800e5b0 <_ZN8touchgfx7Outline6lineToEii>:
 800e5b0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e5b2:	079b      	lsls	r3, r3, #30
 800e5b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e5b6:	460e      	mov	r6, r1
 800e5b8:	4615      	mov	r5, r2
 800e5ba:	d511      	bpl.n	800e5e0 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e5bc:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e5c0:	ea86 0701 	eor.w	r7, r6, r1
 800e5c4:	ea85 0302 	eor.w	r3, r5, r2
 800e5c8:	433b      	orrs	r3, r7
 800e5ca:	d009      	beq.n	800e5e0 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e5cc:	4633      	mov	r3, r6
 800e5ce:	9500      	str	r5, [sp, #0]
 800e5d0:	f7ff fb4c 	bl	800dc6c <_ZN8touchgfx7Outline10renderLineEiiii>
 800e5d4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e5d6:	f043 0301 	orr.w	r3, r3, #1
 800e5da:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e5de:	6243      	str	r3, [r0, #36]	; 0x24
 800e5e0:	b003      	add	sp, #12
 800e5e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e5e4 <_ZN8touchgfx7Outline6moveToEii>:
 800e5e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e5e6:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e5e8:	4615      	mov	r5, r2
 800e5ea:	4604      	mov	r4, r0
 800e5ec:	460e      	mov	r6, r1
 800e5ee:	079a      	lsls	r2, r3, #30
 800e5f0:	d401      	bmi.n	800e5f6 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e5f2:	f7ff fb07 	bl	800dc04 <_ZN8touchgfx7Outline5resetEv>
 800e5f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e5f8:	07db      	lsls	r3, r3, #31
 800e5fa:	d504      	bpl.n	800e606 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e5fc:	4620      	mov	r0, r4
 800e5fe:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e602:	f7ff ffd5 	bl	800e5b0 <_ZN8touchgfx7Outline6lineToEii>
 800e606:	6923      	ldr	r3, [r4, #16]
 800e608:	1170      	asrs	r0, r6, #5
 800e60a:	1169      	asrs	r1, r5, #5
 800e60c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e610:	4290      	cmp	r0, r2
 800e612:	d103      	bne.n	800e61c <_ZN8touchgfx7Outline6moveToEii+0x38>
 800e614:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e618:	4291      	cmp	r1, r2
 800e61a:	d01a      	beq.n	800e652 <_ZN8touchgfx7Outline6moveToEii+0x6e>
 800e61c:	88df      	ldrh	r7, [r3, #6]
 800e61e:	889a      	ldrh	r2, [r3, #4]
 800e620:	433a      	orrs	r2, r7
 800e622:	d010      	beq.n	800e646 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e624:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e628:	2a00      	cmp	r2, #0
 800e62a:	db0c      	blt.n	800e646 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e62c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800e62e:	42ba      	cmp	r2, r7
 800e630:	da09      	bge.n	800e646 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e632:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e636:	42ba      	cmp	r2, r7
 800e638:	f102 0201 	add.w	r2, r2, #1
 800e63c:	bf38      	it	cc
 800e63e:	3308      	addcc	r3, #8
 800e640:	60a2      	str	r2, [r4, #8]
 800e642:	bf38      	it	cc
 800e644:	6123      	strcc	r3, [r4, #16]
 800e646:	6923      	ldr	r3, [r4, #16]
 800e648:	2200      	movs	r2, #0
 800e64a:	8018      	strh	r0, [r3, #0]
 800e64c:	8059      	strh	r1, [r3, #2]
 800e64e:	809a      	strh	r2, [r3, #4]
 800e650:	80da      	strh	r2, [r3, #6]
 800e652:	6166      	str	r6, [r4, #20]
 800e654:	6225      	str	r5, [r4, #32]
 800e656:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e65a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e65c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e65c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e660:	b0d0      	sub	sp, #320	; 0x140
 800e662:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e666:	466c      	mov	r4, sp
 800e668:	4627      	mov	r7, r4
 800e66a:	1a0d      	subs	r5, r1, r0
 800e66c:	f100 0308 	add.w	r3, r0, #8
 800e670:	2d48      	cmp	r5, #72	; 0x48
 800e672:	f340 80d5 	ble.w	800e820 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e676:	112d      	asrs	r5, r5, #4
 800e678:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e67c:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e680:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e684:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e688:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e68c:	6816      	ldr	r6, [r2, #0]
 800e68e:	6006      	str	r6, [r0, #0]
 800e690:	6856      	ldr	r6, [r2, #4]
 800e692:	6046      	str	r6, [r0, #4]
 800e694:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e698:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e69c:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e6a0:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e6a4:	f1a1 0208 	sub.w	r2, r1, #8
 800e6a8:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e6ac:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e6b0:	4565      	cmp	r5, ip
 800e6b2:	db06      	blt.n	800e6c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e6b4:	d119      	bne.n	800e6ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e6b6:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e6ba:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e6be:	42ae      	cmp	r6, r5
 800e6c0:	dd13      	ble.n	800e6ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e6c2:	460e      	mov	r6, r1
 800e6c4:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e6c8:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e6cc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e6d0:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e6d4:	601d      	str	r5, [r3, #0]
 800e6d6:	6875      	ldr	r5, [r6, #4]
 800e6d8:	605d      	str	r5, [r3, #4]
 800e6da:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e6de:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e6e2:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e6e6:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e6ea:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e6ee:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e6f2:	42ae      	cmp	r6, r5
 800e6f4:	db06      	blt.n	800e704 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e6f6:	d116      	bne.n	800e726 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e6f8:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e6fc:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e700:	45ac      	cmp	ip, r5
 800e702:	da10      	bge.n	800e726 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e704:	681d      	ldr	r5, [r3, #0]
 800e706:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e70a:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e70e:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e712:	6005      	str	r5, [r0, #0]
 800e714:	685d      	ldr	r5, [r3, #4]
 800e716:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e71a:	6045      	str	r5, [r0, #4]
 800e71c:	8146      	strh	r6, [r0, #10]
 800e71e:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e722:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e726:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e72a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e72e:	4565      	cmp	r5, ip
 800e730:	db06      	blt.n	800e740 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e732:	d119      	bne.n	800e768 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e734:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e738:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e73c:	42ae      	cmp	r6, r5
 800e73e:	da13      	bge.n	800e768 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e740:	460e      	mov	r6, r1
 800e742:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e746:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e74a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e74e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e752:	6005      	str	r5, [r0, #0]
 800e754:	6875      	ldr	r5, [r6, #4]
 800e756:	6045      	str	r5, [r0, #4]
 800e758:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e75c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e760:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e764:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e768:	3308      	adds	r3, #8
 800e76a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e76e:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e772:	45e6      	cmp	lr, ip
 800e774:	dbf8      	blt.n	800e768 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e776:	d105      	bne.n	800e784 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e778:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e77c:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e780:	42ae      	cmp	r6, r5
 800e782:	dbf1      	blt.n	800e768 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e784:	4615      	mov	r5, r2
 800e786:	3a08      	subs	r2, #8
 800e788:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e78c:	45b4      	cmp	ip, r6
 800e78e:	dbf9      	blt.n	800e784 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e790:	d105      	bne.n	800e79e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e792:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e796:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e79a:	45b0      	cmp	r8, r6
 800e79c:	dbf2      	blt.n	800e784 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e79e:	4293      	cmp	r3, r2
 800e7a0:	f1a5 0608 	sub.w	r6, r5, #8
 800e7a4:	d816      	bhi.n	800e7d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e7a6:	f8d6 c000 	ldr.w	ip, [r6]
 800e7aa:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e7ae:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e7b2:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e7b6:	f8c3 c000 	str.w	ip, [r3]
 800e7ba:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e7be:	f8c3 c004 	str.w	ip, [r3, #4]
 800e7c2:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e7c6:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e7ca:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e7ce:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e7d2:	e7c9      	b.n	800e768 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e7d4:	f8d6 e000 	ldr.w	lr, [r6]
 800e7d8:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e7dc:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e7e0:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e7e4:	f8c0 e000 	str.w	lr, [r0]
 800e7e8:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e7ec:	1a16      	subs	r6, r2, r0
 800e7ee:	f8c0 e004 	str.w	lr, [r0, #4]
 800e7f2:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e7f6:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e7fa:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e7fe:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e802:	1acd      	subs	r5, r1, r3
 800e804:	10ed      	asrs	r5, r5, #3
 800e806:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e80a:	bfb5      	itete	lt
 800e80c:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e810:	e9c4 3100 	strdge	r3, r1, [r4]
 800e814:	460a      	movlt	r2, r1
 800e816:	4603      	movge	r3, r0
 800e818:	3408      	adds	r4, #8
 800e81a:	4618      	mov	r0, r3
 800e81c:	4611      	mov	r1, r2
 800e81e:	e724      	b.n	800e66a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e820:	4299      	cmp	r1, r3
 800e822:	d927      	bls.n	800e874 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
 800e824:	f1a3 0210 	sub.w	r2, r3, #16
 800e828:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e82c:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e830:	45ac      	cmp	ip, r5
 800e832:	db06      	blt.n	800e842 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e834:	d11c      	bne.n	800e870 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800e836:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e83a:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e83e:	42ae      	cmp	r6, r5
 800e840:	da16      	bge.n	800e870 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800e842:	4615      	mov	r5, r2
 800e844:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e848:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e84c:	3a08      	subs	r2, #8
 800e84e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e852:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
 800e856:	6196      	str	r6, [r2, #24]
 800e858:	42a8      	cmp	r0, r5
 800e85a:	686e      	ldr	r6, [r5, #4]
 800e85c:	f8a2 9010 	strh.w	r9, [r2, #16]
 800e860:	61d6      	str	r6, [r2, #28]
 800e862:	f8a2 c012 	strh.w	ip, [r2, #18]
 800e866:	f8a2 8014 	strh.w	r8, [r2, #20]
 800e86a:	f8a2 e016 	strh.w	lr, [r2, #22]
 800e86e:	d1db      	bne.n	800e828 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e870:	3308      	adds	r3, #8
 800e872:	e7d5      	b.n	800e820 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e874:	42bc      	cmp	r4, r7
 800e876:	d903      	bls.n	800e880 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
 800e878:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e87c:	3c08      	subs	r4, #8
 800e87e:	e6f4      	b.n	800e66a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e880:	b050      	add	sp, #320	; 0x140
 800e882:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e886 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e886:	b510      	push	{r4, lr}
 800e888:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e88a:	4604      	mov	r4, r0
 800e88c:	07da      	lsls	r2, r3, #31
 800e88e:	d507      	bpl.n	800e8a0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e890:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e894:	f7ff fe8c 	bl	800e5b0 <_ZN8touchgfx7Outline6lineToEii>
 800e898:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e89a:	f023 0301 	bic.w	r3, r3, #1
 800e89e:	6243      	str	r3, [r0, #36]	; 0x24
 800e8a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e8a2:	079b      	lsls	r3, r3, #30
 800e8a4:	d521      	bpl.n	800e8ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e8a6:	6923      	ldr	r3, [r4, #16]
 800e8a8:	88d9      	ldrh	r1, [r3, #6]
 800e8aa:	889a      	ldrh	r2, [r3, #4]
 800e8ac:	430a      	orrs	r2, r1
 800e8ae:	d010      	beq.n	800e8d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e8b0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e8b4:	2a00      	cmp	r2, #0
 800e8b6:	db0c      	blt.n	800e8d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e8b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e8ba:	428a      	cmp	r2, r1
 800e8bc:	da09      	bge.n	800e8d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e8be:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e8c2:	4291      	cmp	r1, r2
 800e8c4:	f102 0201 	add.w	r2, r2, #1
 800e8c8:	bf88      	it	hi
 800e8ca:	3308      	addhi	r3, #8
 800e8cc:	60a2      	str	r2, [r4, #8]
 800e8ce:	bf88      	it	hi
 800e8d0:	6123      	strhi	r3, [r4, #16]
 800e8d2:	68a1      	ldr	r1, [r4, #8]
 800e8d4:	b129      	cbz	r1, 800e8e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e8d6:	6863      	ldr	r3, [r4, #4]
 800e8d8:	4299      	cmp	r1, r3
 800e8da:	d802      	bhi.n	800e8e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e8dc:	68e0      	ldr	r0, [r4, #12]
 800e8de:	f7ff febd 	bl	800e65c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e8e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e8e4:	f023 0302 	bic.w	r3, r3, #2
 800e8e8:	6263      	str	r3, [r4, #36]	; 0x24
 800e8ea:	68e0      	ldr	r0, [r4, #12]
 800e8ec:	bd10      	pop	{r4, pc}
	...

0800e8f0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e8f0:	4b02      	ldr	r3, [pc, #8]	; (800e8fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e8f2:	6018      	str	r0, [r3, #0]
 800e8f4:	4b02      	ldr	r3, [pc, #8]	; (800e900 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e8f6:	6019      	str	r1, [r3, #0]
 800e8f8:	4770      	bx	lr
 800e8fa:	bf00      	nop
 800e8fc:	2400e42c 	.word	0x2400e42c
 800e900:	2400e430 	.word	0x2400e430

0800e904 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800e904:	2300      	movs	r3, #0
 800e906:	4a02      	ldr	r2, [pc, #8]	; (800e910 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800e908:	6013      	str	r3, [r2, #0]
 800e90a:	4a02      	ldr	r2, [pc, #8]	; (800e914 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800e90c:	6013      	str	r3, [r2, #0]
 800e90e:	4770      	bx	lr
 800e910:	2400e42c 	.word	0x2400e42c
 800e914:	2400e430 	.word	0x2400e430

0800e918 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e918:	4b01      	ldr	r3, [pc, #4]	; (800e920 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e91a:	6818      	ldr	r0, [r3, #0]
 800e91c:	4770      	bx	lr
 800e91e:	bf00      	nop
 800e920:	2400e42c 	.word	0x2400e42c

0800e924 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e924:	4b01      	ldr	r3, [pc, #4]	; (800e92c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e926:	6818      	ldr	r0, [r3, #0]
 800e928:	4770      	bx	lr
 800e92a:	bf00      	nop
 800e92c:	2400e430 	.word	0x2400e430

0800e930 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e930:	b510      	push	{r4, lr}
 800e932:	6803      	ldr	r3, [r0, #0]
 800e934:	460c      	mov	r4, r1
 800e936:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e938:	4798      	blx	r3
 800e93a:	1b03      	subs	r3, r0, r4
 800e93c:	4258      	negs	r0, r3
 800e93e:	4158      	adcs	r0, r3
 800e940:	bd10      	pop	{r4, pc}
	...

0800e944 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e944:	4b01      	ldr	r3, [pc, #4]	; (800e94c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e946:	6019      	str	r1, [r3, #0]
 800e948:	4770      	bx	lr
 800e94a:	bf00      	nop
 800e94c:	2400e434 	.word	0x2400e434

0800e950 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e954:	4696      	mov	lr, r2
 800e956:	b097      	sub	sp, #92	; 0x5c
 800e958:	4605      	mov	r5, r0
 800e95a:	4614      	mov	r4, r2
 800e95c:	460e      	mov	r6, r1
 800e95e:	461f      	mov	r7, r3
 800e960:	f10d 0c1c 	add.w	ip, sp, #28
 800e964:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800e968:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800e96c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800e970:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e974:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e978:	f8de 3000 	ldr.w	r3, [lr]
 800e97c:	f104 0e14 	add.w	lr, r4, #20
 800e980:	f8cc 3000 	str.w	r3, [ip]
 800e984:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e988:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e98c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e990:	f8de 3000 	ldr.w	r3, [lr]
 800e994:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e998:	f8cc 3000 	str.w	r3, [ip]
 800e99c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e9a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e9a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e9a8:	f8de 3000 	ldr.w	r3, [lr]
 800e9ac:	4631      	mov	r1, r6
 800e9ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e9b0:	4628      	mov	r0, r5
 800e9b2:	f8cc 3000 	str.w	r3, [ip]
 800e9b6:	682b      	ldr	r3, [r5, #0]
 800e9b8:	9201      	str	r2, [sp, #4]
 800e9ba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e9bc:	f8cd 8008 	str.w	r8, [sp, #8]
 800e9c0:	9200      	str	r2, [sp, #0]
 800e9c2:	aa07      	add	r2, sp, #28
 800e9c4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e9c8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800e9cc:	463b      	mov	r3, r7
 800e9ce:	47d8      	blx	fp
 800e9d0:	46a6      	mov	lr, r4
 800e9d2:	f10d 0c1c 	add.w	ip, sp, #28
 800e9d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e9da:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e9de:	f8de 3000 	ldr.w	r3, [lr]
 800e9e2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e9e6:	343c      	adds	r4, #60	; 0x3c
 800e9e8:	f8cc 3000 	str.w	r3, [ip]
 800e9ec:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e9f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e9f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e9f8:	f8de 3000 	ldr.w	r3, [lr]
 800e9fc:	f8cc 3000 	str.w	r3, [ip]
 800ea00:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ea04:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ea06:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ea0a:	6823      	ldr	r3, [r4, #0]
 800ea0c:	4631      	mov	r1, r6
 800ea0e:	4628      	mov	r0, r5
 800ea10:	f8cc 3000 	str.w	r3, [ip]
 800ea14:	682b      	ldr	r3, [r5, #0]
 800ea16:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ea1a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ea1c:	f8cd 8008 	str.w	r8, [sp, #8]
 800ea20:	9201      	str	r2, [sp, #4]
 800ea22:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ea24:	9200      	str	r2, [sp, #0]
 800ea26:	aa07      	add	r2, sp, #28
 800ea28:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800ea2a:	463b      	mov	r3, r7
 800ea2c:	47a0      	blx	r4
 800ea2e:	b017      	add	sp, #92	; 0x5c
 800ea30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ea34 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ea34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea38:	b08d      	sub	sp, #52	; 0x34
 800ea3a:	4688      	mov	r8, r1
 800ea3c:	f8d3 c000 	ldr.w	ip, [r3]
 800ea40:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ea42:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800ea46:	680f      	ldr	r7, [r1, #0]
 800ea48:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800ea4c:	eba7 070c 	sub.w	r7, r7, ip
 800ea50:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800ea54:	edd3 6a07 	vldr	s13, [r3, #28]
 800ea58:	42bc      	cmp	r4, r7
 800ea5a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800ea5c:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800ea60:	bfa8      	it	ge
 800ea62:	463c      	movge	r4, r7
 800ea64:	f9b1 9000 	ldrsh.w	r9, [r1]
 800ea68:	f9ba 1000 	ldrsh.w	r1, [sl]
 800ea6c:	ee07 4a90 	vmov	s15, r4
 800ea70:	eb09 0e0c 	add.w	lr, r9, ip
 800ea74:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800ea78:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800ea7c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800ea80:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800ea84:	4571      	cmp	r1, lr
 800ea86:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ea8a:	ee65 4a24 	vmul.f32	s9, s10, s9
 800ea8e:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ea92:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800ea96:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ea9a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ea9e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800eaa2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800eaa6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800eaaa:	ee22 2a07 	vmul.f32	s4, s4, s14
 800eaae:	f340 808c 	ble.w	800ebca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800eab2:	eba1 060e 	sub.w	r6, r1, lr
 800eab6:	fb96 f5f4 	sdiv	r5, r6, r4
 800eaba:	ee07 5a10 	vmov	s14, r5
 800eabe:	2d00      	cmp	r5, #0
 800eac0:	fb04 6615 	mls	r6, r4, r5, r6
 800eac4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eac8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800eacc:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ead0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ead4:	dd12      	ble.n	800eafc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800ead6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800eada:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800eade:	ee31 2a45 	vsub.f32	s4, s2, s10
 800eae2:	eef5 6a40 	vcmp.f32	s13, #0.0
 800eae6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eaea:	bf14      	ite	ne
 800eaec:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800eaf0:	eeb0 7a67 	vmoveq.f32	s14, s15
 800eaf4:	ee61 1a87 	vmul.f32	s3, s3, s14
 800eaf8:	ee22 2a07 	vmul.f32	s4, s4, s14
 800eafc:	fb05 f204 	mul.w	r2, r5, r4
 800eb00:	1abf      	subs	r7, r7, r2
 800eb02:	4494      	add	ip, r2
 800eb04:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800eb08:	4411      	add	r1, r2
 800eb0a:	eb09 020c 	add.w	r2, r9, ip
 800eb0e:	b209      	sxth	r1, r1
 800eb10:	443a      	add	r2, r7
 800eb12:	428a      	cmp	r2, r1
 800eb14:	bfc4      	itt	gt
 800eb16:	eba1 0209 	subgt.w	r2, r1, r9
 800eb1a:	eba2 070c 	subgt.w	r7, r2, ip
 800eb1e:	2f00      	cmp	r7, #0
 800eb20:	dd50      	ble.n	800ebc4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800eb22:	fb97 f1f4 	sdiv	r1, r7, r4
 800eb26:	fb04 7211 	mls	r2, r4, r1, r7
 800eb2a:	b90a      	cbnz	r2, 800eb30 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800eb2c:	3901      	subs	r1, #1
 800eb2e:	4622      	mov	r2, r4
 800eb30:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800eb34:	6840      	ldr	r0, [r0, #4]
 800eb36:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800eb3a:	44b6      	add	lr, r6
 800eb3c:	f8d0 a000 	ldr.w	sl, [r0]
 800eb40:	2900      	cmp	r1, #0
 800eb42:	bfcc      	ite	gt
 800eb44:	46a1      	movgt	r9, r4
 800eb46:	4691      	movle	r9, r2
 800eb48:	900b      	str	r0, [sp, #44]	; 0x2c
 800eb4a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800eb4c:	fb04 e505 	mla	r5, r4, r5, lr
 800eb50:	eef0 6a42 	vmov.f32	s13, s4
 800eb54:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800eb58:	9008      	str	r0, [sp, #32]
 800eb5a:	eeb0 7a61 	vmov.f32	s14, s3
 800eb5e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800eb60:	695b      	ldr	r3, [r3, #20]
 800eb62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800eb66:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800eb6a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800eb6e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800eb70:	445b      	add	r3, fp
 800eb72:	9307      	str	r3, [sp, #28]
 800eb74:	ee16 3a90 	vmov	r3, s13
 800eb78:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800eb7c:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800eb80:	ee21 3a23 	vmul.f32	s6, s2, s7
 800eb84:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800eb88:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800eb8c:	ee17 7a90 	vmov	r7, s15
 800eb90:	ee73 7a42 	vsub.f32	s15, s6, s4
 800eb94:	fb97 f7f4 	sdiv	r7, r7, r4
 800eb98:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800eb9c:	ee17 ca90 	vmov	ip, s15
 800eba0:	fb9c fcf4 	sdiv	ip, ip, r4
 800eba4:	fb0c 3306 	mla	r3, ip, r6, r3
 800eba8:	9302      	str	r3, [sp, #8]
 800ebaa:	ee17 3a10 	vmov	r3, s14
 800ebae:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800ebb2:	fb07 3706 	mla	r7, r7, r6, r3
 800ebb6:	eba9 0306 	sub.w	r3, r9, r6
 800ebba:	e9cd 4700 	strd	r4, r7, [sp]
 800ebbe:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ebc2:	47a0      	blx	r4
 800ebc4:	b00d      	add	sp, #52	; 0x34
 800ebc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebca:	2500      	movs	r5, #0
 800ebcc:	462e      	mov	r6, r5
 800ebce:	e799      	b.n	800eb04 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800ebd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ebd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebd4:	b0db      	sub	sp, #364	; 0x16c
 800ebd6:	461d      	mov	r5, r3
 800ebd8:	4614      	mov	r4, r2
 800ebda:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800ebde:	910f      	str	r1, [sp, #60]	; 0x3c
 800ebe0:	4629      	mov	r1, r5
 800ebe2:	930a      	str	r3, [sp, #40]	; 0x28
 800ebe4:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800ebe8:	9009      	str	r0, [sp, #36]	; 0x24
 800ebea:	930b      	str	r3, [sp, #44]	; 0x2c
 800ebec:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800ebf0:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800ebf4:	9310      	str	r3, [sp, #64]	; 0x40
 800ebf6:	6803      	ldr	r3, [r0, #0]
 800ebf8:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800ebfa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800ebfe:	47b8      	blx	r7
 800ec00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ec02:	6058      	str	r0, [r3, #4]
 800ec04:	2800      	cmp	r0, #0
 800ec06:	f000 83a1 	beq.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec0a:	682b      	ldr	r3, [r5, #0]
 800ec0c:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800ec10:	ed94 7a02 	vldr	s14, [r4, #8]
 800ec14:	9314      	str	r3, [sp, #80]	; 0x50
 800ec16:	686b      	ldr	r3, [r5, #4]
 800ec18:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ec1c:	9315      	str	r3, [sp, #84]	; 0x54
 800ec1e:	4bc1      	ldr	r3, [pc, #772]	; (800ef24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800ec20:	7819      	ldrb	r1, [r3, #0]
 800ec22:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800ec26:	2900      	cmp	r1, #0
 800ec28:	bf16      	itet	ne
 800ec2a:	4619      	movne	r1, r3
 800ec2c:	4611      	moveq	r1, r2
 800ec2e:	4613      	movne	r3, r2
 800ec30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec34:	9116      	str	r1, [sp, #88]	; 0x58
 800ec36:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800ec3a:	f240 8387 	bls.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec3e:	ed94 7a07 	vldr	s14, [r4, #28]
 800ec42:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ec46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec4a:	f240 837f 	bls.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec4e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800ec52:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ec56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec5a:	f240 8377 	bls.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec5e:	6822      	ldr	r2, [r4, #0]
 800ec60:	4bb1      	ldr	r3, [pc, #708]	; (800ef28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ec62:	429a      	cmp	r2, r3
 800ec64:	f2c0 8372 	blt.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec68:	49b0      	ldr	r1, [pc, #704]	; (800ef2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ec6a:	6963      	ldr	r3, [r4, #20]
 800ec6c:	428a      	cmp	r2, r1
 800ec6e:	f300 836d 	bgt.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec72:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ec76:	48ae      	ldr	r0, [pc, #696]	; (800ef30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ec78:	33ff      	adds	r3, #255	; 0xff
 800ec7a:	4283      	cmp	r3, r0
 800ec7c:	f200 8366 	bhi.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec80:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ec82:	4dac      	ldr	r5, [pc, #688]	; (800ef34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ec84:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ec88:	33ff      	adds	r3, #255	; 0xff
 800ec8a:	42ab      	cmp	r3, r5
 800ec8c:	f200 835e 	bhi.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec90:	6862      	ldr	r2, [r4, #4]
 800ec92:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800ec96:	33ff      	adds	r3, #255	; 0xff
 800ec98:	4283      	cmp	r3, r0
 800ec9a:	f200 8357 	bhi.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec9e:	69a1      	ldr	r1, [r4, #24]
 800eca0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800eca4:	33ff      	adds	r3, #255	; 0xff
 800eca6:	4283      	cmp	r3, r0
 800eca8:	f200 8350 	bhi.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ecac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ecae:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800ecb2:	30ff      	adds	r0, #255	; 0xff
 800ecb4:	42a8      	cmp	r0, r5
 800ecb6:	f200 8349 	bhi.w	800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ecba:	428a      	cmp	r2, r1
 800ecbc:	f280 8110 	bge.w	800eee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ecc0:	429a      	cmp	r2, r3
 800ecc2:	f300 8119 	bgt.w	800eef8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ecc6:	4299      	cmp	r1, r3
 800ecc8:	f280 811d 	bge.w	800ef06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800eccc:	2502      	movs	r5, #2
 800ecce:	2701      	movs	r7, #1
 800ecd0:	46a9      	mov	r9, r5
 800ecd2:	46b8      	mov	r8, r7
 800ecd4:	f04f 0a00 	mov.w	sl, #0
 800ecd8:	4621      	mov	r1, r4
 800ecda:	a849      	add	r0, sp, #292	; 0x124
 800ecdc:	f003 fe1e 	bl	801291c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ece0:	4622      	mov	r2, r4
 800ece2:	4653      	mov	r3, sl
 800ece4:	a949      	add	r1, sp, #292	; 0x124
 800ece6:	f8cd 9000 	str.w	r9, [sp]
 800ecea:	a819      	add	r0, sp, #100	; 0x64
 800ecec:	f003 ff46 	bl	8012b7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ecf0:	4622      	mov	r2, r4
 800ecf2:	4653      	mov	r3, sl
 800ecf4:	a949      	add	r1, sp, #292	; 0x124
 800ecf6:	f8cd 8000 	str.w	r8, [sp]
 800ecfa:	a829      	add	r0, sp, #164	; 0xa4
 800ecfc:	f003 ff3e 	bl	8012b7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ed00:	4643      	mov	r3, r8
 800ed02:	4622      	mov	r2, r4
 800ed04:	a949      	add	r1, sp, #292	; 0x124
 800ed06:	f8cd 9000 	str.w	r9, [sp]
 800ed0a:	a839      	add	r0, sp, #228	; 0xe4
 800ed0c:	f003 ff36 	bl	8012b7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ed10:	42af      	cmp	r7, r5
 800ed12:	af12      	add	r7, sp, #72	; 0x48
 800ed14:	bfb7      	itett	lt
 800ed16:	2300      	movlt	r3, #0
 800ed18:	2301      	movge	r3, #1
 800ed1a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800ed1c:	ac19      	addlt	r4, sp, #100	; 0x64
 800ed1e:	bfb1      	iteee	lt
 800ed20:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ed22:	ad19      	addge	r5, sp, #100	; 0x64
 800ed24:	930e      	strge	r3, [sp, #56]	; 0x38
 800ed26:	ac29      	addge	r4, sp, #164	; 0xa4
 800ed28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ed2a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ed2e:	e887 0003 	stmia.w	r7, {r0, r1}
 800ed32:	b928      	cbnz	r0, 800ed40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ed34:	4b80      	ldr	r3, [pc, #512]	; (800ef38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ed36:	6818      	ldr	r0, [r3, #0]
 800ed38:	6803      	ldr	r3, [r0, #0]
 800ed3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ed3c:	4798      	blx	r3
 800ed3e:	6038      	str	r0, [r7, #0]
 800ed40:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ed42:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ed46:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ed4a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800ed4c:	930c      	str	r3, [sp, #48]	; 0x30
 800ed4e:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ed50:	6963      	ldr	r3, [r4, #20]
 800ed52:	440b      	add	r3, r1
 800ed54:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ed58:	4408      	add	r0, r1
 800ed5a:	b200      	sxth	r0, r0
 800ed5c:	4283      	cmp	r3, r0
 800ed5e:	900d      	str	r0, [sp, #52]	; 0x34
 800ed60:	f280 80dd 	bge.w	800ef1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ed64:	428b      	cmp	r3, r1
 800ed66:	da08      	bge.n	800ed7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ed68:	2a00      	cmp	r2, #0
 800ed6a:	dd06      	ble.n	800ed7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ed6c:	1acb      	subs	r3, r1, r3
 800ed6e:	429a      	cmp	r2, r3
 800ed70:	f2c0 80e4 	blt.w	800ef3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ed74:	2b00      	cmp	r3, #0
 800ed76:	f300 80e2 	bgt.w	800ef3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800ed7a:	6967      	ldr	r7, [r4, #20]
 800ed7c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ed80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ed82:	443b      	add	r3, r7
 800ed84:	461f      	mov	r7, r3
 800ed86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ed88:	1bdf      	subs	r7, r3, r7
 800ed8a:	4297      	cmp	r7, r2
 800ed8c:	bfa8      	it	ge
 800ed8e:	4617      	movge	r7, r2
 800ed90:	2f00      	cmp	r7, #0
 800ed92:	f340 8166 	ble.w	800f062 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ed96:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ed98:	6829      	ldr	r1, [r5, #0]
 800ed9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed9e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800eda2:	4411      	add	r1, r2
 800eda4:	6820      	ldr	r0, [r4, #0]
 800eda6:	4299      	cmp	r1, r3
 800eda8:	dd1a      	ble.n	800ede0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800edaa:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800edae:	4402      	add	r2, r0
 800edb0:	440b      	add	r3, r1
 800edb2:	b21b      	sxth	r3, r3
 800edb4:	429a      	cmp	r2, r3
 800edb6:	dc13      	bgt.n	800ede0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800edb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800edba:	a912      	add	r1, sp, #72	; 0x48
 800edbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800edbe:	9809      	ldr	r0, [sp, #36]	; 0x24
 800edc0:	681b      	ldr	r3, [r3, #0]
 800edc2:	9206      	str	r2, [sp, #24]
 800edc4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800edc6:	9500      	str	r5, [sp, #0]
 800edc8:	9205      	str	r2, [sp, #20]
 800edca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800edcc:	e9cd b203 	strd	fp, r2, [sp, #12]
 800edd0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800edd2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800edd6:	aa49      	add	r2, sp, #292	; 0x124
 800edd8:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800eddc:	4623      	mov	r3, r4
 800edde:	47c8      	blx	r9
 800ede0:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ede4:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ede8:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800edec:	ee37 7a27 	vadd.f32	s14, s14, s15
 800edf0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800edf4:	68a1      	ldr	r1, [r4, #8]
 800edf6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800edfa:	ed94 6a08 	vldr	s12, [r4, #32]
 800edfe:	edd4 6a07 	vldr	s13, [r4, #28]
 800ee02:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ee06:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ee0a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ee0e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ee12:	edc4 6a07 	vstr	s13, [r4, #28]
 800ee16:	441a      	add	r2, r3
 800ee18:	6963      	ldr	r3, [r4, #20]
 800ee1a:	3301      	adds	r3, #1
 800ee1c:	6022      	str	r2, [r4, #0]
 800ee1e:	6163      	str	r3, [r4, #20]
 800ee20:	69a3      	ldr	r3, [r4, #24]
 800ee22:	3b01      	subs	r3, #1
 800ee24:	61a3      	str	r3, [r4, #24]
 800ee26:	6923      	ldr	r3, [r4, #16]
 800ee28:	440b      	add	r3, r1
 800ee2a:	68e1      	ldr	r1, [r4, #12]
 800ee2c:	428b      	cmp	r3, r1
 800ee2e:	6123      	str	r3, [r4, #16]
 800ee30:	db15      	blt.n	800ee5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ee32:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ee36:	3201      	adds	r2, #1
 800ee38:	1a5b      	subs	r3, r3, r1
 800ee3a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ee3e:	6022      	str	r2, [r4, #0]
 800ee40:	6123      	str	r3, [r4, #16]
 800ee42:	edc4 6a07 	vstr	s13, [r4, #28]
 800ee46:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ee4a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ee4e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ee52:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ee56:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ee5a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ee5e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ee62:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ee66:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ee6a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ee6e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ee72:	68a9      	ldr	r1, [r5, #8]
 800ee74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee78:	ed95 6a08 	vldr	s12, [r5, #32]
 800ee7c:	edd5 6a07 	vldr	s13, [r5, #28]
 800ee80:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ee84:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ee88:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ee8c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ee90:	edc5 6a07 	vstr	s13, [r5, #28]
 800ee94:	441a      	add	r2, r3
 800ee96:	696b      	ldr	r3, [r5, #20]
 800ee98:	3301      	adds	r3, #1
 800ee9a:	602a      	str	r2, [r5, #0]
 800ee9c:	616b      	str	r3, [r5, #20]
 800ee9e:	69ab      	ldr	r3, [r5, #24]
 800eea0:	3b01      	subs	r3, #1
 800eea2:	61ab      	str	r3, [r5, #24]
 800eea4:	692b      	ldr	r3, [r5, #16]
 800eea6:	440b      	add	r3, r1
 800eea8:	68e9      	ldr	r1, [r5, #12]
 800eeaa:	428b      	cmp	r3, r1
 800eeac:	612b      	str	r3, [r5, #16]
 800eeae:	db15      	blt.n	800eedc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800eeb0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800eeb4:	3201      	adds	r2, #1
 800eeb6:	1a5b      	subs	r3, r3, r1
 800eeb8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800eebc:	602a      	str	r2, [r5, #0]
 800eebe:	612b      	str	r3, [r5, #16]
 800eec0:	edc5 6a07 	vstr	s13, [r5, #28]
 800eec4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800eec8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800eecc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800eed0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800eed4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eed8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800eedc:	3f01      	subs	r7, #1
 800eede:	e757      	b.n	800ed90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800eee0:	4299      	cmp	r1, r3
 800eee2:	dc13      	bgt.n	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800eee4:	429a      	cmp	r2, r3
 800eee6:	da14      	bge.n	800ef12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800eee8:	2502      	movs	r5, #2
 800eeea:	2703      	movs	r7, #3
 800eeec:	f04f 0800 	mov.w	r8, #0
 800eef0:	46a9      	mov	r9, r5
 800eef2:	f04f 0a01 	mov.w	sl, #1
 800eef6:	e6ef      	b.n	800ecd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eef8:	2501      	movs	r5, #1
 800eefa:	2700      	movs	r7, #0
 800eefc:	46a9      	mov	r9, r5
 800eefe:	46b8      	mov	r8, r7
 800ef00:	f04f 0a02 	mov.w	sl, #2
 800ef04:	e6e8      	b.n	800ecd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ef06:	2501      	movs	r5, #1
 800ef08:	2702      	movs	r7, #2
 800ef0a:	e6e1      	b.n	800ecd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ef0c:	2500      	movs	r5, #0
 800ef0e:	2701      	movs	r7, #1
 800ef10:	e7f4      	b.n	800eefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ef12:	2702      	movs	r7, #2
 800ef14:	2503      	movs	r5, #3
 800ef16:	f04f 0900 	mov.w	r9, #0
 800ef1a:	46b8      	mov	r8, r7
 800ef1c:	e7e9      	b.n	800eef2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ef1e:	4613      	mov	r3, r2
 800ef20:	e728      	b.n	800ed74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ef22:	bf00      	nop
 800ef24:	2400e41c 	.word	0x2400e41c
 800ef28:	fffd8f01 	.word	0xfffd8f01
 800ef2c:	00027100 	.word	0x00027100
 800ef30:	0004e1ff 	.word	0x0004e1ff
 800ef34:	0004e1fe 	.word	0x0004e1fe
 800ef38:	2400e424 	.word	0x2400e424
 800ef3c:	4613      	mov	r3, r2
 800ef3e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ef40:	469e      	mov	lr, r3
 800ef42:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800ef44:	469c      	mov	ip, r3
 800ef46:	9111      	str	r1, [sp, #68]	; 0x44
 800ef48:	f04f 0900 	mov.w	r9, #0
 800ef4c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800ef50:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800ef54:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800ef58:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800ef5c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800ef60:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800ef64:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800ef68:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800ef6c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800ef70:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800ef74:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800ef78:	f1bc 0f00 	cmp.w	ip, #0
 800ef7c:	d147      	bne.n	800f00e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ef7e:	eb03 0c07 	add.w	ip, r3, r7
 800ef82:	1ad7      	subs	r7, r2, r3
 800ef84:	f1b9 0f00 	cmp.w	r9, #0
 800ef88:	d009      	beq.n	800ef9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800ef8a:	9029      	str	r0, [sp, #164]	; 0xa4
 800ef8c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800ef90:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800ef94:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800ef98:	912d      	str	r1, [sp, #180]	; 0xb4
 800ef9a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800ef9e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800efa0:	f04f 0800 	mov.w	r8, #0
 800efa4:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800efa8:	9111      	str	r1, [sp, #68]	; 0x44
 800efaa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800efae:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800efb2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800efb6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800efba:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800efbe:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800efc2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800efc6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800efca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800efce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800efd2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800efd6:	f1be 0f00 	cmp.w	lr, #0
 800efda:	d031      	beq.n	800f040 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800efdc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800efde:	4450      	add	r0, sl
 800efe0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800efe4:	4431      	add	r1, r6
 800efe6:	ee37 7a04 	vadd.f32	s14, s14, s8
 800efea:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800efee:	4549      	cmp	r1, r9
 800eff0:	db08      	blt.n	800f004 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800eff2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800eff6:	3001      	adds	r0, #1
 800eff8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800effc:	eba1 0109 	sub.w	r1, r1, r9
 800f000:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f004:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f008:	f04f 0801 	mov.w	r8, #1
 800f00c:	e7e3      	b.n	800efd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f00e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f010:	4450      	add	r0, sl
 800f012:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f016:	4431      	add	r1, r6
 800f018:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f01c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f020:	4541      	cmp	r1, r8
 800f022:	db08      	blt.n	800f036 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f024:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f028:	3001      	adds	r0, #1
 800f02a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f02e:	eba1 0108 	sub.w	r1, r1, r8
 800f032:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f036:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f03a:	f04f 0901 	mov.w	r9, #1
 800f03e:	e79b      	b.n	800ef78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f040:	449c      	add	ip, r3
 800f042:	1aff      	subs	r7, r7, r3
 800f044:	f1b8 0f00 	cmp.w	r8, #0
 800f048:	d009      	beq.n	800f05e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f04a:	9019      	str	r0, [sp, #100]	; 0x64
 800f04c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f050:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f054:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f058:	911d      	str	r1, [sp, #116]	; 0x74
 800f05a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f05e:	1ad2      	subs	r2, r2, r3
 800f060:	e68b      	b.n	800ed7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f062:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f064:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800f066:	2b00      	cmp	r3, #0
 800f068:	f000 80d1 	beq.w	800f20e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f06c:	ad19      	add	r5, sp, #100	; 0x64
 800f06e:	ac39      	add	r4, sp, #228	; 0xe4
 800f070:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f072:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f076:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f07a:	930c      	str	r3, [sp, #48]	; 0x30
 800f07c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f07e:	6963      	ldr	r3, [r4, #20]
 800f080:	440b      	add	r3, r1
 800f082:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f086:	4408      	add	r0, r1
 800f088:	b200      	sxth	r0, r0
 800f08a:	4283      	cmp	r3, r0
 800f08c:	900d      	str	r0, [sp, #52]	; 0x34
 800f08e:	f280 80c1 	bge.w	800f214 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f092:	428b      	cmp	r3, r1
 800f094:	da08      	bge.n	800f0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f096:	2a00      	cmp	r2, #0
 800f098:	dd06      	ble.n	800f0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f09a:	1acb      	subs	r3, r1, r3
 800f09c:	429a      	cmp	r2, r3
 800f09e:	f2c0 80bb 	blt.w	800f218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f0a2:	2b00      	cmp	r3, #0
 800f0a4:	f300 80b9 	bgt.w	800f21a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f0a8:	6967      	ldr	r7, [r4, #20]
 800f0aa:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f0ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f0b0:	443b      	add	r3, r7
 800f0b2:	461f      	mov	r7, r3
 800f0b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f0b6:	1bdf      	subs	r7, r3, r7
 800f0b8:	4297      	cmp	r7, r2
 800f0ba:	bfa8      	it	ge
 800f0bc:	4617      	movge	r7, r2
 800f0be:	2f00      	cmp	r7, #0
 800f0c0:	f340 813c 	ble.w	800f33c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f0c4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f0c6:	6829      	ldr	r1, [r5, #0]
 800f0c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f0cc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f0d0:	4411      	add	r1, r2
 800f0d2:	6820      	ldr	r0, [r4, #0]
 800f0d4:	4299      	cmp	r1, r3
 800f0d6:	dd1a      	ble.n	800f10e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f0d8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f0dc:	4402      	add	r2, r0
 800f0de:	440b      	add	r3, r1
 800f0e0:	b21b      	sxth	r3, r3
 800f0e2:	429a      	cmp	r2, r3
 800f0e4:	dc13      	bgt.n	800f10e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f0e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f0e8:	a912      	add	r1, sp, #72	; 0x48
 800f0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f0ec:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f0ee:	681b      	ldr	r3, [r3, #0]
 800f0f0:	9206      	str	r2, [sp, #24]
 800f0f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f0f4:	9500      	str	r5, [sp, #0]
 800f0f6:	9205      	str	r2, [sp, #20]
 800f0f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f0fa:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f0fe:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f100:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f104:	aa49      	add	r2, sp, #292	; 0x124
 800f106:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f10a:	4623      	mov	r3, r4
 800f10c:	47c8      	blx	r9
 800f10e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f112:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f116:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f11a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f11e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f122:	68a1      	ldr	r1, [r4, #8]
 800f124:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f128:	ed94 6a08 	vldr	s12, [r4, #32]
 800f12c:	edd4 6a07 	vldr	s13, [r4, #28]
 800f130:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f134:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f138:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f13c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f140:	edc4 6a07 	vstr	s13, [r4, #28]
 800f144:	441a      	add	r2, r3
 800f146:	6963      	ldr	r3, [r4, #20]
 800f148:	3301      	adds	r3, #1
 800f14a:	6022      	str	r2, [r4, #0]
 800f14c:	6163      	str	r3, [r4, #20]
 800f14e:	69a3      	ldr	r3, [r4, #24]
 800f150:	3b01      	subs	r3, #1
 800f152:	61a3      	str	r3, [r4, #24]
 800f154:	6923      	ldr	r3, [r4, #16]
 800f156:	440b      	add	r3, r1
 800f158:	68e1      	ldr	r1, [r4, #12]
 800f15a:	428b      	cmp	r3, r1
 800f15c:	6123      	str	r3, [r4, #16]
 800f15e:	db15      	blt.n	800f18c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f160:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f164:	3201      	adds	r2, #1
 800f166:	1a5b      	subs	r3, r3, r1
 800f168:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f16c:	6022      	str	r2, [r4, #0]
 800f16e:	6123      	str	r3, [r4, #16]
 800f170:	edc4 6a07 	vstr	s13, [r4, #28]
 800f174:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f178:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f17c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f180:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f184:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f188:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f18c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f190:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f194:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f198:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f19c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f1a0:	68a9      	ldr	r1, [r5, #8]
 800f1a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f1a6:	ed95 6a08 	vldr	s12, [r5, #32]
 800f1aa:	edd5 6a07 	vldr	s13, [r5, #28]
 800f1ae:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f1b2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f1b6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f1ba:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f1be:	edc5 6a07 	vstr	s13, [r5, #28]
 800f1c2:	441a      	add	r2, r3
 800f1c4:	696b      	ldr	r3, [r5, #20]
 800f1c6:	3301      	adds	r3, #1
 800f1c8:	602a      	str	r2, [r5, #0]
 800f1ca:	616b      	str	r3, [r5, #20]
 800f1cc:	69ab      	ldr	r3, [r5, #24]
 800f1ce:	3b01      	subs	r3, #1
 800f1d0:	61ab      	str	r3, [r5, #24]
 800f1d2:	692b      	ldr	r3, [r5, #16]
 800f1d4:	440b      	add	r3, r1
 800f1d6:	68e9      	ldr	r1, [r5, #12]
 800f1d8:	428b      	cmp	r3, r1
 800f1da:	612b      	str	r3, [r5, #16]
 800f1dc:	db15      	blt.n	800f20a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f1de:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f1e2:	3201      	adds	r2, #1
 800f1e4:	1a5b      	subs	r3, r3, r1
 800f1e6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f1ea:	602a      	str	r2, [r5, #0]
 800f1ec:	612b      	str	r3, [r5, #16]
 800f1ee:	edc5 6a07 	vstr	s13, [r5, #28]
 800f1f2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f1f6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f1fa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f1fe:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f202:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f206:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f20a:	3f01      	subs	r7, #1
 800f20c:	e757      	b.n	800f0be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f20e:	ad39      	add	r5, sp, #228	; 0xe4
 800f210:	ac19      	add	r4, sp, #100	; 0x64
 800f212:	e72d      	b.n	800f070 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f214:	4613      	mov	r3, r2
 800f216:	e744      	b.n	800f0a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f218:	4613      	mov	r3, r2
 800f21a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800f21c:	469e      	mov	lr, r3
 800f21e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800f222:	461f      	mov	r7, r3
 800f224:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800f228:	f04f 0900 	mov.w	r9, #0
 800f22c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800f230:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800f234:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800f238:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800f23c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800f240:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800f242:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800f246:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800f24a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800f24e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800f252:	960e      	str	r6, [sp, #56]	; 0x38
 800f254:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800f258:	2f00      	cmp	r7, #0
 800f25a:	d146      	bne.n	800f2ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f25c:	449c      	add	ip, r3
 800f25e:	1ad7      	subs	r7, r2, r3
 800f260:	f1b9 0f00 	cmp.w	r9, #0
 800f264:	d009      	beq.n	800f27a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f266:	9039      	str	r0, [sp, #228]	; 0xe4
 800f268:	913d      	str	r1, [sp, #244]	; 0xf4
 800f26a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800f26e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800f272:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800f276:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800f27a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f27c:	f04f 0800 	mov.w	r8, #0
 800f280:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f284:	910e      	str	r1, [sp, #56]	; 0x38
 800f286:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f28a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f28e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f292:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f296:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f29a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f29e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f2a2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f2a6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f2aa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f2ae:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f2b2:	f1be 0f00 	cmp.w	lr, #0
 800f2b6:	d030      	beq.n	800f31a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f2b8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f2ba:	4450      	add	r0, sl
 800f2bc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f2c0:	4431      	add	r1, r6
 800f2c2:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f2c6:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f2ca:	4549      	cmp	r1, r9
 800f2cc:	db08      	blt.n	800f2e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f2ce:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f2d2:	3001      	adds	r0, #1
 800f2d4:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f2d8:	eba1 0109 	sub.w	r1, r1, r9
 800f2dc:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f2e0:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f2e4:	f04f 0801 	mov.w	r8, #1
 800f2e8:	e7e3      	b.n	800f2b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f2ea:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f2ec:	4450      	add	r0, sl
 800f2ee:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f2f2:	4431      	add	r1, r6
 800f2f4:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f2f8:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f2fc:	4541      	cmp	r1, r8
 800f2fe:	db08      	blt.n	800f312 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f300:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f304:	3001      	adds	r0, #1
 800f306:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f30a:	eba1 0108 	sub.w	r1, r1, r8
 800f30e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f312:	3f01      	subs	r7, #1
 800f314:	f04f 0901 	mov.w	r9, #1
 800f318:	e79e      	b.n	800f258 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f31a:	449c      	add	ip, r3
 800f31c:	1aff      	subs	r7, r7, r3
 800f31e:	f1b8 0f00 	cmp.w	r8, #0
 800f322:	d009      	beq.n	800f338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f324:	9019      	str	r0, [sp, #100]	; 0x64
 800f326:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f32a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f32e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f332:	911d      	str	r1, [sp, #116]	; 0x74
 800f334:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f338:	1ad2      	subs	r2, r2, r3
 800f33a:	e6b5      	b.n	800f0a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f33c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f33e:	681b      	ldr	r3, [r3, #0]
 800f340:	b923      	cbnz	r3, 800f34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f342:	4b04      	ldr	r3, [pc, #16]	; (800f354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f344:	6818      	ldr	r0, [r3, #0]
 800f346:	6803      	ldr	r3, [r0, #0]
 800f348:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f34a:	4798      	blx	r3
 800f34c:	b05b      	add	sp, #364	; 0x16c
 800f34e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f352:	bf00      	nop
 800f354:	2400e424 	.word	0x2400e424

0800f358 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800f358:	b570      	push	{r4, r5, r6, lr}
 800f35a:	4604      	mov	r4, r0
 800f35c:	2500      	movs	r5, #0
 800f35e:	9805      	ldr	r0, [sp, #20]
 800f360:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800f364:	6061      	str	r1, [r4, #4]
 800f366:	8263      	strh	r3, [r4, #18]
 800f368:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800f36c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f370:	8025      	strh	r5, [r4, #0]
 800f372:	7221      	strb	r1, [r4, #8]
 800f374:	7266      	strb	r6, [r4, #9]
 800f376:	60e0      	str	r0, [r4, #12]
 800f378:	8222      	strh	r2, [r4, #16]
 800f37a:	82a3      	strh	r3, [r4, #20]
 800f37c:	82e5      	strh	r5, [r4, #22]
 800f37e:	8325      	strh	r5, [r4, #24]
 800f380:	8365      	strh	r5, [r4, #26]
 800f382:	83a5      	strh	r5, [r4, #28]
 800f384:	83e5      	strh	r5, [r4, #30]
 800f386:	8425      	strh	r5, [r4, #32]
 800f388:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800f38c:	b32e      	cbz	r6, 800f3da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f38e:	6803      	ldr	r3, [r0, #0]
 800f390:	695b      	ldr	r3, [r3, #20]
 800f392:	4798      	blx	r3
 800f394:	4606      	mov	r6, r0
 800f396:	b300      	cbz	r0, 800f3da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f398:	68e0      	ldr	r0, [r4, #12]
 800f39a:	4631      	mov	r1, r6
 800f39c:	6803      	ldr	r3, [r0, #0]
 800f39e:	68db      	ldr	r3, [r3, #12]
 800f3a0:	4798      	blx	r3
 800f3a2:	4605      	mov	r5, r0
 800f3a4:	b1c8      	cbz	r0, 800f3da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f3a6:	7b43      	ldrb	r3, [r0, #13]
 800f3a8:	7a82      	ldrb	r2, [r0, #10]
 800f3aa:	005b      	lsls	r3, r3, #1
 800f3ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f3b0:	4313      	orrs	r3, r2
 800f3b2:	8423      	strh	r3, [r4, #32]
 800f3b4:	7a63      	ldrb	r3, [r4, #9]
 800f3b6:	2b06      	cmp	r3, #6
 800f3b8:	d10f      	bne.n	800f3da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f3ba:	68e0      	ldr	r0, [r4, #12]
 800f3bc:	462a      	mov	r2, r5
 800f3be:	4631      	mov	r1, r6
 800f3c0:	6803      	ldr	r3, [r0, #0]
 800f3c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f3c4:	4798      	blx	r3
 800f3c6:	7b6b      	ldrb	r3, [r5, #13]
 800f3c8:	005b      	lsls	r3, r3, #1
 800f3ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f3ce:	7aab      	ldrb	r3, [r5, #10]
 800f3d0:	4313      	orrs	r3, r2
 800f3d2:	4418      	add	r0, r3
 800f3d4:	8c23      	ldrh	r3, [r4, #32]
 800f3d6:	4418      	add	r0, r3
 800f3d8:	8420      	strh	r0, [r4, #32]
 800f3da:	4620      	mov	r0, r4
 800f3dc:	bd70      	pop	{r4, r5, r6, pc}

0800f3de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f3de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3e2:	2400      	movs	r4, #0
 800f3e4:	b085      	sub	sp, #20
 800f3e6:	4681      	mov	r9, r0
 800f3e8:	4688      	mov	r8, r1
 800f3ea:	4692      	mov	sl, r2
 800f3ec:	469b      	mov	fp, r3
 800f3ee:	4627      	mov	r7, r4
 800f3f0:	4625      	mov	r5, r4
 800f3f2:	4626      	mov	r6, r4
 800f3f4:	4554      	cmp	r4, sl
 800f3f6:	da2a      	bge.n	800f44e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f3f8:	2300      	movs	r3, #0
 800f3fa:	9303      	str	r3, [sp, #12]
 800f3fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f400:	429d      	cmp	r5, r3
 800f402:	d004      	beq.n	800f40e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f404:	f242 030b 	movw	r3, #8203	; 0x200b
 800f408:	429d      	cmp	r5, r3
 800f40a:	bf18      	it	ne
 800f40c:	462f      	movne	r7, r5
 800f40e:	ab03      	add	r3, sp, #12
 800f410:	4642      	mov	r2, r8
 800f412:	4659      	mov	r1, fp
 800f414:	4648      	mov	r0, r9
 800f416:	f003 f897 	bl	8012548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f41a:	4605      	mov	r5, r0
 800f41c:	b1b8      	cbz	r0, 800f44e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f41e:	280a      	cmp	r0, #10
 800f420:	d015      	beq.n	800f44e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f422:	9a03      	ldr	r2, [sp, #12]
 800f424:	b18a      	cbz	r2, 800f44a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f426:	7b50      	ldrb	r0, [r2, #13]
 800f428:	4639      	mov	r1, r7
 800f42a:	7a93      	ldrb	r3, [r2, #10]
 800f42c:	0040      	lsls	r0, r0, #1
 800f42e:	8895      	ldrh	r5, [r2, #4]
 800f430:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f434:	4303      	orrs	r3, r0
 800f436:	4640      	mov	r0, r8
 800f438:	9301      	str	r3, [sp, #4]
 800f43a:	f8d8 3000 	ldr.w	r3, [r8]
 800f43e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f440:	4798      	blx	r3
 800f442:	9b01      	ldr	r3, [sp, #4]
 800f444:	4418      	add	r0, r3
 800f446:	4406      	add	r6, r0
 800f448:	b2b6      	uxth	r6, r6
 800f44a:	3401      	adds	r4, #1
 800f44c:	e7d2      	b.n	800f3f4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f44e:	4630      	mov	r0, r6
 800f450:	b005      	add	sp, #20
 800f452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f456 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f456:	2a02      	cmp	r2, #2
 800f458:	b530      	push	{r4, r5, lr}
 800f45a:	d011      	beq.n	800f480 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f45c:	2a03      	cmp	r2, #3
 800f45e:	d01c      	beq.n	800f49a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f460:	2a01      	cmp	r2, #1
 800f462:	d10c      	bne.n	800f47e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f464:	888b      	ldrh	r3, [r1, #4]
 800f466:	8801      	ldrh	r1, [r0, #0]
 800f468:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f46c:	1a5b      	subs	r3, r3, r1
 800f46e:	8844      	ldrh	r4, [r0, #2]
 800f470:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f474:	1a9b      	subs	r3, r3, r2
 800f476:	8004      	strh	r4, [r0, #0]
 800f478:	8081      	strh	r1, [r0, #4]
 800f47a:	8043      	strh	r3, [r0, #2]
 800f47c:	80c2      	strh	r2, [r0, #6]
 800f47e:	bd30      	pop	{r4, r5, pc}
 800f480:	88cb      	ldrh	r3, [r1, #6]
 800f482:	8842      	ldrh	r2, [r0, #2]
 800f484:	1a9b      	subs	r3, r3, r2
 800f486:	88c2      	ldrh	r2, [r0, #6]
 800f488:	1a9b      	subs	r3, r3, r2
 800f48a:	888a      	ldrh	r2, [r1, #4]
 800f48c:	8801      	ldrh	r1, [r0, #0]
 800f48e:	8043      	strh	r3, [r0, #2]
 800f490:	1a52      	subs	r2, r2, r1
 800f492:	8881      	ldrh	r1, [r0, #4]
 800f494:	1a52      	subs	r2, r2, r1
 800f496:	8002      	strh	r2, [r0, #0]
 800f498:	e7f1      	b.n	800f47e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f49a:	88cb      	ldrh	r3, [r1, #6]
 800f49c:	8841      	ldrh	r1, [r0, #2]
 800f49e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f4a2:	1a5b      	subs	r3, r3, r1
 800f4a4:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f4a8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f4ac:	1a9b      	subs	r3, r3, r2
 800f4ae:	8045      	strh	r5, [r0, #2]
 800f4b0:	8082      	strh	r2, [r0, #4]
 800f4b2:	8003      	strh	r3, [r0, #0]
 800f4b4:	80c4      	strh	r4, [r0, #6]
 800f4b6:	e7e2      	b.n	800f47e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f4b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4bc:	b09f      	sub	sp, #124	; 0x7c
 800f4be:	9116      	str	r1, [sp, #88]	; 0x58
 800f4c0:	9317      	str	r3, [sp, #92]	; 0x5c
 800f4c2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f4c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f4c6:	8809      	ldrh	r1, [r1, #0]
 800f4c8:	889b      	ldrh	r3, [r3, #4]
 800f4ca:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800f4ce:	440b      	add	r3, r1
 800f4d0:	9212      	str	r2, [sp, #72]	; 0x48
 800f4d2:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800f4d6:	b21b      	sxth	r3, r3
 800f4d8:	9011      	str	r0, [sp, #68]	; 0x44
 800f4da:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800f4de:	9310      	str	r3, [sp, #64]	; 0x40
 800f4e0:	f8d8 3000 	ldr.w	r3, [r8]
 800f4e4:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800f4e8:	7b19      	ldrb	r1, [r3, #12]
 800f4ea:	7adb      	ldrb	r3, [r3, #11]
 800f4ec:	9114      	str	r1, [sp, #80]	; 0x50
 800f4ee:	9315      	str	r3, [sp, #84]	; 0x54
 800f4f0:	2a00      	cmp	r2, #0
 800f4f2:	d06a      	beq.n	800f5ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f4f4:	f898 3010 	ldrb.w	r3, [r8, #16]
 800f4f8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800f4fa:	2b06      	cmp	r3, #6
 800f4fc:	bf14      	ite	ne
 800f4fe:	2301      	movne	r3, #1
 800f500:	2302      	moveq	r3, #2
 800f502:	4413      	add	r3, r2
 800f504:	f04f 0900 	mov.w	r9, #0
 800f508:	930f      	str	r3, [sp, #60]	; 0x3c
 800f50a:	464c      	mov	r4, r9
 800f50c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800f510:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800f514:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f518:	4293      	cmp	r3, r2
 800f51a:	f280 808f 	bge.w	800f63c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f51e:	2300      	movs	r3, #0
 800f520:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800f524:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800f528:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f52c:	429c      	cmp	r4, r3
 800f52e:	d006      	beq.n	800f53e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800f530:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f532:	f242 020b 	movw	r2, #8203	; 0x200b
 800f536:	4294      	cmp	r4, r2
 800f538:	bf18      	it	ne
 800f53a:	4623      	movne	r3, r4
 800f53c:	930d      	str	r3, [sp, #52]	; 0x34
 800f53e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f540:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800f542:	f8d8 2000 	ldr.w	r2, [r8]
 800f546:	428b      	cmp	r3, r1
 800f548:	db41      	blt.n	800f5ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f54a:	6813      	ldr	r3, [r2, #0]
 800f54c:	4610      	mov	r0, r2
 800f54e:	695b      	ldr	r3, [r3, #20]
 800f550:	4798      	blx	r3
 800f552:	4604      	mov	r4, r0
 800f554:	f8d8 0000 	ldr.w	r0, [r8]
 800f558:	aa1d      	add	r2, sp, #116	; 0x74
 800f55a:	4621      	mov	r1, r4
 800f55c:	6803      	ldr	r3, [r0, #0]
 800f55e:	689d      	ldr	r5, [r3, #8]
 800f560:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f564:	47a8      	blx	r5
 800f566:	901c      	str	r0, [sp, #112]	; 0x70
 800f568:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f56c:	429c      	cmp	r4, r3
 800f56e:	f000 80ec 	beq.w	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f572:	f242 030b 	movw	r3, #8203	; 0x200b
 800f576:	429c      	cmp	r4, r3
 800f578:	f000 80e7 	beq.w	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f57c:	2c00      	cmp	r4, #0
 800f57e:	f000 80f9 	beq.w	800f774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800f582:	2c0a      	cmp	r4, #10
 800f584:	d060      	beq.n	800f648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f586:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f588:	b36a      	cbz	r2, 800f5e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f58a:	8894      	ldrh	r4, [r2, #4]
 800f58c:	f1bb 0f00 	cmp.w	fp, #0
 800f590:	d03b      	beq.n	800f60a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800f592:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f596:	f1bb 0f01 	cmp.w	fp, #1
 800f59a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f59e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800f5a2:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f5a6:	ea49 0903 	orr.w	r9, r9, r3
 800f5aa:	d134      	bne.n	800f616 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800f5ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5ae:	eba6 0609 	sub.w	r6, r6, r9
 800f5b2:	2b00      	cmp	r3, #0
 800f5b4:	d14f      	bne.n	800f656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f5b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f5b8:	eb09 0306 	add.w	r3, r9, r6
 800f5bc:	4413      	add	r3, r2
 800f5be:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f5c0:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f5c4:	4293      	cmp	r3, r2
 800f5c6:	da51      	bge.n	800f66c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f5c8:	e038      	b.n	800f63c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f5ca:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f5cc:	e79a      	b.n	800f504 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800f5ce:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f5d2:	4659      	mov	r1, fp
 800f5d4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f5d6:	9301      	str	r3, [sp, #4]
 800f5d8:	ab1d      	add	r3, sp, #116	; 0x74
 800f5da:	9300      	str	r3, [sp, #0]
 800f5dc:	ab1c      	add	r3, sp, #112	; 0x70
 800f5de:	f002 fffc 	bl	80125da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f5e2:	4604      	mov	r4, r0
 800f5e4:	e7c0      	b.n	800f568 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800f5e6:	f8d8 0000 	ldr.w	r0, [r8]
 800f5ea:	6803      	ldr	r3, [r0, #0]
 800f5ec:	691b      	ldr	r3, [r3, #16]
 800f5ee:	4798      	blx	r3
 800f5f0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f5f4:	4298      	cmp	r0, r3
 800f5f6:	f000 80a8 	beq.w	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f5fa:	f242 030b 	movw	r3, #8203	; 0x200b
 800f5fe:	4298      	cmp	r0, r3
 800f600:	f000 80a3 	beq.w	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f604:	f1bb 0f00 	cmp.w	fp, #0
 800f608:	d100      	bne.n	800f60c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800f60a:	444e      	add	r6, r9
 800f60c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f60e:	2a00      	cmp	r2, #0
 800f610:	d1bf      	bne.n	800f592 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800f612:	4691      	mov	r9, r2
 800f614:	e099      	b.n	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f616:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f618:	2b00      	cmp	r3, #0
 800f61a:	f000 80ad 	beq.w	800f778 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 800f61e:	f1bb 0f00 	cmp.w	fp, #0
 800f622:	d118      	bne.n	800f656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f624:	f8d8 0000 	ldr.w	r0, [r8]
 800f628:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f62a:	6803      	ldr	r3, [r0, #0]
 800f62c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f62e:	4798      	blx	r3
 800f630:	4406      	add	r6, r0
 800f632:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f634:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f636:	1af3      	subs	r3, r6, r3
 800f638:	4293      	cmp	r3, r2
 800f63a:	dd17      	ble.n	800f66c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f63c:	2c00      	cmp	r4, #0
 800f63e:	f000 8099 	beq.w	800f774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800f642:	2c0a      	cmp	r4, #10
 800f644:	f040 8087 	bne.w	800f756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800f648:	240a      	movs	r4, #10
 800f64a:	fab4 f084 	clz	r0, r4
 800f64e:	0940      	lsrs	r0, r0, #5
 800f650:	b01f      	add	sp, #124	; 0x7c
 800f652:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f656:	f8d8 0000 	ldr.w	r0, [r8]
 800f65a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f65c:	6803      	ldr	r3, [r0, #0]
 800f65e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f660:	4798      	blx	r3
 800f662:	f1bb 0f01 	cmp.w	fp, #1
 800f666:	eba6 0600 	sub.w	r6, r6, r0
 800f66a:	d0a4      	beq.n	800f5b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800f66c:	981c      	ldr	r0, [sp, #112]	; 0x70
 800f66e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f670:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800f674:	f9b3 7000 	ldrsh.w	r7, [r3]
 800f678:	7b43      	ldrb	r3, [r0, #13]
 800f67a:	4431      	add	r1, r6
 800f67c:	015b      	lsls	r3, r3, #5
 800f67e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f682:	7983      	ldrb	r3, [r0, #6]
 800f684:	4313      	orrs	r3, r2
 800f686:	440b      	add	r3, r1
 800f688:	42bb      	cmp	r3, r7
 800f68a:	db5e      	blt.n	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f68c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f68e:	4299      	cmp	r1, r3
 800f690:	da5b      	bge.n	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f692:	f8d8 0000 	ldr.w	r0, [r8]
 800f696:	42b7      	cmp	r7, r6
 800f698:	6803      	ldr	r3, [r0, #0]
 800f69a:	bfcc      	ite	gt
 800f69c:	1bbf      	subgt	r7, r7, r6
 800f69e:	2700      	movle	r7, #0
 800f6a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f6a2:	bfc8      	it	gt
 800f6a4:	b2bf      	uxthgt	r7, r7
 800f6a6:	4798      	blx	r3
 800f6a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f6aa:	7b5a      	ldrb	r2, [r3, #13]
 800f6ac:	00d1      	lsls	r1, r2, #3
 800f6ae:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800f6b2:	7a19      	ldrb	r1, [r3, #8]
 800f6b4:	4329      	orrs	r1, r5
 800f6b6:	0655      	lsls	r5, r2, #25
 800f6b8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800f6ba:	bf48      	it	mi
 800f6bc:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800f6c0:	4405      	add	r5, r0
 800f6c2:	bf48      	it	mi
 800f6c4:	b209      	sxthmi	r1, r1
 800f6c6:	1a6d      	subs	r5, r5, r1
 800f6c8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f6ca:	b2ad      	uxth	r5, r5
 800f6cc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f6d0:	fa0f fa85 	sxth.w	sl, r5
 800f6d4:	4551      	cmp	r1, sl
 800f6d6:	dd3c      	ble.n	800f752 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800f6d8:	0112      	lsls	r2, r2, #4
 800f6da:	79d8      	ldrb	r0, [r3, #7]
 800f6dc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f6e0:	4302      	orrs	r2, r0
 800f6e2:	4492      	add	sl, r2
 800f6e4:	4551      	cmp	r1, sl
 800f6e6:	dc30      	bgt.n	800f74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f6e8:	1b4d      	subs	r5, r1, r5
 800f6ea:	468a      	mov	sl, r1
 800f6ec:	b22d      	sxth	r5, r5
 800f6ee:	9319      	str	r3, [sp, #100]	; 0x64
 800f6f0:	b2ad      	uxth	r5, r5
 800f6f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f6f4:	f8d8 0000 	ldr.w	r0, [r8]
 800f6f8:	681a      	ldr	r2, [r3, #0]
 800f6fa:	6801      	ldr	r1, [r0, #0]
 800f6fc:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800f6fe:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800f700:	9313      	str	r3, [sp, #76]	; 0x4c
 800f702:	9218      	str	r2, [sp, #96]	; 0x60
 800f704:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800f706:	4788      	blx	r1
 800f708:	f898 1006 	ldrb.w	r1, [r8, #6]
 800f70c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f70e:	910b      	str	r1, [sp, #44]	; 0x2c
 800f710:	f898 100e 	ldrb.w	r1, [r8, #14]
 800f714:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f716:	910a      	str	r1, [sp, #40]	; 0x28
 800f718:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800f71c:	9109      	str	r1, [sp, #36]	; 0x24
 800f71e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f722:	9305      	str	r3, [sp, #20]
 800f724:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f726:	9206      	str	r2, [sp, #24]
 800f728:	9304      	str	r3, [sp, #16]
 800f72a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f72c:	f8cd a004 	str.w	sl, [sp, #4]
 800f730:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800f734:	4437      	add	r7, r6
 800f736:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f738:	b23f      	sxth	r7, r7
 800f73a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800f73e:	9700      	str	r7, [sp, #0]
 800f740:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f742:	681a      	ldr	r2, [r3, #0]
 800f744:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f746:	685b      	ldr	r3, [r3, #4]
 800f748:	47a8      	blx	r5
 800f74a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f74c:	3301      	adds	r3, #1
 800f74e:	930e      	str	r3, [sp, #56]	; 0x38
 800f750:	e6e0      	b.n	800f514 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800f752:	2500      	movs	r5, #0
 800f754:	e7cb      	b.n	800f6ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 800f756:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800f758:	3501      	adds	r5, #1
 800f75a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f75c:	429d      	cmp	r5, r3
 800f75e:	f6bf af74 	bge.w	800f64a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f762:	4659      	mov	r1, fp
 800f764:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f766:	f7f3 fe95 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f76a:	4604      	mov	r4, r0
 800f76c:	b110      	cbz	r0, 800f774 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800f76e:	280a      	cmp	r0, #10
 800f770:	d1f2      	bne.n	800f758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 800f772:	e769      	b.n	800f648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f774:	2400      	movs	r4, #0
 800f776:	e768      	b.n	800f64a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f778:	f1bb 0f00 	cmp.w	fp, #0
 800f77c:	f43f af59 	beq.w	800f632 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800f780:	e774      	b.n	800f66c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800f782 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800f782:	b530      	push	{r4, r5, lr}
 800f784:	8ac4      	ldrh	r4, [r0, #22]
 800f786:	8b45      	ldrh	r5, [r0, #26]
 800f788:	8343      	strh	r3, [r0, #26]
 800f78a:	442c      	add	r4, r5
 800f78c:	1ae4      	subs	r4, r4, r3
 800f78e:	8b83      	ldrh	r3, [r0, #28]
 800f790:	82c4      	strh	r4, [r0, #22]
 800f792:	8b04      	ldrh	r4, [r0, #24]
 800f794:	4422      	add	r2, r4
 800f796:	440c      	add	r4, r1
 800f798:	1a59      	subs	r1, r3, r1
 800f79a:	83c2      	strh	r2, [r0, #30]
 800f79c:	8304      	strh	r4, [r0, #24]
 800f79e:	8381      	strh	r1, [r0, #28]
 800f7a0:	bd30      	pop	{r4, r5, pc}

0800f7a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800f7a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7a6:	4604      	mov	r4, r0
 800f7a8:	8a47      	ldrh	r7, [r0, #18]
 800f7aa:	68c0      	ldr	r0, [r0, #12]
 800f7ac:	b085      	sub	sp, #20
 800f7ae:	6803      	ldr	r3, [r0, #0]
 800f7b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f7b2:	4798      	blx	r3
 800f7b4:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800f7b8:	7a63      	ldrb	r3, [r4, #9]
 800f7ba:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800f7be:	3b01      	subs	r3, #1
 800f7c0:	42b7      	cmp	r7, r6
 800f7c2:	bfac      	ite	ge
 800f7c4:	f04f 0900 	movge.w	r9, #0
 800f7c8:	f04f 0901 	movlt.w	r9, #1
 800f7cc:	2b05      	cmp	r3, #5
 800f7ce:	d804      	bhi.n	800f7da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800f7d0:	e8df f003 	tbb	[pc, r3]
 800f7d4:	470f0854 	.word	0x470f0854
 800f7d8:	4c4c      	.short	0x4c4c
 800f7da:	2500      	movs	r5, #0
 800f7dc:	46a9      	mov	r9, r5
 800f7de:	462e      	mov	r6, r5
 800f7e0:	462f      	mov	r7, r5
 800f7e2:	e00e      	b.n	800f802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f7e4:	42b7      	cmp	r7, r6
 800f7e6:	f04f 0500 	mov.w	r5, #0
 800f7ea:	bfb4      	ite	lt
 800f7ec:	2600      	movlt	r6, #0
 800f7ee:	2601      	movge	r6, #1
 800f7f0:	e7f6      	b.n	800f7e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800f7f2:	42b7      	cmp	r7, r6
 800f7f4:	464d      	mov	r5, r9
 800f7f6:	f04f 0900 	mov.w	r9, #0
 800f7fa:	bfb4      	ite	lt
 800f7fc:	2600      	movlt	r6, #0
 800f7fe:	2601      	movge	r6, #1
 800f800:	464f      	mov	r7, r9
 800f802:	f04f 0800 	mov.w	r8, #0
 800f806:	f8a4 8016 	strh.w	r8, [r4, #22]
 800f80a:	f8a4 8018 	strh.w	r8, [r4, #24]
 800f80e:	f8cd 8004 	str.w	r8, [sp, #4]
 800f812:	2300      	movs	r3, #0
 800f814:	9303      	str	r3, [sp, #12]
 800f816:	8823      	ldrh	r3, [r4, #0]
 800f818:	2b20      	cmp	r3, #32
 800f81a:	d033      	beq.n	800f884 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800f81c:	f242 010b 	movw	r1, #8203	; 0x200b
 800f820:	1a5a      	subs	r2, r3, r1
 800f822:	f1d2 0a00 	rsbs	sl, r2, #0
 800f826:	eb4a 0a02 	adc.w	sl, sl, r2
 800f82a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f82e:	4293      	cmp	r3, r2
 800f830:	d008      	beq.n	800f844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f832:	428b      	cmp	r3, r1
 800f834:	9a01      	ldr	r2, [sp, #4]
 800f836:	bf0e      	itee	eq
 800f838:	f04f 0a01 	moveq.w	sl, #1
 800f83c:	461a      	movne	r2, r3
 800f83e:	f04f 0a00 	movne.w	sl, #0
 800f842:	9201      	str	r2, [sp, #4]
 800f844:	ab03      	add	r3, sp, #12
 800f846:	68e2      	ldr	r2, [r4, #12]
 800f848:	7a21      	ldrb	r1, [r4, #8]
 800f84a:	6860      	ldr	r0, [r4, #4]
 800f84c:	f002 fe7c 	bl	8012548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f850:	8020      	strh	r0, [r4, #0]
 800f852:	b9d8      	cbnz	r0, 800f88c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800f854:	8ba2      	ldrh	r2, [r4, #28]
 800f856:	2300      	movs	r3, #0
 800f858:	4611      	mov	r1, r2
 800f85a:	4620      	mov	r0, r4
 800f85c:	f7ff ff91 	bl	800f782 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f860:	e06e      	b.n	800f940 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800f862:	2500      	movs	r5, #0
 800f864:	2701      	movs	r7, #1
 800f866:	46a9      	mov	r9, r5
 800f868:	462e      	mov	r6, r5
 800f86a:	e7ca      	b.n	800f802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f86c:	42b7      	cmp	r7, r6
 800f86e:	f04f 0500 	mov.w	r5, #0
 800f872:	bfb4      	ite	lt
 800f874:	2700      	movlt	r7, #0
 800f876:	2701      	movge	r7, #1
 800f878:	462e      	mov	r6, r5
 800f87a:	e7c2      	b.n	800f802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f87c:	2500      	movs	r5, #0
 800f87e:	2601      	movs	r6, #1
 800f880:	46a9      	mov	r9, r5
 800f882:	e7ad      	b.n	800f7e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800f884:	9301      	str	r3, [sp, #4]
 800f886:	f04f 0a01 	mov.w	sl, #1
 800f88a:	e7db      	b.n	800f844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f88c:	8b63      	ldrh	r3, [r4, #26]
 800f88e:	280a      	cmp	r0, #10
 800f890:	f103 0301 	add.w	r3, r3, #1
 800f894:	8363      	strh	r3, [r4, #26]
 800f896:	d0dd      	beq.n	800f854 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800f898:	9a03      	ldr	r2, [sp, #12]
 800f89a:	bb62      	cbnz	r2, 800f8f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800f89c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f8a0:	4298      	cmp	r0, r3
 800f8a2:	d003      	beq.n	800f8ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800f8a4:	f242 030b 	movw	r3, #8203	; 0x200b
 800f8a8:	4298      	cmp	r0, r3
 800f8aa:	d1b2      	bne.n	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f8ac:	8823      	ldrh	r3, [r4, #0]
 800f8ae:	8ba1      	ldrh	r1, [r4, #28]
 800f8b0:	2b20      	cmp	r3, #32
 800f8b2:	d003      	beq.n	800f8bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800f8b4:	f242 000b 	movw	r0, #8203	; 0x200b
 800f8b8:	4283      	cmp	r3, r0
 800f8ba:	d131      	bne.n	800f920 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800f8bc:	f1ba 0f00 	cmp.w	sl, #0
 800f8c0:	bf0a      	itet	eq
 800f8c2:	4688      	moveq	r8, r1
 800f8c4:	4650      	movne	r0, sl
 800f8c6:	2001      	moveq	r0, #1
 800f8c8:	440a      	add	r2, r1
 800f8ca:	8b23      	ldrh	r3, [r4, #24]
 800f8cc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f8d0:	b292      	uxth	r2, r2
 800f8d2:	83a2      	strh	r2, [r4, #28]
 800f8d4:	4413      	add	r3, r2
 800f8d6:	f1b9 0f00 	cmp.w	r9, #0
 800f8da:	d102      	bne.n	800f8e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800f8dc:	2d00      	cmp	r5, #0
 800f8de:	d042      	beq.n	800f966 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800f8e0:	b300      	cbz	r0, 800f924 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800f8e2:	8c21      	ldrh	r1, [r4, #32]
 800f8e4:	4419      	add	r1, r3
 800f8e6:	458c      	cmp	ip, r1
 800f8e8:	da37      	bge.n	800f95a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f8ea:	8ae1      	ldrh	r1, [r4, #22]
 800f8ec:	2900      	cmp	r1, #0
 800f8ee:	d034      	beq.n	800f95a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f8f0:	4563      	cmp	r3, ip
 800f8f2:	dd8e      	ble.n	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f8f4:	e01d      	b.n	800f932 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800f8f6:	8893      	ldrh	r3, [r2, #4]
 800f8f8:	9901      	ldr	r1, [sp, #4]
 800f8fa:	8023      	strh	r3, [r4, #0]
 800f8fc:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800f900:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800f904:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800f908:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800f90c:	ea4b 0b00 	orr.w	fp, fp, r0
 800f910:	68e0      	ldr	r0, [r4, #12]
 800f912:	6803      	ldr	r3, [r0, #0]
 800f914:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f916:	4798      	blx	r3
 800f918:	eb0b 0200 	add.w	r2, fp, r0
 800f91c:	b292      	uxth	r2, r2
 800f91e:	e7c5      	b.n	800f8ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800f920:	2000      	movs	r0, #0
 800f922:	e7d1      	b.n	800f8c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800f924:	4563      	cmp	r3, ip
 800f926:	f77f af74 	ble.w	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f92a:	8ae3      	ldrh	r3, [r4, #22]
 800f92c:	2b00      	cmp	r3, #0
 800f92e:	f43f af70 	beq.w	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f932:	2301      	movs	r3, #1
 800f934:	8c22      	ldrh	r2, [r4, #32]
 800f936:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800f93a:	8be3      	ldrh	r3, [r4, #30]
 800f93c:	4413      	add	r3, r2
 800f93e:	83e3      	strh	r3, [r4, #30]
 800f940:	68e0      	ldr	r0, [r4, #12]
 800f942:	6803      	ldr	r3, [r0, #0]
 800f944:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f946:	4798      	blx	r3
 800f948:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800f94c:	4418      	add	r0, r3
 800f94e:	8a63      	ldrh	r3, [r4, #18]
 800f950:	1a18      	subs	r0, r3, r0
 800f952:	8260      	strh	r0, [r4, #18]
 800f954:	b005      	add	sp, #20
 800f956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f95a:	2300      	movs	r3, #0
 800f95c:	4611      	mov	r1, r2
 800f95e:	4620      	mov	r0, r4
 800f960:	f7ff ff0f 	bl	800f782 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f964:	e755      	b.n	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f966:	4563      	cmp	r3, ip
 800f968:	dd14      	ble.n	800f994 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800f96a:	b117      	cbz	r7, 800f972 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800f96c:	2301      	movs	r3, #1
 800f96e:	460a      	mov	r2, r1
 800f970:	e772      	b.n	800f858 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800f972:	2e00      	cmp	r6, #0
 800f974:	f43f af4d 	beq.w	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f978:	2800      	cmp	r0, #0
 800f97a:	f47f af4a 	bne.w	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f97e:	f1ba 0f00 	cmp.w	sl, #0
 800f982:	d002      	beq.n	800f98a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800f984:	2301      	movs	r3, #1
 800f986:	4642      	mov	r2, r8
 800f988:	e767      	b.n	800f85a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800f98a:	8ae3      	ldrh	r3, [r4, #22]
 800f98c:	2b00      	cmp	r3, #0
 800f98e:	f43f af40 	beq.w	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f992:	e7d5      	b.n	800f940 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800f994:	2800      	cmp	r0, #0
 800f996:	f47f af3c 	bne.w	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f99a:	f1ba 0f00 	cmp.w	sl, #0
 800f99e:	f43f af38 	beq.w	800f812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f9a2:	2301      	movs	r3, #1
 800f9a4:	4642      	mov	r2, r8
 800f9a6:	e7da      	b.n	800f95e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800f9a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f9a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f9aa:	4605      	mov	r5, r0
 800f9ac:	b08f      	sub	sp, #60	; 0x3c
 800f9ae:	4617      	mov	r7, r2
 800f9b0:	461c      	mov	r4, r3
 800f9b2:	460e      	mov	r6, r1
 800f9b4:	b1d1      	cbz	r1, 800f9ec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f9b6:	681b      	ldr	r3, [r3, #0]
 800f9b8:	4620      	mov	r0, r4
 800f9ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f9bc:	4798      	blx	r3
 800f9be:	4240      	negs	r0, r0
 800f9c0:	9603      	str	r6, [sp, #12]
 800f9c2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f9c6:	b200      	sxth	r0, r0
 800f9c8:	9700      	str	r7, [sp, #0]
 800f9ca:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f9ce:	4629      	mov	r1, r5
 800f9d0:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800f9d4:	2401      	movs	r4, #1
 800f9d6:	a805      	add	r0, sp, #20
 800f9d8:	f7ff fcbe 	bl	800f358 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f9dc:	a805      	add	r0, sp, #20
 800f9de:	f7ff fee0 	bl	800f7a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f9e2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800f9e6:	b163      	cbz	r3, 800fa02 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800f9e8:	3401      	adds	r4, #1
 800f9ea:	e7f7      	b.n	800f9dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f9ec:	2401      	movs	r4, #1
 800f9ee:	f002 fe77 	bl	80126e0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f9f2:	280a      	cmp	r0, #10
 800f9f4:	4628      	mov	r0, r5
 800f9f6:	bf08      	it	eq
 800f9f8:	3401      	addeq	r4, #1
 800f9fa:	f002 fe71 	bl	80126e0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f9fe:	2800      	cmp	r0, #0
 800fa00:	d1f7      	bne.n	800f9f2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800fa02:	b2a0      	uxth	r0, r4
 800fa04:	b00f      	add	sp, #60	; 0x3c
 800fa06:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fa08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800fa08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa0c:	b0e3      	sub	sp, #396	; 0x18c
 800fa0e:	461c      	mov	r4, r3
 800fa10:	4683      	mov	fp, r0
 800fa12:	4688      	mov	r8, r1
 800fa14:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800fa16:	2b00      	cmp	r3, #0
 800fa18:	f000 8112 	beq.w	800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fa1c:	6823      	ldr	r3, [r4, #0]
 800fa1e:	2b00      	cmp	r3, #0
 800fa20:	f000 810e 	beq.w	800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fa24:	7ba3      	ldrb	r3, [r4, #14]
 800fa26:	2b00      	cmp	r3, #0
 800fa28:	f000 810a 	beq.w	800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fa2c:	ad0a      	add	r5, sp, #40	; 0x28
 800fa2e:	6810      	ldr	r0, [r2, #0]
 800fa30:	6851      	ldr	r1, [r2, #4]
 800fa32:	462b      	mov	r3, r5
 800fa34:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800fa38:	c303      	stmia	r3!, {r0, r1}
 800fa3a:	2100      	movs	r1, #0
 800fa3c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800fa40:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800fa44:	4628      	mov	r0, r5
 800fa46:	910c      	str	r1, [sp, #48]	; 0x30
 800fa48:	a90c      	add	r1, sp, #48	; 0x30
 800fa4a:	79a2      	ldrb	r2, [r4, #6]
 800fa4c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fa50:	f7ff fd01 	bl	800f456 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fa54:	a90c      	add	r1, sp, #48	; 0x30
 800fa56:	79a2      	ldrb	r2, [r4, #6]
 800fa58:	4608      	mov	r0, r1
 800fa5a:	f7ff fcfc 	bl	800f456 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fa5e:	a817      	add	r0, sp, #92	; 0x5c
 800fa60:	f002 fa12 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 800fa64:	6820      	ldr	r0, [r4, #0]
 800fa66:	6803      	ldr	r3, [r0, #0]
 800fa68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800fa6a:	4798      	blx	r3
 800fa6c:	4606      	mov	r6, r0
 800fa6e:	6820      	ldr	r0, [r4, #0]
 800fa70:	6803      	ldr	r3, [r0, #0]
 800fa72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fa74:	4798      	blx	r3
 800fa76:	4633      	mov	r3, r6
 800fa78:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800fa7a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800fa7c:	9000      	str	r0, [sp, #0]
 800fa7e:	a817      	add	r0, sp, #92	; 0x5c
 800fa80:	f002 fa5d 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fa84:	6820      	ldr	r0, [r4, #0]
 800fa86:	f894 a004 	ldrb.w	sl, [r4, #4]
 800fa8a:	6803      	ldr	r3, [r0, #0]
 800fa8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa8e:	4798      	blx	r3
 800fa90:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800fa94:	6823      	ldr	r3, [r4, #0]
 800fa96:	4607      	mov	r7, r0
 800fa98:	4406      	add	r6, r0
 800fa9a:	a830      	add	r0, sp, #192	; 0xc0
 800fa9c:	f893 9009 	ldrb.w	r9, [r3, #9]
 800faa0:	f002 f9f2 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 800faa4:	7c23      	ldrb	r3, [r4, #16]
 800faa6:	b17b      	cbz	r3, 800fac8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800faa8:	6820      	ldr	r0, [r4, #0]
 800faaa:	6803      	ldr	r3, [r0, #0]
 800faac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800faae:	4798      	blx	r3
 800fab0:	9009      	str	r0, [sp, #36]	; 0x24
 800fab2:	6820      	ldr	r0, [r4, #0]
 800fab4:	6802      	ldr	r2, [r0, #0]
 800fab6:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800fab8:	4790      	blx	r2
 800faba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fabc:	9000      	str	r0, [sp, #0]
 800fabe:	a830      	add	r0, sp, #192	; 0xc0
 800fac0:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800fac2:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800fac4:	f002 fa3b 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fac8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800facc:	a80e      	add	r0, sp, #56	; 0x38
 800face:	7be2      	ldrb	r2, [r4, #15]
 800fad0:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800fad4:	1a8a      	subs	r2, r1, r2
 800fad6:	7c21      	ldrb	r1, [r4, #16]
 800fad8:	9103      	str	r1, [sp, #12]
 800fada:	b292      	uxth	r2, r2
 800fadc:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800fae0:	9102      	str	r1, [sp, #8]
 800fae2:	6821      	ldr	r1, [r4, #0]
 800fae4:	9101      	str	r1, [sp, #4]
 800fae6:	7961      	ldrb	r1, [r4, #5]
 800fae8:	9100      	str	r1, [sp, #0]
 800faea:	a930      	add	r1, sp, #192	; 0xc0
 800faec:	f7ff fc34 	bl	800f358 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800faf0:	2e00      	cmp	r6, #0
 800faf2:	dc5b      	bgt.n	800fbac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800faf4:	af17      	add	r7, sp, #92	; 0x5c
 800faf6:	f04f 0900 	mov.w	r9, #0
 800fafa:	7c23      	ldrb	r3, [r4, #16]
 800fafc:	2b00      	cmp	r3, #0
 800fafe:	f000 80b1 	beq.w	800fc64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800fb02:	a80e      	add	r0, sp, #56	; 0x38
 800fb04:	f7ff fe4d 	bl	800f7a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fb08:	f1ba 0f00 	cmp.w	sl, #0
 800fb0c:	f000 80a5 	beq.w	800fc5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800fb10:	7c23      	ldrb	r3, [r4, #16]
 800fb12:	2264      	movs	r2, #100	; 0x64
 800fb14:	4639      	mov	r1, r7
 800fb16:	a849      	add	r0, sp, #292	; 0x124
 800fb18:	9309      	str	r3, [sp, #36]	; 0x24
 800fb1a:	f011 fc42 	bl	80213a2 <memcpy>
 800fb1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb20:	2b00      	cmp	r3, #0
 800fb22:	f000 80a7 	beq.w	800fc74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800fb26:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800fb2a:	7922      	ldrb	r2, [r4, #4]
 800fb2c:	2a01      	cmp	r2, #1
 800fb2e:	f040 808a 	bne.w	800fc46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800fb32:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800fb36:	1ac0      	subs	r0, r0, r3
 800fb38:	2302      	movs	r3, #2
 800fb3a:	fb90 f0f3 	sdiv	r0, r0, r3
 800fb3e:	b200      	sxth	r0, r0
 800fb40:	7c23      	ldrb	r3, [r4, #16]
 800fb42:	2b00      	cmp	r3, #0
 800fb44:	f000 808b 	beq.w	800fc5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800fb48:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800fb4c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800fb50:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fb54:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800fb58:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800fb5c:	2100      	movs	r1, #0
 800fb5e:	4410      	add	r0, r2
 800fb60:	4642      	mov	r2, r8
 800fb62:	b200      	sxth	r0, r0
 800fb64:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800fb68:	9000      	str	r0, [sp, #0]
 800fb6a:	4658      	mov	r0, fp
 800fb6c:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800fb70:	f7ff fca2 	bl	800f4b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800fb74:	2800      	cmp	r0, #0
 800fb76:	d163      	bne.n	800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fb78:	b2b2      	uxth	r2, r6
 800fb7a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800fb7e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800fb82:	4413      	add	r3, r2
 800fb84:	1a8a      	subs	r2, r1, r2
 800fb86:	b21b      	sxth	r3, r3
 800fb88:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800fb8c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800fb90:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800fb94:	2a00      	cmp	r2, #0
 800fb96:	d153      	bne.n	800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fb98:	6822      	ldr	r2, [r4, #0]
 800fb9a:	8869      	ldrh	r1, [r5, #2]
 800fb9c:	7a12      	ldrb	r2, [r2, #8]
 800fb9e:	1a9b      	subs	r3, r3, r2
 800fba0:	88ea      	ldrh	r2, [r5, #6]
 800fba2:	440a      	add	r2, r1
 800fba4:	b212      	sxth	r2, r2
 800fba6:	4293      	cmp	r3, r2
 800fba8:	dda7      	ble.n	800fafa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800fbaa:	e049      	b.n	800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fbac:	7c23      	ldrb	r3, [r4, #16]
 800fbae:	444f      	add	r7, r9
 800fbb0:	b1c3      	cbz	r3, 800fbe4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800fbb2:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800fbb6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fbba:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fbbe:	443b      	add	r3, r7
 800fbc0:	4293      	cmp	r3, r2
 800fbc2:	da97      	bge.n	800faf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800fbc4:	a80e      	add	r0, sp, #56	; 0x38
 800fbc6:	f7ff fdec 	bl	800f7a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fbca:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800fbce:	3b01      	subs	r3, #1
 800fbd0:	b29b      	uxth	r3, r3
 800fbd2:	454b      	cmp	r3, r9
 800fbd4:	9309      	str	r3, [sp, #36]	; 0x24
 800fbd6:	d021      	beq.n	800fc1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800fbd8:	7961      	ldrb	r1, [r4, #5]
 800fbda:	a817      	add	r0, sp, #92	; 0x5c
 800fbdc:	f7f3 fc5a 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fbe0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbe2:	e7f4      	b.n	800fbce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800fbe4:	fa1f f986 	uxth.w	r9, r6
 800fbe8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fbec:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fbf0:	443b      	add	r3, r7
 800fbf2:	4293      	cmp	r3, r2
 800fbf4:	f6bf af7e 	bge.w	800faf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800fbf8:	a817      	add	r0, sp, #92	; 0x5c
 800fbfa:	f002 fd71 	bl	80126e0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fbfe:	b1f8      	cbz	r0, 800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fc00:	280a      	cmp	r0, #10
 800fc02:	d1f1      	bne.n	800fbe8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800fc04:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800fc08:	444b      	add	r3, r9
 800fc0a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800fc0e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800fc12:	eba3 0309 	sub.w	r3, r3, r9
 800fc16:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fc1a:	e7e5      	b.n	800fbe8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800fc1c:	b2b3      	uxth	r3, r6
 800fc1e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800fc22:	441a      	add	r2, r3
 800fc24:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800fc28:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800fc2c:	1ad3      	subs	r3, r2, r3
 800fc2e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fc32:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800fc36:	b11b      	cbz	r3, 800fc40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fc38:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 800fc3c:	2b00      	cmp	r3, #0
 800fc3e:	d0ba      	beq.n	800fbb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800fc40:	b063      	add	sp, #396	; 0x18c
 800fc42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc46:	2a02      	cmp	r2, #2
 800fc48:	d105      	bne.n	800fc56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800fc4a:	7be2      	ldrb	r2, [r4, #15]
 800fc4c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800fc50:	1a80      	subs	r0, r0, r2
 800fc52:	1ac0      	subs	r0, r0, r3
 800fc54:	e773      	b.n	800fb3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800fc56:	2000      	movs	r0, #0
 800fc58:	e772      	b.n	800fb40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800fc5a:	7be0      	ldrb	r0, [r4, #15]
 800fc5c:	e770      	b.n	800fb40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800fc5e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fc62:	e773      	b.n	800fb4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800fc64:	f1ba 0f00 	cmp.w	sl, #0
 800fc68:	d0f7      	beq.n	800fc5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800fc6a:	2264      	movs	r2, #100	; 0x64
 800fc6c:	4639      	mov	r1, r7
 800fc6e:	a849      	add	r0, sp, #292	; 0x124
 800fc70:	f011 fb97 	bl	80213a2 <memcpy>
 800fc74:	2300      	movs	r3, #0
 800fc76:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fc7a:	6821      	ldr	r1, [r4, #0]
 800fc7c:	a849      	add	r0, sp, #292	; 0x124
 800fc7e:	f7ff fbae 	bl	800f3de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800fc82:	b203      	sxth	r3, r0
 800fc84:	e751      	b.n	800fb2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800fc86 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800fc86:	2b03      	cmp	r3, #3
 800fc88:	d818      	bhi.n	800fcbc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800fc8a:	e8df f003 	tbb	[pc, r3]
 800fc8e:	0602      	.short	0x0602
 800fc90:	130d      	.short	0x130d
 800fc92:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fc96:	1850      	adds	r0, r2, r1
 800fc98:	4770      	bx	lr
 800fc9a:	8803      	ldrh	r3, [r0, #0]
 800fc9c:	8880      	ldrh	r0, [r0, #4]
 800fc9e:	4418      	add	r0, r3
 800fca0:	b200      	sxth	r0, r0
 800fca2:	1a80      	subs	r0, r0, r2
 800fca4:	3801      	subs	r0, #1
 800fca6:	4770      	bx	lr
 800fca8:	8803      	ldrh	r3, [r0, #0]
 800fcaa:	8880      	ldrh	r0, [r0, #4]
 800fcac:	4418      	add	r0, r3
 800fcae:	b200      	sxth	r0, r0
 800fcb0:	1a40      	subs	r0, r0, r1
 800fcb2:	e7f7      	b.n	800fca4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800fcb4:	f9b0 0000 	ldrsh.w	r0, [r0]
 800fcb8:	4410      	add	r0, r2
 800fcba:	4770      	bx	lr
 800fcbc:	2000      	movs	r0, #0
 800fcbe:	4770      	bx	lr

0800fcc0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800fcc0:	2b03      	cmp	r3, #3
 800fcc2:	d817      	bhi.n	800fcf4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800fcc4:	e8df f003 	tbb	[pc, r3]
 800fcc8:	10090602 	.word	0x10090602
 800fccc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fcd0:	1850      	adds	r0, r2, r1
 800fcd2:	4770      	bx	lr
 800fcd4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fcd8:	e7fa      	b.n	800fcd0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800fcda:	8843      	ldrh	r3, [r0, #2]
 800fcdc:	88c0      	ldrh	r0, [r0, #6]
 800fcde:	4418      	add	r0, r3
 800fce0:	b200      	sxth	r0, r0
 800fce2:	1a80      	subs	r0, r0, r2
 800fce4:	3801      	subs	r0, #1
 800fce6:	4770      	bx	lr
 800fce8:	8843      	ldrh	r3, [r0, #2]
 800fcea:	88c0      	ldrh	r0, [r0, #6]
 800fcec:	4418      	add	r0, r3
 800fcee:	b200      	sxth	r0, r0
 800fcf0:	1a40      	subs	r0, r0, r1
 800fcf2:	e7f7      	b.n	800fce4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800fcf4:	2000      	movs	r0, #0
 800fcf6:	4770      	bx	lr

0800fcf8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800fcf8:	4b01      	ldr	r3, [pc, #4]	; (800fd00 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800fcfa:	2200      	movs	r2, #0
 800fcfc:	601a      	str	r2, [r3, #0]
 800fcfe:	4770      	bx	lr
 800fd00:	2400e434 	.word	0x2400e434

0800fd04 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800fd04:	4603      	mov	r3, r0
 800fd06:	b1c8      	cbz	r0, 800fd3c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800fd08:	0c02      	lsrs	r2, r0, #16
 800fd0a:	0412      	lsls	r2, r2, #16
 800fd0c:	b9a2      	cbnz	r2, 800fd38 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800fd0e:	0403      	lsls	r3, r0, #16
 800fd10:	2010      	movs	r0, #16
 800fd12:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800fd16:	bf04      	itt	eq
 800fd18:	021b      	lsleq	r3, r3, #8
 800fd1a:	3008      	addeq	r0, #8
 800fd1c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800fd20:	bf04      	itt	eq
 800fd22:	011b      	lsleq	r3, r3, #4
 800fd24:	3004      	addeq	r0, #4
 800fd26:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800fd2a:	bf04      	itt	eq
 800fd2c:	009b      	lsleq	r3, r3, #2
 800fd2e:	3002      	addeq	r0, #2
 800fd30:	2b00      	cmp	r3, #0
 800fd32:	db04      	blt.n	800fd3e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800fd34:	3001      	adds	r0, #1
 800fd36:	4770      	bx	lr
 800fd38:	2000      	movs	r0, #0
 800fd3a:	e7ea      	b.n	800fd12 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800fd3c:	2020      	movs	r0, #32
 800fd3e:	4770      	bx	lr

0800fd40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800fd40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd44:	b087      	sub	sp, #28
 800fd46:	460d      	mov	r5, r1
 800fd48:	4616      	mov	r6, r2
 800fd4a:	4698      	mov	r8, r3
 800fd4c:	4601      	mov	r1, r0
 800fd4e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800fd52:	b120      	cbz	r0, 800fd5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fd54:	b11a      	cbz	r2, 800fd5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fd56:	2d1f      	cmp	r5, #31
 800fd58:	d801      	bhi.n	800fd5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fd5a:	2b1f      	cmp	r3, #31
 800fd5c:	d904      	bls.n	800fd68 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800fd5e:	2000      	movs	r0, #0
 800fd60:	6038      	str	r0, [r7, #0]
 800fd62:	b007      	add	sp, #28
 800fd64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd68:	b97d      	cbnz	r5, 800fd8a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800fd6a:	b143      	cbz	r3, 800fd7e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800fd6c:	4602      	mov	r2, r0
 800fd6e:	462b      	mov	r3, r5
 800fd70:	4641      	mov	r1, r8
 800fd72:	4630      	mov	r0, r6
 800fd74:	e9cd 4700 	strd	r4, r7, [sp]
 800fd78:	f7ff ffe2 	bl	800fd40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fd7c:	e7f1      	b.n	800fd62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fd7e:	f04f 33ff 	mov.w	r3, #4294967295
 800fd82:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fd86:	603b      	str	r3, [r7, #0]
 800fd88:	e7eb      	b.n	800fd62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fd8a:	fa32 fa05 	lsrs.w	sl, r2, r5
 800fd8e:	d106      	bne.n	800fd9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800fd90:	4346      	muls	r6, r0
 800fd92:	fbb6 f0f4 	udiv	r0, r6, r4
 800fd96:	fb04 6610 	mls	r6, r4, r0, r6
 800fd9a:	603e      	str	r6, [r7, #0]
 800fd9c:	e7e1      	b.n	800fd62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fd9e:	2201      	movs	r2, #1
 800fda0:	fa00 fb05 	lsl.w	fp, r0, r5
 800fda4:	40aa      	lsls	r2, r5
 800fda6:	fbbb f9f4 	udiv	r9, fp, r4
 800fdaa:	3a01      	subs	r2, #1
 800fdac:	fb0a f309 	mul.w	r3, sl, r9
 800fdb0:	fb04 b919 	mls	r9, r4, r9, fp
 800fdb4:	4016      	ands	r6, r2
 800fdb6:	9303      	str	r3, [sp, #12]
 800fdb8:	4630      	mov	r0, r6
 800fdba:	f7ff ffa3 	bl	800fd04 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fdbe:	462b      	mov	r3, r5
 800fdc0:	460a      	mov	r2, r1
 800fdc2:	4601      	mov	r1, r0
 800fdc4:	4630      	mov	r0, r6
 800fdc6:	e9cd 4700 	strd	r4, r7, [sp]
 800fdca:	f7ff ffb9 	bl	800fd40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fdce:	4606      	mov	r6, r0
 800fdd0:	4648      	mov	r0, r9
 800fdd2:	eb05 0108 	add.w	r1, r5, r8
 800fdd6:	f7ff ff95 	bl	800fd04 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fdda:	ab05      	add	r3, sp, #20
 800fddc:	464a      	mov	r2, r9
 800fdde:	e9cd 4300 	strd	r4, r3, [sp]
 800fde2:	4603      	mov	r3, r0
 800fde4:	4650      	mov	r0, sl
 800fde6:	f7ff ffab 	bl	800fd40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fdea:	6839      	ldr	r1, [r7, #0]
 800fdec:	9a05      	ldr	r2, [sp, #20]
 800fdee:	9b03      	ldr	r3, [sp, #12]
 800fdf0:	4411      	add	r1, r2
 800fdf2:	fbb1 f2f4 	udiv	r2, r1, r4
 800fdf6:	18d3      	adds	r3, r2, r3
 800fdf8:	fb04 1412 	mls	r4, r4, r2, r1
 800fdfc:	441e      	add	r6, r3
 800fdfe:	603c      	str	r4, [r7, #0]
 800fe00:	4430      	add	r0, r6
 800fe02:	e7ae      	b.n	800fd62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800fe04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800fe04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe08:	b085      	sub	sp, #20
 800fe0a:	f1b0 0900 	subs.w	r9, r0, #0
 800fe0e:	461d      	mov	r5, r3
 800fe10:	4617      	mov	r7, r2
 800fe12:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fe14:	bfbb      	ittet	lt
 800fe16:	f1c9 0900 	rsblt	r9, r9, #0
 800fe1a:	f04f 36ff 	movlt.w	r6, #4294967295
 800fe1e:	2601      	movge	r6, #1
 800fe20:	6823      	ldrlt	r3, [r4, #0]
 800fe22:	bfbc      	itt	lt
 800fe24:	425b      	neglt	r3, r3
 800fe26:	6023      	strlt	r3, [r4, #0]
 800fe28:	2a00      	cmp	r2, #0
 800fe2a:	da04      	bge.n	800fe36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800fe2c:	6823      	ldr	r3, [r4, #0]
 800fe2e:	4257      	negs	r7, r2
 800fe30:	4276      	negs	r6, r6
 800fe32:	425b      	negs	r3, r3
 800fe34:	6023      	str	r3, [r4, #0]
 800fe36:	2d00      	cmp	r5, #0
 800fe38:	4638      	mov	r0, r7
 800fe3a:	bfba      	itte	lt
 800fe3c:	426d      	neglt	r5, r5
 800fe3e:	f04f 38ff 	movlt.w	r8, #4294967295
 800fe42:	f04f 0801 	movge.w	r8, #1
 800fe46:	f7ff ff5d 	bl	800fd04 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fe4a:	ab03      	add	r3, sp, #12
 800fe4c:	463a      	mov	r2, r7
 800fe4e:	e9cd 5300 	strd	r5, r3, [sp]
 800fe52:	4603      	mov	r3, r0
 800fe54:	4648      	mov	r0, r9
 800fe56:	f7ff ff73 	bl	800fd40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fe5a:	6823      	ldr	r3, [r4, #0]
 800fe5c:	9a03      	ldr	r2, [sp, #12]
 800fe5e:	4546      	cmp	r6, r8
 800fe60:	441a      	add	r2, r3
 800fe62:	fb92 f3f5 	sdiv	r3, r2, r5
 800fe66:	4418      	add	r0, r3
 800fe68:	fb05 2313 	mls	r3, r5, r3, r2
 800fe6c:	bf18      	it	ne
 800fe6e:	4240      	negne	r0, r0
 800fe70:	1c72      	adds	r2, r6, #1
 800fe72:	6023      	str	r3, [r4, #0]
 800fe74:	d105      	bne.n	800fe82 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800fe76:	2b00      	cmp	r3, #0
 800fe78:	f1c3 0200 	rsb	r2, r3, #0
 800fe7c:	db0b      	blt.n	800fe96 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800fe7e:	6022      	str	r2, [r4, #0]
 800fe80:	e006      	b.n	800fe90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fe82:	2e01      	cmp	r6, #1
 800fe84:	d104      	bne.n	800fe90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fe86:	2b00      	cmp	r3, #0
 800fe88:	da02      	bge.n	800fe90 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fe8a:	442b      	add	r3, r5
 800fe8c:	3801      	subs	r0, #1
 800fe8e:	6023      	str	r3, [r4, #0]
 800fe90:	b005      	add	sp, #20
 800fe92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe96:	3801      	subs	r0, #1
 800fe98:	1b52      	subs	r2, r2, r5
 800fe9a:	e7f0      	b.n	800fe7e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800fe9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800fe9c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800fea0:	4c1c      	ldr	r4, [pc, #112]	; (800ff14 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800fea2:	4605      	mov	r5, r0
 800fea4:	6807      	ldr	r7, [r0, #0]
 800fea6:	69a3      	ldr	r3, [r4, #24]
 800fea8:	b92b      	cbnz	r3, 800feb6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800feaa:	6840      	ldr	r0, [r0, #4]
 800feac:	e9c5 7000 	strd	r7, r0, [r5]
 800feb0:	b004      	add	sp, #16
 800feb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800feb6:	f04f 0802 	mov.w	r8, #2
 800feba:	68a2      	ldr	r2, [r4, #8]
 800febc:	ae04      	add	r6, sp, #16
 800febe:	6820      	ldr	r0, [r4, #0]
 800fec0:	fb93 f1f8 	sdiv	r1, r3, r8
 800fec4:	440a      	add	r2, r1
 800fec6:	69e1      	ldr	r1, [r4, #28]
 800fec8:	f846 2d04 	str.w	r2, [r6, #-4]!
 800fecc:	463a      	mov	r2, r7
 800fece:	9600      	str	r6, [sp, #0]
 800fed0:	f7ff ff98 	bl	800fe04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fed4:	69a3      	ldr	r3, [r4, #24]
 800fed6:	4607      	mov	r7, r0
 800fed8:	686a      	ldr	r2, [r5, #4]
 800feda:	6a21      	ldr	r1, [r4, #32]
 800fedc:	9600      	str	r6, [sp, #0]
 800fede:	6860      	ldr	r0, [r4, #4]
 800fee0:	f7ff ff90 	bl	800fe04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fee4:	69a3      	ldr	r3, [r4, #24]
 800fee6:	6962      	ldr	r2, [r4, #20]
 800fee8:	4407      	add	r7, r0
 800feea:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800feec:	9600      	str	r6, [sp, #0]
 800feee:	68e0      	ldr	r0, [r4, #12]
 800fef0:	fb93 f8f8 	sdiv	r8, r3, r8
 800fef4:	4442      	add	r2, r8
 800fef6:	9203      	str	r2, [sp, #12]
 800fef8:	682a      	ldr	r2, [r5, #0]
 800fefa:	f7ff ff83 	bl	800fe04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fefe:	4680      	mov	r8, r0
 800ff00:	9600      	str	r6, [sp, #0]
 800ff02:	69a3      	ldr	r3, [r4, #24]
 800ff04:	686a      	ldr	r2, [r5, #4]
 800ff06:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ff08:	6920      	ldr	r0, [r4, #16]
 800ff0a:	f7ff ff7b 	bl	800fe04 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ff0e:	4440      	add	r0, r8
 800ff10:	e7cc      	b.n	800feac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ff12:	bf00      	nop
 800ff14:	2400e438 	.word	0x2400e438

0800ff18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ff18:	4b07      	ldr	r3, [pc, #28]	; (800ff38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ff1a:	781b      	ldrb	r3, [r3, #0]
 800ff1c:	2b01      	cmp	r3, #1
 800ff1e:	d109      	bne.n	800ff34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ff20:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ff24:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ff28:	8003      	strh	r3, [r0, #0]
 800ff2a:	4b04      	ldr	r3, [pc, #16]	; (800ff3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ff2c:	881b      	ldrh	r3, [r3, #0]
 800ff2e:	3b01      	subs	r3, #1
 800ff30:	1a9b      	subs	r3, r3, r2
 800ff32:	800b      	strh	r3, [r1, #0]
 800ff34:	4770      	bx	lr
 800ff36:	bf00      	nop
 800ff38:	2400e41c 	.word	0x2400e41c
 800ff3c:	2400e418 	.word	0x2400e418

0800ff40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ff40:	4b07      	ldr	r3, [pc, #28]	; (800ff60 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ff42:	b510      	push	{r4, lr}
 800ff44:	781b      	ldrb	r3, [r3, #0]
 800ff46:	2b01      	cmp	r3, #1
 800ff48:	d108      	bne.n	800ff5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ff4a:	4b06      	ldr	r3, [pc, #24]	; (800ff64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ff4c:	880c      	ldrh	r4, [r1, #0]
 800ff4e:	881b      	ldrh	r3, [r3, #0]
 800ff50:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ff54:	3b01      	subs	r3, #1
 800ff56:	1b1b      	subs	r3, r3, r4
 800ff58:	8003      	strh	r3, [r0, #0]
 800ff5a:	800a      	strh	r2, [r1, #0]
 800ff5c:	bd10      	pop	{r4, pc}
 800ff5e:	bf00      	nop
 800ff60:	2400e41c 	.word	0x2400e41c
 800ff64:	2400e418 	.word	0x2400e418

0800ff68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ff68:	4b0a      	ldr	r3, [pc, #40]	; (800ff94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ff6a:	b510      	push	{r4, lr}
 800ff6c:	781b      	ldrb	r3, [r3, #0]
 800ff6e:	2b01      	cmp	r3, #1
 800ff70:	d10e      	bne.n	800ff90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ff72:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ff76:	8843      	ldrh	r3, [r0, #2]
 800ff78:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ff7c:	18ca      	adds	r2, r1, r3
 800ff7e:	4b06      	ldr	r3, [pc, #24]	; (800ff98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ff80:	8044      	strh	r4, [r0, #2]
 800ff82:	881b      	ldrh	r3, [r3, #0]
 800ff84:	1a9b      	subs	r3, r3, r2
 800ff86:	8003      	strh	r3, [r0, #0]
 800ff88:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ff8c:	8081      	strh	r1, [r0, #4]
 800ff8e:	80c3      	strh	r3, [r0, #6]
 800ff90:	bd10      	pop	{r4, pc}
 800ff92:	bf00      	nop
 800ff94:	2400e41c 	.word	0x2400e41c
 800ff98:	2400e418 	.word	0x2400e418

0800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800ff9c:	4b08      	ldr	r3, [pc, #32]	; (800ffc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800ff9e:	781b      	ldrb	r3, [r3, #0]
 800ffa0:	2b01      	cmp	r3, #1
 800ffa2:	d10c      	bne.n	800ffbe <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800ffa4:	8803      	ldrh	r3, [r0, #0]
 800ffa6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800ffaa:	8842      	ldrh	r2, [r0, #2]
 800ffac:	8002      	strh	r2, [r0, #0]
 800ffae:	185a      	adds	r2, r3, r1
 800ffb0:	4b04      	ldr	r3, [pc, #16]	; (800ffc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800ffb2:	881b      	ldrh	r3, [r3, #0]
 800ffb4:	1a9b      	subs	r3, r3, r2
 800ffb6:	8043      	strh	r3, [r0, #2]
 800ffb8:	88c3      	ldrh	r3, [r0, #6]
 800ffba:	80c1      	strh	r1, [r0, #6]
 800ffbc:	8083      	strh	r3, [r0, #4]
 800ffbe:	4770      	bx	lr
 800ffc0:	2400e41c 	.word	0x2400e41c
 800ffc4:	2400e418 	.word	0x2400e418

0800ffc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ffc8:	4b07      	ldr	r3, [pc, #28]	; (800ffe8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ffca:	b510      	push	{r4, lr}
 800ffcc:	781b      	ldrb	r3, [r3, #0]
 800ffce:	2b01      	cmp	r3, #1
 800ffd0:	d108      	bne.n	800ffe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ffd2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ffd6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ffda:	8003      	strh	r3, [r0, #0]
 800ffdc:	8893      	ldrh	r3, [r2, #4]
 800ffde:	3b01      	subs	r3, #1
 800ffe0:	1b1b      	subs	r3, r3, r4
 800ffe2:	800b      	strh	r3, [r1, #0]
 800ffe4:	bd10      	pop	{r4, pc}
 800ffe6:	bf00      	nop
 800ffe8:	2400e41c 	.word	0x2400e41c

0800ffec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800ffec:	4b0b      	ldr	r3, [pc, #44]	; (801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800ffee:	781b      	ldrb	r3, [r3, #0]
 800fff0:	2b01      	cmp	r3, #1
 800fff2:	d111      	bne.n	8010018 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800fff4:	680b      	ldr	r3, [r1, #0]
 800fff6:	ed90 7a00 	vldr	s14, [r0]
 800fffa:	6003      	str	r3, [r0, #0]
 800fffc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8010000:	eddf 6a07 	vldr	s13, [pc, #28]	; 8010020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8010004:	ee07 3a90 	vmov	s15, r3
 8010008:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801000c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010010:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8010014:	edc1 7a00 	vstr	s15, [r1]
 8010018:	4770      	bx	lr
 801001a:	bf00      	nop
 801001c:	2400e41c 	.word	0x2400e41c
 8010020:	38d1b717 	.word	0x38d1b717

08010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010024:	4b0a      	ldr	r3, [pc, #40]	; (8010050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010026:	460a      	mov	r2, r1
 8010028:	b510      	push	{r4, lr}
 801002a:	781b      	ldrb	r3, [r3, #0]
 801002c:	2b01      	cmp	r3, #1
 801002e:	d10d      	bne.n	801004c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010030:	8881      	ldrh	r1, [r0, #4]
 8010032:	8803      	ldrh	r3, [r0, #0]
 8010034:	440b      	add	r3, r1
 8010036:	4601      	mov	r1, r0
 8010038:	3b01      	subs	r3, #1
 801003a:	f821 3b02 	strh.w	r3, [r1], #2
 801003e:	f7ff ffc3 	bl	800ffc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010042:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010046:	88c2      	ldrh	r2, [r0, #6]
 8010048:	80c3      	strh	r3, [r0, #6]
 801004a:	8082      	strh	r2, [r0, #4]
 801004c:	bd10      	pop	{r4, pc}
 801004e:	bf00      	nop
 8010050:	2400e41c 	.word	0x2400e41c

08010054 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010054:	4b06      	ldr	r3, [pc, #24]	; (8010070 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010056:	2100      	movs	r1, #0
 8010058:	f9b3 2000 	ldrsh.w	r2, [r3]
 801005c:	4b05      	ldr	r3, [pc, #20]	; (8010074 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801005e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8010062:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010066:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801006a:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801006e:	4770      	bx	lr
 8010070:	2400e418 	.word	0x2400e418
 8010074:	2400e41a 	.word	0x2400e41a

08010078 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010078:	4b03      	ldr	r3, [pc, #12]	; (8010088 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801007a:	6818      	ldr	r0, [r3, #0]
 801007c:	b110      	cbz	r0, 8010084 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801007e:	6803      	ldr	r3, [r0, #0]
 8010080:	699b      	ldr	r3, [r3, #24]
 8010082:	4718      	bx	r3
 8010084:	4770      	bx	lr
 8010086:	bf00      	nop
 8010088:	2400e468 	.word	0x2400e468

0801008c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801008c:	4770      	bx	lr
	...

08010090 <_ZN8touchgfx11Application4drawEv>:
 8010090:	4b09      	ldr	r3, [pc, #36]	; (80100b8 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010092:	b507      	push	{r0, r1, r2, lr}
 8010094:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010098:	2100      	movs	r1, #0
 801009a:	4b08      	ldr	r3, [pc, #32]	; (80100bc <_ZN8touchgfx11Application4drawEv+0x2c>)
 801009c:	9100      	str	r1, [sp, #0]
 801009e:	4669      	mov	r1, sp
 80100a0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80100a4:	f8ad 2004 	strh.w	r2, [sp, #4]
 80100a8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80100ac:	6803      	ldr	r3, [r0, #0]
 80100ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80100b0:	4798      	blx	r3
 80100b2:	b003      	add	sp, #12
 80100b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80100b8:	2400e418 	.word	0x2400e418
 80100bc:	2400e41a 	.word	0x2400e41a

080100c0 <_ZN8touchgfx11Application10invalidateEv>:
 80100c0:	4b09      	ldr	r3, [pc, #36]	; (80100e8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80100c2:	b082      	sub	sp, #8
 80100c4:	2100      	movs	r1, #0
 80100c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80100ca:	4b08      	ldr	r3, [pc, #32]	; (80100ec <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80100cc:	f8ad 2004 	strh.w	r2, [sp, #4]
 80100d0:	aa02      	add	r2, sp, #8
 80100d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80100d6:	9100      	str	r1, [sp, #0]
 80100d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80100dc:	6803      	ldr	r3, [r0, #0]
 80100de:	e912 0006 	ldmdb	r2, {r1, r2}
 80100e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80100e4:	b002      	add	sp, #8
 80100e6:	4718      	bx	r3
 80100e8:	2400e418 	.word	0x2400e418
 80100ec:	2400e41a 	.word	0x2400e41a

080100f0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80100f0:	4b03      	ldr	r3, [pc, #12]	; (8010100 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80100f2:	6818      	ldr	r0, [r3, #0]
 80100f4:	b110      	cbz	r0, 80100fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80100f6:	6803      	ldr	r3, [r0, #0]
 80100f8:	69db      	ldr	r3, [r3, #28]
 80100fa:	4718      	bx	r3
 80100fc:	4770      	bx	lr
 80100fe:	bf00      	nop
 8010100:	2400e468 	.word	0x2400e468

08010104 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010104:	4b03      	ldr	r3, [pc, #12]	; (8010114 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010106:	6818      	ldr	r0, [r3, #0]
 8010108:	b110      	cbz	r0, 8010110 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801010a:	6803      	ldr	r3, [r0, #0]
 801010c:	6a1b      	ldr	r3, [r3, #32]
 801010e:	4718      	bx	r3
 8010110:	4770      	bx	lr
 8010112:	bf00      	nop
 8010114:	2400e468 	.word	0x2400e468

08010118 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010118:	2300      	movs	r3, #0
 801011a:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801011e:	4770      	bx	lr

08010120 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010120:	4b03      	ldr	r3, [pc, #12]	; (8010130 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010122:	6818      	ldr	r0, [r3, #0]
 8010124:	b110      	cbz	r0, 801012c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010126:	6803      	ldr	r3, [r0, #0]
 8010128:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801012a:	4718      	bx	r3
 801012c:	4770      	bx	lr
 801012e:	bf00      	nop
 8010130:	2400e468 	.word	0x2400e468

08010134 <_ZN8touchgfx11ApplicationD1Ev>:
 8010134:	4770      	bx	lr

08010136 <_ZN8touchgfx11ApplicationD0Ev>:
 8010136:	b510      	push	{r4, lr}
 8010138:	4604      	mov	r4, r0
 801013a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801013e:	f010 fe2c 	bl	8020d9a <_ZdlPvj>
 8010142:	4620      	mov	r0, r4
 8010144:	bd10      	pop	{r4, pc}

08010146 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010146:	b510      	push	{r4, lr}
 8010148:	f9b1 4000 	ldrsh.w	r4, [r1]
 801014c:	888a      	ldrh	r2, [r1, #4]
 801014e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010152:	4422      	add	r2, r4
 8010154:	b212      	sxth	r2, r2
 8010156:	4293      	cmp	r3, r2
 8010158:	da15      	bge.n	8010186 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801015a:	8882      	ldrh	r2, [r0, #4]
 801015c:	4413      	add	r3, r2
 801015e:	b21b      	sxth	r3, r3
 8010160:	429c      	cmp	r4, r3
 8010162:	da10      	bge.n	8010186 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010164:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010168:	88c9      	ldrh	r1, [r1, #6]
 801016a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801016e:	4419      	add	r1, r3
 8010170:	b209      	sxth	r1, r1
 8010172:	428a      	cmp	r2, r1
 8010174:	da07      	bge.n	8010186 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010176:	88c0      	ldrh	r0, [r0, #6]
 8010178:	4410      	add	r0, r2
 801017a:	b200      	sxth	r0, r0
 801017c:	4283      	cmp	r3, r0
 801017e:	bfac      	ite	ge
 8010180:	2000      	movge	r0, #0
 8010182:	2001      	movlt	r0, #1
 8010184:	bd10      	pop	{r4, pc}
 8010186:	2000      	movs	r0, #0
 8010188:	e7fc      	b.n	8010184 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801018a <_ZN8touchgfx4Rect10restrictToEss>:
 801018a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801018e:	2b00      	cmp	r3, #0
 8010190:	b510      	push	{r4, lr}
 8010192:	da04      	bge.n	801019e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010194:	8884      	ldrh	r4, [r0, #4]
 8010196:	4423      	add	r3, r4
 8010198:	8083      	strh	r3, [r0, #4]
 801019a:	2300      	movs	r3, #0
 801019c:	8003      	strh	r3, [r0, #0]
 801019e:	f9b0 4000 	ldrsh.w	r4, [r0]
 80101a2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80101a6:	1b09      	subs	r1, r1, r4
 80101a8:	428b      	cmp	r3, r1
 80101aa:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80101ae:	bfc8      	it	gt
 80101b0:	8081      	strhgt	r1, [r0, #4]
 80101b2:	2b00      	cmp	r3, #0
 80101b4:	da04      	bge.n	80101c0 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80101b6:	88c1      	ldrh	r1, [r0, #6]
 80101b8:	440b      	add	r3, r1
 80101ba:	80c3      	strh	r3, [r0, #6]
 80101bc:	2300      	movs	r3, #0
 80101be:	8043      	strh	r3, [r0, #2]
 80101c0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80101c4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80101c8:	1a52      	subs	r2, r2, r1
 80101ca:	4293      	cmp	r3, r2
 80101cc:	bfc8      	it	gt
 80101ce:	80c2      	strhgt	r2, [r0, #6]
 80101d0:	bd10      	pop	{r4, pc}
	...

080101d4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80101d4:	4b10      	ldr	r3, [pc, #64]	; (8010218 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80101d6:	b510      	push	{r4, lr}
 80101d8:	460c      	mov	r4, r1
 80101da:	f9b3 2000 	ldrsh.w	r2, [r3]
 80101de:	4b0f      	ldr	r3, [pc, #60]	; (801021c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80101e0:	4620      	mov	r0, r4
 80101e2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80101e6:	f7ff ffd0 	bl	801018a <_ZN8touchgfx4Rect10restrictToEss>
 80101ea:	4b0d      	ldr	r3, [pc, #52]	; (8010220 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80101ec:	6818      	ldr	r0, [r3, #0]
 80101ee:	b190      	cbz	r0, 8010216 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80101f0:	6803      	ldr	r3, [r0, #0]
 80101f2:	4621      	mov	r1, r4
 80101f4:	689b      	ldr	r3, [r3, #8]
 80101f6:	4798      	blx	r3
 80101f8:	4b0a      	ldr	r3, [pc, #40]	; (8010224 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80101fa:	6818      	ldr	r0, [r3, #0]
 80101fc:	b118      	cbz	r0, 8010206 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80101fe:	6803      	ldr	r3, [r0, #0]
 8010200:	4621      	mov	r1, r4
 8010202:	689b      	ldr	r3, [r3, #8]
 8010204:	4798      	blx	r3
 8010206:	4b08      	ldr	r3, [pc, #32]	; (8010228 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010208:	4621      	mov	r1, r4
 801020a:	6818      	ldr	r0, [r3, #0]
 801020c:	6803      	ldr	r3, [r0, #0]
 801020e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010212:	69db      	ldr	r3, [r3, #28]
 8010214:	4718      	bx	r3
 8010216:	bd10      	pop	{r4, pc}
 8010218:	2400e41a 	.word	0x2400e41a
 801021c:	2400e418 	.word	0x2400e418
 8010220:	2400e468 	.word	0x2400e468
 8010224:	2400e464 	.word	0x2400e464
 8010228:	2400e424 	.word	0x2400e424

0801022c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801022c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801022e:	4606      	mov	r6, r0
 8010230:	4608      	mov	r0, r1
 8010232:	460f      	mov	r7, r1
 8010234:	f7fa fc75 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010238:	b9e8      	cbnz	r0, 8010276 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801023a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801023e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8010242:	42a5      	cmp	r5, r4
 8010244:	db17      	blt.n	8010276 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010246:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801024a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801024e:	429a      	cmp	r2, r3
 8010250:	db11      	blt.n	8010276 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010252:	88b9      	ldrh	r1, [r7, #4]
 8010254:	440d      	add	r5, r1
 8010256:	88b1      	ldrh	r1, [r6, #4]
 8010258:	440c      	add	r4, r1
 801025a:	b22d      	sxth	r5, r5
 801025c:	b224      	sxth	r4, r4
 801025e:	42a5      	cmp	r5, r4
 8010260:	dc09      	bgt.n	8010276 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010262:	88f8      	ldrh	r0, [r7, #6]
 8010264:	4410      	add	r0, r2
 8010266:	88f2      	ldrh	r2, [r6, #6]
 8010268:	4413      	add	r3, r2
 801026a:	b200      	sxth	r0, r0
 801026c:	b21b      	sxth	r3, r3
 801026e:	4298      	cmp	r0, r3
 8010270:	bfcc      	ite	gt
 8010272:	2000      	movgt	r0, #0
 8010274:	2001      	movle	r0, #1
 8010276:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010278 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8010278:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801027a:	4604      	mov	r4, r0
 801027c:	4608      	mov	r0, r1
 801027e:	460d      	mov	r5, r1
 8010280:	f7fa fc4f 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010284:	b978      	cbnz	r0, 80102a6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8010286:	4620      	mov	r0, r4
 8010288:	f7fa fc4b 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 801028c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8010290:	b150      	cbz	r0, 80102a8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8010292:	8026      	strh	r6, [r4, #0]
 8010294:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010298:	8063      	strh	r3, [r4, #2]
 801029a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801029e:	80a3      	strh	r3, [r4, #4]
 80102a0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80102a4:	80e3      	strh	r3, [r4, #6]
 80102a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80102a8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80102ac:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80102b0:	42b1      	cmp	r1, r6
 80102b2:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80102b6:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80102ba:	460f      	mov	r7, r1
 80102bc:	88ed      	ldrh	r5, [r5, #6]
 80102be:	bfa8      	it	ge
 80102c0:	4637      	movge	r7, r6
 80102c2:	4293      	cmp	r3, r2
 80102c4:	4618      	mov	r0, r3
 80102c6:	4466      	add	r6, ip
 80102c8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80102cc:	bfa8      	it	ge
 80102ce:	4610      	movge	r0, r2
 80102d0:	442a      	add	r2, r5
 80102d2:	88e5      	ldrh	r5, [r4, #6]
 80102d4:	4461      	add	r1, ip
 80102d6:	b236      	sxth	r6, r6
 80102d8:	8027      	strh	r7, [r4, #0]
 80102da:	442b      	add	r3, r5
 80102dc:	b209      	sxth	r1, r1
 80102de:	b212      	sxth	r2, r2
 80102e0:	8060      	strh	r0, [r4, #2]
 80102e2:	b21b      	sxth	r3, r3
 80102e4:	428e      	cmp	r6, r1
 80102e6:	bfac      	ite	ge
 80102e8:	ebc7 0106 	rsbge	r1, r7, r6
 80102ec:	ebc7 0101 	rsblt	r1, r7, r1
 80102f0:	429a      	cmp	r2, r3
 80102f2:	bfac      	ite	ge
 80102f4:	ebc0 0202 	rsbge	r2, r0, r2
 80102f8:	ebc0 0203 	rsblt	r2, r0, r3
 80102fc:	80a1      	strh	r1, [r4, #4]
 80102fe:	80e2      	strh	r2, [r4, #6]
 8010300:	e7d1      	b.n	80102a6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08010304 <_ZN8touchgfx11Application11getInstanceEv>:
 8010304:	4b01      	ldr	r3, [pc, #4]	; (801030c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010306:	6818      	ldr	r0, [r3, #0]
 8010308:	4770      	bx	lr
 801030a:	bf00      	nop
 801030c:	2400e478 	.word	0x2400e478

08010310 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8010310:	2300      	movs	r3, #0
 8010312:	b510      	push	{r4, lr}
 8010314:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8010318:	4604      	mov	r4, r0
 801031a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 801031e:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8010322:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010326:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 801032a:	429a      	cmp	r2, r3
 801032c:	d90e      	bls.n	801034c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801032e:	18e2      	adds	r2, r4, r3
 8010330:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8010334:	b122      	cbz	r2, 8010340 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8010336:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801033a:	6803      	ldr	r3, [r0, #0]
 801033c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801033e:	4798      	blx	r3
 8010340:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010344:	3301      	adds	r3, #1
 8010346:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801034a:	e7ea      	b.n	8010322 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801034c:	bd10      	pop	{r4, pc}

0801034e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801034e:	2300      	movs	r3, #0
 8010350:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8010354:	30a4      	adds	r0, #164	; 0xa4
 8010356:	f820 3c24 	strh.w	r3, [r0, #-36]
 801035a:	f802 3b01 	strb.w	r3, [r2], #1
 801035e:	4282      	cmp	r2, r0
 8010360:	d1fb      	bne.n	801035a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8010362:	4770      	bx	lr

08010364 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010364:	b570      	push	{r4, r5, r6, lr}
 8010366:	4c0b      	ldr	r4, [pc, #44]	; (8010394 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010368:	4605      	mov	r5, r0
 801036a:	460e      	mov	r6, r1
 801036c:	6820      	ldr	r0, [r4, #0]
 801036e:	b110      	cbz	r0, 8010376 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8010370:	6803      	ldr	r3, [r0, #0]
 8010372:	695b      	ldr	r3, [r3, #20]
 8010374:	4798      	blx	r3
 8010376:	1d28      	adds	r0, r5, #4
 8010378:	f7ff ffe9 	bl	801034e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801037c:	6026      	str	r6, [r4, #0]
 801037e:	6833      	ldr	r3, [r6, #0]
 8010380:	4630      	mov	r0, r6
 8010382:	68db      	ldr	r3, [r3, #12]
 8010384:	4798      	blx	r3
 8010386:	682b      	ldr	r3, [r5, #0]
 8010388:	4628      	mov	r0, r5
 801038a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801038c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010390:	4718      	bx	r3
 8010392:	bf00      	nop
 8010394:	2400e468 	.word	0x2400e468

08010398 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8010398:	2300      	movs	r3, #0
 801039a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801039e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80103a2:	461a      	mov	r2, r3
 80103a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103a6:	461c      	mov	r4, r3
 80103a8:	461d      	mov	r5, r3
 80103aa:	459c      	cmp	ip, r3
 80103ac:	dd1a      	ble.n	80103e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80103ae:	18c6      	adds	r6, r0, r3
 80103b0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80103b4:	b16e      	cbz	r6, 80103d2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80103b6:	429a      	cmp	r2, r3
 80103b8:	d008      	beq.n	80103cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80103ba:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80103be:	fa1f fe82 	uxth.w	lr, r2
 80103c2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80103c6:	1887      	adds	r7, r0, r2
 80103c8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80103cc:	3201      	adds	r2, #1
 80103ce:	3301      	adds	r3, #1
 80103d0:	e7eb      	b.n	80103aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80103d2:	4299      	cmp	r1, r3
 80103d4:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80103d8:	bfa8      	it	ge
 80103da:	3501      	addge	r5, #1
 80103dc:	429e      	cmp	r6, r3
 80103de:	bfc8      	it	gt
 80103e0:	3401      	addgt	r4, #1
 80103e2:	e7f4      	b.n	80103ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80103e4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80103e8:	1b49      	subs	r1, r1, r5
 80103ea:	1b1b      	subs	r3, r3, r4
 80103ec:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80103f0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80103f4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80103f8:	4293      	cmp	r3, r2
 80103fa:	dd03      	ble.n	8010404 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80103fc:	3b01      	subs	r3, #1
 80103fe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8010402:	e7f7      	b.n	80103f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010404:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010408 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010408:	b570      	push	{r4, r5, r6, lr}
 801040a:	4d16      	ldr	r5, [pc, #88]	; (8010464 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801040c:	4604      	mov	r4, r0
 801040e:	6828      	ldr	r0, [r5, #0]
 8010410:	b140      	cbz	r0, 8010424 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010412:	7a03      	ldrb	r3, [r0, #8]
 8010414:	b933      	cbnz	r3, 8010424 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010416:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801041a:	6803      	ldr	r3, [r0, #0]
 801041c:	689b      	ldr	r3, [r3, #8]
 801041e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010422:	4718      	bx	r3
 8010424:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8010428:	4e0f      	ldr	r6, [pc, #60]	; (8010468 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801042a:	b973      	cbnz	r3, 801044a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801042c:	b168      	cbz	r0, 801044a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801042e:	7a03      	ldrb	r3, [r0, #8]
 8010430:	b15b      	cbz	r3, 801044a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010432:	6830      	ldr	r0, [r6, #0]
 8010434:	b110      	cbz	r0, 801043c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010436:	6803      	ldr	r3, [r0, #0]
 8010438:	691b      	ldr	r3, [r3, #16]
 801043a:	4798      	blx	r3
 801043c:	6828      	ldr	r0, [r5, #0]
 801043e:	6803      	ldr	r3, [r0, #0]
 8010440:	68db      	ldr	r3, [r3, #12]
 8010442:	4798      	blx	r3
 8010444:	2301      	movs	r3, #1
 8010446:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801044a:	3404      	adds	r4, #4
 801044c:	4620      	mov	r0, r4
 801044e:	f7ff ff5f 	bl	8010310 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8010452:	4620      	mov	r0, r4
 8010454:	f7ff ffa0 	bl	8010398 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8010458:	6830      	ldr	r0, [r6, #0]
 801045a:	b110      	cbz	r0, 8010462 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801045c:	6803      	ldr	r3, [r0, #0]
 801045e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010460:	e7dd      	b.n	801041e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010462:	bd70      	pop	{r4, r5, r6, pc}
 8010464:	2400e46c 	.word	0x2400e46c
 8010468:	2400e468 	.word	0x2400e468

0801046c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801046c:	4603      	mov	r3, r0
 801046e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8010472:	2200      	movs	r2, #0
 8010474:	801a      	strh	r2, [r3, #0]
 8010476:	3308      	adds	r3, #8
 8010478:	f823 2c06 	strh.w	r2, [r3, #-6]
 801047c:	f823 2c04 	strh.w	r2, [r3, #-4]
 8010480:	f823 2c02 	strh.w	r2, [r3, #-2]
 8010484:	428b      	cmp	r3, r1
 8010486:	d1f5      	bne.n	8010474 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010488:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801048c:	4770      	bx	lr
	...

08010490 <_ZN8touchgfx11ApplicationC1Ev>:
 8010490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010492:	4b1d      	ldr	r3, [pc, #116]	; (8010508 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010494:	4606      	mov	r6, r0
 8010496:	4604      	mov	r4, r0
 8010498:	2500      	movs	r5, #0
 801049a:	f846 3b04 	str.w	r3, [r6], #4
 801049e:	22a8      	movs	r2, #168	; 0xa8
 80104a0:	2100      	movs	r1, #0
 80104a2:	4630      	mov	r0, r6
 80104a4:	f010 fead 	bl	8021202 <memset>
 80104a8:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80104ac:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80104b0:	4f16      	ldr	r7, [pc, #88]	; (801050c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80104b2:	f7ff ffdb 	bl	801046c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80104b6:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80104ba:	f7ff ffd7 	bl	801046c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80104be:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80104c2:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80104c6:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80104ca:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80104ce:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80104d2:	490f      	ldr	r1, [pc, #60]	; (8010510 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80104d4:	480f      	ldr	r0, [pc, #60]	; (8010514 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80104d6:	f010 f82f 	bl	8020538 <CRC_Lock>
 80104da:	4b0f      	ldr	r3, [pc, #60]	; (8010518 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80104dc:	b158      	cbz	r0, 80104f6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80104de:	801d      	strh	r5, [r3, #0]
 80104e0:	2300      	movs	r3, #0
 80104e2:	4a0e      	ldr	r2, [pc, #56]	; (801051c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80104e4:	4630      	mov	r0, r6
 80104e6:	6013      	str	r3, [r2, #0]
 80104e8:	4a0d      	ldr	r2, [pc, #52]	; (8010520 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80104ea:	603b      	str	r3, [r7, #0]
 80104ec:	6013      	str	r3, [r2, #0]
 80104ee:	f7ff ff2e 	bl	801034e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80104f2:	4620      	mov	r0, r4
 80104f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80104f6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80104fa:	2002      	movs	r0, #2
 80104fc:	801a      	strh	r2, [r3, #0]
 80104fe:	6038      	str	r0, [r7, #0]
 8010500:	f001 fb48 	bl	8011b94 <_ZN8touchgfx6Screen4drawEv>
 8010504:	e7ec      	b.n	80104e0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8010506:	bf00      	nop
 8010508:	0802386c 	.word	0x0802386c
 801050c:	2400e468 	.word	0x2400e468
 8010510:	b5e8b5cd 	.word	0xb5e8b5cd
 8010514:	f407a5c2 	.word	0xf407a5c2
 8010518:	24000080 	.word	0x24000080
 801051c:	2400e478 	.word	0x2400e478
 8010520:	2400e46c 	.word	0x2400e46c

08010524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010524:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8010528:	3b01      	subs	r3, #1
 801052a:	b29b      	uxth	r3, r3
 801052c:	428b      	cmp	r3, r1
 801052e:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8010532:	b510      	push	{r4, lr}
 8010534:	d908      	bls.n	8010548 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010536:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801053a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801053e:	681a      	ldr	r2, [r3, #0]
 8010540:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010544:	685a      	ldr	r2, [r3, #4]
 8010546:	6062      	str	r2, [r4, #4]
 8010548:	bd10      	pop	{r4, pc}
	...

0801054c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801054c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010550:	b08f      	sub	sp, #60	; 0x3c
 8010552:	4b8f      	ldr	r3, [pc, #572]	; (8010790 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8010554:	4683      	mov	fp, r0
 8010556:	ac0a      	add	r4, sp, #40	; 0x28
 8010558:	e884 0006 	stmia.w	r4, {r1, r2}
 801055c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010560:	4620      	mov	r0, r4
 8010562:	4b8c      	ldr	r3, [pc, #560]	; (8010794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8010564:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010568:	f7ff fe0f 	bl	801018a <_ZN8touchgfx4Rect10restrictToEss>
 801056c:	4620      	mov	r0, r4
 801056e:	f7fa fad8 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010572:	2800      	cmp	r0, #0
 8010574:	d16a      	bne.n	801064c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010576:	9403      	str	r4, [sp, #12]
 8010578:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 801057c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8010580:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010584:	9301      	str	r3, [sp, #4]
 8010586:	35a4      	adds	r5, #164	; 0xa4
 8010588:	b15c      	cbz	r4, 80105a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801058a:	4629      	mov	r1, r5
 801058c:	9803      	ldr	r0, [sp, #12]
 801058e:	f7ff fe4d 	bl	801022c <_ZNK8touchgfx4Rect8includesERKS0_>
 8010592:	3c01      	subs	r4, #1
 8010594:	b118      	cbz	r0, 801059e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8010596:	b2a1      	uxth	r1, r4
 8010598:	9801      	ldr	r0, [sp, #4]
 801059a:	f7ff ffc3 	bl	8010524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801059e:	3d08      	subs	r5, #8
 80105a0:	e7f2      	b.n	8010588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80105a2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80105a6:	f10a 33ff 	add.w	r3, sl, #4294967295
 80105aa:	f8cd a010 	str.w	sl, [sp, #16]
 80105ae:	9302      	str	r3, [sp, #8]
 80105b0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80105b4:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80105b8:	9306      	str	r3, [sp, #24]
 80105ba:	445c      	add	r4, fp
 80105bc:	2500      	movs	r5, #0
 80105be:	4626      	mov	r6, r4
 80105c0:	f8cd a014 	str.w	sl, [sp, #20]
 80105c4:	462f      	mov	r7, r5
 80105c6:	9b05      	ldr	r3, [sp, #20]
 80105c8:	2b00      	cmp	r3, #0
 80105ca:	d073      	beq.n	80106b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80105cc:	9903      	ldr	r1, [sp, #12]
 80105ce:	4630      	mov	r0, r6
 80105d0:	f7ff fdb9 	bl	8010146 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80105d4:	b350      	cbz	r0, 801062c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80105d6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80105da:	f9b6 c000 	ldrsh.w	ip, [r6]
 80105de:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80105e2:	45e6      	cmp	lr, ip
 80105e4:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80105e8:	db33      	blt.n	8010652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80105ea:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80105ee:	88b3      	ldrh	r3, [r6, #4]
 80105f0:	4472      	add	r2, lr
 80105f2:	4463      	add	r3, ip
 80105f4:	b212      	sxth	r2, r2
 80105f6:	b21b      	sxth	r3, r3
 80105f8:	429a      	cmp	r2, r3
 80105fa:	dc2a      	bgt.n	8010652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80105fc:	fa1f f289 	uxth.w	r2, r9
 8010600:	88f3      	ldrh	r3, [r6, #6]
 8010602:	45c8      	cmp	r8, r9
 8010604:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010608:	4413      	add	r3, r2
 801060a:	fa1f fc88 	uxth.w	ip, r8
 801060e:	b29b      	uxth	r3, r3
 8010610:	fa0f fe83 	sxth.w	lr, r3
 8010614:	db0f      	blt.n	8010636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010616:	eba3 030c 	sub.w	r3, r3, ip
 801061a:	1ac9      	subs	r1, r1, r3
 801061c:	b209      	sxth	r1, r1
 801061e:	2900      	cmp	r1, #0
 8010620:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010624:	dd12      	ble.n	801064c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010626:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801062a:	4605      	mov	r5, r0
 801062c:	9b05      	ldr	r3, [sp, #20]
 801062e:	3e08      	subs	r6, #8
 8010630:	3b01      	subs	r3, #1
 8010632:	9305      	str	r3, [sp, #20]
 8010634:	e7c7      	b.n	80105c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8010636:	4461      	add	r1, ip
 8010638:	b209      	sxth	r1, r1
 801063a:	4571      	cmp	r1, lr
 801063c:	dc38      	bgt.n	80106b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801063e:	eba2 020c 	sub.w	r2, r2, ip
 8010642:	b212      	sxth	r2, r2
 8010644:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8010648:	2a00      	cmp	r2, #0
 801064a:	dcee      	bgt.n	801062a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801064c:	b00f      	add	sp, #60	; 0x3c
 801064e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010652:	45c8      	cmp	r8, r9
 8010654:	db2c      	blt.n	80106b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010656:	88f3      	ldrh	r3, [r6, #6]
 8010658:	4499      	add	r9, r3
 801065a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801065e:	4498      	add	r8, r3
 8010660:	fa0f f989 	sxth.w	r9, r9
 8010664:	fa0f f888 	sxth.w	r8, r8
 8010668:	45c1      	cmp	r9, r8
 801066a:	db21      	blt.n	80106b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801066c:	fa1f f28c 	uxth.w	r2, ip
 8010670:	88b3      	ldrh	r3, [r6, #4]
 8010672:	45e6      	cmp	lr, ip
 8010674:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8010678:	4413      	add	r3, r2
 801067a:	fa1f f88e 	uxth.w	r8, lr
 801067e:	b29b      	uxth	r3, r3
 8010680:	fa0f f983 	sxth.w	r9, r3
 8010684:	db0a      	blt.n	801069c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8010686:	eba3 0308 	sub.w	r3, r3, r8
 801068a:	1ac9      	subs	r1, r1, r3
 801068c:	b209      	sxth	r1, r1
 801068e:	2900      	cmp	r1, #0
 8010690:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8010694:	ddda      	ble.n	801064c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010696:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801069a:	e7c6      	b.n	801062a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801069c:	4441      	add	r1, r8
 801069e:	b209      	sxth	r1, r1
 80106a0:	4549      	cmp	r1, r9
 80106a2:	dc05      	bgt.n	80106b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80106a4:	eba2 0208 	sub.w	r2, r2, r8
 80106a8:	b212      	sxth	r2, r2
 80106aa:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80106ae:	e7cb      	b.n	8010648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80106b0:	4607      	mov	r7, r0
 80106b2:	e7bb      	b.n	801062c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80106b4:	2d00      	cmp	r5, #0
 80106b6:	d181      	bne.n	80105bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80106b8:	2f00      	cmp	r7, #0
 80106ba:	f000 81dd 	beq.w	8010a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80106be:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80106c2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80106c6:	b2b3      	uxth	r3, r6
 80106c8:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80106cc:	9305      	str	r3, [sp, #20]
 80106ce:	9a05      	ldr	r2, [sp, #20]
 80106d0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80106d4:	4413      	add	r3, r2
 80106d6:	b2ba      	uxth	r2, r7
 80106d8:	4492      	add	sl, r2
 80106da:	b29b      	uxth	r3, r3
 80106dc:	fa1f fa8a 	uxth.w	sl, sl
 80106e0:	fa0f f883 	sxth.w	r8, r3
 80106e4:	fa0f f98a 	sxth.w	r9, sl
 80106e8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80106ec:	9b04      	ldr	r3, [sp, #16]
 80106ee:	2b00      	cmp	r3, #0
 80106f0:	d052      	beq.n	8010798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80106f2:	9903      	ldr	r1, [sp, #12]
 80106f4:	4620      	mov	r0, r4
 80106f6:	f7ff fd26 	bl	8010146 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80106fa:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80106fe:	b1c0      	cbz	r0, 8010732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010700:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010704:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010708:	4576      	cmp	r6, lr
 801070a:	dc22      	bgt.n	8010752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801070c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010710:	44f4      	add	ip, lr
 8010712:	fa0f fc8c 	sxth.w	ip, ip
 8010716:	45e0      	cmp	r8, ip
 8010718:	db1b      	blt.n	8010752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801071a:	428f      	cmp	r7, r1
 801071c:	fa1f fc81 	uxth.w	ip, r1
 8010720:	88e1      	ldrh	r1, [r4, #6]
 8010722:	dc0d      	bgt.n	8010740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010724:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010728:	f8a4 9002 	strh.w	r9, [r4, #2]
 801072c:	eba1 010c 	sub.w	r1, r1, ip
 8010730:	80e1      	strh	r1, [r4, #6]
 8010732:	4628      	mov	r0, r5
 8010734:	9904      	ldr	r1, [sp, #16]
 8010736:	3c08      	subs	r4, #8
 8010738:	4605      	mov	r5, r0
 801073a:	3901      	subs	r1, #1
 801073c:	9104      	str	r1, [sp, #16]
 801073e:	e7d3      	b.n	80106e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8010740:	4461      	add	r1, ip
 8010742:	b209      	sxth	r1, r1
 8010744:	4549      	cmp	r1, r9
 8010746:	dcf5      	bgt.n	8010734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010748:	eba2 0c0c 	sub.w	ip, r2, ip
 801074c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010750:	e7ef      	b.n	8010732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010752:	428f      	cmp	r7, r1
 8010754:	dcee      	bgt.n	8010734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010756:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801075a:	4461      	add	r1, ip
 801075c:	b209      	sxth	r1, r1
 801075e:	4589      	cmp	r9, r1
 8010760:	dbe8      	blt.n	8010734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010762:	4576      	cmp	r6, lr
 8010764:	fa1f fc8e 	uxth.w	ip, lr
 8010768:	88a1      	ldrh	r1, [r4, #4]
 801076a:	dc07      	bgt.n	801077c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 801076c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010770:	f8a4 8000 	strh.w	r8, [r4]
 8010774:	eba1 010c 	sub.w	r1, r1, ip
 8010778:	80a1      	strh	r1, [r4, #4]
 801077a:	e7da      	b.n	8010732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801077c:	4461      	add	r1, ip
 801077e:	b209      	sxth	r1, r1
 8010780:	4588      	cmp	r8, r1
 8010782:	dbd7      	blt.n	8010734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010784:	9905      	ldr	r1, [sp, #20]
 8010786:	eba1 0c0c 	sub.w	ip, r1, ip
 801078a:	f8a4 c004 	strh.w	ip, [r4, #4]
 801078e:	e7d0      	b.n	8010732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010790:	2400e41a 	.word	0x2400e41a
 8010794:	2400e418 	.word	0x2400e418
 8010798:	2d00      	cmp	r5, #0
 801079a:	f000 816d 	beq.w	8010a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801079e:	9b06      	ldr	r3, [sp, #24]
 80107a0:	445b      	add	r3, fp
 80107a2:	461c      	mov	r4, r3
 80107a4:	9b02      	ldr	r3, [sp, #8]
 80107a6:	3301      	adds	r3, #1
 80107a8:	f000 8166 	beq.w	8010a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80107ac:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80107b0:	9803      	ldr	r0, [sp, #12]
 80107b2:	4629      	mov	r1, r5
 80107b4:	f7ff fd3a 	bl	801022c <_ZNK8touchgfx4Rect8includesERKS0_>
 80107b8:	b120      	cbz	r0, 80107c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80107ba:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80107be:	9801      	ldr	r0, [sp, #4]
 80107c0:	f7ff feb0 	bl	8010524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80107c4:	9903      	ldr	r1, [sp, #12]
 80107c6:	4628      	mov	r0, r5
 80107c8:	f7ff fcbd 	bl	8010146 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80107cc:	2800      	cmp	r0, #0
 80107ce:	f000 809c 	beq.w	801090a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80107d2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80107d6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80107da:	fa1f f189 	uxth.w	r1, r9
 80107de:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80107e2:	9309      	str	r3, [sp, #36]	; 0x24
 80107e4:	eb01 0c03 	add.w	ip, r1, r3
 80107e8:	b283      	uxth	r3, r0
 80107ea:	4548      	cmp	r0, r9
 80107ec:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80107f0:	fa1f fa8c 	uxth.w	sl, ip
 80107f4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80107f8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80107fc:	eb03 050c 	add.w	r5, r3, ip
 8010800:	b2ad      	uxth	r5, r5
 8010802:	9505      	str	r5, [sp, #20]
 8010804:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010808:	9504      	str	r5, [sp, #16]
 801080a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 801080e:	f340 8099 	ble.w	8010944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8010812:	1a5b      	subs	r3, r3, r1
 8010814:	4596      	cmp	lr, r2
 8010816:	fa0f f08a 	sxth.w	r0, sl
 801081a:	b29b      	uxth	r3, r3
 801081c:	b21e      	sxth	r6, r3
 801081e:	dd2e      	ble.n	801087e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8010820:	9f02      	ldr	r7, [sp, #8]
 8010822:	fa1f fe8e 	uxth.w	lr, lr
 8010826:	b292      	uxth	r2, r2
 8010828:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801082c:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8010830:	9f04      	ldr	r7, [sp, #16]
 8010832:	ebae 0102 	sub.w	r1, lr, r2
 8010836:	44a6      	add	lr, r4
 8010838:	1a3f      	subs	r7, r7, r0
 801083a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801083e:	b289      	uxth	r1, r1
 8010840:	4402      	add	r2, r0
 8010842:	fa0f fe8e 	sxth.w	lr, lr
 8010846:	b20d      	sxth	r5, r1
 8010848:	b212      	sxth	r2, r2
 801084a:	436f      	muls	r7, r5
 801084c:	ebae 0202 	sub.w	r2, lr, r2
 8010850:	4372      	muls	r2, r6
 8010852:	4297      	cmp	r7, r2
 8010854:	db09      	blt.n	801086a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8010856:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 801085a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801085e:	449c      	add	ip, r3
 8010860:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010864:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8010868:	e686      	b.n	8010578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801086a:	4421      	add	r1, r4
 801086c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8010870:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8010874:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010878:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801087c:	e67c      	b.n	8010578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801087e:	9f04      	ldr	r7, [sp, #16]
 8010880:	42b8      	cmp	r0, r7
 8010882:	da27      	bge.n	80108d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010884:	9902      	ldr	r1, [sp, #8]
 8010886:	1a3f      	subs	r7, r7, r0
 8010888:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 801088c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8010890:	eb05 010e 	add.w	r1, r5, lr
 8010894:	fa1f f881 	uxth.w	r8, r1
 8010898:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 801089c:	4411      	add	r1, r2
 801089e:	fa0f f988 	sxth.w	r9, r8
 80108a2:	eba2 020e 	sub.w	r2, r2, lr
 80108a6:	eba1 0108 	sub.w	r1, r1, r8
 80108aa:	4372      	muls	r2, r6
 80108ac:	b289      	uxth	r1, r1
 80108ae:	fa0f f881 	sxth.w	r8, r1
 80108b2:	fb08 f707 	mul.w	r7, r8, r7
 80108b6:	42ba      	cmp	r2, r7
 80108b8:	dc06      	bgt.n	80108c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80108ba:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80108be:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80108c2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80108c6:	e7ca      	b.n	801085e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80108c8:	4429      	add	r1, r5
 80108ca:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80108ce:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80108d2:	e651      	b.n	8010578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80108d4:	9805      	ldr	r0, [sp, #20]
 80108d6:	2d06      	cmp	r5, #6
 80108d8:	ebaa 0000 	sub.w	r0, sl, r0
 80108dc:	b280      	uxth	r0, r0
 80108de:	fa0f fe80 	sxth.w	lr, r0
 80108e2:	d817      	bhi.n	8010914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80108e4:	9b04      	ldr	r3, [sp, #16]
 80108e6:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80108ea:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80108ee:	1c6b      	adds	r3, r5, #1
 80108f0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80108f4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80108f8:	9b01      	ldr	r3, [sp, #4]
 80108fa:	9801      	ldr	r0, [sp, #4]
 80108fc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010900:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010904:	805a      	strh	r2, [r3, #2]
 8010906:	809e      	strh	r6, [r3, #4]
 8010908:	80d9      	strh	r1, [r3, #6]
 801090a:	9b02      	ldr	r3, [sp, #8]
 801090c:	3c08      	subs	r4, #8
 801090e:	3b01      	subs	r3, #1
 8010910:	9302      	str	r3, [sp, #8]
 8010912:	e747      	b.n	80107a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010914:	9a02      	ldr	r2, [sp, #8]
 8010916:	45b6      	cmp	lr, r6
 8010918:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801091c:	db0d      	blt.n	801093a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801091e:	449c      	add	ip, r3
 8010920:	445a      	add	r2, fp
 8010922:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8010926:	fa1f fc8c 	uxth.w	ip, ip
 801092a:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 801092e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8010932:	448c      	add	ip, r1
 8010934:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8010938:	e61e      	b.n	8010578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801093a:	445a      	add	r2, fp
 801093c:	4484      	add	ip, r0
 801093e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8010942:	e78f      	b.n	8010864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010944:	fa1f f18e 	uxth.w	r1, lr
 8010948:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 801094c:	b293      	uxth	r3, r2
 801094e:	4596      	cmp	lr, r2
 8010950:	eb01 0806 	add.w	r8, r1, r6
 8010954:	9306      	str	r3, [sp, #24]
 8010956:	fa1f f888 	uxth.w	r8, r8
 801095a:	9f06      	ldr	r7, [sp, #24]
 801095c:	fa0f f388 	sxth.w	r3, r8
 8010960:	9307      	str	r3, [sp, #28]
 8010962:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8010966:	443b      	add	r3, r7
 8010968:	b29b      	uxth	r3, r3
 801096a:	9308      	str	r3, [sp, #32]
 801096c:	da24      	bge.n	80109b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801096e:	9905      	ldr	r1, [sp, #20]
 8010970:	eba3 0308 	sub.w	r3, r3, r8
 8010974:	eba2 020e 	sub.w	r2, r2, lr
 8010978:	eba9 0000 	sub.w	r0, r9, r0
 801097c:	ebaa 0401 	sub.w	r4, sl, r1
 8010980:	b29b      	uxth	r3, r3
 8010982:	b2a4      	uxth	r4, r4
 8010984:	b219      	sxth	r1, r3
 8010986:	b225      	sxth	r5, r4
 8010988:	4348      	muls	r0, r1
 801098a:	436a      	muls	r2, r5
 801098c:	4282      	cmp	r2, r0
 801098e:	9a02      	ldr	r2, [sp, #8]
 8010990:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010994:	445a      	add	r2, fp
 8010996:	dc06      	bgt.n	80109a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8010998:	9b07      	ldr	r3, [sp, #28]
 801099a:	44a4      	add	ip, r4
 801099c:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80109a0:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80109a4:	e75e      	b.n	8010864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80109a6:	9904      	ldr	r1, [sp, #16]
 80109a8:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80109ac:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80109b0:	4433      	add	r3, r6
 80109b2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80109b6:	e5df      	b.n	8010578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80109b8:	9f06      	ldr	r7, [sp, #24]
 80109ba:	9b04      	ldr	r3, [sp, #16]
 80109bc:	1bc9      	subs	r1, r1, r7
 80109be:	fa0f f78a 	sxth.w	r7, sl
 80109c2:	b289      	uxth	r1, r1
 80109c4:	429f      	cmp	r7, r3
 80109c6:	fa0f fe81 	sxth.w	lr, r1
 80109ca:	dd23      	ble.n	8010a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80109cc:	9a05      	ldr	r2, [sp, #20]
 80109ce:	eba9 0000 	sub.w	r0, r9, r0
 80109d2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80109d6:	ebaa 0202 	sub.w	r2, sl, r2
 80109da:	9d07      	ldr	r5, [sp, #28]
 80109dc:	fb0e f000 	mul.w	r0, lr, r0
 80109e0:	b292      	uxth	r2, r2
 80109e2:	eba5 0a03 	sub.w	sl, r5, r3
 80109e6:	9b02      	ldr	r3, [sp, #8]
 80109e8:	b214      	sxth	r4, r2
 80109ea:	00db      	lsls	r3, r3, #3
 80109ec:	fb04 fa0a 	mul.w	sl, r4, sl
 80109f0:	445b      	add	r3, fp
 80109f2:	4550      	cmp	r0, sl
 80109f4:	db03      	blt.n	80109fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80109f6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80109fa:	4494      	add	ip, r2
 80109fc:	e732      	b.n	8010864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80109fe:	9a04      	ldr	r2, [sp, #16]
 8010a00:	4431      	add	r1, r6
 8010a02:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8010a06:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8010a0a:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8010a0e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010a12:	e75c      	b.n	80108ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010a14:	9b08      	ldr	r3, [sp, #32]
 8010a16:	2d06      	cmp	r5, #6
 8010a18:	eba3 0308 	sub.w	r3, r3, r8
 8010a1c:	b29b      	uxth	r3, r3
 8010a1e:	b218      	sxth	r0, r3
 8010a20:	d813      	bhi.n	8010a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8010a22:	9b07      	ldr	r3, [sp, #28]
 8010a24:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8010a28:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8010a2c:	1c6b      	adds	r3, r5, #1
 8010a2e:	9901      	ldr	r1, [sp, #4]
 8010a30:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8010a34:	9b01      	ldr	r3, [sp, #4]
 8010a36:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010a3a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010a3e:	805a      	strh	r2, [r3, #2]
 8010a40:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010a42:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010a46:	809a      	strh	r2, [r3, #4]
 8010a48:	e75f      	b.n	801090a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010a4a:	9c02      	ldr	r4, [sp, #8]
 8010a4c:	4570      	cmp	r0, lr
 8010a4e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010a52:	db0d      	blt.n	8010a70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8010a54:	4431      	add	r1, r6
 8010a56:	9b06      	ldr	r3, [sp, #24]
 8010a58:	445c      	add	r4, fp
 8010a5a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8010a5e:	b289      	uxth	r1, r1
 8010a60:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8010a64:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010a68:	4419      	add	r1, r3
 8010a6a:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8010a6e:	e583      	b.n	8010578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010a70:	445c      	add	r4, fp
 8010a72:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8010a76:	e79b      	b.n	80109b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010a78:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8010a7c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8010a80:	1e65      	subs	r5, r4, #1
 8010a82:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8010a86:	b2ad      	uxth	r5, r5
 8010a88:	42b5      	cmp	r5, r6
 8010a8a:	d044      	beq.n	8010b16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8010a8c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8010a90:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8010a94:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8010a98:	4282      	cmp	r2, r0
 8010a9a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8010a9e:	d11f      	bne.n	8010ae0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010aa0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8010aa4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8010aa8:	459c      	cmp	ip, r3
 8010aaa:	d119      	bne.n	8010ae0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010aac:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8010ab0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010ab4:	19d8      	adds	r0, r3, r7
 8010ab6:	b200      	sxth	r0, r0
 8010ab8:	4288      	cmp	r0, r1
 8010aba:	d109      	bne.n	8010ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8010abc:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8010ac0:	4413      	add	r3, r2
 8010ac2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8010ac6:	4629      	mov	r1, r5
 8010ac8:	9801      	ldr	r0, [sp, #4]
 8010aca:	f7ff fd2b 	bl	8010524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010ace:	e003      	b.n	8010ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010ad0:	4411      	add	r1, r2
 8010ad2:	b209      	sxth	r1, r1
 8010ad4:	42b9      	cmp	r1, r7
 8010ad6:	d0f3      	beq.n	8010ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8010ad8:	3d01      	subs	r5, #1
 8010ada:	3c08      	subs	r4, #8
 8010adc:	b2ad      	uxth	r5, r5
 8010ade:	e7d3      	b.n	8010a88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010ae0:	42b9      	cmp	r1, r7
 8010ae2:	d1f9      	bne.n	8010ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010ae4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8010ae8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8010aec:	4299      	cmp	r1, r3
 8010aee:	d1f3      	bne.n	8010ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010af0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8010af4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010af8:	181f      	adds	r7, r3, r0
 8010afa:	b23f      	sxth	r7, r7
 8010afc:	42ba      	cmp	r2, r7
 8010afe:	d105      	bne.n	8010b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8010b00:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8010b04:	440b      	add	r3, r1
 8010b06:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010b0a:	e7dc      	b.n	8010ac6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8010b0c:	440a      	add	r2, r1
 8010b0e:	b212      	sxth	r2, r2
 8010b10:	4290      	cmp	r0, r2
 8010b12:	d1e1      	bne.n	8010ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010b14:	e7f6      	b.n	8010b04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8010b16:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8010b1a:	2e07      	cmp	r6, #7
 8010b1c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010b20:	d812      	bhi.n	8010b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8010b22:	1c75      	adds	r5, r6, #1
 8010b24:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8010b28:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010b2c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8010b30:	9d01      	ldr	r5, [sp, #4]
 8010b32:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8010b36:	442c      	add	r4, r5
 8010b38:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8010b3c:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010b40:	8061      	strh	r1, [r4, #2]
 8010b42:	80a2      	strh	r2, [r4, #4]
 8010b44:	80e3      	strh	r3, [r4, #6]
 8010b46:	e581      	b.n	801064c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010b48:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8010b4c:	3e01      	subs	r6, #1
 8010b4e:	445c      	add	r4, fp
 8010b50:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010b54:	f04f 37ff 	mov.w	r7, #4294967295
 8010b58:	2500      	movs	r5, #0
 8010b5a:	9305      	str	r3, [sp, #20]
 8010b5c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8010b60:	1e72      	subs	r2, r6, #1
 8010b62:	9302      	str	r3, [sp, #8]
 8010b64:	4691      	mov	r9, r2
 8010b66:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8010b6a:	9304      	str	r3, [sp, #16]
 8010b6c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8010b70:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010b74:	6818      	ldr	r0, [r3, #0]
 8010b76:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010b7a:	9207      	str	r2, [sp, #28]
 8010b7c:	bf16      	itet	ne
 8010b7e:	9905      	ldrne	r1, [sp, #20]
 8010b80:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010b84:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8010b88:	9306      	str	r3, [sp, #24]
 8010b8a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010b8e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8010b92:	fb18 f801 	smulbb	r8, r8, r1
 8010b96:	6859      	ldr	r1, [r3, #4]
 8010b98:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010b9c:	4671      	mov	r1, lr
 8010b9e:	a80c      	add	r0, sp, #48	; 0x30
 8010ba0:	f7ff fb6a 	bl	8010278 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010ba4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8010ba8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8010bac:	f04f 0c08 	mov.w	ip, #8
 8010bb0:	9b04      	ldr	r3, [sp, #16]
 8010bb2:	9a02      	ldr	r2, [sp, #8]
 8010bb4:	fb10 f001 	smulbb	r0, r0, r1
 8010bb8:	fb02 8803 	mla	r8, r2, r3, r8
 8010bbc:	eba0 0108 	sub.w	r1, r0, r8
 8010bc0:	fb90 f0fc 	sdiv	r0, r0, ip
 8010bc4:	4288      	cmp	r0, r1
 8010bc6:	dc20      	bgt.n	8010c0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8010bc8:	4551      	cmp	r1, sl
 8010bca:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010bce:	da03      	bge.n	8010bd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8010bd0:	b1d9      	cbz	r1, 8010c0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8010bd2:	468a      	mov	sl, r1
 8010bd4:	464f      	mov	r7, r9
 8010bd6:	4635      	mov	r5, r6
 8010bd8:	f109 39ff 	add.w	r9, r9, #4294967295
 8010bdc:	f119 0f02 	cmn.w	r9, #2
 8010be0:	d1c6      	bne.n	8010b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8010be2:	4616      	mov	r6, r2
 8010be4:	3201      	adds	r2, #1
 8010be6:	f1a4 0408 	sub.w	r4, r4, #8
 8010bea:	d1b7      	bne.n	8010b5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8010bec:	9b01      	ldr	r3, [sp, #4]
 8010bee:	b2ac      	uxth	r4, r5
 8010bf0:	00ed      	lsls	r5, r5, #3
 8010bf2:	1958      	adds	r0, r3, r5
 8010bf4:	1c7b      	adds	r3, r7, #1
 8010bf6:	d10b      	bne.n	8010c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8010bf8:	4601      	mov	r1, r0
 8010bfa:	9803      	ldr	r0, [sp, #12]
 8010bfc:	f7ff fb3c 	bl	8010278 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010c00:	4621      	mov	r1, r4
 8010c02:	9801      	ldr	r0, [sp, #4]
 8010c04:	f7ff fc8e 	bl	8010524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010c08:	e4b6      	b.n	8010578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010c0a:	464f      	mov	r7, r9
 8010c0c:	4635      	mov	r5, r6
 8010c0e:	e7ed      	b.n	8010bec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8010c10:	9b01      	ldr	r3, [sp, #4]
 8010c12:	00ff      	lsls	r7, r7, #3
 8010c14:	445d      	add	r5, fp
 8010c16:	19d9      	adds	r1, r3, r7
 8010c18:	445f      	add	r7, fp
 8010c1a:	f7ff fb2d 	bl	8010278 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010c1e:	9b03      	ldr	r3, [sp, #12]
 8010c20:	cb03      	ldmia	r3!, {r0, r1}
 8010c22:	9b03      	ldr	r3, [sp, #12]
 8010c24:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8010c28:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8010c2c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010c30:	6869      	ldr	r1, [r5, #4]
 8010c32:	c303      	stmia	r3!, {r0, r1}
 8010c34:	e7e4      	b.n	8010c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8010c36:	bf00      	nop

08010c38 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c3c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8010c40:	b09b      	sub	sp, #108	; 0x6c
 8010c42:	4604      	mov	r4, r0
 8010c44:	4630      	mov	r0, r6
 8010c46:	f7f9 ff6c 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c4a:	4605      	mov	r5, r0
 8010c4c:	b948      	cbnz	r0, 8010c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010c4e:	6823      	ldr	r3, [r4, #0]
 8010c50:	4620      	mov	r0, r4
 8010c52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010c54:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010c58:	4798      	blx	r3
 8010c5a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010c5e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8010c62:	4bc5      	ldr	r3, [pc, #788]	; (8010f78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8010c64:	681b      	ldr	r3, [r3, #0]
 8010c66:	2b00      	cmp	r3, #0
 8010c68:	d03f      	beq.n	8010cea <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010c6a:	4dc4      	ldr	r5, [pc, #784]	; (8010f7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8010c6c:	4628      	mov	r0, r5
 8010c6e:	f7f9 ff58 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c72:	4606      	mov	r6, r0
 8010c74:	2800      	cmp	r0, #0
 8010c76:	d138      	bne.n	8010cea <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010c78:	4628      	mov	r0, r5
 8010c7a:	f7ff f975 	bl	800ff68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010c7e:	6823      	ldr	r3, [r4, #0]
 8010c80:	6829      	ldr	r1, [r5, #0]
 8010c82:	4620      	mov	r0, r4
 8010c84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010c86:	686a      	ldr	r2, [r5, #4]
 8010c88:	4798      	blx	r3
 8010c8a:	802e      	strh	r6, [r5, #0]
 8010c8c:	806e      	strh	r6, [r5, #2]
 8010c8e:	80ae      	strh	r6, [r5, #4]
 8010c90:	80ee      	strh	r6, [r5, #6]
 8010c92:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8010c96:	4dba      	ldr	r5, [pc, #744]	; (8010f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8010c98:	4640      	mov	r0, r8
 8010c9a:	f7ff fbe7 	bl	801046c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010c9e:	882e      	ldrh	r6, [r5, #0]
 8010ca0:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8010ca4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8010ca8:	4633      	mov	r3, r6
 8010caa:	42bb      	cmp	r3, r7
 8010cac:	d224      	bcs.n	8010cf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010cae:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8010cb2:	2907      	cmp	r1, #7
 8010cb4:	d816      	bhi.n	8010ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8010cb6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010cba:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8010cbe:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8010cc2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8010cc6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8010cca:	1c4a      	adds	r2, r1, #1
 8010ccc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8010cd0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8010cd4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8010cd8:	f8a2 a002 	strh.w	sl, [r2, #2]
 8010cdc:	f8a2 e004 	strh.w	lr, [r2, #4]
 8010ce0:	f8a2 c006 	strh.w	ip, [r2, #6]
 8010ce4:	3301      	adds	r3, #1
 8010ce6:	b29b      	uxth	r3, r3
 8010ce8:	e7df      	b.n	8010caa <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8010cea:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8010cee:	2b00      	cmp	r3, #0
 8010cf0:	d1cf      	bne.n	8010c92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8010cf2:	b01b      	add	sp, #108	; 0x6c
 8010cf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010cf8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8010cfc:	42b3      	cmp	r3, r6
 8010cfe:	d90c      	bls.n	8010d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8010d00:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010d04:	6822      	ldr	r2, [r4, #0]
 8010d06:	3601      	adds	r6, #1
 8010d08:	4620      	mov	r0, r4
 8010d0a:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8010d0c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8010d10:	b2b6      	uxth	r6, r6
 8010d12:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8010d16:	47b8      	blx	r7
 8010d18:	e7ee      	b.n	8010cf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010d1a:	4a9a      	ldr	r2, [pc, #616]	; (8010f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010d1c:	6813      	ldr	r3, [r2, #0]
 8010d1e:	4691      	mov	r9, r2
 8010d20:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8010d24:	2b01      	cmp	r3, #1
 8010d26:	f040 80e0 	bne.w	8010eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8010d2a:	8829      	ldrh	r1, [r5, #0]
 8010d2c:	2600      	movs	r6, #0
 8010d2e:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8010d32:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8010d36:	33ae      	adds	r3, #174	; 0xae
 8010d38:	428f      	cmp	r7, r1
 8010d3a:	f103 0308 	add.w	r3, r3, #8
 8010d3e:	dd0a      	ble.n	8010d56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8010d40:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8010d44:	3101      	adds	r1, #1
 8010d46:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8010d4a:	4402      	add	r2, r0
 8010d4c:	b212      	sxth	r2, r2
 8010d4e:	4296      	cmp	r6, r2
 8010d50:	bfb8      	it	lt
 8010d52:	4616      	movlt	r6, r2
 8010d54:	e7f0      	b.n	8010d38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8010d56:	4b8c      	ldr	r3, [pc, #560]	; (8010f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010d58:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8010f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8010d5c:	881b      	ldrh	r3, [r3, #0]
 8010d5e:	2b0f      	cmp	r3, #15
 8010d60:	bf8c      	ite	hi
 8010d62:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8010d66:	f04f 0b01 	movls.w	fp, #1
 8010d6a:	2300      	movs	r3, #0
 8010d6c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8010d70:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8010d74:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8010d78:	4b82      	ldr	r3, [pc, #520]	; (8010f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010d7a:	4438      	add	r0, r7
 8010d7c:	b207      	sxth	r7, r0
 8010d7e:	6818      	ldr	r0, [r3, #0]
 8010d80:	42b7      	cmp	r7, r6
 8010d82:	6803      	ldr	r3, [r0, #0]
 8010d84:	f280 8083 	bge.w	8010e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8010d88:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8010d8c:	4798      	blx	r3
 8010d8e:	eb07 030b 	add.w	r3, r7, fp
 8010d92:	4298      	cmp	r0, r3
 8010d94:	da07      	bge.n	8010da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8010d96:	42b0      	cmp	r0, r6
 8010d98:	da05      	bge.n	8010da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8010d9a:	4287      	cmp	r7, r0
 8010d9c:	dd6c      	ble.n	8010e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010d9e:	2f00      	cmp	r7, #0
 8010da0:	dd6a      	ble.n	8010e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010da2:	4630      	mov	r0, r6
 8010da4:	e004      	b.n	8010db0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 8010da6:	4287      	cmp	r7, r0
 8010da8:	dcfb      	bgt.n	8010da2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 8010daa:	42b0      	cmp	r0, r6
 8010dac:	bfa8      	it	ge
 8010dae:	4630      	movge	r0, r6
 8010db0:	4b76      	ldr	r3, [pc, #472]	; (8010f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8010db2:	1bc0      	subs	r0, r0, r7
 8010db4:	2200      	movs	r2, #0
 8010db6:	f8ad 7016 	strh.w	r7, [sp, #22]
 8010dba:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010dbe:	882f      	ldrh	r7, [r5, #0]
 8010dc0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010dc4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010dc8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8010dcc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8010dd0:	42bb      	cmp	r3, r7
 8010dd2:	d9cd      	bls.n	8010d70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8010dd4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8010dd8:	ab07      	add	r3, sp, #28
 8010dda:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010dde:	6851      	ldr	r1, [r2, #4]
 8010de0:	c303      	stmia	r3!, {r0, r1}
 8010de2:	a905      	add	r1, sp, #20
 8010de4:	a807      	add	r0, sp, #28
 8010de6:	f7ff f9ae 	bl	8010146 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010dea:	2800      	cmp	r0, #0
 8010dec:	d04c      	beq.n	8010e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8010dee:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8010df2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8010df6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8010dfa:	4686      	mov	lr, r0
 8010dfc:	4290      	cmp	r0, r2
 8010dfe:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010e02:	4450      	add	r0, sl
 8010e04:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8010e08:	bfb8      	it	lt
 8010e0a:	4696      	movlt	lr, r2
 8010e0c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010e10:	4452      	add	r2, sl
 8010e12:	b280      	uxth	r0, r0
 8010e14:	4299      	cmp	r1, r3
 8010e16:	468c      	mov	ip, r1
 8010e18:	b292      	uxth	r2, r2
 8010e1a:	9302      	str	r3, [sp, #8]
 8010e1c:	bfb8      	it	lt
 8010e1e:	469c      	movlt	ip, r3
 8010e20:	b203      	sxth	r3, r0
 8010e22:	fa0f fa82 	sxth.w	sl, r2
 8010e26:	f8ad e01c 	strh.w	lr, [sp, #28]
 8010e2a:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010e2e:	4553      	cmp	r3, sl
 8010e30:	bfb8      	it	lt
 8010e32:	4602      	movlt	r2, r0
 8010e34:	9b02      	ldr	r3, [sp, #8]
 8010e36:	eba2 020e 	sub.w	r2, r2, lr
 8010e3a:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010e3e:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010e42:	4411      	add	r1, r2
 8010e44:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010e48:	4413      	add	r3, r2
 8010e4a:	b289      	uxth	r1, r1
 8010e4c:	b29b      	uxth	r3, r3
 8010e4e:	b208      	sxth	r0, r1
 8010e50:	b21a      	sxth	r2, r3
 8010e52:	4290      	cmp	r0, r2
 8010e54:	bfb8      	it	lt
 8010e56:	460b      	movlt	r3, r1
 8010e58:	eba3 030c 	sub.w	r3, r3, ip
 8010e5c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010e60:	a807      	add	r0, sp, #28
 8010e62:	f7f9 fe5e 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e66:	b920      	cbnz	r0, 8010e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8010e68:	6823      	ldr	r3, [r4, #0]
 8010e6a:	a907      	add	r1, sp, #28
 8010e6c:	4620      	mov	r0, r4
 8010e6e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010e70:	4798      	blx	r3
 8010e72:	3701      	adds	r7, #1
 8010e74:	b2bf      	uxth	r7, r7
 8010e76:	e7a9      	b.n	8010dcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8010e78:	f8d9 0000 	ldr.w	r0, [r9]
 8010e7c:	2101      	movs	r1, #1
 8010e7e:	6803      	ldr	r3, [r0, #0]
 8010e80:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8010e84:	4798      	blx	r3
 8010e86:	e773      	b.n	8010d70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8010e88:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8010e8c:	e7e8      	b.n	8010e60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8010e8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010e90:	4798      	blx	r3
 8010e92:	4b3f      	ldr	r3, [pc, #252]	; (8010f90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8010e94:	781b      	ldrb	r3, [r3, #0]
 8010e96:	2b00      	cmp	r3, #0
 8010e98:	f43f af2b 	beq.w	8010cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8010e9c:	2300      	movs	r3, #0
 8010e9e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8010ea2:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8010ea6:	882b      	ldrh	r3, [r5, #0]
 8010ea8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8010eac:	42ab      	cmp	r3, r5
 8010eae:	f4bf af20 	bcs.w	8010cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8010eb2:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8010eb6:	2907      	cmp	r1, #7
 8010eb8:	d814      	bhi.n	8010ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 8010eba:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8010ebe:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8010ec2:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8010ec6:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8010eca:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8010ece:	1c4a      	adds	r2, r1, #1
 8010ed0:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8010ed4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8010ed8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8010edc:	f8a2 c002 	strh.w	ip, [r2, #2]
 8010ee0:	8097      	strh	r7, [r2, #4]
 8010ee2:	80d6      	strh	r6, [r2, #6]
 8010ee4:	3301      	adds	r3, #1
 8010ee6:	b29b      	uxth	r3, r3
 8010ee8:	e7e0      	b.n	8010eac <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 8010eea:	2b02      	cmp	r3, #2
 8010eec:	f040 8133 	bne.w	8011156 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8010ef0:	4b28      	ldr	r3, [pc, #160]	; (8010f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8010ef2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8010ef6:	781b      	ldrb	r3, [r3, #0]
 8010ef8:	2b01      	cmp	r3, #1
 8010efa:	f000 8098 	beq.w	801102e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010efe:	882a      	ldrh	r2, [r5, #0]
 8010f00:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8010f04:	3201      	adds	r2, #1
 8010f06:	b292      	uxth	r2, r2
 8010f08:	2900      	cmp	r1, #0
 8010f0a:	d0c2      	beq.n	8010e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010f0c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8010f10:	4694      	mov	ip, r2
 8010f12:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8010f16:	f04f 0900 	mov.w	r9, #0
 8010f1a:	441e      	add	r6, r3
 8010f1c:	b236      	sxth	r6, r6
 8010f1e:	fa1f f38c 	uxth.w	r3, ip
 8010f22:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8010f26:	4299      	cmp	r1, r3
 8010f28:	f240 80be 	bls.w	80110a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8010f2c:	4427      	add	r7, r4
 8010f2e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010f32:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8010f36:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8010f3a:	4283      	cmp	r3, r0
 8010f3c:	f340 80a0 	ble.w	8011080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8010f40:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8010f44:	46e1      	mov	r9, ip
 8010f46:	4406      	add	r6, r0
 8010f48:	b236      	sxth	r6, r6
 8010f4a:	429e      	cmp	r6, r3
 8010f4c:	bfa8      	it	ge
 8010f4e:	461e      	movge	r6, r3
 8010f50:	f10c 0c01 	add.w	ip, ip, #1
 8010f54:	e7e3      	b.n	8010f1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 8010f56:	d10a      	bne.n	8010f6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8010f58:	4562      	cmp	r2, ip
 8010f5a:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8010f5e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8010f62:	bfb8      	it	lt
 8010f64:	4662      	movlt	r2, ip
 8010f66:	4288      	cmp	r0, r1
 8010f68:	bfb8      	it	lt
 8010f6a:	461f      	movlt	r7, r3
 8010f6c:	e086      	b.n	801107c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8010f6e:	428a      	cmp	r2, r1
 8010f70:	bfb8      	it	lt
 8010f72:	460a      	movlt	r2, r1
 8010f74:	e082      	b.n	801107c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8010f76:	bf00      	nop
 8010f78:	2400e464 	.word	0x2400e464
 8010f7c:	2400e470 	.word	0x2400e470
 8010f80:	24000080 	.word	0x24000080
 8010f84:	2400e424 	.word	0x2400e424
 8010f88:	2400e41a 	.word	0x2400e41a
 8010f8c:	2400e418 	.word	0x2400e418
 8010f90:	2400e422 	.word	0x2400e422
 8010f94:	2400e41c 	.word	0x2400e41c
 8010f98:	19a1      	adds	r1, r4, r6
 8010f9a:	ab07      	add	r3, sp, #28
 8010f9c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8010fa0:	6849      	ldr	r1, [r1, #4]
 8010fa2:	c303      	stmia	r3!, {r0, r1}
 8010fa4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010fa8:	a807      	add	r0, sp, #28
 8010faa:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010fae:	2b13      	cmp	r3, #19
 8010fb0:	440b      	add	r3, r1
 8010fb2:	bfd8      	it	le
 8010fb4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8010fb8:	1a9b      	subs	r3, r3, r2
 8010fba:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010fbe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010fc2:	f7fe ffeb 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010fc6:	a807      	add	r0, sp, #28
 8010fc8:	f7f9 fdab 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010fcc:	bb78      	cbnz	r0, 801102e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010fce:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8010fd2:	4426      	add	r6, r4
 8010fd4:	f8d9 0000 	ldr.w	r0, [r9]
 8010fd8:	f1bc 0f14 	cmp.w	ip, #20
 8010fdc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010fe0:	f8d0 e000 	ldr.w	lr, [r0]
 8010fe4:	bfa8      	it	ge
 8010fe6:	f04f 0c14 	movge.w	ip, #20
 8010fea:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8010fee:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010ff2:	fa1f fc8c 	uxth.w	ip, ip
 8010ff6:	f8cd c000 	str.w	ip, [sp]
 8010ffa:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8010ffe:	47d8      	blx	fp
 8011000:	4683      	mov	fp, r0
 8011002:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011006:	a807      	add	r0, sp, #28
 8011008:	f7fe ffae 	bl	800ff68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801100c:	6823      	ldr	r3, [r4, #0]
 801100e:	4620      	mov	r0, r4
 8011010:	a907      	add	r1, sp, #28
 8011012:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011014:	4798      	blx	r3
 8011016:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801101a:	eba0 000b 	sub.w	r0, r0, fp
 801101e:	b200      	sxth	r0, r0
 8011020:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8011024:	b918      	cbnz	r0, 801102e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8011026:	b2b9      	uxth	r1, r7
 8011028:	4650      	mov	r0, sl
 801102a:	f7ff fa7b 	bl	8010524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801102e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8011032:	f1bb 0f00 	cmp.w	fp, #0
 8011036:	f43f af2c 	beq.w	8010e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801103a:	882b      	ldrh	r3, [r5, #0]
 801103c:	2700      	movs	r7, #0
 801103e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8011042:	3301      	adds	r3, #1
 8011044:	b29b      	uxth	r3, r3
 8011046:	b299      	uxth	r1, r3
 8011048:	00fe      	lsls	r6, r7, #3
 801104a:	458b      	cmp	fp, r1
 801104c:	d9a4      	bls.n	8010f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 801104e:	4426      	add	r6, r4
 8011050:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8011054:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8011058:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801105c:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8011060:	4408      	add	r0, r1
 8011062:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8011066:	4461      	add	r1, ip
 8011068:	b200      	sxth	r0, r0
 801106a:	b209      	sxth	r1, r1
 801106c:	4288      	cmp	r0, r1
 801106e:	f6bf af72 	bge.w	8010f56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8011072:	4584      	cmp	ip, r0
 8011074:	4662      	mov	r2, ip
 8011076:	461f      	mov	r7, r3
 8011078:	bfb8      	it	lt
 801107a:	4602      	movlt	r2, r0
 801107c:	3301      	adds	r3, #1
 801107e:	e7e2      	b.n	8011046 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8011080:	d10e      	bne.n	80110a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8011082:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8011086:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 801108a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801108e:	4473      	add	r3, lr
 8011090:	b21b      	sxth	r3, r3
 8011092:	429e      	cmp	r6, r3
 8011094:	bfa8      	it	ge
 8011096:	461e      	movge	r6, r3
 8011098:	4287      	cmp	r7, r0
 801109a:	bfb8      	it	lt
 801109c:	46e1      	movlt	r9, ip
 801109e:	e757      	b.n	8010f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 80110a0:	4286      	cmp	r6, r0
 80110a2:	bfa8      	it	ge
 80110a4:	4606      	movge	r6, r0
 80110a6:	e753      	b.n	8010f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 80110a8:	eb0a 0007 	add.w	r0, sl, r7
 80110ac:	4427      	add	r7, r4
 80110ae:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80110b2:	f1bb 0f13 	cmp.w	fp, #19
 80110b6:	bfdc      	itt	le
 80110b8:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80110bc:	445e      	addle	r6, fp
 80110be:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80110c2:	bfd8      	it	le
 80110c4:	b236      	sxthle	r6, r6
 80110c6:	f7f9 fd2c 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80110ca:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80110ce:	2800      	cmp	r0, #0
 80110d0:	f47f af1a 	bne.w	8010f08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 80110d4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80110d8:	fa1f fb8b 	uxth.w	fp, fp
 80110dc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80110e0:	1ab6      	subs	r6, r6, r2
 80110e2:	4829      	ldr	r0, [pc, #164]	; (8011188 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 80110e4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80110e8:	2e14      	cmp	r6, #20
 80110ea:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80110ee:	6800      	ldr	r0, [r0, #0]
 80110f0:	bfa8      	it	ge
 80110f2:	2614      	movge	r6, #20
 80110f4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80110f8:	f8ad 201e 	strh.w	r2, [sp, #30]
 80110fc:	b289      	uxth	r1, r1
 80110fe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011102:	b2b6      	uxth	r6, r6
 8011104:	f8d0 c000 	ldr.w	ip, [r0]
 8011108:	b292      	uxth	r2, r2
 801110a:	455e      	cmp	r6, fp
 801110c:	bf94      	ite	ls
 801110e:	9600      	strls	r6, [sp, #0]
 8011110:	f8cd b000 	strhi.w	fp, [sp]
 8011114:	b29b      	uxth	r3, r3
 8011116:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801111a:	47b0      	blx	r6
 801111c:	6823      	ldr	r3, [r4, #0]
 801111e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011122:	a907      	add	r1, sp, #28
 8011124:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011126:	4620      	mov	r0, r4
 8011128:	4798      	blx	r3
 801112a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801112e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8011132:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8011136:	1a5b      	subs	r3, r3, r1
 8011138:	440a      	add	r2, r1
 801113a:	b21b      	sxth	r3, r3
 801113c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8011140:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8011144:	2b00      	cmp	r3, #0
 8011146:	f47f aeda 	bne.w	8010efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801114a:	fa1f f189 	uxth.w	r1, r9
 801114e:	4650      	mov	r0, sl
 8011150:	f7ff f9e8 	bl	8010524 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011154:	e6d3      	b.n	8010efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8011156:	882e      	ldrh	r6, [r5, #0]
 8011158:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801115c:	42b3      	cmp	r3, r6
 801115e:	f67f ae98 	bls.w	8010e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011162:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8011166:	ab07      	add	r3, sp, #28
 8011168:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801116c:	6851      	ldr	r1, [r2, #4]
 801116e:	c303      	stmia	r3!, {r0, r1}
 8011170:	a807      	add	r0, sp, #28
 8011172:	f7f9 fcd6 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011176:	b920      	cbnz	r0, 8011182 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8011178:	6823      	ldr	r3, [r4, #0]
 801117a:	a907      	add	r1, sp, #28
 801117c:	4620      	mov	r0, r4
 801117e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011180:	4798      	blx	r3
 8011182:	3601      	adds	r6, #1
 8011184:	b2b6      	uxth	r6, r6
 8011186:	e7e7      	b.n	8011158 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8011188:	2400e424 	.word	0x2400e424

0801118c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801118c:	4b03      	ldr	r3, [pc, #12]	; (801119c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801118e:	2200      	movs	r2, #0
 8011190:	801a      	strh	r2, [r3, #0]
 8011192:	805a      	strh	r2, [r3, #2]
 8011194:	809a      	strh	r2, [r3, #4]
 8011196:	80da      	strh	r2, [r3, #6]
 8011198:	4770      	bx	lr
 801119a:	bf00      	nop
 801119c:	2400e470 	.word	0x2400e470

080111a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80111a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111a4:	b09d      	sub	sp, #116	; 0x74
 80111a6:	4606      	mov	r6, r0
 80111a8:	4614      	mov	r4, r2
 80111aa:	468a      	mov	sl, r1
 80111ac:	a803      	add	r0, sp, #12
 80111ae:	461d      	mov	r5, r3
 80111b0:	f000 fe6a 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 80111b4:	6833      	ldr	r3, [r6, #0]
 80111b6:	4630      	mov	r0, r6
 80111b8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80111bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80111be:	4798      	blx	r3
 80111c0:	6833      	ldr	r3, [r6, #0]
 80111c2:	4607      	mov	r7, r0
 80111c4:	4630      	mov	r0, r6
 80111c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80111c8:	4798      	blx	r3
 80111ca:	462a      	mov	r2, r5
 80111cc:	2500      	movs	r5, #0
 80111ce:	4621      	mov	r1, r4
 80111d0:	9000      	str	r0, [sp, #0]
 80111d2:	463b      	mov	r3, r7
 80111d4:	462c      	mov	r4, r5
 80111d6:	46a9      	mov	r9, r5
 80111d8:	46a8      	mov	r8, r5
 80111da:	a803      	add	r0, sp, #12
 80111dc:	f000 feaf 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80111e0:	2300      	movs	r3, #0
 80111e2:	9302      	str	r3, [sp, #8]
 80111e4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80111e8:	429c      	cmp	r4, r3
 80111ea:	d002      	beq.n	80111f2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80111ec:	455c      	cmp	r4, fp
 80111ee:	bf18      	it	ne
 80111f0:	4625      	movne	r5, r4
 80111f2:	ab02      	add	r3, sp, #8
 80111f4:	4632      	mov	r2, r6
 80111f6:	4651      	mov	r1, sl
 80111f8:	a803      	add	r0, sp, #12
 80111fa:	f001 f9a5 	bl	8012548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80111fe:	4604      	mov	r4, r0
 8011200:	b108      	cbz	r0, 8011206 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011202:	280a      	cmp	r0, #10
 8011204:	d10a      	bne.n	801121c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011206:	45c1      	cmp	r9, r8
 8011208:	bf38      	it	cc
 801120a:	46c1      	movcc	r9, r8
 801120c:	f04f 0800 	mov.w	r8, #0
 8011210:	2c00      	cmp	r4, #0
 8011212:	d1e5      	bne.n	80111e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011214:	4648      	mov	r0, r9
 8011216:	b01d      	add	sp, #116	; 0x74
 8011218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801121c:	9a02      	ldr	r2, [sp, #8]
 801121e:	2a00      	cmp	r2, #0
 8011220:	d0de      	beq.n	80111e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011222:	7b57      	ldrb	r7, [r2, #13]
 8011224:	4629      	mov	r1, r5
 8011226:	6833      	ldr	r3, [r6, #0]
 8011228:	007f      	lsls	r7, r7, #1
 801122a:	8894      	ldrh	r4, [r2, #4]
 801122c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801122e:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011232:	7a97      	ldrb	r7, [r2, #10]
 8011234:	4307      	orrs	r7, r0
 8011236:	4630      	mov	r0, r6
 8011238:	4798      	blx	r3
 801123a:	4438      	add	r0, r7
 801123c:	4480      	add	r8, r0
 801123e:	fa1f f888 	uxth.w	r8, r8
 8011242:	e7e5      	b.n	8011210 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011244 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011244:	b508      	push	{r3, lr}
 8011246:	6803      	ldr	r3, [r0, #0]
 8011248:	68db      	ldr	r3, [r3, #12]
 801124a:	4798      	blx	r3
 801124c:	b128      	cbz	r0, 801125a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801124e:	7b43      	ldrb	r3, [r0, #13]
 8011250:	7a80      	ldrb	r0, [r0, #10]
 8011252:	005b      	lsls	r3, r3, #1
 8011254:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011258:	4318      	orrs	r0, r3
 801125a:	bd08      	pop	{r3, pc}

0801125c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801125c:	b40e      	push	{r1, r2, r3}
 801125e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011260:	b09e      	sub	sp, #120	; 0x78
 8011262:	4605      	mov	r5, r0
 8011264:	ab23      	add	r3, sp, #140	; 0x8c
 8011266:	a805      	add	r0, sp, #20
 8011268:	f853 4b04 	ldr.w	r4, [r3], #4
 801126c:	9303      	str	r3, [sp, #12]
 801126e:	f000 fe0b 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 8011272:	682b      	ldr	r3, [r5, #0]
 8011274:	4628      	mov	r0, r5
 8011276:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011278:	4798      	blx	r3
 801127a:	682b      	ldr	r3, [r5, #0]
 801127c:	4606      	mov	r6, r0
 801127e:	4628      	mov	r0, r5
 8011280:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011282:	4798      	blx	r3
 8011284:	4633      	mov	r3, r6
 8011286:	4621      	mov	r1, r4
 8011288:	ae1e      	add	r6, sp, #120	; 0x78
 801128a:	2400      	movs	r4, #0
 801128c:	9000      	str	r0, [sp, #0]
 801128e:	9a03      	ldr	r2, [sp, #12]
 8011290:	a805      	add	r0, sp, #20
 8011292:	f000 fe54 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011296:	f846 4d68 	str.w	r4, [r6, #-104]!
 801129a:	462a      	mov	r2, r5
 801129c:	4633      	mov	r3, r6
 801129e:	4621      	mov	r1, r4
 80112a0:	a805      	add	r0, sp, #20
 80112a2:	f001 f951 	bl	8012548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80112a6:	b300      	cbz	r0, 80112ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 80112a8:	280a      	cmp	r0, #10
 80112aa:	d01a      	beq.n	80112e2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80112ac:	9f04      	ldr	r7, [sp, #16]
 80112ae:	b1c7      	cbz	r7, 80112e2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80112b0:	7b78      	ldrb	r0, [r7, #13]
 80112b2:	7a3b      	ldrb	r3, [r7, #8]
 80112b4:	00c1      	lsls	r1, r0, #3
 80112b6:	88ea      	ldrh	r2, [r5, #6]
 80112b8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80112bc:	4319      	orrs	r1, r3
 80112be:	0643      	lsls	r3, r0, #25
 80112c0:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80112c4:	bf48      	it	mi
 80112c6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80112ca:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80112ce:	bf48      	it	mi
 80112d0:	b219      	sxthmi	r1, r3
 80112d2:	79fb      	ldrb	r3, [r7, #7]
 80112d4:	4303      	orrs	r3, r0
 80112d6:	4413      	add	r3, r2
 80112d8:	1a5b      	subs	r3, r3, r1
 80112da:	b21b      	sxth	r3, r3
 80112dc:	429c      	cmp	r4, r3
 80112de:	bfb8      	it	lt
 80112e0:	461c      	movlt	r4, r3
 80112e2:	4633      	mov	r3, r6
 80112e4:	462a      	mov	r2, r5
 80112e6:	2100      	movs	r1, #0
 80112e8:	e7da      	b.n	80112a0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80112ea:	b2a0      	uxth	r0, r4
 80112ec:	b01e      	add	sp, #120	; 0x78
 80112ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80112f2:	b003      	add	sp, #12
 80112f4:	4770      	bx	lr

080112f6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80112f6:	7a43      	ldrb	r3, [r0, #9]
 80112f8:	8880      	ldrh	r0, [r0, #4]
 80112fa:	4418      	add	r0, r3
 80112fc:	b280      	uxth	r0, r0
 80112fe:	4770      	bx	lr

08011300 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8011300:	6803      	ldr	r3, [r0, #0]
 8011302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011304:	4718      	bx	r3

08011306 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011306:	b40e      	push	{r1, r2, r3}
 8011308:	b570      	push	{r4, r5, r6, lr}
 801130a:	b09d      	sub	sp, #116	; 0x74
 801130c:	4604      	mov	r4, r0
 801130e:	ab21      	add	r3, sp, #132	; 0x84
 8011310:	a803      	add	r0, sp, #12
 8011312:	f853 5b04 	ldr.w	r5, [r3], #4
 8011316:	9302      	str	r3, [sp, #8]
 8011318:	f000 fdb6 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 801131c:	6823      	ldr	r3, [r4, #0]
 801131e:	4620      	mov	r0, r4
 8011320:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011322:	4798      	blx	r3
 8011324:	6823      	ldr	r3, [r4, #0]
 8011326:	4606      	mov	r6, r0
 8011328:	4620      	mov	r0, r4
 801132a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801132c:	2401      	movs	r4, #1
 801132e:	4798      	blx	r3
 8011330:	4633      	mov	r3, r6
 8011332:	9000      	str	r0, [sp, #0]
 8011334:	4629      	mov	r1, r5
 8011336:	9a02      	ldr	r2, [sp, #8]
 8011338:	a803      	add	r0, sp, #12
 801133a:	f000 fe00 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801133e:	a803      	add	r0, sp, #12
 8011340:	f001 f9ce 	bl	80126e0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011344:	b2a3      	uxth	r3, r4
 8011346:	b138      	cbz	r0, 8011358 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8011348:	280a      	cmp	r0, #10
 801134a:	a803      	add	r0, sp, #12
 801134c:	bf04      	itt	eq
 801134e:	3301      	addeq	r3, #1
 8011350:	b21c      	sxtheq	r4, r3
 8011352:	f001 f9c5 	bl	80126e0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011356:	e7f5      	b.n	8011344 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011358:	4618      	mov	r0, r3
 801135a:	b01d      	add	sp, #116	; 0x74
 801135c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011360:	b003      	add	sp, #12
 8011362:	4770      	bx	lr

08011364 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011364:	b40e      	push	{r1, r2, r3}
 8011366:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011368:	b09e      	sub	sp, #120	; 0x78
 801136a:	4604      	mov	r4, r0
 801136c:	ab23      	add	r3, sp, #140	; 0x8c
 801136e:	a805      	add	r0, sp, #20
 8011370:	f853 5b04 	ldr.w	r5, [r3], #4
 8011374:	9303      	str	r3, [sp, #12]
 8011376:	f000 fd87 	bl	8011e88 <_ZN8touchgfx12TextProviderC1Ev>
 801137a:	6823      	ldr	r3, [r4, #0]
 801137c:	4620      	mov	r0, r4
 801137e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011380:	4798      	blx	r3
 8011382:	6823      	ldr	r3, [r4, #0]
 8011384:	4606      	mov	r6, r0
 8011386:	4620      	mov	r0, r4
 8011388:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801138a:	4798      	blx	r3
 801138c:	4633      	mov	r3, r6
 801138e:	4629      	mov	r1, r5
 8011390:	9000      	str	r0, [sp, #0]
 8011392:	9a03      	ldr	r2, [sp, #12]
 8011394:	a805      	add	r0, sp, #20
 8011396:	f000 fdd2 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801139a:	ad1e      	add	r5, sp, #120	; 0x78
 801139c:	2100      	movs	r1, #0
 801139e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80113a2:	4622      	mov	r2, r4
 80113a4:	a805      	add	r0, sp, #20
 80113a6:	f845 1d68 	str.w	r1, [r5, #-104]!
 80113aa:	462b      	mov	r3, r5
 80113ac:	f001 f8cc 	bl	8012548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80113b0:	b1d8      	cbz	r0, 80113ea <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80113b2:	280a      	cmp	r0, #10
 80113b4:	d012      	beq.n	80113dc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80113b6:	9804      	ldr	r0, [sp, #16]
 80113b8:	b180      	cbz	r0, 80113dc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80113ba:	7b47      	ldrb	r7, [r0, #13]
 80113bc:	88e2      	ldrh	r2, [r4, #6]
 80113be:	00fb      	lsls	r3, r7, #3
 80113c0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80113c4:	7a03      	ldrb	r3, [r0, #8]
 80113c6:	430b      	orrs	r3, r1
 80113c8:	0679      	lsls	r1, r7, #25
 80113ca:	bf44      	itt	mi
 80113cc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80113d0:	b21b      	sxthmi	r3, r3
 80113d2:	1ad3      	subs	r3, r2, r3
 80113d4:	b21b      	sxth	r3, r3
 80113d6:	429e      	cmp	r6, r3
 80113d8:	bfa8      	it	ge
 80113da:	461e      	movge	r6, r3
 80113dc:	462b      	mov	r3, r5
 80113de:	4622      	mov	r2, r4
 80113e0:	2100      	movs	r1, #0
 80113e2:	a805      	add	r0, sp, #20
 80113e4:	f001 f8b0 	bl	8012548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80113e8:	e7e2      	b.n	80113b0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80113ea:	4630      	mov	r0, r6
 80113ec:	b01e      	add	sp, #120	; 0x78
 80113ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80113f2:	b003      	add	sp, #12
 80113f4:	4770      	bx	lr

080113f6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80113f6:	b513      	push	{r0, r1, r4, lr}
 80113f8:	6803      	ldr	r3, [r0, #0]
 80113fa:	2400      	movs	r4, #0
 80113fc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011400:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011404:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011408:	4669      	mov	r1, sp
 801140a:	691b      	ldr	r3, [r3, #16]
 801140c:	9400      	str	r4, [sp, #0]
 801140e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011412:	4798      	blx	r3
 8011414:	b002      	add	sp, #8
 8011416:	bd10      	pop	{r4, pc}

08011418 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011418:	b538      	push	{r3, r4, r5, lr}
 801141a:	680b      	ldr	r3, [r1, #0]
 801141c:	460c      	mov	r4, r1
 801141e:	4605      	mov	r5, r0
 8011420:	68db      	ldr	r3, [r3, #12]
 8011422:	4798      	blx	r3
 8011424:	6823      	ldr	r3, [r4, #0]
 8011426:	4620      	mov	r0, r4
 8011428:	4629      	mov	r1, r5
 801142a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801142c:	4798      	blx	r3
 801142e:	4628      	mov	r0, r5
 8011430:	bd38      	pop	{r3, r4, r5, pc}

08011432 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011432:	b410      	push	{r4}
 8011434:	880a      	ldrh	r2, [r1, #0]
 8011436:	8884      	ldrh	r4, [r0, #4]
 8011438:	4422      	add	r2, r4
 801143a:	800a      	strh	r2, [r1, #0]
 801143c:	884a      	ldrh	r2, [r1, #2]
 801143e:	88c4      	ldrh	r4, [r0, #6]
 8011440:	4422      	add	r2, r4
 8011442:	804a      	strh	r2, [r1, #2]
 8011444:	6940      	ldr	r0, [r0, #20]
 8011446:	b120      	cbz	r0, 8011452 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011448:	6803      	ldr	r3, [r0, #0]
 801144a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801144e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011450:	4718      	bx	r3
 8011452:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011456:	4770      	bx	lr

08011458 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011458:	b570      	push	{r4, r5, r6, lr}
 801145a:	8882      	ldrh	r2, [r0, #4]
 801145c:	460c      	mov	r4, r1
 801145e:	880b      	ldrh	r3, [r1, #0]
 8011460:	4605      	mov	r5, r0
 8011462:	4413      	add	r3, r2
 8011464:	800b      	strh	r3, [r1, #0]
 8011466:	884b      	ldrh	r3, [r1, #2]
 8011468:	88c2      	ldrh	r2, [r0, #6]
 801146a:	4413      	add	r3, r2
 801146c:	804b      	strh	r3, [r1, #2]
 801146e:	1d01      	adds	r1, r0, #4
 8011470:	4620      	mov	r0, r4
 8011472:	f7f9 fb13 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 8011476:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801147a:	2b00      	cmp	r3, #0
 801147c:	dd0b      	ble.n	8011496 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801147e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011482:	2b00      	cmp	r3, #0
 8011484:	dd07      	ble.n	8011496 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011486:	6968      	ldr	r0, [r5, #20]
 8011488:	b128      	cbz	r0, 8011496 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801148a:	6803      	ldr	r3, [r0, #0]
 801148c:	4621      	mov	r1, r4
 801148e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011494:	4718      	bx	r3
 8011496:	bd70      	pop	{r4, r5, r6, pc}

08011498 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011498:	b570      	push	{r4, r5, r6, lr}
 801149a:	8882      	ldrh	r2, [r0, #4]
 801149c:	460c      	mov	r4, r1
 801149e:	880b      	ldrh	r3, [r1, #0]
 80114a0:	4605      	mov	r5, r0
 80114a2:	4413      	add	r3, r2
 80114a4:	800b      	strh	r3, [r1, #0]
 80114a6:	884b      	ldrh	r3, [r1, #2]
 80114a8:	88c2      	ldrh	r2, [r0, #6]
 80114aa:	4413      	add	r3, r2
 80114ac:	804b      	strh	r3, [r1, #2]
 80114ae:	1d01      	adds	r1, r0, #4
 80114b0:	4620      	mov	r0, r4
 80114b2:	f7f9 faf3 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 80114b6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80114ba:	2b00      	cmp	r3, #0
 80114bc:	dd19      	ble.n	80114f2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80114be:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80114c2:	2b00      	cmp	r3, #0
 80114c4:	dd15      	ble.n	80114f2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80114c6:	6968      	ldr	r0, [r5, #20]
 80114c8:	b128      	cbz	r0, 80114d6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80114ca:	6803      	ldr	r3, [r0, #0]
 80114cc:	4621      	mov	r1, r4
 80114ce:	691b      	ldr	r3, [r3, #16]
 80114d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114d4:	4718      	bx	r3
 80114d6:	4b07      	ldr	r3, [pc, #28]	; (80114f4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80114d8:	681b      	ldr	r3, [r3, #0]
 80114da:	3304      	adds	r3, #4
 80114dc:	429d      	cmp	r5, r3
 80114de:	d108      	bne.n	80114f2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80114e0:	f7fe ff10 	bl	8010304 <_ZN8touchgfx11Application11getInstanceEv>
 80114e4:	6803      	ldr	r3, [r0, #0]
 80114e6:	6821      	ldr	r1, [r4, #0]
 80114e8:	6862      	ldr	r2, [r4, #4]
 80114ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80114ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114f0:	4718      	bx	r3
 80114f2:	bd70      	pop	{r4, r5, r6, pc}
 80114f4:	2400e468 	.word	0x2400e468

080114f8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80114f8:	b570      	push	{r4, r5, r6, lr}
 80114fa:	4604      	mov	r4, r0
 80114fc:	4616      	mov	r6, r2
 80114fe:	460d      	mov	r5, r1
 8011500:	b901      	cbnz	r1, 8011504 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011502:	b192      	cbz	r2, 801152a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011504:	6823      	ldr	r3, [r4, #0]
 8011506:	4620      	mov	r0, r4
 8011508:	699b      	ldr	r3, [r3, #24]
 801150a:	4798      	blx	r3
 801150c:	88e2      	ldrh	r2, [r4, #6]
 801150e:	88a1      	ldrh	r1, [r4, #4]
 8011510:	4620      	mov	r0, r4
 8011512:	4432      	add	r2, r6
 8011514:	4429      	add	r1, r5
 8011516:	b212      	sxth	r2, r2
 8011518:	b209      	sxth	r1, r1
 801151a:	f7f1 f99b 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 801151e:	6823      	ldr	r3, [r4, #0]
 8011520:	4620      	mov	r0, r4
 8011522:	699b      	ldr	r3, [r3, #24]
 8011524:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011528:	4718      	bx	r3
 801152a:	bd70      	pop	{r4, r5, r6, pc}

0801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801152c:	b510      	push	{r4, lr}
 801152e:	2300      	movs	r3, #0
 8011530:	4604      	mov	r4, r0
 8011532:	4608      	mov	r0, r1
 8011534:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011538:	8023      	strh	r3, [r4, #0]
 801153a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801153e:	8063      	strh	r3, [r4, #2]
 8011540:	6803      	ldr	r3, [r0, #0]
 8011542:	80a1      	strh	r1, [r4, #4]
 8011544:	4621      	mov	r1, r4
 8011546:	80e2      	strh	r2, [r4, #6]
 8011548:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801154a:	4798      	blx	r3
 801154c:	4620      	mov	r0, r4
 801154e:	bd10      	pop	{r4, pc}

08011550 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011550:	b530      	push	{r4, r5, lr}
 8011552:	8083      	strh	r3, [r0, #4]
 8011554:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011558:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801155c:	80c3      	strh	r3, [r0, #6]
 801155e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011562:	6141      	str	r1, [r0, #20]
 8011564:	7203      	strb	r3, [r0, #8]
 8011566:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801156a:	8302      	strh	r2, [r0, #24]
 801156c:	7243      	strb	r3, [r0, #9]
 801156e:	7a83      	ldrb	r3, [r0, #10]
 8011570:	f365 0306 	bfi	r3, r5, #0, #7
 8011574:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011578:	f365 13c7 	bfi	r3, r5, #7, #1
 801157c:	7283      	strb	r3, [r0, #10]
 801157e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011582:	72c3      	strb	r3, [r0, #11]
 8011584:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8011588:	7303      	strb	r3, [r0, #12]
 801158a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801158e:	81c3      	strh	r3, [r0, #14]
 8011590:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8011594:	8203      	strh	r3, [r0, #16]
 8011596:	4b01      	ldr	r3, [pc, #4]	; (801159c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011598:	6003      	str	r3, [r0, #0]
 801159a:	bd30      	pop	{r4, r5, pc}
 801159c:	08023928 	.word	0x08023928

080115a0 <_ZNK8touchgfx9ConstFont4findEt>:
 80115a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80115a2:	6944      	ldr	r4, [r0, #20]
 80115a4:	b3bc      	cbz	r4, 8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115a6:	88a3      	ldrh	r3, [r4, #4]
 80115a8:	8b02      	ldrh	r2, [r0, #24]
 80115aa:	1acb      	subs	r3, r1, r3
 80115ac:	f102 32ff 	add.w	r2, r2, #4294967295
 80115b0:	d431      	bmi.n	8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115b2:	4293      	cmp	r3, r2
 80115b4:	dd0c      	ble.n	80115d0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80115b6:	230e      	movs	r3, #14
 80115b8:	fb03 4302 	mla	r3, r3, r2, r4
 80115bc:	889b      	ldrh	r3, [r3, #4]
 80115be:	1a5b      	subs	r3, r3, r1
 80115c0:	1ad3      	subs	r3, r2, r3
 80115c2:	429a      	cmp	r2, r3
 80115c4:	db27      	blt.n	8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115c6:	2b00      	cmp	r3, #0
 80115c8:	bfbc      	itt	lt
 80115ca:	2302      	movlt	r3, #2
 80115cc:	fb92 f3f3 	sdivlt	r3, r2, r3
 80115d0:	2500      	movs	r5, #0
 80115d2:	260e      	movs	r6, #14
 80115d4:	4295      	cmp	r5, r2
 80115d6:	dc1e      	bgt.n	8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115d8:	fb06 4003 	mla	r0, r6, r3, r4
 80115dc:	8887      	ldrh	r7, [r0, #4]
 80115de:	42b9      	cmp	r1, r7
 80115e0:	d01a      	beq.n	8011618 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80115e2:	d20d      	bcs.n	8011600 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80115e4:	1e5a      	subs	r2, r3, #1
 80115e6:	4295      	cmp	r5, r2
 80115e8:	dc15      	bgt.n	8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115ea:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80115ee:	1a5b      	subs	r3, r3, r1
 80115f0:	1ad3      	subs	r3, r2, r3
 80115f2:	429a      	cmp	r2, r3
 80115f4:	db0f      	blt.n	8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80115f6:	429d      	cmp	r5, r3
 80115f8:	ddec      	ble.n	80115d4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80115fa:	1953      	adds	r3, r2, r5
 80115fc:	105b      	asrs	r3, r3, #1
 80115fe:	e7e9      	b.n	80115d4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011600:	1c5d      	adds	r5, r3, #1
 8011602:	42aa      	cmp	r2, r5
 8011604:	db07      	blt.n	8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011606:	8a43      	ldrh	r3, [r0, #18]
 8011608:	1acb      	subs	r3, r1, r3
 801160a:	442b      	add	r3, r5
 801160c:	429d      	cmp	r5, r3
 801160e:	dc02      	bgt.n	8011616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011610:	429a      	cmp	r2, r3
 8011612:	dadf      	bge.n	80115d4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011614:	e7f1      	b.n	80115fa <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011616:	2000      	movs	r0, #0
 8011618:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801161a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801161a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801161c:	4604      	mov	r4, r0
 801161e:	4617      	mov	r7, r2
 8011620:	461e      	mov	r6, r3
 8011622:	b911      	cbnz	r1, 801162a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011624:	2500      	movs	r5, #0
 8011626:	4628      	mov	r0, r5
 8011628:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801162a:	290a      	cmp	r1, #10
 801162c:	d0fa      	beq.n	8011624 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801162e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011632:	4291      	cmp	r1, r2
 8011634:	d0f6      	beq.n	8011624 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011636:	f242 020b 	movw	r2, #8203	; 0x200b
 801163a:	4291      	cmp	r1, r2
 801163c:	d0f2      	beq.n	8011624 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801163e:	f7ff ffaf 	bl	80115a0 <_ZNK8touchgfx9ConstFont4findEt>
 8011642:	4605      	mov	r5, r0
 8011644:	b950      	cbnz	r0, 801165c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011646:	6823      	ldr	r3, [r4, #0]
 8011648:	4620      	mov	r0, r4
 801164a:	691b      	ldr	r3, [r3, #16]
 801164c:	4798      	blx	r3
 801164e:	4601      	mov	r1, r0
 8011650:	4620      	mov	r0, r4
 8011652:	f7ff ffa5 	bl	80115a0 <_ZNK8touchgfx9ConstFont4findEt>
 8011656:	4605      	mov	r5, r0
 8011658:	2800      	cmp	r0, #0
 801165a:	d0e3      	beq.n	8011624 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801165c:	6823      	ldr	r3, [r4, #0]
 801165e:	4629      	mov	r1, r5
 8011660:	4620      	mov	r0, r4
 8011662:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011664:	4798      	blx	r3
 8011666:	6038      	str	r0, [r7, #0]
 8011668:	6823      	ldr	r3, [r4, #0]
 801166a:	4620      	mov	r0, r4
 801166c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801166e:	4798      	blx	r3
 8011670:	7030      	strb	r0, [r6, #0]
 8011672:	e7d8      	b.n	8011626 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011674 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8011674:	b538      	push	{r3, r4, r5, lr}
 8011676:	4605      	mov	r5, r0
 8011678:	f001 fd88 	bl	801318c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801167c:	4604      	mov	r4, r0
 801167e:	4628      	mov	r0, r5
 8011680:	f001 fcc8 	bl	8013014 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011684:	2800      	cmp	r0, #0
 8011686:	bf14      	ite	ne
 8011688:	2002      	movne	r0, #2
 801168a:	2000      	moveq	r0, #0
 801168c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8011690:	b280      	uxth	r0, r0
 8011692:	bd38      	pop	{r3, r4, r5, pc}

08011694 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8011694:	b538      	push	{r3, r4, r5, lr}
 8011696:	4605      	mov	r5, r0
 8011698:	f001 fd78 	bl	801318c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801169c:	4604      	mov	r4, r0
 801169e:	4628      	mov	r0, r5
 80116a0:	f001 fcb8 	bl	8013014 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80116a4:	2800      	cmp	r0, #0
 80116a6:	bf14      	ite	ne
 80116a8:	2002      	movne	r0, #2
 80116aa:	2000      	moveq	r0, #0
 80116ac:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80116b0:	f040 0001 	orr.w	r0, r0, #1
 80116b4:	b280      	uxth	r0, r0
 80116b6:	bd38      	pop	{r3, r4, r5, pc}

080116b8 <_ZN8touchgfx4clzuEm>:
 80116b8:	4603      	mov	r3, r0
 80116ba:	b1c8      	cbz	r0, 80116f0 <_ZN8touchgfx4clzuEm+0x38>
 80116bc:	0c02      	lsrs	r2, r0, #16
 80116be:	0412      	lsls	r2, r2, #16
 80116c0:	b9a2      	cbnz	r2, 80116ec <_ZN8touchgfx4clzuEm+0x34>
 80116c2:	0403      	lsls	r3, r0, #16
 80116c4:	2010      	movs	r0, #16
 80116c6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80116ca:	bf04      	itt	eq
 80116cc:	021b      	lsleq	r3, r3, #8
 80116ce:	3008      	addeq	r0, #8
 80116d0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80116d4:	bf04      	itt	eq
 80116d6:	011b      	lsleq	r3, r3, #4
 80116d8:	3004      	addeq	r0, #4
 80116da:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80116de:	bf04      	itt	eq
 80116e0:	009b      	lsleq	r3, r3, #2
 80116e2:	3002      	addeq	r0, #2
 80116e4:	2b00      	cmp	r3, #0
 80116e6:	db04      	blt.n	80116f2 <_ZN8touchgfx4clzuEm+0x3a>
 80116e8:	3001      	adds	r0, #1
 80116ea:	4770      	bx	lr
 80116ec:	2000      	movs	r0, #0
 80116ee:	e7ea      	b.n	80116c6 <_ZN8touchgfx4clzuEm+0xe>
 80116f0:	2020      	movs	r0, #32
 80116f2:	4770      	bx	lr

080116f4 <_ZN8touchgfx7muldivuEmmmRm>:
 80116f4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80116f8:	460f      	mov	r7, r1
 80116fa:	4615      	mov	r5, r2
 80116fc:	461e      	mov	r6, r3
 80116fe:	4601      	mov	r1, r0
 8011700:	b100      	cbz	r0, 8011704 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8011702:	b927      	cbnz	r7, 801170e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011704:	2000      	movs	r0, #0
 8011706:	6030      	str	r0, [r6, #0]
 8011708:	b002      	add	sp, #8
 801170a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801170e:	f7ff ffd3 	bl	80116b8 <_ZN8touchgfx4clzuEm>
 8011712:	b980      	cbnz	r0, 8011736 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8011714:	4638      	mov	r0, r7
 8011716:	f7ff ffcf 	bl	80116b8 <_ZN8touchgfx4clzuEm>
 801171a:	2800      	cmp	r0, #0
 801171c:	dd05      	ble.n	801172a <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801171e:	4633      	mov	r3, r6
 8011720:	462a      	mov	r2, r5
 8011722:	4638      	mov	r0, r7
 8011724:	f7ff ffe6 	bl	80116f4 <_ZN8touchgfx7muldivuEmmmRm>
 8011728:	e7ee      	b.n	8011708 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801172a:	f04f 33ff 	mov.w	r3, #4294967295
 801172e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8011732:	6033      	str	r3, [r6, #0]
 8011734:	e7e8      	b.n	8011708 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011736:	fa37 f800 	lsrs.w	r8, r7, r0
 801173a:	fb07 f301 	mul.w	r3, r7, r1
 801173e:	d105      	bne.n	801174c <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8011740:	fbb3 f0f5 	udiv	r0, r3, r5
 8011744:	fb05 3510 	mls	r5, r5, r0, r3
 8011748:	6035      	str	r5, [r6, #0]
 801174a:	e7dd      	b.n	8011708 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801174c:	2301      	movs	r3, #1
 801174e:	fa01 fa00 	lsl.w	sl, r1, r0
 8011752:	462a      	mov	r2, r5
 8011754:	fa03 f000 	lsl.w	r0, r3, r0
 8011758:	4633      	mov	r3, r6
 801175a:	fbba f9f5 	udiv	r9, sl, r5
 801175e:	3801      	subs	r0, #1
 8011760:	fb08 f409 	mul.w	r4, r8, r9
 8011764:	4038      	ands	r0, r7
 8011766:	f7ff ffc5 	bl	80116f4 <_ZN8touchgfx7muldivuEmmmRm>
 801176a:	462a      	mov	r2, r5
 801176c:	4607      	mov	r7, r0
 801176e:	ab01      	add	r3, sp, #4
 8011770:	fb05 a119 	mls	r1, r5, r9, sl
 8011774:	4640      	mov	r0, r8
 8011776:	f7ff ffbd 	bl	80116f4 <_ZN8touchgfx7muldivuEmmmRm>
 801177a:	9b01      	ldr	r3, [sp, #4]
 801177c:	6832      	ldr	r2, [r6, #0]
 801177e:	441a      	add	r2, r3
 8011780:	fbb2 f3f5 	udiv	r3, r2, r5
 8011784:	441c      	add	r4, r3
 8011786:	fb05 2513 	mls	r5, r5, r3, r2
 801178a:	443c      	add	r4, r7
 801178c:	4420      	add	r0, r4
 801178e:	e7db      	b.n	8011748 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011790 <_ZN8touchgfx6muldivElllRl>:
 8011790:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011792:	2800      	cmp	r0, #0
 8011794:	461e      	mov	r6, r3
 8011796:	bfba      	itte	lt
 8011798:	4240      	neglt	r0, r0
 801179a:	f04f 34ff 	movlt.w	r4, #4294967295
 801179e:	2401      	movge	r4, #1
 80117a0:	2900      	cmp	r1, #0
 80117a2:	bfbc      	itt	lt
 80117a4:	4249      	neglt	r1, r1
 80117a6:	4264      	neglt	r4, r4
 80117a8:	2a00      	cmp	r2, #0
 80117aa:	bfb6      	itet	lt
 80117ac:	4265      	neglt	r5, r4
 80117ae:	4625      	movge	r5, r4
 80117b0:	4252      	neglt	r2, r2
 80117b2:	4288      	cmp	r0, r1
 80117b4:	bfc2      	ittt	gt
 80117b6:	4603      	movgt	r3, r0
 80117b8:	4608      	movgt	r0, r1
 80117ba:	4619      	movgt	r1, r3
 80117bc:	ab01      	add	r3, sp, #4
 80117be:	f7ff ff99 	bl	80116f4 <_ZN8touchgfx7muldivuEmmmRm>
 80117c2:	9b01      	ldr	r3, [sp, #4]
 80117c4:	4368      	muls	r0, r5
 80117c6:	435c      	muls	r4, r3
 80117c8:	6034      	str	r4, [r6, #0]
 80117ca:	b002      	add	sp, #8
 80117cc:	bd70      	pop	{r4, r5, r6, pc}

080117ce <_ZN8touchgfx6muldivElll>:
 80117ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80117d0:	4606      	mov	r6, r0
 80117d2:	ab01      	add	r3, sp, #4
 80117d4:	460d      	mov	r5, r1
 80117d6:	4614      	mov	r4, r2
 80117d8:	f7ff ffda 	bl	8011790 <_ZN8touchgfx6muldivElllRl>
 80117dc:	2e00      	cmp	r6, #0
 80117de:	db20      	blt.n	8011822 <_ZN8touchgfx6muldivElll+0x54>
 80117e0:	bf14      	ite	ne
 80117e2:	2301      	movne	r3, #1
 80117e4:	2300      	moveq	r3, #0
 80117e6:	2d00      	cmp	r5, #0
 80117e8:	db1e      	blt.n	8011828 <_ZN8touchgfx6muldivElll+0x5a>
 80117ea:	bf14      	ite	ne
 80117ec:	2201      	movne	r2, #1
 80117ee:	2200      	moveq	r2, #0
 80117f0:	2c00      	cmp	r4, #0
 80117f2:	fb03 f202 	mul.w	r2, r3, r2
 80117f6:	db1a      	blt.n	801182e <_ZN8touchgfx6muldivElll+0x60>
 80117f8:	bf14      	ite	ne
 80117fa:	2301      	movne	r3, #1
 80117fc:	2300      	moveq	r3, #0
 80117fe:	4353      	muls	r3, r2
 8011800:	2b01      	cmp	r3, #1
 8011802:	d117      	bne.n	8011834 <_ZN8touchgfx6muldivElll+0x66>
 8011804:	2c00      	cmp	r4, #0
 8011806:	9b01      	ldr	r3, [sp, #4]
 8011808:	bfb8      	it	lt
 801180a:	4264      	neglt	r4, r4
 801180c:	2b00      	cmp	r3, #0
 801180e:	f104 0401 	add.w	r4, r4, #1
 8011812:	bfb8      	it	lt
 8011814:	425b      	neglt	r3, r3
 8011816:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801181a:	db00      	blt.n	801181e <_ZN8touchgfx6muldivElll+0x50>
 801181c:	3001      	adds	r0, #1
 801181e:	b002      	add	sp, #8
 8011820:	bd70      	pop	{r4, r5, r6, pc}
 8011822:	f04f 33ff 	mov.w	r3, #4294967295
 8011826:	e7de      	b.n	80117e6 <_ZN8touchgfx6muldivElll+0x18>
 8011828:	f04f 32ff 	mov.w	r2, #4294967295
 801182c:	e7e0      	b.n	80117f0 <_ZN8touchgfx6muldivElll+0x22>
 801182e:	f04f 33ff 	mov.w	r3, #4294967295
 8011832:	e7e4      	b.n	80117fe <_ZN8touchgfx6muldivElll+0x30>
 8011834:	3301      	adds	r3, #1
 8011836:	d1f2      	bne.n	801181e <_ZN8touchgfx6muldivElll+0x50>
 8011838:	9b01      	ldr	r3, [sp, #4]
 801183a:	2c00      	cmp	r4, #0
 801183c:	bfb8      	it	lt
 801183e:	4264      	neglt	r4, r4
 8011840:	2b00      	cmp	r3, #0
 8011842:	bfb8      	it	lt
 8011844:	425b      	neglt	r3, r3
 8011846:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801184a:	bfc8      	it	gt
 801184c:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8011850:	e7e5      	b.n	801181e <_ZN8touchgfx6muldivElll+0x50>

08011852 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011852:	2000      	movs	r0, #0
 8011854:	4770      	bx	lr

08011856 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011856:	2001      	movs	r0, #1
 8011858:	4770      	bx	lr

0801185a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801185a:	2002      	movs	r0, #2
 801185c:	4770      	bx	lr

0801185e <_ZN8touchgfx6ScreenD1Ev>:
 801185e:	4770      	bx	lr

08011860 <_ZN8touchgfx12GestureEventD1Ev>:
 8011860:	4770      	bx	lr

08011862 <_ZN8touchgfx9DragEventD1Ev>:
 8011862:	4770      	bx	lr

08011864 <_ZN8touchgfx10ClickEventD1Ev>:
 8011864:	4770      	bx	lr

08011866 <_ZN8touchgfx10ClickEventD0Ev>:
 8011866:	b510      	push	{r4, lr}
 8011868:	4604      	mov	r4, r0
 801186a:	210c      	movs	r1, #12
 801186c:	f00f fa95 	bl	8020d9a <_ZdlPvj>
 8011870:	4620      	mov	r0, r4
 8011872:	bd10      	pop	{r4, pc}

08011874 <_ZN8touchgfx9DragEventD0Ev>:
 8011874:	b510      	push	{r4, lr}
 8011876:	4604      	mov	r4, r0
 8011878:	2110      	movs	r1, #16
 801187a:	f00f fa8e 	bl	8020d9a <_ZdlPvj>
 801187e:	4620      	mov	r0, r4
 8011880:	bd10      	pop	{r4, pc}

08011882 <_ZN8touchgfx12GestureEventD0Ev>:
 8011882:	b510      	push	{r4, lr}
 8011884:	4604      	mov	r4, r0
 8011886:	210c      	movs	r1, #12
 8011888:	f00f fa87 	bl	8020d9a <_ZdlPvj>
 801188c:	4620      	mov	r0, r4
 801188e:	bd10      	pop	{r4, pc}

08011890 <_ZN8touchgfx6ScreenD0Ev>:
 8011890:	b510      	push	{r4, lr}
 8011892:	4604      	mov	r4, r0
 8011894:	213c      	movs	r1, #60	; 0x3c
 8011896:	f00f fa80 	bl	8020d9a <_ZdlPvj>
 801189a:	4620      	mov	r0, r4
 801189c:	bd10      	pop	{r4, pc}
	...

080118a0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80118a0:	b530      	push	{r4, r5, lr}
 80118a2:	460d      	mov	r5, r1
 80118a4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80118a6:	b087      	sub	sp, #28
 80118a8:	4604      	mov	r4, r0
 80118aa:	b301      	cbz	r1, 80118ee <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80118ac:	a801      	add	r0, sp, #4
 80118ae:	f7ff fe3d 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118b2:	892a      	ldrh	r2, [r5, #8]
 80118b4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80118b8:	7928      	ldrb	r0, [r5, #4]
 80118ba:	1ad2      	subs	r2, r2, r3
 80118bc:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80118be:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80118c2:	441a      	add	r2, r3
 80118c4:	896b      	ldrh	r3, [r5, #10]
 80118c6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80118ca:	f88d 0010 	strb.w	r0, [sp, #16]
 80118ce:	1b5b      	subs	r3, r3, r5
 80118d0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80118d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80118d4:	442b      	add	r3, r5
 80118d6:	4d07      	ldr	r5, [pc, #28]	; (80118f4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80118d8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80118dc:	a903      	add	r1, sp, #12
 80118de:	9503      	str	r5, [sp, #12]
 80118e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80118e4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80118e8:	6803      	ldr	r3, [r0, #0]
 80118ea:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80118ec:	4798      	blx	r3
 80118ee:	b007      	add	sp, #28
 80118f0:	bd30      	pop	{r4, r5, pc}
 80118f2:	bf00      	nop
 80118f4:	080239b0 	.word	0x080239b0

080118f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80118f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118fc:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80118fe:	b08a      	sub	sp, #40	; 0x28
 8011900:	4604      	mov	r4, r0
 8011902:	460d      	mov	r5, r1
 8011904:	b113      	cbz	r3, 801190c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011906:	790b      	ldrb	r3, [r1, #4]
 8011908:	2b00      	cmp	r3, #0
 801190a:	d044      	beq.n	8011996 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801190c:	f104 0804 	add.w	r8, r4, #4
 8011910:	a803      	add	r0, sp, #12
 8011912:	4641      	mov	r1, r8
 8011914:	f7ff fe0a 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011918:	792b      	ldrb	r3, [r5, #4]
 801191a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801191e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011922:	b983      	cbnz	r3, 8011946 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011924:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8011928:	892a      	ldrh	r2, [r5, #8]
 801192a:	88e9      	ldrh	r1, [r5, #6]
 801192c:	4640      	mov	r0, r8
 801192e:	1b92      	subs	r2, r2, r6
 8011930:	9301      	str	r3, [sp, #4]
 8011932:	1bc9      	subs	r1, r1, r7
 8011934:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8011938:	b212      	sxth	r2, r2
 801193a:	9300      	str	r3, [sp, #0]
 801193c:	b209      	sxth	r1, r1
 801193e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8011942:	f7f8 ffc9 	bl	800a8d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011946:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011948:	b329      	cbz	r1, 8011996 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801194a:	a805      	add	r0, sp, #20
 801194c:	f7ff fdee 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011950:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011954:	792b      	ldrb	r3, [r5, #4]
 8011956:	a907      	add	r1, sp, #28
 8011958:	1abf      	subs	r7, r7, r2
 801195a:	88ea      	ldrh	r2, [r5, #6]
 801195c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801195e:	4417      	add	r7, r2
 8011960:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8011962:	f88d 3020 	strb.w	r3, [sp, #32]
 8011966:	4417      	add	r7, r2
 8011968:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801196c:	1ab6      	subs	r6, r6, r2
 801196e:	892a      	ldrh	r2, [r5, #8]
 8011970:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8011974:	4416      	add	r6, r2
 8011976:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011978:	4416      	add	r6, r2
 801197a:	4a08      	ldr	r2, [pc, #32]	; (801199c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801197c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8011980:	2600      	movs	r6, #0
 8011982:	9207      	str	r2, [sp, #28]
 8011984:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8011988:	6803      	ldr	r3, [r0, #0]
 801198a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801198c:	4798      	blx	r3
 801198e:	792b      	ldrb	r3, [r5, #4]
 8011990:	b10b      	cbz	r3, 8011996 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011992:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011996:	b00a      	add	sp, #40	; 0x28
 8011998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801199c:	08023988 	.word	0x08023988

080119a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80119a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119a4:	460c      	mov	r4, r1
 80119a6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80119a8:	b088      	sub	sp, #32
 80119aa:	4605      	mov	r5, r0
 80119ac:	2900      	cmp	r1, #0
 80119ae:	d06d      	beq.n	8011a8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80119b0:	4668      	mov	r0, sp
 80119b2:	f7ff fdbb 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80119b6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80119b8:	88e3      	ldrh	r3, [r4, #6]
 80119ba:	f9bd 8000 	ldrsh.w	r8, [sp]
 80119be:	440b      	add	r3, r1
 80119c0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80119c4:	b21b      	sxth	r3, r3
 80119c6:	4543      	cmp	r3, r8
 80119c8:	db31      	blt.n	8011a2e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80119ca:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80119ce:	44c4      	add	ip, r8
 80119d0:	fa0f fc8c 	sxth.w	ip, ip
 80119d4:	4563      	cmp	r3, ip
 80119d6:	da2a      	bge.n	8011a2e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80119d8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80119da:	8926      	ldrh	r6, [r4, #8]
 80119dc:	4416      	add	r6, r2
 80119de:	b236      	sxth	r6, r6
 80119e0:	42be      	cmp	r6, r7
 80119e2:	db24      	blt.n	8011a2e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80119e4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80119e8:	4438      	add	r0, r7
 80119ea:	b200      	sxth	r0, r0
 80119ec:	4286      	cmp	r6, r0
 80119ee:	da1e      	bge.n	8011a2e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80119f0:	8963      	ldrh	r3, [r4, #10]
 80119f2:	4419      	add	r1, r3
 80119f4:	b209      	sxth	r1, r1
 80119f6:	4541      	cmp	r1, r8
 80119f8:	db08      	blt.n	8011a0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80119fa:	4561      	cmp	r1, ip
 80119fc:	da06      	bge.n	8011a0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80119fe:	89a3      	ldrh	r3, [r4, #12]
 8011a00:	441a      	add	r2, r3
 8011a02:	b212      	sxth	r2, r2
 8011a04:	42ba      	cmp	r2, r7
 8011a06:	db01      	blt.n	8011a0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011a08:	4282      	cmp	r2, r0
 8011a0a:	db10      	blt.n	8011a2e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011a0c:	4b21      	ldr	r3, [pc, #132]	; (8011a94 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011a0e:	a904      	add	r1, sp, #16
 8011a10:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011a12:	9304      	str	r3, [sp, #16]
 8011a14:	2302      	movs	r3, #2
 8011a16:	f88d 3014 	strb.w	r3, [sp, #20]
 8011a1a:	2300      	movs	r3, #0
 8011a1c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a20:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a24:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011a28:	6803      	ldr	r3, [r0, #0]
 8011a2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011a2c:	4798      	blx	r3
 8011a2e:	1d29      	adds	r1, r5, #4
 8011a30:	a802      	add	r0, sp, #8
 8011a32:	f7ff fd7b 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a36:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011a3a:	88e0      	ldrh	r0, [r4, #6]
 8011a3c:	eba3 0808 	sub.w	r8, r3, r8
 8011a40:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011a44:	7921      	ldrb	r1, [r4, #4]
 8011a46:	fa1f f888 	uxth.w	r8, r8
 8011a4a:	1bdf      	subs	r7, r3, r7
 8011a4c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8011a50:	b2bb      	uxth	r3, r7
 8011a52:	4440      	add	r0, r8
 8011a54:	8922      	ldrh	r2, [r4, #8]
 8011a56:	8967      	ldrh	r7, [r4, #10]
 8011a58:	4460      	add	r0, ip
 8011a5a:	89a4      	ldrh	r4, [r4, #12]
 8011a5c:	441a      	add	r2, r3
 8011a5e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8011a60:	44b8      	add	r8, r7
 8011a62:	4423      	add	r3, r4
 8011a64:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011a68:	4432      	add	r2, r6
 8011a6a:	44e0      	add	r8, ip
 8011a6c:	4433      	add	r3, r6
 8011a6e:	4c0a      	ldr	r4, [pc, #40]	; (8011a98 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011a70:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011a72:	f88d 1014 	strb.w	r1, [sp, #20]
 8011a76:	a904      	add	r1, sp, #16
 8011a78:	9404      	str	r4, [sp, #16]
 8011a7a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011a7e:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011a82:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011a86:	6803      	ldr	r3, [r0, #0]
 8011a88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011a8a:	4798      	blx	r3
 8011a8c:	b008      	add	sp, #32
 8011a8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a92:	bf00      	nop
 8011a94:	08023988 	.word	0x08023988
 8011a98:	0802399c 	.word	0x0802399c

08011a9c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011a9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011a9e:	4604      	mov	r4, r0
 8011aa0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011aa4:	3201      	adds	r2, #1
 8011aa6:	d112      	bne.n	8011ace <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011aa8:	2500      	movs	r5, #0
 8011aaa:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011aae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011ab2:	6803      	ldr	r3, [r0, #0]
 8011ab4:	9500      	str	r5, [sp, #0]
 8011ab6:	466d      	mov	r5, sp
 8011ab8:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011abc:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011ac0:	4629      	mov	r1, r5
 8011ac2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011ac4:	4798      	blx	r3
 8011ac6:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011aca:	e884 0003 	stmia.w	r4, {r0, r1}
 8011ace:	4620      	mov	r0, r4
 8011ad0:	b003      	add	sp, #12
 8011ad2:	bd30      	pop	{r4, r5, pc}

08011ad4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011ad4:	b513      	push	{r0, r1, r4, lr}
 8011ad6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011ada:	4604      	mov	r4, r0
 8011adc:	3301      	adds	r3, #1
 8011ade:	d109      	bne.n	8011af4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011ae0:	4601      	mov	r1, r0
 8011ae2:	4668      	mov	r0, sp
 8011ae4:	f7ff fd22 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ae8:	f8bd 3000 	ldrh.w	r3, [sp]
 8011aec:	8423      	strh	r3, [r4, #32]
 8011aee:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011af2:	8463      	strh	r3, [r4, #34]	; 0x22
 8011af4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011af8:	b002      	add	sp, #8
 8011afa:	bd10      	pop	{r4, pc}

08011afc <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011afc:	b513      	push	{r0, r1, r4, lr}
 8011afe:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011b02:	4604      	mov	r4, r0
 8011b04:	3301      	adds	r3, #1
 8011b06:	d109      	bne.n	8011b1c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011b08:	4601      	mov	r1, r0
 8011b0a:	4668      	mov	r0, sp
 8011b0c:	f7ff fd0e 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b10:	f8bd 3000 	ldrh.w	r3, [sp]
 8011b14:	8423      	strh	r3, [r4, #32]
 8011b16:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011b1a:	8463      	strh	r3, [r4, #34]	; 0x22
 8011b1c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8011b20:	b002      	add	sp, #8
 8011b22:	bd10      	pop	{r4, pc}

08011b24 <_ZN8touchgfx6ScreenC1Ev>:
 8011b24:	b570      	push	{r4, r5, r6, lr}
 8011b26:	4b17      	ldr	r3, [pc, #92]	; (8011b84 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011b28:	4605      	mov	r5, r0
 8011b2a:	4a17      	ldr	r2, [pc, #92]	; (8011b88 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011b2c:	2101      	movs	r1, #1
 8011b2e:	f845 3b04 	str.w	r3, [r5], #4
 8011b32:	2300      	movs	r3, #0
 8011b34:	6042      	str	r2, [r0, #4]
 8011b36:	4604      	mov	r4, r0
 8011b38:	8103      	strh	r3, [r0, #8]
 8011b3a:	8143      	strh	r3, [r0, #10]
 8011b3c:	8183      	strh	r3, [r0, #12]
 8011b3e:	81c3      	strh	r3, [r0, #14]
 8011b40:	8203      	strh	r3, [r0, #16]
 8011b42:	8243      	strh	r3, [r0, #18]
 8011b44:	8283      	strh	r3, [r0, #20]
 8011b46:	82c3      	strh	r3, [r0, #22]
 8011b48:	6203      	str	r3, [r0, #32]
 8011b4a:	8483      	strh	r3, [r0, #36]	; 0x24
 8011b4c:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011b4e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011b52:	6343      	str	r3, [r0, #52]	; 0x34
 8011b54:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011b58:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8011b5c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011b60:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8011b64:	4b09      	ldr	r3, [pc, #36]	; (8011b8c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011b66:	4628      	mov	r0, r5
 8011b68:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011b6c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8011b6e:	4a08      	ldr	r2, [pc, #32]	; (8011b90 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011b70:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011b74:	4798      	blx	r3
 8011b76:	6863      	ldr	r3, [r4, #4]
 8011b78:	4628      	mov	r0, r5
 8011b7a:	4631      	mov	r1, r6
 8011b7c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011b7e:	4798      	blx	r3
 8011b80:	4620      	mov	r0, r4
 8011b82:	bd70      	pop	{r4, r5, r6, pc}
 8011b84:	080239c4 	.word	0x080239c4
 8011b88:	080232a8 	.word	0x080232a8
 8011b8c:	2400e41a 	.word	0x2400e41a
 8011b90:	2400e418 	.word	0x2400e418

08011b94 <_ZN8touchgfx6Screen4drawEv>:
 8011b94:	4b09      	ldr	r3, [pc, #36]	; (8011bbc <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011b96:	b507      	push	{r0, r1, r2, lr}
 8011b98:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011b9c:	2100      	movs	r1, #0
 8011b9e:	4b08      	ldr	r3, [pc, #32]	; (8011bc0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011ba0:	9100      	str	r1, [sp, #0]
 8011ba2:	4669      	mov	r1, sp
 8011ba4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011ba8:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011bac:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011bb0:	6803      	ldr	r3, [r0, #0]
 8011bb2:	689b      	ldr	r3, [r3, #8]
 8011bb4:	4798      	blx	r3
 8011bb6:	b003      	add	sp, #12
 8011bb8:	f85d fb04 	ldr.w	pc, [sp], #4
 8011bbc:	2400e418 	.word	0x2400e418
 8011bc0:	2400e41a 	.word	0x2400e41a

08011bc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bc8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011bcc:	b089      	sub	sp, #36	; 0x24
 8011bce:	4680      	mov	r8, r0
 8011bd0:	460c      	mov	r4, r1
 8011bd2:	2b00      	cmp	r3, #0
 8011bd4:	4615      	mov	r5, r2
 8011bd6:	dd0e      	ble.n	8011bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011bd8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011bdc:	2b00      	cmp	r3, #0
 8011bde:	dd0a      	ble.n	8011bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011be0:	4628      	mov	r0, r5
 8011be2:	f7ff ff5b 	bl	8011a9c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011be6:	4621      	mov	r1, r4
 8011be8:	f7fe faad 	bl	8010146 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011bec:	69eb      	ldr	r3, [r5, #28]
 8011bee:	b928      	cbnz	r0, 8011bfc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011bf0:	461d      	mov	r5, r3
 8011bf2:	2b00      	cmp	r3, #0
 8011bf4:	d1f4      	bne.n	8011be0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011bf6:	b009      	add	sp, #36	; 0x24
 8011bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bfc:	ae04      	add	r6, sp, #16
 8011bfe:	2b00      	cmp	r3, #0
 8011c00:	f000 80b5 	beq.w	8011d6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011c04:	682b      	ldr	r3, [r5, #0]
 8011c06:	4629      	mov	r1, r5
 8011c08:	a802      	add	r0, sp, #8
 8011c0a:	68db      	ldr	r3, [r3, #12]
 8011c0c:	4798      	blx	r3
 8011c0e:	4628      	mov	r0, r5
 8011c10:	f7ff ff60 	bl	8011ad4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011c14:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011c18:	4407      	add	r7, r0
 8011c1a:	4628      	mov	r0, r5
 8011c1c:	f7ff ff6e 	bl	8011afc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011c20:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011c24:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011c28:	b23f      	sxth	r7, r7
 8011c2a:	4418      	add	r0, r3
 8011c2c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011c30:	4621      	mov	r1, r4
 8011c32:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011c36:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011c3a:	4630      	mov	r0, r6
 8011c3c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011c40:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011c44:	f7f8 ff2a 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 8011c48:	4628      	mov	r0, r5
 8011c4a:	f7ff ff27 	bl	8011a9c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011c4e:	ab06      	add	r3, sp, #24
 8011c50:	4602      	mov	r2, r0
 8011c52:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011c56:	e883 0003 	stmia.w	r3, {r0, r1}
 8011c5a:	4611      	mov	r1, r2
 8011c5c:	4618      	mov	r0, r3
 8011c5e:	f7f8 ff1d 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 8011c62:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011c66:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011c6a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011c6e:	4299      	cmp	r1, r3
 8011c70:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011c74:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011c78:	d10b      	bne.n	8011c92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011c7a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011c7e:	4552      	cmp	r2, sl
 8011c80:	d107      	bne.n	8011c92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011c82:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011c86:	455a      	cmp	r2, fp
 8011c88:	d103      	bne.n	8011c92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011c8a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011c8e:	454a      	cmp	r2, r9
 8011c90:	d06d      	beq.n	8011d6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011c92:	f1bb 0f00 	cmp.w	fp, #0
 8011c96:	dd65      	ble.n	8011d64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011c98:	f1b9 0f00 	cmp.w	r9, #0
 8011c9c:	dd62      	ble.n	8011d64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011c9e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011ca2:	fa1f f08a 	uxth.w	r0, sl
 8011ca6:	4552      	cmp	r2, sl
 8011ca8:	9000      	str	r0, [sp, #0]
 8011caa:	da12      	bge.n	8011cd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011cac:	9301      	str	r3, [sp, #4]
 8011cae:	9b00      	ldr	r3, [sp, #0]
 8011cb0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011cb4:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011cb8:	1a9a      	subs	r2, r3, r2
 8011cba:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011cbe:	4631      	mov	r1, r6
 8011cc0:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011cc4:	4640      	mov	r0, r8
 8011cc6:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011cca:	69ea      	ldr	r2, [r5, #28]
 8011ccc:	f7ff ff7a 	bl	8011bc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011cd0:	9b01      	ldr	r3, [sp, #4]
 8011cd2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011cd6:	b29f      	uxth	r7, r3
 8011cd8:	429a      	cmp	r2, r3
 8011cda:	da0d      	bge.n	8011cf8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011cdc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011ce0:	1aba      	subs	r2, r7, r2
 8011ce2:	f8ad a012 	strh.w	sl, [sp, #18]
 8011ce6:	4631      	mov	r1, r6
 8011ce8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011cec:	4640      	mov	r0, r8
 8011cee:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011cf2:	69ea      	ldr	r2, [r5, #28]
 8011cf4:	f7ff ff66 	bl	8011bc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011cf8:	8822      	ldrh	r2, [r4, #0]
 8011cfa:	445f      	add	r7, fp
 8011cfc:	88a3      	ldrh	r3, [r4, #4]
 8011cfe:	b2bf      	uxth	r7, r7
 8011d00:	4413      	add	r3, r2
 8011d02:	b23a      	sxth	r2, r7
 8011d04:	b29b      	uxth	r3, r3
 8011d06:	b219      	sxth	r1, r3
 8011d08:	4291      	cmp	r1, r2
 8011d0a:	dd0d      	ble.n	8011d28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011d0c:	1bdb      	subs	r3, r3, r7
 8011d0e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011d12:	f8ad a012 	strh.w	sl, [sp, #18]
 8011d16:	4631      	mov	r1, r6
 8011d18:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011d1c:	4640      	mov	r0, r8
 8011d1e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011d22:	69ea      	ldr	r2, [r5, #28]
 8011d24:	f7ff ff4e 	bl	8011bc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011d28:	88e2      	ldrh	r2, [r4, #6]
 8011d2a:	8863      	ldrh	r3, [r4, #2]
 8011d2c:	4413      	add	r3, r2
 8011d2e:	9a00      	ldr	r2, [sp, #0]
 8011d30:	444a      	add	r2, r9
 8011d32:	b29b      	uxth	r3, r3
 8011d34:	fa1f f982 	uxth.w	r9, r2
 8011d38:	b219      	sxth	r1, r3
 8011d3a:	fa0f f289 	sxth.w	r2, r9
 8011d3e:	428a      	cmp	r2, r1
 8011d40:	da15      	bge.n	8011d6e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011d42:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011d46:	eba3 0309 	sub.w	r3, r3, r9
 8011d4a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011d4e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011d52:	4631      	mov	r1, r6
 8011d54:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011d58:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011d5c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011d60:	69ea      	ldr	r2, [r5, #28]
 8011d62:	e001      	b.n	8011d68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011d64:	69ea      	ldr	r2, [r5, #28]
 8011d66:	4621      	mov	r1, r4
 8011d68:	4640      	mov	r0, r8
 8011d6a:	f7ff ff2b 	bl	8011bc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011d6e:	4628      	mov	r0, r5
 8011d70:	f7ff fe94 	bl	8011a9c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011d74:	6861      	ldr	r1, [r4, #4]
 8011d76:	4602      	mov	r2, r0
 8011d78:	4633      	mov	r3, r6
 8011d7a:	6820      	ldr	r0, [r4, #0]
 8011d7c:	c303      	stmia	r3!, {r0, r1}
 8011d7e:	4611      	mov	r1, r2
 8011d80:	4630      	mov	r0, r6
 8011d82:	f7f8 fe8b 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 8011d86:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011d8a:	2b00      	cmp	r3, #0
 8011d8c:	f77f af33 	ble.w	8011bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011d90:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011d94:	2b00      	cmp	r3, #0
 8011d96:	f77f af2e 	ble.w	8011bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011d9a:	4628      	mov	r0, r5
 8011d9c:	f7ff fe9a 	bl	8011ad4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011da0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011da4:	1a18      	subs	r0, r3, r0
 8011da6:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011daa:	4628      	mov	r0, r5
 8011dac:	f7ff fea6 	bl	8011afc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011db0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011db4:	4631      	mov	r1, r6
 8011db6:	1a18      	subs	r0, r3, r0
 8011db8:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011dbc:	4628      	mov	r0, r5
 8011dbe:	682b      	ldr	r3, [r5, #0]
 8011dc0:	689b      	ldr	r3, [r3, #8]
 8011dc2:	4798      	blx	r3
 8011dc4:	e717      	b.n	8011bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011dc6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011dc6:	b570      	push	{r4, r5, r6, lr}
 8011dc8:	1d06      	adds	r6, r0, #4
 8011dca:	b086      	sub	sp, #24
 8011dcc:	460c      	mov	r4, r1
 8011dce:	2300      	movs	r3, #0
 8011dd0:	4631      	mov	r1, r6
 8011dd2:	4605      	mov	r5, r0
 8011dd4:	a802      	add	r0, sp, #8
 8011dd6:	9301      	str	r3, [sp, #4]
 8011dd8:	f7ff fba8 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ddc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011de0:	8822      	ldrh	r2, [r4, #0]
 8011de2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011de6:	1ad2      	subs	r2, r2, r3
 8011de8:	8863      	ldrh	r3, [r4, #2]
 8011dea:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011dee:	1a5b      	subs	r3, r3, r1
 8011df0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011df4:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011df8:	aa01      	add	r2, sp, #4
 8011dfa:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011dfe:	4630      	mov	r0, r6
 8011e00:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011e04:	a904      	add	r1, sp, #16
 8011e06:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011e0a:	f7f8 ff1f 	bl	800ac4c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011e0e:	9a01      	ldr	r2, [sp, #4]
 8011e10:	b11a      	cbz	r2, 8011e1a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011e12:	4621      	mov	r1, r4
 8011e14:	4628      	mov	r0, r5
 8011e16:	f7ff fed5 	bl	8011bc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011e1a:	b006      	add	sp, #24
 8011e1c:	bd70      	pop	{r4, r5, r6, pc}

08011e1e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011e1e:	4602      	mov	r2, r0
 8011e20:	b530      	push	{r4, r5, lr}
 8011e22:	4604      	mov	r4, r0
 8011e24:	b085      	sub	sp, #20
 8011e26:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011e2a:	460d      	mov	r5, r1
 8011e2c:	466b      	mov	r3, sp
 8011e2e:	6851      	ldr	r1, [r2, #4]
 8011e30:	c303      	stmia	r3!, {r0, r1}
 8011e32:	4629      	mov	r1, r5
 8011e34:	4668      	mov	r0, sp
 8011e36:	f7f8 fe31 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 8011e3a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011e3e:	b12b      	cbz	r3, 8011e4c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011e40:	4669      	mov	r1, sp
 8011e42:	4620      	mov	r0, r4
 8011e44:	f7ff ffbf 	bl	8011dc6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011e48:	b005      	add	sp, #20
 8011e4a:	bd30      	pop	{r4, r5, pc}
 8011e4c:	3404      	adds	r4, #4
 8011e4e:	a802      	add	r0, sp, #8
 8011e50:	4621      	mov	r1, r4
 8011e52:	f7ff fb6b 	bl	801152c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e56:	f8bd 3000 	ldrh.w	r3, [sp]
 8011e5a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011e5e:	4669      	mov	r1, sp
 8011e60:	4620      	mov	r0, r4
 8011e62:	1a9b      	subs	r3, r3, r2
 8011e64:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011e68:	f8ad 3000 	strh.w	r3, [sp]
 8011e6c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011e70:	1a9b      	subs	r3, r3, r2
 8011e72:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011e76:	f7f8 feb0 	bl	800abda <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011e7a:	e7e5      	b.n	8011e48 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011e7c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011e7c:	460b      	mov	r3, r1
 8011e7e:	680a      	ldr	r2, [r1, #0]
 8011e80:	1d01      	adds	r1, r0, #4
 8011e82:	6992      	ldr	r2, [r2, #24]
 8011e84:	4618      	mov	r0, r3
 8011e86:	4710      	bx	r2

08011e88 <_ZN8touchgfx12TextProviderC1Ev>:
 8011e88:	b538      	push	{r3, r4, r5, lr}
 8011e8a:	2500      	movs	r5, #0
 8011e8c:	2302      	movs	r3, #2
 8011e8e:	4604      	mov	r4, r0
 8011e90:	220e      	movs	r2, #14
 8011e92:	7403      	strb	r3, [r0, #16]
 8011e94:	4629      	mov	r1, r5
 8011e96:	6145      	str	r5, [r0, #20]
 8011e98:	7605      	strb	r5, [r0, #24]
 8011e9a:	83c5      	strh	r5, [r0, #30]
 8011e9c:	8405      	strh	r5, [r0, #32]
 8011e9e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8011ea0:	8705      	strh	r5, [r0, #56]	; 0x38
 8011ea2:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8011ea4:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8011ea8:	e9c0 5500 	strd	r5, r5, [r0]
 8011eac:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8011eb0:	304c      	adds	r0, #76	; 0x4c
 8011eb2:	f00f f9a6 	bl	8021202 <memset>
 8011eb6:	2301      	movs	r3, #1
 8011eb8:	4620      	mov	r0, r4
 8011eba:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8011ebe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011ec2:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8011ec6:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8011eca:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8011ece:	f7f1 fb23 	bl	8003518 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011ed2:	4620      	mov	r0, r4
 8011ed4:	bd38      	pop	{r3, r4, r5, pc}

08011ed6 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8011ed6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011ed8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011edc:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8011ede:	fab0 f080 	clz	r0, r0
 8011ee2:	0940      	lsrs	r0, r0, #5
 8011ee4:	4770      	bx	lr

08011ee6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011ee6:	b530      	push	{r4, r5, lr}
 8011ee8:	2500      	movs	r5, #0
 8011eea:	2401      	movs	r4, #1
 8011eec:	6843      	ldr	r3, [r0, #4]
 8011eee:	b913      	cbnz	r3, 8011ef6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011ef0:	6803      	ldr	r3, [r0, #0]
 8011ef2:	b313      	cbz	r3, 8011f3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011ef4:	6043      	str	r3, [r0, #4]
 8011ef6:	7e03      	ldrb	r3, [r0, #24]
 8011ef8:	b143      	cbz	r3, 8011f0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011efa:	6943      	ldr	r3, [r0, #20]
 8011efc:	b12b      	cbz	r3, 8011f0a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011efe:	881a      	ldrh	r2, [r3, #0]
 8011f00:	b11a      	cbz	r2, 8011f0a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011f02:	1c9a      	adds	r2, r3, #2
 8011f04:	6142      	str	r2, [r0, #20]
 8011f06:	8818      	ldrh	r0, [r3, #0]
 8011f08:	bd30      	pop	{r4, r5, pc}
 8011f0a:	7605      	strb	r5, [r0, #24]
 8011f0c:	6843      	ldr	r3, [r0, #4]
 8011f0e:	8819      	ldrh	r1, [r3, #0]
 8011f10:	b199      	cbz	r1, 8011f3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011f12:	1c9a      	adds	r2, r3, #2
 8011f14:	2902      	cmp	r1, #2
 8011f16:	6042      	str	r2, [r0, #4]
 8011f18:	d1f5      	bne.n	8011f06 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011f1a:	7c03      	ldrb	r3, [r0, #16]
 8011f1c:	2b01      	cmp	r3, #1
 8011f1e:	d8e5      	bhi.n	8011eec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011f20:	1c5a      	adds	r2, r3, #1
 8011f22:	3302      	adds	r3, #2
 8011f24:	7402      	strb	r2, [r0, #16]
 8011f26:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011f2a:	6143      	str	r3, [r0, #20]
 8011f2c:	2b00      	cmp	r3, #0
 8011f2e:	d0dd      	beq.n	8011eec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011f30:	881b      	ldrh	r3, [r3, #0]
 8011f32:	2b00      	cmp	r3, #0
 8011f34:	d0da      	beq.n	8011eec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011f36:	7604      	strb	r4, [r0, #24]
 8011f38:	e7d8      	b.n	8011eec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011f3a:	2000      	movs	r0, #0
 8011f3c:	e7e4      	b.n	8011f08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011f3e:	6001      	str	r1, [r0, #0]
 8011f40:	2100      	movs	r1, #0
 8011f42:	b430      	push	{r4, r5}
 8011f44:	6041      	str	r1, [r0, #4]
 8011f46:	6815      	ldr	r5, [r2, #0]
 8011f48:	6085      	str	r5, [r0, #8]
 8011f4a:	6852      	ldr	r2, [r2, #4]
 8011f4c:	6443      	str	r3, [r0, #68]	; 0x44
 8011f4e:	9b02      	ldr	r3, [sp, #8]
 8011f50:	60c2      	str	r2, [r0, #12]
 8011f52:	7401      	strb	r1, [r0, #16]
 8011f54:	6141      	str	r1, [r0, #20]
 8011f56:	7601      	strb	r1, [r0, #24]
 8011f58:	8701      	strh	r1, [r0, #56]	; 0x38
 8011f5a:	8401      	strh	r1, [r0, #32]
 8011f5c:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8011f60:	6483      	str	r3, [r0, #72]	; 0x48
 8011f62:	bc30      	pop	{r4, r5}
 8011f64:	f7f1 bad8 	b.w	8003518 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011f68 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8011f68:	b408      	push	{r3}
 8011f6a:	b510      	push	{r4, lr}
 8011f6c:	b085      	sub	sp, #20
 8011f6e:	ac07      	add	r4, sp, #28
 8011f70:	f854 3b04 	ldr.w	r3, [r4], #4
 8011f74:	9300      	str	r3, [sp, #0]
 8011f76:	4613      	mov	r3, r2
 8011f78:	4622      	mov	r2, r4
 8011f7a:	9403      	str	r4, [sp, #12]
 8011f7c:	f7ff ffdf 	bl	8011f3e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f80:	b005      	add	sp, #20
 8011f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f86:	b001      	add	sp, #4
 8011f88:	4770      	bx	lr

08011f8a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011f8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f8c:	4605      	mov	r5, r0
 8011f8e:	4608      	mov	r0, r1
 8011f90:	b1f1      	cbz	r1, 8011fd0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8011f92:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8011f96:	460b      	mov	r3, r1
 8011f98:	f101 0708 	add.w	r7, r1, #8
 8011f9c:	4622      	mov	r2, r4
 8011f9e:	6818      	ldr	r0, [r3, #0]
 8011fa0:	3308      	adds	r3, #8
 8011fa2:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8011fa6:	4626      	mov	r6, r4
 8011fa8:	42bb      	cmp	r3, r7
 8011faa:	c603      	stmia	r6!, {r0, r1}
 8011fac:	4634      	mov	r4, r6
 8011fae:	d1f6      	bne.n	8011f9e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011fb0:	6818      	ldr	r0, [r3, #0]
 8011fb2:	6030      	str	r0, [r6, #0]
 8011fb4:	4610      	mov	r0, r2
 8011fb6:	889b      	ldrh	r3, [r3, #4]
 8011fb8:	80b3      	strh	r3, [r6, #4]
 8011fba:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8011fbe:	015b      	lsls	r3, r3, #5
 8011fc0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011fc4:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8011fc8:	430b      	orrs	r3, r1
 8011fca:	425b      	negs	r3, r3
 8011fcc:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8011fd0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011fd2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011fd2:	b538      	push	{r3, r4, r5, lr}
 8011fd4:	460c      	mov	r4, r1
 8011fd6:	6811      	ldr	r1, [r2, #0]
 8011fd8:	4610      	mov	r0, r2
 8011fda:	68cd      	ldr	r5, [r1, #12]
 8011fdc:	4619      	mov	r1, r3
 8011fde:	47a8      	blx	r5
 8011fe0:	2800      	cmp	r0, #0
 8011fe2:	bf08      	it	eq
 8011fe4:	4620      	moveq	r0, r4
 8011fe6:	bd38      	pop	{r3, r4, r5, pc}

08011fe8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011fe8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011fea:	4604      	mov	r4, r0
 8011fec:	4615      	mov	r5, r2
 8011fee:	4608      	mov	r0, r1
 8011ff0:	b93a      	cbnz	r2, 8012002 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8011ff2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8011ff6:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8011ffa:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8011ffe:	4628      	mov	r0, r5
 8012000:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012002:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012006:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801200a:	8893      	ldrh	r3, [r2, #4]
 801200c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012010:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012014:	79ee      	ldrb	r6, [r5, #7]
 8012016:	4316      	orrs	r6, r2
 8012018:	19da      	adds	r2, r3, r7
 801201a:	b291      	uxth	r1, r2
 801201c:	b2b7      	uxth	r7, r6
 801201e:	291d      	cmp	r1, #29
 8012020:	d87b      	bhi.n	801211a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8012022:	2201      	movs	r2, #1
 8012024:	10f6      	asrs	r6, r6, #3
 8012026:	408a      	lsls	r2, r1
 8012028:	4974      	ldr	r1, [pc, #464]	; (80121fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801202a:	420a      	tst	r2, r1
 801202c:	d12e      	bne.n	801208c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801202e:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012032:	d072      	beq.n	801211a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8012034:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012038:	462b      	mov	r3, r5
 801203a:	f105 0e08 	add.w	lr, r5, #8
 801203e:	4615      	mov	r5, r2
 8012040:	6818      	ldr	r0, [r3, #0]
 8012042:	3308      	adds	r3, #8
 8012044:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8012048:	4694      	mov	ip, r2
 801204a:	4573      	cmp	r3, lr
 801204c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012050:	4662      	mov	r2, ip
 8012052:	d1f5      	bne.n	8012040 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8012054:	6818      	ldr	r0, [r3, #0]
 8012056:	f8cc 0000 	str.w	r0, [ip]
 801205a:	889b      	ldrh	r3, [r3, #4]
 801205c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012060:	b2b3      	uxth	r3, r6
 8012062:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012066:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801206a:	1aca      	subs	r2, r1, r3
 801206c:	1bcf      	subs	r7, r1, r7
 801206e:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012072:	b292      	uxth	r2, r2
 8012074:	1afb      	subs	r3, r7, r3
 8012076:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801207a:	10d2      	asrs	r2, r2, #3
 801207c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012080:	4302      	orrs	r2, r0
 8012082:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012086:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801208a:	e7b8      	b.n	8011ffe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801208c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801208e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012092:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012094:	f640 6333 	movw	r3, #3635	; 0xe33
 8012098:	4299      	cmp	r1, r3
 801209a:	d110      	bne.n	80120be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801209c:	6803      	ldr	r3, [r0, #0]
 801209e:	68db      	ldr	r3, [r3, #12]
 80120a0:	4798      	blx	r3
 80120a2:	7b41      	ldrb	r1, [r0, #13]
 80120a4:	00cb      	lsls	r3, r1, #3
 80120a6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80120aa:	7a03      	ldrb	r3, [r0, #8]
 80120ac:	0648      	lsls	r0, r1, #25
 80120ae:	ea43 0302 	orr.w	r3, r3, r2
 80120b2:	bf44      	itt	mi
 80120b4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80120b8:	b21b      	sxthmi	r3, r3
 80120ba:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80120be:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80120c2:	462a      	mov	r2, r5
 80120c4:	f105 0c08 	add.w	ip, r5, #8
 80120c8:	443b      	add	r3, r7
 80120ca:	4433      	add	r3, r6
 80120cc:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80120d0:	b29b      	uxth	r3, r3
 80120d2:	4635      	mov	r5, r6
 80120d4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80120d8:	6810      	ldr	r0, [r2, #0]
 80120da:	3208      	adds	r2, #8
 80120dc:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80120e0:	4637      	mov	r7, r6
 80120e2:	4562      	cmp	r2, ip
 80120e4:	c703      	stmia	r7!, {r0, r1}
 80120e6:	463e      	mov	r6, r7
 80120e8:	d1f6      	bne.n	80120d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80120ea:	6810      	ldr	r0, [r2, #0]
 80120ec:	6038      	str	r0, [r7, #0]
 80120ee:	8892      	ldrh	r2, [r2, #4]
 80120f0:	80ba      	strh	r2, [r7, #4]
 80120f2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80120f6:	10db      	asrs	r3, r3, #3
 80120f8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80120fc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012100:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012104:	4313      	orrs	r3, r2
 8012106:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801210a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801210e:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012112:	1a9b      	subs	r3, r3, r2
 8012114:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012118:	e771      	b.n	8011ffe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801211a:	f023 0204 	bic.w	r2, r3, #4
 801211e:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012122:	428a      	cmp	r2, r1
 8012124:	d003      	beq.n	801212e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 8012126:	f640 621d 	movw	r2, #3613	; 0xe1d
 801212a:	4293      	cmp	r3, r2
 801212c:	d120      	bne.n	8012170 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 801212e:	3b01      	subs	r3, #1
 8012130:	4602      	mov	r2, r0
 8012132:	4629      	mov	r1, r5
 8012134:	4620      	mov	r0, r4
 8012136:	b29b      	uxth	r3, r3
 8012138:	f7ff ff4b 	bl	8011fd2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801213c:	7b41      	ldrb	r1, [r0, #13]
 801213e:	00cb      	lsls	r3, r1, #3
 8012140:	0649      	lsls	r1, r1, #25
 8012142:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012146:	7a03      	ldrb	r3, [r0, #8]
 8012148:	ea43 0302 	orr.w	r3, r3, r2
 801214c:	bf44      	itt	mi
 801214e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012152:	b21b      	sxthmi	r3, r3
 8012154:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012158:	7b6b      	ldrb	r3, [r5, #13]
 801215a:	7aaa      	ldrb	r2, [r5, #10]
 801215c:	005b      	lsls	r3, r3, #1
 801215e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012162:	4313      	orrs	r3, r2
 8012164:	115a      	asrs	r2, r3, #5
 8012166:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801216a:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801216e:	e035      	b.n	80121dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012170:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012174:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012178:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801217c:	7a2a      	ldrb	r2, [r5, #8]
 801217e:	ea42 0201 	orr.w	r2, r2, r1
 8012182:	f640 6109 	movw	r1, #3593	; 0xe09
 8012186:	bf1c      	itt	ne
 8012188:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801218c:	b212      	sxthne	r2, r2
 801218e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012192:	f023 0210 	bic.w	r2, r3, #16
 8012196:	428a      	cmp	r2, r1
 8012198:	d003      	beq.n	80121a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 801219a:	f640 6213 	movw	r2, #3603	; 0xe13
 801219e:	4293      	cmp	r3, r2
 80121a0:	d129      	bne.n	80121f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80121a2:	7b6e      	ldrb	r6, [r5, #13]
 80121a4:	4629      	mov	r1, r5
 80121a6:	0076      	lsls	r6, r6, #1
 80121a8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80121ac:	7aae      	ldrb	r6, [r5, #10]
 80121ae:	4316      	orrs	r6, r2
 80121b0:	f640 6213 	movw	r2, #3603	; 0xe13
 80121b4:	4293      	cmp	r3, r2
 80121b6:	4602      	mov	r2, r0
 80121b8:	4620      	mov	r0, r4
 80121ba:	bf16      	itet	ne
 80121bc:	f103 33ff 	addne.w	r3, r3, #4294967295
 80121c0:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80121c4:	b29b      	uxthne	r3, r3
 80121c6:	f7ff ff04 	bl	8011fd2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80121ca:	7b43      	ldrb	r3, [r0, #13]
 80121cc:	7a82      	ldrb	r2, [r0, #10]
 80121ce:	005b      	lsls	r3, r3, #1
 80121d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80121d4:	4313      	orrs	r3, r2
 80121d6:	1af6      	subs	r6, r6, r3
 80121d8:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80121dc:	7b69      	ldrb	r1, [r5, #13]
 80121de:	00cb      	lsls	r3, r1, #3
 80121e0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80121e4:	7a2b      	ldrb	r3, [r5, #8]
 80121e6:	4313      	orrs	r3, r2
 80121e8:	064a      	lsls	r2, r1, #25
 80121ea:	bf44      	itt	mi
 80121ec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80121f0:	b21b      	sxthmi	r3, r3
 80121f2:	1bdb      	subs	r3, r3, r7
 80121f4:	e747      	b.n	8012086 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80121f6:	2300      	movs	r3, #0
 80121f8:	e7b7      	b.n	801216a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 80121fa:	bf00      	nop
 80121fc:	3fc00079 	.word	0x3fc00079

08012200 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012200:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012204:	4604      	mov	r4, r0
 8012206:	b942      	cbnz	r2, 801221a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012208:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801220c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012210:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012214:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012218:	e047      	b.n	80122aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801221a:	7b51      	ldrb	r1, [r2, #13]
 801221c:	8893      	ldrh	r3, [r2, #4]
 801221e:	010d      	lsls	r5, r1, #4
 8012220:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012224:	79d5      	ldrb	r5, [r2, #7]
 8012226:	4305      	orrs	r5, r0
 8012228:	2d04      	cmp	r5, #4
 801222a:	bfcc      	ite	gt
 801222c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012230:	f04f 0e01 	movle.w	lr, #1
 8012234:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012238:	f200 80ab 	bhi.w	8012392 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801223c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012240:	4283      	cmp	r3, r0
 8012242:	d216      	bcs.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012244:	f240 605b 	movw	r0, #1627	; 0x65b
 8012248:	4283      	cmp	r3, r0
 801224a:	d859      	bhi.n	8012300 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801224c:	f240 6057 	movw	r0, #1623	; 0x657
 8012250:	4283      	cmp	r3, r0
 8012252:	d20e      	bcs.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012254:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012258:	d24a      	bcs.n	80122f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801225a:	f240 604e 	movw	r0, #1614	; 0x64e
 801225e:	4283      	cmp	r3, r0
 8012260:	d207      	bcs.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012262:	f240 601a 	movw	r0, #1562	; 0x61a
 8012266:	4283      	cmp	r3, r0
 8012268:	d02a      	beq.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801226a:	d821      	bhi.n	80122b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801226c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012270:	d35b      	bcc.n	801232a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012272:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012276:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801227a:	f040 80d0 	bne.w	801241e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801227e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012282:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012286:	f040 80ca 	bne.w	801241e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801228a:	00cb      	lsls	r3, r1, #3
 801228c:	0649      	lsls	r1, r1, #25
 801228e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012292:	7a13      	ldrb	r3, [r2, #8]
 8012294:	ea43 0300 	orr.w	r3, r3, r0
 8012298:	bf44      	itt	mi
 801229a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801229e:	b21b      	sxthmi	r3, r3
 80122a0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80122a4:	1b5d      	subs	r5, r3, r5
 80122a6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80122aa:	4610      	mov	r0, r2
 80122ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80122b0:	f240 604b 	movw	r0, #1611	; 0x64b
 80122b4:	4283      	cmp	r3, r0
 80122b6:	d338      	bcc.n	801232a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80122b8:	f240 604c 	movw	r0, #1612	; 0x64c
 80122bc:	4283      	cmp	r3, r0
 80122be:	d9d8      	bls.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80122c0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80122c4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80122c8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80122cc:	f040 80f3 	bne.w	80124b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80122d0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80122d4:	f040 80ef 	bne.w	80124b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80122d8:	00cb      	lsls	r3, r1, #3
 80122da:	064e      	lsls	r6, r1, #25
 80122dc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80122e0:	7a13      	ldrb	r3, [r2, #8]
 80122e2:	ea43 0300 	orr.w	r3, r3, r0
 80122e6:	bf44      	itt	mi
 80122e8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80122ec:	b21b      	sxthmi	r3, r3
 80122ee:	e7d9      	b.n	80122a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80122f0:	f240 6054 	movw	r0, #1620	; 0x654
 80122f4:	4283      	cmp	r3, r0
 80122f6:	d8e3      	bhi.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80122f8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80122fc:	d9e0      	bls.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80122fe:	e7b8      	b.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012300:	f240 6074 	movw	r0, #1652	; 0x674
 8012304:	4283      	cmp	r3, r0
 8012306:	d0b4      	beq.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012308:	d82d      	bhi.n	8012366 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801230a:	f240 605e 	movw	r0, #1630	; 0x65e
 801230e:	4283      	cmp	r3, r0
 8012310:	d804      	bhi.n	801231c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012312:	f240 605d 	movw	r0, #1629	; 0x65d
 8012316:	4283      	cmp	r3, r0
 8012318:	d3d2      	bcc.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801231a:	e7aa      	b.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801231c:	f240 605f 	movw	r0, #1631	; 0x65f
 8012320:	4283      	cmp	r3, r0
 8012322:	d0cd      	beq.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012324:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012328:	d0a3      	beq.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801232a:	00cb      	lsls	r3, r1, #3
 801232c:	0649      	lsls	r1, r1, #25
 801232e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012332:	7a13      	ldrb	r3, [r2, #8]
 8012334:	ea43 0300 	orr.w	r3, r3, r0
 8012338:	bf44      	itt	mi
 801233a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801233e:	b21b      	sxthmi	r3, r3
 8012340:	1b5d      	subs	r5, r3, r5
 8012342:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012346:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801234a:	7b53      	ldrb	r3, [r2, #13]
 801234c:	015b      	lsls	r3, r3, #5
 801234e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012352:	7993      	ldrb	r3, [r2, #6]
 8012354:	430b      	orrs	r3, r1
 8012356:	2105      	movs	r1, #5
 8012358:	005b      	lsls	r3, r3, #1
 801235a:	fb93 f3f1 	sdiv	r3, r3, r1
 801235e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012362:	440b      	add	r3, r1
 8012364:	e756      	b.n	8012214 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012366:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801236a:	4283      	cmp	r3, r0
 801236c:	d809      	bhi.n	8012382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801236e:	f240 60df 	movw	r0, #1759	; 0x6df
 8012372:	4283      	cmp	r3, r0
 8012374:	f4bf af7d 	bcs.w	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012378:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801237c:	2b05      	cmp	r3, #5
 801237e:	d8d4      	bhi.n	801232a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012380:	e777      	b.n	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012382:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012386:	4283      	cmp	r3, r0
 8012388:	d09a      	beq.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801238a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801238e:	4283      	cmp	r3, r0
 8012390:	e7ca      	b.n	8012328 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012392:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012396:	d22b      	bcs.n	80123f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012398:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801239c:	4283      	cmp	r3, r0
 801239e:	d28f      	bcs.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80123a0:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80123a4:	4283      	cmp	r3, r0
 80123a6:	d816      	bhi.n	80123d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80123a8:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80123ac:	4283      	cmp	r3, r0
 80123ae:	f4bf af60 	bcs.w	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80123b2:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80123b6:	4283      	cmp	r3, r0
 80123b8:	d80a      	bhi.n	80123d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80123ba:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80123be:	4283      	cmp	r3, r0
 80123c0:	f4bf af57 	bcs.w	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80123c4:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80123c8:	4283      	cmp	r3, r0
 80123ca:	f43f af79 	beq.w	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80123ce:	e7ac      	b.n	801232a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80123d0:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80123d4:	e7f8      	b.n	80123c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80123d6:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80123da:	4283      	cmp	r3, r0
 80123dc:	d802      	bhi.n	80123e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80123de:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80123e2:	e798      	b.n	8012316 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80123e4:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80123e8:	4283      	cmp	r3, r0
 80123ea:	f47f af42 	bne.w	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80123ee:	e767      	b.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80123f0:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80123f4:	4283      	cmp	r3, r0
 80123f6:	f43f af63 	beq.w	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80123fa:	d802      	bhi.n	8012402 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80123fc:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012400:	e7f2      	b.n	80123e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012402:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012406:	4283      	cmp	r3, r0
 8012408:	d805      	bhi.n	8012416 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801240a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801240e:	4283      	cmp	r3, r0
 8012410:	f4ff af2f 	bcc.w	8012272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012414:	e754      	b.n	80122c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012416:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801241a:	4283      	cmp	r3, r0
 801241c:	e7af      	b.n	801237e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801241e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012422:	4617      	mov	r7, r2
 8012424:	f102 0808 	add.w	r8, r2, #8
 8012428:	4666      	mov	r6, ip
 801242a:	6838      	ldr	r0, [r7, #0]
 801242c:	3708      	adds	r7, #8
 801242e:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8012432:	46e6      	mov	lr, ip
 8012434:	4547      	cmp	r7, r8
 8012436:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801243a:	46f4      	mov	ip, lr
 801243c:	d1f5      	bne.n	801242a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801243e:	6838      	ldr	r0, [r7, #0]
 8012440:	f8ce 0000 	str.w	r0, [lr]
 8012444:	88b9      	ldrh	r1, [r7, #4]
 8012446:	f8ae 1004 	strh.w	r1, [lr, #4]
 801244a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801244e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012452:	d009      	beq.n	8012468 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8012454:	7b51      	ldrb	r1, [r2, #13]
 8012456:	7992      	ldrb	r2, [r2, #6]
 8012458:	0149      	lsls	r1, r1, #5
 801245a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801245e:	4311      	orrs	r1, r2
 8012460:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012464:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012468:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801246c:	b2ad      	uxth	r5, r5
 801246e:	d00d      	beq.n	801248c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8012470:	442b      	add	r3, r5
 8012472:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012476:	b29b      	uxth	r3, r3
 8012478:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801247c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012480:	10db      	asrs	r3, r3, #3
 8012482:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012486:	4313      	orrs	r3, r2
 8012488:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801248c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012490:	00cb      	lsls	r3, r1, #3
 8012492:	064f      	lsls	r7, r1, #25
 8012494:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012498:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801249c:	ea43 0302 	orr.w	r3, r3, r2
 80124a0:	bf44      	itt	mi
 80124a2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80124a6:	b21b      	sxthmi	r3, r3
 80124a8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80124ac:	1b5b      	subs	r3, r3, r5
 80124ae:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80124b2:	4632      	mov	r2, r6
 80124b4:	e6f9      	b.n	80122aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80124b6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80124ba:	4617      	mov	r7, r2
 80124bc:	f102 0908 	add.w	r9, r2, #8
 80124c0:	4666      	mov	r6, ip
 80124c2:	6838      	ldr	r0, [r7, #0]
 80124c4:	3708      	adds	r7, #8
 80124c6:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80124ca:	46e0      	mov	r8, ip
 80124cc:	454f      	cmp	r7, r9
 80124ce:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80124d2:	46c4      	mov	ip, r8
 80124d4:	d1f5      	bne.n	80124c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 80124d6:	6838      	ldr	r0, [r7, #0]
 80124d8:	f8c8 0000 	str.w	r0, [r8]
 80124dc:	88b9      	ldrh	r1, [r7, #4]
 80124de:	f8a8 1004 	strh.w	r1, [r8, #4]
 80124e2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80124e6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80124ea:	d009      	beq.n	8012500 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 80124ec:	7b51      	ldrb	r1, [r2, #13]
 80124ee:	7992      	ldrb	r2, [r2, #6]
 80124f0:	0149      	lsls	r1, r1, #5
 80124f2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80124f6:	4311      	orrs	r1, r2
 80124f8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80124fc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012500:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012504:	d00e      	beq.n	8012524 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8012506:	eba3 030e 	sub.w	r3, r3, lr
 801250a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801250e:	b29b      	uxth	r3, r3
 8012510:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012514:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012518:	10db      	asrs	r3, r3, #3
 801251a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801251e:	4313      	orrs	r3, r2
 8012520:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012524:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012528:	00cb      	lsls	r3, r1, #3
 801252a:	0648      	lsls	r0, r1, #25
 801252c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012530:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012534:	ea43 0302 	orr.w	r3, r3, r2
 8012538:	bf44      	itt	mi
 801253a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801253e:	b21b      	sxthmi	r3, r3
 8012540:	1b5d      	subs	r5, r3, r5
 8012542:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012546:	e7b4      	b.n	80124b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08012548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801254c:	461e      	mov	r6, r3
 801254e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012550:	4604      	mov	r4, r0
 8012552:	4617      	mov	r7, r2
 8012554:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012558:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801255c:	f7f0 ff9a 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012560:	4605      	mov	r5, r0
 8012562:	b918      	cbnz	r0, 801256c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012564:	6030      	str	r0, [r6, #0]
 8012566:	4628      	mov	r0, r5
 8012568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801256c:	683b      	ldr	r3, [r7, #0]
 801256e:	4601      	mov	r1, r0
 8012570:	4638      	mov	r0, r7
 8012572:	68db      	ldr	r3, [r3, #12]
 8012574:	4798      	blx	r3
 8012576:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801257a:	4602      	mov	r2, r0
 801257c:	6030      	str	r0, [r6, #0]
 801257e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012582:	d213      	bcs.n	80125ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012584:	4643      	mov	r3, r8
 8012586:	4639      	mov	r1, r7
 8012588:	4620      	mov	r0, r4
 801258a:	f7ff fe39 	bl	8012200 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801258e:	6030      	str	r0, [r6, #0]
 8012590:	6833      	ldr	r3, [r6, #0]
 8012592:	b143      	cbz	r3, 80125a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012594:	7b5a      	ldrb	r2, [r3, #13]
 8012596:	7a9b      	ldrb	r3, [r3, #10]
 8012598:	0052      	lsls	r2, r2, #1
 801259a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801259e:	4313      	orrs	r3, r2
 80125a0:	bf0c      	ite	eq
 80125a2:	2301      	moveq	r3, #1
 80125a4:	2300      	movne	r3, #0
 80125a6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80125aa:	e7dc      	b.n	8012566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80125ac:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80125b0:	b29b      	uxth	r3, r3
 80125b2:	2b7f      	cmp	r3, #127	; 0x7f
 80125b4:	d804      	bhi.n	80125c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80125b6:	4639      	mov	r1, r7
 80125b8:	4620      	mov	r0, r4
 80125ba:	f7ff fd15 	bl	8011fe8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80125be:	e7e6      	b.n	801258e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80125c0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80125c4:	2b00      	cmp	r3, #0
 80125c6:	d0e3      	beq.n	8012590 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80125c8:	f640 1302 	movw	r3, #2306	; 0x902
 80125cc:	429d      	cmp	r5, r3
 80125ce:	d1df      	bne.n	8012590 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80125d0:	4601      	mov	r1, r0
 80125d2:	4620      	mov	r0, r4
 80125d4:	f7ff fcd9 	bl	8011f8a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80125d8:	e7d9      	b.n	801258e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080125da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80125da:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80125de:	461e      	mov	r6, r3
 80125e0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80125e2:	4604      	mov	r4, r0
 80125e4:	4617      	mov	r7, r2
 80125e6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80125ea:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80125ee:	f7f0 ff51 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80125f2:	4605      	mov	r5, r0
 80125f4:	b918      	cbnz	r0, 80125fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80125f6:	6030      	str	r0, [r6, #0]
 80125f8:	4628      	mov	r0, r5
 80125fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80125fe:	683b      	ldr	r3, [r7, #0]
 8012600:	4601      	mov	r1, r0
 8012602:	4638      	mov	r0, r7
 8012604:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012608:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801260c:	47c8      	blx	r9
 801260e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012612:	4602      	mov	r2, r0
 8012614:	6030      	str	r0, [r6, #0]
 8012616:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801261a:	d213      	bcs.n	8012644 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801261c:	4643      	mov	r3, r8
 801261e:	4639      	mov	r1, r7
 8012620:	4620      	mov	r0, r4
 8012622:	f7ff fded 	bl	8012200 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012626:	6030      	str	r0, [r6, #0]
 8012628:	6833      	ldr	r3, [r6, #0]
 801262a:	b143      	cbz	r3, 801263e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801262c:	7b5a      	ldrb	r2, [r3, #13]
 801262e:	7a9b      	ldrb	r3, [r3, #10]
 8012630:	0052      	lsls	r2, r2, #1
 8012632:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012636:	4313      	orrs	r3, r2
 8012638:	bf0c      	ite	eq
 801263a:	2301      	moveq	r3, #1
 801263c:	2300      	movne	r3, #0
 801263e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012642:	e7d9      	b.n	80125f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012644:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012648:	b29b      	uxth	r3, r3
 801264a:	2b7f      	cmp	r3, #127	; 0x7f
 801264c:	d804      	bhi.n	8012658 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801264e:	4639      	mov	r1, r7
 8012650:	4620      	mov	r0, r4
 8012652:	f7ff fcc9 	bl	8011fe8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012656:	e7e6      	b.n	8012626 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012658:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801265c:	2b00      	cmp	r3, #0
 801265e:	d0e3      	beq.n	8012628 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012660:	f640 1302 	movw	r3, #2306	; 0x902
 8012664:	429d      	cmp	r5, r3
 8012666:	d1df      	bne.n	8012628 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012668:	4601      	mov	r1, r0
 801266a:	4620      	mov	r0, r4
 801266c:	f7ff fc8d 	bl	8011f8a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012670:	e7d9      	b.n	8012626 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012672 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012672:	b510      	push	{r4, lr}
 8012674:	4604      	mov	r4, r0
 8012676:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801267a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801267c:	b1e1      	cbz	r1, 80126b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801267e:	2b0a      	cmp	r3, #10
 8012680:	d02d      	beq.n	80126de <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8012682:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8012684:	3901      	subs	r1, #1
 8012686:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801268a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801268c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8012690:	1c51      	adds	r1, r2, #1
 8012692:	b289      	uxth	r1, r1
 8012694:	2901      	cmp	r1, #1
 8012696:	bf8a      	itet	hi
 8012698:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801269c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801269e:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80126a0:	1c5a      	adds	r2, r3, #1
 80126a2:	8722      	strh	r2, [r4, #56]	; 0x38
 80126a4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80126a6:	4413      	add	r3, r2
 80126a8:	b29b      	uxth	r3, r3
 80126aa:	2b09      	cmp	r3, #9
 80126ac:	bf88      	it	hi
 80126ae:	3b0a      	subhi	r3, #10
 80126b0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80126b4:	8458      	strh	r0, [r3, #34]	; 0x22
 80126b6:	e7de      	b.n	8012676 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80126b8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80126ba:	2b0a      	cmp	r3, #10
 80126bc:	d00f      	beq.n	80126de <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80126be:	4620      	mov	r0, r4
 80126c0:	f7ff fc11 	bl	8011ee6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80126c4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80126c6:	1c5a      	adds	r2, r3, #1
 80126c8:	8722      	strh	r2, [r4, #56]	; 0x38
 80126ca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80126cc:	4413      	add	r3, r2
 80126ce:	b29b      	uxth	r3, r3
 80126d0:	2b09      	cmp	r3, #9
 80126d2:	bf88      	it	hi
 80126d4:	3b0a      	subhi	r3, #10
 80126d6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80126da:	8458      	strh	r0, [r3, #34]	; 0x22
 80126dc:	e7ec      	b.n	80126b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80126de:	bd10      	pop	{r4, pc}

080126e0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80126e0:	b538      	push	{r3, r4, r5, lr}
 80126e2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80126e4:	4604      	mov	r4, r0
 80126e6:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80126ea:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80126ec:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80126ee:	3a01      	subs	r2, #1
 80126f0:	8702      	strh	r2, [r0, #56]	; 0x38
 80126f2:	1c5a      	adds	r2, r3, #1
 80126f4:	b292      	uxth	r2, r2
 80126f6:	2a09      	cmp	r2, #9
 80126f8:	bf8a      	itet	hi
 80126fa:	3b09      	subhi	r3, #9
 80126fc:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80126fe:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8012700:	f7ff ffb7 	bl	8012672 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012704:	8c23      	ldrh	r3, [r4, #32]
 8012706:	2b01      	cmp	r3, #1
 8012708:	bf9c      	itt	ls
 801270a:	3301      	addls	r3, #1
 801270c:	8423      	strhls	r3, [r4, #32]
 801270e:	8be3      	ldrh	r3, [r4, #30]
 8012710:	b90b      	cbnz	r3, 8012716 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012712:	2302      	movs	r3, #2
 8012714:	83e3      	strh	r3, [r4, #30]
 8012716:	8be3      	ldrh	r3, [r4, #30]
 8012718:	4628      	mov	r0, r5
 801271a:	3b01      	subs	r3, #1
 801271c:	b29b      	uxth	r3, r3
 801271e:	83e3      	strh	r3, [r4, #30]
 8012720:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012724:	8365      	strh	r5, [r4, #26]
 8012726:	bd38      	pop	{r3, r4, r5, pc}

08012728 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012728:	428a      	cmp	r2, r1
 801272a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801272e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8012730:	d932      	bls.n	8012798 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8012732:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8012734:	1a54      	subs	r4, r2, r1
 8012736:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801273a:	19ee      	adds	r6, r5, r7
 801273c:	fa1f fe84 	uxth.w	lr, r4
 8012740:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8012744:	3e01      	subs	r6, #1
 8012746:	b2b4      	uxth	r4, r6
 8012748:	eba4 090e 	sub.w	r9, r4, lr
 801274c:	fa1f f989 	uxth.w	r9, r9
 8012750:	2c09      	cmp	r4, #9
 8012752:	4626      	mov	r6, r4
 8012754:	bf88      	it	hi
 8012756:	f1a4 060a 	subhi.w	r6, r4, #10
 801275a:	f1bc 0f00 	cmp.w	ip, #0
 801275e:	f104 34ff 	add.w	r4, r4, #4294967295
 8012762:	bf08      	it	eq
 8012764:	f04f 0c02 	moveq.w	ip, #2
 8012768:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801276c:	b2a4      	uxth	r4, r4
 801276e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012772:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8012776:	454c      	cmp	r4, r9
 8012778:	fa1f fc8c 	uxth.w	ip, ip
 801277c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012780:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8012784:	d1e4      	bne.n	8012750 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012786:	eba5 050e 	sub.w	r5, r5, lr
 801278a:	eb0e 0408 	add.w	r4, lr, r8
 801278e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8012792:	8705      	strh	r5, [r0, #56]	; 0x38
 8012794:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8012798:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801279a:	250a      	movs	r5, #10
 801279c:	1a64      	subs	r4, r4, r1
 801279e:	4439      	add	r1, r7
 80127a0:	b289      	uxth	r1, r1
 80127a2:	8704      	strh	r4, [r0, #56]	; 0x38
 80127a4:	2909      	cmp	r1, #9
 80127a6:	bf88      	it	hi
 80127a8:	390a      	subhi	r1, #10
 80127aa:	86c1      	strh	r1, [r0, #54]	; 0x36
 80127ac:	b18a      	cbz	r2, 80127d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 80127ae:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80127b0:	3a01      	subs	r2, #1
 80127b2:	3101      	adds	r1, #1
 80127b4:	b292      	uxth	r2, r2
 80127b6:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80127ba:	8701      	strh	r1, [r0, #56]	; 0x38
 80127bc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80127be:	b901      	cbnz	r1, 80127c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80127c0:	86c5      	strh	r5, [r0, #54]	; 0x36
 80127c2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80127c4:	3901      	subs	r1, #1
 80127c6:	b289      	uxth	r1, r1
 80127c8:	86c1      	strh	r1, [r0, #54]	; 0x36
 80127ca:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80127ce:	844c      	strh	r4, [r1, #34]	; 0x22
 80127d0:	e7ec      	b.n	80127ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80127d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80127d6:	f7ff bf4c 	b.w	8012672 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080127da <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80127da:	b570      	push	{r4, r5, r6, lr}
 80127dc:	2500      	movs	r5, #0
 80127de:	4295      	cmp	r5, r2
 80127e0:	d011      	beq.n	8012806 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80127e2:	8bc4      	ldrh	r4, [r0, #30]
 80127e4:	f831 6b02 	ldrh.w	r6, [r1], #2
 80127e8:	4414      	add	r4, r2
 80127ea:	3c01      	subs	r4, #1
 80127ec:	1b64      	subs	r4, r4, r5
 80127ee:	b2a4      	uxth	r4, r4
 80127f0:	2c01      	cmp	r4, #1
 80127f2:	bf88      	it	hi
 80127f4:	3c02      	subhi	r4, #2
 80127f6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80127fa:	8b64      	ldrh	r4, [r4, #26]
 80127fc:	42b4      	cmp	r4, r6
 80127fe:	d117      	bne.n	8012830 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012800:	3501      	adds	r5, #1
 8012802:	b2ad      	uxth	r5, r5
 8012804:	e7eb      	b.n	80127de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012806:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801280a:	2400      	movs	r4, #0
 801280c:	4413      	add	r3, r2
 801280e:	b2a2      	uxth	r2, r4
 8012810:	429a      	cmp	r2, r3
 8012812:	da0f      	bge.n	8012834 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012814:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8012816:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801281a:	3401      	adds	r4, #1
 801281c:	4432      	add	r2, r6
 801281e:	b292      	uxth	r2, r2
 8012820:	2a09      	cmp	r2, #9
 8012822:	bf88      	it	hi
 8012824:	3a0a      	subhi	r2, #10
 8012826:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801282a:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801282c:	42aa      	cmp	r2, r5
 801282e:	d0ee      	beq.n	801280e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012830:	2000      	movs	r0, #0
 8012832:	bd70      	pop	{r4, r5, r6, pc}
 8012834:	2001      	movs	r0, #1
 8012836:	e7fc      	b.n	8012832 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012838 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012838:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801283c:	4605      	mov	r5, r0
 801283e:	4616      	mov	r6, r2
 8012840:	1c8c      	adds	r4, r1, #2
 8012842:	8809      	ldrh	r1, [r1, #0]
 8012844:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012848:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801284c:	42b3      	cmp	r3, r6
 801284e:	d124      	bne.n	801289a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012850:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012854:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012858:	f001 070f 	and.w	r7, r1, #15
 801285c:	4652      	mov	r2, sl
 801285e:	f8cd 8000 	str.w	r8, [sp]
 8012862:	464b      	mov	r3, r9
 8012864:	4621      	mov	r1, r4
 8012866:	4628      	mov	r0, r5
 8012868:	f7ff ffb7 	bl	80127da <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801286c:	4683      	mov	fp, r0
 801286e:	b168      	cbz	r0, 801288c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012870:	eb0a 0109 	add.w	r1, sl, r9
 8012874:	463a      	mov	r2, r7
 8012876:	4628      	mov	r0, r5
 8012878:	4441      	add	r1, r8
 801287a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801287e:	4649      	mov	r1, r9
 8012880:	f7ff ff52 	bl	8012728 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012884:	4658      	mov	r0, fp
 8012886:	b003      	add	sp, #12
 8012888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801288c:	eb07 010a 	add.w	r1, r7, sl
 8012890:	4449      	add	r1, r9
 8012892:	4441      	add	r1, r8
 8012894:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012898:	e7d2      	b.n	8012840 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801289a:	f04f 0b00 	mov.w	fp, #0
 801289e:	e7f1      	b.n	8012884 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080128a0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80128a0:	b570      	push	{r4, r5, r6, lr}
 80128a2:	8810      	ldrh	r0, [r2, #0]
 80128a4:	4298      	cmp	r0, r3
 80128a6:	d817      	bhi.n	80128d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80128a8:	1e48      	subs	r0, r1, #1
 80128aa:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80128ae:	4298      	cmp	r0, r3
 80128b0:	d312      	bcc.n	80128d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80128b2:	2400      	movs	r4, #0
 80128b4:	428c      	cmp	r4, r1
 80128b6:	d20f      	bcs.n	80128d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80128b8:	1860      	adds	r0, r4, r1
 80128ba:	1040      	asrs	r0, r0, #1
 80128bc:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80128c0:	0085      	lsls	r5, r0, #2
 80128c2:	42b3      	cmp	r3, r6
 80128c4:	d902      	bls.n	80128cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80128c6:	3001      	adds	r0, #1
 80128c8:	b284      	uxth	r4, r0
 80128ca:	e7f3      	b.n	80128b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80128cc:	d201      	bcs.n	80128d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80128ce:	b281      	uxth	r1, r0
 80128d0:	e7f0      	b.n	80128b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80128d2:	442a      	add	r2, r5
 80128d4:	8850      	ldrh	r0, [r2, #2]
 80128d6:	bd70      	pop	{r4, r5, r6, pc}
 80128d8:	2000      	movs	r0, #0
 80128da:	e7fc      	b.n	80128d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080128dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80128dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128e0:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80128e2:	4604      	mov	r4, r0
 80128e4:	260b      	movs	r6, #11
 80128e6:	886f      	ldrh	r7, [r5, #2]
 80128e8:	087f      	lsrs	r7, r7, #1
 80128ea:	3e01      	subs	r6, #1
 80128ec:	d013      	beq.n	8012916 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80128ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80128f0:	462a      	mov	r2, r5
 80128f2:	4639      	mov	r1, r7
 80128f4:	4620      	mov	r0, r4
 80128f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80128fa:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80128fe:	4643      	mov	r3, r8
 8012900:	f7ff ffce 	bl	80128a0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012904:	b138      	cbz	r0, 8012916 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012906:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801290a:	4642      	mov	r2, r8
 801290c:	4620      	mov	r0, r4
 801290e:	f7ff ff93 	bl	8012838 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012912:	2800      	cmp	r0, #0
 8012914:	d1e9      	bne.n	80128ea <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0801291c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801291c:	b570      	push	{r4, r5, r6, lr}
 801291e:	694a      	ldr	r2, [r1, #20]
 8012920:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012922:	684b      	ldr	r3, [r1, #4]
 8012924:	1b54      	subs	r4, r2, r5
 8012926:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8012928:	f000 8106 	beq.w	8012b38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801292c:	1b9b      	subs	r3, r3, r6
 801292e:	d003      	beq.n	8012938 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012930:	4363      	muls	r3, r4
 8012932:	2210      	movs	r2, #16
 8012934:	fb93 f3f2 	sdiv	r3, r3, r2
 8012938:	680c      	ldr	r4, [r1, #0]
 801293a:	698a      	ldr	r2, [r1, #24]
 801293c:	1b65      	subs	r5, r4, r5
 801293e:	f000 80fd 	beq.w	8012b3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012942:	1b92      	subs	r2, r2, r6
 8012944:	d003      	beq.n	801294e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012946:	436a      	muls	r2, r5
 8012948:	2410      	movs	r4, #16
 801294a:	fb92 f2f4 	sdiv	r2, r2, r4
 801294e:	1a9b      	subs	r3, r3, r2
 8012950:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8012b78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012954:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012958:	460a      	mov	r2, r1
 801295a:	ee07 3a90 	vmov	s15, r3
 801295e:	f100 040c 	add.w	r4, r0, #12
 8012962:	4603      	mov	r3, r0
 8012964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012968:	ee67 7a84 	vmul.f32	s15, s15, s8
 801296c:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012970:	eeb1 6a43 	vneg.f32	s12, s6
 8012974:	edd2 7a02 	vldr	s15, [r2, #8]
 8012978:	3214      	adds	r2, #20
 801297a:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801297e:	ece3 6a01 	vstmia	r3!, {s13}
 8012982:	429c      	cmp	r4, r3
 8012984:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012988:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801298c:	edc3 7a02 	vstr	s15, [r3, #8]
 8012990:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012994:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012998:	edc3 7a05 	vstr	s15, [r3, #20]
 801299c:	d1ea      	bne.n	8012974 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801299e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80129a0:	698b      	ldr	r3, [r1, #24]
 80129a2:	edd0 4a02 	vldr	s9, [r0, #8]
 80129a6:	1a9b      	subs	r3, r3, r2
 80129a8:	edd0 3a00 	vldr	s7, [r0]
 80129ac:	edd0 6a01 	vldr	s13, [r0, #4]
 80129b0:	ee07 3a90 	vmov	s15, r3
 80129b4:	684b      	ldr	r3, [r1, #4]
 80129b6:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80129ba:	ed90 5a05 	vldr	s10, [r0, #20]
 80129be:	1a9b      	subs	r3, r3, r2
 80129c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129c4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80129c8:	ed90 2a03 	vldr	s4, [r0, #12]
 80129cc:	ee07 3a10 	vmov	s14, r3
 80129d0:	edd0 5a04 	vldr	s11, [r0, #16]
 80129d4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80129d8:	ed90 1a07 	vldr	s2, [r0, #28]
 80129dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80129e0:	edd0 2a06 	vldr	s5, [r0, #24]
 80129e4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80129e8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80129ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 80129f0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80129f4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80129f8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80129fc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8012a00:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012a02:	694a      	ldr	r2, [r1, #20]
 8012a04:	1b13      	subs	r3, r2, r4
 8012a06:	ee07 3a10 	vmov	s14, r3
 8012a0a:	680b      	ldr	r3, [r1, #0]
 8012a0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a10:	1b1b      	subs	r3, r3, r4
 8012a12:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012a16:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012a1a:	ee07 3a10 	vmov	s14, r3
 8012a1e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a22:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012a26:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012a2a:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012a2e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8012a32:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012a34:	698b      	ldr	r3, [r1, #24]
 8012a36:	1a9b      	subs	r3, r3, r2
 8012a38:	ee06 3a90 	vmov	s13, r3
 8012a3c:	684b      	ldr	r3, [r1, #4]
 8012a3e:	1a9b      	subs	r3, r3, r2
 8012a40:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012a44:	ee07 3a10 	vmov	s14, r3
 8012a48:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012a4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a50:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012a54:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012a58:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012a5c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012a60:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012a64:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012a66:	694a      	ldr	r2, [r1, #20]
 8012a68:	1b13      	subs	r3, r2, r4
 8012a6a:	ee07 3a10 	vmov	s14, r3
 8012a6e:	680b      	ldr	r3, [r1, #0]
 8012a70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a74:	1b1b      	subs	r3, r3, r4
 8012a76:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012a7a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012a7e:	ee07 3a10 	vmov	s14, r3
 8012a82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a86:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012a8a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012a8e:	edd0 5a08 	vldr	s11, [r0, #32]
 8012a92:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012a96:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012a9a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012a9e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8012aa2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012aa4:	698b      	ldr	r3, [r1, #24]
 8012aa6:	1a9b      	subs	r3, r3, r2
 8012aa8:	ee07 3a10 	vmov	s14, r3
 8012aac:	684b      	ldr	r3, [r1, #4]
 8012aae:	1a9b      	subs	r3, r3, r2
 8012ab0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ab4:	ee01 3a90 	vmov	s3, r3
 8012ab8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012abc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012ac0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012ac4:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012ac8:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012acc:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012ad0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012ad4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012ad6:	694a      	ldr	r2, [r1, #20]
 8012ad8:	1b13      	subs	r3, r2, r4
 8012ada:	ee03 3a10 	vmov	s6, r3
 8012ade:	680b      	ldr	r3, [r1, #0]
 8012ae0:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012ae4:	1b1b      	subs	r3, r3, r4
 8012ae6:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012aea:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012aee:	ee03 3a10 	vmov	s6, r3
 8012af2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012af6:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012afa:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012afe:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012b02:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012b06:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8012b0a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012b0e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012b12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b16:	dd13      	ble.n	8012b40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012b18:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012b1c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012b20:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012b22:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012b26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b2e:	dd15      	ble.n	8012b5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012b30:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012b34:	6403      	str	r3, [r0, #64]	; 0x40
 8012b36:	bd70      	pop	{r4, r5, r6, pc}
 8012b38:	4623      	mov	r3, r4
 8012b3a:	e6fd      	b.n	8012938 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012b3c:	462a      	mov	r2, r5
 8012b3e:	e706      	b.n	801294e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012b40:	d502      	bpl.n	8012b48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012b42:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012b46:	e7e9      	b.n	8012b1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012b48:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012b4c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012b50:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012b54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b58:	dade      	bge.n	8012b18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012b5a:	e7f2      	b.n	8012b42 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012b5c:	d502      	bpl.n	8012b64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012b5e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012b62:	e7e7      	b.n	8012b34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012b64:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012b68:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012b6c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012b70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b74:	dadc      	bge.n	8012b30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012b76:	e7f2      	b.n	8012b5e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012b78:	3d800000 	.word	0x3d800000

08012b7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012b80:	2714      	movs	r7, #20
 8012b82:	435f      	muls	r7, r3
 8012b84:	eb02 0c07 	add.w	ip, r2, r7
 8012b88:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012b8c:	f115 0e0f 	adds.w	lr, r5, #15
 8012b90:	f100 80a2 	bmi.w	8012cd8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012b94:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012b98:	9c08      	ldr	r4, [sp, #32]
 8012b9a:	2614      	movs	r6, #20
 8012b9c:	f8c0 e014 	str.w	lr, [r0, #20]
 8012ba0:	4366      	muls	r6, r4
 8012ba2:	eb02 0806 	add.w	r8, r2, r6
 8012ba6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012baa:	f115 040f 	adds.w	r4, r5, #15
 8012bae:	f100 809f 	bmi.w	8012cf0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012bb2:	1124      	asrs	r4, r4, #4
 8012bb4:	eba4 040e 	sub.w	r4, r4, lr
 8012bb8:	6184      	str	r4, [r0, #24]
 8012bba:	2c00      	cmp	r4, #0
 8012bbc:	f000 808a 	beq.w	8012cd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012bc0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012bc4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012bc8:	5995      	ldr	r5, [r2, r6]
 8012bca:	eba4 0809 	sub.w	r8, r4, r9
 8012bce:	59d4      	ldr	r4, [r2, r7]
 8012bd0:	eba5 0a04 	sub.w	sl, r5, r4
 8012bd4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012bd8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012bdc:	fb0e fe05 	mul.w	lr, lr, r5
 8012be0:	fb0a ee19 	mls	lr, sl, r9, lr
 8012be4:	fb08 e404 	mla	r4, r8, r4, lr
 8012be8:	3c01      	subs	r4, #1
 8012bea:	19a4      	adds	r4, r4, r6
 8012bec:	f100 808c 	bmi.w	8012d08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012bf0:	fb94 fef6 	sdiv	lr, r4, r6
 8012bf4:	fb06 441e 	mls	r4, r6, lr, r4
 8012bf8:	f8c0 e000 	str.w	lr, [r0]
 8012bfc:	6104      	str	r4, [r0, #16]
 8012bfe:	2d00      	cmp	r5, #0
 8012c00:	f2c0 8095 	blt.w	8012d2e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012c04:	fb95 f4f6 	sdiv	r4, r5, r6
 8012c08:	fb06 5514 	mls	r5, r6, r4, r5
 8012c0c:	6044      	str	r4, [r0, #4]
 8012c0e:	6085      	str	r5, [r0, #8]
 8012c10:	60c6      	str	r6, [r0, #12]
 8012c12:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012c16:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012c1a:	6945      	ldr	r5, [r0, #20]
 8012c1c:	59d2      	ldr	r2, [r2, r7]
 8012c1e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8012c22:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8012d50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012c26:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012c2a:	ee07 4a10 	vmov	s14, r4
 8012c2e:	6804      	ldr	r4, [r0, #0]
 8012c30:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012c34:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c38:	ee07 2a90 	vmov	s15, r2
 8012c3c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012c40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c44:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012c48:	edd3 6a00 	vldr	s13, [r3]
 8012c4c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012c50:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8012c54:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012c58:	edc0 6a07 	vstr	s13, [r0, #28]
 8012c5c:	edd0 6a01 	vldr	s13, [r0, #4]
 8012c60:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8012c64:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012c68:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012c6c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012c70:	ed80 6a08 	vstr	s12, [r0, #32]
 8012c74:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8012c76:	6242      	str	r2, [r0, #36]	; 0x24
 8012c78:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8012c7c:	ed93 6a03 	vldr	s12, [r3, #12]
 8012c80:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012c84:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012c88:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012c8c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8012c90:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012c94:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8012c98:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012c9c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8012ca0:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012ca2:	6302      	str	r2, [r0, #48]	; 0x30
 8012ca4:	ed93 6a06 	vldr	s12, [r3, #24]
 8012ca8:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8012cac:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012cb0:	eeb0 7a46 	vmov.f32	s14, s12
 8012cb4:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8012cb8:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012cbc:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012cc0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8012cc4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8012cc8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012ccc:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8012cd0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8012cd2:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012cd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012cd8:	2410      	movs	r4, #16
 8012cda:	f1c5 0501 	rsb	r5, r5, #1
 8012cde:	fb9e fef4 	sdiv	lr, lr, r4
 8012ce2:	f015 050f 	ands.w	r5, r5, #15
 8012ce6:	bf18      	it	ne
 8012ce8:	2501      	movne	r5, #1
 8012cea:	ebae 0e05 	sub.w	lr, lr, r5
 8012cee:	e753      	b.n	8012b98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012cf0:	f04f 0910 	mov.w	r9, #16
 8012cf4:	f1c5 0501 	rsb	r5, r5, #1
 8012cf8:	fb94 f4f9 	sdiv	r4, r4, r9
 8012cfc:	f015 050f 	ands.w	r5, r5, #15
 8012d00:	bf18      	it	ne
 8012d02:	2501      	movne	r5, #1
 8012d04:	1b64      	subs	r4, r4, r5
 8012d06:	e755      	b.n	8012bb4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012d08:	4264      	negs	r4, r4
 8012d0a:	fb94 fef6 	sdiv	lr, r4, r6
 8012d0e:	f1ce 0800 	rsb	r8, lr, #0
 8012d12:	fb06 441e 	mls	r4, r6, lr, r4
 8012d16:	f8c0 8000 	str.w	r8, [r0]
 8012d1a:	6104      	str	r4, [r0, #16]
 8012d1c:	2c00      	cmp	r4, #0
 8012d1e:	f43f af6e 	beq.w	8012bfe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012d22:	ea6f 0e0e 	mvn.w	lr, lr
 8012d26:	1b34      	subs	r4, r6, r4
 8012d28:	f8c0 e000 	str.w	lr, [r0]
 8012d2c:	e766      	b.n	8012bfc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012d2e:	426d      	negs	r5, r5
 8012d30:	fb95 f4f6 	sdiv	r4, r5, r6
 8012d34:	f1c4 0e00 	rsb	lr, r4, #0
 8012d38:	fb06 5514 	mls	r5, r6, r4, r5
 8012d3c:	f8c0 e004 	str.w	lr, [r0, #4]
 8012d40:	6085      	str	r5, [r0, #8]
 8012d42:	2d00      	cmp	r5, #0
 8012d44:	f43f af64 	beq.w	8012c10 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012d48:	43e4      	mvns	r4, r4
 8012d4a:	1b75      	subs	r5, r6, r5
 8012d4c:	6044      	str	r4, [r0, #4]
 8012d4e:	e75e      	b.n	8012c0e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012d50:	3d800000 	.word	0x3d800000

08012d54 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012d54:	4b01      	ldr	r3, [pc, #4]	; (8012d5c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012d56:	6018      	str	r0, [r3, #0]
 8012d58:	4770      	bx	lr
 8012d5a:	bf00      	nop
 8012d5c:	2400e48c 	.word	0x2400e48c

08012d60 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012d60:	4b06      	ldr	r3, [pc, #24]	; (8012d7c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8012d62:	881a      	ldrh	r2, [r3, #0]
 8012d64:	4282      	cmp	r2, r0
 8012d66:	d807      	bhi.n	8012d78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012d68:	4b05      	ldr	r3, [pc, #20]	; (8012d80 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012d6a:	881b      	ldrh	r3, [r3, #0]
 8012d6c:	4413      	add	r3, r2
 8012d6e:	4298      	cmp	r0, r3
 8012d70:	bfac      	ite	ge
 8012d72:	2000      	movge	r0, #0
 8012d74:	2001      	movlt	r0, #1
 8012d76:	4770      	bx	lr
 8012d78:	2000      	movs	r0, #0
 8012d7a:	4770      	bx	lr
 8012d7c:	2400e4ac 	.word	0x2400e4ac
 8012d80:	2400e4b0 	.word	0x2400e4b0

08012d84 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012d84:	b508      	push	{r3, lr}
 8012d86:	4601      	mov	r1, r0
 8012d88:	f7ff ffea 	bl	8012d60 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012d8c:	b118      	cbz	r0, 8012d96 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012d8e:	4b02      	ldr	r3, [pc, #8]	; (8012d98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012d90:	681b      	ldr	r3, [r3, #0]
 8012d92:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012d96:	bd08      	pop	{r3, pc}
 8012d98:	2400e490 	.word	0x2400e490

08012d9c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012d9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012d9e:	4c24      	ldr	r4, [pc, #144]	; (8012e30 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012da0:	6823      	ldr	r3, [r4, #0]
 8012da2:	2b00      	cmp	r3, #0
 8012da4:	d042      	beq.n	8012e2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012da6:	4a23      	ldr	r2, [pc, #140]	; (8012e34 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012da8:	4d23      	ldr	r5, [pc, #140]	; (8012e38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012daa:	8811      	ldrh	r1, [r2, #0]
 8012dac:	f8b5 c000 	ldrh.w	ip, [r5]
 8012db0:	4822      	ldr	r0, [pc, #136]	; (8012e3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012db2:	4461      	add	r1, ip
 8012db4:	1c4a      	adds	r2, r1, #1
 8012db6:	008f      	lsls	r7, r1, #2
 8012db8:	f022 0201 	bic.w	r2, r2, #1
 8012dbc:	19de      	adds	r6, r3, r7
 8012dbe:	0412      	lsls	r2, r2, #16
 8012dc0:	6006      	str	r6, [r0, #0]
 8012dc2:	4e1f      	ldr	r6, [pc, #124]	; (8012e40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012dc4:	0c12      	lsrs	r2, r2, #16
 8012dc6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012dca:	19da      	adds	r2, r3, r7
 8012dcc:	6032      	str	r2, [r6, #0]
 8012dce:	220e      	movs	r2, #14
 8012dd0:	fb02 f20c 	mul.w	r2, r2, ip
 8012dd4:	3203      	adds	r2, #3
 8012dd6:	f022 0203 	bic.w	r2, r2, #3
 8012dda:	443a      	add	r2, r7
 8012ddc:	4f19      	ldr	r7, [pc, #100]	; (8012e44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012dde:	4413      	add	r3, r2
 8012de0:	603b      	str	r3, [r7, #0]
 8012de2:	2300      	movs	r3, #0
 8012de4:	4f18      	ldr	r7, [pc, #96]	; (8012e48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012de6:	469c      	mov	ip, r3
 8012de8:	803b      	strh	r3, [r7, #0]
 8012dea:	4f18      	ldr	r7, [pc, #96]	; (8012e4c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012dec:	683f      	ldr	r7, [r7, #0]
 8012dee:	1aba      	subs	r2, r7, r2
 8012df0:	4f17      	ldr	r7, [pc, #92]	; (8012e50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012df2:	603a      	str	r2, [r7, #0]
 8012df4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8012df8:	4a16      	ldr	r2, [pc, #88]	; (8012e54 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012dfa:	8013      	strh	r3, [r2, #0]
 8012dfc:	428b      	cmp	r3, r1
 8012dfe:	d10d      	bne.n	8012e1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012e00:	882d      	ldrh	r5, [r5, #0]
 8012e02:	2300      	movs	r3, #0
 8012e04:	6830      	ldr	r0, [r6, #0]
 8012e06:	240e      	movs	r4, #14
 8012e08:	429d      	cmp	r5, r3
 8012e0a:	d90f      	bls.n	8012e2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012e0c:	fb04 0203 	mla	r2, r4, r3, r0
 8012e10:	3301      	adds	r3, #1
 8012e12:	7b11      	ldrb	r1, [r2, #12]
 8012e14:	f36f 1145 	bfc	r1, #5, #1
 8012e18:	7311      	strb	r1, [r2, #12]
 8012e1a:	e7f5      	b.n	8012e08 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012e1c:	6822      	ldr	r2, [r4, #0]
 8012e1e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012e22:	6802      	ldr	r2, [r0, #0]
 8012e24:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012e28:	3301      	adds	r3, #1
 8012e2a:	e7e7      	b.n	8012dfc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e2e:	bf00      	nop
 8012e30:	2400e490 	.word	0x2400e490
 8012e34:	2400e4ac 	.word	0x2400e4ac
 8012e38:	2400e4b0 	.word	0x2400e4b0
 8012e3c:	2400e4a4 	.word	0x2400e4a4
 8012e40:	2400e494 	.word	0x2400e494
 8012e44:	2400e49c 	.word	0x2400e49c
 8012e48:	2400e4ae 	.word	0x2400e4ae
 8012e4c:	2400e498 	.word	0x2400e498
 8012e50:	2400e4a8 	.word	0x2400e4a8
 8012e54:	2400e4a0 	.word	0x2400e4a0

08012e58 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012e58:	4b06      	ldr	r3, [pc, #24]	; (8012e74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012e5a:	681b      	ldr	r3, [r3, #0]
 8012e5c:	b943      	cbnz	r3, 8012e70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012e5e:	b139      	cbz	r1, 8012e70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012e60:	4b05      	ldr	r3, [pc, #20]	; (8012e78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8012e62:	801a      	strh	r2, [r3, #0]
 8012e64:	4b05      	ldr	r3, [pc, #20]	; (8012e7c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012e66:	6019      	str	r1, [r3, #0]
 8012e68:	4b05      	ldr	r3, [pc, #20]	; (8012e80 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012e6a:	6018      	str	r0, [r3, #0]
 8012e6c:	f7ff bf96 	b.w	8012d9c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012e70:	4770      	bx	lr
 8012e72:	bf00      	nop
 8012e74:	2400e49c 	.word	0x2400e49c
 8012e78:	2400e4b0 	.word	0x2400e4b0
 8012e7c:	2400e498 	.word	0x2400e498
 8012e80:	2400e490 	.word	0x2400e490

08012e84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012e84:	b470      	push	{r4, r5, r6}
 8012e86:	4c07      	ldr	r4, [pc, #28]	; (8012ea4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012e88:	4605      	mov	r5, r0
 8012e8a:	4610      	mov	r0, r2
 8012e8c:	9a03      	ldr	r2, [sp, #12]
 8012e8e:	6826      	ldr	r6, [r4, #0]
 8012e90:	b936      	cbnz	r6, 8012ea0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8012e92:	6025      	str	r5, [r4, #0]
 8012e94:	4c04      	ldr	r4, [pc, #16]	; (8012ea8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012e96:	8021      	strh	r1, [r4, #0]
 8012e98:	4619      	mov	r1, r3
 8012e9a:	bc70      	pop	{r4, r5, r6}
 8012e9c:	f7ff bfdc 	b.w	8012e58 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012ea0:	bc70      	pop	{r4, r5, r6}
 8012ea2:	4770      	bx	lr
 8012ea4:	2400e4b4 	.word	0x2400e4b4
 8012ea8:	2400e4ac 	.word	0x2400e4ac

08012eac <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012eac:	4a12      	ldr	r2, [pc, #72]	; (8012ef8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012eae:	8803      	ldrh	r3, [r0, #0]
 8012eb0:	8812      	ldrh	r2, [r2, #0]
 8012eb2:	4293      	cmp	r3, r2
 8012eb4:	d207      	bcs.n	8012ec6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012eb6:	4a11      	ldr	r2, [pc, #68]	; (8012efc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012eb8:	2114      	movs	r1, #20
 8012eba:	6812      	ldr	r2, [r2, #0]
 8012ebc:	fb01 2303 	mla	r3, r1, r3, r2
 8012ec0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012ec4:	4770      	bx	lr
 8012ec6:	490e      	ldr	r1, [pc, #56]	; (8012f00 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012ec8:	8809      	ldrh	r1, [r1, #0]
 8012eca:	4411      	add	r1, r2
 8012ecc:	428b      	cmp	r3, r1
 8012ece:	da04      	bge.n	8012eda <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012ed0:	1a9b      	subs	r3, r3, r2
 8012ed2:	4a0c      	ldr	r2, [pc, #48]	; (8012f04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012ed4:	210e      	movs	r1, #14
 8012ed6:	6812      	ldr	r2, [r2, #0]
 8012ed8:	e7f0      	b.n	8012ebc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012eda:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012ede:	4293      	cmp	r3, r2
 8012ee0:	d108      	bne.n	8012ef4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012ee2:	4b09      	ldr	r3, [pc, #36]	; (8012f08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012ee4:	781b      	ldrb	r3, [r3, #0]
 8012ee6:	b91b      	cbnz	r3, 8012ef0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012ee8:	4b08      	ldr	r3, [pc, #32]	; (8012f0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012eea:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012eee:	4770      	bx	lr
 8012ef0:	4b07      	ldr	r3, [pc, #28]	; (8012f10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012ef2:	e7fa      	b.n	8012eea <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012ef4:	2000      	movs	r0, #0
 8012ef6:	4770      	bx	lr
 8012ef8:	2400e4ac 	.word	0x2400e4ac
 8012efc:	2400e4b4 	.word	0x2400e4b4
 8012f00:	2400e4b0 	.word	0x2400e4b0
 8012f04:	2400e494 	.word	0x2400e494
 8012f08:	2400e41c 	.word	0x2400e41c
 8012f0c:	2400e41e 	.word	0x2400e41e
 8012f10:	2400e420 	.word	0x2400e420

08012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012f14:	4a12      	ldr	r2, [pc, #72]	; (8012f60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012f16:	8803      	ldrh	r3, [r0, #0]
 8012f18:	8812      	ldrh	r2, [r2, #0]
 8012f1a:	4293      	cmp	r3, r2
 8012f1c:	d207      	bcs.n	8012f2e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012f1e:	4a11      	ldr	r2, [pc, #68]	; (8012f64 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012f20:	2114      	movs	r1, #20
 8012f22:	6812      	ldr	r2, [r2, #0]
 8012f24:	fb01 2303 	mla	r3, r1, r3, r2
 8012f28:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012f2c:	4770      	bx	lr
 8012f2e:	490e      	ldr	r1, [pc, #56]	; (8012f68 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012f30:	8809      	ldrh	r1, [r1, #0]
 8012f32:	4411      	add	r1, r2
 8012f34:	428b      	cmp	r3, r1
 8012f36:	da04      	bge.n	8012f42 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012f38:	1a9b      	subs	r3, r3, r2
 8012f3a:	4a0c      	ldr	r2, [pc, #48]	; (8012f6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012f3c:	210e      	movs	r1, #14
 8012f3e:	6812      	ldr	r2, [r2, #0]
 8012f40:	e7f0      	b.n	8012f24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012f42:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012f46:	4293      	cmp	r3, r2
 8012f48:	d108      	bne.n	8012f5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012f4a:	4b09      	ldr	r3, [pc, #36]	; (8012f70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012f4c:	781b      	ldrb	r3, [r3, #0]
 8012f4e:	b91b      	cbnz	r3, 8012f58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012f50:	4b08      	ldr	r3, [pc, #32]	; (8012f74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012f52:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012f56:	4770      	bx	lr
 8012f58:	4b07      	ldr	r3, [pc, #28]	; (8012f78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012f5a:	e7fa      	b.n	8012f52 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012f5c:	2000      	movs	r0, #0
 8012f5e:	4770      	bx	lr
 8012f60:	2400e4ac 	.word	0x2400e4ac
 8012f64:	2400e4b4 	.word	0x2400e4b4
 8012f68:	2400e4b0 	.word	0x2400e4b0
 8012f6c:	2400e494 	.word	0x2400e494
 8012f70:	2400e41c 	.word	0x2400e41c
 8012f74:	2400e420 	.word	0x2400e420
 8012f78:	2400e41e 	.word	0x2400e41e

08012f7c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012f7c:	4a1f      	ldr	r2, [pc, #124]	; (8012ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8012f7e:	b510      	push	{r4, lr}
 8012f80:	880b      	ldrh	r3, [r1, #0]
 8012f82:	8812      	ldrh	r2, [r2, #0]
 8012f84:	4293      	cmp	r3, r2
 8012f86:	d213      	bcs.n	8012fb0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012f88:	4a1d      	ldr	r2, [pc, #116]	; (8013000 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8012f8a:	2114      	movs	r1, #20
 8012f8c:	6812      	ldr	r2, [r2, #0]
 8012f8e:	fb01 2303 	mla	r3, r1, r3, r2
 8012f92:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012f96:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012f9a:	8a1a      	ldrh	r2, [r3, #16]
 8012f9c:	8a5b      	ldrh	r3, [r3, #18]
 8012f9e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012fa2:	8004      	strh	r4, [r0, #0]
 8012fa4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012fa8:	8041      	strh	r1, [r0, #2]
 8012faa:	8082      	strh	r2, [r0, #4]
 8012fac:	80c3      	strh	r3, [r0, #6]
 8012fae:	e00e      	b.n	8012fce <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012fb0:	4914      	ldr	r1, [pc, #80]	; (8013004 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8012fb2:	8809      	ldrh	r1, [r1, #0]
 8012fb4:	4411      	add	r1, r2
 8012fb6:	428b      	cmp	r3, r1
 8012fb8:	da0a      	bge.n	8012fd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8012fba:	1a9b      	subs	r3, r3, r2
 8012fbc:	4a12      	ldr	r2, [pc, #72]	; (8013008 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012fbe:	210e      	movs	r1, #14
 8012fc0:	6812      	ldr	r2, [r2, #0]
 8012fc2:	fb01 2303 	mla	r3, r1, r3, r2
 8012fc6:	681a      	ldr	r2, [r3, #0]
 8012fc8:	6002      	str	r2, [r0, #0]
 8012fca:	685a      	ldr	r2, [r3, #4]
 8012fcc:	6042      	str	r2, [r0, #4]
 8012fce:	bd10      	pop	{r4, pc}
 8012fd0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012fd4:	4293      	cmp	r3, r2
 8012fd6:	d10b      	bne.n	8012ff0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8012fd8:	4b0c      	ldr	r3, [pc, #48]	; (801300c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012fda:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012fde:	4b0c      	ldr	r3, [pc, #48]	; (8013010 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012fe0:	8081      	strh	r1, [r0, #4]
 8012fe2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012fe6:	2300      	movs	r3, #0
 8012fe8:	80c2      	strh	r2, [r0, #6]
 8012fea:	8003      	strh	r3, [r0, #0]
 8012fec:	8043      	strh	r3, [r0, #2]
 8012fee:	e7ee      	b.n	8012fce <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012ff0:	2300      	movs	r3, #0
 8012ff2:	8003      	strh	r3, [r0, #0]
 8012ff4:	8043      	strh	r3, [r0, #2]
 8012ff6:	8083      	strh	r3, [r0, #4]
 8012ff8:	e7d8      	b.n	8012fac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012ffa:	bf00      	nop
 8012ffc:	2400e4ac 	.word	0x2400e4ac
 8013000:	2400e4b4 	.word	0x2400e4b4
 8013004:	2400e4b0 	.word	0x2400e4b0
 8013008:	2400e494 	.word	0x2400e494
 801300c:	2400e418 	.word	0x2400e418
 8013010:	2400e41a 	.word	0x2400e41a

08013014 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013014:	4a17      	ldr	r2, [pc, #92]	; (8013074 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8013016:	8803      	ldrh	r3, [r0, #0]
 8013018:	8812      	ldrh	r2, [r2, #0]
 801301a:	4293      	cmp	r3, r2
 801301c:	d213      	bcs.n	8013046 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801301e:	4a16      	ldr	r2, [pc, #88]	; (8013078 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013020:	2114      	movs	r1, #20
 8013022:	6812      	ldr	r2, [r2, #0]
 8013024:	fb01 2303 	mla	r3, r1, r3, r2
 8013028:	8a1a      	ldrh	r2, [r3, #16]
 801302a:	8919      	ldrh	r1, [r3, #8]
 801302c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013030:	428a      	cmp	r2, r1
 8013032:	db1d      	blt.n	8013070 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013034:	8a58      	ldrh	r0, [r3, #18]
 8013036:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801303a:	895b      	ldrh	r3, [r3, #10]
 801303c:	4298      	cmp	r0, r3
 801303e:	bfac      	ite	ge
 8013040:	2000      	movge	r0, #0
 8013042:	2001      	movlt	r0, #1
 8013044:	4770      	bx	lr
 8013046:	490d      	ldr	r1, [pc, #52]	; (801307c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013048:	8809      	ldrh	r1, [r1, #0]
 801304a:	4411      	add	r1, r2
 801304c:	428b      	cmp	r3, r1
 801304e:	da0d      	bge.n	801306c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013050:	1a9b      	subs	r3, r3, r2
 8013052:	4a0b      	ldr	r2, [pc, #44]	; (8013080 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013054:	210e      	movs	r1, #14
 8013056:	6812      	ldr	r2, [r2, #0]
 8013058:	fb01 2303 	mla	r3, r1, r3, r2
 801305c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013060:	891a      	ldrh	r2, [r3, #8]
 8013062:	4291      	cmp	r1, r2
 8013064:	db04      	blt.n	8013070 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013066:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801306a:	e7e6      	b.n	801303a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801306c:	2000      	movs	r0, #0
 801306e:	4770      	bx	lr
 8013070:	2001      	movs	r0, #1
 8013072:	4770      	bx	lr
 8013074:	2400e4ac 	.word	0x2400e4ac
 8013078:	2400e4b4 	.word	0x2400e4b4
 801307c:	2400e4b0 	.word	0x2400e4b0
 8013080:	2400e494 	.word	0x2400e494

08013084 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013084:	4a12      	ldr	r2, [pc, #72]	; (80130d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013086:	8803      	ldrh	r3, [r0, #0]
 8013088:	8811      	ldrh	r1, [r2, #0]
 801308a:	428b      	cmp	r3, r1
 801308c:	d20b      	bcs.n	80130a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801308e:	4a11      	ldr	r2, [pc, #68]	; (80130d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013090:	6812      	ldr	r2, [r2, #0]
 8013092:	b112      	cbz	r2, 801309a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013094:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013098:	b9c0      	cbnz	r0, 80130cc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801309a:	4a0f      	ldr	r2, [pc, #60]	; (80130d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801309c:	6811      	ldr	r1, [r2, #0]
 801309e:	2214      	movs	r2, #20
 80130a0:	4353      	muls	r3, r2
 80130a2:	58c8      	ldr	r0, [r1, r3]
 80130a4:	4770      	bx	lr
 80130a6:	4a0d      	ldr	r2, [pc, #52]	; (80130dc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80130a8:	8812      	ldrh	r2, [r2, #0]
 80130aa:	440a      	add	r2, r1
 80130ac:	4293      	cmp	r3, r2
 80130ae:	da04      	bge.n	80130ba <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80130b0:	4a08      	ldr	r2, [pc, #32]	; (80130d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80130b2:	6812      	ldr	r2, [r2, #0]
 80130b4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80130b8:	4770      	bx	lr
 80130ba:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80130be:	4293      	cmp	r3, r2
 80130c0:	d103      	bne.n	80130ca <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80130c2:	4b07      	ldr	r3, [pc, #28]	; (80130e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80130c4:	681b      	ldr	r3, [r3, #0]
 80130c6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80130c8:	4770      	bx	lr
 80130ca:	2000      	movs	r0, #0
 80130cc:	4770      	bx	lr
 80130ce:	bf00      	nop
 80130d0:	2400e4ac 	.word	0x2400e4ac
 80130d4:	2400e490 	.word	0x2400e490
 80130d8:	2400e4b4 	.word	0x2400e4b4
 80130dc:	2400e4b0 	.word	0x2400e4b0
 80130e0:	2400e424 	.word	0x2400e424

080130e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80130e4:	4b24      	ldr	r3, [pc, #144]	; (8013178 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80130e6:	8802      	ldrh	r2, [r0, #0]
 80130e8:	8818      	ldrh	r0, [r3, #0]
 80130ea:	4282      	cmp	r2, r0
 80130ec:	d221      	bcs.n	8013132 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80130ee:	4b23      	ldr	r3, [pc, #140]	; (801317c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80130f0:	6819      	ldr	r1, [r3, #0]
 80130f2:	2314      	movs	r3, #20
 80130f4:	fb03 1302 	mla	r3, r3, r2, r1
 80130f8:	6858      	ldr	r0, [r3, #4]
 80130fa:	2800      	cmp	r0, #0
 80130fc:	d03a      	beq.n	8013174 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80130fe:	4920      	ldr	r1, [pc, #128]	; (8013180 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013100:	6809      	ldr	r1, [r1, #0]
 8013102:	2900      	cmp	r1, #0
 8013104:	d036      	beq.n	8013174 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013106:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801310a:	2900      	cmp	r1, #0
 801310c:	d032      	beq.n	8013174 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801310e:	891a      	ldrh	r2, [r3, #8]
 8013110:	8958      	ldrh	r0, [r3, #10]
 8013112:	4350      	muls	r0, r2
 8013114:	7c5a      	ldrb	r2, [r3, #17]
 8013116:	7cdb      	ldrb	r3, [r3, #19]
 8013118:	0952      	lsrs	r2, r2, #5
 801311a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801311e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013122:	2b0b      	cmp	r3, #11
 8013124:	bf18      	it	ne
 8013126:	0040      	lslne	r0, r0, #1
 8013128:	3003      	adds	r0, #3
 801312a:	f020 0003 	bic.w	r0, r0, #3
 801312e:	4408      	add	r0, r1
 8013130:	4770      	bx	lr
 8013132:	4b14      	ldr	r3, [pc, #80]	; (8013184 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013134:	881b      	ldrh	r3, [r3, #0]
 8013136:	4403      	add	r3, r0
 8013138:	429a      	cmp	r2, r3
 801313a:	da1a      	bge.n	8013172 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801313c:	4b12      	ldr	r3, [pc, #72]	; (8013188 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801313e:	1a10      	subs	r0, r2, r0
 8013140:	210e      	movs	r1, #14
 8013142:	681b      	ldr	r3, [r3, #0]
 8013144:	fb01 3000 	mla	r0, r1, r0, r3
 8013148:	7b03      	ldrb	r3, [r0, #12]
 801314a:	f003 031f 	and.w	r3, r3, #31
 801314e:	2b0b      	cmp	r3, #11
 8013150:	d10b      	bne.n	801316a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8013152:	8903      	ldrh	r3, [r0, #8]
 8013154:	8940      	ldrh	r0, [r0, #10]
 8013156:	4358      	muls	r0, r3
 8013158:	4b09      	ldr	r3, [pc, #36]	; (8013180 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801315a:	3003      	adds	r0, #3
 801315c:	6819      	ldr	r1, [r3, #0]
 801315e:	f020 0303 	bic.w	r3, r0, #3
 8013162:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013166:	4418      	add	r0, r3
 8013168:	4770      	bx	lr
 801316a:	2b0d      	cmp	r3, #13
 801316c:	d101      	bne.n	8013172 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801316e:	300d      	adds	r0, #13
 8013170:	4770      	bx	lr
 8013172:	2000      	movs	r0, #0
 8013174:	4770      	bx	lr
 8013176:	bf00      	nop
 8013178:	2400e4ac 	.word	0x2400e4ac
 801317c:	2400e4b4 	.word	0x2400e4b4
 8013180:	2400e490 	.word	0x2400e490
 8013184:	2400e4b0 	.word	0x2400e4b0
 8013188:	2400e494 	.word	0x2400e494

0801318c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801318c:	4a17      	ldr	r2, [pc, #92]	; (80131ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801318e:	b510      	push	{r4, lr}
 8013190:	8803      	ldrh	r3, [r0, #0]
 8013192:	8812      	ldrh	r2, [r2, #0]
 8013194:	4293      	cmp	r3, r2
 8013196:	d20c      	bcs.n	80131b2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013198:	4a15      	ldr	r2, [pc, #84]	; (80131f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801319a:	2114      	movs	r1, #20
 801319c:	6812      	ldr	r2, [r2, #0]
 801319e:	fb01 2303 	mla	r3, r1, r3, r2
 80131a2:	7c58      	ldrb	r0, [r3, #17]
 80131a4:	0942      	lsrs	r2, r0, #5
 80131a6:	7cd8      	ldrb	r0, [r3, #19]
 80131a8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80131ac:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80131b0:	bd10      	pop	{r4, pc}
 80131b2:	4910      	ldr	r1, [pc, #64]	; (80131f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80131b4:	8809      	ldrh	r1, [r1, #0]
 80131b6:	4411      	add	r1, r2
 80131b8:	428b      	cmp	r3, r1
 80131ba:	da09      	bge.n	80131d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80131bc:	1a9b      	subs	r3, r3, r2
 80131be:	4a0e      	ldr	r2, [pc, #56]	; (80131f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80131c0:	210e      	movs	r1, #14
 80131c2:	6812      	ldr	r2, [r2, #0]
 80131c4:	fb01 2303 	mla	r3, r1, r3, r2
 80131c8:	7b18      	ldrb	r0, [r3, #12]
 80131ca:	f000 001f 	and.w	r0, r0, #31
 80131ce:	e7ef      	b.n	80131b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80131d0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80131d4:	4293      	cmp	r3, r2
 80131d6:	d106      	bne.n	80131e6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80131d8:	f7ef f922 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 80131dc:	6803      	ldr	r3, [r0, #0]
 80131de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131e4:	4718      	bx	r3
 80131e6:	2000      	movs	r0, #0
 80131e8:	e7e2      	b.n	80131b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80131ea:	bf00      	nop
 80131ec:	2400e4ac 	.word	0x2400e4ac
 80131f0:	2400e4b4 	.word	0x2400e4b4
 80131f4:	2400e4b0 	.word	0x2400e4b0
 80131f8:	2400e494 	.word	0x2400e494

080131fc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80131fc:	2010      	movs	r0, #16
 80131fe:	4770      	bx	lr

08013200 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013200:	2000      	movs	r0, #0
 8013202:	4770      	bx	lr

08013204 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013204:	4b02      	ldr	r3, [pc, #8]	; (8013210 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8013206:	8818      	ldrh	r0, [r3, #0]
 8013208:	0040      	lsls	r0, r0, #1
 801320a:	b280      	uxth	r0, r0
 801320c:	4770      	bx	lr
 801320e:	bf00      	nop
 8013210:	2400e41e 	.word	0x2400e41e

08013214 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013214:	2bff      	cmp	r3, #255	; 0xff
 8013216:	d050      	beq.n	80132ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8013218:	2a0b      	cmp	r2, #11
 801321a:	d04a      	beq.n	80132b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801321c:	d80e      	bhi.n	801323c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801321e:	2a03      	cmp	r2, #3
 8013220:	d03f      	beq.n	80132a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8013222:	d804      	bhi.n	801322e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013224:	2a01      	cmp	r2, #1
 8013226:	d03e      	beq.n	80132a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8013228:	d93f      	bls.n	80132aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801322a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801322c:	4770      	bx	lr
 801322e:	2a09      	cmp	r2, #9
 8013230:	d03f      	beq.n	80132b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013232:	d83c      	bhi.n	80132ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013234:	2a08      	cmp	r2, #8
 8013236:	d03a      	beq.n	80132ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013238:	2000      	movs	r0, #0
 801323a:	4770      	bx	lr
 801323c:	2a2f      	cmp	r2, #47	; 0x2f
 801323e:	d024      	beq.n	801328a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013240:	d80d      	bhi.n	801325e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8013242:	2a2d      	cmp	r2, #45	; 0x2d
 8013244:	d014      	beq.n	8013270 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8013246:	d826      	bhi.n	8013296 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013248:	2a2c      	cmp	r2, #44	; 0x2c
 801324a:	d1f5      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801324c:	684b      	ldr	r3, [r1, #4]
 801324e:	781b      	ldrb	r3, [r3, #0]
 8013250:	2b01      	cmp	r3, #1
 8013252:	d018      	beq.n	8013286 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013254:	d323      	bcc.n	801329e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8013256:	2b02      	cmp	r3, #2
 8013258:	d1ee      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801325a:	6880      	ldr	r0, [r0, #8]
 801325c:	4770      	bx	lr
 801325e:	2a31      	cmp	r2, #49	; 0x31
 8013260:	d004      	beq.n	801326c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8013262:	d328      	bcc.n	80132b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013264:	2a32      	cmp	r2, #50	; 0x32
 8013266:	d026      	beq.n	80132b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013268:	2a33      	cmp	r2, #51	; 0x33
 801326a:	d1e5      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801326c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801326e:	4770      	bx	lr
 8013270:	684b      	ldr	r3, [r1, #4]
 8013272:	781b      	ldrb	r3, [r3, #0]
 8013274:	2b01      	cmp	r3, #1
 8013276:	d004      	beq.n	8013282 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013278:	d30b      	bcc.n	8013292 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801327a:	2b02      	cmp	r3, #2
 801327c:	d1dc      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801327e:	6900      	ldr	r0, [r0, #16]
 8013280:	4770      	bx	lr
 8013282:	6a00      	ldr	r0, [r0, #32]
 8013284:	4770      	bx	lr
 8013286:	6980      	ldr	r0, [r0, #24]
 8013288:	4770      	bx	lr
 801328a:	684b      	ldr	r3, [r1, #4]
 801328c:	781b      	ldrb	r3, [r3, #0]
 801328e:	2b00      	cmp	r3, #0
 8013290:	d1d2      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013292:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013294:	4770      	bx	lr
 8013296:	684b      	ldr	r3, [r1, #4]
 8013298:	781b      	ldrb	r3, [r3, #0]
 801329a:	2b00      	cmp	r3, #0
 801329c:	d1cc      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801329e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80132a0:	4770      	bx	lr
 80132a2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80132a4:	4770      	bx	lr
 80132a6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80132a8:	4770      	bx	lr
 80132aa:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80132ac:	4770      	bx	lr
 80132ae:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80132b0:	4770      	bx	lr
 80132b2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80132b4:	4770      	bx	lr
 80132b6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80132b8:	4770      	bx	lr
 80132ba:	2a0b      	cmp	r2, #11
 80132bc:	d049      	beq.n	8013352 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80132be:	d80e      	bhi.n	80132de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80132c0:	2a03      	cmp	r2, #3
 80132c2:	d040      	beq.n	8013346 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80132c4:	d804      	bhi.n	80132d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80132c6:	2a01      	cmp	r2, #1
 80132c8:	d03f      	beq.n	801334a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80132ca:	d940      	bls.n	801334e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80132cc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80132ce:	4770      	bx	lr
 80132d0:	2a09      	cmp	r2, #9
 80132d2:	d03e      	beq.n	8013352 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80132d4:	d801      	bhi.n	80132da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80132d6:	2a08      	cmp	r2, #8
 80132d8:	d1ae      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80132da:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80132dc:	4770      	bx	lr
 80132de:	2a2f      	cmp	r2, #47	; 0x2f
 80132e0:	d024      	beq.n	801332c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80132e2:	d80d      	bhi.n	8013300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80132e4:	2a2d      	cmp	r2, #45	; 0x2d
 80132e6:	d014      	beq.n	8013312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80132e8:	d826      	bhi.n	8013338 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80132ea:	2a2c      	cmp	r2, #44	; 0x2c
 80132ec:	d1a4      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80132ee:	684b      	ldr	r3, [r1, #4]
 80132f0:	781b      	ldrb	r3, [r3, #0]
 80132f2:	2b01      	cmp	r3, #1
 80132f4:	d018      	beq.n	8013328 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80132f6:	d324      	bcc.n	8013342 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80132f8:	2b02      	cmp	r3, #2
 80132fa:	d19d      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80132fc:	68c0      	ldr	r0, [r0, #12]
 80132fe:	4770      	bx	lr
 8013300:	2a31      	cmp	r2, #49	; 0x31
 8013302:	d004      	beq.n	801330e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8013304:	d327      	bcc.n	8013356 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013306:	2a32      	cmp	r2, #50	; 0x32
 8013308:	d025      	beq.n	8013356 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801330a:	2a33      	cmp	r2, #51	; 0x33
 801330c:	d194      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801330e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8013310:	4770      	bx	lr
 8013312:	684b      	ldr	r3, [r1, #4]
 8013314:	781b      	ldrb	r3, [r3, #0]
 8013316:	2b01      	cmp	r3, #1
 8013318:	d004      	beq.n	8013324 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801331a:	d30b      	bcc.n	8013334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801331c:	2b02      	cmp	r3, #2
 801331e:	d18b      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013320:	6940      	ldr	r0, [r0, #20]
 8013322:	4770      	bx	lr
 8013324:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8013326:	4770      	bx	lr
 8013328:	69c0      	ldr	r0, [r0, #28]
 801332a:	4770      	bx	lr
 801332c:	684b      	ldr	r3, [r1, #4]
 801332e:	781b      	ldrb	r3, [r3, #0]
 8013330:	2b00      	cmp	r3, #0
 8013332:	d181      	bne.n	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013334:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8013336:	4770      	bx	lr
 8013338:	684b      	ldr	r3, [r1, #4]
 801333a:	781b      	ldrb	r3, [r3, #0]
 801333c:	2b00      	cmp	r3, #0
 801333e:	f47f af7b 	bne.w	8013238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013342:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8013344:	4770      	bx	lr
 8013346:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013348:	4770      	bx	lr
 801334a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801334c:	4770      	bx	lr
 801334e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8013350:	4770      	bx	lr
 8013352:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013354:	4770      	bx	lr
 8013356:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8013358:	4770      	bx	lr

0801335a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801335a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801335e:	b087      	sub	sp, #28
 8013360:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013362:	9205      	str	r2, [sp, #20]
 8013364:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013368:	9101      	str	r1, [sp, #4]
 801336a:	9202      	str	r2, [sp, #8]
 801336c:	6841      	ldr	r1, [r0, #4]
 801336e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8013372:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013376:	fb01 2404 	mla	r4, r1, r4, r2
 801337a:	6802      	ldr	r2, [r0, #0]
 801337c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013380:	f8de 2000 	ldr.w	r2, [lr]
 8013384:	9203      	str	r2, [sp, #12]
 8013386:	f8de 2004 	ldr.w	r2, [lr, #4]
 801338a:	3204      	adds	r2, #4
 801338c:	9204      	str	r2, [sp, #16]
 801338e:	9a02      	ldr	r2, [sp, #8]
 8013390:	43d6      	mvns	r6, r2
 8013392:	b2f6      	uxtb	r6, r6
 8013394:	9a01      	ldr	r2, [sp, #4]
 8013396:	2a00      	cmp	r2, #0
 8013398:	dc03      	bgt.n	80133a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801339a:	9a05      	ldr	r2, [sp, #20]
 801339c:	2a00      	cmp	r2, #0
 801339e:	f340 8129 	ble.w	80135f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80133a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80133a4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80133a8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80133ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80133ae:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80133b2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80133b6:	2b00      	cmp	r3, #0
 80133b8:	dd0e      	ble.n	80133d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80133ba:	1408      	asrs	r0, r1, #16
 80133bc:	d405      	bmi.n	80133ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80133be:	4560      	cmp	r0, ip
 80133c0:	da03      	bge.n	80133ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80133c2:	1410      	asrs	r0, r2, #16
 80133c4:	d401      	bmi.n	80133ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80133c6:	42b8      	cmp	r0, r7
 80133c8:	db07      	blt.n	80133da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80133ca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80133cc:	3b01      	subs	r3, #1
 80133ce:	3402      	adds	r4, #2
 80133d0:	4401      	add	r1, r0
 80133d2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80133d4:	4402      	add	r2, r0
 80133d6:	e7ee      	b.n	80133b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80133d8:	d071      	beq.n	80134be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80133da:	1e58      	subs	r0, r3, #1
 80133dc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80133de:	fb05 1500 	mla	r5, r5, r0, r1
 80133e2:	142d      	asrs	r5, r5, #16
 80133e4:	d45f      	bmi.n	80134a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80133e6:	4565      	cmp	r5, ip
 80133e8:	da5d      	bge.n	80134a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80133ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80133ec:	fb05 2000 	mla	r0, r5, r0, r2
 80133f0:	1400      	asrs	r0, r0, #16
 80133f2:	d458      	bmi.n	80134a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80133f4:	42b8      	cmp	r0, r7
 80133f6:	da56      	bge.n	80134a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80133f8:	4699      	mov	r9, r3
 80133fa:	46a2      	mov	sl, r4
 80133fc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013400:	f1b9 0f00 	cmp.w	r9, #0
 8013404:	dd57      	ble.n	80134b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013406:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801340a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801340e:	9803      	ldr	r0, [sp, #12]
 8013410:	140d      	asrs	r5, r1, #16
 8013412:	f109 39ff 	add.w	r9, r9, #4294967295
 8013416:	fb07 000c 	mla	r0, r7, ip, r0
 801341a:	5d40      	ldrb	r0, [r0, r5]
 801341c:	9d04      	ldr	r5, [sp, #16]
 801341e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013422:	f8ba 5000 	ldrh.w	r5, [sl]
 8013426:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801342a:	122f      	asrs	r7, r5, #8
 801342c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013430:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013434:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013438:	00ed      	lsls	r5, r5, #3
 801343a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801343e:	fb17 f706 	smulbb	r7, r7, r6
 8013442:	b2ed      	uxtb	r5, r5
 8013444:	fb18 f806 	smulbb	r8, r8, r6
 8013448:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801344c:	10c7      	asrs	r7, r0, #3
 801344e:	fb15 f506 	smulbb	r5, r5, r6
 8013452:	00c0      	lsls	r0, r0, #3
 8013454:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013458:	fa1f fc8c 	uxth.w	ip, ip
 801345c:	b2c0      	uxtb	r0, r0
 801345e:	fb07 870b 	mla	r7, r7, fp, r8
 8013462:	fb00 500b 	mla	r0, r0, fp, r5
 8013466:	f10c 0501 	add.w	r5, ip, #1
 801346a:	b2bf      	uxth	r7, r7
 801346c:	b280      	uxth	r0, r0
 801346e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013472:	f107 0801 	add.w	r8, r7, #1
 8013476:	1c45      	adds	r5, r0, #1
 8013478:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801347c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013480:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013484:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013486:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801348a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801348e:	4401      	add	r1, r0
 8013490:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013494:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013496:	ea45 0c0c 	orr.w	ip, r5, ip
 801349a:	4402      	add	r2, r0
 801349c:	ea4c 0c08 	orr.w	ip, ip, r8
 80134a0:	f82a cb02 	strh.w	ip, [sl], #2
 80134a4:	e7ac      	b.n	8013400 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80134a6:	f04f 0800 	mov.w	r8, #0
 80134aa:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80134ae:	eb03 0008 	add.w	r0, r3, r8
 80134b2:	2800      	cmp	r0, #0
 80134b4:	dc41      	bgt.n	801353a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80134b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80134ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80134be:	9b01      	ldr	r3, [sp, #4]
 80134c0:	2b00      	cmp	r3, #0
 80134c2:	f340 8097 	ble.w	80135f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80134c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80134ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80134cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80134d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80134d4:	eef0 6a62 	vmov.f32	s13, s5
 80134d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80134dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80134e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80134e4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80134e8:	eef0 6a43 	vmov.f32	s13, s6
 80134ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80134f0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80134f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80134f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80134fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013500:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013504:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013508:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801350c:	ee12 2a90 	vmov	r2, s5
 8013510:	eef0 2a47 	vmov.f32	s5, s14
 8013514:	fb92 f3f3 	sdiv	r3, r2, r3
 8013518:	ee13 2a10 	vmov	r2, s6
 801351c:	9313      	str	r3, [sp, #76]	; 0x4c
 801351e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013520:	eeb0 3a67 	vmov.f32	s6, s15
 8013524:	fb92 f3f3 	sdiv	r3, r2, r3
 8013528:	9314      	str	r3, [sp, #80]	; 0x50
 801352a:	9b01      	ldr	r3, [sp, #4]
 801352c:	9a05      	ldr	r2, [sp, #20]
 801352e:	3b01      	subs	r3, #1
 8013530:	9301      	str	r3, [sp, #4]
 8013532:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013534:	bf08      	it	eq
 8013536:	4613      	moveq	r3, r2
 8013538:	e72c      	b.n	8013394 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801353a:	140f      	asrs	r7, r1, #16
 801353c:	d453      	bmi.n	80135e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801353e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013542:	42bd      	cmp	r5, r7
 8013544:	dd4f      	ble.n	80135e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013546:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801354a:	d44c      	bmi.n	80135e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801354c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013550:	4560      	cmp	r0, ip
 8013552:	dd48      	ble.n	80135e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013554:	9803      	ldr	r0, [sp, #12]
 8013556:	b22d      	sxth	r5, r5
 8013558:	fb0c 0505 	mla	r5, ip, r5, r0
 801355c:	5de8      	ldrb	r0, [r5, r7]
 801355e:	9d04      	ldr	r5, [sp, #16]
 8013560:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013564:	f06f 0501 	mvn.w	r5, #1
 8013568:	fb05 fb08 	mul.w	fp, r5, r8
 801356c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013570:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013574:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013578:	122f      	asrs	r7, r5, #8
 801357a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801357e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013582:	00ed      	lsls	r5, r5, #3
 8013584:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013588:	fb17 f706 	smulbb	r7, r7, r6
 801358c:	b2ed      	uxtb	r5, r5
 801358e:	fb19 f906 	smulbb	r9, r9, r6
 8013592:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013596:	10c7      	asrs	r7, r0, #3
 8013598:	fb15 f506 	smulbb	r5, r5, r6
 801359c:	00c0      	lsls	r0, r0, #3
 801359e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80135a2:	fa1f fc8c 	uxth.w	ip, ip
 80135a6:	b2c0      	uxtb	r0, r0
 80135a8:	fb07 970a 	mla	r7, r7, sl, r9
 80135ac:	fb00 500a 	mla	r0, r0, sl, r5
 80135b0:	f10c 0501 	add.w	r5, ip, #1
 80135b4:	b2bf      	uxth	r7, r7
 80135b6:	b280      	uxth	r0, r0
 80135b8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80135bc:	f107 0901 	add.w	r9, r7, #1
 80135c0:	1c45      	adds	r5, r0, #1
 80135c2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80135c6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80135ca:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80135ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80135d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80135d6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80135da:	ea45 0c0c 	orr.w	ip, r5, ip
 80135de:	ea4c 0c09 	orr.w	ip, ip, r9
 80135e2:	f824 c00b 	strh.w	ip, [r4, fp]
 80135e6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80135e8:	f108 38ff 	add.w	r8, r8, #4294967295
 80135ec:	4401      	add	r1, r0
 80135ee:	9814      	ldr	r0, [sp, #80]	; 0x50
 80135f0:	4402      	add	r2, r0
 80135f2:	e75c      	b.n	80134ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80135f4:	b007      	add	sp, #28
 80135f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080135fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80135fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135fe:	b085      	sub	sp, #20
 8013600:	4693      	mov	fp, r2
 8013602:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013606:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013608:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801360a:	6870      	ldr	r0, [r6, #4]
 801360c:	9100      	str	r1, [sp, #0]
 801360e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013612:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8013616:	fb00 2404 	mla	r4, r0, r4, r2
 801361a:	6832      	ldr	r2, [r6, #0]
 801361c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013620:	682a      	ldr	r2, [r5, #0]
 8013622:	9201      	str	r2, [sp, #4]
 8013624:	686a      	ldr	r2, [r5, #4]
 8013626:	3204      	adds	r2, #4
 8013628:	9202      	str	r2, [sp, #8]
 801362a:	9a00      	ldr	r2, [sp, #0]
 801362c:	2a00      	cmp	r2, #0
 801362e:	dc03      	bgt.n	8013638 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013630:	f1bb 0f00 	cmp.w	fp, #0
 8013634:	f340 80a0 	ble.w	8013778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013638:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801363a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801363e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013642:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013644:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013648:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801364c:	2b00      	cmp	r3, #0
 801364e:	dd0c      	ble.n	801366a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013650:	1406      	asrs	r6, r0, #16
 8013652:	d405      	bmi.n	8013660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013654:	454e      	cmp	r6, r9
 8013656:	da03      	bge.n	8013660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013658:	1416      	asrs	r6, r2, #16
 801365a:	d401      	bmi.n	8013660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801365c:	4546      	cmp	r6, r8
 801365e:	db05      	blt.n	801366c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013660:	4470      	add	r0, lr
 8013662:	4462      	add	r2, ip
 8013664:	3b01      	subs	r3, #1
 8013666:	3402      	adds	r4, #2
 8013668:	e7f0      	b.n	801364c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801366a:	d00f      	beq.n	801368c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801366c:	1e5e      	subs	r6, r3, #1
 801366e:	fb0e 0706 	mla	r7, lr, r6, r0
 8013672:	143f      	asrs	r7, r7, #16
 8013674:	d541      	bpl.n	80136fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013676:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801367a:	4698      	mov	r8, r3
 801367c:	9603      	str	r6, [sp, #12]
 801367e:	f1b8 0f00 	cmp.w	r8, #0
 8013682:	dc59      	bgt.n	8013738 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013684:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013688:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801368c:	9b00      	ldr	r3, [sp, #0]
 801368e:	2b00      	cmp	r3, #0
 8013690:	dd72      	ble.n	8013778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013692:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013696:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013698:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801369c:	eeb0 6a62 	vmov.f32	s12, s5
 80136a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80136a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80136a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80136ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80136b0:	eeb0 6a43 	vmov.f32	s12, s6
 80136b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80136b8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80136bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80136c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80136c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80136c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80136cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80136d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80136d4:	ee12 2a90 	vmov	r2, s5
 80136d8:	eef0 2a47 	vmov.f32	s5, s14
 80136dc:	fb92 fef3 	sdiv	lr, r2, r3
 80136e0:	ee13 2a10 	vmov	r2, s6
 80136e4:	eeb0 3a67 	vmov.f32	s6, s15
 80136e8:	fb92 fcf3 	sdiv	ip, r2, r3
 80136ec:	9b00      	ldr	r3, [sp, #0]
 80136ee:	3b01      	subs	r3, #1
 80136f0:	9300      	str	r3, [sp, #0]
 80136f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80136f4:	bf08      	it	eq
 80136f6:	465b      	moveq	r3, fp
 80136f8:	e797      	b.n	801362a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80136fa:	454f      	cmp	r7, r9
 80136fc:	dabb      	bge.n	8013676 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80136fe:	fb0c 2606 	mla	r6, ip, r6, r2
 8013702:	1436      	asrs	r6, r6, #16
 8013704:	d4b7      	bmi.n	8013676 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013706:	4546      	cmp	r6, r8
 8013708:	dab5      	bge.n	8013676 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801370a:	461e      	mov	r6, r3
 801370c:	46a0      	mov	r8, r4
 801370e:	2e00      	cmp	r6, #0
 8013710:	ddb8      	ble.n	8013684 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013712:	1417      	asrs	r7, r2, #16
 8013714:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013718:	9901      	ldr	r1, [sp, #4]
 801371a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801371e:	4462      	add	r2, ip
 8013720:	4470      	add	r0, lr
 8013722:	fb0a 1707 	mla	r7, sl, r7, r1
 8013726:	9902      	ldr	r1, [sp, #8]
 8013728:	3e01      	subs	r6, #1
 801372a:	f817 7009 	ldrb.w	r7, [r7, r9]
 801372e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013732:	f828 7b02 	strh.w	r7, [r8], #2
 8013736:	e7ea      	b.n	801370e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013738:	ea5f 4920 	movs.w	r9, r0, asr #16
 801373c:	d417      	bmi.n	801376e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801373e:	68ae      	ldr	r6, [r5, #8]
 8013740:	454e      	cmp	r6, r9
 8013742:	dd14      	ble.n	801376e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013744:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013748:	d411      	bmi.n	801376e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801374a:	68ef      	ldr	r7, [r5, #12]
 801374c:	4557      	cmp	r7, sl
 801374e:	dd0e      	ble.n	801376e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013750:	9f01      	ldr	r7, [sp, #4]
 8013752:	b236      	sxth	r6, r6
 8013754:	f06f 0101 	mvn.w	r1, #1
 8013758:	fb0a 7606 	mla	r6, sl, r6, r7
 801375c:	9f02      	ldr	r7, [sp, #8]
 801375e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013762:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013766:	fb01 f608 	mul.w	r6, r1, r8
 801376a:	9903      	ldr	r1, [sp, #12]
 801376c:	538f      	strh	r7, [r1, r6]
 801376e:	4470      	add	r0, lr
 8013770:	4462      	add	r2, ip
 8013772:	f108 38ff 	add.w	r8, r8, #4294967295
 8013776:	e782      	b.n	801367e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013778:	b005      	add	sp, #20
 801377a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801377e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801377e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013782:	b087      	sub	sp, #28
 8013784:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013786:	9205      	str	r2, [sp, #20]
 8013788:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801378c:	9102      	str	r1, [sp, #8]
 801378e:	9203      	str	r2, [sp, #12]
 8013790:	6861      	ldr	r1, [r4, #4]
 8013792:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013796:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801379a:	fb01 2000 	mla	r0, r1, r0, r2
 801379e:	6822      	ldr	r2, [r4, #0]
 80137a0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80137a4:	9200      	str	r2, [sp, #0]
 80137a6:	f8dc 2000 	ldr.w	r2, [ip]
 80137aa:	9204      	str	r2, [sp, #16]
 80137ac:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80137b0:	3204      	adds	r2, #4
 80137b2:	9201      	str	r2, [sp, #4]
 80137b4:	9a03      	ldr	r2, [sp, #12]
 80137b6:	43d5      	mvns	r5, r2
 80137b8:	b2ed      	uxtb	r5, r5
 80137ba:	9a02      	ldr	r2, [sp, #8]
 80137bc:	2a00      	cmp	r2, #0
 80137be:	dc03      	bgt.n	80137c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80137c0:	9a05      	ldr	r2, [sp, #20]
 80137c2:	2a00      	cmp	r2, #0
 80137c4:	f340 812c 	ble.w	8013a20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80137c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80137ca:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80137ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80137d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80137d4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80137d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80137dc:	2b00      	cmp	r3, #0
 80137de:	dd10      	ble.n	8013802 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80137e0:	140c      	asrs	r4, r1, #16
 80137e2:	d405      	bmi.n	80137f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80137e4:	4574      	cmp	r4, lr
 80137e6:	da03      	bge.n	80137f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80137e8:	1414      	asrs	r4, r2, #16
 80137ea:	d401      	bmi.n	80137f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80137ec:	42bc      	cmp	r4, r7
 80137ee:	db09      	blt.n	8013804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80137f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80137f2:	3b01      	subs	r3, #1
 80137f4:	9800      	ldr	r0, [sp, #0]
 80137f6:	4421      	add	r1, r4
 80137f8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80137fa:	3002      	adds	r0, #2
 80137fc:	4422      	add	r2, r4
 80137fe:	9000      	str	r0, [sp, #0]
 8013800:	e7ec      	b.n	80137dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013802:	d071      	beq.n	80138e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013804:	1e5c      	subs	r4, r3, #1
 8013806:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013808:	fb06 1604 	mla	r6, r6, r4, r1
 801380c:	1436      	asrs	r6, r6, #16
 801380e:	d45d      	bmi.n	80138cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013810:	4576      	cmp	r6, lr
 8013812:	da5b      	bge.n	80138cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013814:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8013816:	fb06 2404 	mla	r4, r6, r4, r2
 801381a:	1424      	asrs	r4, r4, #16
 801381c:	d456      	bmi.n	80138cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801381e:	42bc      	cmp	r4, r7
 8013820:	da54      	bge.n	80138cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013822:	4698      	mov	r8, r3
 8013824:	f8dd 9000 	ldr.w	r9, [sp]
 8013828:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801382c:	f1b8 0f00 	cmp.w	r8, #0
 8013830:	dd54      	ble.n	80138dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013832:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013836:	1414      	asrs	r4, r2, #16
 8013838:	9804      	ldr	r0, [sp, #16]
 801383a:	140e      	asrs	r6, r1, #16
 801383c:	f108 38ff 	add.w	r8, r8, #4294967295
 8013840:	fb07 0404 	mla	r4, r7, r4, r0
 8013844:	9801      	ldr	r0, [sp, #4]
 8013846:	f814 e006 	ldrb.w	lr, [r4, r6]
 801384a:	f8b9 4000 	ldrh.w	r4, [r9]
 801384e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013852:	1227      	asrs	r7, r4, #8
 8013854:	eb00 0b0e 	add.w	fp, r0, lr
 8013858:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801385c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013860:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013862:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013866:	f89b b001 	ldrb.w	fp, [fp, #1]
 801386a:	4401      	add	r1, r0
 801386c:	fb16 f60a 	smulbb	r6, r6, sl
 8013870:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013872:	fb1b fb0a 	smulbb	fp, fp, sl
 8013876:	fb07 6705 	mla	r7, r7, r5, r6
 801387a:	10e6      	asrs	r6, r4, #3
 801387c:	00e4      	lsls	r4, r4, #3
 801387e:	4402      	add	r2, r0
 8013880:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013884:	b2bf      	uxth	r7, r7
 8013886:	b2e4      	uxtb	r4, r4
 8013888:	fb06 b605 	mla	r6, r6, r5, fp
 801388c:	fb14 f405 	smulbb	r4, r4, r5
 8013890:	b2b6      	uxth	r6, r6
 8013892:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013896:	1c7c      	adds	r4, r7, #1
 8013898:	f106 0b01 	add.w	fp, r6, #1
 801389c:	fa1f fe8e 	uxth.w	lr, lr
 80138a0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80138a4:	f10e 0401 	add.w	r4, lr, #1
 80138a8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80138ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80138b0:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80138b4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80138b8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80138bc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80138c0:	4327      	orrs	r7, r4
 80138c2:	ea47 070b 	orr.w	r7, r7, fp
 80138c6:	f829 7b02 	strh.w	r7, [r9], #2
 80138ca:	e7af      	b.n	801382c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80138cc:	f04f 0e00 	mov.w	lr, #0
 80138d0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80138d4:	eb03 040e 	add.w	r4, r3, lr
 80138d8:	2c00      	cmp	r4, #0
 80138da:	dc43      	bgt.n	8013964 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80138dc:	9a00      	ldr	r2, [sp, #0]
 80138de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80138e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80138e6:	9300      	str	r3, [sp, #0]
 80138e8:	9b02      	ldr	r3, [sp, #8]
 80138ea:	2b00      	cmp	r3, #0
 80138ec:	f340 8098 	ble.w	8013a20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80138f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80138f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80138f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80138fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80138fe:	eef0 6a62 	vmov.f32	s13, s5
 8013902:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013906:	ee31 1a05 	vadd.f32	s2, s2, s10
 801390a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801390e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013912:	eef0 6a43 	vmov.f32	s13, s6
 8013916:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801391a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801391e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013922:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013926:	ee77 2a62 	vsub.f32	s5, s14, s5
 801392a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801392e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013932:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013936:	ee12 2a90 	vmov	r2, s5
 801393a:	eef0 2a47 	vmov.f32	s5, s14
 801393e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013942:	ee13 2a10 	vmov	r2, s6
 8013946:	9313      	str	r3, [sp, #76]	; 0x4c
 8013948:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801394a:	eeb0 3a67 	vmov.f32	s6, s15
 801394e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013952:	9314      	str	r3, [sp, #80]	; 0x50
 8013954:	9b02      	ldr	r3, [sp, #8]
 8013956:	9a05      	ldr	r2, [sp, #20]
 8013958:	3b01      	subs	r3, #1
 801395a:	9302      	str	r3, [sp, #8]
 801395c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801395e:	bf08      	it	eq
 8013960:	4613      	moveq	r3, r2
 8013962:	e72a      	b.n	80137ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013964:	140f      	asrs	r7, r1, #16
 8013966:	d454      	bmi.n	8013a12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013968:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801396c:	42be      	cmp	r6, r7
 801396e:	dd50      	ble.n	8013a12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013970:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013974:	d44d      	bmi.n	8013a12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013976:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801397a:	4544      	cmp	r4, r8
 801397c:	dd49      	ble.n	8013a12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801397e:	9c04      	ldr	r4, [sp, #16]
 8013980:	b236      	sxth	r6, r6
 8013982:	f06f 0001 	mvn.w	r0, #1
 8013986:	fb08 4606 	mla	r6, r8, r6, r4
 801398a:	9c01      	ldr	r4, [sp, #4]
 801398c:	fb00 fa0e 	mul.w	sl, r0, lr
 8013990:	9800      	ldr	r0, [sp, #0]
 8013992:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013996:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801399a:	eb04 0b08 	add.w	fp, r4, r8
 801399e:	f830 400a 	ldrh.w	r4, [r0, sl]
 80139a2:	9801      	ldr	r0, [sp, #4]
 80139a4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80139a8:	1227      	asrs	r7, r4, #8
 80139aa:	f89b b001 	ldrb.w	fp, [fp, #1]
 80139ae:	fb16 f609 	smulbb	r6, r6, r9
 80139b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80139b6:	f810 8008 	ldrb.w	r8, [r0, r8]
 80139ba:	fb1b fb09 	smulbb	fp, fp, r9
 80139be:	fb07 6705 	mla	r7, r7, r5, r6
 80139c2:	10e6      	asrs	r6, r4, #3
 80139c4:	00e4      	lsls	r4, r4, #3
 80139c6:	9800      	ldr	r0, [sp, #0]
 80139c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80139cc:	b2bf      	uxth	r7, r7
 80139ce:	b2e4      	uxtb	r4, r4
 80139d0:	fb06 b605 	mla	r6, r6, r5, fp
 80139d4:	fb14 f405 	smulbb	r4, r4, r5
 80139d8:	b2b6      	uxth	r6, r6
 80139da:	fb08 4809 	mla	r8, r8, r9, r4
 80139de:	1c7c      	adds	r4, r7, #1
 80139e0:	f106 0b01 	add.w	fp, r6, #1
 80139e4:	fa1f f888 	uxth.w	r8, r8
 80139e8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80139ec:	f108 0401 	add.w	r4, r8, #1
 80139f0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80139f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80139f8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80139fc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013a00:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013a04:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013a08:	4327      	orrs	r7, r4
 8013a0a:	ea47 070b 	orr.w	r7, r7, fp
 8013a0e:	f820 700a 	strh.w	r7, [r0, sl]
 8013a12:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013a14:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013a18:	4401      	add	r1, r0
 8013a1a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013a1c:	4402      	add	r2, r0
 8013a1e:	e759      	b.n	80138d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013a20:	b007      	add	sp, #28
 8013a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013a28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a2c:	b085      	sub	sp, #20
 8013a2e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013a32:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013a34:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013a36:	9203      	str	r2, [sp, #12]
 8013a38:	6870      	ldr	r0, [r6, #4]
 8013a3a:	686f      	ldr	r7, [r5, #4]
 8013a3c:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8013a40:	3704      	adds	r7, #4
 8013a42:	9101      	str	r1, [sp, #4]
 8013a44:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013a48:	fb00 2404 	mla	r4, r0, r4, r2
 8013a4c:	6832      	ldr	r2, [r6, #0]
 8013a4e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013a52:	682a      	ldr	r2, [r5, #0]
 8013a54:	9202      	str	r2, [sp, #8]
 8013a56:	9a01      	ldr	r2, [sp, #4]
 8013a58:	2a00      	cmp	r2, #0
 8013a5a:	dc03      	bgt.n	8013a64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013a5c:	9a03      	ldr	r2, [sp, #12]
 8013a5e:	2a00      	cmp	r2, #0
 8013a60:	f340 80cc 	ble.w	8013bfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013a64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013a66:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013a6a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013a6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013a70:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013a74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013a78:	2b00      	cmp	r3, #0
 8013a7a:	dd0d      	ble.n	8013a98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013a7c:	1406      	asrs	r6, r0, #16
 8013a7e:	d405      	bmi.n	8013a8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013a80:	454e      	cmp	r6, r9
 8013a82:	da03      	bge.n	8013a8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013a84:	1416      	asrs	r6, r2, #16
 8013a86:	d401      	bmi.n	8013a8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013a88:	4546      	cmp	r6, r8
 8013a8a:	db06      	blt.n	8013a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013a8c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013a8e:	4460      	add	r0, ip
 8013a90:	3b01      	subs	r3, #1
 8013a92:	3402      	adds	r4, #2
 8013a94:	4432      	add	r2, r6
 8013a96:	e7ef      	b.n	8013a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013a98:	d00f      	beq.n	8013aba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013a9a:	1e5e      	subs	r6, r3, #1
 8013a9c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013aa0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013aa4:	d543      	bpl.n	8013b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013aa6:	4698      	mov	r8, r3
 8013aa8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013aac:	f1b8 0f00 	cmp.w	r8, #0
 8013ab0:	dc71      	bgt.n	8013b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013ab2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013ab6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013aba:	9b01      	ldr	r3, [sp, #4]
 8013abc:	2b00      	cmp	r3, #0
 8013abe:	f340 809d 	ble.w	8013bfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013ac2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013ac6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ac8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013acc:	eeb0 6a62 	vmov.f32	s12, s5
 8013ad0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ad4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013ad8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013adc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013ae0:	eeb0 6a43 	vmov.f32	s12, s6
 8013ae4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ae8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013aec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013af0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013af4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013af8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013afc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013b04:	ee12 2a90 	vmov	r2, s5
 8013b08:	eef0 2a47 	vmov.f32	s5, s14
 8013b0c:	fb92 fcf3 	sdiv	ip, r2, r3
 8013b10:	ee13 2a10 	vmov	r2, s6
 8013b14:	eeb0 3a67 	vmov.f32	s6, s15
 8013b18:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b1c:	9312      	str	r3, [sp, #72]	; 0x48
 8013b1e:	9b01      	ldr	r3, [sp, #4]
 8013b20:	9a03      	ldr	r2, [sp, #12]
 8013b22:	3b01      	subs	r3, #1
 8013b24:	9301      	str	r3, [sp, #4]
 8013b26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b28:	bf08      	it	eq
 8013b2a:	4613      	moveq	r3, r2
 8013b2c:	e793      	b.n	8013a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013b2e:	45ce      	cmp	lr, r9
 8013b30:	dab9      	bge.n	8013aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013b32:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013b34:	fb01 2606 	mla	r6, r1, r6, r2
 8013b38:	1436      	asrs	r6, r6, #16
 8013b3a:	d4b4      	bmi.n	8013aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013b3c:	4546      	cmp	r6, r8
 8013b3e:	dab2      	bge.n	8013aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013b40:	4698      	mov	r8, r3
 8013b42:	46a2      	mov	sl, r4
 8013b44:	f1b8 0f00 	cmp.w	r8, #0
 8013b48:	ddb3      	ble.n	8013ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013b4a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013b4e:	1416      	asrs	r6, r2, #16
 8013b50:	9902      	ldr	r1, [sp, #8]
 8013b52:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013b56:	f108 38ff 	add.w	r8, r8, #4294967295
 8013b5a:	4460      	add	r0, ip
 8013b5c:	fb09 1606 	mla	r6, r9, r6, r1
 8013b60:	4928      	ldr	r1, [pc, #160]	; (8013c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013b62:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013b66:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013b6a:	eb07 0b0e 	add.w	fp, r7, lr
 8013b6e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013b72:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8013b76:	00f6      	lsls	r6, r6, #3
 8013b78:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013b7c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013b7e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013b82:	440a      	add	r2, r1
 8013b84:	ea49 0606 	orr.w	r6, r9, r6
 8013b88:	f817 900e 	ldrb.w	r9, [r7, lr]
 8013b8c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013b90:	f82a 6b02 	strh.w	r6, [sl], #2
 8013b94:	e7d6      	b.n	8013b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013b96:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013b9a:	d429      	bmi.n	8013bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013b9c:	68ae      	ldr	r6, [r5, #8]
 8013b9e:	454e      	cmp	r6, r9
 8013ba0:	dd26      	ble.n	8013bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013ba2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8013ba6:	d423      	bmi.n	8013bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013ba8:	68e9      	ldr	r1, [r5, #12]
 8013baa:	4559      	cmp	r1, fp
 8013bac:	dd20      	ble.n	8013bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013bae:	fa0f fe86 	sxth.w	lr, r6
 8013bb2:	9902      	ldr	r1, [sp, #8]
 8013bb4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8013bb8:	f06f 0101 	mvn.w	r1, #1
 8013bbc:	f81e e009 	ldrb.w	lr, [lr, r9]
 8013bc0:	fb01 f908 	mul.w	r9, r1, r8
 8013bc4:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8013bc8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013bcc:	eb07 060e 	add.w	r6, r7, lr
 8013bd0:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013bd4:	7876      	ldrb	r6, [r6, #1]
 8013bd6:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8013bda:	00f6      	lsls	r6, r6, #3
 8013bdc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013be0:	ea4b 0606 	orr.w	r6, fp, r6
 8013be4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8013be8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013bec:	f82a 6009 	strh.w	r6, [sl, r9]
 8013bf0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013bf2:	4460      	add	r0, ip
 8013bf4:	f108 38ff 	add.w	r8, r8, #4294967295
 8013bf8:	440a      	add	r2, r1
 8013bfa:	e757      	b.n	8013aac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013bfc:	b005      	add	sp, #20
 8013bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c02:	bf00      	nop
 8013c04:	fffff800 	.word	0xfffff800

08013c08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c0c:	b087      	sub	sp, #28
 8013c0e:	468b      	mov	fp, r1
 8013c10:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013c14:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013c16:	9204      	str	r2, [sp, #16]
 8013c18:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013c1c:	6841      	ldr	r1, [r0, #4]
 8013c1e:	9205      	str	r2, [sp, #20]
 8013c20:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013c24:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013c28:	fb01 2404 	mla	r4, r1, r4, r2
 8013c2c:	6802      	ldr	r2, [r0, #0]
 8013c2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013c32:	f8dc 2000 	ldr.w	r2, [ip]
 8013c36:	9201      	str	r2, [sp, #4]
 8013c38:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013c3c:	3204      	adds	r2, #4
 8013c3e:	9202      	str	r2, [sp, #8]
 8013c40:	f1bb 0f00 	cmp.w	fp, #0
 8013c44:	dc03      	bgt.n	8013c4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013c46:	9a04      	ldr	r2, [sp, #16]
 8013c48:	2a00      	cmp	r2, #0
 8013c4a:	f340 8138 	ble.w	8013ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013c4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013c50:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013c54:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013c58:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013c5a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013c5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013c62:	2b00      	cmp	r3, #0
 8013c64:	dd0e      	ble.n	8013c84 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013c66:	1402      	asrs	r2, r0, #16
 8013c68:	d405      	bmi.n	8013c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013c6a:	42ba      	cmp	r2, r7
 8013c6c:	da03      	bge.n	8013c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013c6e:	140a      	asrs	r2, r1, #16
 8013c70:	d401      	bmi.n	8013c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013c72:	42b2      	cmp	r2, r6
 8013c74:	db07      	blt.n	8013c86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013c76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013c78:	3b01      	subs	r3, #1
 8013c7a:	3402      	adds	r4, #2
 8013c7c:	4410      	add	r0, r2
 8013c7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013c80:	4411      	add	r1, r2
 8013c82:	e7ee      	b.n	8013c62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013c84:	d019      	beq.n	8013cba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013c86:	1e5a      	subs	r2, r3, #1
 8013c88:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013c8a:	fb05 0502 	mla	r5, r5, r2, r0
 8013c8e:	142d      	asrs	r5, r5, #16
 8013c90:	d409      	bmi.n	8013ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013c92:	42bd      	cmp	r5, r7
 8013c94:	da07      	bge.n	8013ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013c96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013c98:	fb05 1202 	mla	r2, r5, r2, r1
 8013c9c:	1412      	asrs	r2, r2, #16
 8013c9e:	d402      	bmi.n	8013ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013ca0:	42b2      	cmp	r2, r6
 8013ca2:	f2c0 80ac 	blt.w	8013dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8013ca6:	f04f 0e00 	mov.w	lr, #0
 8013caa:	eb03 020e 	add.w	r2, r3, lr
 8013cae:	2a00      	cmp	r2, #0
 8013cb0:	dc3e      	bgt.n	8013d30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013cb2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013cb6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013cba:	f1bb 0f00 	cmp.w	fp, #0
 8013cbe:	f340 80fe 	ble.w	8013ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013cc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013cc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013cc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ccc:	f1bb 0b01 	subs.w	fp, fp, #1
 8013cd0:	eeb0 6a62 	vmov.f32	s12, s5
 8013cd4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013cd8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013cdc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ce0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013ce4:	eeb0 6a43 	vmov.f32	s12, s6
 8013ce8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013cec:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013cf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013cf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013cf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013cfc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d08:	ee12 2a90 	vmov	r2, s5
 8013d0c:	eef0 2a47 	vmov.f32	s5, s14
 8013d10:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d14:	ee13 2a10 	vmov	r2, s6
 8013d18:	9313      	str	r3, [sp, #76]	; 0x4c
 8013d1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d1c:	eeb0 3a67 	vmov.f32	s6, s15
 8013d20:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d24:	9a04      	ldr	r2, [sp, #16]
 8013d26:	9314      	str	r3, [sp, #80]	; 0x50
 8013d28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d2a:	bf08      	it	eq
 8013d2c:	4613      	moveq	r3, r2
 8013d2e:	e787      	b.n	8013c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013d30:	1406      	asrs	r6, r0, #16
 8013d32:	d45d      	bmi.n	8013df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013d34:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013d38:	42b5      	cmp	r5, r6
 8013d3a:	dd59      	ble.n	8013df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013d3c:	140f      	asrs	r7, r1, #16
 8013d3e:	d457      	bmi.n	8013df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013d40:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013d44:	42ba      	cmp	r2, r7
 8013d46:	dd53      	ble.n	8013df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013d48:	9a01      	ldr	r2, [sp, #4]
 8013d4a:	b22d      	sxth	r5, r5
 8013d4c:	fb07 2505 	mla	r5, r7, r5, r2
 8013d50:	5daa      	ldrb	r2, [r5, r6]
 8013d52:	9d02      	ldr	r5, [sp, #8]
 8013d54:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013d58:	0e2e      	lsrs	r6, r5, #24
 8013d5a:	d049      	beq.n	8013df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013d5c:	f06f 0201 	mvn.w	r2, #1
 8013d60:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013d64:	fb02 f20e 	mul.w	r2, r2, lr
 8013d68:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013d6c:	9203      	str	r2, [sp, #12]
 8013d6e:	9a05      	ldr	r2, [sp, #20]
 8013d70:	ea4f 2728 	mov.w	r7, r8, asr #8
 8013d74:	4356      	muls	r6, r2
 8013d76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013d7a:	1c72      	adds	r2, r6, #1
 8013d7c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013d80:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013d84:	b2ed      	uxtb	r5, r5
 8013d86:	1212      	asrs	r2, r2, #8
 8013d88:	fa1f f982 	uxth.w	r9, r2
 8013d8c:	43d2      	mvns	r2, r2
 8013d8e:	fb16 f609 	smulbb	r6, r6, r9
 8013d92:	b2d2      	uxtb	r2, r2
 8013d94:	fb15 f509 	smulbb	r5, r5, r9
 8013d98:	fb07 6702 	mla	r7, r7, r2, r6
 8013d9c:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013da0:	fb1a fa09 	smulbb	sl, sl, r9
 8013da4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013da8:	b2bf      	uxth	r7, r7
 8013daa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013dae:	fa5f f888 	uxtb.w	r8, r8
 8013db2:	fb06 a602 	mla	r6, r6, r2, sl
 8013db6:	fb08 5502 	mla	r5, r8, r2, r5
 8013dba:	1c7a      	adds	r2, r7, #1
 8013dbc:	b2b6      	uxth	r6, r6
 8013dbe:	b2ad      	uxth	r5, r5
 8013dc0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013dc4:	9a03      	ldr	r2, [sp, #12]
 8013dc6:	f105 0a01 	add.w	sl, r5, #1
 8013dca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013dce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013dd2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013dd6:	ea4a 0707 	orr.w	r7, sl, r7
 8013dda:	f106 0a01 	add.w	sl, r6, #1
 8013dde:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013de2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013de6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013dea:	ea47 070a 	orr.w	r7, r7, sl
 8013dee:	52a7      	strh	r7, [r4, r2]
 8013df0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013df2:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013df6:	4410      	add	r0, r2
 8013df8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013dfa:	4411      	add	r1, r2
 8013dfc:	e755      	b.n	8013caa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013dfe:	f04f 0800 	mov.w	r8, #0
 8013e02:	eba3 0208 	sub.w	r2, r3, r8
 8013e06:	2a00      	cmp	r2, #0
 8013e08:	f77f af53 	ble.w	8013cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013e0c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013e10:	140a      	asrs	r2, r1, #16
 8013e12:	9f01      	ldr	r7, [sp, #4]
 8013e14:	1405      	asrs	r5, r0, #16
 8013e16:	fb06 7202 	mla	r2, r6, r2, r7
 8013e1a:	5d52      	ldrb	r2, [r2, r5]
 8013e1c:	9d02      	ldr	r5, [sp, #8]
 8013e1e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013e22:	0e2e      	lsrs	r6, r5, #24
 8013e24:	d044      	beq.n	8013eb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8013e26:	9a05      	ldr	r2, [sp, #20]
 8013e28:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013e2c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013e30:	4356      	muls	r6, r2
 8013e32:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013e36:	1c72      	adds	r2, r6, #1
 8013e38:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013e3c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013e40:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013e44:	b2ed      	uxtb	r5, r5
 8013e46:	1212      	asrs	r2, r2, #8
 8013e48:	fa1f f982 	uxth.w	r9, r2
 8013e4c:	43d2      	mvns	r2, r2
 8013e4e:	fb16 f609 	smulbb	r6, r6, r9
 8013e52:	b2d2      	uxtb	r2, r2
 8013e54:	fb15 f509 	smulbb	r5, r5, r9
 8013e58:	fb07 6702 	mla	r7, r7, r2, r6
 8013e5c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013e60:	fb1a fa09 	smulbb	sl, sl, r9
 8013e64:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013e68:	b2bf      	uxth	r7, r7
 8013e6a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013e6e:	fa5f fe8e 	uxtb.w	lr, lr
 8013e72:	fb06 a602 	mla	r6, r6, r2, sl
 8013e76:	fb0e 5502 	mla	r5, lr, r2, r5
 8013e7a:	1c7a      	adds	r2, r7, #1
 8013e7c:	b2b6      	uxth	r6, r6
 8013e7e:	b2ad      	uxth	r5, r5
 8013e80:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013e84:	f105 0a01 	add.w	sl, r5, #1
 8013e88:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013e8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013e90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e94:	ea4a 0707 	orr.w	r7, sl, r7
 8013e98:	f106 0a01 	add.w	sl, r6, #1
 8013e9c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013ea0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013ea4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013ea8:	ea47 070a 	orr.w	r7, r7, sl
 8013eac:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013eb0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013eb2:	f108 0801 	add.w	r8, r8, #1
 8013eb6:	4410      	add	r0, r2
 8013eb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013eba:	4411      	add	r1, r2
 8013ebc:	e7a1      	b.n	8013e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8013ebe:	b007      	add	sp, #28
 8013ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013ec4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ec8:	b085      	sub	sp, #20
 8013eca:	468b      	mov	fp, r1
 8013ecc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013ed0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013ed2:	9203      	str	r2, [sp, #12]
 8013ed4:	6841      	ldr	r1, [r0, #4]
 8013ed6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8013eda:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013ede:	fb01 2404 	mla	r4, r1, r4, r2
 8013ee2:	6802      	ldr	r2, [r0, #0]
 8013ee4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ee8:	f8de 2000 	ldr.w	r2, [lr]
 8013eec:	9200      	str	r2, [sp, #0]
 8013eee:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013ef2:	3204      	adds	r2, #4
 8013ef4:	9201      	str	r2, [sp, #4]
 8013ef6:	f1bb 0f00 	cmp.w	fp, #0
 8013efa:	dc03      	bgt.n	8013f04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013efc:	9a03      	ldr	r2, [sp, #12]
 8013efe:	2a00      	cmp	r2, #0
 8013f00:	f340 8153 	ble.w	80141aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013f04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013f06:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013f0a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013f0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f10:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013f14:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013f18:	2b00      	cmp	r3, #0
 8013f1a:	dd0e      	ble.n	8013f3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013f1c:	1408      	asrs	r0, r1, #16
 8013f1e:	d405      	bmi.n	8013f2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013f20:	42b8      	cmp	r0, r7
 8013f22:	da03      	bge.n	8013f2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013f24:	1410      	asrs	r0, r2, #16
 8013f26:	d401      	bmi.n	8013f2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013f28:	42b0      	cmp	r0, r6
 8013f2a:	db07      	blt.n	8013f3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013f2c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013f2e:	3b01      	subs	r3, #1
 8013f30:	3402      	adds	r4, #2
 8013f32:	4401      	add	r1, r0
 8013f34:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013f36:	4402      	add	r2, r0
 8013f38:	e7ee      	b.n	8013f18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013f3a:	d017      	beq.n	8013f6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013f3c:	1e58      	subs	r0, r3, #1
 8013f3e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013f40:	fb05 1500 	mla	r5, r5, r0, r1
 8013f44:	142d      	asrs	r5, r5, #16
 8013f46:	d409      	bmi.n	8013f5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013f48:	42bd      	cmp	r5, r7
 8013f4a:	da07      	bge.n	8013f5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013f4c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013f4e:	fb05 2000 	mla	r0, r5, r0, r2
 8013f52:	1400      	asrs	r0, r0, #16
 8013f54:	d402      	bmi.n	8013f5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013f56:	42b0      	cmp	r0, r6
 8013f58:	f2c0 80bc 	blt.w	80140d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013f5c:	2600      	movs	r6, #0
 8013f5e:	1998      	adds	r0, r3, r6
 8013f60:	2800      	cmp	r0, #0
 8013f62:	dc3e      	bgt.n	8013fe2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013f64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013f6c:	f1bb 0f00 	cmp.w	fp, #0
 8013f70:	f340 811b 	ble.w	80141aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013f74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013f78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013f7e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013f82:	eeb0 6a62 	vmov.f32	s12, s5
 8013f86:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013f8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013f8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f92:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013f96:	eeb0 6a43 	vmov.f32	s12, s6
 8013f9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f9e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013fa2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013fa6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013faa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013fae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013fb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013fb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013fba:	ee12 2a90 	vmov	r2, s5
 8013fbe:	eef0 2a47 	vmov.f32	s5, s14
 8013fc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013fc6:	ee13 2a10 	vmov	r2, s6
 8013fca:	9311      	str	r3, [sp, #68]	; 0x44
 8013fcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fce:	eeb0 3a67 	vmov.f32	s6, s15
 8013fd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013fd6:	9a03      	ldr	r2, [sp, #12]
 8013fd8:	9312      	str	r3, [sp, #72]	; 0x48
 8013fda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fdc:	bf08      	it	eq
 8013fde:	4613      	moveq	r3, r2
 8013fe0:	e789      	b.n	8013ef6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013fe2:	140f      	asrs	r7, r1, #16
 8013fe4:	d426      	bmi.n	8014034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013fe6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013fea:	42bd      	cmp	r5, r7
 8013fec:	dd22      	ble.n	8014034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013fee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013ff2:	d41f      	bmi.n	8014034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013ff4:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013ff8:	4560      	cmp	r0, ip
 8013ffa:	dd1b      	ble.n	8014034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013ffc:	9800      	ldr	r0, [sp, #0]
 8013ffe:	b22d      	sxth	r5, r5
 8014000:	fb0c 0505 	mla	r5, ip, r5, r0
 8014004:	5de8      	ldrb	r0, [r5, r7]
 8014006:	9d01      	ldr	r5, [sp, #4]
 8014008:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801400c:	0e07      	lsrs	r7, r0, #24
 801400e:	2fff      	cmp	r7, #255	; 0xff
 8014010:	d116      	bne.n	8014040 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014012:	f06f 0501 	mvn.w	r5, #1
 8014016:	fb05 f706 	mul.w	r7, r5, r6
 801401a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801401e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014022:	0945      	lsrs	r5, r0, #5
 8014024:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014028:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801402c:	ea4c 0505 	orr.w	r5, ip, r5
 8014030:	4305      	orrs	r5, r0
 8014032:	53e5      	strh	r5, [r4, r7]
 8014034:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014036:	3e01      	subs	r6, #1
 8014038:	4401      	add	r1, r0
 801403a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801403c:	4402      	add	r2, r0
 801403e:	e78e      	b.n	8013f5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014040:	b2fd      	uxtb	r5, r7
 8014042:	2f00      	cmp	r7, #0
 8014044:	d0f6      	beq.n	8014034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014046:	f06f 0701 	mvn.w	r7, #1
 801404a:	fa1f f985 	uxth.w	r9, r5
 801404e:	43ed      	mvns	r5, r5
 8014050:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014054:	4377      	muls	r7, r6
 8014056:	fb1a fa09 	smulbb	sl, sl, r9
 801405a:	b2ed      	uxtb	r5, r5
 801405c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014060:	9702      	str	r7, [sp, #8]
 8014062:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014066:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801406a:	fb17 f709 	smulbb	r7, r7, r9
 801406e:	b2c0      	uxtb	r0, r0
 8014070:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014074:	fb10 f009 	smulbb	r0, r0, r9
 8014078:	fb0c 7c05 	mla	ip, ip, r5, r7
 801407c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014080:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014084:	fa1f fc8c 	uxth.w	ip, ip
 8014088:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801408c:	fa5f f888 	uxtb.w	r8, r8
 8014090:	fb07 a705 	mla	r7, r7, r5, sl
 8014094:	fb08 0005 	mla	r0, r8, r5, r0
 8014098:	f10c 0501 	add.w	r5, ip, #1
 801409c:	b2bf      	uxth	r7, r7
 801409e:	b280      	uxth	r0, r0
 80140a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80140a4:	f100 0a01 	add.w	sl, r0, #1
 80140a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80140ac:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80140b0:	9802      	ldr	r0, [sp, #8]
 80140b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80140b6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80140ba:	f107 0a01 	add.w	sl, r7, #1
 80140be:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80140c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80140c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80140ca:	ea4c 0c0a 	orr.w	ip, ip, sl
 80140ce:	f824 c000 	strh.w	ip, [r4, r0]
 80140d2:	e7af      	b.n	8014034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80140d4:	f04f 0800 	mov.w	r8, #0
 80140d8:	eba3 0008 	sub.w	r0, r3, r8
 80140dc:	2800      	cmp	r0, #0
 80140de:	f77f af41 	ble.w	8013f64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80140e2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80140e6:	1410      	asrs	r0, r2, #16
 80140e8:	9f00      	ldr	r7, [sp, #0]
 80140ea:	140d      	asrs	r5, r1, #16
 80140ec:	fb06 7000 	mla	r0, r6, r0, r7
 80140f0:	5d40      	ldrb	r0, [r0, r5]
 80140f2:	9d01      	ldr	r5, [sp, #4]
 80140f4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80140f8:	0e2e      	lsrs	r6, r5, #24
 80140fa:	2eff      	cmp	r6, #255	; 0xff
 80140fc:	d112      	bne.n	8014124 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80140fe:	482c      	ldr	r0, [pc, #176]	; (80141b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014100:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014104:	0968      	lsrs	r0, r5, #5
 8014106:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801410a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801410e:	4330      	orrs	r0, r6
 8014110:	4328      	orrs	r0, r5
 8014112:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014116:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014118:	f108 0801 	add.w	r8, r8, #1
 801411c:	4401      	add	r1, r0
 801411e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014120:	4402      	add	r2, r0
 8014122:	e7d9      	b.n	80140d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014124:	b2f0      	uxtb	r0, r6
 8014126:	2e00      	cmp	r6, #0
 8014128:	d0f5      	beq.n	8014116 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801412a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801412e:	fa1f f980 	uxth.w	r9, r0
 8014132:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014136:	43c0      	mvns	r0, r0
 8014138:	ea4f 272c 	mov.w	r7, ip, asr #8
 801413c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014140:	fb16 f609 	smulbb	r6, r6, r9
 8014144:	b2c0      	uxtb	r0, r0
 8014146:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801414a:	b2ed      	uxtb	r5, r5
 801414c:	fb1a fa09 	smulbb	sl, sl, r9
 8014150:	fb07 6700 	mla	r7, r7, r0, r6
 8014154:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014158:	fb15 f509 	smulbb	r5, r5, r9
 801415c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014160:	b2bf      	uxth	r7, r7
 8014162:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014166:	fa5f fc8c 	uxtb.w	ip, ip
 801416a:	fb06 a600 	mla	r6, r6, r0, sl
 801416e:	fb0c 5500 	mla	r5, ip, r0, r5
 8014172:	1c78      	adds	r0, r7, #1
 8014174:	b2b6      	uxth	r6, r6
 8014176:	b2ad      	uxth	r5, r5
 8014178:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801417c:	f105 0a01 	add.w	sl, r5, #1
 8014180:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014184:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014188:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801418c:	ea4a 0707 	orr.w	r7, sl, r7
 8014190:	f106 0a01 	add.w	sl, r6, #1
 8014194:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014198:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801419c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80141a0:	ea47 070a 	orr.w	r7, r7, sl
 80141a4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80141a8:	e7b5      	b.n	8014116 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80141aa:	b005      	add	sp, #20
 80141ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141b0:	fffff800 	.word	0xfffff800

080141b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80141b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141b8:	b087      	sub	sp, #28
 80141ba:	468b      	mov	fp, r1
 80141bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80141c0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80141c2:	9204      	str	r2, [sp, #16]
 80141c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80141c8:	6861      	ldr	r1, [r4, #4]
 80141ca:	9205      	str	r2, [sp, #20]
 80141cc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80141d0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80141d4:	fb01 2000 	mla	r0, r1, r0, r2
 80141d8:	6822      	ldr	r2, [r4, #0]
 80141da:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80141de:	f8de 2000 	ldr.w	r2, [lr]
 80141e2:	9201      	str	r2, [sp, #4]
 80141e4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80141e8:	9202      	str	r2, [sp, #8]
 80141ea:	f1bb 0f00 	cmp.w	fp, #0
 80141ee:	dc03      	bgt.n	80141f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80141f0:	9a04      	ldr	r2, [sp, #16]
 80141f2:	2a00      	cmp	r2, #0
 80141f4:	f340 8142 	ble.w	801447c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80141f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80141fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80141fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014202:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014204:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014208:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801420c:	2b00      	cmp	r3, #0
 801420e:	dd0e      	ble.n	801422e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014210:	140c      	asrs	r4, r1, #16
 8014212:	d405      	bmi.n	8014220 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014214:	42bc      	cmp	r4, r7
 8014216:	da03      	bge.n	8014220 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014218:	1414      	asrs	r4, r2, #16
 801421a:	d401      	bmi.n	8014220 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801421c:	42b4      	cmp	r4, r6
 801421e:	db07      	blt.n	8014230 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014220:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014222:	3b01      	subs	r3, #1
 8014224:	3002      	adds	r0, #2
 8014226:	4421      	add	r1, r4
 8014228:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801422a:	4422      	add	r2, r4
 801422c:	e7ee      	b.n	801420c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801422e:	d019      	beq.n	8014264 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014230:	1e5c      	subs	r4, r3, #1
 8014232:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014234:	fb05 1504 	mla	r5, r5, r4, r1
 8014238:	142d      	asrs	r5, r5, #16
 801423a:	d409      	bmi.n	8014250 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801423c:	42bd      	cmp	r5, r7
 801423e:	da07      	bge.n	8014250 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014240:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014242:	fb05 2404 	mla	r4, r5, r4, r2
 8014246:	1424      	asrs	r4, r4, #16
 8014248:	d402      	bmi.n	8014250 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801424a:	42b4      	cmp	r4, r6
 801424c:	f2c0 80b1 	blt.w	80143b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014250:	f04f 0800 	mov.w	r8, #0
 8014254:	eb03 0408 	add.w	r4, r3, r8
 8014258:	2c00      	cmp	r4, #0
 801425a:	dc3e      	bgt.n	80142da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801425c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014260:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014264:	f1bb 0f00 	cmp.w	fp, #0
 8014268:	f340 8108 	ble.w	801447c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801426c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014270:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014272:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014276:	f1bb 0b01 	subs.w	fp, fp, #1
 801427a:	eeb0 6a62 	vmov.f32	s12, s5
 801427e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014282:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014286:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801428a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801428e:	eeb0 6a43 	vmov.f32	s12, s6
 8014292:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014296:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801429a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801429e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80142a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80142a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80142aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80142ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80142b2:	ee12 2a90 	vmov	r2, s5
 80142b6:	eef0 2a47 	vmov.f32	s5, s14
 80142ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80142be:	ee13 2a10 	vmov	r2, s6
 80142c2:	9313      	str	r3, [sp, #76]	; 0x4c
 80142c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142c6:	eeb0 3a67 	vmov.f32	s6, s15
 80142ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80142ce:	9a04      	ldr	r2, [sp, #16]
 80142d0:	9314      	str	r3, [sp, #80]	; 0x50
 80142d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142d4:	bf08      	it	eq
 80142d6:	4613      	moveq	r3, r2
 80142d8:	e787      	b.n	80141ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80142da:	140e      	asrs	r6, r1, #16
 80142dc:	d462      	bmi.n	80143a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80142de:	f8de 5008 	ldr.w	r5, [lr, #8]
 80142e2:	42b5      	cmp	r5, r6
 80142e4:	dd5e      	ble.n	80143a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80142e6:	1417      	asrs	r7, r2, #16
 80142e8:	d45c      	bmi.n	80143a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80142ea:	f8de 400c 	ldr.w	r4, [lr, #12]
 80142ee:	42bc      	cmp	r4, r7
 80142f0:	dd58      	ble.n	80143a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80142f2:	b22d      	sxth	r5, r5
 80142f4:	9c02      	ldr	r4, [sp, #8]
 80142f6:	fb07 6505 	mla	r5, r7, r5, r6
 80142fa:	5d66      	ldrb	r6, [r4, r5]
 80142fc:	2e00      	cmp	r6, #0
 80142fe:	d051      	beq.n	80143a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014300:	9c01      	ldr	r4, [sp, #4]
 8014302:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014306:	f06f 0401 	mvn.w	r4, #1
 801430a:	fb04 f408 	mul.w	r4, r4, r8
 801430e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014312:	5b05      	ldrh	r5, [r0, r4]
 8014314:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014318:	9403      	str	r4, [sp, #12]
 801431a:	9c05      	ldr	r4, [sp, #20]
 801431c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014320:	4366      	muls	r6, r4
 8014322:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014326:	1c74      	adds	r4, r6, #1
 8014328:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801432c:	122e      	asrs	r6, r5, #8
 801432e:	1224      	asrs	r4, r4, #8
 8014330:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014334:	00ed      	lsls	r5, r5, #3
 8014336:	b2a7      	uxth	r7, r4
 8014338:	43e4      	mvns	r4, r4
 801433a:	b2ed      	uxtb	r5, r5
 801433c:	b2e4      	uxtb	r4, r4
 801433e:	fb16 f604 	smulbb	r6, r6, r4
 8014342:	fb15 f504 	smulbb	r5, r5, r4
 8014346:	fb0c 6c07 	mla	ip, ip, r7, r6
 801434a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801434e:	fb1a fa04 	smulbb	sl, sl, r4
 8014352:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014356:	fa1f fc8c 	uxth.w	ip, ip
 801435a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801435e:	fa5f f989 	uxtb.w	r9, r9
 8014362:	fb06 a607 	mla	r6, r6, r7, sl
 8014366:	f10c 0401 	add.w	r4, ip, #1
 801436a:	fb09 5507 	mla	r5, r9, r7, r5
 801436e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014372:	9c03      	ldr	r4, [sp, #12]
 8014374:	b2ad      	uxth	r5, r5
 8014376:	b2b6      	uxth	r6, r6
 8014378:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801437c:	f105 0a01 	add.w	sl, r5, #1
 8014380:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014384:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014388:	ea4a 0c0c 	orr.w	ip, sl, ip
 801438c:	f106 0a01 	add.w	sl, r6, #1
 8014390:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014394:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014398:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801439c:	ea4c 0c0a 	orr.w	ip, ip, sl
 80143a0:	f820 c004 	strh.w	ip, [r0, r4]
 80143a4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80143a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80143aa:	4421      	add	r1, r4
 80143ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80143ae:	4422      	add	r2, r4
 80143b0:	e750      	b.n	8014254 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80143b2:	f04f 0900 	mov.w	r9, #0
 80143b6:	eba3 0409 	sub.w	r4, r3, r9
 80143ba:	2c00      	cmp	r4, #0
 80143bc:	f77f af4e 	ble.w	801425c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80143c0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80143c4:	140d      	asrs	r5, r1, #16
 80143c6:	1414      	asrs	r4, r2, #16
 80143c8:	fb06 5404 	mla	r4, r6, r4, r5
 80143cc:	9d02      	ldr	r5, [sp, #8]
 80143ce:	5d2e      	ldrb	r6, [r5, r4]
 80143d0:	2e00      	cmp	r6, #0
 80143d2:	d04c      	beq.n	801446e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80143d4:	9d01      	ldr	r5, [sp, #4]
 80143d6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80143da:	9c05      	ldr	r4, [sp, #20]
 80143dc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80143e0:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80143e4:	4366      	muls	r6, r4
 80143e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80143ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80143ee:	1c74      	adds	r4, r6, #1
 80143f0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80143f4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80143f8:	122e      	asrs	r6, r5, #8
 80143fa:	1224      	asrs	r4, r4, #8
 80143fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014400:	00ed      	lsls	r5, r5, #3
 8014402:	b2a7      	uxth	r7, r4
 8014404:	43e4      	mvns	r4, r4
 8014406:	b2ed      	uxtb	r5, r5
 8014408:	b2e4      	uxtb	r4, r4
 801440a:	fb16 f604 	smulbb	r6, r6, r4
 801440e:	fb15 f504 	smulbb	r5, r5, r4
 8014412:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014416:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801441a:	fb1a fa04 	smulbb	sl, sl, r4
 801441e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014422:	fa1f fc8c 	uxth.w	ip, ip
 8014426:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801442a:	fa5f f888 	uxtb.w	r8, r8
 801442e:	fb06 a607 	mla	r6, r6, r7, sl
 8014432:	f10c 0401 	add.w	r4, ip, #1
 8014436:	fb08 5507 	mla	r5, r8, r7, r5
 801443a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801443e:	b2ad      	uxth	r5, r5
 8014440:	b2b6      	uxth	r6, r6
 8014442:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014446:	f105 0a01 	add.w	sl, r5, #1
 801444a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801444e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014452:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014456:	f106 0a01 	add.w	sl, r6, #1
 801445a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801445e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014462:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014466:	ea4c 0c0a 	orr.w	ip, ip, sl
 801446a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801446e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014470:	f109 0901 	add.w	r9, r9, #1
 8014474:	4421      	add	r1, r4
 8014476:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014478:	4422      	add	r2, r4
 801447a:	e79c      	b.n	80143b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801447c:	b007      	add	sp, #28
 801447e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014482 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014482:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014486:	b085      	sub	sp, #20
 8014488:	468b      	mov	fp, r1
 801448a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801448e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014490:	9203      	str	r2, [sp, #12]
 8014492:	6861      	ldr	r1, [r4, #4]
 8014494:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014498:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801449c:	fb01 2000 	mla	r0, r1, r0, r2
 80144a0:	6822      	ldr	r2, [r4, #0]
 80144a2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80144a6:	f8d8 2000 	ldr.w	r2, [r8]
 80144aa:	9200      	str	r2, [sp, #0]
 80144ac:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80144b0:	9201      	str	r2, [sp, #4]
 80144b2:	f1bb 0f00 	cmp.w	fp, #0
 80144b6:	dc03      	bgt.n	80144c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80144b8:	9a03      	ldr	r2, [sp, #12]
 80144ba:	2a00      	cmp	r2, #0
 80144bc:	f340 8146 	ble.w	801474c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80144c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80144c2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80144c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80144ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80144cc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80144d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80144d4:	2b00      	cmp	r3, #0
 80144d6:	dd0e      	ble.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80144d8:	140c      	asrs	r4, r1, #16
 80144da:	d405      	bmi.n	80144e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80144dc:	42bc      	cmp	r4, r7
 80144de:	da03      	bge.n	80144e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80144e0:	1414      	asrs	r4, r2, #16
 80144e2:	d401      	bmi.n	80144e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80144e4:	42b4      	cmp	r4, r6
 80144e6:	db07      	blt.n	80144f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80144e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80144ea:	3b01      	subs	r3, #1
 80144ec:	3002      	adds	r0, #2
 80144ee:	4421      	add	r1, r4
 80144f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80144f2:	4422      	add	r2, r4
 80144f4:	e7ee      	b.n	80144d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80144f6:	d017      	beq.n	8014528 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80144f8:	1e5c      	subs	r4, r3, #1
 80144fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80144fc:	fb05 1504 	mla	r5, r5, r4, r1
 8014500:	142d      	asrs	r5, r5, #16
 8014502:	d409      	bmi.n	8014518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014504:	42bd      	cmp	r5, r7
 8014506:	da07      	bge.n	8014518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014508:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801450a:	fb05 2404 	mla	r4, r5, r4, r2
 801450e:	1424      	asrs	r4, r4, #16
 8014510:	d402      	bmi.n	8014518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014512:	42b4      	cmp	r4, r6
 8014514:	f2c0 80b3 	blt.w	801467e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014518:	2600      	movs	r6, #0
 801451a:	199c      	adds	r4, r3, r6
 801451c:	2c00      	cmp	r4, #0
 801451e:	dc3e      	bgt.n	801459e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014520:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014524:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014528:	f1bb 0f00 	cmp.w	fp, #0
 801452c:	f340 810e 	ble.w	801474c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014530:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014534:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014536:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801453a:	f1bb 0b01 	subs.w	fp, fp, #1
 801453e:	eeb0 6a62 	vmov.f32	s12, s5
 8014542:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014546:	ee31 1a05 	vadd.f32	s2, s2, s10
 801454a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801454e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014552:	eeb0 6a43 	vmov.f32	s12, s6
 8014556:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801455a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801455e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014562:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014566:	ee77 2a62 	vsub.f32	s5, s14, s5
 801456a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801456e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014572:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014576:	ee12 2a90 	vmov	r2, s5
 801457a:	eef0 2a47 	vmov.f32	s5, s14
 801457e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014582:	ee13 2a10 	vmov	r2, s6
 8014586:	9311      	str	r3, [sp, #68]	; 0x44
 8014588:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801458a:	eeb0 3a67 	vmov.f32	s6, s15
 801458e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014592:	9a03      	ldr	r2, [sp, #12]
 8014594:	9312      	str	r3, [sp, #72]	; 0x48
 8014596:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014598:	bf08      	it	eq
 801459a:	4613      	moveq	r3, r2
 801459c:	e789      	b.n	80144b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801459e:	140f      	asrs	r7, r1, #16
 80145a0:	d418      	bmi.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80145a2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80145a6:	42bd      	cmp	r5, r7
 80145a8:	dd14      	ble.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80145aa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80145ae:	d411      	bmi.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80145b0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80145b4:	4564      	cmp	r4, ip
 80145b6:	dd0d      	ble.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80145b8:	b22d      	sxth	r5, r5
 80145ba:	9c01      	ldr	r4, [sp, #4]
 80145bc:	fb0c 7505 	mla	r5, ip, r5, r7
 80145c0:	5d64      	ldrb	r4, [r4, r5]
 80145c2:	2cff      	cmp	r4, #255	; 0xff
 80145c4:	d10c      	bne.n	80145e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80145c6:	9c00      	ldr	r4, [sp, #0]
 80145c8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80145cc:	f06f 0401 	mvn.w	r4, #1
 80145d0:	4374      	muls	r4, r6
 80145d2:	5305      	strh	r5, [r0, r4]
 80145d4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80145d6:	3e01      	subs	r6, #1
 80145d8:	4421      	add	r1, r4
 80145da:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80145dc:	4422      	add	r2, r4
 80145de:	e79c      	b.n	801451a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80145e0:	2c00      	cmp	r4, #0
 80145e2:	d0f7      	beq.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80145e4:	9f00      	ldr	r7, [sp, #0]
 80145e6:	fa1f fc84 	uxth.w	ip, r4
 80145ea:	43e4      	mvns	r4, r4
 80145ec:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80145f0:	f06f 0501 	mvn.w	r5, #1
 80145f4:	b2e4      	uxtb	r4, r4
 80145f6:	4375      	muls	r5, r6
 80145f8:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80145fc:	9502      	str	r5, [sp, #8]
 80145fe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014602:	5b45      	ldrh	r5, [r0, r5]
 8014604:	122f      	asrs	r7, r5, #8
 8014606:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801460a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801460e:	00ed      	lsls	r5, r5, #3
 8014610:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014614:	fb17 f704 	smulbb	r7, r7, r4
 8014618:	b2ed      	uxtb	r5, r5
 801461a:	fb1a fa04 	smulbb	sl, sl, r4
 801461e:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014622:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014626:	fb15 f504 	smulbb	r5, r5, r4
 801462a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801462e:	fa1f fe8e 	uxth.w	lr, lr
 8014632:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014636:	fa5f f989 	uxtb.w	r9, r9
 801463a:	fb07 a70c 	mla	r7, r7, ip, sl
 801463e:	f10e 0401 	add.w	r4, lr, #1
 8014642:	fb09 550c 	mla	r5, r9, ip, r5
 8014646:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801464a:	9c02      	ldr	r4, [sp, #8]
 801464c:	b2ad      	uxth	r5, r5
 801464e:	b2bf      	uxth	r7, r7
 8014650:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8014654:	f105 0a01 	add.w	sl, r5, #1
 8014658:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801465c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014660:	ea4a 0e0e 	orr.w	lr, sl, lr
 8014664:	f107 0a01 	add.w	sl, r7, #1
 8014668:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801466c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014670:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014674:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014678:	f820 e004 	strh.w	lr, [r0, r4]
 801467c:	e7aa      	b.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801467e:	f04f 0900 	mov.w	r9, #0
 8014682:	eba3 0409 	sub.w	r4, r3, r9
 8014686:	2c00      	cmp	r4, #0
 8014688:	f77f af4a 	ble.w	8014520 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801468c:	1414      	asrs	r4, r2, #16
 801468e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014692:	140d      	asrs	r5, r1, #16
 8014694:	fb06 5504 	mla	r5, r6, r4, r5
 8014698:	9c01      	ldr	r4, [sp, #4]
 801469a:	5d64      	ldrb	r4, [r4, r5]
 801469c:	2cff      	cmp	r4, #255	; 0xff
 801469e:	d10b      	bne.n	80146b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80146a0:	9c00      	ldr	r4, [sp, #0]
 80146a2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80146a6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80146aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80146ac:	f109 0901 	add.w	r9, r9, #1
 80146b0:	4421      	add	r1, r4
 80146b2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80146b4:	4422      	add	r2, r4
 80146b6:	e7e4      	b.n	8014682 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80146b8:	2c00      	cmp	r4, #0
 80146ba:	d0f6      	beq.n	80146aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80146bc:	9e00      	ldr	r6, [sp, #0]
 80146be:	b2a7      	uxth	r7, r4
 80146c0:	43e4      	mvns	r4, r4
 80146c2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80146c6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80146ca:	b2e4      	uxtb	r4, r4
 80146cc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80146d0:	122e      	asrs	r6, r5, #8
 80146d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80146d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80146da:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80146de:	00ed      	lsls	r5, r5, #3
 80146e0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80146e4:	fb16 f604 	smulbb	r6, r6, r4
 80146e8:	b2ed      	uxtb	r5, r5
 80146ea:	fb1a fa04 	smulbb	sl, sl, r4
 80146ee:	fb0c 6c07 	mla	ip, ip, r7, r6
 80146f2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80146f6:	fb15 f504 	smulbb	r5, r5, r4
 80146fa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80146fe:	fa1f fc8c 	uxth.w	ip, ip
 8014702:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014706:	fa5f fe8e 	uxtb.w	lr, lr
 801470a:	fb06 a607 	mla	r6, r6, r7, sl
 801470e:	f10c 0401 	add.w	r4, ip, #1
 8014712:	fb0e 5507 	mla	r5, lr, r7, r5
 8014716:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801471a:	b2ad      	uxth	r5, r5
 801471c:	b2b6      	uxth	r6, r6
 801471e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014722:	f105 0a01 	add.w	sl, r5, #1
 8014726:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801472a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801472e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014732:	f106 0a01 	add.w	sl, r6, #1
 8014736:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801473a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801473e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014742:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014746:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801474a:	e7ae      	b.n	80146aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801474c:	b005      	add	sp, #20
 801474e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014752 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014752:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014756:	b085      	sub	sp, #20
 8014758:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801475a:	9203      	str	r2, [sp, #12]
 801475c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8014760:	9100      	str	r1, [sp, #0]
 8014762:	9201      	str	r2, [sp, #4]
 8014764:	6841      	ldr	r1, [r0, #4]
 8014766:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801476a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801476e:	fb01 2404 	mla	r4, r1, r4, r2
 8014772:	6802      	ldr	r2, [r0, #0]
 8014774:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014778:	f8de 2000 	ldr.w	r2, [lr]
 801477c:	9202      	str	r2, [sp, #8]
 801477e:	9a01      	ldr	r2, [sp, #4]
 8014780:	43d6      	mvns	r6, r2
 8014782:	b2f6      	uxtb	r6, r6
 8014784:	9a00      	ldr	r2, [sp, #0]
 8014786:	2a00      	cmp	r2, #0
 8014788:	dc03      	bgt.n	8014792 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801478a:	9a03      	ldr	r2, [sp, #12]
 801478c:	2a00      	cmp	r2, #0
 801478e:	f340 8124 	ble.w	80149da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014792:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014794:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014798:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801479c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801479e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80147a2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80147a6:	2b00      	cmp	r3, #0
 80147a8:	dd0e      	ble.n	80147c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80147aa:	1408      	asrs	r0, r1, #16
 80147ac:	d405      	bmi.n	80147ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80147ae:	4560      	cmp	r0, ip
 80147b0:	da03      	bge.n	80147ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80147b2:	1410      	asrs	r0, r2, #16
 80147b4:	d401      	bmi.n	80147ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80147b6:	42b8      	cmp	r0, r7
 80147b8:	db07      	blt.n	80147ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80147ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80147bc:	3b01      	subs	r3, #1
 80147be:	3402      	adds	r4, #2
 80147c0:	4401      	add	r1, r0
 80147c2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80147c4:	4402      	add	r2, r0
 80147c6:	e7ee      	b.n	80147a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80147c8:	d06e      	beq.n	80148a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80147ca:	1e58      	subs	r0, r3, #1
 80147cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80147ce:	fb05 1500 	mla	r5, r5, r0, r1
 80147d2:	142d      	asrs	r5, r5, #16
 80147d4:	d45c      	bmi.n	8014890 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80147d6:	4565      	cmp	r5, ip
 80147d8:	da5a      	bge.n	8014890 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80147da:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80147dc:	fb05 2000 	mla	r0, r5, r0, r2
 80147e0:	1400      	asrs	r0, r0, #16
 80147e2:	d455      	bmi.n	8014890 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80147e4:	42b8      	cmp	r0, r7
 80147e6:	da53      	bge.n	8014890 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80147e8:	4699      	mov	r9, r3
 80147ea:	46a2      	mov	sl, r4
 80147ec:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80147f0:	f1b9 0f00 	cmp.w	r9, #0
 80147f4:	dd54      	ble.n	80148a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80147f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80147fa:	140d      	asrs	r5, r1, #16
 80147fc:	1410      	asrs	r0, r2, #16
 80147fe:	f109 39ff 	add.w	r9, r9, #4294967295
 8014802:	fb07 5000 	mla	r0, r7, r0, r5
 8014806:	9d02      	ldr	r5, [sp, #8]
 8014808:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801480c:	f8ba 5000 	ldrh.w	r5, [sl]
 8014810:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014814:	122f      	asrs	r7, r5, #8
 8014816:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801481a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801481e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014822:	00ed      	lsls	r5, r5, #3
 8014824:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014828:	fb17 f706 	smulbb	r7, r7, r6
 801482c:	b2ed      	uxtb	r5, r5
 801482e:	fb18 f806 	smulbb	r8, r8, r6
 8014832:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014836:	10c7      	asrs	r7, r0, #3
 8014838:	fb15 f506 	smulbb	r5, r5, r6
 801483c:	00c0      	lsls	r0, r0, #3
 801483e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014842:	fa1f fc8c 	uxth.w	ip, ip
 8014846:	b2c0      	uxtb	r0, r0
 8014848:	fb07 870b 	mla	r7, r7, fp, r8
 801484c:	fb00 500b 	mla	r0, r0, fp, r5
 8014850:	f10c 0501 	add.w	r5, ip, #1
 8014854:	b2bf      	uxth	r7, r7
 8014856:	b280      	uxth	r0, r0
 8014858:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801485c:	f107 0801 	add.w	r8, r7, #1
 8014860:	1c45      	adds	r5, r0, #1
 8014862:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014866:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801486a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801486e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014870:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014874:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014878:	4401      	add	r1, r0
 801487a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801487e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014880:	ea45 0c0c 	orr.w	ip, r5, ip
 8014884:	4402      	add	r2, r0
 8014886:	ea4c 0c08 	orr.w	ip, ip, r8
 801488a:	f82a cb02 	strh.w	ip, [sl], #2
 801488e:	e7af      	b.n	80147f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014890:	f04f 0800 	mov.w	r8, #0
 8014894:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014898:	eb03 0008 	add.w	r0, r3, r8
 801489c:	2800      	cmp	r0, #0
 801489e:	dc41      	bgt.n	8014924 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80148a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80148a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80148a8:	9b00      	ldr	r3, [sp, #0]
 80148aa:	2b00      	cmp	r3, #0
 80148ac:	f340 8095 	ble.w	80149da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80148b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80148b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80148be:	eef0 6a62 	vmov.f32	s13, s5
 80148c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80148c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80148ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80148ce:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80148d2:	eef0 6a43 	vmov.f32	s13, s6
 80148d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80148da:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80148de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80148e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80148e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80148ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80148ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80148f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80148f6:	ee12 2a90 	vmov	r2, s5
 80148fa:	eef0 2a47 	vmov.f32	s5, s14
 80148fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014902:	ee13 2a10 	vmov	r2, s6
 8014906:	9311      	str	r3, [sp, #68]	; 0x44
 8014908:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801490a:	eeb0 3a67 	vmov.f32	s6, s15
 801490e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014912:	9312      	str	r3, [sp, #72]	; 0x48
 8014914:	9b00      	ldr	r3, [sp, #0]
 8014916:	9a03      	ldr	r2, [sp, #12]
 8014918:	3b01      	subs	r3, #1
 801491a:	9300      	str	r3, [sp, #0]
 801491c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801491e:	bf08      	it	eq
 8014920:	4613      	moveq	r3, r2
 8014922:	e72f      	b.n	8014784 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014924:	140f      	asrs	r7, r1, #16
 8014926:	d451      	bmi.n	80149cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014928:	f8de 5008 	ldr.w	r5, [lr, #8]
 801492c:	42bd      	cmp	r5, r7
 801492e:	dd4d      	ble.n	80149cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014930:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014934:	d44a      	bmi.n	80149cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014936:	f8de 000c 	ldr.w	r0, [lr, #12]
 801493a:	4560      	cmp	r0, ip
 801493c:	dd46      	ble.n	80149cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801493e:	b22d      	sxth	r5, r5
 8014940:	9802      	ldr	r0, [sp, #8]
 8014942:	fb0c 7505 	mla	r5, ip, r5, r7
 8014946:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801494a:	f06f 0501 	mvn.w	r5, #1
 801494e:	fb05 fb08 	mul.w	fp, r5, r8
 8014952:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014956:	f834 500b 	ldrh.w	r5, [r4, fp]
 801495a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801495e:	122f      	asrs	r7, r5, #8
 8014960:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014964:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014968:	00ed      	lsls	r5, r5, #3
 801496a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801496e:	fb17 f706 	smulbb	r7, r7, r6
 8014972:	b2ed      	uxtb	r5, r5
 8014974:	fb19 f906 	smulbb	r9, r9, r6
 8014978:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801497c:	10c7      	asrs	r7, r0, #3
 801497e:	fb15 f506 	smulbb	r5, r5, r6
 8014982:	00c0      	lsls	r0, r0, #3
 8014984:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014988:	fa1f fc8c 	uxth.w	ip, ip
 801498c:	b2c0      	uxtb	r0, r0
 801498e:	fb07 970a 	mla	r7, r7, sl, r9
 8014992:	fb00 500a 	mla	r0, r0, sl, r5
 8014996:	f10c 0501 	add.w	r5, ip, #1
 801499a:	b2bf      	uxth	r7, r7
 801499c:	b280      	uxth	r0, r0
 801499e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80149a2:	f107 0901 	add.w	r9, r7, #1
 80149a6:	1c45      	adds	r5, r0, #1
 80149a8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80149ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80149b0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80149b4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80149b8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80149bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80149c0:	ea45 0c0c 	orr.w	ip, r5, ip
 80149c4:	ea4c 0c09 	orr.w	ip, ip, r9
 80149c8:	f824 c00b 	strh.w	ip, [r4, fp]
 80149cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80149ce:	f108 38ff 	add.w	r8, r8, #4294967295
 80149d2:	4401      	add	r1, r0
 80149d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80149d6:	4402      	add	r2, r0
 80149d8:	e75e      	b.n	8014898 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80149da:	b005      	add	sp, #20
 80149dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080149e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149e4:	b085      	sub	sp, #20
 80149e6:	4693      	mov	fp, r2
 80149e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80149ec:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80149ee:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80149f0:	6870      	ldr	r0, [r6, #4]
 80149f2:	9101      	str	r1, [sp, #4]
 80149f4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80149f8:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80149fc:	fb00 2404 	mla	r4, r0, r4, r2
 8014a00:	6832      	ldr	r2, [r6, #0]
 8014a02:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014a06:	682a      	ldr	r2, [r5, #0]
 8014a08:	9202      	str	r2, [sp, #8]
 8014a0a:	9a01      	ldr	r2, [sp, #4]
 8014a0c:	2a00      	cmp	r2, #0
 8014a0e:	dc03      	bgt.n	8014a18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014a10:	f1bb 0f00 	cmp.w	fp, #0
 8014a14:	f340 809a 	ble.w	8014b4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014a18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014a1a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014a1e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014a22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a24:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014a28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014a2c:	2b00      	cmp	r3, #0
 8014a2e:	dd0c      	ble.n	8014a4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014a30:	1406      	asrs	r6, r0, #16
 8014a32:	d405      	bmi.n	8014a40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a34:	454e      	cmp	r6, r9
 8014a36:	da03      	bge.n	8014a40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a38:	1416      	asrs	r6, r2, #16
 8014a3a:	d401      	bmi.n	8014a40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a3c:	4546      	cmp	r6, r8
 8014a3e:	db05      	blt.n	8014a4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014a40:	4470      	add	r0, lr
 8014a42:	4462      	add	r2, ip
 8014a44:	3b01      	subs	r3, #1
 8014a46:	3402      	adds	r4, #2
 8014a48:	e7f0      	b.n	8014a2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014a4a:	d00f      	beq.n	8014a6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014a4c:	1e5e      	subs	r6, r3, #1
 8014a4e:	fb0e 0706 	mla	r7, lr, r6, r0
 8014a52:	143f      	asrs	r7, r7, #16
 8014a54:	d541      	bpl.n	8014ada <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014a56:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014a5a:	4698      	mov	r8, r3
 8014a5c:	9603      	str	r6, [sp, #12]
 8014a5e:	f1b8 0f00 	cmp.w	r8, #0
 8014a62:	dc56      	bgt.n	8014b12 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014a64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a6c:	9b01      	ldr	r3, [sp, #4]
 8014a6e:	2b00      	cmp	r3, #0
 8014a70:	dd6c      	ble.n	8014b4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014a72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a7c:	eeb0 6a62 	vmov.f32	s12, s5
 8014a80:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a8c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014a90:	eeb0 6a43 	vmov.f32	s12, s6
 8014a94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a98:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014a9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014aa0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014aa4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014aa8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014aac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ab0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ab4:	ee12 2a90 	vmov	r2, s5
 8014ab8:	eef0 2a47 	vmov.f32	s5, s14
 8014abc:	fb92 fef3 	sdiv	lr, r2, r3
 8014ac0:	ee13 2a10 	vmov	r2, s6
 8014ac4:	eeb0 3a67 	vmov.f32	s6, s15
 8014ac8:	fb92 fcf3 	sdiv	ip, r2, r3
 8014acc:	9b01      	ldr	r3, [sp, #4]
 8014ace:	3b01      	subs	r3, #1
 8014ad0:	9301      	str	r3, [sp, #4]
 8014ad2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ad4:	bf08      	it	eq
 8014ad6:	465b      	moveq	r3, fp
 8014ad8:	e797      	b.n	8014a0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014ada:	454f      	cmp	r7, r9
 8014adc:	dabb      	bge.n	8014a56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014ade:	fb0c 2606 	mla	r6, ip, r6, r2
 8014ae2:	1436      	asrs	r6, r6, #16
 8014ae4:	d4b7      	bmi.n	8014a56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014ae6:	4546      	cmp	r6, r8
 8014ae8:	dab5      	bge.n	8014a56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014aea:	461e      	mov	r6, r3
 8014aec:	46a0      	mov	r8, r4
 8014aee:	2e00      	cmp	r6, #0
 8014af0:	ddb8      	ble.n	8014a64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014af2:	1417      	asrs	r7, r2, #16
 8014af4:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014af8:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014afc:	9902      	ldr	r1, [sp, #8]
 8014afe:	4470      	add	r0, lr
 8014b00:	4462      	add	r2, ip
 8014b02:	fb0a 9707 	mla	r7, sl, r7, r9
 8014b06:	3e01      	subs	r6, #1
 8014b08:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014b0c:	f828 7b02 	strh.w	r7, [r8], #2
 8014b10:	e7ed      	b.n	8014aee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014b12:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014b16:	d414      	bmi.n	8014b42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014b18:	68ae      	ldr	r6, [r5, #8]
 8014b1a:	454e      	cmp	r6, r9
 8014b1c:	dd11      	ble.n	8014b42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014b1e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014b22:	d40e      	bmi.n	8014b42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014b24:	68ef      	ldr	r7, [r5, #12]
 8014b26:	4557      	cmp	r7, sl
 8014b28:	dd0b      	ble.n	8014b42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014b2a:	b236      	sxth	r6, r6
 8014b2c:	f06f 0101 	mvn.w	r1, #1
 8014b30:	9f02      	ldr	r7, [sp, #8]
 8014b32:	fb0a 9606 	mla	r6, sl, r6, r9
 8014b36:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014b3a:	fb01 f608 	mul.w	r6, r1, r8
 8014b3e:	9903      	ldr	r1, [sp, #12]
 8014b40:	538f      	strh	r7, [r1, r6]
 8014b42:	4470      	add	r0, lr
 8014b44:	4462      	add	r2, ip
 8014b46:	f108 38ff 	add.w	r8, r8, #4294967295
 8014b4a:	e788      	b.n	8014a5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014b4c:	b005      	add	sp, #20
 8014b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b56:	b087      	sub	sp, #28
 8014b58:	468b      	mov	fp, r1
 8014b5a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014b5e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014b60:	9203      	str	r2, [sp, #12]
 8014b62:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014b66:	6841      	ldr	r1, [r0, #4]
 8014b68:	9204      	str	r2, [sp, #16]
 8014b6a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8014b6e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8014b72:	fb01 2505 	mla	r5, r1, r5, r2
 8014b76:	6802      	ldr	r2, [r0, #0]
 8014b78:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014b7c:	f8d9 2000 	ldr.w	r2, [r9]
 8014b80:	9201      	str	r2, [sp, #4]
 8014b82:	f1bb 0f00 	cmp.w	fp, #0
 8014b86:	dc03      	bgt.n	8014b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014b88:	9a03      	ldr	r2, [sp, #12]
 8014b8a:	2a00      	cmp	r2, #0
 8014b8c:	f340 8158 	ble.w	8014e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014b90:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014b92:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014b96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014b9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014b9c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014ba0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014ba4:	2b00      	cmp	r3, #0
 8014ba6:	dd0e      	ble.n	8014bc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014ba8:	1402      	asrs	r2, r0, #16
 8014baa:	d405      	bmi.n	8014bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014bac:	42ba      	cmp	r2, r7
 8014bae:	da03      	bge.n	8014bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014bb0:	140a      	asrs	r2, r1, #16
 8014bb2:	d401      	bmi.n	8014bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014bb4:	42b2      	cmp	r2, r6
 8014bb6:	db07      	blt.n	8014bc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014bb8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014bba:	3b01      	subs	r3, #1
 8014bbc:	3502      	adds	r5, #2
 8014bbe:	4410      	add	r0, r2
 8014bc0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014bc2:	4411      	add	r1, r2
 8014bc4:	e7ee      	b.n	8014ba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014bc6:	d017      	beq.n	8014bf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014bc8:	1e5a      	subs	r2, r3, #1
 8014bca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014bcc:	fb04 0402 	mla	r4, r4, r2, r0
 8014bd0:	1424      	asrs	r4, r4, #16
 8014bd2:	d409      	bmi.n	8014be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014bd4:	42bc      	cmp	r4, r7
 8014bd6:	da07      	bge.n	8014be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014bd8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014bda:	fb04 1202 	mla	r2, r4, r2, r1
 8014bde:	1412      	asrs	r2, r2, #16
 8014be0:	d402      	bmi.n	8014be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014be2:	42b2      	cmp	r2, r6
 8014be4:	f2c0 80bf 	blt.w	8014d66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014be8:	2700      	movs	r7, #0
 8014bea:	19da      	adds	r2, r3, r7
 8014bec:	2a00      	cmp	r2, #0
 8014bee:	dc3e      	bgt.n	8014c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014bf0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014bf4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014bf8:	f1bb 0f00 	cmp.w	fp, #0
 8014bfc:	f340 8120 	ble.w	8014e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014c00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c0a:	f1bb 0b01 	subs.w	fp, fp, #1
 8014c0e:	eeb0 6a62 	vmov.f32	s12, s5
 8014c12:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014c16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c1e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014c22:	eeb0 6a43 	vmov.f32	s12, s6
 8014c26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c2a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014c2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c46:	ee12 2a90 	vmov	r2, s5
 8014c4a:	eef0 2a47 	vmov.f32	s5, s14
 8014c4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c52:	ee13 2a10 	vmov	r2, s6
 8014c56:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c5a:	eeb0 3a67 	vmov.f32	s6, s15
 8014c5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c62:	9a03      	ldr	r2, [sp, #12]
 8014c64:	9314      	str	r3, [sp, #80]	; 0x50
 8014c66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c68:	bf08      	it	eq
 8014c6a:	4613      	moveq	r3, r2
 8014c6c:	e789      	b.n	8014b82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014c6e:	1406      	asrs	r6, r0, #16
 8014c70:	d42d      	bmi.n	8014cce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014c72:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014c76:	42b4      	cmp	r4, r6
 8014c78:	dd29      	ble.n	8014cce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014c7a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8014c7e:	d426      	bmi.n	8014cce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014c80:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014c84:	4562      	cmp	r2, ip
 8014c86:	dd22      	ble.n	8014cce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014c88:	b224      	sxth	r4, r4
 8014c8a:	9a01      	ldr	r2, [sp, #4]
 8014c8c:	fb0c 6404 	mla	r4, ip, r4, r6
 8014c90:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014c94:	0e22      	lsrs	r2, r4, #24
 8014c96:	d01a      	beq.n	8014cce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014c98:	9e04      	ldr	r6, [sp, #16]
 8014c9a:	4372      	muls	r2, r6
 8014c9c:	1c56      	adds	r6, r2, #1
 8014c9e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014ca2:	0a26      	lsrs	r6, r4, #8
 8014ca4:	1212      	asrs	r2, r2, #8
 8014ca6:	9605      	str	r6, [sp, #20]
 8014ca8:	2aff      	cmp	r2, #255	; 0xff
 8014caa:	d116      	bne.n	8014cda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014cac:	f06f 0201 	mvn.w	r2, #1
 8014cb0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8014cb4:	fb02 fc07 	mul.w	ip, r2, r7
 8014cb8:	0962      	lsrs	r2, r4, #5
 8014cba:	f026 0607 	bic.w	r6, r6, #7
 8014cbe:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014cc2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014cc6:	4316      	orrs	r6, r2
 8014cc8:	4326      	orrs	r6, r4
 8014cca:	f825 600c 	strh.w	r6, [r5, ip]
 8014cce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014cd0:	3f01      	subs	r7, #1
 8014cd2:	4410      	add	r0, r2
 8014cd4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014cd6:	4411      	add	r1, r2
 8014cd8:	e787      	b.n	8014bea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014cda:	f06f 0601 	mvn.w	r6, #1
 8014cde:	fa1f fa82 	uxth.w	sl, r2
 8014ce2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8014ce6:	43d2      	mvns	r2, r2
 8014ce8:	437e      	muls	r6, r7
 8014cea:	b2e4      	uxtb	r4, r4
 8014cec:	fb1c fc0a 	smulbb	ip, ip, sl
 8014cf0:	b2d2      	uxtb	r2, r2
 8014cf2:	f835 8006 	ldrh.w	r8, [r5, r6]
 8014cf6:	fb14 f40a 	smulbb	r4, r4, sl
 8014cfa:	9602      	str	r6, [sp, #8]
 8014cfc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014d00:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014d04:	fb16 f60a 	smulbb	r6, r6, sl
 8014d08:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014d0c:	fb0e ce02 	mla	lr, lr, r2, ip
 8014d10:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014d14:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014d18:	fa1f fe8e 	uxth.w	lr, lr
 8014d1c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8014d20:	fa5f f888 	uxtb.w	r8, r8
 8014d24:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014d28:	fb08 4402 	mla	r4, r8, r2, r4
 8014d2c:	f10e 0201 	add.w	r2, lr, #1
 8014d30:	fa1f fc8c 	uxth.w	ip, ip
 8014d34:	b2a4      	uxth	r4, r4
 8014d36:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014d3a:	9a02      	ldr	r2, [sp, #8]
 8014d3c:	1c66      	adds	r6, r4, #1
 8014d3e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8014d42:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014d46:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014d4a:	ea46 0e0e 	orr.w	lr, r6, lr
 8014d4e:	f10c 0601 	add.w	r6, ip, #1
 8014d52:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014d56:	0976      	lsrs	r6, r6, #5
 8014d58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014d5c:	ea4e 0e06 	orr.w	lr, lr, r6
 8014d60:	f825 e002 	strh.w	lr, [r5, r2]
 8014d64:	e7b3      	b.n	8014cce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014d66:	f04f 0800 	mov.w	r8, #0
 8014d6a:	eba3 0208 	sub.w	r2, r3, r8
 8014d6e:	2a00      	cmp	r2, #0
 8014d70:	f77f af3e 	ble.w	8014bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014d74:	1404      	asrs	r4, r0, #16
 8014d76:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014d7a:	140a      	asrs	r2, r1, #16
 8014d7c:	fb06 4202 	mla	r2, r6, r2, r4
 8014d80:	9c01      	ldr	r4, [sp, #4]
 8014d82:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014d86:	0e22      	lsrs	r2, r4, #24
 8014d88:	d015      	beq.n	8014db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014d8a:	9e04      	ldr	r6, [sp, #16]
 8014d8c:	4372      	muls	r2, r6
 8014d8e:	1c56      	adds	r6, r2, #1
 8014d90:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014d94:	0a26      	lsrs	r6, r4, #8
 8014d96:	1212      	asrs	r2, r2, #8
 8014d98:	2aff      	cmp	r2, #255	; 0xff
 8014d9a:	d113      	bne.n	8014dc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8014d9c:	0962      	lsrs	r2, r4, #5
 8014d9e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8014da2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014da6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014daa:	f026 0607 	bic.w	r6, r6, #7
 8014dae:	4316      	orrs	r6, r2
 8014db0:	4326      	orrs	r6, r4
 8014db2:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8014db6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014db8:	f108 0801 	add.w	r8, r8, #1
 8014dbc:	4410      	add	r0, r2
 8014dbe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014dc0:	4411      	add	r1, r2
 8014dc2:	e7d2      	b.n	8014d6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8014dc4:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8014dc8:	fa1f fa82 	uxth.w	sl, r2
 8014dcc:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8014dd0:	43d2      	mvns	r2, r2
 8014dd2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014dd6:	fb17 f70a 	smulbb	r7, r7, sl
 8014dda:	b2d2      	uxtb	r2, r2
 8014ddc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014de0:	b2e4      	uxtb	r4, r4
 8014de2:	b2f6      	uxtb	r6, r6
 8014de4:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014de8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014dec:	fb14 f40a 	smulbb	r4, r4, sl
 8014df0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014df4:	fa1f fc8c 	uxth.w	ip, ip
 8014df8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014dfc:	fb16 f60a 	smulbb	r6, r6, sl
 8014e00:	fa5f fe8e 	uxtb.w	lr, lr
 8014e04:	fb0e 4402 	mla	r4, lr, r2, r4
 8014e08:	fb07 6702 	mla	r7, r7, r2, r6
 8014e0c:	f10c 0201 	add.w	r2, ip, #1
 8014e10:	b2a4      	uxth	r4, r4
 8014e12:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014e16:	1c66      	adds	r6, r4, #1
 8014e18:	b2bf      	uxth	r7, r7
 8014e1a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e1e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014e22:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014e26:	ea46 0c0c 	orr.w	ip, r6, ip
 8014e2a:	1c7e      	adds	r6, r7, #1
 8014e2c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014e30:	0976      	lsrs	r6, r6, #5
 8014e32:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014e36:	ea4c 0c06 	orr.w	ip, ip, r6
 8014e3a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014e3e:	e7ba      	b.n	8014db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014e40:	b007      	add	sp, #28
 8014e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014e48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e4c:	b085      	sub	sp, #20
 8014e4e:	468b      	mov	fp, r1
 8014e50:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e54:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e56:	9203      	str	r2, [sp, #12]
 8014e58:	6841      	ldr	r1, [r0, #4]
 8014e5a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014e5e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014e62:	fb01 2404 	mla	r4, r1, r4, r2
 8014e66:	6802      	ldr	r2, [r0, #0]
 8014e68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e6c:	f8d8 2000 	ldr.w	r2, [r8]
 8014e70:	9201      	str	r2, [sp, #4]
 8014e72:	f1bb 0f00 	cmp.w	fp, #0
 8014e76:	dc03      	bgt.n	8014e80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014e78:	9a03      	ldr	r2, [sp, #12]
 8014e7a:	2a00      	cmp	r2, #0
 8014e7c:	f340 814f 	ble.w	801511e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014e80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e82:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014e86:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014e8c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014e90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e94:	2b00      	cmp	r3, #0
 8014e96:	dd0e      	ble.n	8014eb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014e98:	1408      	asrs	r0, r1, #16
 8014e9a:	d405      	bmi.n	8014ea8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014e9c:	42b8      	cmp	r0, r7
 8014e9e:	da03      	bge.n	8014ea8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ea0:	1410      	asrs	r0, r2, #16
 8014ea2:	d401      	bmi.n	8014ea8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ea4:	42b0      	cmp	r0, r6
 8014ea6:	db07      	blt.n	8014eb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ea8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014eaa:	3b01      	subs	r3, #1
 8014eac:	3402      	adds	r4, #2
 8014eae:	4401      	add	r1, r0
 8014eb0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014eb2:	4402      	add	r2, r0
 8014eb4:	e7ee      	b.n	8014e94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014eb6:	d017      	beq.n	8014ee8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014eb8:	1e58      	subs	r0, r3, #1
 8014eba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014ebc:	fb05 1500 	mla	r5, r5, r0, r1
 8014ec0:	142d      	asrs	r5, r5, #16
 8014ec2:	d409      	bmi.n	8014ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014ec4:	42bd      	cmp	r5, r7
 8014ec6:	da07      	bge.n	8014ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014ec8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014eca:	fb05 2000 	mla	r0, r5, r0, r2
 8014ece:	1400      	asrs	r0, r0, #16
 8014ed0:	d402      	bmi.n	8014ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014ed2:	42b0      	cmp	r0, r6
 8014ed4:	f2c0 80ba 	blt.w	801504c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014ed8:	2600      	movs	r6, #0
 8014eda:	1998      	adds	r0, r3, r6
 8014edc:	2800      	cmp	r0, #0
 8014ede:	dc3e      	bgt.n	8014f5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014ee0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ee4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ee8:	f1bb 0f00 	cmp.w	fp, #0
 8014eec:	f340 8117 	ble.w	801511e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014ef0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ef4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ef6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014efa:	f1bb 0b01 	subs.w	fp, fp, #1
 8014efe:	eeb0 6a62 	vmov.f32	s12, s5
 8014f02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014f06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f0e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f12:	eeb0 6a43 	vmov.f32	s12, s6
 8014f16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f1a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f36:	ee12 2a90 	vmov	r2, s5
 8014f3a:	eef0 2a47 	vmov.f32	s5, s14
 8014f3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f42:	ee13 2a10 	vmov	r2, s6
 8014f46:	9311      	str	r3, [sp, #68]	; 0x44
 8014f48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f4a:	eeb0 3a67 	vmov.f32	s6, s15
 8014f4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f52:	9a03      	ldr	r2, [sp, #12]
 8014f54:	9312      	str	r3, [sp, #72]	; 0x48
 8014f56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f58:	bf08      	it	eq
 8014f5a:	4613      	moveq	r3, r2
 8014f5c:	e789      	b.n	8014e72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014f5e:	140f      	asrs	r7, r1, #16
 8014f60:	d424      	bmi.n	8014fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014f62:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014f66:	42bd      	cmp	r5, r7
 8014f68:	dd20      	ble.n	8014fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014f6a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014f6e:	d41d      	bmi.n	8014fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014f70:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014f74:	4560      	cmp	r0, ip
 8014f76:	dd19      	ble.n	8014fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014f78:	b22d      	sxth	r5, r5
 8014f7a:	9801      	ldr	r0, [sp, #4]
 8014f7c:	fb0c 7505 	mla	r5, ip, r5, r7
 8014f80:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014f84:	0e07      	lsrs	r7, r0, #24
 8014f86:	2fff      	cmp	r7, #255	; 0xff
 8014f88:	d116      	bne.n	8014fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f8a:	f06f 0501 	mvn.w	r5, #1
 8014f8e:	fb05 f706 	mul.w	r7, r5, r6
 8014f92:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8014f96:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014f9a:	0945      	lsrs	r5, r0, #5
 8014f9c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014fa0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014fa4:	ea4c 0505 	orr.w	r5, ip, r5
 8014fa8:	4305      	orrs	r5, r0
 8014faa:	53e5      	strh	r5, [r4, r7]
 8014fac:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014fae:	3e01      	subs	r6, #1
 8014fb0:	4401      	add	r1, r0
 8014fb2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014fb4:	4402      	add	r2, r0
 8014fb6:	e790      	b.n	8014eda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014fb8:	b2fd      	uxtb	r5, r7
 8014fba:	2f00      	cmp	r7, #0
 8014fbc:	d0f6      	beq.n	8014fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014fbe:	f06f 0701 	mvn.w	r7, #1
 8014fc2:	fa1f f985 	uxth.w	r9, r5
 8014fc6:	43ed      	mvns	r5, r5
 8014fc8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014fcc:	4377      	muls	r7, r6
 8014fce:	fb1a fa09 	smulbb	sl, sl, r9
 8014fd2:	b2ed      	uxtb	r5, r5
 8014fd4:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014fd8:	9702      	str	r7, [sp, #8]
 8014fda:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014fde:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014fe2:	fb17 f709 	smulbb	r7, r7, r9
 8014fe6:	b2c0      	uxtb	r0, r0
 8014fe8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014fec:	fb10 f009 	smulbb	r0, r0, r9
 8014ff0:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014ff4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014ff8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014ffc:	fa1f fc8c 	uxth.w	ip, ip
 8015000:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015004:	fa5f fe8e 	uxtb.w	lr, lr
 8015008:	fb07 a705 	mla	r7, r7, r5, sl
 801500c:	fb0e 0005 	mla	r0, lr, r5, r0
 8015010:	f10c 0501 	add.w	r5, ip, #1
 8015014:	b2bf      	uxth	r7, r7
 8015016:	b280      	uxth	r0, r0
 8015018:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801501c:	f100 0a01 	add.w	sl, r0, #1
 8015020:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015024:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015028:	9802      	ldr	r0, [sp, #8]
 801502a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801502e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015032:	f107 0a01 	add.w	sl, r7, #1
 8015036:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801503a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801503e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015042:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015046:	f824 c000 	strh.w	ip, [r4, r0]
 801504a:	e7af      	b.n	8014fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801504c:	f04f 0e00 	mov.w	lr, #0
 8015050:	eba3 000e 	sub.w	r0, r3, lr
 8015054:	2800      	cmp	r0, #0
 8015056:	f77f af43 	ble.w	8014ee0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801505a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801505e:	140d      	asrs	r5, r1, #16
 8015060:	1410      	asrs	r0, r2, #16
 8015062:	fb06 5000 	mla	r0, r6, r0, r5
 8015066:	9d01      	ldr	r5, [sp, #4]
 8015068:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801506c:	0e2e      	lsrs	r6, r5, #24
 801506e:	2eff      	cmp	r6, #255	; 0xff
 8015070:	d112      	bne.n	8015098 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015072:	482c      	ldr	r0, [pc, #176]	; (8015124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015074:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015078:	0968      	lsrs	r0, r5, #5
 801507a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801507e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015082:	4330      	orrs	r0, r6
 8015084:	4328      	orrs	r0, r5
 8015086:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801508a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801508c:	f10e 0e01 	add.w	lr, lr, #1
 8015090:	4401      	add	r1, r0
 8015092:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015094:	4402      	add	r2, r0
 8015096:	e7db      	b.n	8015050 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015098:	b2f0      	uxtb	r0, r6
 801509a:	2e00      	cmp	r6, #0
 801509c:	d0f5      	beq.n	801508a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801509e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80150a2:	fa1f f980 	uxth.w	r9, r0
 80150a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80150aa:	43c0      	mvns	r0, r0
 80150ac:	ea4f 272c 	mov.w	r7, ip, asr #8
 80150b0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80150b4:	fb16 f609 	smulbb	r6, r6, r9
 80150b8:	b2c0      	uxtb	r0, r0
 80150ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80150be:	b2ed      	uxtb	r5, r5
 80150c0:	fb1a fa09 	smulbb	sl, sl, r9
 80150c4:	fb07 6700 	mla	r7, r7, r0, r6
 80150c8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80150cc:	fb15 f509 	smulbb	r5, r5, r9
 80150d0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80150d4:	b2bf      	uxth	r7, r7
 80150d6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80150da:	fa5f fc8c 	uxtb.w	ip, ip
 80150de:	fb06 a600 	mla	r6, r6, r0, sl
 80150e2:	fb0c 5500 	mla	r5, ip, r0, r5
 80150e6:	1c78      	adds	r0, r7, #1
 80150e8:	b2b6      	uxth	r6, r6
 80150ea:	b2ad      	uxth	r5, r5
 80150ec:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80150f0:	f105 0a01 	add.w	sl, r5, #1
 80150f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80150f8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80150fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015100:	ea4a 0707 	orr.w	r7, sl, r7
 8015104:	f106 0a01 	add.w	sl, r6, #1
 8015108:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801510c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015110:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015114:	ea47 070a 	orr.w	r7, r7, sl
 8015118:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801511c:	e7b5      	b.n	801508a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801511e:	b005      	add	sp, #20
 8015120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015124:	fffff800 	.word	0xfffff800

08015128 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801512c:	b087      	sub	sp, #28
 801512e:	468b      	mov	fp, r1
 8015130:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015134:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015136:	9203      	str	r2, [sp, #12]
 8015138:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801513c:	6841      	ldr	r1, [r0, #4]
 801513e:	9204      	str	r2, [sp, #16]
 8015140:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015144:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015148:	fb01 2404 	mla	r4, r1, r4, r2
 801514c:	6802      	ldr	r2, [r0, #0]
 801514e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015152:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015156:	3201      	adds	r2, #1
 8015158:	f022 0201 	bic.w	r2, r2, #1
 801515c:	9200      	str	r2, [sp, #0]
 801515e:	f8d9 2000 	ldr.w	r2, [r9]
 8015162:	9201      	str	r2, [sp, #4]
 8015164:	f1bb 0f00 	cmp.w	fp, #0
 8015168:	dc03      	bgt.n	8015172 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801516a:	9a03      	ldr	r2, [sp, #12]
 801516c:	2a00      	cmp	r2, #0
 801516e:	f340 816a 	ble.w	8015446 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8015172:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015174:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015178:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801517c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801517e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015182:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015186:	2b00      	cmp	r3, #0
 8015188:	dd0e      	ble.n	80151a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801518a:	1402      	asrs	r2, r0, #16
 801518c:	d405      	bmi.n	801519a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801518e:	42ba      	cmp	r2, r7
 8015190:	da03      	bge.n	801519a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015192:	140a      	asrs	r2, r1, #16
 8015194:	d401      	bmi.n	801519a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015196:	42b2      	cmp	r2, r6
 8015198:	db07      	blt.n	80151aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801519a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801519c:	3b01      	subs	r3, #1
 801519e:	3402      	adds	r4, #2
 80151a0:	4410      	add	r0, r2
 80151a2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80151a4:	4411      	add	r1, r2
 80151a6:	e7ee      	b.n	8015186 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80151a8:	d017      	beq.n	80151da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80151aa:	1e5a      	subs	r2, r3, #1
 80151ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80151ae:	fb05 0502 	mla	r5, r5, r2, r0
 80151b2:	142d      	asrs	r5, r5, #16
 80151b4:	d409      	bmi.n	80151ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80151b6:	42bd      	cmp	r5, r7
 80151b8:	da07      	bge.n	80151ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80151ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80151bc:	fb05 1202 	mla	r2, r5, r2, r1
 80151c0:	1412      	asrs	r2, r2, #16
 80151c2:	d402      	bmi.n	80151ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80151c4:	42b2      	cmp	r2, r6
 80151c6:	f2c0 80c8 	blt.w	801535a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80151ca:	2700      	movs	r7, #0
 80151cc:	19da      	adds	r2, r3, r7
 80151ce:	2a00      	cmp	r2, #0
 80151d0:	dc3e      	bgt.n	8015250 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80151d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80151d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80151da:	f1bb 0f00 	cmp.w	fp, #0
 80151de:	f340 8132 	ble.w	8015446 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80151e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80151e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80151e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80151ec:	f1bb 0b01 	subs.w	fp, fp, #1
 80151f0:	eeb0 6a62 	vmov.f32	s12, s5
 80151f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80151f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80151fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015200:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015204:	eeb0 6a43 	vmov.f32	s12, s6
 8015208:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801520c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015210:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015214:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015218:	ee77 2a62 	vsub.f32	s5, s14, s5
 801521c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015220:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015224:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015228:	ee12 2a90 	vmov	r2, s5
 801522c:	eef0 2a47 	vmov.f32	s5, s14
 8015230:	fb92 f3f3 	sdiv	r3, r2, r3
 8015234:	ee13 2a10 	vmov	r2, s6
 8015238:	9313      	str	r3, [sp, #76]	; 0x4c
 801523a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801523c:	eeb0 3a67 	vmov.f32	s6, s15
 8015240:	fb92 f3f3 	sdiv	r3, r2, r3
 8015244:	9a03      	ldr	r2, [sp, #12]
 8015246:	9314      	str	r3, [sp, #80]	; 0x50
 8015248:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801524a:	bf08      	it	eq
 801524c:	4613      	moveq	r3, r2
 801524e:	e789      	b.n	8015164 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015250:	1405      	asrs	r5, r0, #16
 8015252:	d436      	bmi.n	80152c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015254:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015258:	42aa      	cmp	r2, r5
 801525a:	dd32      	ble.n	80152c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801525c:	140e      	asrs	r6, r1, #16
 801525e:	d430      	bmi.n	80152c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015260:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015264:	42b2      	cmp	r2, r6
 8015266:	dd2c      	ble.n	80152c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015268:	9a00      	ldr	r2, [sp, #0]
 801526a:	fb06 5502 	mla	r5, r6, r2, r5
 801526e:	9e01      	ldr	r6, [sp, #4]
 8015270:	086a      	lsrs	r2, r5, #1
 8015272:	5cb2      	ldrb	r2, [r6, r2]
 8015274:	07ee      	lsls	r6, r5, #31
 8015276:	bf54      	ite	pl
 8015278:	f002 020f 	andpl.w	r2, r2, #15
 801527c:	1112      	asrmi	r2, r2, #4
 801527e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015282:	b2d2      	uxtb	r2, r2
 8015284:	b1ea      	cbz	r2, 80152c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015286:	9d04      	ldr	r5, [sp, #16]
 8015288:	436a      	muls	r2, r5
 801528a:	1c55      	adds	r5, r2, #1
 801528c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015290:	4d6e      	ldr	r5, [pc, #440]	; (801544c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015292:	1212      	asrs	r2, r2, #8
 8015294:	682d      	ldr	r5, [r5, #0]
 8015296:	2aff      	cmp	r2, #255	; 0xff
 8015298:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801529c:	9605      	str	r6, [sp, #20]
 801529e:	d116      	bne.n	80152ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80152a0:	f06f 0201 	mvn.w	r2, #1
 80152a4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80152a8:	fb02 fc07 	mul.w	ip, r2, r7
 80152ac:	096a      	lsrs	r2, r5, #5
 80152ae:	f026 0607 	bic.w	r6, r6, #7
 80152b2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80152b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80152ba:	4316      	orrs	r6, r2
 80152bc:	432e      	orrs	r6, r5
 80152be:	f824 600c 	strh.w	r6, [r4, ip]
 80152c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80152c4:	3f01      	subs	r7, #1
 80152c6:	4410      	add	r0, r2
 80152c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80152ca:	4411      	add	r1, r2
 80152cc:	e77e      	b.n	80151cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80152ce:	f06f 0601 	mvn.w	r6, #1
 80152d2:	fa1f fa82 	uxth.w	sl, r2
 80152d6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80152da:	43d2      	mvns	r2, r2
 80152dc:	437e      	muls	r6, r7
 80152de:	b2ed      	uxtb	r5, r5
 80152e0:	fb1c fc0a 	smulbb	ip, ip, sl
 80152e4:	b2d2      	uxtb	r2, r2
 80152e6:	f834 8006 	ldrh.w	r8, [r4, r6]
 80152ea:	fb15 f50a 	smulbb	r5, r5, sl
 80152ee:	9602      	str	r6, [sp, #8]
 80152f0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80152f4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80152f8:	fb16 f60a 	smulbb	r6, r6, sl
 80152fc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015300:	fb0e ce02 	mla	lr, lr, r2, ip
 8015304:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015308:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801530c:	fa1f fe8e 	uxth.w	lr, lr
 8015310:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015314:	fa5f f888 	uxtb.w	r8, r8
 8015318:	fb0c 6c02 	mla	ip, ip, r2, r6
 801531c:	fb08 5502 	mla	r5, r8, r2, r5
 8015320:	f10e 0201 	add.w	r2, lr, #1
 8015324:	fa1f fc8c 	uxth.w	ip, ip
 8015328:	b2ad      	uxth	r5, r5
 801532a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801532e:	9a02      	ldr	r2, [sp, #8]
 8015330:	1c6e      	adds	r6, r5, #1
 8015332:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015336:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801533a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801533e:	ea46 0e0e 	orr.w	lr, r6, lr
 8015342:	f10c 0601 	add.w	r6, ip, #1
 8015346:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801534a:	0976      	lsrs	r6, r6, #5
 801534c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015350:	ea4e 0e06 	orr.w	lr, lr, r6
 8015354:	f824 e002 	strh.w	lr, [r4, r2]
 8015358:	e7b3      	b.n	80152c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801535a:	f04f 0800 	mov.w	r8, #0
 801535e:	eba3 0208 	sub.w	r2, r3, r8
 8015362:	2a00      	cmp	r2, #0
 8015364:	f77f af35 	ble.w	80151d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015368:	1402      	asrs	r2, r0, #16
 801536a:	9e00      	ldr	r6, [sp, #0]
 801536c:	140d      	asrs	r5, r1, #16
 801536e:	fb06 2505 	mla	r5, r6, r5, r2
 8015372:	9e01      	ldr	r6, [sp, #4]
 8015374:	086a      	lsrs	r2, r5, #1
 8015376:	07ed      	lsls	r5, r5, #31
 8015378:	5cb2      	ldrb	r2, [r6, r2]
 801537a:	bf54      	ite	pl
 801537c:	f002 020f 	andpl.w	r2, r2, #15
 8015380:	1112      	asrmi	r2, r2, #4
 8015382:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015386:	b2d2      	uxtb	r2, r2
 8015388:	b1c2      	cbz	r2, 80153bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801538a:	9d04      	ldr	r5, [sp, #16]
 801538c:	436a      	muls	r2, r5
 801538e:	1c55      	adds	r5, r2, #1
 8015390:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015394:	4d2d      	ldr	r5, [pc, #180]	; (801544c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015396:	1212      	asrs	r2, r2, #8
 8015398:	682e      	ldr	r6, [r5, #0]
 801539a:	2aff      	cmp	r2, #255	; 0xff
 801539c:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80153a0:	d113      	bne.n	80153ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80153a2:	0972      	lsrs	r2, r6, #5
 80153a4:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80153a8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80153ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80153b0:	f025 0507 	bic.w	r5, r5, #7
 80153b4:	4315      	orrs	r5, r2
 80153b6:	4335      	orrs	r5, r6
 80153b8:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80153bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80153be:	f108 0801 	add.w	r8, r8, #1
 80153c2:	4410      	add	r0, r2
 80153c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80153c6:	4411      	add	r1, r2
 80153c8:	e7c9      	b.n	801535e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80153ca:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80153ce:	fa1f fa82 	uxth.w	sl, r2
 80153d2:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80153d6:	43d2      	mvns	r2, r2
 80153d8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80153dc:	fb17 f70a 	smulbb	r7, r7, sl
 80153e0:	b2d2      	uxtb	r2, r2
 80153e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80153e6:	b2f6      	uxtb	r6, r6
 80153e8:	b2ed      	uxtb	r5, r5
 80153ea:	fb0c 7c02 	mla	ip, ip, r2, r7
 80153ee:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80153f2:	fb16 f60a 	smulbb	r6, r6, sl
 80153f6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80153fa:	fa1f fc8c 	uxth.w	ip, ip
 80153fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015402:	fb15 f50a 	smulbb	r5, r5, sl
 8015406:	fa5f fe8e 	uxtb.w	lr, lr
 801540a:	fb0e 6602 	mla	r6, lr, r2, r6
 801540e:	fb07 5702 	mla	r7, r7, r2, r5
 8015412:	f10c 0201 	add.w	r2, ip, #1
 8015416:	b2b6      	uxth	r6, r6
 8015418:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801541c:	1c75      	adds	r5, r6, #1
 801541e:	b2bf      	uxth	r7, r7
 8015420:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015424:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8015428:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801542c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015430:	1c7d      	adds	r5, r7, #1
 8015432:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015436:	096d      	lsrs	r5, r5, #5
 8015438:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801543c:	ea4c 0c05 	orr.w	ip, ip, r5
 8015440:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8015444:	e7ba      	b.n	80153bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015446:	b007      	add	sp, #28
 8015448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801544c:	2400e434 	.word	0x2400e434

08015450 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015454:	b087      	sub	sp, #28
 8015456:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801545a:	f8df 8308 	ldr.w	r8, [pc, #776]	; 8015764 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801545e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015460:	9101      	str	r1, [sp, #4]
 8015462:	9205      	str	r2, [sp, #20]
 8015464:	6841      	ldr	r1, [r0, #4]
 8015466:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801546a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801546e:	fb01 2404 	mla	r4, r1, r4, r2
 8015472:	6802      	ldr	r2, [r0, #0]
 8015474:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015478:	f8db 2008 	ldr.w	r2, [fp, #8]
 801547c:	3201      	adds	r2, #1
 801547e:	f022 0201 	bic.w	r2, r2, #1
 8015482:	9202      	str	r2, [sp, #8]
 8015484:	f8db 2000 	ldr.w	r2, [fp]
 8015488:	9203      	str	r2, [sp, #12]
 801548a:	9a01      	ldr	r2, [sp, #4]
 801548c:	2a00      	cmp	r2, #0
 801548e:	dc03      	bgt.n	8015498 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015490:	9a05      	ldr	r2, [sp, #20]
 8015492:	2a00      	cmp	r2, #0
 8015494:	f340 8162 	ble.w	801575c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015498:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801549a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801549e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80154a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80154a4:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80154a8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80154ac:	2b00      	cmp	r3, #0
 80154ae:	dd0e      	ble.n	80154ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80154b0:	1402      	asrs	r2, r0, #16
 80154b2:	d405      	bmi.n	80154c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154b4:	42ba      	cmp	r2, r7
 80154b6:	da03      	bge.n	80154c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154b8:	140a      	asrs	r2, r1, #16
 80154ba:	d401      	bmi.n	80154c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154bc:	42b2      	cmp	r2, r6
 80154be:	db07      	blt.n	80154d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80154c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80154c2:	3b01      	subs	r3, #1
 80154c4:	3402      	adds	r4, #2
 80154c6:	4410      	add	r0, r2
 80154c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80154ca:	4411      	add	r1, r2
 80154cc:	e7ee      	b.n	80154ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80154ce:	d017      	beq.n	8015500 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80154d0:	1e5a      	subs	r2, r3, #1
 80154d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80154d4:	fb05 0502 	mla	r5, r5, r2, r0
 80154d8:	142d      	asrs	r5, r5, #16
 80154da:	d409      	bmi.n	80154f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80154dc:	42bd      	cmp	r5, r7
 80154de:	da07      	bge.n	80154f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80154e0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80154e2:	fb05 1202 	mla	r2, r5, r2, r1
 80154e6:	1412      	asrs	r2, r2, #16
 80154e8:	d402      	bmi.n	80154f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80154ea:	42b2      	cmp	r2, r6
 80154ec:	f2c0 80c3 	blt.w	8015676 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80154f0:	2500      	movs	r5, #0
 80154f2:	195a      	adds	r2, r3, r5
 80154f4:	2a00      	cmp	r2, #0
 80154f6:	dc3f      	bgt.n	8015578 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80154f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80154fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015500:	9b01      	ldr	r3, [sp, #4]
 8015502:	2b00      	cmp	r3, #0
 8015504:	f340 812a 	ble.w	801575c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015508:	ee30 0a04 	vadd.f32	s0, s0, s8
 801550c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801550e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015512:	eeb0 6a62 	vmov.f32	s12, s5
 8015516:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801551a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801551e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015522:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015526:	eeb0 6a43 	vmov.f32	s12, s6
 801552a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801552e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015532:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015536:	ee61 7a27 	vmul.f32	s15, s2, s15
 801553a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801553e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015542:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015546:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801554a:	ee12 2a90 	vmov	r2, s5
 801554e:	eef0 2a47 	vmov.f32	s5, s14
 8015552:	fb92 f3f3 	sdiv	r3, r2, r3
 8015556:	ee13 2a10 	vmov	r2, s6
 801555a:	9313      	str	r3, [sp, #76]	; 0x4c
 801555c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801555e:	eeb0 3a67 	vmov.f32	s6, s15
 8015562:	fb92 f3f3 	sdiv	r3, r2, r3
 8015566:	9314      	str	r3, [sp, #80]	; 0x50
 8015568:	9b01      	ldr	r3, [sp, #4]
 801556a:	9a05      	ldr	r2, [sp, #20]
 801556c:	3b01      	subs	r3, #1
 801556e:	9301      	str	r3, [sp, #4]
 8015570:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015572:	bf08      	it	eq
 8015574:	4613      	moveq	r3, r2
 8015576:	e788      	b.n	801548a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015578:	1406      	asrs	r6, r0, #16
 801557a:	d42c      	bmi.n	80155d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801557c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015580:	42b2      	cmp	r2, r6
 8015582:	dd28      	ble.n	80155d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015584:	140f      	asrs	r7, r1, #16
 8015586:	d426      	bmi.n	80155d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015588:	f8db 200c 	ldr.w	r2, [fp, #12]
 801558c:	42ba      	cmp	r2, r7
 801558e:	dd22      	ble.n	80155d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015590:	9a02      	ldr	r2, [sp, #8]
 8015592:	fb07 6602 	mla	r6, r7, r2, r6
 8015596:	9f03      	ldr	r7, [sp, #12]
 8015598:	0872      	lsrs	r2, r6, #1
 801559a:	07f6      	lsls	r6, r6, #31
 801559c:	5cba      	ldrb	r2, [r7, r2]
 801559e:	bf54      	ite	pl
 80155a0:	f002 020f 	andpl.w	r2, r2, #15
 80155a4:	1112      	asrmi	r2, r2, #4
 80155a6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80155aa:	b2d2      	uxtb	r2, r2
 80155ac:	2aff      	cmp	r2, #255	; 0xff
 80155ae:	d118      	bne.n	80155e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80155b0:	f06f 0601 	mvn.w	r6, #1
 80155b4:	f8d8 2000 	ldr.w	r2, [r8]
 80155b8:	fb06 f705 	mul.w	r7, r6, r5
 80155bc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80155c0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80155c4:	0956      	lsrs	r6, r2, #5
 80155c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80155ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80155ce:	ea4c 0606 	orr.w	r6, ip, r6
 80155d2:	4316      	orrs	r6, r2
 80155d4:	53e6      	strh	r6, [r4, r7]
 80155d6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80155d8:	3d01      	subs	r5, #1
 80155da:	4410      	add	r0, r2
 80155dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80155de:	4411      	add	r1, r2
 80155e0:	e787      	b.n	80154f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80155e2:	2a00      	cmp	r2, #0
 80155e4:	d0f7      	beq.n	80155d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80155e6:	f06f 0601 	mvn.w	r6, #1
 80155ea:	f8d8 c000 	ldr.w	ip, [r8]
 80155ee:	fa1f f982 	uxth.w	r9, r2
 80155f2:	43d2      	mvns	r2, r2
 80155f4:	436e      	muls	r6, r5
 80155f6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80155fa:	b2d2      	uxtb	r2, r2
 80155fc:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015600:	fb1a fa09 	smulbb	sl, sl, r9
 8015604:	9604      	str	r6, [sp, #16]
 8015606:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801560a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801560e:	fb16 f609 	smulbb	r6, r6, r9
 8015612:	fa5f fc8c 	uxtb.w	ip, ip
 8015616:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801561a:	fb1c fc09 	smulbb	ip, ip, r9
 801561e:	fb07 6702 	mla	r7, r7, r2, r6
 8015622:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015626:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801562a:	b2bf      	uxth	r7, r7
 801562c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015630:	fa5f fe8e 	uxtb.w	lr, lr
 8015634:	fb06 a602 	mla	r6, r6, r2, sl
 8015638:	fb0e cc02 	mla	ip, lr, r2, ip
 801563c:	1c7a      	adds	r2, r7, #1
 801563e:	b2b6      	uxth	r6, r6
 8015640:	fa1f fc8c 	uxth.w	ip, ip
 8015644:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015648:	9a04      	ldr	r2, [sp, #16]
 801564a:	f10c 0a01 	add.w	sl, ip, #1
 801564e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015652:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015656:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801565a:	ea4a 0707 	orr.w	r7, sl, r7
 801565e:	f106 0a01 	add.w	sl, r6, #1
 8015662:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015666:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801566a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801566e:	ea47 070a 	orr.w	r7, r7, sl
 8015672:	52a7      	strh	r7, [r4, r2]
 8015674:	e7af      	b.n	80155d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015676:	f04f 0e00 	mov.w	lr, #0
 801567a:	eba3 020e 	sub.w	r2, r3, lr
 801567e:	2a00      	cmp	r2, #0
 8015680:	f77f af3a 	ble.w	80154f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015684:	1402      	asrs	r2, r0, #16
 8015686:	9e02      	ldr	r6, [sp, #8]
 8015688:	140d      	asrs	r5, r1, #16
 801568a:	fb06 2505 	mla	r5, r6, r5, r2
 801568e:	9e03      	ldr	r6, [sp, #12]
 8015690:	086a      	lsrs	r2, r5, #1
 8015692:	07ed      	lsls	r5, r5, #31
 8015694:	5cb2      	ldrb	r2, [r6, r2]
 8015696:	bf54      	ite	pl
 8015698:	f002 020f 	andpl.w	r2, r2, #15
 801569c:	1112      	asrmi	r2, r2, #4
 801569e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80156a2:	b2d2      	uxtb	r2, r2
 80156a4:	2aff      	cmp	r2, #255	; 0xff
 80156a6:	d115      	bne.n	80156d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80156a8:	f8d8 5000 	ldr.w	r5, [r8]
 80156ac:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80156b0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80156b4:	096a      	lsrs	r2, r5, #5
 80156b6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80156ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80156be:	4332      	orrs	r2, r6
 80156c0:	432a      	orrs	r2, r5
 80156c2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80156c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80156c8:	f10e 0e01 	add.w	lr, lr, #1
 80156cc:	4410      	add	r0, r2
 80156ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80156d0:	4411      	add	r1, r2
 80156d2:	e7d2      	b.n	801567a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80156d4:	2a00      	cmp	r2, #0
 80156d6:	d0f6      	beq.n	80156c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80156d8:	f8d8 7000 	ldr.w	r7, [r8]
 80156dc:	fa1f f982 	uxth.w	r9, r2
 80156e0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80156e4:	43d2      	mvns	r2, r2
 80156e6:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80156ea:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80156ee:	ea4f 262c 	mov.w	r6, ip, asr #8
 80156f2:	fb15 f509 	smulbb	r5, r5, r9
 80156f6:	b2d2      	uxtb	r2, r2
 80156f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80156fc:	b2ff      	uxtb	r7, r7
 80156fe:	fb1a fa09 	smulbb	sl, sl, r9
 8015702:	fb06 5602 	mla	r6, r6, r2, r5
 8015706:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801570a:	fb17 f709 	smulbb	r7, r7, r9
 801570e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015712:	b2b6      	uxth	r6, r6
 8015714:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015718:	fa5f fc8c 	uxtb.w	ip, ip
 801571c:	fb05 a502 	mla	r5, r5, r2, sl
 8015720:	fb0c 7702 	mla	r7, ip, r2, r7
 8015724:	1c72      	adds	r2, r6, #1
 8015726:	b2ad      	uxth	r5, r5
 8015728:	b2bf      	uxth	r7, r7
 801572a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801572e:	f107 0a01 	add.w	sl, r7, #1
 8015732:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015736:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801573a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801573e:	ea4a 0606 	orr.w	r6, sl, r6
 8015742:	f105 0a01 	add.w	sl, r5, #1
 8015746:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801574a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801574e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015752:	ea46 060a 	orr.w	r6, r6, sl
 8015756:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801575a:	e7b4      	b.n	80156c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801575c:	b007      	add	sp, #28
 801575e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015762:	bf00      	nop
 8015764:	2400e434 	.word	0x2400e434

08015768 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015768:	4770      	bx	lr

0801576a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801576a:	4770      	bx	lr

0801576c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801576c:	4770      	bx	lr

0801576e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801576e:	4770      	bx	lr

08015770 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015770:	4770      	bx	lr

08015772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015772:	4770      	bx	lr

08015774 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015774:	4770      	bx	lr

08015776 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015776:	4770      	bx	lr

08015778 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015778:	4770      	bx	lr

0801577a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801577a:	4770      	bx	lr

0801577c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801577c:	4770      	bx	lr

0801577e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801577e:	4770      	bx	lr

08015780 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015780:	4770      	bx	lr

08015782 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015782:	4770      	bx	lr

08015784 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015784:	4770      	bx	lr

08015786 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015786:	4770      	bx	lr

08015788 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015788:	4770      	bx	lr

0801578a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801578a:	4770      	bx	lr

0801578c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801578c:	4770      	bx	lr

0801578e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801578e:	4770      	bx	lr

08015790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015790:	4770      	bx	lr

08015792 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015792:	4770      	bx	lr

08015794 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015794:	4770      	bx	lr

08015796 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015796:	4770      	bx	lr

08015798 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015798:	4770      	bx	lr

0801579a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801579a:	4770      	bx	lr

0801579c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801579c:	4770      	bx	lr

0801579e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801579e:	4770      	bx	lr

080157a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80157a0:	4770      	bx	lr

080157a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80157a2:	4770      	bx	lr

080157a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80157a4:	4770      	bx	lr

080157a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80157a6:	4770      	bx	lr

080157a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80157a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80157ac:	b088      	sub	sp, #32
 80157ae:	4606      	mov	r6, r0
 80157b0:	4688      	mov	r8, r1
 80157b2:	4691      	mov	r9, r2
 80157b4:	ac08      	add	r4, sp, #32
 80157b6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80157ba:	4620      	mov	r0, r4
 80157bc:	f7fd fc62 	bl	8013084 <_ZNK8touchgfx6Bitmap7getDataEv>
 80157c0:	6833      	ldr	r3, [r6, #0]
 80157c2:	4605      	mov	r5, r0
 80157c4:	4620      	mov	r0, r4
 80157c6:	699f      	ldr	r7, [r3, #24]
 80157c8:	f7fd fb70 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 80157cc:	4682      	mov	sl, r0
 80157ce:	4620      	mov	r0, r4
 80157d0:	f7fd fba0 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80157d4:	9500      	str	r5, [sp, #0]
 80157d6:	464b      	mov	r3, r9
 80157d8:	4642      	mov	r2, r8
 80157da:	4631      	mov	r1, r6
 80157dc:	e9cd a001 	strd	sl, r0, [sp, #4]
 80157e0:	a806      	add	r0, sp, #24
 80157e2:	47b8      	blx	r7
 80157e4:	4628      	mov	r0, r5
 80157e6:	b008      	add	sp, #32
 80157e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080157ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80157ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80157f0:	2300      	movs	r3, #0
 80157f2:	9300      	str	r3, [sp, #0]
 80157f4:	4b3d      	ldr	r3, [pc, #244]	; (80158ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80157f6:	781b      	ldrb	r3, [r3, #0]
 80157f8:	2b00      	cmp	r3, #0
 80157fa:	d137      	bne.n	801586c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80157fc:	4a3c      	ldr	r2, [pc, #240]	; (80158f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80157fe:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015802:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015806:	2b00      	cmp	r3, #0
 8015808:	d132      	bne.n	8015870 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801580a:	4b3a      	ldr	r3, [pc, #232]	; (80158f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801580c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015810:	ac02      	add	r4, sp, #8
 8015812:	6808      	ldr	r0, [r1, #0]
 8015814:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015818:	ab02      	add	r3, sp, #8
 801581a:	6849      	ldr	r1, [r1, #4]
 801581c:	4d36      	ldr	r5, [pc, #216]	; (80158f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801581e:	c303      	stmia	r3!, {r0, r1}
 8015820:	4669      	mov	r1, sp
 8015822:	4620      	mov	r0, r4
 8015824:	f7fa fbfe 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015828:	4668      	mov	r0, sp
 801582a:	f7fa fbb7 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801582e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015832:	f8bd 2000 	ldrh.w	r2, [sp]
 8015836:	462f      	mov	r7, r5
 8015838:	6828      	ldr	r0, [r5, #0]
 801583a:	4413      	add	r3, r2
 801583c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015840:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015844:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015848:	4413      	add	r3, r2
 801584a:	f8ad 300a 	strh.w	r3, [sp, #10]
 801584e:	6803      	ldr	r3, [r0, #0]
 8015850:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015852:	4798      	blx	r3
 8015854:	f010 0f01 	tst.w	r0, #1
 8015858:	d00c      	beq.n	8015874 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801585a:	6828      	ldr	r0, [r5, #0]
 801585c:	6803      	ldr	r3, [r0, #0]
 801585e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015862:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8015864:	4798      	blx	r3
 8015866:	b004      	add	sp, #16
 8015868:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801586c:	4a21      	ldr	r2, [pc, #132]	; (80158f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801586e:	e7c6      	b.n	80157fe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015870:	4b1f      	ldr	r3, [pc, #124]	; (80158f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015872:	e7cb      	b.n	801580c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015874:	6838      	ldr	r0, [r7, #0]
 8015876:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801587a:	6803      	ldr	r3, [r0, #0]
 801587c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015880:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015884:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015886:	4798      	blx	r3
 8015888:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801588c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015890:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015894:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015898:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801589c:	6838      	ldr	r0, [r7, #0]
 801589e:	6803      	ldr	r3, [r0, #0]
 80158a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80158a2:	4798      	blx	r3
 80158a4:	4a12      	ldr	r2, [pc, #72]	; (80158f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80158a6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80158aa:	8813      	ldrh	r3, [r2, #0]
 80158ac:	4691      	mov	r9, r2
 80158ae:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80158b2:	435d      	muls	r5, r3
 80158b4:	fb03 1404 	mla	r4, r3, r4, r1
 80158b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80158bc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80158c0:	6838      	ldr	r0, [r7, #0]
 80158c2:	42ac      	cmp	r4, r5
 80158c4:	6803      	ldr	r3, [r0, #0]
 80158c6:	d20e      	bcs.n	80158e6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80158c8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80158cc:	4632      	mov	r2, r6
 80158ce:	4643      	mov	r3, r8
 80158d0:	4621      	mov	r1, r4
 80158d2:	47d0      	blx	sl
 80158d4:	f8b9 3000 	ldrh.w	r3, [r9]
 80158d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80158dc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80158e0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80158e4:	e7ec      	b.n	80158c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80158e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80158e8:	4798      	blx	r3
 80158ea:	e7bc      	b.n	8015866 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80158ec:	2400e41c 	.word	0x2400e41c
 80158f0:	2400e41e 	.word	0x2400e41e
 80158f4:	2400e420 	.word	0x2400e420
 80158f8:	2400e424 	.word	0x2400e424

080158fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80158fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015900:	b08b      	sub	sp, #44	; 0x2c
 8015902:	460f      	mov	r7, r1
 8015904:	4616      	mov	r6, r2
 8015906:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801590a:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801590e:	f1bb 0f00 	cmp.w	fp, #0
 8015912:	d04a      	beq.n	80159aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015914:	6810      	ldr	r0, [r2, #0]
 8015916:	ad06      	add	r5, sp, #24
 8015918:	6851      	ldr	r1, [r2, #4]
 801591a:	c503      	stmia	r5!, {r0, r1}
 801591c:	6818      	ldr	r0, [r3, #0]
 801591e:	ad08      	add	r5, sp, #32
 8015920:	6859      	ldr	r1, [r3, #4]
 8015922:	c503      	stmia	r5!, {r0, r1}
 8015924:	a806      	add	r0, sp, #24
 8015926:	f7fa fb39 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801592a:	4631      	mov	r1, r6
 801592c:	a808      	add	r0, sp, #32
 801592e:	f7fa fb79 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015932:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015936:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801593a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801593e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8015942:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015946:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801594a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801594e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015952:	4f5f      	ldr	r7, [pc, #380]	; (8015ad0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015954:	440a      	add	r2, r1
 8015956:	6838      	ldr	r0, [r7, #0]
 8015958:	46b9      	mov	r9, r7
 801595a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801595e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015962:	4413      	add	r3, r2
 8015964:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015968:	6803      	ldr	r3, [r0, #0]
 801596a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801596c:	4798      	blx	r3
 801596e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015972:	d11d      	bne.n	80159b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015974:	b9fc      	cbnz	r4, 80159b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015976:	f010 0f01 	tst.w	r0, #1
 801597a:	d01c      	beq.n	80159b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801597c:	f8d9 0000 	ldr.w	r0, [r9]
 8015980:	2700      	movs	r7, #0
 8015982:	b2ad      	uxth	r5, r5
 8015984:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8015988:	6801      	ldr	r1, [r0, #0]
 801598a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801598e:	f8cd b00c 	str.w	fp, [sp, #12]
 8015992:	9501      	str	r5, [sp, #4]
 8015994:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015998:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801599c:	9402      	str	r4, [sp, #8]
 801599e:	fa1f f488 	uxth.w	r4, r8
 80159a2:	9400      	str	r4, [sp, #0]
 80159a4:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80159a6:	4631      	mov	r1, r6
 80159a8:	47a0      	blx	r4
 80159aa:	b00b      	add	sp, #44	; 0x2c
 80159ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159b0:	f010 0f04 	tst.w	r0, #4
 80159b4:	e7e1      	b.n	801597a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80159b6:	f8d9 0000 	ldr.w	r0, [r9]
 80159ba:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80159be:	6803      	ldr	r3, [r0, #0]
 80159c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80159c2:	4798      	blx	r3
 80159c4:	4b43      	ldr	r3, [pc, #268]	; (8015ad4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80159c6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80159ca:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80159ce:	881a      	ldrh	r2, [r3, #0]
 80159d0:	469a      	mov	sl, r3
 80159d2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80159d6:	fb05 f502 	mul.w	r5, r5, r2
 80159da:	fb02 1404 	mla	r4, r2, r4, r1
 80159de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80159e2:	d059      	beq.n	8015a98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80159e4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80159e8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80159ec:	fa1f f28b 	uxth.w	r2, fp
 80159f0:	469e      	mov	lr, r3
 80159f2:	fa1f f989 	uxth.w	r9, r9
 80159f6:	42ac      	cmp	r4, r5
 80159f8:	d264      	bcs.n	8015ac4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80159fa:	eb04 0a07 	add.w	sl, r4, r7
 80159fe:	4554      	cmp	r4, sl
 8015a00:	d23d      	bcs.n	8015a7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8015a02:	8821      	ldrh	r1, [r4, #0]
 8015a04:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015a08:	1208      	asrs	r0, r1, #8
 8015a0a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015a0e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015a12:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015a16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a1a:	00c9      	lsls	r1, r1, #3
 8015a1c:	fb10 f009 	smulbb	r0, r0, r9
 8015a20:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015a24:	b2c9      	uxtb	r1, r1
 8015a26:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015a2a:	10d8      	asrs	r0, r3, #3
 8015a2c:	fb1b fb09 	smulbb	fp, fp, r9
 8015a30:	00db      	lsls	r3, r3, #3
 8015a32:	fa1f fc8c 	uxth.w	ip, ip
 8015a36:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015a3a:	fb11 f109 	smulbb	r1, r1, r9
 8015a3e:	b2db      	uxtb	r3, r3
 8015a40:	fb00 b002 	mla	r0, r0, r2, fp
 8015a44:	f10c 0b01 	add.w	fp, ip, #1
 8015a48:	fb03 1302 	mla	r3, r3, r2, r1
 8015a4c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015a50:	b29b      	uxth	r3, r3
 8015a52:	b280      	uxth	r0, r0
 8015a54:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015a58:	f103 0c01 	add.w	ip, r3, #1
 8015a5c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015a60:	1c43      	adds	r3, r0, #1
 8015a62:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015a66:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015a6a:	0940      	lsrs	r0, r0, #5
 8015a6c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015a70:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015a74:	ea4c 0c00 	orr.w	ip, ip, r0
 8015a78:	f824 cb02 	strh.w	ip, [r4], #2
 8015a7c:	e7bf      	b.n	80159fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8015a7e:	f8be 3000 	ldrh.w	r3, [lr]
 8015a82:	eba3 0308 	sub.w	r3, r3, r8
 8015a86:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015a8a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015a8e:	eba3 0308 	sub.w	r3, r3, r8
 8015a92:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015a96:	e7ae      	b.n	80159f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015a98:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015a9c:	f8d9 0000 	ldr.w	r0, [r9]
 8015aa0:	42ac      	cmp	r4, r5
 8015aa2:	6803      	ldr	r3, [r0, #0]
 8015aa4:	d20e      	bcs.n	8015ac4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015aa6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8015aaa:	4632      	mov	r2, r6
 8015aac:	463b      	mov	r3, r7
 8015aae:	4621      	mov	r1, r4
 8015ab0:	47c0      	blx	r8
 8015ab2:	f8ba 3000 	ldrh.w	r3, [sl]
 8015ab6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015aba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015abe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015ac2:	e7eb      	b.n	8015a9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015ac4:	4b02      	ldr	r3, [pc, #8]	; (8015ad0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015ac6:	6818      	ldr	r0, [r3, #0]
 8015ac8:	6803      	ldr	r3, [r0, #0]
 8015aca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015acc:	4798      	blx	r3
 8015ace:	e76c      	b.n	80159aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015ad0:	2400e424 	.word	0x2400e424
 8015ad4:	2400e41e 	.word	0x2400e41e

08015ad8 <_ZN8touchgfx8LCD16bppD0Ev>:
 8015ad8:	b510      	push	{r4, lr}
 8015ada:	4604      	mov	r4, r0
 8015adc:	2184      	movs	r1, #132	; 0x84
 8015ade:	f00b f95c 	bl	8020d9a <_ZdlPvj>
 8015ae2:	4620      	mov	r0, r4
 8015ae4:	bd10      	pop	{r4, pc}

08015ae6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8015ae6:	b510      	push	{r4, lr}
 8015ae8:	4604      	mov	r4, r0
 8015aea:	2104      	movs	r1, #4
 8015aec:	f00b f955 	bl	8020d9a <_ZdlPvj>
 8015af0:	4620      	mov	r0, r4
 8015af2:	bd10      	pop	{r4, pc}

08015af4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8015af4:	b510      	push	{r4, lr}
 8015af6:	4604      	mov	r4, r0
 8015af8:	2104      	movs	r1, #4
 8015afa:	f00b f94e 	bl	8020d9a <_ZdlPvj>
 8015afe:	4620      	mov	r0, r4
 8015b00:	bd10      	pop	{r4, pc}

08015b02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8015b02:	b510      	push	{r4, lr}
 8015b04:	4604      	mov	r4, r0
 8015b06:	f640 0144 	movw	r1, #2116	; 0x844
 8015b0a:	f00b f946 	bl	8020d9a <_ZdlPvj>
 8015b0e:	4620      	mov	r0, r4
 8015b10:	bd10      	pop	{r4, pc}

08015b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015b12:	b510      	push	{r4, lr}
 8015b14:	4604      	mov	r4, r0
 8015b16:	2104      	movs	r1, #4
 8015b18:	f00b f93f 	bl	8020d9a <_ZdlPvj>
 8015b1c:	4620      	mov	r0, r4
 8015b1e:	bd10      	pop	{r4, pc}

08015b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015b20:	b510      	push	{r4, lr}
 8015b22:	4604      	mov	r4, r0
 8015b24:	2104      	movs	r1, #4
 8015b26:	f00b f938 	bl	8020d9a <_ZdlPvj>
 8015b2a:	4620      	mov	r0, r4
 8015b2c:	bd10      	pop	{r4, pc}

08015b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015b2e:	b510      	push	{r4, lr}
 8015b30:	4604      	mov	r4, r0
 8015b32:	2104      	movs	r1, #4
 8015b34:	f00b f931 	bl	8020d9a <_ZdlPvj>
 8015b38:	4620      	mov	r0, r4
 8015b3a:	bd10      	pop	{r4, pc}

08015b3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015b3c:	b510      	push	{r4, lr}
 8015b3e:	4604      	mov	r4, r0
 8015b40:	2104      	movs	r1, #4
 8015b42:	f00b f92a 	bl	8020d9a <_ZdlPvj>
 8015b46:	4620      	mov	r0, r4
 8015b48:	bd10      	pop	{r4, pc}

08015b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015b4a:	b510      	push	{r4, lr}
 8015b4c:	4604      	mov	r4, r0
 8015b4e:	2104      	movs	r1, #4
 8015b50:	f00b f923 	bl	8020d9a <_ZdlPvj>
 8015b54:	4620      	mov	r0, r4
 8015b56:	bd10      	pop	{r4, pc}

08015b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015b58:	b510      	push	{r4, lr}
 8015b5a:	4604      	mov	r4, r0
 8015b5c:	2104      	movs	r1, #4
 8015b5e:	f00b f91c 	bl	8020d9a <_ZdlPvj>
 8015b62:	4620      	mov	r0, r4
 8015b64:	bd10      	pop	{r4, pc}

08015b66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015b66:	b510      	push	{r4, lr}
 8015b68:	4604      	mov	r4, r0
 8015b6a:	2104      	movs	r1, #4
 8015b6c:	f00b f915 	bl	8020d9a <_ZdlPvj>
 8015b70:	4620      	mov	r0, r4
 8015b72:	bd10      	pop	{r4, pc}

08015b74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015b74:	b510      	push	{r4, lr}
 8015b76:	4604      	mov	r4, r0
 8015b78:	2104      	movs	r1, #4
 8015b7a:	f00b f90e 	bl	8020d9a <_ZdlPvj>
 8015b7e:	4620      	mov	r0, r4
 8015b80:	bd10      	pop	{r4, pc}

08015b82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015b82:	b510      	push	{r4, lr}
 8015b84:	4604      	mov	r4, r0
 8015b86:	2104      	movs	r1, #4
 8015b88:	f00b f907 	bl	8020d9a <_ZdlPvj>
 8015b8c:	4620      	mov	r0, r4
 8015b8e:	bd10      	pop	{r4, pc}

08015b90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015b90:	b510      	push	{r4, lr}
 8015b92:	4604      	mov	r4, r0
 8015b94:	2104      	movs	r1, #4
 8015b96:	f00b f900 	bl	8020d9a <_ZdlPvj>
 8015b9a:	4620      	mov	r0, r4
 8015b9c:	bd10      	pop	{r4, pc}

08015b9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015b9e:	b510      	push	{r4, lr}
 8015ba0:	4604      	mov	r4, r0
 8015ba2:	2104      	movs	r1, #4
 8015ba4:	f00b f8f9 	bl	8020d9a <_ZdlPvj>
 8015ba8:	4620      	mov	r0, r4
 8015baa:	bd10      	pop	{r4, pc}

08015bac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015bac:	b510      	push	{r4, lr}
 8015bae:	4604      	mov	r4, r0
 8015bb0:	2104      	movs	r1, #4
 8015bb2:	f00b f8f2 	bl	8020d9a <_ZdlPvj>
 8015bb6:	4620      	mov	r0, r4
 8015bb8:	bd10      	pop	{r4, pc}

08015bba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015bba:	b510      	push	{r4, lr}
 8015bbc:	4604      	mov	r4, r0
 8015bbe:	2104      	movs	r1, #4
 8015bc0:	f00b f8eb 	bl	8020d9a <_ZdlPvj>
 8015bc4:	4620      	mov	r0, r4
 8015bc6:	bd10      	pop	{r4, pc}

08015bc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015bc8:	b510      	push	{r4, lr}
 8015bca:	4604      	mov	r4, r0
 8015bcc:	2104      	movs	r1, #4
 8015bce:	f00b f8e4 	bl	8020d9a <_ZdlPvj>
 8015bd2:	4620      	mov	r0, r4
 8015bd4:	bd10      	pop	{r4, pc}

08015bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015bd6:	b510      	push	{r4, lr}
 8015bd8:	4604      	mov	r4, r0
 8015bda:	2104      	movs	r1, #4
 8015bdc:	f00b f8dd 	bl	8020d9a <_ZdlPvj>
 8015be0:	4620      	mov	r0, r4
 8015be2:	bd10      	pop	{r4, pc}

08015be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015be4:	b510      	push	{r4, lr}
 8015be6:	4604      	mov	r4, r0
 8015be8:	2104      	movs	r1, #4
 8015bea:	f00b f8d6 	bl	8020d9a <_ZdlPvj>
 8015bee:	4620      	mov	r0, r4
 8015bf0:	bd10      	pop	{r4, pc}

08015bf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015bf2:	b510      	push	{r4, lr}
 8015bf4:	4604      	mov	r4, r0
 8015bf6:	2104      	movs	r1, #4
 8015bf8:	f00b f8cf 	bl	8020d9a <_ZdlPvj>
 8015bfc:	4620      	mov	r0, r4
 8015bfe:	bd10      	pop	{r4, pc}

08015c00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015c00:	b510      	push	{r4, lr}
 8015c02:	4604      	mov	r4, r0
 8015c04:	2104      	movs	r1, #4
 8015c06:	f00b f8c8 	bl	8020d9a <_ZdlPvj>
 8015c0a:	4620      	mov	r0, r4
 8015c0c:	bd10      	pop	{r4, pc}

08015c0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015c0e:	b510      	push	{r4, lr}
 8015c10:	4604      	mov	r4, r0
 8015c12:	2104      	movs	r1, #4
 8015c14:	f00b f8c1 	bl	8020d9a <_ZdlPvj>
 8015c18:	4620      	mov	r0, r4
 8015c1a:	bd10      	pop	{r4, pc}

08015c1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015c1c:	b510      	push	{r4, lr}
 8015c1e:	4604      	mov	r4, r0
 8015c20:	2104      	movs	r1, #4
 8015c22:	f00b f8ba 	bl	8020d9a <_ZdlPvj>
 8015c26:	4620      	mov	r0, r4
 8015c28:	bd10      	pop	{r4, pc}

08015c2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015c2a:	b510      	push	{r4, lr}
 8015c2c:	4604      	mov	r4, r0
 8015c2e:	2104      	movs	r1, #4
 8015c30:	f00b f8b3 	bl	8020d9a <_ZdlPvj>
 8015c34:	4620      	mov	r0, r4
 8015c36:	bd10      	pop	{r4, pc}

08015c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015c38:	b510      	push	{r4, lr}
 8015c3a:	4604      	mov	r4, r0
 8015c3c:	2104      	movs	r1, #4
 8015c3e:	f00b f8ac 	bl	8020d9a <_ZdlPvj>
 8015c42:	4620      	mov	r0, r4
 8015c44:	bd10      	pop	{r4, pc}

08015c46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015c46:	b510      	push	{r4, lr}
 8015c48:	4604      	mov	r4, r0
 8015c4a:	2104      	movs	r1, #4
 8015c4c:	f00b f8a5 	bl	8020d9a <_ZdlPvj>
 8015c50:	4620      	mov	r0, r4
 8015c52:	bd10      	pop	{r4, pc}

08015c54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015c54:	b510      	push	{r4, lr}
 8015c56:	4604      	mov	r4, r0
 8015c58:	2104      	movs	r1, #4
 8015c5a:	f00b f89e 	bl	8020d9a <_ZdlPvj>
 8015c5e:	4620      	mov	r0, r4
 8015c60:	bd10      	pop	{r4, pc}

08015c62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015c62:	b510      	push	{r4, lr}
 8015c64:	4604      	mov	r4, r0
 8015c66:	2104      	movs	r1, #4
 8015c68:	f00b f897 	bl	8020d9a <_ZdlPvj>
 8015c6c:	4620      	mov	r0, r4
 8015c6e:	bd10      	pop	{r4, pc}

08015c70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8015c70:	b510      	push	{r4, lr}
 8015c72:	4604      	mov	r4, r0
 8015c74:	2104      	movs	r1, #4
 8015c76:	f00b f890 	bl	8020d9a <_ZdlPvj>
 8015c7a:	4620      	mov	r0, r4
 8015c7c:	bd10      	pop	{r4, pc}

08015c7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8015c7e:	b510      	push	{r4, lr}
 8015c80:	4604      	mov	r4, r0
 8015c82:	2104      	movs	r1, #4
 8015c84:	f00b f889 	bl	8020d9a <_ZdlPvj>
 8015c88:	4620      	mov	r0, r4
 8015c8a:	bd10      	pop	{r4, pc}

08015c8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015c8c:	b510      	push	{r4, lr}
 8015c8e:	4604      	mov	r4, r0
 8015c90:	2104      	movs	r1, #4
 8015c92:	f00b f882 	bl	8020d9a <_ZdlPvj>
 8015c96:	4620      	mov	r0, r4
 8015c98:	bd10      	pop	{r4, pc}
	...

08015c9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ca0:	b08f      	sub	sp, #60	; 0x3c
 8015ca2:	461c      	mov	r4, r3
 8015ca4:	9205      	str	r2, [sp, #20]
 8015ca6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015caa:	9100      	str	r1, [sp, #0]
 8015cac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015cae:	9201      	str	r2, [sp, #4]
 8015cb0:	2a00      	cmp	r2, #0
 8015cb2:	f000 8116 	beq.w	8015ee2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8015cb6:	6820      	ldr	r0, [r4, #0]
 8015cb8:	aa0a      	add	r2, sp, #40	; 0x28
 8015cba:	6861      	ldr	r1, [r4, #4]
 8015cbc:	c203      	stmia	r2!, {r0, r1}
 8015cbe:	6818      	ldr	r0, [r3, #0]
 8015cc0:	aa0c      	add	r2, sp, #48	; 0x30
 8015cc2:	6859      	ldr	r1, [r3, #4]
 8015cc4:	c203      	stmia	r2!, {r0, r1}
 8015cc6:	a80a      	add	r0, sp, #40	; 0x28
 8015cc8:	f7fa f968 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015ccc:	4621      	mov	r1, r4
 8015cce:	a80c      	add	r0, sp, #48	; 0x30
 8015cd0:	f7fa f9a8 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015cd4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8015cd8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8015cdc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8015ce0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8015ce4:	bfdb      	ittet	le
 8015ce6:	b2b3      	uxthle	r3, r6
 8015ce8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8015cec:	2301      	movgt	r3, #1
 8015cee:	fb92 f3f3 	sdivle	r3, r2, r3
 8015cf2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8015cf6:	441d      	add	r5, r3
 8015cf8:	fb92 f1f3 	sdiv	r1, r2, r3
 8015cfc:	fa1f fc81 	uxth.w	ip, r1
 8015d00:	3d01      	subs	r5, #1
 8015d02:	fb0c 2413 	mls	r4, ip, r3, r2
 8015d06:	4661      	mov	r1, ip
 8015d08:	fb14 f406 	smulbb	r4, r4, r6
 8015d0c:	4404      	add	r4, r0
 8015d0e:	fb95 f5f3 	sdiv	r5, r5, r3
 8015d12:	b2a4      	uxth	r4, r4
 8015d14:	b131      	cbz	r1, 8015d24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8015d16:	9b05      	ldr	r3, [sp, #20]
 8015d18:	9900      	ldr	r1, [sp, #0]
 8015d1a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015d1e:	ba1b      	rev	r3, r3
 8015d20:	4419      	add	r1, r3
 8015d22:	9100      	str	r1, [sp, #0]
 8015d24:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8015d28:	b2ad      	uxth	r5, r5
 8015d2a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8015d2e:	4418      	add	r0, r3
 8015d30:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8015d34:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8015d38:	00ad      	lsls	r5, r5, #2
 8015d3a:	441a      	add	r2, r3
 8015d3c:	4b6a      	ldr	r3, [pc, #424]	; (8015ee8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015d3e:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8015d42:	6818      	ldr	r0, [r3, #0]
 8015d44:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015d48:	6803      	ldr	r3, [r0, #0]
 8015d4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015d4c:	4798      	blx	r3
 8015d4e:	4967      	ldr	r1, [pc, #412]	; (8015eec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015d50:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8015d54:	2c00      	cmp	r4, #0
 8015d56:	880b      	ldrh	r3, [r1, #0]
 8015d58:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8015d5c:	bf0c      	ite	eq
 8015d5e:	46c6      	moveq	lr, r8
 8015d60:	f04f 0e00 	movne.w	lr, #0
 8015d64:	9109      	str	r1, [sp, #36]	; 0x24
 8015d66:	fb03 c202 	mla	r2, r3, r2, ip
 8015d6a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015d6e:	4373      	muls	r3, r6
 8015d70:	fa1f fe8e 	uxth.w	lr, lr
 8015d74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015d78:	9103      	str	r1, [sp, #12]
 8015d7a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015d7e:	9306      	str	r3, [sp, #24]
 8015d80:	1d2b      	adds	r3, r5, #4
 8015d82:	9307      	str	r3, [sp, #28]
 8015d84:	9b01      	ldr	r3, [sp, #4]
 8015d86:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8015d8a:	2300      	movs	r3, #0
 8015d8c:	b292      	uxth	r2, r2
 8015d8e:	9302      	str	r3, [sp, #8]
 8015d90:	9204      	str	r2, [sp, #16]
 8015d92:	9a06      	ldr	r2, [sp, #24]
 8015d94:	4282      	cmp	r2, r0
 8015d96:	f240 809f 	bls.w	8015ed8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8015d9a:	b963      	cbnz	r3, 8015db6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015d9c:	9b00      	ldr	r3, [sp, #0]
 8015d9e:	781a      	ldrb	r2, [r3, #0]
 8015da0:	0993      	lsrs	r3, r2, #6
 8015da2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8015da6:	9202      	str	r2, [sp, #8]
 8015da8:	1e5a      	subs	r2, r3, #1
 8015daa:	2a02      	cmp	r2, #2
 8015dac:	d815      	bhi.n	8015dda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8015dae:	9a00      	ldr	r2, [sp, #0]
 8015db0:	b29b      	uxth	r3, r3
 8015db2:	3201      	adds	r2, #1
 8015db4:	9200      	str	r2, [sp, #0]
 8015db6:	b1b4      	cbz	r4, 8015de6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8015db8:	429c      	cmp	r4, r3
 8015dba:	bf91      	iteee	ls
 8015dbc:	1b1c      	subls	r4, r3, r4
 8015dbe:	1ae4      	subhi	r4, r4, r3
 8015dc0:	4671      	movhi	r1, lr
 8015dc2:	f04f 0a00 	movhi.w	sl, #0
 8015dc6:	bf9b      	ittet	ls
 8015dc8:	fa1f fa84 	uxthls.w	sl, r4
 8015dcc:	2400      	movls	r4, #0
 8015dce:	b2a4      	uxthhi	r4, r4
 8015dd0:	fa1f f188 	uxthls.w	r1, r8
 8015dd4:	4653      	mov	r3, sl
 8015dd6:	468e      	mov	lr, r1
 8015dd8:	e7db      	b.n	8015d92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8015dda:	9a00      	ldr	r2, [sp, #0]
 8015ddc:	9b00      	ldr	r3, [sp, #0]
 8015dde:	3202      	adds	r2, #2
 8015de0:	785b      	ldrb	r3, [r3, #1]
 8015de2:	9200      	str	r2, [sp, #0]
 8015de4:	e7e7      	b.n	8015db6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015de6:	2202      	movs	r2, #2
 8015de8:	9907      	ldr	r1, [sp, #28]
 8015dea:	4573      	cmp	r3, lr
 8015dec:	4615      	mov	r5, r2
 8015dee:	9a02      	ldr	r2, [sp, #8]
 8015df0:	bf24      	itt	cs
 8015df2:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015df6:	46f1      	movcs	r9, lr
 8015df8:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015dfc:	9905      	ldr	r1, [sp, #20]
 8015dfe:	bf34      	ite	cc
 8015e00:	4699      	movcc	r9, r3
 8015e02:	fa1f fa8a 	uxthcs.w	sl, sl
 8015e06:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015e0a:	bf38      	it	cc
 8015e0c:	ebae 0103 	subcc.w	r1, lr, r3
 8015e10:	9a01      	ldr	r2, [sp, #4]
 8015e12:	bf2e      	itee	cs
 8015e14:	4621      	movcs	r1, r4
 8015e16:	b289      	uxthcc	r1, r1
 8015e18:	46a2      	movcc	sl, r4
 8015e1a:	2aff      	cmp	r2, #255	; 0xff
 8015e1c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015e20:	d105      	bne.n	8015e2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8015e22:	4481      	add	r9, r0
 8015e24:	4581      	cmp	r9, r0
 8015e26:	d045      	beq.n	8015eb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015e28:	f820 cb02 	strh.w	ip, [r0], #2
 8015e2c:	e7fa      	b.n	8015e24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8015e2e:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015e32:	9d03      	ldr	r5, [sp, #12]
 8015e34:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015e38:	4481      	add	r9, r0
 8015e3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015e3e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015e42:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015e46:	fa5f fc8c 	uxtb.w	ip, ip
 8015e4a:	436a      	muls	r2, r5
 8015e4c:	fb0b fb05 	mul.w	fp, fp, r5
 8015e50:	fb0c fc05 	mul.w	ip, ip, r5
 8015e54:	9208      	str	r2, [sp, #32]
 8015e56:	4581      	cmp	r9, r0
 8015e58:	d02c      	beq.n	8015eb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015e5a:	8802      	ldrh	r2, [r0, #0]
 8015e5c:	9d04      	ldr	r5, [sp, #16]
 8015e5e:	1216      	asrs	r6, r2, #8
 8015e60:	9f04      	ldr	r7, [sp, #16]
 8015e62:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015e66:	fb16 f605 	smulbb	r6, r6, r5
 8015e6a:	9d08      	ldr	r5, [sp, #32]
 8015e6c:	442e      	add	r6, r5
 8015e6e:	10d5      	asrs	r5, r2, #3
 8015e70:	00d2      	lsls	r2, r2, #3
 8015e72:	b2b6      	uxth	r6, r6
 8015e74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015e78:	b2d2      	uxtb	r2, r2
 8015e7a:	fb15 f507 	smulbb	r5, r5, r7
 8015e7e:	fb12 f207 	smulbb	r2, r2, r7
 8015e82:	1c77      	adds	r7, r6, #1
 8015e84:	445d      	add	r5, fp
 8015e86:	4462      	add	r2, ip
 8015e88:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015e8c:	b2ad      	uxth	r5, r5
 8015e8e:	b292      	uxth	r2, r2
 8015e90:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015e94:	1c57      	adds	r7, r2, #1
 8015e96:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8015e9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015e9e:	4316      	orrs	r6, r2
 8015ea0:	1c6a      	adds	r2, r5, #1
 8015ea2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015ea6:	096d      	lsrs	r5, r5, #5
 8015ea8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015eac:	432e      	orrs	r6, r5
 8015eae:	f820 6b02 	strh.w	r6, [r0], #2
 8015eb2:	e7d0      	b.n	8015e56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8015eb4:	4573      	cmp	r3, lr
 8015eb6:	d38d      	bcc.n	8015dd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8015eb8:	fa1f f188 	uxth.w	r1, r8
 8015ebc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8015ec0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ec2:	1a64      	subs	r4, r4, r1
 8015ec4:	881b      	ldrh	r3, [r3, #0]
 8015ec6:	b2a4      	uxth	r4, r4
 8015ec8:	eba3 0308 	sub.w	r3, r3, r8
 8015ecc:	2c00      	cmp	r4, #0
 8015ece:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015ed2:	bf18      	it	ne
 8015ed4:	2100      	movne	r1, #0
 8015ed6:	e77d      	b.n	8015dd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8015ed8:	4b03      	ldr	r3, [pc, #12]	; (8015ee8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015eda:	6818      	ldr	r0, [r3, #0]
 8015edc:	6803      	ldr	r3, [r0, #0]
 8015ede:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ee0:	4798      	blx	r3
 8015ee2:	b00f      	add	sp, #60	; 0x3c
 8015ee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ee8:	2400e424 	.word	0x2400e424
 8015eec:	2400e41e 	.word	0x2400e41e

08015ef0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ef4:	b09f      	sub	sp, #124	; 0x7c
 8015ef6:	461d      	mov	r5, r3
 8015ef8:	4604      	mov	r4, r0
 8015efa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015efc:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8015f00:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8015f04:	9209      	str	r2, [sp, #36]	; 0x24
 8015f06:	2a00      	cmp	r2, #0
 8015f08:	f000 81ed 	beq.w	80162e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8015f0c:	6828      	ldr	r0, [r5, #0]
 8015f0e:	aa1a      	add	r2, sp, #104	; 0x68
 8015f10:	6869      	ldr	r1, [r5, #4]
 8015f12:	c203      	stmia	r2!, {r0, r1}
 8015f14:	6818      	ldr	r0, [r3, #0]
 8015f16:	aa1c      	add	r2, sp, #112	; 0x70
 8015f18:	6859      	ldr	r1, [r3, #4]
 8015f1a:	c203      	stmia	r2!, {r0, r1}
 8015f1c:	a81a      	add	r0, sp, #104	; 0x68
 8015f1e:	f7fa f83d 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015f22:	4629      	mov	r1, r5
 8015f24:	a81c      	add	r0, sp, #112	; 0x70
 8015f26:	f7fa f87d 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015f2a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8015f2e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8015f32:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8015f36:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8015f3a:	bfdb      	ittet	le
 8015f3c:	b29a      	uxthle	r2, r3
 8015f3e:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8015f42:	2201      	movgt	r2, #1
 8015f44:	fb91 f2f2 	sdivle	r2, r1, r2
 8015f48:	9202      	str	r2, [sp, #8]
 8015f4a:	9802      	ldr	r0, [sp, #8]
 8015f4c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8015f50:	9902      	ldr	r1, [sp, #8]
 8015f52:	fb92 f0f0 	sdiv	r0, r2, r0
 8015f56:	b280      	uxth	r0, r0
 8015f58:	4488      	add	r8, r1
 8015f5a:	9010      	str	r0, [sp, #64]	; 0x40
 8015f5c:	f108 38ff 	add.w	r8, r8, #4294967295
 8015f60:	9802      	ldr	r0, [sp, #8]
 8015f62:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8015f64:	fb05 2510 	mls	r5, r5, r0, r2
 8015f68:	fb98 f8f1 	sdiv	r8, r8, r1
 8015f6c:	fb15 f503 	smulbb	r5, r5, r3
 8015f70:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8015f74:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8015f78:	f108 0801 	add.w	r8, r8, #1
 8015f7c:	440d      	add	r5, r1
 8015f7e:	4419      	add	r1, r3
 8015f80:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8015f84:	fa1f f888 	uxth.w	r8, r8
 8015f88:	441a      	add	r2, r3
 8015f8a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8015f8e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8015f92:	b2ad      	uxth	r5, r5
 8015f94:	9304      	str	r3, [sp, #16]
 8015f96:	4b94      	ldr	r3, [pc, #592]	; (80161e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8015f98:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8015f9c:	6818      	ldr	r0, [r3, #0]
 8015f9e:	6803      	ldr	r3, [r0, #0]
 8015fa0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015fa2:	4798      	blx	r3
 8015fa4:	4b91      	ldr	r3, [pc, #580]	; (80161ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8015fa6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8015faa:	2d00      	cmp	r5, #0
 8015fac:	881a      	ldrh	r2, [r3, #0]
 8015fae:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8015fb2:	fb02 f606 	mul.w	r6, r2, r6
 8015fb6:	fb02 7101 	mla	r1, r2, r1, r7
 8015fba:	9318      	str	r3, [sp, #96]	; 0x60
 8015fbc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015fc0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8015fc4:	f04f 0100 	mov.w	r1, #0
 8015fc8:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8015fcc:	930f      	str	r3, [sp, #60]	; 0x3c
 8015fce:	4b88      	ldr	r3, [pc, #544]	; (80161f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8015fd0:	920a      	str	r2, [sp, #40]	; 0x28
 8015fd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fd4:	eba3 0304 	sub.w	r3, r3, r4
 8015fd8:	910d      	str	r1, [sp, #52]	; 0x34
 8015fda:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8015fde:	9319      	str	r3, [sp, #100]	; 0x64
 8015fe0:	f108 0204 	add.w	r2, r8, #4
 8015fe4:	9211      	str	r2, [sp, #68]	; 0x44
 8015fe6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015fe8:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8015fec:	9215      	str	r2, [sp, #84]	; 0x54
 8015fee:	9a04      	ldr	r2, [sp, #16]
 8015ff0:	bf18      	it	ne
 8015ff2:	2200      	movne	r2, #0
 8015ff4:	b292      	uxth	r2, r2
 8015ff6:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015ff8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015ffa:	fa11 f383 	uxtah	r3, r1, r3
 8015ffe:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016000:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016004:	3304      	adds	r3, #4
 8016006:	9306      	str	r3, [sp, #24]
 8016008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801600a:	4283      	cmp	r3, r0
 801600c:	f240 8166 	bls.w	80162dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8016010:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8016014:	f04f 0a01 	mov.w	sl, #1
 8016018:	9902      	ldr	r1, [sp, #8]
 801601a:	9e06      	ldr	r6, [sp, #24]
 801601c:	46d3      	mov	fp, sl
 801601e:	4657      	mov	r7, sl
 8016020:	7836      	ldrb	r6, [r6, #0]
 8016022:	fbb5 f3f3 	udiv	r3, r5, r3
 8016026:	1acb      	subs	r3, r1, r3
 8016028:	9612      	str	r6, [sp, #72]	; 0x48
 801602a:	3601      	adds	r6, #1
 801602c:	b29b      	uxth	r3, r3
 801602e:	9605      	str	r6, [sp, #20]
 8016030:	9316      	str	r3, [sp, #88]	; 0x58
 8016032:	9b06      	ldr	r3, [sp, #24]
 8016034:	7859      	ldrb	r1, [r3, #1]
 8016036:	789b      	ldrb	r3, [r3, #2]
 8016038:	021b      	lsls	r3, r3, #8
 801603a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801603e:	9906      	ldr	r1, [sp, #24]
 8016040:	78c9      	ldrb	r1, [r1, #3]
 8016042:	430b      	orrs	r3, r1
 8016044:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8016046:	4419      	add	r1, r3
 8016048:	1c4e      	adds	r6, r1, #1
 801604a:	7849      	ldrb	r1, [r1, #1]
 801604c:	9603      	str	r6, [sp, #12]
 801604e:	0209      	lsls	r1, r1, #8
 8016050:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016052:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 8016056:	5cf3      	ldrb	r3, [r6, r3]
 8016058:	4319      	orrs	r1, r3
 801605a:	b28b      	uxth	r3, r1
 801605c:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8016060:	930c      	str	r3, [sp, #48]	; 0x30
 8016062:	2300      	movs	r3, #0
 8016064:	9307      	str	r3, [sp, #28]
 8016066:	469c      	mov	ip, r3
 8016068:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801606c:	930e      	str	r3, [sp, #56]	; 0x38
 801606e:	2d00      	cmp	r5, #0
 8016070:	d07e      	beq.n	8016170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8016072:	42af      	cmp	r7, r5
 8016074:	d26e      	bcs.n	8016154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 8016076:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016078:	1bed      	subs	r5, r5, r7
 801607a:	9201      	str	r2, [sp, #4]
 801607c:	4283      	cmp	r3, r0
 801607e:	b2ad      	uxth	r5, r5
 8016080:	d802      	bhi.n	8016088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8016082:	e073      	b.n	801616c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016084:	2b00      	cmp	r3, #0
 8016086:	d15f      	bne.n	8016148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8016088:	9b03      	ldr	r3, [sp, #12]
 801608a:	f1cb 0207 	rsb	r2, fp, #7
 801608e:	785b      	ldrb	r3, [r3, #1]
 8016090:	4093      	lsls	r3, r2
 8016092:	005b      	lsls	r3, r3, #1
 8016094:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016098:	9b03      	ldr	r3, [sp, #12]
 801609a:	781b      	ldrb	r3, [r3, #0]
 801609c:	fa43 f30b 	asr.w	r3, r3, fp
 80160a0:	b2db      	uxtb	r3, r3
 80160a2:	4313      	orrs	r3, r2
 80160a4:	f10b 0201 	add.w	r2, fp, #1
 80160a8:	fa5f fb82 	uxtb.w	fp, r2
 80160ac:	9a03      	ldr	r2, [sp, #12]
 80160ae:	b29f      	uxth	r7, r3
 80160b0:	f1bb 0f08 	cmp.w	fp, #8
 80160b4:	bf13      	iteet	ne
 80160b6:	3201      	addne	r2, #1
 80160b8:	3202      	addeq	r2, #2
 80160ba:	f04f 0b00 	moveq.w	fp, #0
 80160be:	9203      	strne	r2, [sp, #12]
 80160c0:	bf08      	it	eq
 80160c2:	9203      	streq	r2, [sp, #12]
 80160c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80160c6:	42ba      	cmp	r2, r7
 80160c8:	d309      	bcc.n	80160de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 80160ca:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 80160ce:	2301      	movs	r3, #1
 80160d0:	9a05      	ldr	r2, [sp, #20]
 80160d2:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80160d6:	d30e      	bcc.n	80160f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80160d8:	469a      	mov	sl, r3
 80160da:	2600      	movs	r6, #0
 80160dc:	e035      	b.n	801614a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 80160de:	9b05      	ldr	r3, [sp, #20]
 80160e0:	429f      	cmp	r7, r3
 80160e2:	d318      	bcc.n	8016116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 80160e4:	eb04 030a 	add.w	r3, r4, sl
 80160e8:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 80160ec:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 80160f0:	f10a 0301 	add.w	r3, sl, #1
 80160f4:	b29b      	uxth	r3, r3
 80160f6:	9a05      	ldr	r2, [sp, #20]
 80160f8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 80160fc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016100:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016102:	7116      	strb	r6, [r2, #4]
 8016104:	f10a 0601 	add.w	r6, sl, #1
 8016108:	80d1      	strh	r1, [r2, #6]
 801610a:	7156      	strb	r6, [r2, #5]
 801610c:	9a05      	ldr	r2, [sp, #20]
 801610e:	3201      	adds	r2, #1
 8016110:	b292      	uxth	r2, r2
 8016112:	9205      	str	r2, [sp, #20]
 8016114:	e7e0      	b.n	80160d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 8016116:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801611a:	463a      	mov	r2, r7
 801611c:	795b      	ldrb	r3, [r3, #5]
 801611e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8016122:	4426      	add	r6, r4
 8016124:	9919      	ldr	r1, [sp, #100]	; 0x64
 8016126:	eb01 0c06 	add.w	ip, r1, r6
 801612a:	f1bc 0f00 	cmp.w	ip, #0
 801612e:	dd07      	ble.n	8016140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8016130:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016134:	f892 c004 	ldrb.w	ip, [r2, #4]
 8016138:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801613c:	88d2      	ldrh	r2, [r2, #6]
 801613e:	e7f1      	b.n	8016124 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8016140:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8016144:	b29b      	uxth	r3, r3
 8016146:	e7c3      	b.n	80160d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8016148:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801614a:	970c      	str	r7, [sp, #48]	; 0x30
 801614c:	46b4      	mov	ip, r6
 801614e:	9a01      	ldr	r2, [sp, #4]
 8016150:	461f      	mov	r7, r3
 8016152:	e78c      	b.n	801606e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8016154:	1b7b      	subs	r3, r7, r5
 8016156:	eb0c 0605 	add.w	r6, ip, r5
 801615a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801615e:	b29b      	uxth	r3, r3
 8016160:	b2b6      	uxth	r6, r6
 8016162:	9201      	str	r2, [sp, #4]
 8016164:	2500      	movs	r5, #0
 8016166:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016168:	4282      	cmp	r2, r0
 801616a:	d88b      	bhi.n	8016084 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801616c:	9a01      	ldr	r2, [sp, #4]
 801616e:	e74b      	b.n	8016008 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8016170:	4297      	cmp	r7, r2
 8016172:	d332      	bcc.n	80161da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8016174:	1abb      	subs	r3, r7, r2
 8016176:	9208      	str	r2, [sp, #32]
 8016178:	9501      	str	r5, [sp, #4]
 801617a:	b29b      	uxth	r3, r3
 801617c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801617e:	29ff      	cmp	r1, #255	; 0xff
 8016180:	9908      	ldr	r1, [sp, #32]
 8016182:	eb0c 0601 	add.w	r6, ip, r1
 8016186:	d135      	bne.n	80161f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016188:	f1a0 0e02 	sub.w	lr, r0, #2
 801618c:	b2b6      	uxth	r6, r6
 801618e:	45b4      	cmp	ip, r6
 8016190:	f040 808c 	bne.w	80162ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8016194:	9908      	ldr	r1, [sp, #32]
 8016196:	4297      	cmp	r7, r2
 8016198:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801619c:	d3e2      	bcc.n	8016164 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 801619e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80161a0:	9904      	ldr	r1, [sp, #16]
 80161a2:	8812      	ldrh	r2, [r2, #0]
 80161a4:	1a52      	subs	r2, r2, r1
 80161a6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80161a8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80161ac:	9a07      	ldr	r2, [sp, #28]
 80161ae:	3201      	adds	r2, #1
 80161b0:	428a      	cmp	r2, r1
 80161b2:	9207      	str	r2, [sp, #28]
 80161b4:	f040 8087 	bne.w	80162c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 80161b8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 80161bc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 80161c0:	9b04      	ldr	r3, [sp, #16]
 80161c2:	1bed      	subs	r5, r5, r7
 80161c4:	b2ad      	uxth	r5, r5
 80161c6:	2d00      	cmp	r5, #0
 80161c8:	bf08      	it	eq
 80161ca:	461a      	moveq	r2, r3
 80161cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80161ce:	bf18      	it	ne
 80161d0:	2200      	movne	r2, #0
 80161d2:	3301      	adds	r3, #1
 80161d4:	b292      	uxth	r2, r2
 80161d6:	930d      	str	r3, [sp, #52]	; 0x34
 80161d8:	e70d      	b.n	8015ff6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 80161da:	1bd1      	subs	r1, r2, r7
 80161dc:	9708      	str	r7, [sp, #32]
 80161de:	b28b      	uxth	r3, r1
 80161e0:	9301      	str	r3, [sp, #4]
 80161e2:	462b      	mov	r3, r5
 80161e4:	e7ca      	b.n	801617c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 80161e6:	bf00      	nop
 80161e8:	2400e424 	.word	0x2400e424
 80161ec:	2400e41e 	.word	0x2400e41e
 80161f0:	fffff7fb 	.word	0xfffff7fb
 80161f4:	b2b6      	uxth	r6, r6
 80161f6:	900b      	str	r0, [sp, #44]	; 0x2c
 80161f8:	45b4      	cmp	ip, r6
 80161fa:	d0cb      	beq.n	8016194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 80161fc:	f10c 0101 	add.w	r1, ip, #1
 8016200:	44a4      	add	ip, r4
 8016202:	9117      	str	r1, [sp, #92]	; 0x5c
 8016204:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8016208:	9911      	ldr	r1, [sp, #68]	; 0x44
 801620a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801620e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8016210:	ea4f 2825 	mov.w	r8, r5, asr #8
 8016214:	f8b1 c000 	ldrh.w	ip, [r1]
 8016218:	990e      	ldr	r1, [sp, #56]	; 0x38
 801621a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801621e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8016222:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8016226:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801622a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801622e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016232:	fb1e fe01 	smulbb	lr, lr, r1
 8016236:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8016238:	fa5f fc8c 	uxtb.w	ip, ip
 801623c:	fb08 e801 	mla	r8, r8, r1, lr
 8016240:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016244:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016246:	00ed      	lsls	r5, r5, #3
 8016248:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801624c:	fa1f f888 	uxth.w	r8, r8
 8016250:	fb19 f901 	smulbb	r9, r9, r1
 8016254:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8016256:	b2ed      	uxtb	r5, r5
 8016258:	fb0e 9e01 	mla	lr, lr, r1, r9
 801625c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801625e:	fb1c fc01 	smulbb	ip, ip, r1
 8016262:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8016264:	fa1f fe8e 	uxth.w	lr, lr
 8016268:	fb05 c501 	mla	r5, r5, r1, ip
 801626c:	f108 0c01 	add.w	ip, r8, #1
 8016270:	f10e 0901 	add.w	r9, lr, #1
 8016274:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8016276:	b2ad      	uxth	r5, r5
 8016278:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801627c:	f105 0c01 	add.w	ip, r5, #1
 8016280:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016284:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8016288:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801628c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016290:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016294:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016298:	ea4c 0808 	orr.w	r8, ip, r8
 801629c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 80162a0:	ea48 0809 	orr.w	r8, r8, r9
 80162a4:	f821 8b02 	strh.w	r8, [r1], #2
 80162a8:	910b      	str	r1, [sp, #44]	; 0x2c
 80162aa:	e7a5      	b.n	80161f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 80162ac:	f10c 0801 	add.w	r8, ip, #1
 80162b0:	44a4      	add	ip, r4
 80162b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80162b4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 80162b8:	fa1f fc88 	uxth.w	ip, r8
 80162bc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80162c0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80162c4:	e763      	b.n	801618e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 80162c6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80162ca:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80162ce:	1aad      	subs	r5, r5, r2
 80162d0:	b2ad      	uxth	r5, r5
 80162d2:	2d00      	cmp	r5, #0
 80162d4:	bf18      	it	ne
 80162d6:	2200      	movne	r2, #0
 80162d8:	9201      	str	r2, [sp, #4]
 80162da:	e744      	b.n	8016166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 80162dc:	4b03      	ldr	r3, [pc, #12]	; (80162ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 80162de:	6818      	ldr	r0, [r3, #0]
 80162e0:	6803      	ldr	r3, [r0, #0]
 80162e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80162e4:	4798      	blx	r3
 80162e6:	b01f      	add	sp, #124	; 0x7c
 80162e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162ec:	2400e424 	.word	0x2400e424

080162f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80162f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162f4:	b08f      	sub	sp, #60	; 0x3c
 80162f6:	461c      	mov	r4, r3
 80162f8:	460f      	mov	r7, r1
 80162fa:	9203      	str	r2, [sp, #12]
 80162fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016300:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016302:	9202      	str	r2, [sp, #8]
 8016304:	2a00      	cmp	r2, #0
 8016306:	f000 8128 	beq.w	801655a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801630a:	6820      	ldr	r0, [r4, #0]
 801630c:	aa0a      	add	r2, sp, #40	; 0x28
 801630e:	6861      	ldr	r1, [r4, #4]
 8016310:	c203      	stmia	r2!, {r0, r1}
 8016312:	6818      	ldr	r0, [r3, #0]
 8016314:	aa0c      	add	r2, sp, #48	; 0x30
 8016316:	6859      	ldr	r1, [r3, #4]
 8016318:	c203      	stmia	r2!, {r0, r1}
 801631a:	a80a      	add	r0, sp, #40	; 0x28
 801631c:	f7f9 fe3e 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016320:	4621      	mov	r1, r4
 8016322:	a80c      	add	r0, sp, #48	; 0x30
 8016324:	f7f9 fe7e 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016328:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801632c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8016330:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8016334:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8016338:	bfdb      	ittet	le
 801633a:	b2b3      	uxthle	r3, r6
 801633c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8016340:	2301      	movgt	r3, #1
 8016342:	fb92 f3f3 	sdivle	r3, r2, r3
 8016346:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801634a:	441d      	add	r5, r3
 801634c:	fb92 f1f3 	sdiv	r1, r2, r3
 8016350:	fa1f fc81 	uxth.w	ip, r1
 8016354:	3d01      	subs	r5, #1
 8016356:	fb0c 2413 	mls	r4, ip, r3, r2
 801635a:	4661      	mov	r1, ip
 801635c:	fb14 f406 	smulbb	r4, r4, r6
 8016360:	4404      	add	r4, r0
 8016362:	fb95 f5f3 	sdiv	r5, r5, r3
 8016366:	b2a4      	uxth	r4, r4
 8016368:	b121      	cbz	r1, 8016374 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801636a:	9b03      	ldr	r3, [sp, #12]
 801636c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016370:	ba1b      	rev	r3, r3
 8016372:	441f      	add	r7, r3
 8016374:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016378:	b2ad      	uxth	r5, r5
 801637a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801637e:	4418      	add	r0, r3
 8016380:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8016384:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8016388:	00ad      	lsls	r5, r5, #2
 801638a:	441a      	add	r2, r3
 801638c:	4b74      	ldr	r3, [pc, #464]	; (8016560 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801638e:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8016392:	6818      	ldr	r0, [r3, #0]
 8016394:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016398:	6803      	ldr	r3, [r0, #0]
 801639a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801639c:	4798      	blx	r3
 801639e:	4a71      	ldr	r2, [pc, #452]	; (8016564 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80163a0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80163a4:	2c00      	cmp	r4, #0
 80163a6:	8813      	ldrh	r3, [r2, #0]
 80163a8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80163ac:	bf0c      	ite	eq
 80163ae:	46c8      	moveq	r8, r9
 80163b0:	f04f 0800 	movne.w	r8, #0
 80163b4:	9209      	str	r2, [sp, #36]	; 0x24
 80163b6:	fb03 c101 	mla	r1, r3, r1, ip
 80163ba:	4373      	muls	r3, r6
 80163bc:	fa1f f888 	uxth.w	r8, r8
 80163c0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80163c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80163c8:	9304      	str	r3, [sp, #16]
 80163ca:	1d2b      	adds	r3, r5, #4
 80163cc:	9305      	str	r3, [sp, #20]
 80163ce:	2300      	movs	r3, #0
 80163d0:	9301      	str	r3, [sp, #4]
 80163d2:	9a04      	ldr	r2, [sp, #16]
 80163d4:	4282      	cmp	r2, r0
 80163d6:	f240 80bb 	bls.w	8016550 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80163da:	b95b      	cbnz	r3, 80163f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 80163dc:	783a      	ldrb	r2, [r7, #0]
 80163de:	0993      	lsrs	r3, r2, #6
 80163e0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80163e4:	9201      	str	r2, [sp, #4]
 80163e6:	1e5a      	subs	r2, r3, #1
 80163e8:	2a02      	cmp	r2, #2
 80163ea:	bf8d      	iteet	hi
 80163ec:	787b      	ldrbhi	r3, [r7, #1]
 80163ee:	3701      	addls	r7, #1
 80163f0:	b29b      	uxthls	r3, r3
 80163f2:	3702      	addhi	r7, #2
 80163f4:	b184      	cbz	r4, 8016418 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 80163f6:	429c      	cmp	r4, r3
 80163f8:	bf91      	iteee	ls
 80163fa:	1b1c      	subls	r4, r3, r4
 80163fc:	1ae4      	subhi	r4, r4, r3
 80163fe:	46c4      	movhi	ip, r8
 8016400:	f04f 0a00 	movhi.w	sl, #0
 8016404:	bf9b      	ittet	ls
 8016406:	fa1f fa84 	uxthls.w	sl, r4
 801640a:	2400      	movls	r4, #0
 801640c:	b2a4      	uxthhi	r4, r4
 801640e:	fa1f fc89 	uxthls.w	ip, r9
 8016412:	4653      	mov	r3, sl
 8016414:	46e0      	mov	r8, ip
 8016416:	e7dc      	b.n	80163d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8016418:	2204      	movs	r2, #4
 801641a:	9905      	ldr	r1, [sp, #20]
 801641c:	4543      	cmp	r3, r8
 801641e:	4615      	mov	r5, r2
 8016420:	9a01      	ldr	r2, [sp, #4]
 8016422:	bf24      	itt	cs
 8016424:	eba3 0a08 	subcs.w	sl, r3, r8
 8016428:	46c6      	movcs	lr, r8
 801642a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801642e:	9903      	ldr	r1, [sp, #12]
 8016430:	bf3c      	itt	cc
 8016432:	eba8 0c03 	subcc.w	ip, r8, r3
 8016436:	469e      	movcc	lr, r3
 8016438:	588a      	ldr	r2, [r1, r2]
 801643a:	bf26      	itte	cs
 801643c:	fa1f fa8a 	uxthcs.w	sl, sl
 8016440:	46a4      	movcs	ip, r4
 8016442:	fa1f fc8c 	uxthcc.w	ip, ip
 8016446:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801644a:	bf38      	it	cc
 801644c:	46a2      	movcc	sl, r4
 801644e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016452:	2900      	cmp	r1, #0
 8016454:	d066      	beq.n	8016524 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016456:	29ff      	cmp	r1, #255	; 0xff
 8016458:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801645c:	d114      	bne.n	8016488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801645e:	9d02      	ldr	r5, [sp, #8]
 8016460:	2dff      	cmp	r5, #255	; 0xff
 8016462:	d111      	bne.n	8016488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016464:	0951      	lsrs	r1, r2, #5
 8016466:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801646a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801646e:	4486      	add	lr, r0
 8016470:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016474:	f026 0607 	bic.w	r6, r6, #7
 8016478:	430e      	orrs	r6, r1
 801647a:	4316      	orrs	r6, r2
 801647c:	b2b6      	uxth	r6, r6
 801647e:	4586      	cmp	lr, r0
 8016480:	d051      	beq.n	8016526 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016482:	f820 6b02 	strh.w	r6, [r0], #2
 8016486:	e7fa      	b.n	801647e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016488:	9d02      	ldr	r5, [sp, #8]
 801648a:	b2f6      	uxtb	r6, r6
 801648c:	4486      	add	lr, r0
 801648e:	4369      	muls	r1, r5
 8016490:	1c4d      	adds	r5, r1, #1
 8016492:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016496:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801649a:	b2d2      	uxtb	r2, r2
 801649c:	122d      	asrs	r5, r5, #8
 801649e:	ea6f 0b05 	mvn.w	fp, r5
 80164a2:	b2ad      	uxth	r5, r5
 80164a4:	fb11 f105 	smulbb	r1, r1, r5
 80164a8:	fa5f fb8b 	uxtb.w	fp, fp
 80164ac:	fb16 f605 	smulbb	r6, r6, r5
 80164b0:	fb12 f205 	smulbb	r2, r2, r5
 80164b4:	b289      	uxth	r1, r1
 80164b6:	b2b6      	uxth	r6, r6
 80164b8:	b292      	uxth	r2, r2
 80164ba:	9106      	str	r1, [sp, #24]
 80164bc:	9607      	str	r6, [sp, #28]
 80164be:	9208      	str	r2, [sp, #32]
 80164c0:	4586      	cmp	lr, r0
 80164c2:	d030      	beq.n	8016526 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80164c4:	8802      	ldrh	r2, [r0, #0]
 80164c6:	9906      	ldr	r1, [sp, #24]
 80164c8:	1216      	asrs	r6, r2, #8
 80164ca:	10d5      	asrs	r5, r2, #3
 80164cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80164d0:	00d2      	lsls	r2, r2, #3
 80164d2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80164d6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80164da:	b2d2      	uxtb	r2, r2
 80164dc:	fb06 160b 	mla	r6, r6, fp, r1
 80164e0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80164e4:	9907      	ldr	r1, [sp, #28]
 80164e6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80164ea:	b2b6      	uxth	r6, r6
 80164ec:	fb05 150b 	mla	r5, r5, fp, r1
 80164f0:	9908      	ldr	r1, [sp, #32]
 80164f2:	fb02 120b 	mla	r2, r2, fp, r1
 80164f6:	1c71      	adds	r1, r6, #1
 80164f8:	b2ad      	uxth	r5, r5
 80164fa:	b292      	uxth	r2, r2
 80164fc:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016500:	1c51      	adds	r1, r2, #1
 8016502:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016506:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801650a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801650e:	4316      	orrs	r6, r2
 8016510:	1c6a      	adds	r2, r5, #1
 8016512:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016516:	096d      	lsrs	r5, r5, #5
 8016518:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801651c:	432e      	orrs	r6, r5
 801651e:	f820 6b02 	strh.w	r6, [r0], #2
 8016522:	e7cd      	b.n	80164c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8016524:	4470      	add	r0, lr
 8016526:	4543      	cmp	r3, r8
 8016528:	f4ff af73 	bcc.w	8016412 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801652c:	fa1f fc89 	uxth.w	ip, r9
 8016530:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8016534:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016536:	eba4 040c 	sub.w	r4, r4, ip
 801653a:	881b      	ldrh	r3, [r3, #0]
 801653c:	b2a4      	uxth	r4, r4
 801653e:	eba3 0309 	sub.w	r3, r3, r9
 8016542:	2c00      	cmp	r4, #0
 8016544:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016548:	bf18      	it	ne
 801654a:	f04f 0c00 	movne.w	ip, #0
 801654e:	e760      	b.n	8016412 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8016550:	4b03      	ldr	r3, [pc, #12]	; (8016560 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016552:	6818      	ldr	r0, [r3, #0]
 8016554:	6803      	ldr	r3, [r0, #0]
 8016556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016558:	4798      	blx	r3
 801655a:	b00f      	add	sp, #60	; 0x3c
 801655c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016560:	2400e424 	.word	0x2400e424
 8016564:	2400e41e 	.word	0x2400e41e

08016568 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801656c:	b093      	sub	sp, #76	; 0x4c
 801656e:	461c      	mov	r4, r3
 8016570:	9205      	str	r2, [sp, #20]
 8016572:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 8016576:	9101      	str	r1, [sp, #4]
 8016578:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801657a:	9202      	str	r2, [sp, #8]
 801657c:	2a00      	cmp	r2, #0
 801657e:	f000 812e 	beq.w	80167de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8016582:	6820      	ldr	r0, [r4, #0]
 8016584:	aa0e      	add	r2, sp, #56	; 0x38
 8016586:	6861      	ldr	r1, [r4, #4]
 8016588:	c203      	stmia	r2!, {r0, r1}
 801658a:	6818      	ldr	r0, [r3, #0]
 801658c:	aa10      	add	r2, sp, #64	; 0x40
 801658e:	6859      	ldr	r1, [r3, #4]
 8016590:	c203      	stmia	r2!, {r0, r1}
 8016592:	a80e      	add	r0, sp, #56	; 0x38
 8016594:	f7f9 fd02 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016598:	4621      	mov	r1, r4
 801659a:	a810      	add	r0, sp, #64	; 0x40
 801659c:	f7f9 fd42 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80165a0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80165a4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80165a8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80165ac:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80165b0:	bfdb      	ittet	le
 80165b2:	b2b3      	uxthle	r3, r6
 80165b4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 80165b8:	2301      	movgt	r3, #1
 80165ba:	fb92 f3f3 	sdivle	r3, r2, r3
 80165be:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80165c2:	441d      	add	r5, r3
 80165c4:	fb92 f1f3 	sdiv	r1, r2, r3
 80165c8:	fa1f fc81 	uxth.w	ip, r1
 80165cc:	3d01      	subs	r5, #1
 80165ce:	fb0c 2413 	mls	r4, ip, r3, r2
 80165d2:	4661      	mov	r1, ip
 80165d4:	fb14 f406 	smulbb	r4, r4, r6
 80165d8:	4404      	add	r4, r0
 80165da:	fb95 f5f3 	sdiv	r5, r5, r3
 80165de:	b2a4      	uxth	r4, r4
 80165e0:	b131      	cbz	r1, 80165f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 80165e2:	9b05      	ldr	r3, [sp, #20]
 80165e4:	9901      	ldr	r1, [sp, #4]
 80165e6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80165ea:	ba1b      	rev	r3, r3
 80165ec:	4419      	add	r1, r3
 80165ee:	9101      	str	r1, [sp, #4]
 80165f0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80165f4:	b2ad      	uxth	r5, r5
 80165f6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80165fa:	4418      	add	r0, r3
 80165fc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8016600:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 8016604:	00ad      	lsls	r5, r5, #2
 8016606:	441a      	add	r2, r3
 8016608:	4b76      	ldr	r3, [pc, #472]	; (80167e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801660a:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801660e:	6818      	ldr	r0, [r3, #0]
 8016610:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8016614:	6803      	ldr	r3, [r0, #0]
 8016616:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016618:	4798      	blx	r3
 801661a:	4973      	ldr	r1, [pc, #460]	; (80167e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801661c:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 8016620:	2c00      	cmp	r4, #0
 8016622:	880b      	ldrh	r3, [r1, #0]
 8016624:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8016628:	910d      	str	r1, [sp, #52]	; 0x34
 801662a:	fb03 c202 	mla	r2, r3, r2, ip
 801662e:	bf08      	it	eq
 8016630:	46dc      	moveq	ip, fp
 8016632:	fb03 f306 	mul.w	r3, r3, r6
 8016636:	bf18      	it	ne
 8016638:	f04f 0c00 	movne.w	ip, #0
 801663c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016640:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016644:	fa1f fc8c 	uxth.w	ip, ip
 8016648:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801664c:	9106      	str	r1, [sp, #24]
 801664e:	9308      	str	r3, [sp, #32]
 8016650:	1d2b      	adds	r3, r5, #4
 8016652:	9309      	str	r3, [sp, #36]	; 0x24
 8016654:	9b02      	ldr	r3, [sp, #8]
 8016656:	43da      	mvns	r2, r3
 8016658:	2300      	movs	r3, #0
 801665a:	b2d2      	uxtb	r2, r2
 801665c:	9303      	str	r3, [sp, #12]
 801665e:	9207      	str	r2, [sp, #28]
 8016660:	9a08      	ldr	r2, [sp, #32]
 8016662:	4282      	cmp	r2, r0
 8016664:	f240 80b6 	bls.w	80167d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 8016668:	b963      	cbnz	r3, 8016684 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801666a:	9b01      	ldr	r3, [sp, #4]
 801666c:	781a      	ldrb	r2, [r3, #0]
 801666e:	0993      	lsrs	r3, r2, #6
 8016670:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8016674:	9203      	str	r2, [sp, #12]
 8016676:	1e5a      	subs	r2, r3, #1
 8016678:	2a02      	cmp	r2, #2
 801667a:	d815      	bhi.n	80166a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 801667c:	9a01      	ldr	r2, [sp, #4]
 801667e:	b29b      	uxth	r3, r3
 8016680:	3201      	adds	r2, #1
 8016682:	9201      	str	r2, [sp, #4]
 8016684:	b1b4      	cbz	r4, 80166b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 8016686:	429c      	cmp	r4, r3
 8016688:	bf91      	iteee	ls
 801668a:	1b1c      	subls	r4, r3, r4
 801668c:	1ae4      	subhi	r4, r4, r3
 801668e:	4666      	movhi	r6, ip
 8016690:	f04f 0800 	movhi.w	r8, #0
 8016694:	bf9b      	ittet	ls
 8016696:	fa1f f884 	uxthls.w	r8, r4
 801669a:	2400      	movls	r4, #0
 801669c:	b2a4      	uxthhi	r4, r4
 801669e:	fa1f f68b 	uxthls.w	r6, fp
 80166a2:	4643      	mov	r3, r8
 80166a4:	46b4      	mov	ip, r6
 80166a6:	e7db      	b.n	8016660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 80166a8:	9a01      	ldr	r2, [sp, #4]
 80166aa:	9b01      	ldr	r3, [sp, #4]
 80166ac:	3202      	adds	r2, #2
 80166ae:	785b      	ldrb	r3, [r3, #1]
 80166b0:	9201      	str	r2, [sp, #4]
 80166b2:	e7e7      	b.n	8016684 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80166b4:	2203      	movs	r2, #3
 80166b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80166b8:	4563      	cmp	r3, ip
 80166ba:	4615      	mov	r5, r2
 80166bc:	9a03      	ldr	r2, [sp, #12]
 80166be:	bf2c      	ite	cs
 80166c0:	eba3 080c 	subcs.w	r8, r3, ip
 80166c4:	ebac 0603 	subcc.w	r6, ip, r3
 80166c8:	fb15 1202 	smlabb	r2, r5, r2, r1
 80166cc:	9905      	ldr	r1, [sp, #20]
 80166ce:	bf24      	itt	cs
 80166d0:	fa1f f888 	uxthcs.w	r8, r8
 80166d4:	46e1      	movcs	r9, ip
 80166d6:	eb01 0502 	add.w	r5, r1, r2
 80166da:	9902      	ldr	r1, [sp, #8]
 80166dc:	bf2f      	iteee	cs
 80166de:	4626      	movcs	r6, r4
 80166e0:	b2b6      	uxthcc	r6, r6
 80166e2:	4699      	movcc	r9, r3
 80166e4:	46a0      	movcc	r8, r4
 80166e6:	29ff      	cmp	r1, #255	; 0xff
 80166e8:	d04a      	beq.n	8016780 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80166ea:	9f06      	ldr	r7, [sp, #24]
 80166ec:	46ca      	mov	sl, r9
 80166ee:	78a9      	ldrb	r1, [r5, #2]
 80166f0:	9004      	str	r0, [sp, #16]
 80166f2:	4379      	muls	r1, r7
 80166f4:	910a      	str	r1, [sp, #40]	; 0x28
 80166f6:	7869      	ldrb	r1, [r5, #1]
 80166f8:	4379      	muls	r1, r7
 80166fa:	910b      	str	r1, [sp, #44]	; 0x2c
 80166fc:	9905      	ldr	r1, [sp, #20]
 80166fe:	5c8a      	ldrb	r2, [r1, r2]
 8016700:	437a      	muls	r2, r7
 8016702:	920c      	str	r2, [sp, #48]	; 0x30
 8016704:	f1ba 0f00 	cmp.w	sl, #0
 8016708:	d03d      	beq.n	8016786 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801670a:	9a04      	ldr	r2, [sp, #16]
 801670c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016710:	9f07      	ldr	r7, [sp, #28]
 8016712:	8812      	ldrh	r2, [r2, #0]
 8016714:	fa1f fa8a 	uxth.w	sl, sl
 8016718:	46be      	mov	lr, r7
 801671a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801671c:	1215      	asrs	r5, r2, #8
 801671e:	10d1      	asrs	r1, r2, #3
 8016720:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016724:	00d2      	lsls	r2, r2, #3
 8016726:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801672a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801672e:	b2d2      	uxtb	r2, r2
 8016730:	fb05 750e 	mla	r5, r5, lr, r7
 8016734:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016738:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801673a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801673e:	b2ad      	uxth	r5, r5
 8016740:	fb01 710e 	mla	r1, r1, lr, r7
 8016744:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016746:	fb02 720e 	mla	r2, r2, lr, r7
 801674a:	f105 0e01 	add.w	lr, r5, #1
 801674e:	b289      	uxth	r1, r1
 8016750:	b292      	uxth	r2, r2
 8016752:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016756:	f102 0e01 	add.w	lr, r2, #1
 801675a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801675e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8016762:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016766:	4315      	orrs	r5, r2
 8016768:	1c4a      	adds	r2, r1, #1
 801676a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801676e:	9a04      	ldr	r2, [sp, #16]
 8016770:	0949      	lsrs	r1, r1, #5
 8016772:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016776:	430d      	orrs	r5, r1
 8016778:	f822 5b02 	strh.w	r5, [r2], #2
 801677c:	9204      	str	r2, [sp, #16]
 801677e:	e7c1      	b.n	8016704 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8016780:	4649      	mov	r1, r9
 8016782:	4686      	mov	lr, r0
 8016784:	b999      	cbnz	r1, 80167ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8016786:	4563      	cmp	r3, ip
 8016788:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801678c:	d389      	bcc.n	80166a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801678e:	fa1f f68b 	uxth.w	r6, fp
 8016792:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 8016796:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016798:	1ba4      	subs	r4, r4, r6
 801679a:	881b      	ldrh	r3, [r3, #0]
 801679c:	b2a4      	uxth	r4, r4
 801679e:	eba3 030b 	sub.w	r3, r3, fp
 80167a2:	2c00      	cmp	r4, #0
 80167a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80167a8:	bf18      	it	ne
 80167aa:	2600      	movne	r6, #0
 80167ac:	e779      	b.n	80166a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 80167ae:	78aa      	ldrb	r2, [r5, #2]
 80167b0:	3901      	subs	r1, #1
 80167b2:	4f0e      	ldr	r7, [pc, #56]	; (80167ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 80167b4:	b289      	uxth	r1, r1
 80167b6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80167ba:	786a      	ldrb	r2, [r5, #1]
 80167bc:	00d2      	lsls	r2, r2, #3
 80167be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80167c2:	ea4a 0202 	orr.w	r2, sl, r2
 80167c6:	f895 a000 	ldrb.w	sl, [r5]
 80167ca:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80167ce:	f82e 2b02 	strh.w	r2, [lr], #2
 80167d2:	e7d7      	b.n	8016784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 80167d4:	4b03      	ldr	r3, [pc, #12]	; (80167e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80167d6:	6818      	ldr	r0, [r3, #0]
 80167d8:	6803      	ldr	r3, [r0, #0]
 80167da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80167dc:	4798      	blx	r3
 80167de:	b013      	add	sp, #76	; 0x4c
 80167e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80167e4:	2400e424 	.word	0x2400e424
 80167e8:	2400e41e 	.word	0x2400e41e
 80167ec:	fffff800 	.word	0xfffff800

080167f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80167f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167f4:	b09d      	sub	sp, #116	; 0x74
 80167f6:	461c      	mov	r4, r3
 80167f8:	4683      	mov	fp, r0
 80167fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80167fc:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 8016800:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 8016804:	920e      	str	r2, [sp, #56]	; 0x38
 8016806:	2a00      	cmp	r2, #0
 8016808:	f000 81e4 	beq.w	8016bd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 801680c:	6820      	ldr	r0, [r4, #0]
 801680e:	aa18      	add	r2, sp, #96	; 0x60
 8016810:	6861      	ldr	r1, [r4, #4]
 8016812:	c203      	stmia	r2!, {r0, r1}
 8016814:	6818      	ldr	r0, [r3, #0]
 8016816:	aa1a      	add	r2, sp, #104	; 0x68
 8016818:	6859      	ldr	r1, [r3, #4]
 801681a:	c203      	stmia	r2!, {r0, r1}
 801681c:	a818      	add	r0, sp, #96	; 0x60
 801681e:	f7f9 fbbd 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016822:	4621      	mov	r1, r4
 8016824:	a81a      	add	r0, sp, #104	; 0x68
 8016826:	f7f9 fbfd 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801682a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801682e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 8016832:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8016836:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801683a:	bfdb      	ittet	le
 801683c:	b29a      	uxthle	r2, r3
 801683e:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8016842:	2201      	movgt	r2, #1
 8016844:	fb91 f2f2 	sdivle	r2, r1, r2
 8016848:	9202      	str	r2, [sp, #8]
 801684a:	9802      	ldr	r0, [sp, #8]
 801684c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8016850:	9902      	ldr	r1, [sp, #8]
 8016852:	fb92 f0f0 	sdiv	r0, r2, r0
 8016856:	b280      	uxth	r0, r0
 8016858:	440c      	add	r4, r1
 801685a:	900f      	str	r0, [sp, #60]	; 0x3c
 801685c:	3c01      	subs	r4, #1
 801685e:	9802      	ldr	r0, [sp, #8]
 8016860:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8016862:	fb05 2510 	mls	r5, r5, r0, r2
 8016866:	fb94 f4f1 	sdiv	r4, r4, r1
 801686a:	fb15 f503 	smulbb	r5, r5, r3
 801686e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 8016872:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 8016876:	3401      	adds	r4, #1
 8016878:	440d      	add	r5, r1
 801687a:	4419      	add	r1, r3
 801687c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8016880:	b2a4      	uxth	r4, r4
 8016882:	441a      	add	r2, r3
 8016884:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8016888:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801688c:	00a4      	lsls	r4, r4, #2
 801688e:	9306      	str	r3, [sp, #24]
 8016890:	b2ad      	uxth	r5, r5
 8016892:	4bb3      	ldr	r3, [pc, #716]	; (8016b60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8016894:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8016898:	6818      	ldr	r0, [r3, #0]
 801689a:	6803      	ldr	r3, [r0, #0]
 801689c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801689e:	4798      	blx	r3
 80168a0:	4bb0      	ldr	r3, [pc, #704]	; (8016b64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 80168a2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 80168a6:	2d00      	cmp	r5, #0
 80168a8:	881a      	ldrh	r2, [r3, #0]
 80168aa:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 80168ae:	fb02 f606 	mul.w	r6, r2, r6
 80168b2:	fb02 7101 	mla	r1, r2, r1, r7
 80168b6:	9316      	str	r3, [sp, #88]	; 0x58
 80168b8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80168bc:	4baa      	ldr	r3, [pc, #680]	; (8016b68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 80168be:	bf18      	it	ne
 80168c0:	2100      	movne	r1, #0
 80168c2:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80168c6:	eba3 030b 	sub.w	r3, r3, fp
 80168ca:	920a      	str	r2, [sp, #40]	; 0x28
 80168cc:	f104 0204 	add.w	r2, r4, #4
 80168d0:	9317      	str	r3, [sp, #92]	; 0x5c
 80168d2:	9213      	str	r2, [sp, #76]	; 0x4c
 80168d4:	9a06      	ldr	r2, [sp, #24]
 80168d6:	bf08      	it	eq
 80168d8:	4611      	moveq	r1, r2
 80168da:	2200      	movs	r2, #0
 80168dc:	b289      	uxth	r1, r1
 80168de:	920d      	str	r2, [sp, #52]	; 0x34
 80168e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80168e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80168e4:	fa12 f383 	uxtah	r3, r2, r3
 80168e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80168ea:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80168ee:	3304      	adds	r3, #4
 80168f0:	9308      	str	r3, [sp, #32]
 80168f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80168f4:	4543      	cmp	r3, r8
 80168f6:	f240 8168 	bls.w	8016bca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 80168fa:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80168fe:	f04f 0e01 	mov.w	lr, #1
 8016902:	9a02      	ldr	r2, [sp, #8]
 8016904:	9808      	ldr	r0, [sp, #32]
 8016906:	fbb5 f3f3 	udiv	r3, r5, r3
 801690a:	1ad3      	subs	r3, r2, r3
 801690c:	7800      	ldrb	r0, [r0, #0]
 801690e:	b29b      	uxth	r3, r3
 8016910:	9010      	str	r0, [sp, #64]	; 0x40
 8016912:	3001      	adds	r0, #1
 8016914:	9314      	str	r3, [sp, #80]	; 0x50
 8016916:	9b08      	ldr	r3, [sp, #32]
 8016918:	9007      	str	r0, [sp, #28]
 801691a:	785a      	ldrb	r2, [r3, #1]
 801691c:	789b      	ldrb	r3, [r3, #2]
 801691e:	021b      	lsls	r3, r3, #8
 8016920:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016924:	9a08      	ldr	r2, [sp, #32]
 8016926:	78d2      	ldrb	r2, [r2, #3]
 8016928:	4313      	orrs	r3, r2
 801692a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801692c:	441a      	add	r2, r3
 801692e:	1c50      	adds	r0, r2, #1
 8016930:	7852      	ldrb	r2, [r2, #1]
 8016932:	9005      	str	r0, [sp, #20]
 8016934:	0212      	lsls	r2, r2, #8
 8016936:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016938:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801693c:	5cc3      	ldrb	r3, [r0, r3]
 801693e:	431a      	orrs	r2, r3
 8016940:	b293      	uxth	r3, r2
 8016942:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8016946:	930b      	str	r3, [sp, #44]	; 0x2c
 8016948:	2300      	movs	r3, #0
 801694a:	9309      	str	r3, [sp, #36]	; 0x24
 801694c:	2301      	movs	r3, #1
 801694e:	9301      	str	r3, [sp, #4]
 8016950:	9304      	str	r3, [sp, #16]
 8016952:	2300      	movs	r3, #0
 8016954:	9303      	str	r3, [sp, #12]
 8016956:	2d00      	cmp	r5, #0
 8016958:	d07d      	beq.n	8016a56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 801695a:	45ae      	cmp	lr, r5
 801695c:	d26c      	bcs.n	8016a38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 801695e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016960:	eba5 050e 	sub.w	r5, r5, lr
 8016964:	460c      	mov	r4, r1
 8016966:	4543      	cmp	r3, r8
 8016968:	b2ad      	uxth	r5, r5
 801696a:	d802      	bhi.n	8016972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 801696c:	e071      	b.n	8016a52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 801696e:	2b00      	cmp	r3, #0
 8016970:	d15d      	bne.n	8016a2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8016972:	9b05      	ldr	r3, [sp, #20]
 8016974:	9a04      	ldr	r2, [sp, #16]
 8016976:	785b      	ldrb	r3, [r3, #1]
 8016978:	f1c2 0207 	rsb	r2, r2, #7
 801697c:	9904      	ldr	r1, [sp, #16]
 801697e:	4093      	lsls	r3, r2
 8016980:	005b      	lsls	r3, r3, #1
 8016982:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016986:	9b05      	ldr	r3, [sp, #20]
 8016988:	781b      	ldrb	r3, [r3, #0]
 801698a:	410b      	asrs	r3, r1
 801698c:	3101      	adds	r1, #1
 801698e:	b2c9      	uxtb	r1, r1
 8016990:	b2db      	uxtb	r3, r3
 8016992:	2908      	cmp	r1, #8
 8016994:	9104      	str	r1, [sp, #16]
 8016996:	9905      	ldr	r1, [sp, #20]
 8016998:	ea43 0302 	orr.w	r3, r3, r2
 801699c:	bf0c      	ite	eq
 801699e:	3102      	addeq	r1, #2
 80169a0:	3101      	addne	r1, #1
 80169a2:	b29a      	uxth	r2, r3
 80169a4:	bf05      	ittet	eq
 80169a6:	9105      	streq	r1, [sp, #20]
 80169a8:	2100      	moveq	r1, #0
 80169aa:	9105      	strne	r1, [sp, #20]
 80169ac:	9104      	streq	r1, [sp, #16]
 80169ae:	9910      	ldr	r1, [sp, #64]	; 0x40
 80169b0:	4291      	cmp	r1, r2
 80169b2:	d30a      	bcc.n	80169ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 80169b4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 80169b8:	2301      	movs	r3, #1
 80169ba:	9907      	ldr	r1, [sp, #28]
 80169bc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80169c0:	d30f      	bcc.n	80169e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 80169c2:	2100      	movs	r1, #0
 80169c4:	9301      	str	r3, [sp, #4]
 80169c6:	9103      	str	r1, [sp, #12]
 80169c8:	e032      	b.n	8016a30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 80169ca:	9b07      	ldr	r3, [sp, #28]
 80169cc:	429a      	cmp	r2, r3
 80169ce:	d318      	bcc.n	8016a02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 80169d0:	9b01      	ldr	r3, [sp, #4]
 80169d2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 80169d6:	445b      	add	r3, fp
 80169d8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 80169dc:	9b01      	ldr	r3, [sp, #4]
 80169de:	3301      	adds	r3, #1
 80169e0:	b29b      	uxth	r3, r3
 80169e2:	9907      	ldr	r1, [sp, #28]
 80169e4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 80169e8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80169ec:	7108      	strb	r0, [r1, #4]
 80169ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80169f0:	80c8      	strh	r0, [r1, #6]
 80169f2:	9801      	ldr	r0, [sp, #4]
 80169f4:	3001      	adds	r0, #1
 80169f6:	7148      	strb	r0, [r1, #5]
 80169f8:	9907      	ldr	r1, [sp, #28]
 80169fa:	3101      	adds	r1, #1
 80169fc:	b289      	uxth	r1, r1
 80169fe:	9107      	str	r1, [sp, #28]
 8016a00:	e7df      	b.n	80169c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8016a02:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8016a06:	4611      	mov	r1, r2
 8016a08:	795b      	ldrb	r3, [r3, #5]
 8016a0a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8016a0e:	4458      	add	r0, fp
 8016a10:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8016a12:	4406      	add	r6, r0
 8016a14:	2e00      	cmp	r6, #0
 8016a16:	dd06      	ble.n	8016a26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016a18:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8016a1c:	790e      	ldrb	r6, [r1, #4]
 8016a1e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8016a22:	88c9      	ldrh	r1, [r1, #6]
 8016a24:	e7f4      	b.n	8016a10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8016a26:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8016a2a:	b29b      	uxth	r3, r3
 8016a2c:	e7c5      	b.n	80169ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8016a2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016a30:	4621      	mov	r1, r4
 8016a32:	920b      	str	r2, [sp, #44]	; 0x2c
 8016a34:	469e      	mov	lr, r3
 8016a36:	e78e      	b.n	8016956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8016a38:	9a03      	ldr	r2, [sp, #12]
 8016a3a:	ebae 0305 	sub.w	r3, lr, r5
 8016a3e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016a42:	442a      	add	r2, r5
 8016a44:	b29b      	uxth	r3, r3
 8016a46:	b292      	uxth	r2, r2
 8016a48:	9203      	str	r2, [sp, #12]
 8016a4a:	2500      	movs	r5, #0
 8016a4c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016a4e:	4542      	cmp	r2, r8
 8016a50:	d88d      	bhi.n	801696e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8016a52:	4621      	mov	r1, r4
 8016a54:	e74d      	b.n	80168f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8016a56:	458e      	cmp	lr, r1
 8016a58:	f04f 0900 	mov.w	r9, #0
 8016a5c:	bf2b      	itete	cs
 8016a5e:	ebae 0301 	subcs.w	r3, lr, r1
 8016a62:	eba1 040e 	subcc.w	r4, r1, lr
 8016a66:	462c      	movcs	r4, r5
 8016a68:	462b      	movcc	r3, r5
 8016a6a:	bf27      	ittee	cs
 8016a6c:	b29b      	uxthcs	r3, r3
 8016a6e:	910c      	strcs	r1, [sp, #48]	; 0x30
 8016a70:	b2a4      	uxthcc	r4, r4
 8016a72:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8016a76:	9a03      	ldr	r2, [sp, #12]
 8016a78:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016a7a:	444a      	add	r2, r9
 8016a7c:	4548      	cmp	r0, r9
 8016a7e:	b292      	uxth	r2, r2
 8016a80:	d074      	beq.n	8016b6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8016a82:	2004      	movs	r0, #4
 8016a84:	445a      	add	r2, fp
 8016a86:	4605      	mov	r5, r0
 8016a88:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8016a8c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016a8e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8016a92:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016a94:	5880      	ldr	r0, [r0, r2]
 8016a96:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8016a9a:	d014      	beq.n	8016ac6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016a9c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016aa0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8016aa4:	d112      	bne.n	8016acc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016aa6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016aa8:	2aff      	cmp	r2, #255	; 0xff
 8016aaa:	d10f      	bne.n	8016acc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016aac:	0942      	lsrs	r2, r0, #5
 8016aae:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016ab2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016ab6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016aba:	f025 0507 	bic.w	r5, r5, #7
 8016abe:	4315      	orrs	r5, r2
 8016ac0:	4305      	orrs	r5, r0
 8016ac2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8016ac6:	f109 0901 	add.w	r9, r9, #1
 8016aca:	e7d4      	b.n	8016a76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8016acc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8016ad0:	b2ed      	uxtb	r5, r5
 8016ad2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016ad6:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016ada:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8016ade:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016ae2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8016ae6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016aea:	9215      	str	r2, [sp, #84]	; 0x54
 8016aec:	fa5f fc8c 	uxtb.w	ip, ip
 8016af0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016af2:	b2c0      	uxtb	r0, r0
 8016af4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016af8:	fb02 fa0a 	mul.w	sl, r2, sl
 8016afc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8016b00:	f10a 0201 	add.w	r2, sl, #1
 8016b04:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8016b08:	1212      	asrs	r2, r2, #8
 8016b0a:	fa1f fa82 	uxth.w	sl, r2
 8016b0e:	43d2      	mvns	r2, r2
 8016b10:	fb16 f60a 	smulbb	r6, r6, sl
 8016b14:	b2d2      	uxtb	r2, r2
 8016b16:	fb10 f00a 	smulbb	r0, r0, sl
 8016b1a:	fb07 6702 	mla	r7, r7, r2, r6
 8016b1e:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8016b20:	fb0c 0002 	mla	r0, ip, r2, r0
 8016b24:	fb15 f50a 	smulbb	r5, r5, sl
 8016b28:	b2bf      	uxth	r7, r7
 8016b2a:	b280      	uxth	r0, r0
 8016b2c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8016b30:	fb06 5602 	mla	r6, r6, r2, r5
 8016b34:	1c7a      	adds	r2, r7, #1
 8016b36:	1c45      	adds	r5, r0, #1
 8016b38:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016b3c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016b40:	b2b6      	uxth	r6, r6
 8016b42:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016b46:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016b4a:	432f      	orrs	r7, r5
 8016b4c:	1c75      	adds	r5, r6, #1
 8016b4e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016b52:	096d      	lsrs	r5, r5, #5
 8016b54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016b58:	432f      	orrs	r7, r5
 8016b5a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8016b5e:	e7b2      	b.n	8016ac6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016b60:	2400e424 	.word	0x2400e424
 8016b64:	2400e41e 	.word	0x2400e41e
 8016b68:	fffff7fb 	.word	0xfffff7fb
 8016b6c:	9203      	str	r2, [sp, #12]
 8016b6e:	458e      	cmp	lr, r1
 8016b70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016b72:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016b76:	f4ff af68 	bcc.w	8016a4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8016b7a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016b7c:	9906      	ldr	r1, [sp, #24]
 8016b7e:	8812      	ldrh	r2, [r2, #0]
 8016b80:	1a52      	subs	r2, r2, r1
 8016b82:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016b84:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016b88:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b8a:	3201      	adds	r2, #1
 8016b8c:	428a      	cmp	r2, r1
 8016b8e:	9209      	str	r2, [sp, #36]	; 0x24
 8016b90:	d111      	bne.n	8016bb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8016b92:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8016b96:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8016b9a:	9b06      	ldr	r3, [sp, #24]
 8016b9c:	eba5 0509 	sub.w	r5, r5, r9
 8016ba0:	b2ad      	uxth	r5, r5
 8016ba2:	2d00      	cmp	r5, #0
 8016ba4:	bf08      	it	eq
 8016ba6:	4619      	moveq	r1, r3
 8016ba8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016baa:	bf18      	it	ne
 8016bac:	2100      	movne	r1, #0
 8016bae:	3301      	adds	r3, #1
 8016bb0:	b289      	uxth	r1, r1
 8016bb2:	930d      	str	r3, [sp, #52]	; 0x34
 8016bb4:	e694      	b.n	80168e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8016bb6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016bba:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016bbe:	1b2d      	subs	r5, r5, r4
 8016bc0:	b2ad      	uxth	r5, r5
 8016bc2:	2d00      	cmp	r5, #0
 8016bc4:	bf18      	it	ne
 8016bc6:	2400      	movne	r4, #0
 8016bc8:	e740      	b.n	8016a4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8016bca:	4b04      	ldr	r3, [pc, #16]	; (8016bdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8016bcc:	6818      	ldr	r0, [r3, #0]
 8016bce:	6803      	ldr	r3, [r0, #0]
 8016bd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016bd2:	4798      	blx	r3
 8016bd4:	b01d      	add	sp, #116	; 0x74
 8016bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016bda:	bf00      	nop
 8016bdc:	2400e424 	.word	0x2400e424

08016be0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016be4:	b09f      	sub	sp, #124	; 0x7c
 8016be6:	461d      	mov	r5, r3
 8016be8:	4604      	mov	r4, r0
 8016bea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016bec:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8016bf0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8016bf4:	920a      	str	r2, [sp, #40]	; 0x28
 8016bf6:	2a00      	cmp	r2, #0
 8016bf8:	f000 81fe 	beq.w	8016ff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8016bfc:	6828      	ldr	r0, [r5, #0]
 8016bfe:	aa1a      	add	r2, sp, #104	; 0x68
 8016c00:	6869      	ldr	r1, [r5, #4]
 8016c02:	c203      	stmia	r2!, {r0, r1}
 8016c04:	6818      	ldr	r0, [r3, #0]
 8016c06:	aa1c      	add	r2, sp, #112	; 0x70
 8016c08:	6859      	ldr	r1, [r3, #4]
 8016c0a:	c203      	stmia	r2!, {r0, r1}
 8016c0c:	a81a      	add	r0, sp, #104	; 0x68
 8016c0e:	f7f9 f9c5 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c12:	4629      	mov	r1, r5
 8016c14:	a81c      	add	r0, sp, #112	; 0x70
 8016c16:	f7f9 fa05 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c1a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8016c1e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8016c22:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8016c26:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8016c2a:	bfdb      	ittet	le
 8016c2c:	b29a      	uxthle	r2, r3
 8016c2e:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8016c32:	2201      	movgt	r2, #1
 8016c34:	fb91 f2f2 	sdivle	r2, r1, r2
 8016c38:	9201      	str	r2, [sp, #4]
 8016c3a:	9801      	ldr	r0, [sp, #4]
 8016c3c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8016c40:	9901      	ldr	r1, [sp, #4]
 8016c42:	fb92 f0f0 	sdiv	r0, r2, r0
 8016c46:	b280      	uxth	r0, r0
 8016c48:	440e      	add	r6, r1
 8016c4a:	9010      	str	r0, [sp, #64]	; 0x40
 8016c4c:	3e01      	subs	r6, #1
 8016c4e:	9801      	ldr	r0, [sp, #4]
 8016c50:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8016c52:	fb05 2510 	mls	r5, r5, r0, r2
 8016c56:	fb96 f6f1 	sdiv	r6, r6, r1
 8016c5a:	fb15 f503 	smulbb	r5, r5, r3
 8016c5e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8016c62:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8016c66:	3601      	adds	r6, #1
 8016c68:	440d      	add	r5, r1
 8016c6a:	4419      	add	r1, r3
 8016c6c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8016c70:	b2b6      	uxth	r6, r6
 8016c72:	441a      	add	r2, r3
 8016c74:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8016c78:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8016c7c:	b2ad      	uxth	r5, r5
 8016c7e:	9304      	str	r3, [sp, #16]
 8016c80:	4b96      	ldr	r3, [pc, #600]	; (8016edc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016c82:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8016c86:	6818      	ldr	r0, [r3, #0]
 8016c88:	6803      	ldr	r3, [r0, #0]
 8016c8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c8c:	4798      	blx	r3
 8016c8e:	4b94      	ldr	r3, [pc, #592]	; (8016ee0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8016c90:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8016c94:	2d00      	cmp	r5, #0
 8016c96:	881a      	ldrh	r2, [r3, #0]
 8016c98:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8016c9c:	fb02 f707 	mul.w	r7, r2, r7
 8016ca0:	fb02 c101 	mla	r1, r2, r1, ip
 8016ca4:	9318      	str	r3, [sp, #96]	; 0x60
 8016ca6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8016caa:	4b8e      	ldr	r3, [pc, #568]	; (8016ee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8016cac:	bf18      	it	ne
 8016cae:	2100      	movne	r1, #0
 8016cb0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8016cb4:	eba3 0304 	sub.w	r3, r3, r4
 8016cb8:	920b      	str	r2, [sp, #44]	; 0x2c
 8016cba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016cbc:	9319      	str	r3, [sp, #100]	; 0x64
 8016cbe:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8016cc2:	f106 0204 	add.w	r2, r6, #4
 8016cc6:	9206      	str	r2, [sp, #24]
 8016cc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016cca:	ea6f 0202 	mvn.w	r2, r2
 8016cce:	b2d2      	uxtb	r2, r2
 8016cd0:	9215      	str	r2, [sp, #84]	; 0x54
 8016cd2:	9a04      	ldr	r2, [sp, #16]
 8016cd4:	bf08      	it	eq
 8016cd6:	4611      	moveq	r1, r2
 8016cd8:	2200      	movs	r2, #0
 8016cda:	b289      	uxth	r1, r1
 8016cdc:	920d      	str	r2, [sp, #52]	; 0x34
 8016cde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016ce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016ce2:	fa12 f383 	uxtah	r3, r2, r3
 8016ce6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ce8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016cec:	3304      	adds	r3, #4
 8016cee:	9307      	str	r3, [sp, #28]
 8016cf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016cf2:	455b      	cmp	r3, fp
 8016cf4:	f240 817b 	bls.w	8016fee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8016cf8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8016cfc:	f04f 0801 	mov.w	r8, #1
 8016d00:	9a01      	ldr	r2, [sp, #4]
 8016d02:	9807      	ldr	r0, [sp, #28]
 8016d04:	46c4      	mov	ip, r8
 8016d06:	f8cd 8008 	str.w	r8, [sp, #8]
 8016d0a:	7800      	ldrb	r0, [r0, #0]
 8016d0c:	fbb5 f3f3 	udiv	r3, r5, r3
 8016d10:	1ad3      	subs	r3, r2, r3
 8016d12:	9011      	str	r0, [sp, #68]	; 0x44
 8016d14:	3001      	adds	r0, #1
 8016d16:	b29b      	uxth	r3, r3
 8016d18:	9005      	str	r0, [sp, #20]
 8016d1a:	9316      	str	r3, [sp, #88]	; 0x58
 8016d1c:	9b07      	ldr	r3, [sp, #28]
 8016d1e:	785a      	ldrb	r2, [r3, #1]
 8016d20:	789b      	ldrb	r3, [r3, #2]
 8016d22:	021b      	lsls	r3, r3, #8
 8016d24:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016d28:	9a07      	ldr	r2, [sp, #28]
 8016d2a:	78d2      	ldrb	r2, [r2, #3]
 8016d2c:	4313      	orrs	r3, r2
 8016d2e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016d30:	441a      	add	r2, r3
 8016d32:	1c50      	adds	r0, r2, #1
 8016d34:	7852      	ldrb	r2, [r2, #1]
 8016d36:	9003      	str	r0, [sp, #12]
 8016d38:	0212      	lsls	r2, r2, #8
 8016d3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016d3c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8016d40:	5cc3      	ldrb	r3, [r0, r3]
 8016d42:	431a      	orrs	r2, r3
 8016d44:	b293      	uxth	r3, r2
 8016d46:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8016d4a:	930c      	str	r3, [sp, #48]	; 0x30
 8016d4c:	2300      	movs	r3, #0
 8016d4e:	9308      	str	r3, [sp, #32]
 8016d50:	461a      	mov	r2, r3
 8016d52:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016d56:	930e      	str	r3, [sp, #56]	; 0x38
 8016d58:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8016d5c:	930f      	str	r3, [sp, #60]	; 0x3c
 8016d5e:	2d00      	cmp	r5, #0
 8016d60:	d07d      	beq.n	8016e5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8016d62:	45ac      	cmp	ip, r5
 8016d64:	d26d      	bcs.n	8016e42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8016d66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016d68:	eba5 050c 	sub.w	r5, r5, ip
 8016d6c:	4608      	mov	r0, r1
 8016d6e:	455b      	cmp	r3, fp
 8016d70:	b2ad      	uxth	r5, r5
 8016d72:	d802      	bhi.n	8016d7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8016d74:	e071      	b.n	8016e5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8016d76:	2b00      	cmp	r3, #0
 8016d78:	d15d      	bne.n	8016e36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8016d7a:	9b03      	ldr	r3, [sp, #12]
 8016d7c:	9a02      	ldr	r2, [sp, #8]
 8016d7e:	785b      	ldrb	r3, [r3, #1]
 8016d80:	f1c2 0207 	rsb	r2, r2, #7
 8016d84:	9902      	ldr	r1, [sp, #8]
 8016d86:	4093      	lsls	r3, r2
 8016d88:	005b      	lsls	r3, r3, #1
 8016d8a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016d8e:	9b03      	ldr	r3, [sp, #12]
 8016d90:	781b      	ldrb	r3, [r3, #0]
 8016d92:	410b      	asrs	r3, r1
 8016d94:	3101      	adds	r1, #1
 8016d96:	b2c9      	uxtb	r1, r1
 8016d98:	b2db      	uxtb	r3, r3
 8016d9a:	2908      	cmp	r1, #8
 8016d9c:	9102      	str	r1, [sp, #8]
 8016d9e:	9903      	ldr	r1, [sp, #12]
 8016da0:	ea43 0302 	orr.w	r3, r3, r2
 8016da4:	bf0c      	ite	eq
 8016da6:	3102      	addeq	r1, #2
 8016da8:	3101      	addne	r1, #1
 8016daa:	b29a      	uxth	r2, r3
 8016dac:	bf05      	ittet	eq
 8016dae:	9103      	streq	r1, [sp, #12]
 8016db0:	2100      	moveq	r1, #0
 8016db2:	9103      	strne	r1, [sp, #12]
 8016db4:	9102      	streq	r1, [sp, #8]
 8016db6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016db8:	4291      	cmp	r1, r2
 8016dba:	d30a      	bcc.n	8016dd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8016dbc:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8016dc0:	2301      	movs	r3, #1
 8016dc2:	9905      	ldr	r1, [sp, #20]
 8016dc4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8016dc8:	d30f      	bcc.n	8016dea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8016dca:	2100      	movs	r1, #0
 8016dcc:	4698      	mov	r8, r3
 8016dce:	9100      	str	r1, [sp, #0]
 8016dd0:	e032      	b.n	8016e38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8016dd2:	9b05      	ldr	r3, [sp, #20]
 8016dd4:	429a      	cmp	r2, r3
 8016dd6:	d318      	bcc.n	8016e0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8016dd8:	eb04 0308 	add.w	r3, r4, r8
 8016ddc:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8016de0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8016de4:	f108 0301 	add.w	r3, r8, #1
 8016de8:	b29b      	uxth	r3, r3
 8016dea:	9905      	ldr	r1, [sp, #20]
 8016dec:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8016df0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016df4:	710e      	strb	r6, [r1, #4]
 8016df6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016df8:	80ce      	strh	r6, [r1, #6]
 8016dfa:	f108 0601 	add.w	r6, r8, #1
 8016dfe:	714e      	strb	r6, [r1, #5]
 8016e00:	9905      	ldr	r1, [sp, #20]
 8016e02:	3101      	adds	r1, #1
 8016e04:	b289      	uxth	r1, r1
 8016e06:	9105      	str	r1, [sp, #20]
 8016e08:	e7df      	b.n	8016dca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016e0a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8016e0e:	4611      	mov	r1, r2
 8016e10:	795b      	ldrb	r3, [r3, #5]
 8016e12:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8016e16:	4426      	add	r6, r4
 8016e18:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8016e1a:	4437      	add	r7, r6
 8016e1c:	2f00      	cmp	r7, #0
 8016e1e:	dd06      	ble.n	8016e2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8016e20:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016e24:	790f      	ldrb	r7, [r1, #4]
 8016e26:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016e2a:	88c9      	ldrh	r1, [r1, #6]
 8016e2c:	e7f4      	b.n	8016e18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8016e2e:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8016e32:	b29b      	uxth	r3, r3
 8016e34:	e7c5      	b.n	8016dc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 8016e36:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016e38:	920c      	str	r2, [sp, #48]	; 0x30
 8016e3a:	4601      	mov	r1, r0
 8016e3c:	9a00      	ldr	r2, [sp, #0]
 8016e3e:	469c      	mov	ip, r3
 8016e40:	e78d      	b.n	8016d5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8016e42:	ebac 0305 	sub.w	r3, ip, r5
 8016e46:	1957      	adds	r7, r2, r5
 8016e48:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016e4c:	b2ba      	uxth	r2, r7
 8016e4e:	b29b      	uxth	r3, r3
 8016e50:	9200      	str	r2, [sp, #0]
 8016e52:	2500      	movs	r5, #0
 8016e54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016e56:	455a      	cmp	r2, fp
 8016e58:	d88d      	bhi.n	8016d76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8016e5a:	4601      	mov	r1, r0
 8016e5c:	e748      	b.n	8016cf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8016e5e:	458c      	cmp	ip, r1
 8016e60:	bf27      	ittee	cs
 8016e62:	ebac 0301 	subcs.w	r3, ip, r1
 8016e66:	4628      	movcs	r0, r5
 8016e68:	eba1 000c 	subcc.w	r0, r1, ip
 8016e6c:	462b      	movcc	r3, r5
 8016e6e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016e70:	bf27      	ittee	cs
 8016e72:	b29b      	uxthcs	r3, r3
 8016e74:	9109      	strcs	r1, [sp, #36]	; 0x24
 8016e76:	b280      	uxthcc	r0, r0
 8016e78:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8016e7c:	2dff      	cmp	r5, #255	; 0xff
 8016e7e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8016e80:	eb02 0705 	add.w	r7, r2, r5
 8016e84:	b2bd      	uxth	r5, r7
 8016e86:	9500      	str	r5, [sp, #0]
 8016e88:	d12e      	bne.n	8016ee8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 8016e8a:	465e      	mov	r6, fp
 8016e8c:	9d00      	ldr	r5, [sp, #0]
 8016e8e:	42aa      	cmp	r2, r5
 8016e90:	f040 8083 	bne.w	8016f9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8016e94:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016e96:	458c      	cmp	ip, r1
 8016e98:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016e9c:	d3d9      	bcc.n	8016e52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016e9e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016ea0:	9904      	ldr	r1, [sp, #16]
 8016ea2:	8812      	ldrh	r2, [r2, #0]
 8016ea4:	1a52      	subs	r2, r2, r1
 8016ea6:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016ea8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016eac:	9a08      	ldr	r2, [sp, #32]
 8016eae:	3201      	adds	r2, #1
 8016eb0:	428a      	cmp	r2, r1
 8016eb2:	9208      	str	r2, [sp, #32]
 8016eb4:	f040 8091 	bne.w	8016fda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 8016eb8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8016ebc:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8016ec0:	9b04      	ldr	r3, [sp, #16]
 8016ec2:	eba5 050c 	sub.w	r5, r5, ip
 8016ec6:	b2ad      	uxth	r5, r5
 8016ec8:	2d00      	cmp	r5, #0
 8016eca:	bf08      	it	eq
 8016ecc:	4619      	moveq	r1, r3
 8016ece:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016ed0:	bf18      	it	ne
 8016ed2:	2100      	movne	r1, #0
 8016ed4:	3301      	adds	r3, #1
 8016ed6:	b289      	uxth	r1, r1
 8016ed8:	930d      	str	r3, [sp, #52]	; 0x34
 8016eda:	e700      	b.n	8016cde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8016edc:	2400e424 	.word	0x2400e424
 8016ee0:	2400e41e 	.word	0x2400e41e
 8016ee4:	fffff7fb 	.word	0xfffff7fb
 8016ee8:	46d9      	mov	r9, fp
 8016eea:	9d00      	ldr	r5, [sp, #0]
 8016eec:	42aa      	cmp	r2, r5
 8016eee:	d0d1      	beq.n	8016e94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8016ef0:	1c55      	adds	r5, r2, #1
 8016ef2:	4422      	add	r2, r4
 8016ef4:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8016ef8:	9a06      	ldr	r2, [sp, #24]
 8016efa:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016efe:	9517      	str	r5, [sp, #92]	; 0x5c
 8016f00:	4472      	add	r2, lr
 8016f02:	9212      	str	r2, [sp, #72]	; 0x48
 8016f04:	f8b9 2000 	ldrh.w	r2, [r9]
 8016f08:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8016f0a:	1216      	asrs	r6, r2, #8
 8016f0c:	f897 a002 	ldrb.w	sl, [r7, #2]
 8016f10:	10d5      	asrs	r5, r2, #3
 8016f12:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016f14:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016f18:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016f1c:	00d2      	lsls	r2, r2, #3
 8016f1e:	fb1a fa07 	smulbb	sl, sl, r7
 8016f22:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016f26:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016f28:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016f2c:	b2d2      	uxtb	r2, r2
 8016f2e:	fb06 a607 	mla	r6, r6, r7, sl
 8016f32:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8016f34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016f38:	f897 a001 	ldrb.w	sl, [r7, #1]
 8016f3c:	b2b6      	uxth	r6, r6
 8016f3e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016f40:	fb1a fa07 	smulbb	sl, sl, r7
 8016f44:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016f46:	fb05 a507 	mla	r5, r5, r7, sl
 8016f4a:	9f06      	ldr	r7, [sp, #24]
 8016f4c:	f106 0a01 	add.w	sl, r6, #1
 8016f50:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016f54:	b2ad      	uxth	r5, r5
 8016f56:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016f58:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8016f5c:	f105 0a01 	add.w	sl, r5, #1
 8016f60:	fb1e fe07 	smulbb	lr, lr, r7
 8016f64:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016f66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016f6a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016f6e:	fb02 e207 	mla	r2, r2, r7, lr
 8016f72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016f76:	b292      	uxth	r2, r2
 8016f78:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016f7c:	f102 0e01 	add.w	lr, r2, #1
 8016f80:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8016f84:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8016f88:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016f8c:	ea4e 0606 	orr.w	r6, lr, r6
 8016f90:	ea46 060a 	orr.w	r6, r6, sl
 8016f94:	f829 6b02 	strh.w	r6, [r9], #2
 8016f98:	e7a7      	b.n	8016eea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 8016f9a:	f102 0e01 	add.w	lr, r2, #1
 8016f9e:	4422      	add	r2, r4
 8016fa0:	9f06      	ldr	r7, [sp, #24]
 8016fa2:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8016fa6:	9a06      	ldr	r2, [sp, #24]
 8016fa8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016fac:	eb02 0a05 	add.w	sl, r2, r5
 8016fb0:	4a13      	ldr	r2, [pc, #76]	; (8017000 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8016fb2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8016fb6:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8016fba:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016fbe:	00d2      	lsls	r2, r2, #3
 8016fc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016fc4:	ea49 0202 	orr.w	r2, r9, r2
 8016fc8:	f817 9005 	ldrb.w	r9, [r7, r5]
 8016fcc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8016fd0:	f826 2b02 	strh.w	r2, [r6], #2
 8016fd4:	fa1f f28e 	uxth.w	r2, lr
 8016fd8:	e758      	b.n	8016e8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 8016fda:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016fde:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8016fe2:	1a2d      	subs	r5, r5, r0
 8016fe4:	b2ad      	uxth	r5, r5
 8016fe6:	2d00      	cmp	r5, #0
 8016fe8:	bf18      	it	ne
 8016fea:	2000      	movne	r0, #0
 8016fec:	e732      	b.n	8016e54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8016fee:	4b05      	ldr	r3, [pc, #20]	; (8017004 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8016ff0:	6818      	ldr	r0, [r3, #0]
 8016ff2:	6803      	ldr	r3, [r0, #0]
 8016ff4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016ff6:	4798      	blx	r3
 8016ff8:	b01f      	add	sp, #124	; 0x7c
 8016ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ffe:	bf00      	nop
 8017000:	fffff800 	.word	0xfffff800
 8017004:	2400e424 	.word	0x2400e424

08017008 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801700c:	b091      	sub	sp, #68	; 0x44
 801700e:	469b      	mov	fp, r3
 8017010:	4616      	mov	r6, r2
 8017012:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017016:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801701a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801701e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8017022:	4604      	mov	r4, r0
 8017024:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8017028:	4640      	mov	r0, r8
 801702a:	460d      	mov	r5, r1
 801702c:	4659      	mov	r1, fp
 801702e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017032:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017036:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801703a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801703e:	f7f3 fd2d 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 8017042:	4631      	mov	r1, r6
 8017044:	4640      	mov	r0, r8
 8017046:	f7f3 fd29 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 801704a:	4b74      	ldr	r3, [pc, #464]	; (801721c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801704c:	8818      	ldrh	r0, [r3, #0]
 801704e:	4b74      	ldr	r3, [pc, #464]	; (8017220 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017050:	b202      	sxth	r2, r0
 8017052:	8819      	ldrh	r1, [r3, #0]
 8017054:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017058:	b20e      	sxth	r6, r1
 801705a:	2b00      	cmp	r3, #0
 801705c:	da07      	bge.n	801706e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801705e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017062:	4463      	add	r3, ip
 8017064:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017068:	2300      	movs	r3, #0
 801706a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801706e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017072:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017076:	1ad2      	subs	r2, r2, r3
 8017078:	4594      	cmp	ip, r2
 801707a:	bfc4      	itt	gt
 801707c:	1ac2      	subgt	r2, r0, r3
 801707e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8017082:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017086:	2a00      	cmp	r2, #0
 8017088:	da07      	bge.n	801709a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801708a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801708e:	4462      	add	r2, ip
 8017090:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017094:	2200      	movs	r2, #0
 8017096:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801709a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801709e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80170a2:	eba6 060a 	sub.w	r6, r6, sl
 80170a6:	42b2      	cmp	r2, r6
 80170a8:	bfc4      	itt	gt
 80170aa:	eba1 020a 	subgt.w	r2, r1, sl
 80170ae:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80170b2:	4a5c      	ldr	r2, [pc, #368]	; (8017224 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80170b4:	7812      	ldrb	r2, [r2, #0]
 80170b6:	b9a2      	cbnz	r2, 80170e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80170b8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80170bc:	4286      	cmp	r6, r0
 80170be:	4640      	mov	r0, r8
 80170c0:	9303      	str	r3, [sp, #12]
 80170c2:	bf14      	ite	ne
 80170c4:	2600      	movne	r6, #0
 80170c6:	2601      	moveq	r6, #1
 80170c8:	f7f3 fd2b 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80170cc:	9b03      	ldr	r3, [sp, #12]
 80170ce:	b160      	cbz	r0, 80170ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80170d0:	2300      	movs	r3, #0
 80170d2:	8023      	strh	r3, [r4, #0]
 80170d4:	8063      	strh	r3, [r4, #2]
 80170d6:	80a3      	strh	r3, [r4, #4]
 80170d8:	4620      	mov	r0, r4
 80170da:	80e3      	strh	r3, [r4, #6]
 80170dc:	b011      	add	sp, #68	; 0x44
 80170de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170e2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80170e6:	428e      	cmp	r6, r1
 80170e8:	e7e9      	b.n	80170be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80170ea:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80170ee:	a90e      	add	r1, sp, #56	; 0x38
 80170f0:	900e      	str	r0, [sp, #56]	; 0x38
 80170f2:	a80c      	add	r0, sp, #48	; 0x30
 80170f4:	9205      	str	r2, [sp, #20]
 80170f6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80170fa:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80170fe:	9206      	str	r2, [sp, #24]
 8017100:	f8bb 2000 	ldrh.w	r2, [fp]
 8017104:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8017108:	1a9b      	subs	r3, r3, r2
 801710a:	b21b      	sxth	r3, r3
 801710c:	9303      	str	r3, [sp, #12]
 801710e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017112:	f8df b118 	ldr.w	fp, [pc, #280]	; 801722c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017116:	ebaa 0a03 	sub.w	sl, sl, r3
 801711a:	fa0f f38a 	sxth.w	r3, sl
 801711e:	9304      	str	r3, [sp, #16]
 8017120:	9b03      	ldr	r3, [sp, #12]
 8017122:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8017126:	9b04      	ldr	r3, [sp, #16]
 8017128:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801712c:	9b05      	ldr	r3, [sp, #20]
 801712e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8017132:	9b06      	ldr	r3, [sp, #24]
 8017134:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017138:	f7f8 ff74 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801713c:	4640      	mov	r0, r8
 801713e:	f7f8 ff2d 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017142:	a80e      	add	r0, sp, #56	; 0x38
 8017144:	f7f8 ff2a 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017148:	4b37      	ldr	r3, [pc, #220]	; (8017228 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801714a:	4628      	mov	r0, r5
 801714c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8017150:	881b      	ldrh	r3, [r3, #0]
 8017152:	9307      	str	r3, [sp, #28]
 8017154:	682b      	ldr	r3, [r5, #0]
 8017156:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017158:	4798      	blx	r3
 801715a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801715e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017162:	4681      	mov	r9, r0
 8017164:	f8db 0000 	ldr.w	r0, [fp]
 8017168:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801716c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801716e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017172:	6803      	ldr	r3, [r0, #0]
 8017174:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017176:	4798      	blx	r3
 8017178:	4607      	mov	r7, r0
 801717a:	f8db 0000 	ldr.w	r0, [fp]
 801717e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017182:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017186:	6803      	ldr	r3, [r0, #0]
 8017188:	9109      	str	r1, [sp, #36]	; 0x24
 801718a:	9208      	str	r2, [sp, #32]
 801718c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801718e:	4798      	blx	r3
 8017190:	f010 0f01 	tst.w	r0, #1
 8017194:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017198:	d012      	beq.n	80171c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801719a:	f8db 0000 	ldr.w	r0, [fp]
 801719e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80171a2:	6803      	ldr	r3, [r0, #0]
 80171a4:	9200      	str	r2, [sp, #0]
 80171a6:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80171a8:	462b      	mov	r3, r5
 80171aa:	e898 0006 	ldmia.w	r8, {r1, r2}
 80171ae:	47b0      	blx	r6
 80171b0:	9b03      	ldr	r3, [sp, #12]
 80171b2:	8023      	strh	r3, [r4, #0]
 80171b4:	9b04      	ldr	r3, [sp, #16]
 80171b6:	8063      	strh	r3, [r4, #2]
 80171b8:	9b05      	ldr	r3, [sp, #20]
 80171ba:	80a3      	strh	r3, [r4, #4]
 80171bc:	9b06      	ldr	r3, [sp, #24]
 80171be:	e78b      	b.n	80170d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80171c0:	fb09 f202 	mul.w	r2, r9, r2
 80171c4:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80171c8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80171cc:	440f      	add	r7, r1
 80171ce:	b166      	cbz	r6, 80171ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80171d0:	9a07      	ldr	r2, [sp, #28]
 80171d2:	4592      	cmp	sl, r2
 80171d4:	d109      	bne.n	80171ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80171d6:	f8db 0000 	ldr.w	r0, [fp]
 80171da:	fb09 f303 	mul.w	r3, r9, r3
 80171de:	4629      	mov	r1, r5
 80171e0:	6802      	ldr	r2, [r0, #0]
 80171e2:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80171e4:	463a      	mov	r2, r7
 80171e6:	47b0      	blx	r6
 80171e8:	e7e2      	b.n	80171b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80171ea:	fb0a f303 	mul.w	r3, sl, r3
 80171ee:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80171f2:	f8df b038 	ldr.w	fp, [pc, #56]	; 801722c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80171f6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80171fa:	4545      	cmp	r5, r8
 80171fc:	d2d8      	bcs.n	80171b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80171fe:	f8db 0000 	ldr.w	r0, [fp]
 8017202:	4629      	mov	r1, r5
 8017204:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017208:	4435      	add	r5, r6
 801720a:	6802      	ldr	r2, [r0, #0]
 801720c:	005b      	lsls	r3, r3, #1
 801720e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017212:	463a      	mov	r2, r7
 8017214:	47d0      	blx	sl
 8017216:	444f      	add	r7, r9
 8017218:	e7ef      	b.n	80171fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801721a:	bf00      	nop
 801721c:	2400e418 	.word	0x2400e418
 8017220:	2400e41a 	.word	0x2400e41a
 8017224:	2400e41c 	.word	0x2400e41c
 8017228:	2400e41e 	.word	0x2400e41e
 801722c:	2400e424 	.word	0x2400e424

08017230 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017230:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017232:	4606      	mov	r6, r0
 8017234:	b087      	sub	sp, #28
 8017236:	460c      	mov	r4, r1
 8017238:	4617      	mov	r7, r2
 801723a:	461d      	mov	r5, r3
 801723c:	b333      	cbz	r3, 801728c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801723e:	4608      	mov	r0, r1
 8017240:	f7f3 fc6f 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017244:	bb10      	cbnz	r0, 801728c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017246:	6820      	ldr	r0, [r4, #0]
 8017248:	ab04      	add	r3, sp, #16
 801724a:	6861      	ldr	r1, [r4, #4]
 801724c:	4c1b      	ldr	r4, [pc, #108]	; (80172bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801724e:	c303      	stmia	r3!, {r0, r1}
 8017250:	a804      	add	r0, sp, #16
 8017252:	f7f8 fea3 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017256:	6820      	ldr	r0, [r4, #0]
 8017258:	6803      	ldr	r3, [r0, #0]
 801725a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801725c:	4798      	blx	r3
 801725e:	2dff      	cmp	r5, #255	; 0xff
 8017260:	d016      	beq.n	8017290 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017262:	f010 0f08 	tst.w	r0, #8
 8017266:	6820      	ldr	r0, [r4, #0]
 8017268:	d015      	beq.n	8017296 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801726a:	2400      	movs	r4, #0
 801726c:	6801      	ldr	r1, [r0, #0]
 801726e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017272:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017276:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801727a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801727e:	9401      	str	r4, [sp, #4]
 8017280:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017284:	9400      	str	r4, [sp, #0]
 8017286:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017288:	4639      	mov	r1, r7
 801728a:	47a0      	blx	r4
 801728c:	b007      	add	sp, #28
 801728e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017290:	f010 0f02 	tst.w	r0, #2
 8017294:	e7e7      	b.n	8017266 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017296:	6803      	ldr	r3, [r0, #0]
 8017298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801729a:	4798      	blx	r3
 801729c:	4b08      	ldr	r3, [pc, #32]	; (80172c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801729e:	4601      	mov	r1, r0
 80172a0:	4630      	mov	r0, r6
 80172a2:	881a      	ldrh	r2, [r3, #0]
 80172a4:	6833      	ldr	r3, [r6, #0]
 80172a6:	e9cd 7500 	strd	r7, r5, [sp]
 80172aa:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80172ac:	ab04      	add	r3, sp, #16
 80172ae:	47a8      	blx	r5
 80172b0:	6820      	ldr	r0, [r4, #0]
 80172b2:	6803      	ldr	r3, [r0, #0]
 80172b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80172b6:	4798      	blx	r3
 80172b8:	e7e8      	b.n	801728c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80172ba:	bf00      	nop
 80172bc:	2400e424 	.word	0x2400e424
 80172c0:	2400e41e 	.word	0x2400e41e

080172c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80172c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80172c8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80172cc:	4688      	mov	r8, r1
 80172ce:	4614      	mov	r4, r2
 80172d0:	461d      	mov	r5, r3
 80172d2:	9e08      	ldr	r6, [sp, #32]
 80172d4:	2f00      	cmp	r7, #0
 80172d6:	f000 80ab 	beq.w	8017430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80172da:	4618      	mov	r0, r3
 80172dc:	f7f3 fc21 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80172e0:	2800      	cmp	r0, #0
 80172e2:	f040 80a5 	bne.w	8017430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80172e6:	f9b5 1000 	ldrsh.w	r1, [r5]
 80172ea:	2fff      	cmp	r7, #255	; 0xff
 80172ec:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80172f0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80172f4:	fb04 1303 	mla	r3, r4, r3, r1
 80172f8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80172fc:	eba4 0200 	sub.w	r2, r4, r0
 8017300:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017304:	fb04 f505 	mul.w	r5, r4, r5
 8017308:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801730c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017310:	d04a      	beq.n	80173a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8017312:	b2bc      	uxth	r4, r7
 8017314:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8017318:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801731c:	fa5f f788 	uxtb.w	r7, r8
 8017320:	b2f3      	uxtb	r3, r6
 8017322:	0040      	lsls	r0, r0, #1
 8017324:	fb0e fe04 	mul.w	lr, lr, r4
 8017328:	4367      	muls	r7, r4
 801732a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801732e:	4363      	muls	r3, r4
 8017330:	fa1f fc8c 	uxth.w	ip, ip
 8017334:	42a9      	cmp	r1, r5
 8017336:	d27b      	bcs.n	8017430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017338:	eb01 0900 	add.w	r9, r1, r0
 801733c:	4549      	cmp	r1, r9
 801733e:	d231      	bcs.n	80173a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8017340:	880a      	ldrh	r2, [r1, #0]
 8017342:	1214      	asrs	r4, r2, #8
 8017344:	10d6      	asrs	r6, r2, #3
 8017346:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801734a:	00d2      	lsls	r2, r2, #3
 801734c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017350:	b2d2      	uxtb	r2, r2
 8017352:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017356:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801735a:	fb14 f40c 	smulbb	r4, r4, ip
 801735e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017362:	fb12 f20c 	smulbb	r2, r2, ip
 8017366:	fb16 f60c 	smulbb	r6, r6, ip
 801736a:	4474      	add	r4, lr
 801736c:	441a      	add	r2, r3
 801736e:	b2a4      	uxth	r4, r4
 8017370:	443e      	add	r6, r7
 8017372:	b292      	uxth	r2, r2
 8017374:	f104 0a01 	add.w	sl, r4, #1
 8017378:	b2b6      	uxth	r6, r6
 801737a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801737e:	f102 0a01 	add.w	sl, r2, #1
 8017382:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017386:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801738a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801738e:	4322      	orrs	r2, r4
 8017390:	1c74      	adds	r4, r6, #1
 8017392:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017396:	0976      	lsrs	r6, r6, #5
 8017398:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801739c:	4332      	orrs	r2, r6
 801739e:	f821 2b02 	strh.w	r2, [r1], #2
 80173a2:	e7cb      	b.n	801733c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 80173a4:	4441      	add	r1, r8
 80173a6:	e7c5      	b.n	8017334 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 80173a8:	0973      	lsrs	r3, r6, #5
 80173aa:	4f22      	ldr	r7, [pc, #136]	; (8017434 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80173ac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80173b0:	ea08 0707 	and.w	r7, r8, r7
 80173b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80173b8:	433b      	orrs	r3, r7
 80173ba:	07e7      	lsls	r7, r4, #31
 80173bc:	ea43 0306 	orr.w	r3, r3, r6
 80173c0:	b29b      	uxth	r3, r3
 80173c2:	d50b      	bpl.n	80173dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 80173c4:	0040      	lsls	r0, r0, #1
 80173c6:	0052      	lsls	r2, r2, #1
 80173c8:	42a9      	cmp	r1, r5
 80173ca:	d231      	bcs.n	8017430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80173cc:	180c      	adds	r4, r1, r0
 80173ce:	42a1      	cmp	r1, r4
 80173d0:	d202      	bcs.n	80173d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80173d2:	f821 3b02 	strh.w	r3, [r1], #2
 80173d6:	e7fa      	b.n	80173ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 80173d8:	4411      	add	r1, r2
 80173da:	e7f5      	b.n	80173c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 80173dc:	078e      	lsls	r6, r1, #30
 80173de:	d008      	beq.n	80173f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 80173e0:	0066      	lsls	r6, r4, #1
 80173e2:	460a      	mov	r2, r1
 80173e4:	42aa      	cmp	r2, r5
 80173e6:	d202      	bcs.n	80173ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80173e8:	8013      	strh	r3, [r2, #0]
 80173ea:	4432      	add	r2, r6
 80173ec:	e7fa      	b.n	80173e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 80173ee:	3102      	adds	r1, #2
 80173f0:	3801      	subs	r0, #1
 80173f2:	07c2      	lsls	r2, r0, #31
 80173f4:	d50b      	bpl.n	801740e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 80173f6:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80173fa:	0066      	lsls	r6, r4, #1
 80173fc:	3a01      	subs	r2, #1
 80173fe:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017402:	42aa      	cmp	r2, r5
 8017404:	d202      	bcs.n	801740c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8017406:	8013      	strh	r3, [r2, #0]
 8017408:	4432      	add	r2, r6
 801740a:	e7fa      	b.n	8017402 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801740c:	3801      	subs	r0, #1
 801740e:	b178      	cbz	r0, 8017430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017410:	1040      	asrs	r0, r0, #1
 8017412:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017416:	0080      	lsls	r0, r0, #2
 8017418:	0064      	lsls	r4, r4, #1
 801741a:	42a9      	cmp	r1, r5
 801741c:	d208      	bcs.n	8017430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801741e:	180e      	adds	r6, r1, r0
 8017420:	460a      	mov	r2, r1
 8017422:	42b2      	cmp	r2, r6
 8017424:	d202      	bcs.n	801742c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017426:	f842 3b04 	str.w	r3, [r2], #4
 801742a:	e7fa      	b.n	8017422 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801742c:	4421      	add	r1, r4
 801742e:	e7f4      	b.n	801741a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8017430:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017434:	00fff800 	.word	0x00fff800

08017438 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017438:	2200      	movs	r2, #0
 801743a:	4912      	ldr	r1, [pc, #72]	; (8017484 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801743c:	6042      	str	r2, [r0, #4]
 801743e:	6001      	str	r1, [r0, #0]
 8017440:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017444:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8017448:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801744c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017450:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017454:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8017458:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801745c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017460:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017464:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8017468:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801746c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017470:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017474:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8017478:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801747c:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8017480:	4770      	bx	lr
 8017482:	bf00      	nop
 8017484:	08023c7c 	.word	0x08023c7c

08017488 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801748c:	b08d      	sub	sp, #52	; 0x34
 801748e:	460d      	mov	r5, r1
 8017490:	4604      	mov	r4, r0
 8017492:	4699      	mov	r9, r3
 8017494:	6808      	ldr	r0, [r1, #0]
 8017496:	ab08      	add	r3, sp, #32
 8017498:	6849      	ldr	r1, [r1, #4]
 801749a:	c303      	stmia	r3!, {r0, r1}
 801749c:	6810      	ldr	r0, [r2, #0]
 801749e:	ab0a      	add	r3, sp, #40	; 0x28
 80174a0:	6851      	ldr	r1, [r2, #4]
 80174a2:	c303      	stmia	r3!, {r0, r1}
 80174a4:	a808      	add	r0, sp, #32
 80174a6:	f7f8 fd79 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174aa:	4629      	mov	r1, r5
 80174ac:	a80a      	add	r0, sp, #40	; 0x28
 80174ae:	4d67      	ldr	r5, [pc, #412]	; (801764c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80174b0:	f7f8 fdb8 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80174b4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80174b8:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80174bc:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80174c0:	6828      	ldr	r0, [r5, #0]
 80174c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80174c6:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80174ca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80174ce:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80174d2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80174d6:	440a      	add	r2, r1
 80174d8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80174dc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80174e0:	4413      	add	r3, r2
 80174e2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80174e6:	6803      	ldr	r3, [r0, #0]
 80174e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80174ea:	4798      	blx	r3
 80174ec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80174f0:	d119      	bne.n	8017526 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80174f2:	f010 0f20 	tst.w	r0, #32
 80174f6:	6828      	ldr	r0, [r5, #0]
 80174f8:	d018      	beq.n	801752c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80174fa:	2500      	movs	r5, #0
 80174fc:	6801      	ldr	r1, [r0, #0]
 80174fe:	b2b6      	uxth	r6, r6
 8017500:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8017504:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017508:	9601      	str	r6, [sp, #4]
 801750a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801750e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017512:	9502      	str	r5, [sp, #8]
 8017514:	fa1f f588 	uxth.w	r5, r8
 8017518:	9500      	str	r5, [sp, #0]
 801751a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801751c:	4621      	mov	r1, r4
 801751e:	47a8      	blx	r5
 8017520:	b00d      	add	sp, #52	; 0x34
 8017522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017526:	f010 0f40 	tst.w	r0, #64	; 0x40
 801752a:	e7e4      	b.n	80174f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801752c:	6803      	ldr	r3, [r0, #0]
 801752e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017530:	4798      	blx	r3
 8017532:	4947      	ldr	r1, [pc, #284]	; (8017650 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017534:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017538:	880b      	ldrh	r3, [r1, #0]
 801753a:	468a      	mov	sl, r1
 801753c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8017540:	fb03 5202 	mla	r2, r3, r2, r5
 8017544:	4373      	muls	r3, r6
 8017546:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801754a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801754e:	9307      	str	r3, [sp, #28]
 8017550:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017554:	9306      	str	r3, [sp, #24]
 8017556:	9b07      	ldr	r3, [sp, #28]
 8017558:	4298      	cmp	r0, r3
 801755a:	d270      	bcs.n	801763e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801755c:	9b06      	ldr	r3, [sp, #24]
 801755e:	4621      	mov	r1, r4
 8017560:	eb00 0b03 	add.w	fp, r0, r3
 8017564:	4558      	cmp	r0, fp
 8017566:	d25d      	bcs.n	8017624 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017568:	f851 4b04 	ldr.w	r4, [r1], #4
 801756c:	0e23      	lsrs	r3, r4, #24
 801756e:	d014      	beq.n	801759a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017570:	2bff      	cmp	r3, #255	; 0xff
 8017572:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017576:	d112      	bne.n	801759e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017578:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801757c:	d10f      	bne.n	801759e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801757e:	0963      	lsrs	r3, r4, #5
 8017580:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017584:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017588:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801758c:	f02c 0c07 	bic.w	ip, ip, #7
 8017590:	ea43 0c0c 	orr.w	ip, r3, ip
 8017594:	ea4c 0404 	orr.w	r4, ip, r4
 8017598:	8004      	strh	r4, [r0, #0]
 801759a:	3002      	adds	r0, #2
 801759c:	e7e2      	b.n	8017564 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801759e:	fb09 f303 	mul.w	r3, r9, r3
 80175a2:	8807      	ldrh	r7, [r0, #0]
 80175a4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80175a8:	fa5f fc8c 	uxtb.w	ip, ip
 80175ac:	1c5a      	adds	r2, r3, #1
 80175ae:	123e      	asrs	r6, r7, #8
 80175b0:	10fd      	asrs	r5, r7, #3
 80175b2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80175b6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80175ba:	00ff      	lsls	r7, r7, #3
 80175bc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80175c0:	1212      	asrs	r2, r2, #8
 80175c2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80175c6:	b293      	uxth	r3, r2
 80175c8:	43d2      	mvns	r2, r2
 80175ca:	b2ff      	uxtb	r7, r7
 80175cc:	fb1e fe03 	smulbb	lr, lr, r3
 80175d0:	b2d2      	uxtb	r2, r2
 80175d2:	fb1c fc03 	smulbb	ip, ip, r3
 80175d6:	b2e4      	uxtb	r4, r4
 80175d8:	fb06 e602 	mla	r6, r6, r2, lr
 80175dc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80175e0:	fb14 f403 	smulbb	r4, r4, r3
 80175e4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80175e8:	b2b6      	uxth	r6, r6
 80175ea:	fb05 c502 	mla	r5, r5, r2, ip
 80175ee:	fb07 4702 	mla	r7, r7, r2, r4
 80175f2:	f106 0e01 	add.w	lr, r6, #1
 80175f6:	b2ad      	uxth	r5, r5
 80175f8:	b2bf      	uxth	r7, r7
 80175fa:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80175fe:	f105 0c01 	add.w	ip, r5, #1
 8017602:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8017606:	1c7e      	adds	r6, r7, #1
 8017608:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801760c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017610:	096d      	lsrs	r5, r5, #5
 8017612:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017616:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801761a:	ea46 060e 	orr.w	r6, r6, lr
 801761e:	432e      	orrs	r6, r5
 8017620:	8006      	strh	r6, [r0, #0]
 8017622:	e7ba      	b.n	801759a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017624:	f8ba 3000 	ldrh.w	r3, [sl]
 8017628:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801762c:	eba3 0308 	sub.w	r3, r3, r8
 8017630:	eba4 0408 	sub.w	r4, r4, r8
 8017634:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017638:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801763c:	e78b      	b.n	8017556 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801763e:	4b03      	ldr	r3, [pc, #12]	; (801764c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017640:	6818      	ldr	r0, [r3, #0]
 8017642:	6803      	ldr	r3, [r0, #0]
 8017644:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017646:	4798      	blx	r3
 8017648:	e76a      	b.n	8017520 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801764a:	bf00      	nop
 801764c:	2400e424 	.word	0x2400e424
 8017650:	2400e41e 	.word	0x2400e41e

08017654 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017654:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017658:	b085      	sub	sp, #20
 801765a:	6810      	ldr	r0, [r2, #0]
 801765c:	460c      	mov	r4, r1
 801765e:	6851      	ldr	r1, [r2, #4]
 8017660:	466d      	mov	r5, sp
 8017662:	4616      	mov	r6, r2
 8017664:	c503      	stmia	r5!, {r0, r1}
 8017666:	6818      	ldr	r0, [r3, #0]
 8017668:	6859      	ldr	r1, [r3, #4]
 801766a:	c503      	stmia	r5!, {r0, r1}
 801766c:	4668      	mov	r0, sp
 801766e:	4d2e      	ldr	r5, [pc, #184]	; (8017728 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017670:	f7f8 fc94 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017674:	4631      	mov	r1, r6
 8017676:	a802      	add	r0, sp, #8
 8017678:	4e2c      	ldr	r6, [pc, #176]	; (801772c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801767a:	f7f8 fcd3 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801767e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017682:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017686:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801768a:	6828      	ldr	r0, [r5, #0]
 801768c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017690:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017694:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017698:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801769c:	f8bd 1000 	ldrh.w	r1, [sp]
 80176a0:	440a      	add	r2, r1
 80176a2:	f8ad 2008 	strh.w	r2, [sp, #8]
 80176a6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80176aa:	4413      	add	r3, r2
 80176ac:	f8ad 300a 	strh.w	r3, [sp, #10]
 80176b0:	6803      	ldr	r3, [r0, #0]
 80176b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176b4:	4798      	blx	r3
 80176b6:	8833      	ldrh	r3, [r6, #0]
 80176b8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80176bc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80176c0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80176c4:	f8df e068 	ldr.w	lr, [pc, #104]	; 8017730 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80176c8:	fb03 1202 	mla	r2, r3, r2, r1
 80176cc:	fb08 f303 	mul.w	r3, r8, r3
 80176d0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80176d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80176d8:	4298      	cmp	r0, r3
 80176da:	d21d      	bcs.n	8017718 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80176dc:	eb00 080c 	add.w	r8, r0, ip
 80176e0:	4540      	cmp	r0, r8
 80176e2:	d20f      	bcs.n	8017704 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80176e4:	f854 1b04 	ldr.w	r1, [r4], #4
 80176e8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80176ec:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80176f0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80176f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80176f8:	ea42 0209 	orr.w	r2, r2, r9
 80176fc:	430a      	orrs	r2, r1
 80176fe:	f820 2b02 	strh.w	r2, [r0], #2
 8017702:	e7ed      	b.n	80176e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017704:	8832      	ldrh	r2, [r6, #0]
 8017706:	1bd2      	subs	r2, r2, r7
 8017708:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801770c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017710:	1bd2      	subs	r2, r2, r7
 8017712:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017716:	e7df      	b.n	80176d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017718:	6828      	ldr	r0, [r5, #0]
 801771a:	6803      	ldr	r3, [r0, #0]
 801771c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801771e:	4798      	blx	r3
 8017720:	b005      	add	sp, #20
 8017722:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017726:	bf00      	nop
 8017728:	2400e424 	.word	0x2400e424
 801772c:	2400e41e 	.word	0x2400e41e
 8017730:	fffff800 	.word	0xfffff800

08017734 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017734:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017738:	b08e      	sub	sp, #56	; 0x38
 801773a:	460e      	mov	r6, r1
 801773c:	4604      	mov	r4, r0
 801773e:	461d      	mov	r5, r3
 8017740:	6808      	ldr	r0, [r1, #0]
 8017742:	ab0a      	add	r3, sp, #40	; 0x28
 8017744:	6849      	ldr	r1, [r1, #4]
 8017746:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 801791c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801774a:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 8017920 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801774e:	c303      	stmia	r3!, {r0, r1}
 8017750:	6810      	ldr	r0, [r2, #0]
 8017752:	ab0c      	add	r3, sp, #48	; 0x30
 8017754:	6851      	ldr	r1, [r2, #4]
 8017756:	c303      	stmia	r3!, {r0, r1}
 8017758:	a80a      	add	r0, sp, #40	; 0x28
 801775a:	f7f8 fc1f 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801775e:	4631      	mov	r1, r6
 8017760:	a80c      	add	r0, sp, #48	; 0x30
 8017762:	f7f8 fc5f 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017766:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801776a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801776e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017772:	f8d8 0000 	ldr.w	r0, [r8]
 8017776:	fb11 2103 	smlabb	r1, r1, r3, r2
 801777a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801777e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017782:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017786:	440c      	add	r4, r1
 8017788:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801778c:	440a      	add	r2, r1
 801778e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017792:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017796:	4413      	add	r3, r2
 8017798:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801779c:	6803      	ldr	r3, [r0, #0]
 801779e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80177a0:	4798      	blx	r3
 80177a2:	2dff      	cmp	r5, #255	; 0xff
 80177a4:	d124      	bne.n	80177f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80177a6:	f010 0f01 	tst.w	r0, #1
 80177aa:	f8d8 0000 	ldr.w	r0, [r8]
 80177ae:	d022      	beq.n	80177f6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80177b0:	2100      	movs	r1, #0
 80177b2:	f04f 0e01 	mov.w	lr, #1
 80177b6:	f8d0 c000 	ldr.w	ip, [r0]
 80177ba:	b2b6      	uxth	r6, r6
 80177bc:	f8cd e018 	str.w	lr, [sp, #24]
 80177c0:	b2bf      	uxth	r7, r7
 80177c2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80177c6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80177ca:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80177ce:	f8b9 e000 	ldrh.w	lr, [r9]
 80177d2:	9503      	str	r5, [sp, #12]
 80177d4:	9601      	str	r6, [sp, #4]
 80177d6:	9700      	str	r7, [sp, #0]
 80177d8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80177dc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80177e0:	9102      	str	r1, [sp, #8]
 80177e2:	4621      	mov	r1, r4
 80177e4:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80177e8:	47a8      	blx	r5
 80177ea:	b00e      	add	sp, #56	; 0x38
 80177ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80177f0:	f010 0f04 	tst.w	r0, #4
 80177f4:	e7d9      	b.n	80177aa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80177f6:	6803      	ldr	r3, [r0, #0]
 80177f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80177fa:	4798      	blx	r3
 80177fc:	f8b9 3000 	ldrh.w	r3, [r9]
 8017800:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017804:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017808:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801780c:	435e      	muls	r6, r3
 801780e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017812:	2dff      	cmp	r5, #255	; 0xff
 8017814:	fb03 1202 	mla	r2, r3, r2, r1
 8017818:	ebac 0c07 	sub.w	ip, ip, r7
 801781c:	eba3 0707 	sub.w	r7, r3, r7
 8017820:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017824:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017828:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801782c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017830:	d049      	beq.n	80178c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017832:	43eb      	mvns	r3, r5
 8017834:	fa1f f985 	uxth.w	r9, r5
 8017838:	b2db      	uxtb	r3, r3
 801783a:	42b0      	cmp	r0, r6
 801783c:	d266      	bcs.n	801790c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801783e:	eb00 0a0e 	add.w	sl, r0, lr
 8017842:	4550      	cmp	r0, sl
 8017844:	4621      	mov	r1, r4
 8017846:	f104 0403 	add.w	r4, r4, #3
 801784a:	d25b      	bcs.n	8017904 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801784c:	8802      	ldrh	r2, [r0, #0]
 801784e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017852:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017856:	fb11 f109 	smulbb	r1, r1, r9
 801785a:	10d5      	asrs	r5, r2, #3
 801785c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017860:	00d2      	lsls	r2, r2, #3
 8017862:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017866:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801786a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801786e:	fb08 1803 	mla	r8, r8, r3, r1
 8017872:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017876:	b2d2      	uxtb	r2, r2
 8017878:	fb11 f109 	smulbb	r1, r1, r9
 801787c:	fa1f f888 	uxth.w	r8, r8
 8017880:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017884:	fb05 1503 	mla	r5, r5, r3, r1
 8017888:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801788c:	fb11 f109 	smulbb	r1, r1, r9
 8017890:	b2ad      	uxth	r5, r5
 8017892:	fb02 1203 	mla	r2, r2, r3, r1
 8017896:	f108 0101 	add.w	r1, r8, #1
 801789a:	b292      	uxth	r2, r2
 801789c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80178a0:	1c51      	adds	r1, r2, #1
 80178a2:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80178a6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80178aa:	1c69      	adds	r1, r5, #1
 80178ac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80178b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80178b4:	096d      	lsrs	r5, r5, #5
 80178b6:	ea42 0208 	orr.w	r2, r2, r8
 80178ba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80178be:	432a      	orrs	r2, r5
 80178c0:	f820 2b02 	strh.w	r2, [r0], #2
 80178c4:	e7bd      	b.n	8017842 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80178c6:	4a14      	ldr	r2, [pc, #80]	; (8017918 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80178c8:	42b0      	cmp	r0, r6
 80178ca:	d21f      	bcs.n	801790c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80178cc:	eb00 050e 	add.w	r5, r0, lr
 80178d0:	42a8      	cmp	r0, r5
 80178d2:	4621      	mov	r1, r4
 80178d4:	f104 0403 	add.w	r4, r4, #3
 80178d8:	d210      	bcs.n	80178fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80178da:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80178de:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80178e2:	00db      	lsls	r3, r3, #3
 80178e4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80178e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80178ec:	430b      	orrs	r3, r1
 80178ee:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80178f2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80178f6:	f820 3b02 	strh.w	r3, [r0], #2
 80178fa:	e7e9      	b.n	80178d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80178fc:	4438      	add	r0, r7
 80178fe:	eb01 040c 	add.w	r4, r1, ip
 8017902:	e7e1      	b.n	80178c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017904:	4438      	add	r0, r7
 8017906:	eb01 040c 	add.w	r4, r1, ip
 801790a:	e796      	b.n	801783a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801790c:	4b03      	ldr	r3, [pc, #12]	; (801791c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801790e:	6818      	ldr	r0, [r3, #0]
 8017910:	6803      	ldr	r3, [r0, #0]
 8017912:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017914:	4798      	blx	r3
 8017916:	e768      	b.n	80177ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017918:	fffff800 	.word	0xfffff800
 801791c:	2400e424 	.word	0x2400e424
 8017920:	2400e41e 	.word	0x2400e41e

08017924 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017924:	b4f0      	push	{r4, r5, r6, r7}
 8017926:	4616      	mov	r6, r2
 8017928:	461c      	mov	r4, r3
 801792a:	460d      	mov	r5, r1
 801792c:	9a04      	ldr	r2, [sp, #16]
 801792e:	2e01      	cmp	r6, #1
 8017930:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017934:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017938:	d012      	beq.n	8017960 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801793a:	d303      	bcc.n	8017944 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801793c:	2e02      	cmp	r6, #2
 801793e:	d00a      	beq.n	8017956 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017940:	bcf0      	pop	{r4, r5, r6, r7}
 8017942:	4770      	bx	lr
 8017944:	6805      	ldr	r5, [r0, #0]
 8017946:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801794a:	68ed      	ldr	r5, [r5, #12]
 801794c:	4613      	mov	r3, r2
 801794e:	4622      	mov	r2, r4
 8017950:	46ac      	mov	ip, r5
 8017952:	bcf0      	pop	{r4, r5, r6, r7}
 8017954:	4760      	bx	ip
 8017956:	4621      	mov	r1, r4
 8017958:	4628      	mov	r0, r5
 801795a:	bcf0      	pop	{r4, r5, r6, r7}
 801795c:	f7ff bd94 	b.w	8017488 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017960:	4621      	mov	r1, r4
 8017962:	4628      	mov	r0, r5
 8017964:	bcf0      	pop	{r4, r5, r6, r7}
 8017966:	f7ff bee5 	b.w	8017734 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801796c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801796c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017970:	b093      	sub	sp, #76	; 0x4c
 8017972:	4681      	mov	r9, r0
 8017974:	4688      	mov	r8, r1
 8017976:	6810      	ldr	r0, [r2, #0]
 8017978:	6851      	ldr	r1, [r2, #4]
 801797a:	ac0e      	add	r4, sp, #56	; 0x38
 801797c:	4616      	mov	r6, r2
 801797e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017982:	4f6b      	ldr	r7, [pc, #428]	; (8017b30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017984:	c403      	stmia	r4!, {r0, r1}
 8017986:	6818      	ldr	r0, [r3, #0]
 8017988:	ac10      	add	r4, sp, #64	; 0x40
 801798a:	6859      	ldr	r1, [r3, #4]
 801798c:	c403      	stmia	r4!, {r0, r1}
 801798e:	a80e      	add	r0, sp, #56	; 0x38
 8017990:	f7f8 fb04 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017994:	4631      	mov	r1, r6
 8017996:	a810      	add	r0, sp, #64	; 0x40
 8017998:	4e66      	ldr	r6, [pc, #408]	; (8017b34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801799a:	f7f8 fb43 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801799e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80179a2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80179a6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80179aa:	6830      	ldr	r0, [r6, #0]
 80179ac:	fb11 2103 	smlabb	r1, r1, r3, r2
 80179b0:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80179b4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80179b8:	4489      	add	r9, r1
 80179ba:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80179be:	440a      	add	r2, r1
 80179c0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80179c4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80179c8:	4413      	add	r3, r2
 80179ca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80179ce:	6803      	ldr	r3, [r0, #0]
 80179d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80179d2:	4798      	blx	r3
 80179d4:	f010 0f80 	tst.w	r0, #128	; 0x80
 80179d8:	6830      	ldr	r0, [r6, #0]
 80179da:	d01d      	beq.n	8017a18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80179dc:	2200      	movs	r2, #0
 80179de:	6801      	ldr	r1, [r0, #0]
 80179e0:	b2a4      	uxth	r4, r4
 80179e2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80179e6:	b2ad      	uxth	r5, r5
 80179e8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80179ec:	220b      	movs	r2, #11
 80179ee:	9207      	str	r2, [sp, #28]
 80179f0:	883a      	ldrh	r2, [r7, #0]
 80179f2:	9502      	str	r5, [sp, #8]
 80179f4:	9206      	str	r2, [sp, #24]
 80179f6:	2201      	movs	r2, #1
 80179f8:	9401      	str	r4, [sp, #4]
 80179fa:	e9cd a204 	strd	sl, r2, [sp, #16]
 80179fe:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017a02:	9203      	str	r2, [sp, #12]
 8017a04:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017a08:	9200      	str	r2, [sp, #0]
 8017a0a:	4642      	mov	r2, r8
 8017a0c:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017a0e:	4649      	mov	r1, r9
 8017a10:	47a0      	blx	r4
 8017a12:	b013      	add	sp, #76	; 0x4c
 8017a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a18:	6803      	ldr	r3, [r0, #0]
 8017a1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a1c:	4798      	blx	r3
 8017a1e:	883b      	ldrh	r3, [r7, #0]
 8017a20:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017a24:	f04f 0e04 	mov.w	lr, #4
 8017a28:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017a2c:	435d      	muls	r5, r3
 8017a2e:	fb03 1202 	mla	r2, r3, r2, r1
 8017a32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a36:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017a3a:	920c      	str	r2, [sp, #48]	; 0x30
 8017a3c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017a40:	1b12      	subs	r2, r2, r4
 8017a42:	920d      	str	r2, [sp, #52]	; 0x34
 8017a44:	0062      	lsls	r2, r4, #1
 8017a46:	1b1c      	subs	r4, r3, r4
 8017a48:	920a      	str	r2, [sp, #40]	; 0x28
 8017a4a:	0063      	lsls	r3, r4, #1
 8017a4c:	930b      	str	r3, [sp, #44]	; 0x2c
 8017a4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017a50:	4298      	cmp	r0, r3
 8017a52:	d266      	bcs.n	8017b22 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017a54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017a56:	eb00 0b03 	add.w	fp, r0, r3
 8017a5a:	4558      	cmp	r0, fp
 8017a5c:	d25c      	bcs.n	8017b18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017a5e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017a62:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017a66:	f858 2003 	ldr.w	r2, [r8, r3]
 8017a6a:	0e11      	lsrs	r1, r2, #24
 8017a6c:	d012      	beq.n	8017a94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017a6e:	29ff      	cmp	r1, #255	; 0xff
 8017a70:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017a74:	d110      	bne.n	8017a98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017a76:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017a7a:	d10d      	bne.n	8017a98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017a7c:	0953      	lsrs	r3, r2, #5
 8017a7e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017a82:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017a86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a8a:	f027 0707 	bic.w	r7, r7, #7
 8017a8e:	431f      	orrs	r7, r3
 8017a90:	433a      	orrs	r2, r7
 8017a92:	8002      	strh	r2, [r0, #0]
 8017a94:	3002      	adds	r0, #2
 8017a96:	e7e0      	b.n	8017a5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017a98:	fb0a f101 	mul.w	r1, sl, r1
 8017a9c:	8806      	ldrh	r6, [r0, #0]
 8017a9e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017aa2:	b2d2      	uxtb	r2, r2
 8017aa4:	1c4b      	adds	r3, r1, #1
 8017aa6:	1235      	asrs	r5, r6, #8
 8017aa8:	10f4      	asrs	r4, r6, #3
 8017aaa:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017aae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017ab2:	00f6      	lsls	r6, r6, #3
 8017ab4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017ab8:	121b      	asrs	r3, r3, #8
 8017aba:	b2f6      	uxtb	r6, r6
 8017abc:	b299      	uxth	r1, r3
 8017abe:	43db      	mvns	r3, r3
 8017ac0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017ac4:	fb1c fc01 	smulbb	ip, ip, r1
 8017ac8:	b2db      	uxtb	r3, r3
 8017aca:	fb12 f201 	smulbb	r2, r2, r1
 8017ace:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017ad2:	fb05 c503 	mla	r5, r5, r3, ip
 8017ad6:	b2ff      	uxtb	r7, r7
 8017ad8:	fb06 2203 	mla	r2, r6, r3, r2
 8017adc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017ae0:	fb17 f701 	smulbb	r7, r7, r1
 8017ae4:	b2ad      	uxth	r5, r5
 8017ae6:	b292      	uxth	r2, r2
 8017ae8:	fb04 7403 	mla	r4, r4, r3, r7
 8017aec:	f105 0c01 	add.w	ip, r5, #1
 8017af0:	1c57      	adds	r7, r2, #1
 8017af2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017af6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017afa:	b2a4      	uxth	r4, r4
 8017afc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017b00:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017b04:	433d      	orrs	r5, r7
 8017b06:	1c67      	adds	r7, r4, #1
 8017b08:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017b0c:	0964      	lsrs	r4, r4, #5
 8017b0e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017b12:	4325      	orrs	r5, r4
 8017b14:	8005      	strh	r5, [r0, #0]
 8017b16:	e7bd      	b.n	8017a94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017b18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017b1a:	4418      	add	r0, r3
 8017b1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b1e:	4499      	add	r9, r3
 8017b20:	e795      	b.n	8017a4e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017b22:	4b04      	ldr	r3, [pc, #16]	; (8017b34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017b24:	6818      	ldr	r0, [r3, #0]
 8017b26:	6803      	ldr	r3, [r0, #0]
 8017b28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b2a:	4798      	blx	r3
 8017b2c:	e771      	b.n	8017a12 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017b2e:	bf00      	nop
 8017b30:	2400e41e 	.word	0x2400e41e
 8017b34:	2400e424 	.word	0x2400e424

08017b38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b3c:	b087      	sub	sp, #28
 8017b3e:	4680      	mov	r8, r0
 8017b40:	460d      	mov	r5, r1
 8017b42:	4614      	mov	r4, r2
 8017b44:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017b48:	2e00      	cmp	r6, #0
 8017b4a:	f000 80b9 	beq.w	8017cc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017b4e:	6810      	ldr	r0, [r2, #0]
 8017b50:	af02      	add	r7, sp, #8
 8017b52:	6851      	ldr	r1, [r2, #4]
 8017b54:	c703      	stmia	r7!, {r0, r1}
 8017b56:	6818      	ldr	r0, [r3, #0]
 8017b58:	af04      	add	r7, sp, #16
 8017b5a:	6859      	ldr	r1, [r3, #4]
 8017b5c:	c703      	stmia	r7!, {r0, r1}
 8017b5e:	a802      	add	r0, sp, #8
 8017b60:	f7f8 fa1c 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b64:	4621      	mov	r1, r4
 8017b66:	a804      	add	r0, sp, #16
 8017b68:	f7f8 fa5c 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b6c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017b70:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017b74:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017b78:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017b7c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017b80:	eb08 0401 	add.w	r4, r8, r1
 8017b84:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017b88:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017b8c:	440a      	add	r2, r1
 8017b8e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017b92:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017b96:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017b9a:	4413      	add	r3, r2
 8017b9c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017ba0:	4b49      	ldr	r3, [pc, #292]	; (8017cc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017ba2:	6818      	ldr	r0, [r3, #0]
 8017ba4:	6803      	ldr	r3, [r0, #0]
 8017ba6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ba8:	4798      	blx	r3
 8017baa:	4b48      	ldr	r3, [pc, #288]	; (8017ccc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017bac:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017bb0:	2eff      	cmp	r6, #255	; 0xff
 8017bb2:	881a      	ldrh	r2, [r3, #0]
 8017bb4:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017bb8:	fb02 c101 	mla	r1, r2, r1, ip
 8017bbc:	fb02 f207 	mul.w	r2, r2, r7
 8017bc0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017bc4:	f105 0104 	add.w	r1, r5, #4
 8017bc8:	461d      	mov	r5, r3
 8017bca:	d05a      	beq.n	8017c82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017bcc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017bd0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017bd4:	b2b6      	uxth	r6, r6
 8017bd6:	9301      	str	r3, [sp, #4]
 8017bd8:	fa1f fe8e 	uxth.w	lr, lr
 8017bdc:	4282      	cmp	r2, r0
 8017bde:	d96a      	bls.n	8017cb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017be0:	eb00 0b0a 	add.w	fp, r0, sl
 8017be4:	4583      	cmp	fp, r0
 8017be6:	d940      	bls.n	8017c6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017be8:	8805      	ldrh	r5, [r0, #0]
 8017bea:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017bee:	122f      	asrs	r7, r5, #8
 8017bf0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017bf4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017bf8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017bfc:	00ed      	lsls	r5, r5, #3
 8017bfe:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017c02:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017c06:	fb17 f70e 	smulbb	r7, r7, lr
 8017c0a:	b2ed      	uxtb	r5, r5
 8017c0c:	fb19 f90e 	smulbb	r9, r9, lr
 8017c10:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017c14:	fb15 f50e 	smulbb	r5, r5, lr
 8017c18:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017c1c:	10df      	asrs	r7, r3, #3
 8017c1e:	00db      	lsls	r3, r3, #3
 8017c20:	fa1f fc8c 	uxth.w	ip, ip
 8017c24:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017c28:	b2db      	uxtb	r3, r3
 8017c2a:	fb07 9706 	mla	r7, r7, r6, r9
 8017c2e:	f10c 0901 	add.w	r9, ip, #1
 8017c32:	fb03 5306 	mla	r3, r3, r6, r5
 8017c36:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017c3a:	b29b      	uxth	r3, r3
 8017c3c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017c40:	b2bf      	uxth	r7, r7
 8017c42:	f103 0c01 	add.w	ip, r3, #1
 8017c46:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017c4a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017c4e:	ea4c 0c09 	orr.w	ip, ip, r9
 8017c52:	f107 0901 	add.w	r9, r7, #1
 8017c56:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017c5a:	097f      	lsrs	r7, r7, #5
 8017c5c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017c60:	ea4c 0c07 	orr.w	ip, ip, r7
 8017c64:	f820 cb02 	strh.w	ip, [r0], #2
 8017c68:	e7bc      	b.n	8017be4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017c6a:	9b01      	ldr	r3, [sp, #4]
 8017c6c:	881b      	ldrh	r3, [r3, #0]
 8017c6e:	eba3 0308 	sub.w	r3, r3, r8
 8017c72:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017c76:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017c7a:	eba3 0308 	sub.w	r3, r3, r8
 8017c7e:	441c      	add	r4, r3
 8017c80:	e7ac      	b.n	8017bdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017c82:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017c86:	4282      	cmp	r2, r0
 8017c88:	d915      	bls.n	8017cb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017c8a:	eb00 060a 	add.w	r6, r0, sl
 8017c8e:	4286      	cmp	r6, r0
 8017c90:	d906      	bls.n	8017ca0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017c92:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017c96:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017c9a:	f820 3b02 	strh.w	r3, [r0], #2
 8017c9e:	e7f6      	b.n	8017c8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017ca0:	882b      	ldrh	r3, [r5, #0]
 8017ca2:	eba3 0308 	sub.w	r3, r3, r8
 8017ca6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017caa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017cae:	eba3 0308 	sub.w	r3, r3, r8
 8017cb2:	441c      	add	r4, r3
 8017cb4:	e7e7      	b.n	8017c86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017cb6:	4b04      	ldr	r3, [pc, #16]	; (8017cc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017cb8:	6818      	ldr	r0, [r3, #0]
 8017cba:	6803      	ldr	r3, [r0, #0]
 8017cbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017cbe:	4798      	blx	r3
 8017cc0:	b007      	add	sp, #28
 8017cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cc6:	bf00      	nop
 8017cc8:	2400e424 	.word	0x2400e424
 8017ccc:	2400e41e 	.word	0x2400e41e

08017cd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cd4:	b091      	sub	sp, #68	; 0x44
 8017cd6:	4680      	mov	r8, r0
 8017cd8:	460f      	mov	r7, r1
 8017cda:	4614      	mov	r4, r2
 8017cdc:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017ce0:	2d00      	cmp	r5, #0
 8017ce2:	d051      	beq.n	8017d88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017ce4:	6810      	ldr	r0, [r2, #0]
 8017ce6:	ae0c      	add	r6, sp, #48	; 0x30
 8017ce8:	6851      	ldr	r1, [r2, #4]
 8017cea:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8017eec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017cee:	c603      	stmia	r6!, {r0, r1}
 8017cf0:	6818      	ldr	r0, [r3, #0]
 8017cf2:	ae0e      	add	r6, sp, #56	; 0x38
 8017cf4:	6859      	ldr	r1, [r3, #4]
 8017cf6:	c603      	stmia	r6!, {r0, r1}
 8017cf8:	a80c      	add	r0, sp, #48	; 0x30
 8017cfa:	f7f8 f94f 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017cfe:	4621      	mov	r1, r4
 8017d00:	a80e      	add	r0, sp, #56	; 0x38
 8017d02:	f7f8 f98f 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d06:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017d0a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017d0e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017d12:	f8d9 0000 	ldr.w	r0, [r9]
 8017d16:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d1a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017d1e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017d22:	eb08 0401 	add.w	r4, r8, r1
 8017d26:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017d2a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8017ef0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017d2e:	440a      	add	r2, r1
 8017d30:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017d34:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017d38:	4413      	add	r3, r2
 8017d3a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017d3e:	6803      	ldr	r3, [r0, #0]
 8017d40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d42:	4798      	blx	r3
 8017d44:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017d48:	f8d9 0000 	ldr.w	r0, [r9]
 8017d4c:	d01f      	beq.n	8017d8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017d4e:	2200      	movs	r2, #0
 8017d50:	6801      	ldr	r1, [r0, #0]
 8017d52:	b2b6      	uxth	r6, r6
 8017d54:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017d58:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017d5c:	220b      	movs	r2, #11
 8017d5e:	9207      	str	r2, [sp, #28]
 8017d60:	f8b8 2000 	ldrh.w	r2, [r8]
 8017d64:	9601      	str	r6, [sp, #4]
 8017d66:	9206      	str	r2, [sp, #24]
 8017d68:	2201      	movs	r2, #1
 8017d6a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017d6e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017d72:	9203      	str	r2, [sp, #12]
 8017d74:	fa1f f28a 	uxth.w	r2, sl
 8017d78:	9202      	str	r2, [sp, #8]
 8017d7a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017d7e:	9200      	str	r2, [sp, #0]
 8017d80:	463a      	mov	r2, r7
 8017d82:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017d84:	4621      	mov	r1, r4
 8017d86:	47a8      	blx	r5
 8017d88:	b011      	add	sp, #68	; 0x44
 8017d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d8e:	6803      	ldr	r3, [r0, #0]
 8017d90:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017d94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d96:	4798      	blx	r3
 8017d98:	f8b8 2000 	ldrh.w	r2, [r8]
 8017d9c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017da0:	2dff      	cmp	r5, #255	; 0xff
 8017da2:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017da6:	fb0a fa02 	mul.w	sl, sl, r2
 8017daa:	fb02 1303 	mla	r3, r2, r3, r1
 8017dae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017db2:	d062      	beq.n	8017e7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017db4:	ea6f 0c05 	mvn.w	ip, r5
 8017db8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017dbc:	b2ad      	uxth	r5, r5
 8017dbe:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017dc2:	fa5f fc8c 	uxtb.w	ip, ip
 8017dc6:	930a      	str	r3, [sp, #40]	; 0x28
 8017dc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017dca:	4298      	cmp	r0, r3
 8017dcc:	f080 8085 	bcs.w	8017eda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017dd0:	eb00 0b09 	add.w	fp, r0, r9
 8017dd4:	4558      	cmp	r0, fp
 8017dd6:	d246      	bcs.n	8017e66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017dd8:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017ddc:	2303      	movs	r3, #3
 8017dde:	2204      	movs	r2, #4
 8017de0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017de4:	8803      	ldrh	r3, [r0, #0]
 8017de6:	eb07 0a0e 	add.w	sl, r7, lr
 8017dea:	1219      	asrs	r1, r3, #8
 8017dec:	10da      	asrs	r2, r3, #3
 8017dee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017df2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017df6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017dfa:	00db      	lsls	r3, r3, #3
 8017dfc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017e00:	fb18 f805 	smulbb	r8, r8, r5
 8017e04:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017e08:	fb1e fe05 	smulbb	lr, lr, r5
 8017e0c:	b2db      	uxtb	r3, r3
 8017e0e:	fb01 810c 	mla	r1, r1, ip, r8
 8017e12:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017e16:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017e1a:	fb18 f805 	smulbb	r8, r8, r5
 8017e1e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017e22:	b289      	uxth	r1, r1
 8017e24:	fb02 820c 	mla	r2, r2, ip, r8
 8017e28:	fb03 e30c 	mla	r3, r3, ip, lr
 8017e2c:	f101 0801 	add.w	r8, r1, #1
 8017e30:	b292      	uxth	r2, r2
 8017e32:	b29b      	uxth	r3, r3
 8017e34:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017e38:	f102 0801 	add.w	r8, r2, #1
 8017e3c:	f103 0e01 	add.w	lr, r3, #1
 8017e40:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017e44:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017e48:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017e4c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017e50:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017e54:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017e58:	ea4e 0101 	orr.w	r1, lr, r1
 8017e5c:	ea41 0108 	orr.w	r1, r1, r8
 8017e60:	f820 1b02 	strh.w	r1, [r0], #2
 8017e64:	e7b6      	b.n	8017dd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017e66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017e68:	881b      	ldrh	r3, [r3, #0]
 8017e6a:	1b9b      	subs	r3, r3, r6
 8017e6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e70:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017e74:	1b9b      	subs	r3, r3, r6
 8017e76:	441c      	add	r4, r3
 8017e78:	e7a6      	b.n	8017dc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017e7a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017e7e:	2203      	movs	r2, #3
 8017e80:	2504      	movs	r5, #4
 8017e82:	4919      	ldr	r1, [pc, #100]	; (8017ee8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017e84:	4550      	cmp	r0, sl
 8017e86:	d228      	bcs.n	8017eda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017e88:	eb00 0c09 	add.w	ip, r0, r9
 8017e8c:	4560      	cmp	r0, ip
 8017e8e:	4623      	mov	r3, r4
 8017e90:	d219      	bcs.n	8017ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8017e92:	f893 e000 	ldrb.w	lr, [r3]
 8017e96:	3401      	adds	r4, #1
 8017e98:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017e9c:	eb07 0b0e 	add.w	fp, r7, lr
 8017ea0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017ea4:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017ea8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017eac:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017eb0:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017eb4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017eb8:	ea43 030b 	orr.w	r3, r3, fp
 8017ebc:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017ec0:	f820 3b02 	strh.w	r3, [r0], #2
 8017ec4:	e7e2      	b.n	8017e8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017ec6:	f8b8 3000 	ldrh.w	r3, [r8]
 8017eca:	1b9b      	subs	r3, r3, r6
 8017ecc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ed0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017ed4:	1b9b      	subs	r3, r3, r6
 8017ed6:	441c      	add	r4, r3
 8017ed8:	e7d4      	b.n	8017e84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017eda:	4b04      	ldr	r3, [pc, #16]	; (8017eec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017edc:	6818      	ldr	r0, [r3, #0]
 8017ede:	6803      	ldr	r3, [r0, #0]
 8017ee0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ee2:	4798      	blx	r3
 8017ee4:	e750      	b.n	8017d88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017ee6:	bf00      	nop
 8017ee8:	fffff800 	.word	0xfffff800
 8017eec:	2400e424 	.word	0x2400e424
 8017ef0:	2400e41e 	.word	0x2400e41e

08017ef4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017ef4:	b4f0      	push	{r4, r5, r6, r7}
 8017ef6:	460c      	mov	r4, r1
 8017ef8:	4611      	mov	r1, r2
 8017efa:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8017efe:	461a      	mov	r2, r3
 8017f00:	780f      	ldrb	r7, [r1, #0]
 8017f02:	9b04      	ldr	r3, [sp, #16]
 8017f04:	2f01      	cmp	r7, #1
 8017f06:	784e      	ldrb	r6, [r1, #1]
 8017f08:	d036      	beq.n	8017f78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8017f0a:	d31e      	bcc.n	8017f4a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8017f0c:	2f02      	cmp	r7, #2
 8017f0e:	d14a      	bne.n	8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f10:	2e03      	cmp	r6, #3
 8017f12:	d848      	bhi.n	8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f14:	e8df f006 	tbb	[pc, r6]
 8017f18:	16140702 	.word	0x16140702
 8017f1c:	9504      	str	r5, [sp, #16]
 8017f1e:	4620      	mov	r0, r4
 8017f20:	bcf0      	pop	{r4, r5, r6, r7}
 8017f22:	f7ff be09 	b.w	8017b38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017f26:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017f28:	2800      	cmp	r0, #0
 8017f2a:	d03c      	beq.n	8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f2c:	6806      	ldr	r6, [r0, #0]
 8017f2e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017f32:	68b5      	ldr	r5, [r6, #8]
 8017f34:	4613      	mov	r3, r2
 8017f36:	46ac      	mov	ip, r5
 8017f38:	460a      	mov	r2, r1
 8017f3a:	4621      	mov	r1, r4
 8017f3c:	bcf0      	pop	{r4, r5, r6, r7}
 8017f3e:	4760      	bx	ip
 8017f40:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017f42:	e7f1      	b.n	8017f28 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017f44:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017f48:	e7ee      	b.n	8017f28 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017f4a:	2e03      	cmp	r6, #3
 8017f4c:	d82b      	bhi.n	8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f4e:	e8df f006 	tbb	[pc, r6]
 8017f52:	0702      	.short	0x0702
 8017f54:	100e      	.short	0x100e
 8017f56:	9504      	str	r5, [sp, #16]
 8017f58:	4620      	mov	r0, r4
 8017f5a:	bcf0      	pop	{r4, r5, r6, r7}
 8017f5c:	f7ff bd06 	b.w	801796c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8017f60:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017f62:	b300      	cbz	r0, 8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f64:	6806      	ldr	r6, [r0, #0]
 8017f66:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017f6a:	68f5      	ldr	r5, [r6, #12]
 8017f6c:	e7e2      	b.n	8017f34 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017f6e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017f70:	e7f7      	b.n	8017f62 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8017f72:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017f76:	e7f4      	b.n	8017f62 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8017f78:	2e03      	cmp	r6, #3
 8017f7a:	d814      	bhi.n	8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f7c:	e8df f006 	tbb	[pc, r6]
 8017f80:	100e0702 	.word	0x100e0702
 8017f84:	9504      	str	r5, [sp, #16]
 8017f86:	4620      	mov	r0, r4
 8017f88:	bcf0      	pop	{r4, r5, r6, r7}
 8017f8a:	f7ff bea1 	b.w	8017cd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8017f8e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017f90:	b148      	cbz	r0, 8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f92:	6806      	ldr	r6, [r0, #0]
 8017f94:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017f98:	6935      	ldr	r5, [r6, #16]
 8017f9a:	e7cb      	b.n	8017f34 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017f9c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017f9e:	e7f7      	b.n	8017f90 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8017fa0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017fa4:	e7f4      	b.n	8017f90 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8017fa6:	bcf0      	pop	{r4, r5, r6, r7}
 8017fa8:	4770      	bx	lr
	...

08017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fb0:	b087      	sub	sp, #28
 8017fb2:	4604      	mov	r4, r0
 8017fb4:	460e      	mov	r6, r1
 8017fb6:	6810      	ldr	r0, [r2, #0]
 8017fb8:	6851      	ldr	r1, [r2, #4]
 8017fba:	ad02      	add	r5, sp, #8
 8017fbc:	4617      	mov	r7, r2
 8017fbe:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8017fc2:	f8df 9230 	ldr.w	r9, [pc, #560]	; 80181f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017fc6:	c503      	stmia	r5!, {r0, r1}
 8017fc8:	6818      	ldr	r0, [r3, #0]
 8017fca:	ad04      	add	r5, sp, #16
 8017fcc:	6859      	ldr	r1, [r3, #4]
 8017fce:	c503      	stmia	r5!, {r0, r1}
 8017fd0:	a802      	add	r0, sp, #8
 8017fd2:	f7f7 ffe3 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017fd6:	4639      	mov	r1, r7
 8017fd8:	a804      	add	r0, sp, #16
 8017fda:	f7f8 f823 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017fde:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017fe2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017fe6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017fea:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017fee:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ff2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017ff6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017ffa:	440e      	add	r6, r1
 8017ffc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018000:	440a      	add	r2, r1
 8018002:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018006:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801800a:	4413      	add	r3, r2
 801800c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018010:	4b77      	ldr	r3, [pc, #476]	; (80181f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018012:	6818      	ldr	r0, [r3, #0]
 8018014:	6803      	ldr	r3, [r0, #0]
 8018016:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018018:	4798      	blx	r3
 801801a:	f8b9 b000 	ldrh.w	fp, [r9]
 801801e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018022:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018026:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801802a:	fb05 f50b 	mul.w	r5, r5, fp
 801802e:	fb0b 2303 	mla	r3, fp, r3, r2
 8018032:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018036:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801803a:	9300      	str	r3, [sp, #0]
 801803c:	d069      	beq.n	8018112 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801803e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018042:	4558      	cmp	r0, fp
 8018044:	f080 80cc 	bcs.w	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018048:	9b00      	ldr	r3, [sp, #0]
 801804a:	4631      	mov	r1, r6
 801804c:	18c3      	adds	r3, r0, r3
 801804e:	9301      	str	r3, [sp, #4]
 8018050:	9b01      	ldr	r3, [sp, #4]
 8018052:	4298      	cmp	r0, r3
 8018054:	d24f      	bcs.n	80180f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018056:	f811 2b01 	ldrb.w	r2, [r1], #1
 801805a:	2a00      	cmp	r2, #0
 801805c:	d048      	beq.n	80180f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801805e:	fb0a f202 	mul.w	r2, sl, r2
 8018062:	1c53      	adds	r3, r2, #1
 8018064:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018068:	121b      	asrs	r3, r3, #8
 801806a:	d041      	beq.n	80180f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801806c:	8802      	ldrh	r2, [r0, #0]
 801806e:	b29e      	uxth	r6, r3
 8018070:	f8b4 c000 	ldrh.w	ip, [r4]
 8018074:	43db      	mvns	r3, r3
 8018076:	1215      	asrs	r5, r2, #8
 8018078:	b2db      	uxtb	r3, r3
 801807a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801807e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018082:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018086:	fb15 f503 	smulbb	r5, r5, r3
 801808a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801808e:	00d2      	lsls	r2, r2, #3
 8018090:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018094:	fb07 5706 	mla	r7, r7, r6, r5
 8018098:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801809c:	b2d2      	uxtb	r2, r2
 801809e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80180a2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80180a6:	fb1e fe03 	smulbb	lr, lr, r3
 80180aa:	b2bf      	uxth	r7, r7
 80180ac:	fb12 f203 	smulbb	r2, r2, r3
 80180b0:	fa5f fc8c 	uxtb.w	ip, ip
 80180b4:	fb05 e506 	mla	r5, r5, r6, lr
 80180b8:	f107 0e01 	add.w	lr, r7, #1
 80180bc:	fb0c 2c06 	mla	ip, ip, r6, r2
 80180c0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80180c4:	fa1f fc8c 	uxth.w	ip, ip
 80180c8:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80180cc:	b2ad      	uxth	r5, r5
 80180ce:	f10c 0701 	add.w	r7, ip, #1
 80180d2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80180d6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80180da:	ea47 070e 	orr.w	r7, r7, lr
 80180de:	f105 0e01 	add.w	lr, r5, #1
 80180e2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80180e6:	096d      	lsrs	r5, r5, #5
 80180e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180ec:	432f      	orrs	r7, r5
 80180ee:	8007      	strh	r7, [r0, #0]
 80180f0:	3002      	adds	r0, #2
 80180f2:	3402      	adds	r4, #2
 80180f4:	e7ac      	b.n	8018050 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80180f6:	f8b9 3000 	ldrh.w	r3, [r9]
 80180fa:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80180fe:	eba3 0308 	sub.w	r3, r3, r8
 8018102:	eba6 0608 	sub.w	r6, r6, r8
 8018106:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801810a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801810e:	440e      	add	r6, r1
 8018110:	e797      	b.n	8018042 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018112:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018116:	42a8      	cmp	r0, r5
 8018118:	d262      	bcs.n	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801811a:	9b00      	ldr	r3, [sp, #0]
 801811c:	4631      	mov	r1, r6
 801811e:	eb00 0b03 	add.w	fp, r0, r3
 8018122:	4558      	cmp	r0, fp
 8018124:	d24e      	bcs.n	80181c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018126:	f811 3b01 	ldrb.w	r3, [r1], #1
 801812a:	b12b      	cbz	r3, 8018138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801812c:	2bff      	cmp	r3, #255	; 0xff
 801812e:	f8b4 e000 	ldrh.w	lr, [r4]
 8018132:	d104      	bne.n	801813e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018134:	f8a0 e000 	strh.w	lr, [r0]
 8018138:	3002      	adds	r0, #2
 801813a:	3402      	adds	r4, #2
 801813c:	e7f1      	b.n	8018122 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801813e:	8802      	ldrh	r2, [r0, #0]
 8018140:	b29f      	uxth	r7, r3
 8018142:	43db      	mvns	r3, r3
 8018144:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018148:	1216      	asrs	r6, r2, #8
 801814a:	b2db      	uxtb	r3, r3
 801814c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018150:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018154:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018158:	00d2      	lsls	r2, r2, #3
 801815a:	fb16 f603 	smulbb	r6, r6, r3
 801815e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018162:	b2d2      	uxtb	r2, r2
 8018164:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018168:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801816c:	fb1a fa03 	smulbb	sl, sl, r3
 8018170:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018174:	fa1f fc8c 	uxth.w	ip, ip
 8018178:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801817c:	fb12 f303 	smulbb	r3, r2, r3
 8018180:	fa5f fe8e 	uxtb.w	lr, lr
 8018184:	fb06 a607 	mla	r6, r6, r7, sl
 8018188:	f10c 0201 	add.w	r2, ip, #1
 801818c:	fb0e 3307 	mla	r3, lr, r7, r3
 8018190:	b2b6      	uxth	r6, r6
 8018192:	b29b      	uxth	r3, r3
 8018194:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018198:	f106 0a01 	add.w	sl, r6, #1
 801819c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80181a0:	f103 0c01 	add.w	ip, r3, #1
 80181a4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80181a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80181ac:	0976      	lsrs	r6, r6, #5
 80181ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80181b2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80181b6:	ea4c 0c02 	orr.w	ip, ip, r2
 80181ba:	ea4c 0c06 	orr.w	ip, ip, r6
 80181be:	f8a0 c000 	strh.w	ip, [r0]
 80181c2:	e7b9      	b.n	8018138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80181c4:	f8b9 3000 	ldrh.w	r3, [r9]
 80181c8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80181cc:	eba3 0308 	sub.w	r3, r3, r8
 80181d0:	eba6 0608 	sub.w	r6, r6, r8
 80181d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181d8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80181dc:	440e      	add	r6, r1
 80181de:	e79a      	b.n	8018116 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80181e0:	4b03      	ldr	r3, [pc, #12]	; (80181f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80181e2:	6818      	ldr	r0, [r3, #0]
 80181e4:	6803      	ldr	r3, [r0, #0]
 80181e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80181e8:	4798      	blx	r3
 80181ea:	b007      	add	sp, #28
 80181ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181f0:	2400e424 	.word	0x2400e424
 80181f4:	2400e41e 	.word	0x2400e41e

080181f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80181f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181fc:	b089      	sub	sp, #36	; 0x24
 80181fe:	4682      	mov	sl, r0
 8018200:	460f      	mov	r7, r1
 8018202:	4691      	mov	r9, r2
 8018204:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018208:	4698      	mov	r8, r3
 801820a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801820c:	2e00      	cmp	r6, #0
 801820e:	d03d      	beq.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018210:	4608      	mov	r0, r1
 8018212:	f7fa fe4b 	bl	8012eac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018216:	4605      	mov	r5, r0
 8018218:	4638      	mov	r0, r7
 801821a:	f7fa fe7b 	bl	8012f14 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801821e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018222:	4638      	mov	r0, r7
 8018224:	f8ad 9008 	strh.w	r9, [sp, #8]
 8018228:	f8ad 500c 	strh.w	r5, [sp, #12]
 801822c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018230:	f7fa ff28 	bl	8013084 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018234:	4605      	mov	r5, r0
 8018236:	4638      	mov	r0, r7
 8018238:	f7fa ff54 	bl	80130e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801823c:	4681      	mov	r9, r0
 801823e:	4638      	mov	r0, r7
 8018240:	f7fa ffa4 	bl	801318c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018244:	280b      	cmp	r0, #11
 8018246:	d821      	bhi.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018248:	e8df f000 	tbb	[pc, r0]
 801824c:	2006aebe 	.word	0x2006aebe
 8018250:	20202020 	.word	0x20202020
 8018254:	b5202020 	.word	0xb5202020
 8018258:	4bb0      	ldr	r3, [pc, #704]	; (801851c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801825a:	6818      	ldr	r0, [r3, #0]
 801825c:	6803      	ldr	r3, [r0, #0]
 801825e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018260:	4798      	blx	r3
 8018262:	2eff      	cmp	r6, #255	; 0xff
 8018264:	d101      	bne.n	801826a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8018266:	0683      	lsls	r3, r0, #26
 8018268:	d506      	bpl.n	8018278 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801826a:	4633      	mov	r3, r6
 801826c:	4622      	mov	r2, r4
 801826e:	a902      	add	r1, sp, #8
 8018270:	4628      	mov	r0, r5
 8018272:	f7ff f909 	bl	8017488 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018276:	e009      	b.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018278:	4638      	mov	r0, r7
 801827a:	f7fa fecb 	bl	8013014 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801827e:	b940      	cbnz	r0, 8018292 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8018280:	4623      	mov	r3, r4
 8018282:	aa02      	add	r2, sp, #8
 8018284:	4629      	mov	r1, r5
 8018286:	4650      	mov	r0, sl
 8018288:	f7ff f9e4 	bl	8017654 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801828c:	b009      	add	sp, #36	; 0x24
 801828e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018292:	f10d 0818 	add.w	r8, sp, #24
 8018296:	4639      	mov	r1, r7
 8018298:	af04      	add	r7, sp, #16
 801829a:	4640      	mov	r0, r8
 801829c:	f7fa fe6e 	bl	8012f7c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80182a0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80182a4:	e887 0003 	stmia.w	r7, {r0, r1}
 80182a8:	4638      	mov	r0, r7
 80182aa:	4621      	mov	r1, r4
 80182ac:	f7f2 fbf6 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 80182b0:	4638      	mov	r0, r7
 80182b2:	f7f2 fc36 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80182b6:	2800      	cmp	r0, #0
 80182b8:	d1d7      	bne.n	801826a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80182ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80182be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80182c2:	4293      	cmp	r3, r2
 80182c4:	dd12      	ble.n	80182ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80182c6:	1a9b      	subs	r3, r3, r2
 80182c8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80182cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80182d0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80182d4:	4628      	mov	r0, r5
 80182d6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80182da:	4642      	mov	r2, r8
 80182dc:	f8ad 101c 	strh.w	r1, [sp, #28]
 80182e0:	a902      	add	r1, sp, #8
 80182e2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80182e6:	4633      	mov	r3, r6
 80182e8:	f7ff f8ce 	bl	8017488 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182ec:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80182f0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80182f4:	4293      	cmp	r3, r2
 80182f6:	dd12      	ble.n	801831e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 80182f8:	1a9b      	subs	r3, r3, r2
 80182fa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80182fe:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018302:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018306:	4642      	mov	r2, r8
 8018308:	f8ad 001a 	strh.w	r0, [sp, #26]
 801830c:	4628      	mov	r0, r5
 801830e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018312:	23ff      	movs	r3, #255	; 0xff
 8018314:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018318:	a902      	add	r1, sp, #8
 801831a:	f7ff f8b5 	bl	8017488 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801831e:	463b      	mov	r3, r7
 8018320:	aa02      	add	r2, sp, #8
 8018322:	4629      	mov	r1, r5
 8018324:	4650      	mov	r0, sl
 8018326:	f7ff f995 	bl	8017654 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801832a:	88a2      	ldrh	r2, [r4, #4]
 801832c:	8823      	ldrh	r3, [r4, #0]
 801832e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018332:	4413      	add	r3, r2
 8018334:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018338:	440a      	add	r2, r1
 801833a:	b29b      	uxth	r3, r3
 801833c:	b292      	uxth	r2, r2
 801833e:	b218      	sxth	r0, r3
 8018340:	b211      	sxth	r1, r2
 8018342:	4288      	cmp	r0, r1
 8018344:	dd12      	ble.n	801836c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8018346:	1a9b      	subs	r3, r3, r2
 8018348:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801834c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018350:	4642      	mov	r2, r8
 8018352:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018356:	a902      	add	r1, sp, #8
 8018358:	f8ad 301c 	strh.w	r3, [sp, #28]
 801835c:	23ff      	movs	r3, #255	; 0xff
 801835e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018362:	4628      	mov	r0, r5
 8018364:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018368:	f7ff f88e 	bl	8017488 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801836c:	88e2      	ldrh	r2, [r4, #6]
 801836e:	8863      	ldrh	r3, [r4, #2]
 8018370:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018374:	4413      	add	r3, r2
 8018376:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801837a:	440a      	add	r2, r1
 801837c:	b29b      	uxth	r3, r3
 801837e:	b292      	uxth	r2, r2
 8018380:	b218      	sxth	r0, r3
 8018382:	b211      	sxth	r1, r2
 8018384:	4288      	cmp	r0, r1
 8018386:	dd81      	ble.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018388:	1a9b      	subs	r3, r3, r2
 801838a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801838e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018392:	4642      	mov	r2, r8
 8018394:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018398:	23ff      	movs	r3, #255	; 0xff
 801839a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801839e:	f8ad 101a 	strh.w	r1, [sp, #26]
 80183a2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80183a6:	e762      	b.n	801826e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80183a8:	4633      	mov	r3, r6
 80183aa:	4622      	mov	r2, r4
 80183ac:	a902      	add	r1, sp, #8
 80183ae:	4628      	mov	r0, r5
 80183b0:	f7ff f9c0 	bl	8017734 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80183b4:	e76a      	b.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80183b6:	e9cd 4600 	strd	r4, r6, [sp]
 80183ba:	ab02      	add	r3, sp, #8
 80183bc:	464a      	mov	r2, r9
 80183be:	4629      	mov	r1, r5
 80183c0:	4650      	mov	r0, sl
 80183c2:	f7ff fd97 	bl	8017ef4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80183c6:	e761      	b.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80183c8:	4638      	mov	r0, r7
 80183ca:	f7fa fe23 	bl	8013014 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80183ce:	b950      	cbnz	r0, 80183e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80183d0:	f8da 3000 	ldr.w	r3, [sl]
 80183d4:	aa02      	add	r2, sp, #8
 80183d6:	4629      	mov	r1, r5
 80183d8:	e9cd 6000 	strd	r6, r0, [sp]
 80183dc:	4650      	mov	r0, sl
 80183de:	68de      	ldr	r6, [r3, #12]
 80183e0:	4623      	mov	r3, r4
 80183e2:	47b0      	blx	r6
 80183e4:	e752      	b.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80183e6:	f10d 0818 	add.w	r8, sp, #24
 80183ea:	4639      	mov	r1, r7
 80183ec:	af04      	add	r7, sp, #16
 80183ee:	4640      	mov	r0, r8
 80183f0:	f7fa fdc4 	bl	8012f7c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80183f4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80183f8:	e887 0003 	stmia.w	r7, {r0, r1}
 80183fc:	4638      	mov	r0, r7
 80183fe:	4621      	mov	r1, r4
 8018400:	f7f2 fb4c 	bl	800aa9c <_ZN8touchgfx4RectaNERKS0_>
 8018404:	4638      	mov	r0, r7
 8018406:	f7f2 fb8c 	bl	800ab22 <_ZNK8touchgfx4Rect7isEmptyEv>
 801840a:	b138      	cbz	r0, 801841c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801840c:	4623      	mov	r3, r4
 801840e:	9600      	str	r6, [sp, #0]
 8018410:	aa02      	add	r2, sp, #8
 8018412:	4649      	mov	r1, r9
 8018414:	4628      	mov	r0, r5
 8018416:	f7ff fdc9 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801841a:	e737      	b.n	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801841c:	f8da 3000 	ldr.w	r3, [sl]
 8018420:	aa02      	add	r2, sp, #8
 8018422:	4629      	mov	r1, r5
 8018424:	e9cd 6000 	strd	r6, r0, [sp]
 8018428:	4650      	mov	r0, sl
 801842a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801842e:	463b      	mov	r3, r7
 8018430:	47d8      	blx	fp
 8018432:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018436:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801843a:	4293      	cmp	r3, r2
 801843c:	dd13      	ble.n	8018466 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801843e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018442:	1a9b      	subs	r3, r3, r2
 8018444:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018448:	f8ad 0018 	strh.w	r0, [sp, #24]
 801844c:	4628      	mov	r0, r5
 801844e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018452:	aa02      	add	r2, sp, #8
 8018454:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018458:	4649      	mov	r1, r9
 801845a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801845e:	4643      	mov	r3, r8
 8018460:	9600      	str	r6, [sp, #0]
 8018462:	f7ff fda3 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018466:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801846a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801846e:	4293      	cmp	r3, r2
 8018470:	dd13      	ble.n	801849a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8018472:	1a9b      	subs	r3, r3, r2
 8018474:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018478:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801847c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018480:	aa02      	add	r2, sp, #8
 8018482:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018486:	4628      	mov	r0, r5
 8018488:	f8ad 301c 	strh.w	r3, [sp, #28]
 801848c:	4643      	mov	r3, r8
 801848e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018492:	4649      	mov	r1, r9
 8018494:	9600      	str	r6, [sp, #0]
 8018496:	f7ff fd89 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801849a:	88a2      	ldrh	r2, [r4, #4]
 801849c:	8823      	ldrh	r3, [r4, #0]
 801849e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80184a2:	4413      	add	r3, r2
 80184a4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80184a8:	440a      	add	r2, r1
 80184aa:	b29b      	uxth	r3, r3
 80184ac:	b292      	uxth	r2, r2
 80184ae:	b218      	sxth	r0, r3
 80184b0:	b211      	sxth	r1, r2
 80184b2:	4288      	cmp	r0, r1
 80184b4:	dd13      	ble.n	80184de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80184b6:	1a9b      	subs	r3, r3, r2
 80184b8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80184bc:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80184c0:	aa02      	add	r2, sp, #8
 80184c2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80184c6:	4649      	mov	r1, r9
 80184c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80184cc:	4643      	mov	r3, r8
 80184ce:	f8ad 001e 	strh.w	r0, [sp, #30]
 80184d2:	4628      	mov	r0, r5
 80184d4:	9600      	str	r6, [sp, #0]
 80184d6:	f8ad 701a 	strh.w	r7, [sp, #26]
 80184da:	f7ff fd67 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80184de:	88e2      	ldrh	r2, [r4, #6]
 80184e0:	8863      	ldrh	r3, [r4, #2]
 80184e2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80184e6:	4413      	add	r3, r2
 80184e8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80184ec:	440a      	add	r2, r1
 80184ee:	b29b      	uxth	r3, r3
 80184f0:	b292      	uxth	r2, r2
 80184f2:	b218      	sxth	r0, r3
 80184f4:	b211      	sxth	r1, r2
 80184f6:	4288      	cmp	r0, r1
 80184f8:	f77f aec8 	ble.w	801828c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80184fc:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018500:	1a9b      	subs	r3, r3, r2
 8018502:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018506:	f8ad 301e 	strh.w	r3, [sp, #30]
 801850a:	4643      	mov	r3, r8
 801850c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018510:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018514:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018518:	9600      	str	r6, [sp, #0]
 801851a:	e779      	b.n	8018410 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801851c:	2400e424 	.word	0x2400e424

08018520 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018520:	b180      	cbz	r0, 8018544 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018522:	2903      	cmp	r1, #3
 8018524:	d81c      	bhi.n	8018560 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018526:	e8df f001 	tbb	[pc, r1]
 801852a:	1d02      	.short	0x1d02
 801852c:	1f08      	.short	0x1f08
 801852e:	4b10      	ldr	r3, [pc, #64]	; (8018570 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018530:	8818      	ldrh	r0, [r3, #0]
 8018532:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018536:	4240      	negs	r0, r0
 8018538:	4770      	bx	lr
 801853a:	4b0d      	ldr	r3, [pc, #52]	; (8018570 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801853c:	8818      	ldrh	r0, [r3, #0]
 801853e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018542:	4770      	bx	lr
 8018544:	2903      	cmp	r1, #3
 8018546:	d80b      	bhi.n	8018560 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018548:	a301      	add	r3, pc, #4	; (adr r3, 8018550 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801854a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801854e:	bf00      	nop
 8018550:	08018565 	.word	0x08018565
 8018554:	0801853b 	.word	0x0801853b
 8018558:	08018569 	.word	0x08018569
 801855c:	0801852f 	.word	0x0801852f
 8018560:	2000      	movs	r0, #0
 8018562:	4770      	bx	lr
 8018564:	2001      	movs	r0, #1
 8018566:	4770      	bx	lr
 8018568:	f04f 30ff 	mov.w	r0, #4294967295
 801856c:	4770      	bx	lr
 801856e:	bf00      	nop
 8018570:	2400e41e 	.word	0x2400e41e

08018574 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018574:	b180      	cbz	r0, 8018598 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018576:	2903      	cmp	r1, #3
 8018578:	d81c      	bhi.n	80185b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801857a:	e8df f001 	tbb	[pc, r1]
 801857e:	021d      	.short	0x021d
 8018580:	071f      	.short	0x071f
 8018582:	4b10      	ldr	r3, [pc, #64]	; (80185c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018584:	8818      	ldrh	r0, [r3, #0]
 8018586:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801858a:	4770      	bx	lr
 801858c:	4b0d      	ldr	r3, [pc, #52]	; (80185c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801858e:	8818      	ldrh	r0, [r3, #0]
 8018590:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018594:	4240      	negs	r0, r0
 8018596:	4770      	bx	lr
 8018598:	2903      	cmp	r1, #3
 801859a:	d80b      	bhi.n	80185b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801859c:	a301      	add	r3, pc, #4	; (adr r3, 80185a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801859e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80185a2:	bf00      	nop
 80185a4:	08018583 	.word	0x08018583
 80185a8:	080185bd 	.word	0x080185bd
 80185ac:	0801858d 	.word	0x0801858d
 80185b0:	080185b9 	.word	0x080185b9
 80185b4:	2000      	movs	r0, #0
 80185b6:	4770      	bx	lr
 80185b8:	2001      	movs	r0, #1
 80185ba:	4770      	bx	lr
 80185bc:	f04f 30ff 	mov.w	r0, #4294967295
 80185c0:	4770      	bx	lr
 80185c2:	bf00      	nop
 80185c4:	2400e41e 	.word	0x2400e41e

080185c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80185c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185cc:	b099      	sub	sp, #100	; 0x64
 80185ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80185d0:	a914      	add	r1, sp, #80	; 0x50
 80185d2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80185d6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80185da:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80185de:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80185e2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80185e6:	e881 000c 	stmia.w	r1, {r2, r3}
 80185ea:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80185ee:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80185f2:	9309      	str	r3, [sp, #36]	; 0x24
 80185f4:	f891 900d 	ldrb.w	r9, [r1, #13]
 80185f8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80185fc:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018600:	9310      	str	r3, [sp, #64]	; 0x40
 8018602:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018606:	930c      	str	r3, [sp, #48]	; 0x30
 8018608:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801860c:	798f      	ldrb	r7, [r1, #6]
 801860e:	431f      	orrs	r7, r3
 8018610:	f000 8195 	beq.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018614:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018618:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801861c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018620:	ea59 0903 	orrs.w	r9, r9, r3
 8018624:	f000 818b 	beq.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018628:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801862c:	b29b      	uxth	r3, r3
 801862e:	2d00      	cmp	r5, #0
 8018630:	f000 812e 	beq.w	8018890 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018634:	1aed      	subs	r5, r5, r3
 8018636:	b2ad      	uxth	r5, r5
 8018638:	042b      	lsls	r3, r5, #16
 801863a:	d502      	bpl.n	8018642 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801863c:	1b64      	subs	r4, r4, r5
 801863e:	2500      	movs	r5, #0
 8018640:	b224      	sxth	r4, r4
 8018642:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018646:	a814      	add	r0, sp, #80	; 0x50
 8018648:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801864c:	428c      	cmp	r4, r1
 801864e:	b28b      	uxth	r3, r1
 8018650:	bfbf      	itttt	lt
 8018652:	18ed      	addlt	r5, r5, r3
 8018654:	1b2c      	sublt	r4, r5, r4
 8018656:	b2a5      	uxthlt	r5, r4
 8018658:	460c      	movlt	r4, r1
 801865a:	8891      	ldrh	r1, [r2, #4]
 801865c:	440b      	add	r3, r1
 801865e:	4621      	mov	r1, r4
 8018660:	b21b      	sxth	r3, r3
 8018662:	930f      	str	r3, [sp, #60]	; 0x3c
 8018664:	88d3      	ldrh	r3, [r2, #6]
 8018666:	8852      	ldrh	r2, [r2, #2]
 8018668:	4413      	add	r3, r2
 801866a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801866c:	b21b      	sxth	r3, r3
 801866e:	930d      	str	r3, [sp, #52]	; 0x34
 8018670:	4bbd      	ldr	r3, [pc, #756]	; (8018968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018672:	f893 b000 	ldrb.w	fp, [r3]
 8018676:	f10b 3cff 	add.w	ip, fp, #4294967295
 801867a:	f1dc 0300 	rsbs	r3, ip, #0
 801867e:	eb43 030c 	adc.w	r3, r3, ip
 8018682:	930e      	str	r3, [sp, #56]	; 0x38
 8018684:	4653      	mov	r3, sl
 8018686:	f7f7 fafe 	bl	800fc86 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801868a:	4621      	mov	r1, r4
 801868c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018690:	4653      	mov	r3, sl
 8018692:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018694:	a814      	add	r0, sp, #80	; 0x50
 8018696:	f7f7 fb13 	bl	800fcc0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801869a:	a918      	add	r1, sp, #96	; 0x60
 801869c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80186a0:	a817      	add	r0, sp, #92	; 0x5c
 80186a2:	f7f7 fc39 	bl	800ff18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80186a6:	f1ba 0f00 	cmp.w	sl, #0
 80186aa:	f040 80f4 	bne.w	8018896 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80186ae:	f1bb 0f01 	cmp.w	fp, #1
 80186b2:	f040 80f8 	bne.w	80188a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80186b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186b8:	2b00      	cmp	r3, #0
 80186ba:	f040 8145 	bne.w	8018948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80186be:	b2ba      	uxth	r2, r7
 80186c0:	b905      	cbnz	r5, 80186c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80186c2:	b16e      	cbz	r6, 80186e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80186c4:	fb06 5302 	mla	r3, r6, r2, r5
 80186c8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80186ca:	4631      	mov	r1, r6
 80186cc:	fb08 f303 	mul.w	r3, r8, r3
 80186d0:	f003 0607 	and.w	r6, r3, #7
 80186d4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80186d8:	9328      	str	r3, [sp, #160]	; 0xa0
 80186da:	eba9 0301 	sub.w	r3, r9, r1
 80186de:	930a      	str	r3, [sp, #40]	; 0x28
 80186e0:	4651      	mov	r1, sl
 80186e2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80186e4:	f7ff ff1c 	bl	8018520 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80186e8:	4681      	mov	r9, r0
 80186ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80186ec:	f7ff ff42 	bl	8018574 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80186f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80186f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80186f4:	4683      	mov	fp, r0
 80186f6:	eba3 0a01 	sub.w	sl, r3, r1
 80186fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80186fc:	459a      	cmp	sl, r3
 80186fe:	bfa8      	it	ge
 8018700:	469a      	movge	sl, r3
 8018702:	f1ba 0f00 	cmp.w	sl, #0
 8018706:	f340 811a 	ble.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801870a:	1b64      	subs	r4, r4, r5
 801870c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801870e:	1b1c      	subs	r4, r3, r4
 8018710:	42bc      	cmp	r4, r7
 8018712:	bfd4      	ite	le
 8018714:	ebc5 0504 	rsble	r5, r5, r4
 8018718:	ebc5 0507 	rsbgt	r5, r5, r7
 801871c:	2d00      	cmp	r5, #0
 801871e:	f340 810e 	ble.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018722:	1b52      	subs	r2, r2, r5
 8018724:	fb08 f302 	mul.w	r3, r8, r2
 8018728:	930f      	str	r3, [sp, #60]	; 0x3c
 801872a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801872c:	2b00      	cmp	r3, #0
 801872e:	f040 8116 	bne.w	801895e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018732:	4b8e      	ldr	r3, [pc, #568]	; (801896c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018734:	6818      	ldr	r0, [r3, #0]
 8018736:	6803      	ldr	r3, [r0, #0]
 8018738:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801873a:	4798      	blx	r3
 801873c:	2301      	movs	r3, #1
 801873e:	4a8c      	ldr	r2, [pc, #560]	; (8018970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018740:	fa03 f308 	lsl.w	r3, r3, r8
 8018744:	8811      	ldrh	r1, [r2, #0]
 8018746:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801874a:	3b01      	subs	r3, #1
 801874c:	b2db      	uxtb	r3, r3
 801874e:	930e      	str	r3, [sp, #56]	; 0x38
 8018750:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018754:	fb01 2303 	mla	r3, r1, r3, r2
 8018758:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801875c:	930a      	str	r3, [sp, #40]	; 0x28
 801875e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018760:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018764:	9313      	str	r3, [sp, #76]	; 0x4c
 8018766:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018768:	0a19      	lsrs	r1, r3, #8
 801876a:	b2cb      	uxtb	r3, r1
 801876c:	9312      	str	r3, [sp, #72]	; 0x48
 801876e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018770:	b2db      	uxtb	r3, r3
 8018772:	9311      	str	r3, [sp, #68]	; 0x44
 8018774:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018776:	095a      	lsrs	r2, r3, #5
 8018778:	4b7e      	ldr	r3, [pc, #504]	; (8018974 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801877a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801877e:	400b      	ands	r3, r1
 8018780:	4313      	orrs	r3, r2
 8018782:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018784:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018788:	4313      	orrs	r3, r2
 801878a:	b29b      	uxth	r3, r3
 801878c:	9310      	str	r3, [sp, #64]	; 0x40
 801878e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018790:	781a      	ldrb	r2, [r3, #0]
 8018792:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018796:	fb05 b919 	mls	r9, r5, r9, fp
 801879a:	4132      	asrs	r2, r6
 801879c:	fb03 fb05 	mul.w	fp, r3, r5
 80187a0:	930d      	str	r3, [sp, #52]	; 0x34
 80187a2:	b2d2      	uxtb	r2, r2
 80187a4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80187a8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80187ac:	f0c0 80f5 	bcc.w	801899a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80187b0:	46ae      	mov	lr, r5
 80187b2:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80187b6:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80187ba:	f0c0 80dd 	bcc.w	8018978 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80187be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80187c0:	4013      	ands	r3, r2
 80187c2:	d055      	beq.n	8018870 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80187c4:	20ff      	movs	r0, #255	; 0xff
 80187c6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80187c8:	fb90 f1f1 	sdiv	r1, r0, r1
 80187cc:	434b      	muls	r3, r1
 80187ce:	2bfe      	cmp	r3, #254	; 0xfe
 80187d0:	dd03      	ble.n	80187da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80187d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80187d4:	4281      	cmp	r1, r0
 80187d6:	f000 80c4 	beq.w	8018962 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 80187da:	990c      	ldr	r1, [sp, #48]	; 0x30
 80187dc:	f8bc 4000 	ldrh.w	r4, [ip]
 80187e0:	fb11 f303 	smulbb	r3, r1, r3
 80187e4:	1220      	asrs	r0, r4, #8
 80187e6:	b29b      	uxth	r3, r3
 80187e8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80187ec:	1c59      	adds	r1, r3, #1
 80187ee:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80187f2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80187f6:	10e1      	asrs	r1, r4, #3
 80187f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80187fc:	00e4      	lsls	r4, r4, #3
 80187fe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018802:	b29f      	uxth	r7, r3
 8018804:	43db      	mvns	r3, r3
 8018806:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801880a:	b2db      	uxtb	r3, r3
 801880c:	b2e4      	uxtb	r4, r4
 801880e:	9309      	str	r3, [sp, #36]	; 0x24
 8018810:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018812:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018816:	fb13 f907 	smulbb	r9, r3, r7
 801881a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801881c:	fb00 9003 	mla	r0, r0, r3, r9
 8018820:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018822:	fb13 f907 	smulbb	r9, r3, r7
 8018826:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018828:	b280      	uxth	r0, r0
 801882a:	fb01 9103 	mla	r1, r1, r3, r9
 801882e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018830:	fb13 f707 	smulbb	r7, r3, r7
 8018834:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018836:	b289      	uxth	r1, r1
 8018838:	fb04 7403 	mla	r4, r4, r3, r7
 801883c:	1c43      	adds	r3, r0, #1
 801883e:	b2a4      	uxth	r4, r4
 8018840:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018844:	f104 0901 	add.w	r9, r4, #1
 8018848:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801884c:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018850:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018854:	ea49 0000 	orr.w	r0, r9, r0
 8018858:	f101 0901 	add.w	r9, r1, #1
 801885c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018860:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018864:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018868:	ea40 0009 	orr.w	r0, r0, r9
 801886c:	f8ac 0000 	strh.w	r0, [ip]
 8018870:	4446      	add	r6, r8
 8018872:	b2b6      	uxth	r6, r6
 8018874:	2e07      	cmp	r6, #7
 8018876:	bf89      	itett	hi
 8018878:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801887a:	fa42 f208 	asrls.w	r2, r2, r8
 801887e:	2600      	movhi	r6, #0
 8018880:	785a      	ldrbhi	r2, [r3, #1]
 8018882:	bf8a      	itet	hi
 8018884:	3301      	addhi	r3, #1
 8018886:	b2d2      	uxtbls	r2, r2
 8018888:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801888a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801888c:	449c      	add	ip, r3
 801888e:	e792      	b.n	80187b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018890:	441c      	add	r4, r3
 8018892:	b224      	sxth	r4, r4
 8018894:	e6d5      	b.n	8018642 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018896:	f1ba 0f01 	cmp.w	sl, #1
 801889a:	f47f af0c 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801889e:	f1bb 0f01 	cmp.w	fp, #1
 80188a2:	f47f af08 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188a6:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 801896c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 80188aa:	f8db 0000 	ldr.w	r0, [fp]
 80188ae:	6803      	ldr	r3, [r0, #0]
 80188b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80188b2:	4798      	blx	r3
 80188b4:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80188b8:	465a      	mov	r2, fp
 80188ba:	d006      	beq.n	80188ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80188bc:	f1b8 0f04 	cmp.w	r8, #4
 80188c0:	d140      	bne.n	8018944 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80188c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80188c4:	3300      	adds	r3, #0
 80188c6:	bf18      	it	ne
 80188c8:	2301      	movne	r3, #1
 80188ca:	0580      	lsls	r0, r0, #22
 80188cc:	d56e      	bpl.n	80189ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80188ce:	f1b8 0f08 	cmp.w	r8, #8
 80188d2:	d16b      	bne.n	80189ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80188d4:	2b00      	cmp	r3, #0
 80188d6:	bf0c      	ite	eq
 80188d8:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80188dc:	f44f 7180 	movne.w	r1, #256	; 0x100
 80188e0:	2d00      	cmp	r5, #0
 80188e2:	f47f aee8 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188e6:	2e00      	cmp	r6, #0
 80188e8:	f47f aee5 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188ec:	19e3      	adds	r3, r4, r7
 80188ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80188f0:	4283      	cmp	r3, r0
 80188f2:	f73f aee0 	bgt.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188f8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80188fa:	444b      	add	r3, r9
 80188fc:	4283      	cmp	r3, r0
 80188fe:	f73f aeda 	bgt.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018902:	b2bf      	uxth	r7, r7
 8018904:	f1b8 0f08 	cmp.w	r8, #8
 8018908:	6810      	ldr	r0, [r2, #0]
 801890a:	f04f 0500 	mov.w	r5, #0
 801890e:	bf18      	it	ne
 8018910:	3701      	addne	r7, #1
 8018912:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018916:	6804      	ldr	r4, [r0, #0]
 8018918:	bf18      	it	ne
 801891a:	f027 0701 	bicne.w	r7, r7, #1
 801891e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018922:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018926:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018928:	bf18      	it	ne
 801892a:	b2bf      	uxthne	r7, r7
 801892c:	9104      	str	r1, [sp, #16]
 801892e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018930:	e9cd 7900 	strd	r7, r9, [sp]
 8018934:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018938:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801893a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801893c:	47a0      	blx	r4
 801893e:	b019      	add	sp, #100	; 0x64
 8018940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018944:	2300      	movs	r3, #0
 8018946:	e7c0      	b.n	80188ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018948:	2208      	movs	r2, #8
 801894a:	fb92 f3f8 	sdiv	r3, r2, r8
 801894e:	1e5a      	subs	r2, r3, #1
 8018950:	443a      	add	r2, r7
 8018952:	fb92 f2f3 	sdiv	r2, r2, r3
 8018956:	fb12 f203 	smulbb	r2, r2, r3
 801895a:	b292      	uxth	r2, r2
 801895c:	e6b0      	b.n	80186c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801895e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018960:	e6ec      	b.n	801873c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018962:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018964:	e782      	b.n	801886c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018966:	bf00      	nop
 8018968:	2400e41c 	.word	0x2400e41c
 801896c:	2400e424 	.word	0x2400e424
 8018970:	2400e41e 	.word	0x2400e41e
 8018974:	00fff800 	.word	0x00fff800
 8018978:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801897a:	b153      	cbz	r3, 8018992 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801897c:	441e      	add	r6, r3
 801897e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018980:	b2b6      	uxth	r6, r6
 8018982:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018986:	f006 0607 	and.w	r6, r6, #7
 801898a:	781a      	ldrb	r2, [r3, #0]
 801898c:	9328      	str	r3, [sp, #160]	; 0xa0
 801898e:	4132      	asrs	r2, r6
 8018990:	b2d2      	uxtb	r2, r2
 8018992:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018994:	445b      	add	r3, fp
 8018996:	930a      	str	r3, [sp, #40]	; 0x28
 8018998:	e706      	b.n	80187a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801899a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801899c:	2b00      	cmp	r3, #0
 801899e:	d1ce      	bne.n	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80189a0:	4b05      	ldr	r3, [pc, #20]	; (80189b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80189a2:	6818      	ldr	r0, [r3, #0]
 80189a4:	6803      	ldr	r3, [r0, #0]
 80189a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80189a8:	4798      	blx	r3
 80189aa:	e7c8      	b.n	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80189ac:	2b00      	cmp	r3, #0
 80189ae:	f43f ae82 	beq.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80189b2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80189b6:	e793      	b.n	80188e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80189b8:	2400e424 	.word	0x2400e424

080189bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80189bc:	b538      	push	{r3, r4, r5, lr}
 80189be:	4c15      	ldr	r4, [pc, #84]	; (8018a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80189c0:	4605      	mov	r5, r0
 80189c2:	7823      	ldrb	r3, [r4, #0]
 80189c4:	f3bf 8f5b 	dmb	ish
 80189c8:	07da      	lsls	r2, r3, #31
 80189ca:	d40b      	bmi.n	80189e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80189cc:	4620      	mov	r0, r4
 80189ce:	f008 f9e6 	bl	8020d9e <__cxa_guard_acquire>
 80189d2:	b138      	cbz	r0, 80189e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80189d4:	4620      	mov	r0, r4
 80189d6:	f008 f9ee 	bl	8020db6 <__cxa_guard_release>
 80189da:	4a0f      	ldr	r2, [pc, #60]	; (8018a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80189dc:	490f      	ldr	r1, [pc, #60]	; (8018a1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80189de:	4810      	ldr	r0, [pc, #64]	; (8018a20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80189e0:	f008 f9d6 	bl	8020d90 <__aeabi_atexit>
 80189e4:	4c0f      	ldr	r4, [pc, #60]	; (8018a24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80189e6:	7823      	ldrb	r3, [r4, #0]
 80189e8:	f3bf 8f5b 	dmb	ish
 80189ec:	07db      	lsls	r3, r3, #31
 80189ee:	d40b      	bmi.n	8018a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189f0:	4620      	mov	r0, r4
 80189f2:	f008 f9d4 	bl	8020d9e <__cxa_guard_acquire>
 80189f6:	b138      	cbz	r0, 8018a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189f8:	4620      	mov	r0, r4
 80189fa:	f008 f9dc 	bl	8020db6 <__cxa_guard_release>
 80189fe:	4a06      	ldr	r2, [pc, #24]	; (8018a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018a00:	4909      	ldr	r1, [pc, #36]	; (8018a28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018a02:	480a      	ldr	r0, [pc, #40]	; (8018a2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018a04:	f008 f9c4 	bl	8020d90 <__aeabi_atexit>
 8018a08:	4b05      	ldr	r3, [pc, #20]	; (8018a20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018a0a:	612b      	str	r3, [r5, #16]
 8018a0c:	4b07      	ldr	r3, [pc, #28]	; (8018a2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018a0e:	616b      	str	r3, [r5, #20]
 8018a10:	bd38      	pop	{r3, r4, r5, pc}
 8018a12:	bf00      	nop
 8018a14:	2400e504 	.word	0x2400e504
 8018a18:	24000000 	.word	0x24000000
 8018a1c:	080157a3 	.word	0x080157a3
 8018a20:	240000cc 	.word	0x240000cc
 8018a24:	2400e508 	.word	0x2400e508
 8018a28:	080157a1 	.word	0x080157a1
 8018a2c:	240000d0 	.word	0x240000d0

08018a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018a30:	b538      	push	{r3, r4, r5, lr}
 8018a32:	4c15      	ldr	r4, [pc, #84]	; (8018a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018a34:	4605      	mov	r5, r0
 8018a36:	7823      	ldrb	r3, [r4, #0]
 8018a38:	f3bf 8f5b 	dmb	ish
 8018a3c:	07da      	lsls	r2, r3, #31
 8018a3e:	d40b      	bmi.n	8018a58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a40:	4620      	mov	r0, r4
 8018a42:	f008 f9ac 	bl	8020d9e <__cxa_guard_acquire>
 8018a46:	b138      	cbz	r0, 8018a58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a48:	4620      	mov	r0, r4
 8018a4a:	f008 f9b4 	bl	8020db6 <__cxa_guard_release>
 8018a4e:	4a0f      	ldr	r2, [pc, #60]	; (8018a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a50:	490f      	ldr	r1, [pc, #60]	; (8018a90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018a52:	4810      	ldr	r0, [pc, #64]	; (8018a94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a54:	f008 f99c 	bl	8020d90 <__aeabi_atexit>
 8018a58:	4c0f      	ldr	r4, [pc, #60]	; (8018a98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018a5a:	7823      	ldrb	r3, [r4, #0]
 8018a5c:	f3bf 8f5b 	dmb	ish
 8018a60:	07db      	lsls	r3, r3, #31
 8018a62:	d40b      	bmi.n	8018a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a64:	4620      	mov	r0, r4
 8018a66:	f008 f99a 	bl	8020d9e <__cxa_guard_acquire>
 8018a6a:	b138      	cbz	r0, 8018a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a6c:	4620      	mov	r0, r4
 8018a6e:	f008 f9a2 	bl	8020db6 <__cxa_guard_release>
 8018a72:	4a06      	ldr	r2, [pc, #24]	; (8018a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a74:	4909      	ldr	r1, [pc, #36]	; (8018a9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018a76:	480a      	ldr	r0, [pc, #40]	; (8018aa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a78:	f008 f98a 	bl	8020d90 <__aeabi_atexit>
 8018a7c:	4b05      	ldr	r3, [pc, #20]	; (8018a94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a7e:	60ab      	str	r3, [r5, #8]
 8018a80:	4b07      	ldr	r3, [pc, #28]	; (8018aa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a82:	60eb      	str	r3, [r5, #12]
 8018a84:	bd38      	pop	{r3, r4, r5, pc}
 8018a86:	bf00      	nop
 8018a88:	2400e4dc 	.word	0x2400e4dc
 8018a8c:	24000000 	.word	0x24000000
 8018a90:	080157a7 	.word	0x080157a7
 8018a94:	240000a4 	.word	0x240000a4
 8018a98:	2400e4e0 	.word	0x2400e4e0
 8018a9c:	080157a5 	.word	0x080157a5
 8018aa0:	240000a8 	.word	0x240000a8

08018aa4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018aa4:	b510      	push	{r4, lr}
 8018aa6:	4604      	mov	r4, r0
 8018aa8:	f7ff ff88 	bl	80189bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018aac:	4620      	mov	r0, r4
 8018aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ab2:	f7ff bfbd 	b.w	8018a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018ab8:	b538      	push	{r3, r4, r5, lr}
 8018aba:	4c15      	ldr	r4, [pc, #84]	; (8018b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018abc:	4605      	mov	r5, r0
 8018abe:	7823      	ldrb	r3, [r4, #0]
 8018ac0:	f3bf 8f5b 	dmb	ish
 8018ac4:	07da      	lsls	r2, r3, #31
 8018ac6:	d40b      	bmi.n	8018ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ac8:	4620      	mov	r0, r4
 8018aca:	f008 f968 	bl	8020d9e <__cxa_guard_acquire>
 8018ace:	b138      	cbz	r0, 8018ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ad0:	4620      	mov	r0, r4
 8018ad2:	f008 f970 	bl	8020db6 <__cxa_guard_release>
 8018ad6:	4a0f      	ldr	r2, [pc, #60]	; (8018b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018ad8:	490f      	ldr	r1, [pc, #60]	; (8018b18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018ada:	4810      	ldr	r0, [pc, #64]	; (8018b1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018adc:	f008 f958 	bl	8020d90 <__aeabi_atexit>
 8018ae0:	4c0f      	ldr	r4, [pc, #60]	; (8018b20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018ae2:	7823      	ldrb	r3, [r4, #0]
 8018ae4:	f3bf 8f5b 	dmb	ish
 8018ae8:	07db      	lsls	r3, r3, #31
 8018aea:	d40b      	bmi.n	8018b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018aec:	4620      	mov	r0, r4
 8018aee:	f008 f956 	bl	8020d9e <__cxa_guard_acquire>
 8018af2:	b138      	cbz	r0, 8018b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018af4:	4620      	mov	r0, r4
 8018af6:	f008 f95e 	bl	8020db6 <__cxa_guard_release>
 8018afa:	4a06      	ldr	r2, [pc, #24]	; (8018b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018afc:	4909      	ldr	r1, [pc, #36]	; (8018b24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018afe:	480a      	ldr	r0, [pc, #40]	; (8018b28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018b00:	f008 f946 	bl	8020d90 <__aeabi_atexit>
 8018b04:	4b05      	ldr	r3, [pc, #20]	; (8018b1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018b06:	622b      	str	r3, [r5, #32]
 8018b08:	4b07      	ldr	r3, [pc, #28]	; (8018b28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018b0a:	626b      	str	r3, [r5, #36]	; 0x24
 8018b0c:	bd38      	pop	{r3, r4, r5, pc}
 8018b0e:	bf00      	nop
 8018b10:	2400e50c 	.word	0x2400e50c
 8018b14:	24000000 	.word	0x24000000
 8018b18:	0801579b 	.word	0x0801579b
 8018b1c:	240000d4 	.word	0x240000d4
 8018b20:	2400e510 	.word	0x2400e510
 8018b24:	08015799 	.word	0x08015799
 8018b28:	240000d8 	.word	0x240000d8

08018b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018b2c:	b538      	push	{r3, r4, r5, lr}
 8018b2e:	4c15      	ldr	r4, [pc, #84]	; (8018b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018b30:	4605      	mov	r5, r0
 8018b32:	7823      	ldrb	r3, [r4, #0]
 8018b34:	f3bf 8f5b 	dmb	ish
 8018b38:	07da      	lsls	r2, r3, #31
 8018b3a:	d40b      	bmi.n	8018b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018b3c:	4620      	mov	r0, r4
 8018b3e:	f008 f92e 	bl	8020d9e <__cxa_guard_acquire>
 8018b42:	b138      	cbz	r0, 8018b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018b44:	4620      	mov	r0, r4
 8018b46:	f008 f936 	bl	8020db6 <__cxa_guard_release>
 8018b4a:	4a0f      	ldr	r2, [pc, #60]	; (8018b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b4c:	490f      	ldr	r1, [pc, #60]	; (8018b8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018b4e:	4810      	ldr	r0, [pc, #64]	; (8018b90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b50:	f008 f91e 	bl	8020d90 <__aeabi_atexit>
 8018b54:	4c0f      	ldr	r4, [pc, #60]	; (8018b94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018b56:	7823      	ldrb	r3, [r4, #0]
 8018b58:	f3bf 8f5b 	dmb	ish
 8018b5c:	07db      	lsls	r3, r3, #31
 8018b5e:	d40b      	bmi.n	8018b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b60:	4620      	mov	r0, r4
 8018b62:	f008 f91c 	bl	8020d9e <__cxa_guard_acquire>
 8018b66:	b138      	cbz	r0, 8018b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b68:	4620      	mov	r0, r4
 8018b6a:	f008 f924 	bl	8020db6 <__cxa_guard_release>
 8018b6e:	4a06      	ldr	r2, [pc, #24]	; (8018b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b70:	4909      	ldr	r1, [pc, #36]	; (8018b98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018b72:	480a      	ldr	r0, [pc, #40]	; (8018b9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b74:	f008 f90c 	bl	8020d90 <__aeabi_atexit>
 8018b78:	4b05      	ldr	r3, [pc, #20]	; (8018b90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b7a:	61ab      	str	r3, [r5, #24]
 8018b7c:	4b07      	ldr	r3, [pc, #28]	; (8018b9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b7e:	61eb      	str	r3, [r5, #28]
 8018b80:	bd38      	pop	{r3, r4, r5, pc}
 8018b82:	bf00      	nop
 8018b84:	2400e4e4 	.word	0x2400e4e4
 8018b88:	24000000 	.word	0x24000000
 8018b8c:	0801579f 	.word	0x0801579f
 8018b90:	240000ac 	.word	0x240000ac
 8018b94:	2400e4e8 	.word	0x2400e4e8
 8018b98:	0801579d 	.word	0x0801579d
 8018b9c:	240000b0 	.word	0x240000b0

08018ba0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018ba0:	b510      	push	{r4, lr}
 8018ba2:	4604      	mov	r4, r0
 8018ba4:	f7ff ff88 	bl	8018ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018ba8:	4620      	mov	r0, r4
 8018baa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018bae:	f7ff bfbd 	b.w	8018b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018bb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018bb4:	b538      	push	{r3, r4, r5, lr}
 8018bb6:	4c15      	ldr	r4, [pc, #84]	; (8018c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018bb8:	4605      	mov	r5, r0
 8018bba:	7823      	ldrb	r3, [r4, #0]
 8018bbc:	f3bf 8f5b 	dmb	ish
 8018bc0:	07da      	lsls	r2, r3, #31
 8018bc2:	d40b      	bmi.n	8018bdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018bc4:	4620      	mov	r0, r4
 8018bc6:	f008 f8ea 	bl	8020d9e <__cxa_guard_acquire>
 8018bca:	b138      	cbz	r0, 8018bdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018bcc:	4620      	mov	r0, r4
 8018bce:	f008 f8f2 	bl	8020db6 <__cxa_guard_release>
 8018bd2:	4a0f      	ldr	r2, [pc, #60]	; (8018c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018bd4:	490f      	ldr	r1, [pc, #60]	; (8018c14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018bd6:	4810      	ldr	r0, [pc, #64]	; (8018c18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018bd8:	f008 f8da 	bl	8020d90 <__aeabi_atexit>
 8018bdc:	4c0f      	ldr	r4, [pc, #60]	; (8018c1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018bde:	7823      	ldrb	r3, [r4, #0]
 8018be0:	f3bf 8f5b 	dmb	ish
 8018be4:	07db      	lsls	r3, r3, #31
 8018be6:	d40b      	bmi.n	8018c00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018be8:	4620      	mov	r0, r4
 8018bea:	f008 f8d8 	bl	8020d9e <__cxa_guard_acquire>
 8018bee:	b138      	cbz	r0, 8018c00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018bf0:	4620      	mov	r0, r4
 8018bf2:	f008 f8e0 	bl	8020db6 <__cxa_guard_release>
 8018bf6:	4a06      	ldr	r2, [pc, #24]	; (8018c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018bf8:	4909      	ldr	r1, [pc, #36]	; (8018c20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018bfa:	480a      	ldr	r0, [pc, #40]	; (8018c24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018bfc:	f008 f8c8 	bl	8020d90 <__aeabi_atexit>
 8018c00:	4b05      	ldr	r3, [pc, #20]	; (8018c18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018c02:	632b      	str	r3, [r5, #48]	; 0x30
 8018c04:	4b07      	ldr	r3, [pc, #28]	; (8018c24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018c06:	636b      	str	r3, [r5, #52]	; 0x34
 8018c08:	bd38      	pop	{r3, r4, r5, pc}
 8018c0a:	bf00      	nop
 8018c0c:	2400e51c 	.word	0x2400e51c
 8018c10:	24000000 	.word	0x24000000
 8018c14:	08015793 	.word	0x08015793
 8018c18:	240000e4 	.word	0x240000e4
 8018c1c:	2400e520 	.word	0x2400e520
 8018c20:	08015791 	.word	0x08015791
 8018c24:	240000e8 	.word	0x240000e8

08018c28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018c28:	b538      	push	{r3, r4, r5, lr}
 8018c2a:	4c15      	ldr	r4, [pc, #84]	; (8018c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018c2c:	4605      	mov	r5, r0
 8018c2e:	7823      	ldrb	r3, [r4, #0]
 8018c30:	f3bf 8f5b 	dmb	ish
 8018c34:	07da      	lsls	r2, r3, #31
 8018c36:	d40b      	bmi.n	8018c50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018c38:	4620      	mov	r0, r4
 8018c3a:	f008 f8b0 	bl	8020d9e <__cxa_guard_acquire>
 8018c3e:	b138      	cbz	r0, 8018c50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018c40:	4620      	mov	r0, r4
 8018c42:	f008 f8b8 	bl	8020db6 <__cxa_guard_release>
 8018c46:	4a0f      	ldr	r2, [pc, #60]	; (8018c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c48:	490f      	ldr	r1, [pc, #60]	; (8018c88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018c4a:	4810      	ldr	r0, [pc, #64]	; (8018c8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c4c:	f008 f8a0 	bl	8020d90 <__aeabi_atexit>
 8018c50:	4c0f      	ldr	r4, [pc, #60]	; (8018c90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018c52:	7823      	ldrb	r3, [r4, #0]
 8018c54:	f3bf 8f5b 	dmb	ish
 8018c58:	07db      	lsls	r3, r3, #31
 8018c5a:	d40b      	bmi.n	8018c74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c5c:	4620      	mov	r0, r4
 8018c5e:	f008 f89e 	bl	8020d9e <__cxa_guard_acquire>
 8018c62:	b138      	cbz	r0, 8018c74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c64:	4620      	mov	r0, r4
 8018c66:	f008 f8a6 	bl	8020db6 <__cxa_guard_release>
 8018c6a:	4a06      	ldr	r2, [pc, #24]	; (8018c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c6c:	4909      	ldr	r1, [pc, #36]	; (8018c94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018c6e:	480a      	ldr	r0, [pc, #40]	; (8018c98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c70:	f008 f88e 	bl	8020d90 <__aeabi_atexit>
 8018c74:	4b05      	ldr	r3, [pc, #20]	; (8018c8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c76:	62ab      	str	r3, [r5, #40]	; 0x28
 8018c78:	4b07      	ldr	r3, [pc, #28]	; (8018c98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c7a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018c7c:	bd38      	pop	{r3, r4, r5, pc}
 8018c7e:	bf00      	nop
 8018c80:	2400e4ec 	.word	0x2400e4ec
 8018c84:	24000000 	.word	0x24000000
 8018c88:	08015797 	.word	0x08015797
 8018c8c:	240000b4 	.word	0x240000b4
 8018c90:	2400e4f0 	.word	0x2400e4f0
 8018c94:	08015795 	.word	0x08015795
 8018c98:	240000b8 	.word	0x240000b8

08018c9c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018c9c:	b510      	push	{r4, lr}
 8018c9e:	4604      	mov	r4, r0
 8018ca0:	f7ff ff88 	bl	8018bb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018ca4:	4620      	mov	r0, r4
 8018ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018caa:	f7ff bfbd 	b.w	8018c28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018cb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018cb0:	b538      	push	{r3, r4, r5, lr}
 8018cb2:	4c15      	ldr	r4, [pc, #84]	; (8018d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018cb4:	4605      	mov	r5, r0
 8018cb6:	7823      	ldrb	r3, [r4, #0]
 8018cb8:	f3bf 8f5b 	dmb	ish
 8018cbc:	07da      	lsls	r2, r3, #31
 8018cbe:	d40b      	bmi.n	8018cd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018cc0:	4620      	mov	r0, r4
 8018cc2:	f008 f86c 	bl	8020d9e <__cxa_guard_acquire>
 8018cc6:	b138      	cbz	r0, 8018cd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018cc8:	4620      	mov	r0, r4
 8018cca:	f008 f874 	bl	8020db6 <__cxa_guard_release>
 8018cce:	4a0f      	ldr	r2, [pc, #60]	; (8018d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018cd0:	490f      	ldr	r1, [pc, #60]	; (8018d10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018cd2:	4810      	ldr	r0, [pc, #64]	; (8018d14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018cd4:	f008 f85c 	bl	8020d90 <__aeabi_atexit>
 8018cd8:	4c0f      	ldr	r4, [pc, #60]	; (8018d18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018cda:	7823      	ldrb	r3, [r4, #0]
 8018cdc:	f3bf 8f5b 	dmb	ish
 8018ce0:	07db      	lsls	r3, r3, #31
 8018ce2:	d40b      	bmi.n	8018cfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018ce4:	4620      	mov	r0, r4
 8018ce6:	f008 f85a 	bl	8020d9e <__cxa_guard_acquire>
 8018cea:	b138      	cbz	r0, 8018cfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018cec:	4620      	mov	r0, r4
 8018cee:	f008 f862 	bl	8020db6 <__cxa_guard_release>
 8018cf2:	4a06      	ldr	r2, [pc, #24]	; (8018d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018cf4:	4909      	ldr	r1, [pc, #36]	; (8018d1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018cf6:	480a      	ldr	r0, [pc, #40]	; (8018d20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018cf8:	f008 f84a 	bl	8020d90 <__aeabi_atexit>
 8018cfc:	4b05      	ldr	r3, [pc, #20]	; (8018d14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018cfe:	652b      	str	r3, [r5, #80]	; 0x50
 8018d00:	4b07      	ldr	r3, [pc, #28]	; (8018d20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018d02:	656b      	str	r3, [r5, #84]	; 0x54
 8018d04:	bd38      	pop	{r3, r4, r5, pc}
 8018d06:	bf00      	nop
 8018d08:	2400e524 	.word	0x2400e524
 8018d0c:	24000000 	.word	0x24000000
 8018d10:	08015783 	.word	0x08015783
 8018d14:	240000ec 	.word	0x240000ec
 8018d18:	2400e528 	.word	0x2400e528
 8018d1c:	08015781 	.word	0x08015781
 8018d20:	240000f0 	.word	0x240000f0

08018d24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018d24:	b538      	push	{r3, r4, r5, lr}
 8018d26:	4c15      	ldr	r4, [pc, #84]	; (8018d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018d28:	4605      	mov	r5, r0
 8018d2a:	7823      	ldrb	r3, [r4, #0]
 8018d2c:	f3bf 8f5b 	dmb	ish
 8018d30:	07da      	lsls	r2, r3, #31
 8018d32:	d40b      	bmi.n	8018d4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018d34:	4620      	mov	r0, r4
 8018d36:	f008 f832 	bl	8020d9e <__cxa_guard_acquire>
 8018d3a:	b138      	cbz	r0, 8018d4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018d3c:	4620      	mov	r0, r4
 8018d3e:	f008 f83a 	bl	8020db6 <__cxa_guard_release>
 8018d42:	4a0f      	ldr	r2, [pc, #60]	; (8018d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d44:	490f      	ldr	r1, [pc, #60]	; (8018d84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018d46:	4810      	ldr	r0, [pc, #64]	; (8018d88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d48:	f008 f822 	bl	8020d90 <__aeabi_atexit>
 8018d4c:	4c0f      	ldr	r4, [pc, #60]	; (8018d8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018d4e:	7823      	ldrb	r3, [r4, #0]
 8018d50:	f3bf 8f5b 	dmb	ish
 8018d54:	07db      	lsls	r3, r3, #31
 8018d56:	d40b      	bmi.n	8018d70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d58:	4620      	mov	r0, r4
 8018d5a:	f008 f820 	bl	8020d9e <__cxa_guard_acquire>
 8018d5e:	b138      	cbz	r0, 8018d70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d60:	4620      	mov	r0, r4
 8018d62:	f008 f828 	bl	8020db6 <__cxa_guard_release>
 8018d66:	4a06      	ldr	r2, [pc, #24]	; (8018d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d68:	4909      	ldr	r1, [pc, #36]	; (8018d90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018d6a:	480a      	ldr	r0, [pc, #40]	; (8018d94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d6c:	f008 f810 	bl	8020d90 <__aeabi_atexit>
 8018d70:	4b05      	ldr	r3, [pc, #20]	; (8018d88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d72:	64ab      	str	r3, [r5, #72]	; 0x48
 8018d74:	4b07      	ldr	r3, [pc, #28]	; (8018d94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d76:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018d78:	bd38      	pop	{r3, r4, r5, pc}
 8018d7a:	bf00      	nop
 8018d7c:	2400e52c 	.word	0x2400e52c
 8018d80:	24000000 	.word	0x24000000
 8018d84:	08015787 	.word	0x08015787
 8018d88:	240000f4 	.word	0x240000f4
 8018d8c:	2400e530 	.word	0x2400e530
 8018d90:	08015785 	.word	0x08015785
 8018d94:	240000f8 	.word	0x240000f8

08018d98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018d98:	b538      	push	{r3, r4, r5, lr}
 8018d9a:	4c15      	ldr	r4, [pc, #84]	; (8018df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018d9c:	4605      	mov	r5, r0
 8018d9e:	7823      	ldrb	r3, [r4, #0]
 8018da0:	f3bf 8f5b 	dmb	ish
 8018da4:	07da      	lsls	r2, r3, #31
 8018da6:	d40b      	bmi.n	8018dc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018da8:	4620      	mov	r0, r4
 8018daa:	f007 fff8 	bl	8020d9e <__cxa_guard_acquire>
 8018dae:	b138      	cbz	r0, 8018dc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018db0:	4620      	mov	r0, r4
 8018db2:	f008 f800 	bl	8020db6 <__cxa_guard_release>
 8018db6:	4a0f      	ldr	r2, [pc, #60]	; (8018df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018db8:	490f      	ldr	r1, [pc, #60]	; (8018df8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018dba:	4810      	ldr	r0, [pc, #64]	; (8018dfc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018dbc:	f007 ffe8 	bl	8020d90 <__aeabi_atexit>
 8018dc0:	4c0f      	ldr	r4, [pc, #60]	; (8018e00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018dc2:	7823      	ldrb	r3, [r4, #0]
 8018dc4:	f3bf 8f5b 	dmb	ish
 8018dc8:	07db      	lsls	r3, r3, #31
 8018dca:	d40b      	bmi.n	8018de4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018dcc:	4620      	mov	r0, r4
 8018dce:	f007 ffe6 	bl	8020d9e <__cxa_guard_acquire>
 8018dd2:	b138      	cbz	r0, 8018de4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018dd4:	4620      	mov	r0, r4
 8018dd6:	f007 ffee 	bl	8020db6 <__cxa_guard_release>
 8018dda:	4a06      	ldr	r2, [pc, #24]	; (8018df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018ddc:	4909      	ldr	r1, [pc, #36]	; (8018e04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018dde:	480a      	ldr	r0, [pc, #40]	; (8018e08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018de0:	f007 ffd6 	bl	8020d90 <__aeabi_atexit>
 8018de4:	4b05      	ldr	r3, [pc, #20]	; (8018dfc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018de6:	642b      	str	r3, [r5, #64]	; 0x40
 8018de8:	4b07      	ldr	r3, [pc, #28]	; (8018e08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018dea:	646b      	str	r3, [r5, #68]	; 0x44
 8018dec:	bd38      	pop	{r3, r4, r5, pc}
 8018dee:	bf00      	nop
 8018df0:	2400e4f4 	.word	0x2400e4f4
 8018df4:	24000000 	.word	0x24000000
 8018df8:	0801578b 	.word	0x0801578b
 8018dfc:	240000bc 	.word	0x240000bc
 8018e00:	2400e4f8 	.word	0x2400e4f8
 8018e04:	08015789 	.word	0x08015789
 8018e08:	240000c0 	.word	0x240000c0

08018e0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018e0c:	b538      	push	{r3, r4, r5, lr}
 8018e0e:	4c15      	ldr	r4, [pc, #84]	; (8018e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018e10:	4605      	mov	r5, r0
 8018e12:	7823      	ldrb	r3, [r4, #0]
 8018e14:	f3bf 8f5b 	dmb	ish
 8018e18:	07da      	lsls	r2, r3, #31
 8018e1a:	d40b      	bmi.n	8018e34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018e1c:	4620      	mov	r0, r4
 8018e1e:	f007 ffbe 	bl	8020d9e <__cxa_guard_acquire>
 8018e22:	b138      	cbz	r0, 8018e34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018e24:	4620      	mov	r0, r4
 8018e26:	f007 ffc6 	bl	8020db6 <__cxa_guard_release>
 8018e2a:	4a0f      	ldr	r2, [pc, #60]	; (8018e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018e2c:	490f      	ldr	r1, [pc, #60]	; (8018e6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018e2e:	4810      	ldr	r0, [pc, #64]	; (8018e70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018e30:	f007 ffae 	bl	8020d90 <__aeabi_atexit>
 8018e34:	4c0f      	ldr	r4, [pc, #60]	; (8018e74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018e36:	7823      	ldrb	r3, [r4, #0]
 8018e38:	f3bf 8f5b 	dmb	ish
 8018e3c:	07db      	lsls	r3, r3, #31
 8018e3e:	d40b      	bmi.n	8018e58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e40:	4620      	mov	r0, r4
 8018e42:	f007 ffac 	bl	8020d9e <__cxa_guard_acquire>
 8018e46:	b138      	cbz	r0, 8018e58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e48:	4620      	mov	r0, r4
 8018e4a:	f007 ffb4 	bl	8020db6 <__cxa_guard_release>
 8018e4e:	4a06      	ldr	r2, [pc, #24]	; (8018e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018e50:	4909      	ldr	r1, [pc, #36]	; (8018e78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018e52:	480a      	ldr	r0, [pc, #40]	; (8018e7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e54:	f007 ff9c 	bl	8020d90 <__aeabi_atexit>
 8018e58:	4b05      	ldr	r3, [pc, #20]	; (8018e70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018e5a:	63ab      	str	r3, [r5, #56]	; 0x38
 8018e5c:	4b07      	ldr	r3, [pc, #28]	; (8018e7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e5e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018e60:	bd38      	pop	{r3, r4, r5, pc}
 8018e62:	bf00      	nop
 8018e64:	2400e514 	.word	0x2400e514
 8018e68:	24000000 	.word	0x24000000
 8018e6c:	0801578f 	.word	0x0801578f
 8018e70:	240000dc 	.word	0x240000dc
 8018e74:	2400e518 	.word	0x2400e518
 8018e78:	0801578d 	.word	0x0801578d
 8018e7c:	240000e0 	.word	0x240000e0

08018e80 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018e80:	b510      	push	{r4, lr}
 8018e82:	4604      	mov	r4, r0
 8018e84:	f7ff ff14 	bl	8018cb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018e88:	4620      	mov	r0, r4
 8018e8a:	f7ff ff85 	bl	8018d98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8018e8e:	4620      	mov	r0, r4
 8018e90:	f7ff ff48 	bl	8018d24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018e94:	4620      	mov	r0, r4
 8018e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e9a:	f7ff bfb7 	b.w	8018e0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018ea0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018ea0:	b538      	push	{r3, r4, r5, lr}
 8018ea2:	4c15      	ldr	r4, [pc, #84]	; (8018ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018ea4:	4605      	mov	r5, r0
 8018ea6:	7823      	ldrb	r3, [r4, #0]
 8018ea8:	f3bf 8f5b 	dmb	ish
 8018eac:	07da      	lsls	r2, r3, #31
 8018eae:	d40b      	bmi.n	8018ec8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018eb0:	4620      	mov	r0, r4
 8018eb2:	f007 ff74 	bl	8020d9e <__cxa_guard_acquire>
 8018eb6:	b138      	cbz	r0, 8018ec8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018eb8:	4620      	mov	r0, r4
 8018eba:	f007 ff7c 	bl	8020db6 <__cxa_guard_release>
 8018ebe:	4a0f      	ldr	r2, [pc, #60]	; (8018efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018ec0:	490f      	ldr	r1, [pc, #60]	; (8018f00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018ec2:	4810      	ldr	r0, [pc, #64]	; (8018f04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018ec4:	f007 ff64 	bl	8020d90 <__aeabi_atexit>
 8018ec8:	4c0f      	ldr	r4, [pc, #60]	; (8018f08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8018eca:	7823      	ldrb	r3, [r4, #0]
 8018ecc:	f3bf 8f5b 	dmb	ish
 8018ed0:	07db      	lsls	r3, r3, #31
 8018ed2:	d40b      	bmi.n	8018eec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018ed4:	4620      	mov	r0, r4
 8018ed6:	f007 ff62 	bl	8020d9e <__cxa_guard_acquire>
 8018eda:	b138      	cbz	r0, 8018eec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018edc:	4620      	mov	r0, r4
 8018ede:	f007 ff6a 	bl	8020db6 <__cxa_guard_release>
 8018ee2:	4a06      	ldr	r2, [pc, #24]	; (8018efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018ee4:	4909      	ldr	r1, [pc, #36]	; (8018f0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018ee6:	480a      	ldr	r0, [pc, #40]	; (8018f10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ee8:	f007 ff52 	bl	8020d90 <__aeabi_atexit>
 8018eec:	4b05      	ldr	r3, [pc, #20]	; (8018f04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018eee:	662b      	str	r3, [r5, #96]	; 0x60
 8018ef0:	4b07      	ldr	r3, [pc, #28]	; (8018f10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ef2:	666b      	str	r3, [r5, #100]	; 0x64
 8018ef4:	bd38      	pop	{r3, r4, r5, pc}
 8018ef6:	bf00      	nop
 8018ef8:	2400e4fc 	.word	0x2400e4fc
 8018efc:	24000000 	.word	0x24000000
 8018f00:	0801577b 	.word	0x0801577b
 8018f04:	240000c4 	.word	0x240000c4
 8018f08:	2400e500 	.word	0x2400e500
 8018f0c:	08015779 	.word	0x08015779
 8018f10:	240000c8 	.word	0x240000c8

08018f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018f14:	b538      	push	{r3, r4, r5, lr}
 8018f16:	4c15      	ldr	r4, [pc, #84]	; (8018f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018f18:	4605      	mov	r5, r0
 8018f1a:	7823      	ldrb	r3, [r4, #0]
 8018f1c:	f3bf 8f5b 	dmb	ish
 8018f20:	07da      	lsls	r2, r3, #31
 8018f22:	d40b      	bmi.n	8018f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018f24:	4620      	mov	r0, r4
 8018f26:	f007 ff3a 	bl	8020d9e <__cxa_guard_acquire>
 8018f2a:	b138      	cbz	r0, 8018f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018f2c:	4620      	mov	r0, r4
 8018f2e:	f007 ff42 	bl	8020db6 <__cxa_guard_release>
 8018f32:	4a0f      	ldr	r2, [pc, #60]	; (8018f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018f34:	490f      	ldr	r1, [pc, #60]	; (8018f74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018f36:	4810      	ldr	r0, [pc, #64]	; (8018f78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018f38:	f007 ff2a 	bl	8020d90 <__aeabi_atexit>
 8018f3c:	4c0f      	ldr	r4, [pc, #60]	; (8018f7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8018f3e:	7823      	ldrb	r3, [r4, #0]
 8018f40:	f3bf 8f5b 	dmb	ish
 8018f44:	07db      	lsls	r3, r3, #31
 8018f46:	d40b      	bmi.n	8018f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f48:	4620      	mov	r0, r4
 8018f4a:	f007 ff28 	bl	8020d9e <__cxa_guard_acquire>
 8018f4e:	b138      	cbz	r0, 8018f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f50:	4620      	mov	r0, r4
 8018f52:	f007 ff30 	bl	8020db6 <__cxa_guard_release>
 8018f56:	4a06      	ldr	r2, [pc, #24]	; (8018f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018f58:	4909      	ldr	r1, [pc, #36]	; (8018f80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018f5a:	480a      	ldr	r0, [pc, #40]	; (8018f84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f5c:	f007 ff18 	bl	8020d90 <__aeabi_atexit>
 8018f60:	4b05      	ldr	r3, [pc, #20]	; (8018f78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018f62:	65ab      	str	r3, [r5, #88]	; 0x58
 8018f64:	4b07      	ldr	r3, [pc, #28]	; (8018f84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f66:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018f68:	bd38      	pop	{r3, r4, r5, pc}
 8018f6a:	bf00      	nop
 8018f6c:	2400e4d4 	.word	0x2400e4d4
 8018f70:	24000000 	.word	0x24000000
 8018f74:	0801577f 	.word	0x0801577f
 8018f78:	2400009c 	.word	0x2400009c
 8018f7c:	2400e4d8 	.word	0x2400e4d8
 8018f80:	0801577d 	.word	0x0801577d
 8018f84:	240000a0 	.word	0x240000a0

08018f88 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018f88:	b510      	push	{r4, lr}
 8018f8a:	4604      	mov	r4, r0
 8018f8c:	f7ff ff88 	bl	8018ea0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018f90:	4620      	mov	r0, r4
 8018f92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f96:	f7ff bfbd 	b.w	8018f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08018f9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8018f9c:	b538      	push	{r3, r4, r5, lr}
 8018f9e:	4c15      	ldr	r4, [pc, #84]	; (8018ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018fa0:	4605      	mov	r5, r0
 8018fa2:	7823      	ldrb	r3, [r4, #0]
 8018fa4:	f3bf 8f5b 	dmb	ish
 8018fa8:	07da      	lsls	r2, r3, #31
 8018faa:	d40b      	bmi.n	8018fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018fac:	4620      	mov	r0, r4
 8018fae:	f007 fef6 	bl	8020d9e <__cxa_guard_acquire>
 8018fb2:	b138      	cbz	r0, 8018fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018fb4:	4620      	mov	r0, r4
 8018fb6:	f007 fefe 	bl	8020db6 <__cxa_guard_release>
 8018fba:	4a0f      	ldr	r2, [pc, #60]	; (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018fbc:	490f      	ldr	r1, [pc, #60]	; (8018ffc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8018fbe:	4810      	ldr	r0, [pc, #64]	; (8019000 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018fc0:	f007 fee6 	bl	8020d90 <__aeabi_atexit>
 8018fc4:	4c0f      	ldr	r4, [pc, #60]	; (8019004 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018fc6:	7823      	ldrb	r3, [r4, #0]
 8018fc8:	f3bf 8f5b 	dmb	ish
 8018fcc:	07db      	lsls	r3, r3, #31
 8018fce:	d40b      	bmi.n	8018fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018fd0:	4620      	mov	r0, r4
 8018fd2:	f007 fee4 	bl	8020d9e <__cxa_guard_acquire>
 8018fd6:	b138      	cbz	r0, 8018fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018fd8:	4620      	mov	r0, r4
 8018fda:	f007 feec 	bl	8020db6 <__cxa_guard_release>
 8018fde:	4a06      	ldr	r2, [pc, #24]	; (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018fe0:	4909      	ldr	r1, [pc, #36]	; (8019008 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018fe2:	480a      	ldr	r0, [pc, #40]	; (801900c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fe4:	f007 fed4 	bl	8020d90 <__aeabi_atexit>
 8018fe8:	4b05      	ldr	r3, [pc, #20]	; (8019000 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018fea:	672b      	str	r3, [r5, #112]	; 0x70
 8018fec:	4b07      	ldr	r3, [pc, #28]	; (801900c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fee:	676b      	str	r3, [r5, #116]	; 0x74
 8018ff0:	bd38      	pop	{r3, r4, r5, pc}
 8018ff2:	bf00      	nop
 8018ff4:	2400e4cc 	.word	0x2400e4cc
 8018ff8:	24000000 	.word	0x24000000
 8018ffc:	08015773 	.word	0x08015773
 8019000:	24000094 	.word	0x24000094
 8019004:	2400e4d0 	.word	0x2400e4d0
 8019008:	08015771 	.word	0x08015771
 801900c:	24000098 	.word	0x24000098

08019010 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019010:	b538      	push	{r3, r4, r5, lr}
 8019012:	4c15      	ldr	r4, [pc, #84]	; (8019068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019014:	4605      	mov	r5, r0
 8019016:	7823      	ldrb	r3, [r4, #0]
 8019018:	f3bf 8f5b 	dmb	ish
 801901c:	07da      	lsls	r2, r3, #31
 801901e:	d40b      	bmi.n	8019038 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019020:	4620      	mov	r0, r4
 8019022:	f007 febc 	bl	8020d9e <__cxa_guard_acquire>
 8019026:	b138      	cbz	r0, 8019038 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019028:	4620      	mov	r0, r4
 801902a:	f007 fec4 	bl	8020db6 <__cxa_guard_release>
 801902e:	4a0f      	ldr	r2, [pc, #60]	; (801906c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019030:	490f      	ldr	r1, [pc, #60]	; (8019070 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019032:	4810      	ldr	r0, [pc, #64]	; (8019074 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019034:	f007 feac 	bl	8020d90 <__aeabi_atexit>
 8019038:	4c0f      	ldr	r4, [pc, #60]	; (8019078 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801903a:	7823      	ldrb	r3, [r4, #0]
 801903c:	f3bf 8f5b 	dmb	ish
 8019040:	07db      	lsls	r3, r3, #31
 8019042:	d40b      	bmi.n	801905c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019044:	4620      	mov	r0, r4
 8019046:	f007 feaa 	bl	8020d9e <__cxa_guard_acquire>
 801904a:	b138      	cbz	r0, 801905c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801904c:	4620      	mov	r0, r4
 801904e:	f007 feb2 	bl	8020db6 <__cxa_guard_release>
 8019052:	4a06      	ldr	r2, [pc, #24]	; (801906c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019054:	4909      	ldr	r1, [pc, #36]	; (801907c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019056:	480a      	ldr	r0, [pc, #40]	; (8019080 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019058:	f007 fe9a 	bl	8020d90 <__aeabi_atexit>
 801905c:	4b05      	ldr	r3, [pc, #20]	; (8019074 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801905e:	66ab      	str	r3, [r5, #104]	; 0x68
 8019060:	4b07      	ldr	r3, [pc, #28]	; (8019080 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019062:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019064:	bd38      	pop	{r3, r4, r5, pc}
 8019066:	bf00      	nop
 8019068:	2400e4c4 	.word	0x2400e4c4
 801906c:	24000000 	.word	0x24000000
 8019070:	08015777 	.word	0x08015777
 8019074:	2400008c 	.word	0x2400008c
 8019078:	2400e4c8 	.word	0x2400e4c8
 801907c:	08015775 	.word	0x08015775
 8019080:	24000090 	.word	0x24000090

08019084 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019084:	b510      	push	{r4, lr}
 8019086:	4604      	mov	r4, r0
 8019088:	f7ff ff88 	bl	8018f9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801908c:	4620      	mov	r0, r4
 801908e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019092:	f7ff bfbd 	b.w	8019010 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019096 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019096:	b510      	push	{r4, lr}
 8019098:	4604      	mov	r4, r0
 801909a:	f7ff fff3 	bl	8019084 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801909e:	4620      	mov	r0, r4
 80190a0:	f7ff ff72 	bl	8018f88 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80190a4:	4620      	mov	r0, r4
 80190a6:	f7ff fdf9 	bl	8018c9c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80190aa:	4620      	mov	r0, r4
 80190ac:	f7ff fcfa 	bl	8018aa4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80190b0:	4620      	mov	r0, r4
 80190b2:	f7ff fd75 	bl	8018ba0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80190b6:	4620      	mov	r0, r4
 80190b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190bc:	f7ff bee0 	b.w	8018e80 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080190c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80190c0:	b538      	push	{r3, r4, r5, lr}
 80190c2:	4c0b      	ldr	r4, [pc, #44]	; (80190f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80190c4:	4605      	mov	r5, r0
 80190c6:	7823      	ldrb	r3, [r4, #0]
 80190c8:	f3bf 8f5b 	dmb	ish
 80190cc:	07db      	lsls	r3, r3, #31
 80190ce:	d40b      	bmi.n	80190e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80190d0:	4620      	mov	r0, r4
 80190d2:	f007 fe64 	bl	8020d9e <__cxa_guard_acquire>
 80190d6:	b138      	cbz	r0, 80190e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80190d8:	4620      	mov	r0, r4
 80190da:	f007 fe6c 	bl	8020db6 <__cxa_guard_release>
 80190de:	4a05      	ldr	r2, [pc, #20]	; (80190f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80190e0:	4905      	ldr	r1, [pc, #20]	; (80190f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80190e2:	4806      	ldr	r0, [pc, #24]	; (80190fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80190e4:	f007 fe54 	bl	8020d90 <__aeabi_atexit>
 80190e8:	4b04      	ldr	r3, [pc, #16]	; (80190fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80190ea:	67ab      	str	r3, [r5, #120]	; 0x78
 80190ec:	bd38      	pop	{r3, r4, r5, pc}
 80190ee:	bf00      	nop
 80190f0:	2400e4b8 	.word	0x2400e4b8
 80190f4:	24000000 	.word	0x24000000
 80190f8:	0801576f 	.word	0x0801576f
 80190fc:	24000084 	.word	0x24000084

08019100 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019100:	b538      	push	{r3, r4, r5, lr}
 8019102:	4c0b      	ldr	r4, [pc, #44]	; (8019130 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019104:	4605      	mov	r5, r0
 8019106:	7823      	ldrb	r3, [r4, #0]
 8019108:	f3bf 8f5b 	dmb	ish
 801910c:	07db      	lsls	r3, r3, #31
 801910e:	d40b      	bmi.n	8019128 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019110:	4620      	mov	r0, r4
 8019112:	f007 fe44 	bl	8020d9e <__cxa_guard_acquire>
 8019116:	b138      	cbz	r0, 8019128 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019118:	4620      	mov	r0, r4
 801911a:	f007 fe4c 	bl	8020db6 <__cxa_guard_release>
 801911e:	4a05      	ldr	r2, [pc, #20]	; (8019134 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8019120:	4905      	ldr	r1, [pc, #20]	; (8019138 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8019122:	4806      	ldr	r0, [pc, #24]	; (801913c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019124:	f007 fe34 	bl	8020d90 <__aeabi_atexit>
 8019128:	4b04      	ldr	r3, [pc, #16]	; (801913c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801912a:	67eb      	str	r3, [r5, #124]	; 0x7c
 801912c:	bd38      	pop	{r3, r4, r5, pc}
 801912e:	bf00      	nop
 8019130:	2400e4bc 	.word	0x2400e4bc
 8019134:	24000000 	.word	0x24000000
 8019138:	0801576d 	.word	0x0801576d
 801913c:	24000088 	.word	0x24000088

08019140 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8019140:	b570      	push	{r4, r5, r6, lr}
 8019142:	4d0d      	ldr	r5, [pc, #52]	; (8019178 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8019144:	4606      	mov	r6, r0
 8019146:	4c0d      	ldr	r4, [pc, #52]	; (801917c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8019148:	782b      	ldrb	r3, [r5, #0]
 801914a:	f3bf 8f5b 	dmb	ish
 801914e:	f013 0f01 	tst.w	r3, #1
 8019152:	d10d      	bne.n	8019170 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019154:	4628      	mov	r0, r5
 8019156:	f007 fe22 	bl	8020d9e <__cxa_guard_acquire>
 801915a:	b148      	cbz	r0, 8019170 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801915c:	4b08      	ldr	r3, [pc, #32]	; (8019180 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801915e:	4628      	mov	r0, r5
 8019160:	6023      	str	r3, [r4, #0]
 8019162:	f007 fe28 	bl	8020db6 <__cxa_guard_release>
 8019166:	4a07      	ldr	r2, [pc, #28]	; (8019184 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8019168:	4620      	mov	r0, r4
 801916a:	4907      	ldr	r1, [pc, #28]	; (8019188 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801916c:	f007 fe10 	bl	8020d90 <__aeabi_atexit>
 8019170:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 8019174:	bd70      	pop	{r4, r5, r6, pc}
 8019176:	bf00      	nop
 8019178:	2400e4c0 	.word	0x2400e4c0
 801917c:	2400e534 	.word	0x2400e534
 8019180:	08023a30 	.word	0x08023a30
 8019184:	24000000 	.word	0x24000000
 8019188:	0801576b 	.word	0x0801576b

0801918c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801918c:	b510      	push	{r4, lr}
 801918e:	4604      	mov	r4, r0
 8019190:	f7ff ff96 	bl	80190c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019194:	4620      	mov	r0, r4
 8019196:	f7ff ffb3 	bl	8019100 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801919a:	4620      	mov	r0, r4
 801919c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80191a0:	f7ff bfce 	b.w	8019140 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080191a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80191a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191a8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80191ac:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80191b0:	2d00      	cmp	r5, #0
 80191b2:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80191b6:	fb05 4c0e 	mla	ip, r5, lr, r4
 80191ba:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80191be:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80191c2:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80191c6:	eb02 0a0c 	add.w	sl, r2, ip
 80191ca:	8808      	ldrh	r0, [r1, #0]
 80191cc:	f2c0 80b0 	blt.w	8019330 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80191d0:	45ab      	cmp	fp, r5
 80191d2:	f340 80ad 	ble.w	8019330 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80191d6:	2c00      	cmp	r4, #0
 80191d8:	f2c0 80a8 	blt.w	801932c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80191dc:	45a6      	cmp	lr, r4
 80191de:	f340 80a5 	ble.w	801932c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80191e2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80191e6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80191ea:	1c62      	adds	r2, r4, #1
 80191ec:	f100 80a3 	bmi.w	8019336 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80191f0:	4596      	cmp	lr, r2
 80191f2:	f340 80a0 	ble.w	8019336 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80191f6:	f1b9 0f00 	cmp.w	r9, #0
 80191fa:	f000 809c 	beq.w	8019336 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80191fe:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019202:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019206:	3501      	adds	r5, #1
 8019208:	f100 8099 	bmi.w	801933e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801920c:	45ab      	cmp	fp, r5
 801920e:	f340 8096 	ble.w	801933e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019212:	2f00      	cmp	r7, #0
 8019214:	f000 8093 	beq.w	801933e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019218:	2c00      	cmp	r4, #0
 801921a:	f2c0 808e 	blt.w	801933a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801921e:	45a6      	cmp	lr, r4
 8019220:	f340 808b 	ble.w	801933a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019224:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019228:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801922c:	3401      	adds	r4, #1
 801922e:	f100 8089 	bmi.w	8019344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019232:	45a6      	cmp	lr, r4
 8019234:	f340 8086 	ble.w	8019344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019238:	f1b9 0f00 	cmp.w	r9, #0
 801923c:	f000 8082 	beq.w	8019344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019240:	44d6      	add	lr, sl
 8019242:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019246:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801924a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801924e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019252:	fb19 fe07 	smulbb	lr, r9, r7
 8019256:	f1c7 0210 	rsb	r2, r7, #16
 801925a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801925e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019262:	eba2 0209 	sub.w	r2, r2, r9
 8019266:	ea44 0808 	orr.w	r8, r4, r8
 801926a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801926e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019272:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019276:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801927a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801927e:	ea44 0c0c 	orr.w	ip, r4, ip
 8019282:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019286:	fb04 f40c 	mul.w	r4, r4, ip
 801928a:	fb02 4808 	mla	r8, r2, r8, r4
 801928e:	041a      	lsls	r2, r3, #16
 8019290:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019294:	b2b4      	uxth	r4, r6
 8019296:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801929a:	43f6      	mvns	r6, r6
 801929c:	4313      	orrs	r3, r2
 801929e:	042a      	lsls	r2, r5, #16
 80192a0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80192a4:	b2f6      	uxtb	r6, r6
 80192a6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80192aa:	fb0e 8303 	mla	r3, lr, r3, r8
 80192ae:	432a      	orrs	r2, r5
 80192b0:	fb07 3202 	mla	r2, r7, r2, r3
 80192b4:	10c7      	asrs	r7, r0, #3
 80192b6:	0d53      	lsrs	r3, r2, #21
 80192b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80192bc:	0952      	lsrs	r2, r2, #5
 80192be:	fb17 f706 	smulbb	r7, r7, r6
 80192c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80192c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80192ca:	431a      	orrs	r2, r3
 80192cc:	b293      	uxth	r3, r2
 80192ce:	1202      	asrs	r2, r0, #8
 80192d0:	121d      	asrs	r5, r3, #8
 80192d2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80192d6:	00c0      	lsls	r0, r0, #3
 80192d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80192dc:	fb12 f206 	smulbb	r2, r2, r6
 80192e0:	b2c0      	uxtb	r0, r0
 80192e2:	fb05 2504 	mla	r5, r5, r4, r2
 80192e6:	10da      	asrs	r2, r3, #3
 80192e8:	fb10 f006 	smulbb	r0, r0, r6
 80192ec:	00db      	lsls	r3, r3, #3
 80192ee:	b2ad      	uxth	r5, r5
 80192f0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80192f4:	b2db      	uxtb	r3, r3
 80192f6:	fb02 7204 	mla	r2, r2, r4, r7
 80192fa:	fb03 0004 	mla	r0, r3, r4, r0
 80192fe:	1c6b      	adds	r3, r5, #1
 8019300:	b292      	uxth	r2, r2
 8019302:	b280      	uxth	r0, r0
 8019304:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019308:	1c43      	adds	r3, r0, #1
 801930a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801930e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019312:	1c50      	adds	r0, r2, #1
 8019314:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019318:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801931c:	0952      	lsrs	r2, r2, #5
 801931e:	432b      	orrs	r3, r5
 8019320:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019324:	4313      	orrs	r3, r2
 8019326:	800b      	strh	r3, [r1, #0]
 8019328:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801932c:	4680      	mov	r8, r0
 801932e:	e75c      	b.n	80191ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019330:	4684      	mov	ip, r0
 8019332:	4680      	mov	r8, r0
 8019334:	e767      	b.n	8019206 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019336:	4684      	mov	ip, r0
 8019338:	e765      	b.n	8019206 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801933a:	4605      	mov	r5, r0
 801933c:	e776      	b.n	801922c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801933e:	4603      	mov	r3, r0
 8019340:	4605      	mov	r5, r0
 8019342:	e782      	b.n	801924a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019344:	4603      	mov	r3, r0
 8019346:	e780      	b.n	801924a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019348 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801934c:	b099      	sub	sp, #100	; 0x64
 801934e:	9215      	str	r2, [sp, #84]	; 0x54
 8019350:	9309      	str	r3, [sp, #36]	; 0x24
 8019352:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019354:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8019358:	9016      	str	r0, [sp, #88]	; 0x58
 801935a:	930d      	str	r3, [sp, #52]	; 0x34
 801935c:	6850      	ldr	r0, [r2, #4]
 801935e:	910c      	str	r1, [sp, #48]	; 0x30
 8019360:	6812      	ldr	r2, [r2, #0]
 8019362:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019366:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801936a:	fb00 1303 	mla	r3, r0, r3, r1
 801936e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019372:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019374:	681b      	ldr	r3, [r3, #0]
 8019376:	930b      	str	r3, [sp, #44]	; 0x2c
 8019378:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801937a:	685e      	ldr	r6, [r3, #4]
 801937c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801937e:	3604      	adds	r6, #4
 8019380:	43db      	mvns	r3, r3
 8019382:	b2db      	uxtb	r3, r3
 8019384:	930a      	str	r3, [sp, #40]	; 0x28
 8019386:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019388:	2b00      	cmp	r3, #0
 801938a:	dc03      	bgt.n	8019394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801938c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801938e:	2b00      	cmp	r3, #0
 8019390:	f340 8225 	ble.w	80197de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019394:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019396:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801939a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801939e:	1e48      	subs	r0, r1, #1
 80193a0:	1e57      	subs	r7, r2, #1
 80193a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193a4:	2b00      	cmp	r3, #0
 80193a6:	f340 80e3 	ble.w	8019570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80193aa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80193ae:	ea4f 4325 	mov.w	r3, r5, asr #16
 80193b2:	d406      	bmi.n	80193c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80193b4:	4584      	cmp	ip, r0
 80193b6:	da04      	bge.n	80193c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80193b8:	2b00      	cmp	r3, #0
 80193ba:	db02      	blt.n	80193c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80193bc:	42bb      	cmp	r3, r7
 80193be:	f2c0 80d8 	blt.w	8019572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80193c2:	f11c 0c01 	adds.w	ip, ip, #1
 80193c6:	f100 80c9 	bmi.w	801955c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80193ca:	4561      	cmp	r1, ip
 80193cc:	f2c0 80c6 	blt.w	801955c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80193d0:	3301      	adds	r3, #1
 80193d2:	f100 80c3 	bmi.w	801955c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80193d6:	429a      	cmp	r2, r3
 80193d8:	f2c0 80c0 	blt.w	801955c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80193dc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80193e0:	4647      	mov	r7, r8
 80193e2:	f1bb 0f00 	cmp.w	fp, #0
 80193e6:	f340 80e3 	ble.w	80195b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80193ea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80193ec:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80193f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80193f2:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80193f6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80193fa:	ea5f 422a 	movs.w	r2, sl, asr #16
 80193fe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019402:	689b      	ldr	r3, [r3, #8]
 8019404:	f100 8121 	bmi.w	801964a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019408:	f103 39ff 	add.w	r9, r3, #4294967295
 801940c:	454a      	cmp	r2, r9
 801940e:	f280 811c 	bge.w	801964a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019412:	f1bc 0f00 	cmp.w	ip, #0
 8019416:	f2c0 8118 	blt.w	801964a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801941a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801941e:	45cc      	cmp	ip, r9
 8019420:	f280 8113 	bge.w	801964a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019424:	b21b      	sxth	r3, r3
 8019426:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019428:	fb0c 2203 	mla	r2, ip, r3, r2
 801942c:	eb04 0902 	add.w	r9, r4, r2
 8019430:	5ca2      	ldrb	r2, [r4, r2]
 8019432:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019436:	2800      	cmp	r0, #0
 8019438:	f000 80fe 	beq.w	8019638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801943c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019440:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019444:	9211      	str	r2, [sp, #68]	; 0x44
 8019446:	b151      	cbz	r1, 801945e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019448:	eb09 0203 	add.w	r2, r9, r3
 801944c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019450:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019454:	930f      	str	r3, [sp, #60]	; 0x3c
 8019456:	7853      	ldrb	r3, [r2, #1]
 8019458:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801945c:	9312      	str	r3, [sp, #72]	; 0x48
 801945e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019460:	fb10 f201 	smulbb	r2, r0, r1
 8019464:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019466:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801946a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801946e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8019472:	10d2      	asrs	r2, r2, #3
 8019474:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019478:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801947c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019480:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019482:	041b      	lsls	r3, r3, #16
 8019484:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019488:	4323      	orrs	r3, r4
 801948a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801948c:	4353      	muls	r3, r2
 801948e:	fb09 330c 	mla	r3, r9, ip, r3
 8019492:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019496:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801949a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801949e:	ea4c 0e0e 	orr.w	lr, ip, lr
 80194a2:	f1c1 0c10 	rsb	ip, r1, #16
 80194a6:	ebac 0c00 	sub.w	ip, ip, r0
 80194aa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80194ae:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80194b2:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80194b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80194b8:	0418      	lsls	r0, r3, #16
 80194ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80194be:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80194c2:	4318      	orrs	r0, r3
 80194c4:	fb02 c200 	mla	r2, r2, r0, ip
 80194c8:	8838      	ldrh	r0, [r7, #0]
 80194ca:	0d53      	lsrs	r3, r2, #21
 80194cc:	0952      	lsrs	r2, r2, #5
 80194ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194d2:	1201      	asrs	r1, r0, #8
 80194d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80194d8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80194dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80194e0:	00c0      	lsls	r0, r0, #3
 80194e2:	431a      	orrs	r2, r3
 80194e4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80194e8:	fb11 f104 	smulbb	r1, r1, r4
 80194ec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80194f0:	b292      	uxth	r2, r2
 80194f2:	fb1e fe04 	smulbb	lr, lr, r4
 80194f6:	b2c0      	uxtb	r0, r0
 80194f8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80194fc:	fb10 f004 	smulbb	r0, r0, r4
 8019500:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019504:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019508:	10d1      	asrs	r1, r2, #3
 801950a:	00d2      	lsls	r2, r2, #3
 801950c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019510:	fa1f fc8c 	uxth.w	ip, ip
 8019514:	b2d2      	uxtb	r2, r2
 8019516:	fb01 e103 	mla	r1, r1, r3, lr
 801951a:	fb02 0303 	mla	r3, r2, r3, r0
 801951e:	b289      	uxth	r1, r1
 8019520:	b29a      	uxth	r2, r3
 8019522:	f10c 0301 	add.w	r3, ip, #1
 8019526:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801952a:	1c53      	adds	r3, r2, #1
 801952c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019530:	1c4a      	adds	r2, r1, #1
 8019532:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019536:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801953a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801953e:	0949      	lsrs	r1, r1, #5
 8019540:	ea43 030c 	orr.w	r3, r3, ip
 8019544:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019548:	430b      	orrs	r3, r1
 801954a:	803b      	strh	r3, [r7, #0]
 801954c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801954e:	3702      	adds	r7, #2
 8019550:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019554:	449a      	add	sl, r3
 8019556:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019558:	441d      	add	r5, r3
 801955a:	e742      	b.n	80193e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801955c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801955e:	f108 0802 	add.w	r8, r8, #2
 8019562:	449a      	add	sl, r3
 8019564:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019566:	441d      	add	r5, r3
 8019568:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801956a:	3b01      	subs	r3, #1
 801956c:	9309      	str	r3, [sp, #36]	; 0x24
 801956e:	e718      	b.n	80193a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019570:	d023      	beq.n	80195ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019572:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019574:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019576:	3b01      	subs	r3, #1
 8019578:	fb00 a003 	mla	r0, r0, r3, sl
 801957c:	1400      	asrs	r0, r0, #16
 801957e:	f53f af2d 	bmi.w	80193dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019582:	3901      	subs	r1, #1
 8019584:	4288      	cmp	r0, r1
 8019586:	f6bf af29 	bge.w	80193dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801958a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801958c:	fb01 5303 	mla	r3, r1, r3, r5
 8019590:	141b      	asrs	r3, r3, #16
 8019592:	f53f af23 	bmi.w	80193dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019596:	3a01      	subs	r2, #1
 8019598:	4293      	cmp	r3, r2
 801959a:	f6bf af1f 	bge.w	80193dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801959e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80195a2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80195a6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80195aa:	f1be 0f00 	cmp.w	lr, #0
 80195ae:	dc6c      	bgt.n	801968a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80195b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195b2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80195b6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80195ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80195bc:	2b00      	cmp	r3, #0
 80195be:	f340 810e 	ble.w	80197de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80195c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80195c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80195c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80195cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80195d0:	eef0 6a62 	vmov.f32	s13, s5
 80195d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80195d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195e0:	ee16 aa90 	vmov	sl, s13
 80195e4:	eef0 6a43 	vmov.f32	s13, s6
 80195e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195ec:	ee16 5a90 	vmov	r5, s13
 80195f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019600:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019604:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019608:	ee12 2a90 	vmov	r2, s5
 801960c:	eef0 2a47 	vmov.f32	s5, s14
 8019610:	fb92 f3f3 	sdiv	r3, r2, r3
 8019614:	ee13 2a10 	vmov	r2, s6
 8019618:	9325      	str	r3, [sp, #148]	; 0x94
 801961a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801961c:	eeb0 3a67 	vmov.f32	s6, s15
 8019620:	fb92 f3f3 	sdiv	r3, r2, r3
 8019624:	9326      	str	r3, [sp, #152]	; 0x98
 8019626:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019628:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801962a:	3b01      	subs	r3, #1
 801962c:	930c      	str	r3, [sp, #48]	; 0x30
 801962e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019630:	bf08      	it	eq
 8019632:	4613      	moveq	r3, r2
 8019634:	9309      	str	r3, [sp, #36]	; 0x24
 8019636:	e6a6      	b.n	8019386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019638:	2900      	cmp	r1, #0
 801963a:	f43f af10 	beq.w	801945e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801963e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019642:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019646:	930f      	str	r3, [sp, #60]	; 0x3c
 8019648:	e709      	b.n	801945e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801964a:	f112 0901 	adds.w	r9, r2, #1
 801964e:	f53f af7d 	bmi.w	801954c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019652:	454b      	cmp	r3, r9
 8019654:	f6ff af7a 	blt.w	801954c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019658:	f11c 0901 	adds.w	r9, ip, #1
 801965c:	f53f af76 	bmi.w	801954c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019660:	45ce      	cmp	lr, r9
 8019662:	f6ff af73 	blt.w	801954c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019666:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019668:	b21b      	sxth	r3, r3
 801966a:	9202      	str	r2, [sp, #8]
 801966c:	fa0f f28e 	sxth.w	r2, lr
 8019670:	9300      	str	r3, [sp, #0]
 8019672:	4633      	mov	r3, r6
 8019674:	9201      	str	r2, [sp, #4]
 8019676:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019678:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801967c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019680:	4639      	mov	r1, r7
 8019682:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019684:	f7ff fd8e 	bl	80191a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019688:	e760      	b.n	801954c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801968a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801968c:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019690:	1429      	asrs	r1, r5, #16
 8019692:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019694:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019698:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801969c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80196a0:	fb03 2101 	mla	r1, r3, r1, r2
 80196a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80196a6:	440a      	add	r2, r1
 80196a8:	5c61      	ldrb	r1, [r4, r1]
 80196aa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80196ae:	f1bc 0f00 	cmp.w	ip, #0
 80196b2:	f000 808c 	beq.w	80197ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80196b6:	7857      	ldrb	r7, [r2, #1]
 80196b8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80196bc:	9413      	str	r4, [sp, #76]	; 0x4c
 80196be:	b140      	cbz	r0, 80196d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80196c0:	18d7      	adds	r7, r2, r3
 80196c2:	5cd3      	ldrb	r3, [r2, r3]
 80196c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80196c8:	9310      	str	r3, [sp, #64]	; 0x40
 80196ca:	787b      	ldrb	r3, [r7, #1]
 80196cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80196d0:	9314      	str	r3, [sp, #80]	; 0x50
 80196d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80196d4:	fb1c f200 	smulbb	r2, ip, r0
 80196d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80196da:	f10e 3eff 	add.w	lr, lr, #4294967295
 80196de:	041f      	lsls	r7, r3, #16
 80196e0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80196e4:	10d2      	asrs	r2, r2, #3
 80196e6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80196ea:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80196ee:	431f      	orrs	r7, r3
 80196f0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80196f4:	9317      	str	r3, [sp, #92]	; 0x5c
 80196f6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80196f8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80196fa:	041b      	lsls	r3, r3, #16
 80196fc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019700:	ea43 030b 	orr.w	r3, r3, fp
 8019704:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019708:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801970c:	4353      	muls	r3, r2
 801970e:	fb04 3707 	mla	r7, r4, r7, r3
 8019712:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019716:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019718:	ea43 0b01 	orr.w	fp, r3, r1
 801971c:	f1c0 0110 	rsb	r1, r0, #16
 8019720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019722:	eba1 0c0c 	sub.w	ip, r1, ip
 8019726:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801972a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801972e:	fb0c 770b 	mla	r7, ip, fp, r7
 8019732:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019736:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801973a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801973e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019742:	fb02 770c 	mla	r7, r2, ip, r7
 8019746:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019748:	0d79      	lsrs	r1, r7, #21
 801974a:	8812      	ldrh	r2, [r2, #0]
 801974c:	097f      	lsrs	r7, r7, #5
 801974e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019752:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019756:	430f      	orrs	r7, r1
 8019758:	1211      	asrs	r1, r2, #8
 801975a:	b2bb      	uxth	r3, r7
 801975c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019760:	10d7      	asrs	r7, r2, #3
 8019762:	fb11 f104 	smulbb	r1, r1, r4
 8019766:	1218      	asrs	r0, r3, #8
 8019768:	00d2      	lsls	r2, r2, #3
 801976a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801976e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019772:	fb17 f704 	smulbb	r7, r7, r4
 8019776:	b2d2      	uxtb	r2, r2
 8019778:	fb00 1009 	mla	r0, r0, r9, r1
 801977c:	10d9      	asrs	r1, r3, #3
 801977e:	fb12 f204 	smulbb	r2, r2, r4
 8019782:	00db      	lsls	r3, r3, #3
 8019784:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019788:	b280      	uxth	r0, r0
 801978a:	b2db      	uxtb	r3, r3
 801978c:	fb01 7109 	mla	r1, r1, r9, r7
 8019790:	fb03 2309 	mla	r3, r3, r9, r2
 8019794:	1c42      	adds	r2, r0, #1
 8019796:	b289      	uxth	r1, r1
 8019798:	b29b      	uxth	r3, r3
 801979a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801979e:	1c4f      	adds	r7, r1, #1
 80197a0:	1c5a      	adds	r2, r3, #1
 80197a2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80197a6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80197aa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80197ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197b0:	0949      	lsrs	r1, r1, #5
 80197b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80197b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80197ba:	4310      	orrs	r0, r2
 80197bc:	4308      	orrs	r0, r1
 80197be:	f823 0b02 	strh.w	r0, [r3], #2
 80197c2:	930e      	str	r3, [sp, #56]	; 0x38
 80197c4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80197c6:	449a      	add	sl, r3
 80197c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80197ca:	441d      	add	r5, r3
 80197cc:	e6ed      	b.n	80195aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80197ce:	2800      	cmp	r0, #0
 80197d0:	f43f af7f 	beq.w	80196d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80197d4:	5cd3      	ldrb	r3, [r2, r3]
 80197d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80197da:	9310      	str	r3, [sp, #64]	; 0x40
 80197dc:	e779      	b.n	80196d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80197de:	b019      	add	sp, #100	; 0x64
 80197e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080197e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80197e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80197e8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80197ec:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80197f0:	f1b8 0f00 	cmp.w	r8, #0
 80197f4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80197f8:	fb08 470e 	mla	r7, r8, lr, r4
 80197fc:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019800:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019804:	eb02 0907 	add.w	r9, r2, r7
 8019808:	8808      	ldrh	r0, [r1, #0]
 801980a:	db67      	blt.n	80198dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801980c:	45c2      	cmp	sl, r8
 801980e:	dd65      	ble.n	80198dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019810:	2c00      	cmp	r4, #0
 8019812:	db61      	blt.n	80198d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019814:	45a6      	cmp	lr, r4
 8019816:	dd5f      	ble.n	80198d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019818:	5dd2      	ldrb	r2, [r2, r7]
 801981a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801981e:	1c62      	adds	r2, r4, #1
 8019820:	d45f      	bmi.n	80198e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019822:	4596      	cmp	lr, r2
 8019824:	dd5d      	ble.n	80198e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019826:	2d00      	cmp	r5, #0
 8019828:	d05b      	beq.n	80198e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801982a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801982e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019832:	f118 0801 	adds.w	r8, r8, #1
 8019836:	d458      	bmi.n	80198ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019838:	45c2      	cmp	sl, r8
 801983a:	dd56      	ble.n	80198ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801983c:	2e00      	cmp	r6, #0
 801983e:	d054      	beq.n	80198ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019840:	2c00      	cmp	r4, #0
 8019842:	db50      	blt.n	80198e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019844:	45a6      	cmp	lr, r4
 8019846:	dd4e      	ble.n	80198e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019848:	f819 200e 	ldrb.w	r2, [r9, lr]
 801984c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019850:	3401      	adds	r4, #1
 8019852:	d407      	bmi.n	8019864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019854:	45a6      	cmp	lr, r4
 8019856:	dd05      	ble.n	8019864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019858:	b125      	cbz	r5, 8019864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801985a:	44ce      	add	lr, r9
 801985c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019860:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019864:	fb15 f406 	smulbb	r4, r5, r6
 8019868:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801986c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019870:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019874:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019878:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801987c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019880:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019884:	ea43 0c0c 	orr.w	ip, r3, ip
 8019888:	f1c6 0310 	rsb	r3, r6, #16
 801988c:	ea4e 0707 	orr.w	r7, lr, r7
 8019890:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019894:	1b5b      	subs	r3, r3, r5
 8019896:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801989a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801989e:	437d      	muls	r5, r7
 80198a0:	fb03 5c0c 	mla	ip, r3, ip, r5
 80198a4:	0403      	lsls	r3, r0, #16
 80198a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80198aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80198ae:	4318      	orrs	r0, r3
 80198b0:	0413      	lsls	r3, r2, #16
 80198b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80198b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80198ba:	fb04 c000 	mla	r0, r4, r0, ip
 80198be:	4313      	orrs	r3, r2
 80198c0:	fb06 0003 	mla	r0, r6, r3, r0
 80198c4:	0d43      	lsrs	r3, r0, #21
 80198c6:	0940      	lsrs	r0, r0, #5
 80198c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80198cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80198d0:	4318      	orrs	r0, r3
 80198d2:	8008      	strh	r0, [r1, #0]
 80198d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80198d8:	4684      	mov	ip, r0
 80198da:	e7a0      	b.n	801981e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80198dc:	4607      	mov	r7, r0
 80198de:	4684      	mov	ip, r0
 80198e0:	e7a7      	b.n	8019832 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80198e2:	4607      	mov	r7, r0
 80198e4:	e7a5      	b.n	8019832 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80198e6:	4602      	mov	r2, r0
 80198e8:	e7b2      	b.n	8019850 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80198ea:	4602      	mov	r2, r0
 80198ec:	e7ba      	b.n	8019864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080198ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198f2:	b093      	sub	sp, #76	; 0x4c
 80198f4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80198f8:	920f      	str	r2, [sp, #60]	; 0x3c
 80198fa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80198fc:	9010      	str	r0, [sp, #64]	; 0x40
 80198fe:	9108      	str	r1, [sp, #32]
 8019900:	6850      	ldr	r0, [r2, #4]
 8019902:	9306      	str	r3, [sp, #24]
 8019904:	6812      	ldr	r2, [r2, #0]
 8019906:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801990a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801990e:	fb00 1303 	mla	r3, r0, r3, r1
 8019912:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019916:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019918:	681b      	ldr	r3, [r3, #0]
 801991a:	9307      	str	r3, [sp, #28]
 801991c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801991e:	685f      	ldr	r7, [r3, #4]
 8019920:	3704      	adds	r7, #4
 8019922:	9b08      	ldr	r3, [sp, #32]
 8019924:	2b00      	cmp	r3, #0
 8019926:	dc03      	bgt.n	8019930 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019928:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801992a:	2b00      	cmp	r3, #0
 801992c:	f340 81b2 	ble.w	8019c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019930:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019932:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019936:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801993a:	1e48      	subs	r0, r1, #1
 801993c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019940:	9b06      	ldr	r3, [sp, #24]
 8019942:	2b00      	cmp	r3, #0
 8019944:	f340 80a9 	ble.w	8019a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019948:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801994c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019950:	d406      	bmi.n	8019960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019952:	4586      	cmp	lr, r0
 8019954:	da04      	bge.n	8019960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019956:	2b00      	cmp	r3, #0
 8019958:	db02      	blt.n	8019960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801995a:	4563      	cmp	r3, ip
 801995c:	f2c0 809e 	blt.w	8019a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019960:	f11e 0e01 	adds.w	lr, lr, #1
 8019964:	f100 808f 	bmi.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019968:	4571      	cmp	r1, lr
 801996a:	f2c0 808c 	blt.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801996e:	3301      	adds	r3, #1
 8019970:	f100 8089 	bmi.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019974:	429a      	cmp	r2, r3
 8019976:	f2c0 8086 	blt.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801997a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801997e:	46c8      	mov	r8, r9
 8019980:	f1bb 0f00 	cmp.w	fp, #0
 8019984:	f340 80a6 	ble.w	8019ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019988:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801998a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801998e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019990:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019994:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019998:	1422      	asrs	r2, r4, #16
 801999a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801999e:	689b      	ldr	r3, [r3, #8]
 80199a0:	f100 80e3 	bmi.w	8019b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199a4:	f103 3aff 	add.w	sl, r3, #4294967295
 80199a8:	4552      	cmp	r2, sl
 80199aa:	f280 80de 	bge.w	8019b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199ae:	f1bc 0f00 	cmp.w	ip, #0
 80199b2:	f2c0 80da 	blt.w	8019b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199b6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80199ba:	45d4      	cmp	ip, sl
 80199bc:	f280 80d5 	bge.w	8019b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80199c0:	b21b      	sxth	r3, r3
 80199c2:	9d07      	ldr	r5, [sp, #28]
 80199c4:	fb0c 2203 	mla	r2, ip, r3, r2
 80199c8:	eb05 0a02 	add.w	sl, r5, r2
 80199cc:	5caa      	ldrb	r2, [r5, r2]
 80199ce:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80199d2:	2800      	cmp	r0, #0
 80199d4:	f000 80c0 	beq.w	8019b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80199d8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80199dc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80199e0:	920b      	str	r2, [sp, #44]	; 0x2c
 80199e2:	b151      	cbz	r1, 80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80199e4:	eb0a 0203 	add.w	r2, sl, r3
 80199e8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80199ec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80199f0:	9309      	str	r3, [sp, #36]	; 0x24
 80199f2:	7853      	ldrb	r3, [r2, #1]
 80199f4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80199f8:	930c      	str	r3, [sp, #48]	; 0x30
 80199fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80199fc:	fb10 f201 	smulbb	r2, r0, r1
 8019a00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a02:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019a06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019a0a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019a0e:	10d2      	asrs	r2, r2, #3
 8019a10:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019a14:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019a18:	ea4c 0c03 	orr.w	ip, ip, r3
 8019a1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019a1e:	041b      	lsls	r3, r3, #16
 8019a20:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019a24:	432b      	orrs	r3, r5
 8019a26:	4353      	muls	r3, r2
 8019a28:	fb0a 330c 	mla	r3, sl, ip, r3
 8019a2c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019a30:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019a34:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019a38:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019a3c:	f1c1 0c10 	rsb	ip, r1, #16
 8019a40:	ebac 0c00 	sub.w	ip, ip, r0
 8019a44:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019a48:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019a4c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019a50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a52:	0418      	lsls	r0, r3, #16
 8019a54:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019a58:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019a5c:	4318      	orrs	r0, r3
 8019a5e:	fb02 c200 	mla	r2, r2, r0, ip
 8019a62:	0d53      	lsrs	r3, r2, #21
 8019a64:	0952      	lsrs	r2, r2, #5
 8019a66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019a6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019a6e:	431a      	orrs	r2, r3
 8019a70:	f8a8 2000 	strh.w	r2, [r8]
 8019a74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019a76:	f108 0802 	add.w	r8, r8, #2
 8019a7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019a7e:	441c      	add	r4, r3
 8019a80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019a82:	441e      	add	r6, r3
 8019a84:	e77c      	b.n	8019980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019a86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019a88:	f109 0902 	add.w	r9, r9, #2
 8019a8c:	441c      	add	r4, r3
 8019a8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019a90:	441e      	add	r6, r3
 8019a92:	9b06      	ldr	r3, [sp, #24]
 8019a94:	3b01      	subs	r3, #1
 8019a96:	9306      	str	r3, [sp, #24]
 8019a98:	e752      	b.n	8019940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019a9a:	d020      	beq.n	8019ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019a9c:	9b06      	ldr	r3, [sp, #24]
 8019a9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019aa0:	3b01      	subs	r3, #1
 8019aa2:	fb00 4003 	mla	r0, r0, r3, r4
 8019aa6:	1400      	asrs	r0, r0, #16
 8019aa8:	f53f af67 	bmi.w	801997a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019aac:	3901      	subs	r1, #1
 8019aae:	4288      	cmp	r0, r1
 8019ab0:	f6bf af63 	bge.w	801997a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019ab4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019ab6:	fb01 6303 	mla	r3, r1, r3, r6
 8019aba:	141b      	asrs	r3, r3, #16
 8019abc:	f53f af5d 	bmi.w	801997a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019ac0:	3a01      	subs	r2, #1
 8019ac2:	4293      	cmp	r3, r2
 8019ac4:	f6bf af59 	bge.w	801997a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019ac8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019acc:	46ca      	mov	sl, r9
 8019ace:	f1b8 0f00 	cmp.w	r8, #0
 8019ad2:	dc67      	bgt.n	8019ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019ad4:	9b06      	ldr	r3, [sp, #24]
 8019ad6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019ada:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019ade:	9b08      	ldr	r3, [sp, #32]
 8019ae0:	2b00      	cmp	r3, #0
 8019ae2:	f340 80d7 	ble.w	8019c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019ae6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019aea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019aec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019af0:	eeb0 6a62 	vmov.f32	s12, s5
 8019af4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019af8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019afc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b00:	ee16 4a10 	vmov	r4, s12
 8019b04:	eeb0 6a43 	vmov.f32	s12, s6
 8019b08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b0c:	ee16 6a10 	vmov	r6, s12
 8019b10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b28:	ee12 2a90 	vmov	r2, s5
 8019b2c:	eef0 2a47 	vmov.f32	s5, s14
 8019b30:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b34:	ee13 2a10 	vmov	r2, s6
 8019b38:	931f      	str	r3, [sp, #124]	; 0x7c
 8019b3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019b3c:	eeb0 3a67 	vmov.f32	s6, s15
 8019b40:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b44:	9320      	str	r3, [sp, #128]	; 0x80
 8019b46:	9b08      	ldr	r3, [sp, #32]
 8019b48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019b4a:	3b01      	subs	r3, #1
 8019b4c:	9308      	str	r3, [sp, #32]
 8019b4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019b50:	bf08      	it	eq
 8019b52:	4613      	moveq	r3, r2
 8019b54:	9306      	str	r3, [sp, #24]
 8019b56:	e6e4      	b.n	8019922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019b58:	2900      	cmp	r1, #0
 8019b5a:	f43f af4e 	beq.w	80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019b5e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019b62:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b66:	9309      	str	r3, [sp, #36]	; 0x24
 8019b68:	e747      	b.n	80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019b6a:	f112 0a01 	adds.w	sl, r2, #1
 8019b6e:	d481      	bmi.n	8019a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019b70:	4553      	cmp	r3, sl
 8019b72:	f6ff af7f 	blt.w	8019a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019b76:	f11c 0a01 	adds.w	sl, ip, #1
 8019b7a:	f53f af7b 	bmi.w	8019a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019b7e:	45d6      	cmp	lr, sl
 8019b80:	f6ff af78 	blt.w	8019a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019b84:	b21b      	sxth	r3, r3
 8019b86:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019b8a:	fa0f f28e 	sxth.w	r2, lr
 8019b8e:	9300      	str	r3, [sp, #0]
 8019b90:	463b      	mov	r3, r7
 8019b92:	9201      	str	r2, [sp, #4]
 8019b94:	9a07      	ldr	r2, [sp, #28]
 8019b96:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019b9a:	4641      	mov	r1, r8
 8019b9c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019b9e:	f7ff fe21 	bl	80197e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019ba2:	e767      	b.n	8019a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ba4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ba6:	1422      	asrs	r2, r4, #16
 8019ba8:	1431      	asrs	r1, r6, #16
 8019baa:	9d07      	ldr	r5, [sp, #28]
 8019bac:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019bb0:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019bb4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019bb8:	fb03 2101 	mla	r1, r3, r1, r2
 8019bbc:	9a07      	ldr	r2, [sp, #28]
 8019bbe:	440a      	add	r2, r1
 8019bc0:	5c69      	ldrb	r1, [r5, r1]
 8019bc2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019bc6:	f1be 0f00 	cmp.w	lr, #0
 8019bca:	d05c      	beq.n	8019c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019bcc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019bd0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019bd4:	950d      	str	r5, [sp, #52]	; 0x34
 8019bd6:	b150      	cbz	r0, 8019bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019bd8:	eb02 0c03 	add.w	ip, r2, r3
 8019bdc:	5cd3      	ldrb	r3, [r2, r3]
 8019bde:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019be2:	930a      	str	r3, [sp, #40]	; 0x28
 8019be4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019be8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019bec:	930e      	str	r3, [sp, #56]	; 0x38
 8019bee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019bf0:	fb1e f200 	smulbb	r2, lr, r0
 8019bf4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019bf6:	f108 38ff 	add.w	r8, r8, #4294967295
 8019bfa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019bfe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019c02:	10d2      	asrs	r2, r2, #3
 8019c04:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019c08:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c0c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019c10:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019c14:	9311      	str	r3, [sp, #68]	; 0x44
 8019c16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c18:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c1a:	041b      	lsls	r3, r3, #16
 8019c1c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019c20:	ea43 030b 	orr.w	r3, r3, fp
 8019c24:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019c28:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019c2c:	4353      	muls	r3, r2
 8019c2e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019c32:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019c36:	ea43 0b01 	orr.w	fp, r3, r1
 8019c3a:	f1c0 0110 	rsb	r1, r0, #16
 8019c3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c40:	eba1 0e0e 	sub.w	lr, r1, lr
 8019c44:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019c48:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019c4c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019c50:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019c54:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019c58:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019c5c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019c60:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019c64:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019c68:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019c6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019c70:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019c74:	ea43 0c0c 	orr.w	ip, r3, ip
 8019c78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019c7a:	441c      	add	r4, r3
 8019c7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019c7e:	f82a cb02 	strh.w	ip, [sl], #2
 8019c82:	441e      	add	r6, r3
 8019c84:	e723      	b.n	8019ace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019c86:	2800      	cmp	r0, #0
 8019c88:	d0b1      	beq.n	8019bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019c8a:	5cd3      	ldrb	r3, [r2, r3]
 8019c8c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c90:	930a      	str	r3, [sp, #40]	; 0x28
 8019c92:	e7ac      	b.n	8019bee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019c94:	b013      	add	sp, #76	; 0x4c
 8019c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019c9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c9e:	880d      	ldrh	r5, [r1, #0]
 8019ca0:	b087      	sub	sp, #28
 8019ca2:	10ef      	asrs	r7, r5, #3
 8019ca4:	9103      	str	r1, [sp, #12]
 8019ca6:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019caa:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019cae:	00ed      	lsls	r5, r5, #3
 8019cb0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019cb4:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019cb8:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019cbc:	b2ed      	uxtb	r5, r5
 8019cbe:	9701      	str	r7, [sp, #4]
 8019cc0:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019cc4:	9502      	str	r5, [sp, #8]
 8019cc6:	9d01      	ldr	r5, [sp, #4]
 8019cc8:	9902      	ldr	r1, [sp, #8]
 8019cca:	022d      	lsls	r5, r5, #8
 8019ccc:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019cd0:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019cd4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019cd8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019cdc:	430d      	orrs	r5, r1
 8019cde:	fb06 0709 	mla	r7, r6, r9, r0
 8019ce2:	2e00      	cmp	r6, #0
 8019ce4:	9505      	str	r5, [sp, #20]
 8019ce6:	eb02 0c07 	add.w	ip, r2, r7
 8019cea:	f2c0 80b6 	blt.w	8019e5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019cee:	45b3      	cmp	fp, r6
 8019cf0:	f340 80b3 	ble.w	8019e5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019cf4:	2800      	cmp	r0, #0
 8019cf6:	f2c0 80ae 	blt.w	8019e56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019cfa:	4581      	cmp	r9, r0
 8019cfc:	f340 80ab 	ble.w	8019e56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019d00:	5dd7      	ldrb	r7, [r2, r7]
 8019d02:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019d06:	441f      	add	r7, r3
 8019d08:	1c42      	adds	r2, r0, #1
 8019d0a:	f100 80a9 	bmi.w	8019e60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d0e:	4591      	cmp	r9, r2
 8019d10:	f340 80a6 	ble.w	8019e60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d14:	2c00      	cmp	r4, #0
 8019d16:	f000 80a3 	beq.w	8019e60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d1a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019d1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019d22:	441d      	add	r5, r3
 8019d24:	3601      	adds	r6, #1
 8019d26:	f100 809f 	bmi.w	8019e68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019d2a:	45b3      	cmp	fp, r6
 8019d2c:	f340 809c 	ble.w	8019e68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019d30:	f1be 0f00 	cmp.w	lr, #0
 8019d34:	f000 8098 	beq.w	8019e68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019d38:	2800      	cmp	r0, #0
 8019d3a:	f2c0 8093 	blt.w	8019e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019d3e:	4581      	cmp	r9, r0
 8019d40:	f340 8090 	ble.w	8019e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019d44:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019d48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019d4c:	441e      	add	r6, r3
 8019d4e:	3001      	adds	r0, #1
 8019d50:	f100 808d 	bmi.w	8019e6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019d54:	4581      	cmp	r9, r0
 8019d56:	f340 808a 	ble.w	8019e6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019d5a:	2c00      	cmp	r4, #0
 8019d5c:	f000 8087 	beq.w	8019e6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019d60:	44e1      	add	r9, ip
 8019d62:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019d66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019d6a:	4413      	add	r3, r2
 8019d6c:	b2a4      	uxth	r4, r4
 8019d6e:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019d72:	fa1f fe8e 	uxth.w	lr, lr
 8019d76:	9901      	ldr	r1, [sp, #4]
 8019d78:	fb04 fb0e 	mul.w	fp, r4, lr
 8019d7c:	0124      	lsls	r4, r4, #4
 8019d7e:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019d82:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019d86:	eba4 040b 	sub.w	r4, r4, fp
 8019d8a:	fa1f f08e 	uxth.w	r0, lr
 8019d8e:	b2a2      	uxth	r2, r4
 8019d90:	78ac      	ldrb	r4, [r5, #2]
 8019d92:	eba9 0900 	sub.w	r9, r9, r0
 8019d96:	fa1f fe88 	uxth.w	lr, r8
 8019d9a:	4354      	muls	r4, r2
 8019d9c:	ea6f 0808 	mvn.w	r8, r8
 8019da0:	fa1f f989 	uxth.w	r9, r9
 8019da4:	fa5f f888 	uxtb.w	r8, r8
 8019da8:	fb09 440c 	mla	r4, r9, ip, r4
 8019dac:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019db0:	fb1a fa08 	smulbb	sl, sl, r8
 8019db4:	fb00 440c 	mla	r4, r0, ip, r4
 8019db8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019dbc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019dc0:	787c      	ldrb	r4, [r7, #1]
 8019dc2:	783f      	ldrb	r7, [r7, #0]
 8019dc4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019dc8:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019dcc:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019dd0:	782d      	ldrb	r5, [r5, #0]
 8019dd2:	fb02 fa0a 	mul.w	sl, r2, sl
 8019dd6:	fa1f fc8c 	uxth.w	ip, ip
 8019dda:	436a      	muls	r2, r5
 8019ddc:	7835      	ldrb	r5, [r6, #0]
 8019dde:	fb09 aa04 	mla	sl, r9, r4, sl
 8019de2:	7874      	ldrb	r4, [r6, #1]
 8019de4:	fb09 2207 	mla	r2, r9, r7, r2
 8019de8:	fb00 aa04 	mla	sl, r0, r4, sl
 8019dec:	785c      	ldrb	r4, [r3, #1]
 8019dee:	fb00 2005 	mla	r0, r0, r5, r2
 8019df2:	781b      	ldrb	r3, [r3, #0]
 8019df4:	fb0b a404 	mla	r4, fp, r4, sl
 8019df8:	fb11 fa08 	smulbb	sl, r1, r8
 8019dfc:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019e00:	9b02      	ldr	r3, [sp, #8]
 8019e02:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019e06:	fb13 f808 	smulbb	r8, r3, r8
 8019e0a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019e0e:	fb04 a40e 	mla	r4, r4, lr, sl
 8019e12:	f10c 0301 	add.w	r3, ip, #1
 8019e16:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019e1a:	b2a4      	uxth	r4, r4
 8019e1c:	fa1f fe8e 	uxth.w	lr, lr
 8019e20:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019e24:	f104 0a01 	add.w	sl, r4, #1
 8019e28:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019e2c:	f10e 0c01 	add.w	ip, lr, #1
 8019e30:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019e34:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019e38:	0964      	lsrs	r4, r4, #5
 8019e3a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019e3e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019e42:	ea4c 0c03 	orr.w	ip, ip, r3
 8019e46:	9b03      	ldr	r3, [sp, #12]
 8019e48:	ea4c 0c04 	orr.w	ip, ip, r4
 8019e4c:	f8a3 c000 	strh.w	ip, [r3]
 8019e50:	b007      	add	sp, #28
 8019e52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e56:	af05      	add	r7, sp, #20
 8019e58:	e756      	b.n	8019d08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019e5a:	ad05      	add	r5, sp, #20
 8019e5c:	462f      	mov	r7, r5
 8019e5e:	e761      	b.n	8019d24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019e60:	ad05      	add	r5, sp, #20
 8019e62:	e75f      	b.n	8019d24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019e64:	ae05      	add	r6, sp, #20
 8019e66:	e772      	b.n	8019d4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019e68:	ab05      	add	r3, sp, #20
 8019e6a:	461e      	mov	r6, r3
 8019e6c:	e77e      	b.n	8019d6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019e6e:	ab05      	add	r3, sp, #20
 8019e70:	e77c      	b.n	8019d6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e76:	b095      	sub	sp, #84	; 0x54
 8019e78:	9212      	str	r2, [sp, #72]	; 0x48
 8019e7a:	9309      	str	r3, [sp, #36]	; 0x24
 8019e7c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019e7e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019e82:	9013      	str	r0, [sp, #76]	; 0x4c
 8019e84:	930f      	str	r3, [sp, #60]	; 0x3c
 8019e86:	6850      	ldr	r0, [r2, #4]
 8019e88:	910e      	str	r1, [sp, #56]	; 0x38
 8019e8a:	6812      	ldr	r2, [r2, #0]
 8019e8c:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019e90:	fb00 1303 	mla	r3, r0, r3, r1
 8019e94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019e98:	930a      	str	r3, [sp, #40]	; 0x28
 8019e9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019e9c:	681b      	ldr	r3, [r3, #0]
 8019e9e:	930d      	str	r3, [sp, #52]	; 0x34
 8019ea0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019ea2:	685c      	ldr	r4, [r3, #4]
 8019ea4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019ea6:	3404      	adds	r4, #4
 8019ea8:	43db      	mvns	r3, r3
 8019eaa:	b2db      	uxtb	r3, r3
 8019eac:	930b      	str	r3, [sp, #44]	; 0x2c
 8019eae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019eb0:	2b00      	cmp	r3, #0
 8019eb2:	dc03      	bgt.n	8019ebc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019eb4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019eb6:	2b00      	cmp	r3, #0
 8019eb8:	f340 8255 	ble.w	801a366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019ebc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019ebe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ec2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019ec6:	1e48      	subs	r0, r1, #1
 8019ec8:	1e55      	subs	r5, r2, #1
 8019eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ecc:	2b00      	cmp	r3, #0
 8019ece:	f340 80f9 	ble.w	801a0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019ed2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019ed4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019ed6:	1436      	asrs	r6, r6, #16
 8019ed8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019edc:	d406      	bmi.n	8019eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ede:	4286      	cmp	r6, r0
 8019ee0:	da04      	bge.n	8019eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ee2:	2b00      	cmp	r3, #0
 8019ee4:	db02      	blt.n	8019eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ee6:	42ab      	cmp	r3, r5
 8019ee8:	f2c0 80ed 	blt.w	801a0c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019eec:	3601      	adds	r6, #1
 8019eee:	f100 80da 	bmi.w	801a0a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ef2:	42b1      	cmp	r1, r6
 8019ef4:	f2c0 80d7 	blt.w	801a0a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ef8:	3301      	adds	r3, #1
 8019efa:	f100 80d4 	bmi.w	801a0a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019efe:	429a      	cmp	r2, r3
 8019f00:	f2c0 80d1 	blt.w	801a0a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f06:	9311      	str	r3, [sp, #68]	; 0x44
 8019f08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f0a:	930c      	str	r3, [sp, #48]	; 0x30
 8019f0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019f0e:	2b00      	cmp	r3, #0
 8019f10:	f340 80fa 	ble.w	801a108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019f14:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019f16:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019f18:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019f1a:	68c6      	ldr	r6, [r0, #12]
 8019f1c:	141d      	asrs	r5, r3, #16
 8019f1e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019f20:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019f24:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019f26:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019f28:	1400      	asrs	r0, r0, #16
 8019f2a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019f2e:	6892      	ldr	r2, [r2, #8]
 8019f30:	f100 813e 	bmi.w	801a1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f34:	1e57      	subs	r7, r2, #1
 8019f36:	42b8      	cmp	r0, r7
 8019f38:	f280 813a 	bge.w	801a1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f3c:	2d00      	cmp	r5, #0
 8019f3e:	f2c0 8137 	blt.w	801a1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f42:	1e77      	subs	r7, r6, #1
 8019f44:	42bd      	cmp	r5, r7
 8019f46:	f280 8133 	bge.w	801a1b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019f4a:	b212      	sxth	r2, r2
 8019f4c:	fb05 0002 	mla	r0, r5, r2, r0
 8019f50:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019f52:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019f56:	182e      	adds	r6, r5, r0
 8019f58:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019f5c:	eb04 050a 	add.w	r5, r4, sl
 8019f60:	2b00      	cmp	r3, #0
 8019f62:	f000 8117 	beq.w	801a194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019f66:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019f6a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019f6e:	44a4      	add	ip, r4
 8019f70:	2900      	cmp	r1, #0
 8019f72:	f000 8117 	beq.w	801a1a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019f76:	18b0      	adds	r0, r6, r2
 8019f78:	5cb2      	ldrb	r2, [r6, r2]
 8019f7a:	7840      	ldrb	r0, [r0, #1]
 8019f7c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019f80:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019f84:	4422      	add	r2, r4
 8019f86:	4420      	add	r0, r4
 8019f88:	b29b      	uxth	r3, r3
 8019f8a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019f8e:	b289      	uxth	r1, r1
 8019f90:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019f94:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019f96:	fb03 f901 	mul.w	r9, r3, r1
 8019f9a:	011b      	lsls	r3, r3, #4
 8019f9c:	f8b6 e000 	ldrh.w	lr, [r6]
 8019fa0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019fa4:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8019fa8:	eba3 0309 	sub.w	r3, r3, r9
 8019fac:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8019fb0:	b289      	uxth	r1, r1
 8019fb2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019fb6:	b29b      	uxth	r3, r3
 8019fb8:	eba8 0801 	sub.w	r8, r8, r1
 8019fbc:	435f      	muls	r7, r3
 8019fbe:	fa1f f888 	uxth.w	r8, r8
 8019fc2:	9310      	str	r3, [sp, #64]	; 0x40
 8019fc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019fc6:	fb08 770b 	mla	r7, r8, fp, r7
 8019fca:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019fce:	fb01 770b 	mla	r7, r1, fp, r7
 8019fd2:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019fd6:	fb09 770b 	mla	r7, r9, fp, r7
 8019fda:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8019fde:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019fe2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019fe6:	fb1b fb03 	smulbb	fp, fp, r3
 8019fea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fec:	fb07 b706 	mla	r7, r7, r6, fp
 8019ff0:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019ff4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019ff8:	f89c c000 	ldrb.w	ip, [ip]
 8019ffc:	b2bf      	uxth	r7, r7
 8019ffe:	435d      	muls	r5, r3
 801a000:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a002:	fb08 550b 	mla	r5, r8, fp, r5
 801a006:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a00a:	fb01 550b 	mla	r5, r1, fp, r5
 801a00e:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a012:	fb09 550b 	mla	r5, r9, fp, r5
 801a016:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a01a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a01e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a022:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a026:	fa5f fe8e 	uxtb.w	lr, lr
 801a02a:	fb1b fb03 	smulbb	fp, fp, r3
 801a02e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a030:	fb03 f30c 	mul.w	r3, r3, ip
 801a034:	f892 c000 	ldrb.w	ip, [r2]
 801a038:	fb05 b506 	mla	r5, r5, r6, fp
 801a03c:	fb08 330a 	mla	r3, r8, sl, r3
 801a040:	b2ad      	uxth	r5, r5
 801a042:	fb01 330c 	mla	r3, r1, ip, r3
 801a046:	f890 c000 	ldrb.w	ip, [r0]
 801a04a:	f105 0b01 	add.w	fp, r5, #1
 801a04e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a052:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a054:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a058:	fb1e fe03 	smulbb	lr, lr, r3
 801a05c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a060:	1c7b      	adds	r3, r7, #1
 801a062:	096d      	lsrs	r5, r5, #5
 801a064:	fb0c e606 	mla	r6, ip, r6, lr
 801a068:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a06c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a070:	b2b6      	uxth	r6, r6
 801a072:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a076:	1c77      	adds	r7, r6, #1
 801a078:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a07c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a080:	431f      	orrs	r7, r3
 801a082:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a084:	433d      	orrs	r5, r7
 801a086:	801d      	strh	r5, [r3, #0]
 801a088:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a08a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a08c:	3302      	adds	r3, #2
 801a08e:	930c      	str	r3, [sp, #48]	; 0x30
 801a090:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a092:	4413      	add	r3, r2
 801a094:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a096:	931f      	str	r3, [sp, #124]	; 0x7c
 801a098:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a09a:	4413      	add	r3, r2
 801a09c:	9320      	str	r3, [sp, #128]	; 0x80
 801a09e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a0a0:	3b01      	subs	r3, #1
 801a0a2:	9311      	str	r3, [sp, #68]	; 0x44
 801a0a4:	e732      	b.n	8019f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a0a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a0a8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a0aa:	4433      	add	r3, r6
 801a0ac:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a0ae:	931f      	str	r3, [sp, #124]	; 0x7c
 801a0b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a0b2:	4433      	add	r3, r6
 801a0b4:	9320      	str	r3, [sp, #128]	; 0x80
 801a0b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0b8:	3b01      	subs	r3, #1
 801a0ba:	9309      	str	r3, [sp, #36]	; 0x24
 801a0bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a0be:	3302      	adds	r3, #2
 801a0c0:	930a      	str	r3, [sp, #40]	; 0x28
 801a0c2:	e702      	b.n	8019eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a0c4:	d027      	beq.n	801a116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a0c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0c8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a0ca:	3b01      	subs	r3, #1
 801a0cc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a0ce:	fb00 5003 	mla	r0, r0, r3, r5
 801a0d2:	1400      	asrs	r0, r0, #16
 801a0d4:	f53f af16 	bmi.w	8019f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a0d8:	3901      	subs	r1, #1
 801a0da:	4288      	cmp	r0, r1
 801a0dc:	f6bf af12 	bge.w	8019f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a0e0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a0e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a0e4:	fb01 0303 	mla	r3, r1, r3, r0
 801a0e8:	141b      	asrs	r3, r3, #16
 801a0ea:	f53f af0b 	bmi.w	8019f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a0ee:	3a01      	subs	r2, #1
 801a0f0:	4293      	cmp	r3, r2
 801a0f2:	f6bf af07 	bge.w	8019f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a0f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0f8:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a0fc:	9311      	str	r3, [sp, #68]	; 0x44
 801a0fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a100:	930c      	str	r3, [sp, #48]	; 0x30
 801a102:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a104:	2b00      	cmp	r3, #0
 801a106:	dc70      	bgt.n	801a1ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a108:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a10a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a10c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a110:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a114:	930a      	str	r3, [sp, #40]	; 0x28
 801a116:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a118:	2b00      	cmp	r3, #0
 801a11a:	f340 8124 	ble.w	801a366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a11e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a122:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a124:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a128:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a12c:	eef0 6a62 	vmov.f32	s13, s5
 801a130:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a134:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a138:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a13c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a140:	eef0 6a43 	vmov.f32	s13, s6
 801a144:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a148:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a14c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a150:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a154:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a158:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a15c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a160:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a164:	ee12 2a90 	vmov	r2, s5
 801a168:	eef0 2a47 	vmov.f32	s5, s14
 801a16c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a170:	ee13 2a10 	vmov	r2, s6
 801a174:	9321      	str	r3, [sp, #132]	; 0x84
 801a176:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a178:	eeb0 3a67 	vmov.f32	s6, s15
 801a17c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a180:	9322      	str	r3, [sp, #136]	; 0x88
 801a182:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a184:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a186:	3b01      	subs	r3, #1
 801a188:	930e      	str	r3, [sp, #56]	; 0x38
 801a18a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a18c:	bf08      	it	eq
 801a18e:	4613      	moveq	r3, r2
 801a190:	9309      	str	r3, [sp, #36]	; 0x24
 801a192:	e68c      	b.n	8019eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a194:	b149      	cbz	r1, 801a1aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a196:	5cb2      	ldrb	r2, [r6, r2]
 801a198:	4628      	mov	r0, r5
 801a19a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a19e:	4422      	add	r2, r4
 801a1a0:	46ac      	mov	ip, r5
 801a1a2:	e6f1      	b.n	8019f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a1a4:	4628      	mov	r0, r5
 801a1a6:	462a      	mov	r2, r5
 801a1a8:	e6ee      	b.n	8019f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a1aa:	4628      	mov	r0, r5
 801a1ac:	462a      	mov	r2, r5
 801a1ae:	e7f7      	b.n	801a1a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a1b0:	1c47      	adds	r7, r0, #1
 801a1b2:	f53f af69 	bmi.w	801a088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1b6:	42ba      	cmp	r2, r7
 801a1b8:	f6ff af66 	blt.w	801a088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1bc:	1c6f      	adds	r7, r5, #1
 801a1be:	f53f af63 	bmi.w	801a088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1c2:	42be      	cmp	r6, r7
 801a1c4:	f6ff af60 	blt.w	801a088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a1ca:	b236      	sxth	r6, r6
 801a1cc:	b212      	sxth	r2, r2
 801a1ce:	9002      	str	r0, [sp, #8]
 801a1d0:	9601      	str	r6, [sp, #4]
 801a1d2:	9200      	str	r2, [sp, #0]
 801a1d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a1d6:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a1da:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a1de:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a1e2:	4623      	mov	r3, r4
 801a1e4:	f7ff fd59 	bl	8019c9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a1e8:	e74e      	b.n	801a088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a1ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a1ec:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a1ee:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a1f2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a1f4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a1f6:	1400      	asrs	r0, r0, #16
 801a1f8:	142d      	asrs	r5, r5, #16
 801a1fa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a1fc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a200:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a204:	fb02 5000 	mla	r0, r2, r0, r5
 801a208:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a20a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a20e:	182e      	adds	r6, r5, r0
 801a210:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a214:	eb04 0509 	add.w	r5, r4, r9
 801a218:	2b00      	cmp	r3, #0
 801a21a:	f000 8096 	beq.w	801a34a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a21e:	7877      	ldrb	r7, [r6, #1]
 801a220:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a224:	4427      	add	r7, r4
 801a226:	2900      	cmp	r1, #0
 801a228:	f000 8097 	beq.w	801a35a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a22c:	18b0      	adds	r0, r6, r2
 801a22e:	5cb2      	ldrb	r2, [r6, r2]
 801a230:	7840      	ldrb	r0, [r0, #1]
 801a232:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a236:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a23a:	4422      	add	r2, r4
 801a23c:	4420      	add	r0, r4
 801a23e:	b29b      	uxth	r3, r3
 801a240:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a242:	b289      	uxth	r1, r1
 801a244:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a248:	f8b6 c000 	ldrh.w	ip, [r6]
 801a24c:	fb03 f801 	mul.w	r8, r3, r1
 801a250:	011b      	lsls	r3, r3, #4
 801a252:	78be      	ldrb	r6, [r7, #2]
 801a254:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a258:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a25c:	eba3 0308 	sub.w	r3, r3, r8
 801a260:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a264:	b289      	uxth	r1, r1
 801a266:	b29b      	uxth	r3, r3
 801a268:	ebae 0e01 	sub.w	lr, lr, r1
 801a26c:	435e      	muls	r6, r3
 801a26e:	fa1f fe8e 	uxth.w	lr, lr
 801a272:	9310      	str	r3, [sp, #64]	; 0x40
 801a274:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a276:	fb0e 660b 	mla	r6, lr, fp, r6
 801a27a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a27e:	fb01 660b 	mla	r6, r1, fp, r6
 801a282:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a286:	fb08 660b 	mla	r6, r8, fp, r6
 801a28a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a28e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a292:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a296:	fb1b fb03 	smulbb	fp, fp, r3
 801a29a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a29c:	fb06 b60a 	mla	r6, r6, sl, fp
 801a2a0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a2a4:	787d      	ldrb	r5, [r7, #1]
 801a2a6:	783f      	ldrb	r7, [r7, #0]
 801a2a8:	b2b6      	uxth	r6, r6
 801a2aa:	435d      	muls	r5, r3
 801a2ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a2ae:	fb0e 550b 	mla	r5, lr, fp, r5
 801a2b2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a2b6:	fb01 550b 	mla	r5, r1, fp, r5
 801a2ba:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a2be:	fb08 550b 	mla	r5, r8, fp, r5
 801a2c2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a2c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a2ca:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a2ce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a2d2:	fa5f fc8c 	uxtb.w	ip, ip
 801a2d6:	fb1b fb03 	smulbb	fp, fp, r3
 801a2da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a2dc:	437b      	muls	r3, r7
 801a2de:	7817      	ldrb	r7, [r2, #0]
 801a2e0:	fb05 b50a 	mla	r5, r5, sl, fp
 801a2e4:	fb0e 3309 	mla	r3, lr, r9, r3
 801a2e8:	b2ad      	uxth	r5, r5
 801a2ea:	fb01 3307 	mla	r3, r1, r7, r3
 801a2ee:	7807      	ldrb	r7, [r0, #0]
 801a2f0:	f105 0b01 	add.w	fp, r5, #1
 801a2f4:	fb08 3707 	mla	r7, r8, r7, r3
 801a2f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a2fa:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a2fe:	fb1c fc03 	smulbb	ip, ip, r3
 801a302:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a306:	1c73      	adds	r3, r6, #1
 801a308:	096d      	lsrs	r5, r5, #5
 801a30a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a30e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a312:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a316:	b2bf      	uxth	r7, r7
 801a318:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a31a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a31e:	1c7a      	adds	r2, r7, #1
 801a320:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a324:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a328:	4316      	orrs	r6, r2
 801a32a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a32c:	432e      	orrs	r6, r5
 801a32e:	f823 6b02 	strh.w	r6, [r3], #2
 801a332:	930c      	str	r3, [sp, #48]	; 0x30
 801a334:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a336:	4413      	add	r3, r2
 801a338:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a33a:	931f      	str	r3, [sp, #124]	; 0x7c
 801a33c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a33e:	4413      	add	r3, r2
 801a340:	9320      	str	r3, [sp, #128]	; 0x80
 801a342:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a344:	3b01      	subs	r3, #1
 801a346:	9311      	str	r3, [sp, #68]	; 0x44
 801a348:	e6db      	b.n	801a102 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a34a:	b149      	cbz	r1, 801a360 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a34c:	5cb2      	ldrb	r2, [r6, r2]
 801a34e:	4628      	mov	r0, r5
 801a350:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a354:	4422      	add	r2, r4
 801a356:	462f      	mov	r7, r5
 801a358:	e771      	b.n	801a23e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a35a:	4628      	mov	r0, r5
 801a35c:	462a      	mov	r2, r5
 801a35e:	e76e      	b.n	801a23e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a360:	4628      	mov	r0, r5
 801a362:	462a      	mov	r2, r5
 801a364:	e7f7      	b.n	801a356 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a366:	b015      	add	sp, #84	; 0x54
 801a368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a36c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a36c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a370:	880f      	ldrh	r7, [r1, #0]
 801a372:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a376:	023c      	lsls	r4, r7, #8
 801a378:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a37c:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a380:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a384:	017c      	lsls	r4, r7, #5
 801a386:	00ff      	lsls	r7, r7, #3
 801a388:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a38c:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a390:	b2ff      	uxtb	r7, r7
 801a392:	ea4b 0404 	orr.w	r4, fp, r4
 801a396:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a39a:	4327      	orrs	r7, r4
 801a39c:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a3a0:	2d00      	cmp	r5, #0
 801a3a2:	9701      	str	r7, [sp, #4]
 801a3a4:	eb02 080a 	add.w	r8, r2, sl
 801a3a8:	db7e      	blt.n	801a4a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a3aa:	45a9      	cmp	r9, r5
 801a3ac:	dd7c      	ble.n	801a4a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a3ae:	f1bc 0f00 	cmp.w	ip, #0
 801a3b2:	db77      	blt.n	801a4a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a3b4:	45e6      	cmp	lr, ip
 801a3b6:	dd75      	ble.n	801a4a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a3b8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a3bc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a3c0:	441f      	add	r7, r3
 801a3c2:	f11c 0201 	adds.w	r2, ip, #1
 801a3c6:	d472      	bmi.n	801a4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a3c8:	4596      	cmp	lr, r2
 801a3ca:	dd70      	ble.n	801a4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a3cc:	2800      	cmp	r0, #0
 801a3ce:	d06e      	beq.n	801a4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a3d0:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a3d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a3d8:	441c      	add	r4, r3
 801a3da:	3501      	adds	r5, #1
 801a3dc:	d46b      	bmi.n	801a4b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a3de:	45a9      	cmp	r9, r5
 801a3e0:	dd69      	ble.n	801a4b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a3e2:	2e00      	cmp	r6, #0
 801a3e4:	d067      	beq.n	801a4b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a3e6:	f1bc 0f00 	cmp.w	ip, #0
 801a3ea:	db62      	blt.n	801a4b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a3ec:	45e6      	cmp	lr, ip
 801a3ee:	dd60      	ble.n	801a4b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a3f0:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a3f4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a3f8:	441d      	add	r5, r3
 801a3fa:	f11c 0201 	adds.w	r2, ip, #1
 801a3fe:	d45d      	bmi.n	801a4bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a400:	4596      	cmp	lr, r2
 801a402:	dd5b      	ble.n	801a4bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a404:	2800      	cmp	r0, #0
 801a406:	d059      	beq.n	801a4bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a408:	44c6      	add	lr, r8
 801a40a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a40e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a412:	4413      	add	r3, r2
 801a414:	b280      	uxth	r0, r0
 801a416:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a41a:	b2b2      	uxth	r2, r6
 801a41c:	f897 9000 	ldrb.w	r9, [r7]
 801a420:	787f      	ldrb	r7, [r7, #1]
 801a422:	fb00 f602 	mul.w	r6, r0, r2
 801a426:	0100      	lsls	r0, r0, #4
 801a428:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a42c:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a430:	1b80      	subs	r0, r0, r6
 801a432:	fa1f fc82 	uxth.w	ip, r2
 801a436:	b282      	uxth	r2, r0
 801a438:	78a0      	ldrb	r0, [r4, #2]
 801a43a:	eba8 080c 	sub.w	r8, r8, ip
 801a43e:	4350      	muls	r0, r2
 801a440:	fa1f f888 	uxth.w	r8, r8
 801a444:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a448:	78a8      	ldrb	r0, [r5, #2]
 801a44a:	fb0c e000 	mla	r0, ip, r0, lr
 801a44e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a452:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a456:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a45a:	f894 e000 	ldrb.w	lr, [r4]
 801a45e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a462:	fb08 e909 	mla	r9, r8, r9, lr
 801a466:	f895 e000 	ldrb.w	lr, [r5]
 801a46a:	fb0c 990e 	mla	r9, ip, lr, r9
 801a46e:	f893 e000 	ldrb.w	lr, [r3]
 801a472:	785b      	ldrb	r3, [r3, #1]
 801a474:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a478:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a47c:	ea4e 0e00 	orr.w	lr, lr, r0
 801a480:	7860      	ldrb	r0, [r4, #1]
 801a482:	4350      	muls	r0, r2
 801a484:	786a      	ldrb	r2, [r5, #1]
 801a486:	fb08 0007 	mla	r0, r8, r7, r0
 801a48a:	fb0c 0202 	mla	r2, ip, r2, r0
 801a48e:	fb06 2303 	mla	r3, r6, r3, r2
 801a492:	095b      	lsrs	r3, r3, #5
 801a494:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a498:	ea4e 0303 	orr.w	r3, lr, r3
 801a49c:	800b      	strh	r3, [r1, #0]
 801a49e:	b003      	add	sp, #12
 801a4a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4a4:	af01      	add	r7, sp, #4
 801a4a6:	e78c      	b.n	801a3c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a4a8:	ac01      	add	r4, sp, #4
 801a4aa:	4627      	mov	r7, r4
 801a4ac:	e795      	b.n	801a3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a4ae:	ac01      	add	r4, sp, #4
 801a4b0:	e793      	b.n	801a3da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a4b2:	ad01      	add	r5, sp, #4
 801a4b4:	e7a1      	b.n	801a3fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a4b6:	ab01      	add	r3, sp, #4
 801a4b8:	461d      	mov	r5, r3
 801a4ba:	e7ab      	b.n	801a414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a4bc:	ab01      	add	r3, sp, #4
 801a4be:	e7a9      	b.n	801a414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a4c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4c4:	b08f      	sub	sp, #60	; 0x3c
 801a4c6:	920c      	str	r2, [sp, #48]	; 0x30
 801a4c8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a4ca:	900d      	str	r0, [sp, #52]	; 0x34
 801a4cc:	910a      	str	r1, [sp, #40]	; 0x28
 801a4ce:	6850      	ldr	r0, [r2, #4]
 801a4d0:	9306      	str	r3, [sp, #24]
 801a4d2:	6812      	ldr	r2, [r2, #0]
 801a4d4:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a4d8:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a4dc:	fb00 1303 	mla	r3, r0, r3, r1
 801a4e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a4e4:	9307      	str	r3, [sp, #28]
 801a4e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a4e8:	681b      	ldr	r3, [r3, #0]
 801a4ea:	9308      	str	r3, [sp, #32]
 801a4ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a4ee:	685c      	ldr	r4, [r3, #4]
 801a4f0:	3404      	adds	r4, #4
 801a4f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a4f4:	2b00      	cmp	r3, #0
 801a4f6:	dc03      	bgt.n	801a500 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a4f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a4fa:	2b00      	cmp	r3, #0
 801a4fc:	f340 81d5 	ble.w	801a8aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801a500:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a502:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a506:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a50a:	1e48      	subs	r0, r1, #1
 801a50c:	1e56      	subs	r6, r2, #1
 801a50e:	9b06      	ldr	r3, [sp, #24]
 801a510:	2b00      	cmp	r3, #0
 801a512:	f340 80b6 	ble.w	801a682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801a516:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a51a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a51e:	d406      	bmi.n	801a52e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a520:	4287      	cmp	r7, r0
 801a522:	da04      	bge.n	801a52e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a524:	2b00      	cmp	r3, #0
 801a526:	db02      	blt.n	801a52e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a528:	42b3      	cmp	r3, r6
 801a52a:	f2c0 80ab 	blt.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a52e:	3701      	adds	r7, #1
 801a530:	f100 809c 	bmi.w	801a66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a534:	42b9      	cmp	r1, r7
 801a536:	f2c0 8099 	blt.w	801a66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a53a:	3301      	adds	r3, #1
 801a53c:	f100 8096 	bmi.w	801a66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a540:	429a      	cmp	r2, r3
 801a542:	f2c0 8093 	blt.w	801a66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a546:	9b06      	ldr	r3, [sp, #24]
 801a548:	930b      	str	r3, [sp, #44]	; 0x2c
 801a54a:	9b07      	ldr	r3, [sp, #28]
 801a54c:	9309      	str	r3, [sp, #36]	; 0x24
 801a54e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a550:	2b00      	cmp	r3, #0
 801a552:	f340 80b4 	ble.w	801a6be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a556:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a558:	142e      	asrs	r6, r5, #16
 801a55a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a55c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a560:	68c7      	ldr	r7, [r0, #12]
 801a562:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a566:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a56a:	6892      	ldr	r2, [r2, #8]
 801a56c:	f100 80fb 	bmi.w	801a766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a570:	f102 3cff 	add.w	ip, r2, #4294967295
 801a574:	4560      	cmp	r0, ip
 801a576:	f280 80f6 	bge.w	801a766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a57a:	2e00      	cmp	r6, #0
 801a57c:	f2c0 80f3 	blt.w	801a766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a580:	f107 3cff 	add.w	ip, r7, #4294967295
 801a584:	4566      	cmp	r6, ip
 801a586:	f280 80ee 	bge.w	801a766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a58a:	b212      	sxth	r2, r2
 801a58c:	fb06 0002 	mla	r0, r6, r2, r0
 801a590:	9e08      	ldr	r6, [sp, #32]
 801a592:	1837      	adds	r7, r6, r0
 801a594:	5c30      	ldrb	r0, [r6, r0]
 801a596:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a59a:	eb04 0c08 	add.w	ip, r4, r8
 801a59e:	2b00      	cmp	r3, #0
 801a5a0:	f000 80d3 	beq.w	801a74a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801a5a4:	787e      	ldrb	r6, [r7, #1]
 801a5a6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a5aa:	4426      	add	r6, r4
 801a5ac:	2900      	cmp	r1, #0
 801a5ae:	f000 80d4 	beq.w	801a75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a5b2:	18b8      	adds	r0, r7, r2
 801a5b4:	5cba      	ldrb	r2, [r7, r2]
 801a5b6:	7840      	ldrb	r0, [r0, #1]
 801a5b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a5bc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a5c0:	4422      	add	r2, r4
 801a5c2:	4420      	add	r0, r4
 801a5c4:	b29b      	uxth	r3, r3
 801a5c6:	78b7      	ldrb	r7, [r6, #2]
 801a5c8:	b289      	uxth	r1, r1
 801a5ca:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a5ce:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a5d2:	fb03 f901 	mul.w	r9, r3, r1
 801a5d6:	011b      	lsls	r3, r3, #4
 801a5d8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a5dc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a5e0:	eba3 0309 	sub.w	r3, r3, r9
 801a5e4:	b289      	uxth	r1, r1
 801a5e6:	b29b      	uxth	r3, r3
 801a5e8:	ebae 0e01 	sub.w	lr, lr, r1
 801a5ec:	435f      	muls	r7, r3
 801a5ee:	fa1f fe8e 	uxth.w	lr, lr
 801a5f2:	fb0e 770a 	mla	r7, lr, sl, r7
 801a5f6:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a5fa:	fb01 770a 	mla	r7, r1, sl, r7
 801a5fe:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a602:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a606:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a60a:	f896 8000 	ldrb.w	r8, [r6]
 801a60e:	7876      	ldrb	r6, [r6, #1]
 801a610:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a614:	fb03 f808 	mul.w	r8, r3, r8
 801a618:	4373      	muls	r3, r6
 801a61a:	fb0e 8807 	mla	r8, lr, r7, r8
 801a61e:	7817      	ldrb	r7, [r2, #0]
 801a620:	fb0e 330c 	mla	r3, lr, ip, r3
 801a624:	fb01 8807 	mla	r8, r1, r7, r8
 801a628:	7807      	ldrb	r7, [r0, #0]
 801a62a:	fb09 8707 	mla	r7, r9, r7, r8
 801a62e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a632:	ea47 070a 	orr.w	r7, r7, sl
 801a636:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a63a:	fb01 310a 	mla	r1, r1, sl, r3
 801a63e:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a642:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a644:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a648:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a64c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a650:	ea47 070a 	orr.w	r7, r7, sl
 801a654:	801f      	strh	r7, [r3, #0]
 801a656:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a658:	3302      	adds	r3, #2
 801a65a:	9309      	str	r3, [sp, #36]	; 0x24
 801a65c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a65e:	449b      	add	fp, r3
 801a660:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a662:	441d      	add	r5, r3
 801a664:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a666:	3b01      	subs	r3, #1
 801a668:	930b      	str	r3, [sp, #44]	; 0x2c
 801a66a:	e770      	b.n	801a54e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a66c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a66e:	449b      	add	fp, r3
 801a670:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a672:	441d      	add	r5, r3
 801a674:	9b06      	ldr	r3, [sp, #24]
 801a676:	3b01      	subs	r3, #1
 801a678:	9306      	str	r3, [sp, #24]
 801a67a:	9b07      	ldr	r3, [sp, #28]
 801a67c:	3302      	adds	r3, #2
 801a67e:	9307      	str	r3, [sp, #28]
 801a680:	e745      	b.n	801a50e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a682:	d023      	beq.n	801a6cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801a684:	9b06      	ldr	r3, [sp, #24]
 801a686:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a688:	3b01      	subs	r3, #1
 801a68a:	fb00 b003 	mla	r0, r0, r3, fp
 801a68e:	1400      	asrs	r0, r0, #16
 801a690:	f53f af59 	bmi.w	801a546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a694:	3901      	subs	r1, #1
 801a696:	4288      	cmp	r0, r1
 801a698:	f6bf af55 	bge.w	801a546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a69c:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a69e:	fb01 5303 	mla	r3, r1, r3, r5
 801a6a2:	141b      	asrs	r3, r3, #16
 801a6a4:	f53f af4f 	bmi.w	801a546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a6a8:	3a01      	subs	r2, #1
 801a6aa:	4293      	cmp	r3, r2
 801a6ac:	f6bf af4b 	bge.w	801a546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a6b0:	9b06      	ldr	r3, [sp, #24]
 801a6b2:	9309      	str	r3, [sp, #36]	; 0x24
 801a6b4:	9b07      	ldr	r3, [sp, #28]
 801a6b6:	930b      	str	r3, [sp, #44]	; 0x2c
 801a6b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a6ba:	2b00      	cmp	r3, #0
 801a6bc:	dc70      	bgt.n	801a7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a6be:	9b06      	ldr	r3, [sp, #24]
 801a6c0:	9a07      	ldr	r2, [sp, #28]
 801a6c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a6c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a6ca:	9307      	str	r3, [sp, #28]
 801a6cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a6ce:	2b00      	cmp	r3, #0
 801a6d0:	f340 80eb 	ble.w	801a8aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801a6d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a6d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a6da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6e2:	eef0 6a62 	vmov.f32	s13, s5
 801a6e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a6ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6f2:	ee16 ba90 	vmov	fp, s13
 801a6f6:	eef0 6a43 	vmov.f32	s13, s6
 801a6fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6fe:	ee16 5a90 	vmov	r5, s13
 801a702:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a706:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a70a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a70e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a712:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a716:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a71a:	ee12 2a90 	vmov	r2, s5
 801a71e:	eef0 2a47 	vmov.f32	s5, s14
 801a722:	fb92 f3f3 	sdiv	r3, r2, r3
 801a726:	ee13 2a10 	vmov	r2, s6
 801a72a:	931b      	str	r3, [sp, #108]	; 0x6c
 801a72c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a72e:	eeb0 3a67 	vmov.f32	s6, s15
 801a732:	fb92 f3f3 	sdiv	r3, r2, r3
 801a736:	931c      	str	r3, [sp, #112]	; 0x70
 801a738:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a73a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a73c:	3b01      	subs	r3, #1
 801a73e:	930a      	str	r3, [sp, #40]	; 0x28
 801a740:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a742:	bf08      	it	eq
 801a744:	4613      	moveq	r3, r2
 801a746:	9306      	str	r3, [sp, #24]
 801a748:	e6d3      	b.n	801a4f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a74a:	b149      	cbz	r1, 801a760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a74c:	5cba      	ldrb	r2, [r7, r2]
 801a74e:	4660      	mov	r0, ip
 801a750:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a754:	4422      	add	r2, r4
 801a756:	4666      	mov	r6, ip
 801a758:	e734      	b.n	801a5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801a75a:	4660      	mov	r0, ip
 801a75c:	4662      	mov	r2, ip
 801a75e:	e731      	b.n	801a5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801a760:	4660      	mov	r0, ip
 801a762:	4662      	mov	r2, ip
 801a764:	e7f7      	b.n	801a756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a766:	f110 0c01 	adds.w	ip, r0, #1
 801a76a:	f53f af74 	bmi.w	801a656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a76e:	4562      	cmp	r2, ip
 801a770:	f6ff af71 	blt.w	801a656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a774:	f116 0c01 	adds.w	ip, r6, #1
 801a778:	f53f af6d 	bmi.w	801a656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a77c:	4567      	cmp	r7, ip
 801a77e:	f6ff af6a 	blt.w	801a656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a782:	b23f      	sxth	r7, r7
 801a784:	b212      	sxth	r2, r2
 801a786:	9701      	str	r7, [sp, #4]
 801a788:	9200      	str	r2, [sp, #0]
 801a78a:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a78e:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a792:	4623      	mov	r3, r4
 801a794:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a796:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a79a:	f7ff fde7 	bl	801a36c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a79e:	e75a      	b.n	801a656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a7a0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a7a2:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a7a6:	1428      	asrs	r0, r5, #16
 801a7a8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a7ac:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a7b0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a7b4:	fb02 6000 	mla	r0, r2, r0, r6
 801a7b8:	9e08      	ldr	r6, [sp, #32]
 801a7ba:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a7be:	1837      	adds	r7, r6, r0
 801a7c0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a7c4:	eb04 0c08 	add.w	ip, r4, r8
 801a7c8:	2b00      	cmp	r3, #0
 801a7ca:	d060      	beq.n	801a88e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801a7cc:	787e      	ldrb	r6, [r7, #1]
 801a7ce:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a7d2:	4426      	add	r6, r4
 801a7d4:	2900      	cmp	r1, #0
 801a7d6:	d062      	beq.n	801a89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801a7d8:	18b8      	adds	r0, r7, r2
 801a7da:	5cba      	ldrb	r2, [r7, r2]
 801a7dc:	7840      	ldrb	r0, [r0, #1]
 801a7de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a7e2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a7e6:	4422      	add	r2, r4
 801a7e8:	4420      	add	r0, r4
 801a7ea:	b29b      	uxth	r3, r3
 801a7ec:	78b7      	ldrb	r7, [r6, #2]
 801a7ee:	b289      	uxth	r1, r1
 801a7f0:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a7f4:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a7f8:	fb03 f901 	mul.w	r9, r3, r1
 801a7fc:	011b      	lsls	r3, r3, #4
 801a7fe:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a802:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a806:	eba3 0309 	sub.w	r3, r3, r9
 801a80a:	b289      	uxth	r1, r1
 801a80c:	b29b      	uxth	r3, r3
 801a80e:	ebae 0e01 	sub.w	lr, lr, r1
 801a812:	435f      	muls	r7, r3
 801a814:	fa1f fe8e 	uxth.w	lr, lr
 801a818:	fb0e 770a 	mla	r7, lr, sl, r7
 801a81c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a820:	fb01 770a 	mla	r7, r1, sl, r7
 801a824:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a828:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a82c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a830:	f896 8000 	ldrb.w	r8, [r6]
 801a834:	7876      	ldrb	r6, [r6, #1]
 801a836:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a83a:	fb03 f808 	mul.w	r8, r3, r8
 801a83e:	4373      	muls	r3, r6
 801a840:	7856      	ldrb	r6, [r2, #1]
 801a842:	fb0e 8807 	mla	r8, lr, r7, r8
 801a846:	7817      	ldrb	r7, [r2, #0]
 801a848:	fb0e 330c 	mla	r3, lr, ip, r3
 801a84c:	fb01 8807 	mla	r8, r1, r7, r8
 801a850:	7807      	ldrb	r7, [r0, #0]
 801a852:	fb01 3306 	mla	r3, r1, r6, r3
 801a856:	fb09 8707 	mla	r7, r9, r7, r8
 801a85a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a85e:	ea47 070a 	orr.w	r7, r7, sl
 801a862:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a866:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a86a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a86c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a870:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a874:	ea47 070a 	orr.w	r7, r7, sl
 801a878:	f823 7b02 	strh.w	r7, [r3], #2
 801a87c:	930b      	str	r3, [sp, #44]	; 0x2c
 801a87e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a880:	449b      	add	fp, r3
 801a882:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a884:	441d      	add	r5, r3
 801a886:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a888:	3b01      	subs	r3, #1
 801a88a:	9309      	str	r3, [sp, #36]	; 0x24
 801a88c:	e714      	b.n	801a6b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801a88e:	b149      	cbz	r1, 801a8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801a890:	5cba      	ldrb	r2, [r7, r2]
 801a892:	4660      	mov	r0, ip
 801a894:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a898:	4422      	add	r2, r4
 801a89a:	4666      	mov	r6, ip
 801a89c:	e7a5      	b.n	801a7ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a89e:	4660      	mov	r0, ip
 801a8a0:	4662      	mov	r2, ip
 801a8a2:	e7a2      	b.n	801a7ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a8a4:	4660      	mov	r0, ip
 801a8a6:	4662      	mov	r2, ip
 801a8a8:	e7f7      	b.n	801a89a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801a8aa:	b00f      	add	sp, #60	; 0x3c
 801a8ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a8b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a8b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8b4:	b085      	sub	sp, #20
 801a8b6:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a8ba:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a8be:	9102      	str	r1, [sp, #8]
 801a8c0:	2c00      	cmp	r4, #0
 801a8c2:	fb04 710c 	mla	r1, r4, ip, r7
 801a8c6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a8ca:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a8ce:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a8d2:	eb02 0e01 	add.w	lr, r2, r1
 801a8d6:	f2c0 8122 	blt.w	801ab1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a8da:	45a0      	cmp	r8, r4
 801a8dc:	f340 811f 	ble.w	801ab1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a8e0:	2f00      	cmp	r7, #0
 801a8e2:	f2c0 811a 	blt.w	801ab1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a8e6:	45bc      	cmp	ip, r7
 801a8e8:	f340 8117 	ble.w	801ab1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a8ec:	5c52      	ldrb	r2, [r2, r1]
 801a8ee:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a8f2:	1c7a      	adds	r2, r7, #1
 801a8f4:	f100 8116 	bmi.w	801ab24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a8f8:	4594      	cmp	ip, r2
 801a8fa:	f340 8113 	ble.w	801ab24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a8fe:	2e00      	cmp	r6, #0
 801a900:	f000 8112 	beq.w	801ab28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a904:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a908:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a90c:	3401      	adds	r4, #1
 801a90e:	f100 810f 	bmi.w	801ab30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a912:	45a0      	cmp	r8, r4
 801a914:	f340 810c 	ble.w	801ab30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a918:	2800      	cmp	r0, #0
 801a91a:	f000 810c 	beq.w	801ab36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a91e:	2f00      	cmp	r7, #0
 801a920:	f2c0 8104 	blt.w	801ab2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a924:	45bc      	cmp	ip, r7
 801a926:	f340 8101 	ble.w	801ab2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a92a:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a92e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a932:	3701      	adds	r7, #1
 801a934:	f100 8102 	bmi.w	801ab3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a938:	45bc      	cmp	ip, r7
 801a93a:	f340 80ff 	ble.w	801ab3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a93e:	2e00      	cmp	r6, #0
 801a940:	f000 80fe 	beq.w	801ab40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a944:	44f4      	add	ip, lr
 801a946:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a94a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a94e:	b2b6      	uxth	r6, r6
 801a950:	b280      	uxth	r0, r0
 801a952:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a956:	fb00 fe06 	mul.w	lr, r0, r6
 801a95a:	0136      	lsls	r6, r6, #4
 801a95c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a960:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a964:	eba6 070e 	sub.w	r7, r6, lr
 801a968:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a96c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a970:	b280      	uxth	r0, r0
 801a972:	b2bf      	uxth	r7, r7
 801a974:	1a1b      	subs	r3, r3, r0
 801a976:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a97a:	fb0a f607 	mul.w	r6, sl, r7
 801a97e:	b29b      	uxth	r3, r3
 801a980:	fb0b 6603 	mla	r6, fp, r3, r6
 801a984:	fb00 6609 	mla	r6, r0, r9, r6
 801a988:	fb0e 6608 	mla	r6, lr, r8, r6
 801a98c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a990:	9600      	str	r6, [sp, #0]
 801a992:	2e00      	cmp	r6, #0
 801a994:	f000 80be 	beq.w	801ab14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a998:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a99c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a9a0:	9e02      	ldr	r6, [sp, #8]
 801a9a2:	fb0b fc0c 	mul.w	ip, fp, ip
 801a9a6:	fb0b f505 	mul.w	r5, fp, r5
 801a9aa:	8836      	ldrh	r6, [r6, #0]
 801a9ac:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a9b0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a9b4:	9501      	str	r5, [sp, #4]
 801a9b6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a9ba:	44dc      	add	ip, fp
 801a9bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a9c0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a9c4:	9503      	str	r5, [sp, #12]
 801a9c6:	9d01      	ldr	r5, [sp, #4]
 801a9c8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a9cc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a9d0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a9d4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a9d8:	fb0a fc0c 	mul.w	ip, sl, ip
 801a9dc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a9e0:	fb0a fa01 	mul.w	sl, sl, r1
 801a9e4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a9e8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a9ec:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a9f0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a9f4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a9f8:	4465      	add	r5, ip
 801a9fa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a9fe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aa02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa06:	fb09 fc0c 	mul.w	ip, r9, ip
 801aa0a:	0a2d      	lsrs	r5, r5, #8
 801aa0c:	fb09 f904 	mul.w	r9, r9, r4
 801aa10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa14:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801aa18:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801aa1c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801aa20:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aa24:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801aa28:	437d      	muls	r5, r7
 801aa2a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801aa2e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801aa32:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801aa36:	4461      	add	r1, ip
 801aa38:	fb08 f404 	mul.w	r4, r8, r4
 801aa3c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aa40:	fb08 f802 	mul.w	r8, r8, r2
 801aa44:	0a09      	lsrs	r1, r1, #8
 801aa46:	0a22      	lsrs	r2, r4, #8
 801aa48:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801aa4c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801aa50:	fb07 f70a 	mul.w	r7, r7, sl
 801aa54:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801aa58:	4414      	add	r4, r2
 801aa5a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801aa5e:	0a24      	lsrs	r4, r4, #8
 801aa60:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801aa64:	9a03      	ldr	r2, [sp, #12]
 801aa66:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801aa6a:	fb02 5503 	mla	r5, r2, r3, r5
 801aa6e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801aa72:	9a00      	ldr	r2, [sp, #0]
 801aa74:	fb04 540e 	mla	r4, r4, lr, r5
 801aa78:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801aa7c:	1235      	asrs	r5, r6, #8
 801aa7e:	fb01 4100 	mla	r1, r1, r0, r4
 801aa82:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801aa86:	0a09      	lsrs	r1, r1, #8
 801aa88:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801aa8c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801aa90:	fb03 7101 	mla	r1, r3, r1, r7
 801aa94:	fb0e 1e08 	mla	lr, lr, r8, r1
 801aa98:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801aa9c:	fb00 e101 	mla	r1, r0, r1, lr
 801aaa0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801aaa4:	b287      	uxth	r7, r0
 801aaa6:	0a09      	lsrs	r1, r1, #8
 801aaa8:	437a      	muls	r2, r7
 801aaaa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801aaae:	1c53      	adds	r3, r2, #1
 801aab0:	4321      	orrs	r1, r4
 801aab2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aab6:	0c0a      	lsrs	r2, r1, #16
 801aab8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801aabc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801aac0:	b2c8      	uxtb	r0, r1
 801aac2:	fb12 f207 	smulbb	r2, r2, r7
 801aac6:	fb14 f407 	smulbb	r4, r4, r7
 801aaca:	b2db      	uxtb	r3, r3
 801aacc:	fb10 f007 	smulbb	r0, r0, r7
 801aad0:	fb05 2503 	mla	r5, r5, r3, r2
 801aad4:	10f2      	asrs	r2, r6, #3
 801aad6:	00f6      	lsls	r6, r6, #3
 801aad8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801aadc:	b2ad      	uxth	r5, r5
 801aade:	b2f6      	uxtb	r6, r6
 801aae0:	fb02 4203 	mla	r2, r2, r3, r4
 801aae4:	fb06 0303 	mla	r3, r6, r3, r0
 801aae8:	b294      	uxth	r4, r2
 801aaea:	b299      	uxth	r1, r3
 801aaec:	1c6b      	adds	r3, r5, #1
 801aaee:	1c62      	adds	r2, r4, #1
 801aaf0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801aaf4:	1c4b      	adds	r3, r1, #1
 801aaf6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801aafa:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801aafe:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ab02:	0952      	lsrs	r2, r2, #5
 801ab04:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ab08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab0c:	432b      	orrs	r3, r5
 801ab0e:	4313      	orrs	r3, r2
 801ab10:	9a02      	ldr	r2, [sp, #8]
 801ab12:	8013      	strh	r3, [r2, #0]
 801ab14:	b005      	add	sp, #20
 801ab16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab1a:	2500      	movs	r5, #0
 801ab1c:	e6e9      	b.n	801a8f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ab1e:	2100      	movs	r1, #0
 801ab20:	460d      	mov	r5, r1
 801ab22:	e6f3      	b.n	801a90c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ab24:	2100      	movs	r1, #0
 801ab26:	e6f1      	b.n	801a90c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ab28:	4631      	mov	r1, r6
 801ab2a:	e6ef      	b.n	801a90c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ab2c:	2400      	movs	r4, #0
 801ab2e:	e700      	b.n	801a932 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ab30:	2200      	movs	r2, #0
 801ab32:	4614      	mov	r4, r2
 801ab34:	e70b      	b.n	801a94e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ab36:	4602      	mov	r2, r0
 801ab38:	4604      	mov	r4, r0
 801ab3a:	e708      	b.n	801a94e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ab3c:	2200      	movs	r2, #0
 801ab3e:	e706      	b.n	801a94e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ab40:	4632      	mov	r2, r6
 801ab42:	e704      	b.n	801a94e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ab44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab48:	b09f      	sub	sp, #124	; 0x7c
 801ab4a:	921b      	str	r2, [sp, #108]	; 0x6c
 801ab4c:	9309      	str	r3, [sp, #36]	; 0x24
 801ab4e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ab50:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ab54:	901d      	str	r0, [sp, #116]	; 0x74
 801ab56:	931c      	str	r3, [sp, #112]	; 0x70
 801ab58:	6850      	ldr	r0, [r2, #4]
 801ab5a:	9119      	str	r1, [sp, #100]	; 0x64
 801ab5c:	6812      	ldr	r2, [r2, #0]
 801ab5e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ab60:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ab64:	fb00 1303 	mla	r3, r0, r3, r1
 801ab68:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ab6c:	930c      	str	r3, [sp, #48]	; 0x30
 801ab6e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab70:	681b      	ldr	r3, [r3, #0]
 801ab72:	9312      	str	r3, [sp, #72]	; 0x48
 801ab74:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab76:	685e      	ldr	r6, [r3, #4]
 801ab78:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ab7c:	3604      	adds	r6, #4
 801ab7e:	930d      	str	r3, [sp, #52]	; 0x34
 801ab80:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ab82:	2b00      	cmp	r3, #0
 801ab84:	dc03      	bgt.n	801ab8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ab86:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ab88:	2b00      	cmp	r3, #0
 801ab8a:	f340 8387 	ble.w	801b29c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801ab8e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ab98:	1e48      	subs	r0, r1, #1
 801ab9a:	1e57      	subs	r7, r2, #1
 801ab9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab9e:	2b00      	cmp	r3, #0
 801aba0:	f340 8194 	ble.w	801aecc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801aba4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aba6:	142b      	asrs	r3, r5, #16
 801aba8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801abac:	d406      	bmi.n	801abbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801abae:	4584      	cmp	ip, r0
 801abb0:	da04      	bge.n	801abbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801abb2:	2b00      	cmp	r3, #0
 801abb4:	db02      	blt.n	801abbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801abb6:	42bb      	cmp	r3, r7
 801abb8:	f2c0 8189 	blt.w	801aece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801abbc:	f11c 0c01 	adds.w	ip, ip, #1
 801abc0:	f100 8177 	bmi.w	801aeb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801abc4:	4561      	cmp	r1, ip
 801abc6:	f2c0 8174 	blt.w	801aeb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801abca:	3301      	adds	r3, #1
 801abcc:	f100 8171 	bmi.w	801aeb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801abd0:	429a      	cmp	r2, r3
 801abd2:	f2c0 816e 	blt.w	801aeb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801abd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801abd8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801abda:	931a      	str	r3, [sp, #104]	; 0x68
 801abdc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801abde:	2b00      	cmp	r3, #0
 801abe0:	f340 8193 	ble.w	801af0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801abe4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801abe6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801abea:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801abee:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801abf2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801abf4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801abf8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801abfa:	141b      	asrs	r3, r3, #16
 801abfc:	f100 81d6 	bmi.w	801afac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac00:	f100 38ff 	add.w	r8, r0, #4294967295
 801ac04:	4543      	cmp	r3, r8
 801ac06:	f280 81d1 	bge.w	801afac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac0a:	f1bc 0f00 	cmp.w	ip, #0
 801ac0e:	f2c0 81cd 	blt.w	801afac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac12:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ac16:	45c4      	cmp	ip, r8
 801ac18:	f280 81c8 	bge.w	801afac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac1c:	b200      	sxth	r0, r0
 801ac1e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ac20:	fb0c 3300 	mla	r3, ip, r0, r3
 801ac24:	eb04 0803 	add.w	r8, r4, r3
 801ac28:	5ce3      	ldrb	r3, [r4, r3]
 801ac2a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ac2e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ac32:	2a00      	cmp	r2, #0
 801ac34:	f000 81af 	beq.w	801af96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ac38:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ac3c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ac40:	940e      	str	r4, [sp, #56]	; 0x38
 801ac42:	0e24      	lsrs	r4, r4, #24
 801ac44:	9415      	str	r4, [sp, #84]	; 0x54
 801ac46:	b179      	cbz	r1, 801ac68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801ac48:	eb08 0c00 	add.w	ip, r8, r0
 801ac4c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ac50:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ac54:	900a      	str	r0, [sp, #40]	; 0x28
 801ac56:	0e00      	lsrs	r0, r0, #24
 801ac58:	9013      	str	r0, [sp, #76]	; 0x4c
 801ac5a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ac5e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ac62:	900f      	str	r0, [sp, #60]	; 0x3c
 801ac64:	0e00      	lsrs	r0, r0, #24
 801ac66:	9016      	str	r0, [sp, #88]	; 0x58
 801ac68:	b292      	uxth	r2, r2
 801ac6a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ac6c:	b289      	uxth	r1, r1
 801ac6e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac70:	fb02 f901 	mul.w	r9, r2, r1
 801ac74:	0112      	lsls	r2, r2, #4
 801ac76:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ac7a:	eba2 0809 	sub.w	r8, r2, r9
 801ac7e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ac82:	b289      	uxth	r1, r1
 801ac84:	fa1f f888 	uxth.w	r8, r8
 801ac88:	1a52      	subs	r2, r2, r1
 801ac8a:	fb08 f000 	mul.w	r0, r8, r0
 801ac8e:	b292      	uxth	r2, r2
 801ac90:	fb02 000e 	mla	r0, r2, lr, r0
 801ac94:	fb01 0004 	mla	r0, r1, r4, r0
 801ac98:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ac9a:	fb09 0004 	mla	r0, r9, r4, r0
 801ac9e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801aca2:	2800      	cmp	r0, #0
 801aca4:	f000 80fa 	beq.w	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801aca8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801acac:	d01b      	beq.n	801ace6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801acae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801acb2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801acb6:	fb0e fa0a 	mul.w	sl, lr, sl
 801acba:	fb0e fe03 	mul.w	lr, lr, r3
 801acbe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801acc2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801acc6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801acca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801acce:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801acd2:	4453      	add	r3, sl
 801acd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801acd8:	0a1b      	lsrs	r3, r3, #8
 801acda:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801acde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ace2:	ea43 030c 	orr.w	r3, r3, ip
 801ace6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ace8:	2cff      	cmp	r4, #255	; 0xff
 801acea:	d021      	beq.n	801ad30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801acec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801acee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801acf2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801acf4:	fb04 fb0b 	mul.w	fp, r4, fp
 801acf8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801acfa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801acfe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ad00:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ad08:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad10:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ad14:	44de      	add	lr, fp
 801ad16:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ad1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ad22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ad2a:	ea4e 040a 	orr.w	r4, lr, sl
 801ad2e:	940e      	str	r4, [sp, #56]	; 0x38
 801ad30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad32:	2cff      	cmp	r4, #255	; 0xff
 801ad34:	d021      	beq.n	801ad7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ad36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ad38:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ad3c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad3e:	fb04 fb0b 	mul.w	fp, r4, fp
 801ad42:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ad44:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ad48:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad4a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad4e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ad52:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad5a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ad5e:	44de      	add	lr, fp
 801ad60:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ad64:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ad6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ad74:	ea4e 040a 	orr.w	r4, lr, sl
 801ad78:	940a      	str	r4, [sp, #40]	; 0x28
 801ad7a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ad7c:	2cff      	cmp	r4, #255	; 0xff
 801ad7e:	d021      	beq.n	801adc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801ad80:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ad82:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ad86:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ad88:	fb04 fb0b 	mul.w	fp, r4, fp
 801ad8c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ad8e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ad92:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ad94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ad9c:	fb04 fa0a 	mul.w	sl, r4, sl
 801ada0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ada4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ada8:	44de      	add	lr, fp
 801adaa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801adae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801adb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adb6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801adba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adbe:	ea4e 040a 	orr.w	r4, lr, sl
 801adc2:	940f      	str	r4, [sp, #60]	; 0x3c
 801adc4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801adc6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801adca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801adce:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801add2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801add4:	fb08 fc0c 	mul.w	ip, r8, ip
 801add8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801addc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ade0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ade2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ade6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801adea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801adec:	fb09 cc0e 	mla	ip, r9, lr, ip
 801adf0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801adf4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801adf6:	fb08 f80e 	mul.w	r8, r8, lr
 801adfa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801adfe:	fb02 8303 	mla	r3, r2, r3, r8
 801ae02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ae04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae08:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ae0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ae0e:	fb01 330a 	mla	r3, r1, sl, r3
 801ae12:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ae16:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ae18:	fb09 3901 	mla	r9, r9, r1, r3
 801ae1c:	883b      	ldrh	r3, [r7, #0]
 801ae1e:	4342      	muls	r2, r0
 801ae20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ae24:	1c50      	adds	r0, r2, #1
 801ae26:	1219      	asrs	r1, r3, #8
 801ae28:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ae2c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ae30:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ae34:	ea4c 0c09 	orr.w	ip, ip, r9
 801ae38:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ae3c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ae40:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ae44:	b2c0      	uxtb	r0, r0
 801ae46:	fb12 f204 	smulbb	r2, r2, r4
 801ae4a:	fa5f fc8c 	uxtb.w	ip, ip
 801ae4e:	fb1e fe04 	smulbb	lr, lr, r4
 801ae52:	fb01 2100 	mla	r1, r1, r0, r2
 801ae56:	10da      	asrs	r2, r3, #3
 801ae58:	fb1c fc04 	smulbb	ip, ip, r4
 801ae5c:	00db      	lsls	r3, r3, #3
 801ae5e:	b289      	uxth	r1, r1
 801ae60:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ae64:	b2db      	uxtb	r3, r3
 801ae66:	fb02 e200 	mla	r2, r2, r0, lr
 801ae6a:	fb03 c300 	mla	r3, r3, r0, ip
 801ae6e:	b292      	uxth	r2, r2
 801ae70:	fa1f fc83 	uxth.w	ip, r3
 801ae74:	1c4b      	adds	r3, r1, #1
 801ae76:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ae7a:	f10c 0301 	add.w	r3, ip, #1
 801ae7e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ae82:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ae86:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ae8a:	430b      	orrs	r3, r1
 801ae8c:	1c51      	adds	r1, r2, #1
 801ae8e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ae92:	0952      	lsrs	r2, r2, #5
 801ae94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ae98:	4313      	orrs	r3, r2
 801ae9a:	803b      	strh	r3, [r7, #0]
 801ae9c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ae9e:	3702      	adds	r7, #2
 801aea0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801aea2:	441a      	add	r2, r3
 801aea4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aea6:	441d      	add	r5, r3
 801aea8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801aeaa:	9229      	str	r2, [sp, #164]	; 0xa4
 801aeac:	3b01      	subs	r3, #1
 801aeae:	931a      	str	r3, [sp, #104]	; 0x68
 801aeb0:	e694      	b.n	801abdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aeb2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801aeb4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aeb6:	441c      	add	r4, r3
 801aeb8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aeba:	441d      	add	r5, r3
 801aebc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aebe:	9429      	str	r4, [sp, #164]	; 0xa4
 801aec0:	3b01      	subs	r3, #1
 801aec2:	9309      	str	r3, [sp, #36]	; 0x24
 801aec4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801aec6:	3302      	adds	r3, #2
 801aec8:	930c      	str	r3, [sp, #48]	; 0x30
 801aeca:	e667      	b.n	801ab9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801aecc:	d024      	beq.n	801af18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801aece:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aed0:	982b      	ldr	r0, [sp, #172]	; 0xac
 801aed2:	3b01      	subs	r3, #1
 801aed4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aed6:	fb00 4003 	mla	r0, r0, r3, r4
 801aeda:	1400      	asrs	r0, r0, #16
 801aedc:	f53f ae7b 	bmi.w	801abd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aee0:	3901      	subs	r1, #1
 801aee2:	4288      	cmp	r0, r1
 801aee4:	f6bf ae77 	bge.w	801abd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aee8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801aeea:	fb01 5303 	mla	r3, r1, r3, r5
 801aeee:	141b      	asrs	r3, r3, #16
 801aef0:	f53f ae71 	bmi.w	801abd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aef4:	3a01      	subs	r2, #1
 801aef6:	4293      	cmp	r3, r2
 801aef8:	f6bf ae6d 	bge.w	801abd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aefc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801af00:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801af04:	f1bb 0f00 	cmp.w	fp, #0
 801af08:	dc70      	bgt.n	801afec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801af0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af0c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801af10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801af12:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801af16:	930c      	str	r3, [sp, #48]	; 0x30
 801af18:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801af1a:	2b00      	cmp	r3, #0
 801af1c:	f340 81be 	ble.w	801b29c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801af20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801af24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af26:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af2e:	eef0 6a62 	vmov.f32	s13, s5
 801af32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af3e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801af42:	eef0 6a43 	vmov.f32	s13, s6
 801af46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af4a:	ee16 5a90 	vmov	r5, s13
 801af4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af52:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af56:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af66:	ee12 2a90 	vmov	r2, s5
 801af6a:	eef0 2a47 	vmov.f32	s5, s14
 801af6e:	fb92 f3f3 	sdiv	r3, r2, r3
 801af72:	ee13 2a10 	vmov	r2, s6
 801af76:	932b      	str	r3, [sp, #172]	; 0xac
 801af78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af7a:	eeb0 3a67 	vmov.f32	s6, s15
 801af7e:	fb92 f3f3 	sdiv	r3, r2, r3
 801af82:	932c      	str	r3, [sp, #176]	; 0xb0
 801af84:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801af86:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801af88:	3b01      	subs	r3, #1
 801af8a:	9319      	str	r3, [sp, #100]	; 0x64
 801af8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af8e:	bf08      	it	eq
 801af90:	4613      	moveq	r3, r2
 801af92:	9309      	str	r3, [sp, #36]	; 0x24
 801af94:	e5f4      	b.n	801ab80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801af96:	2900      	cmp	r1, #0
 801af98:	f43f ae66 	beq.w	801ac68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801af9c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801afa0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801afa4:	900a      	str	r0, [sp, #40]	; 0x28
 801afa6:	0e00      	lsrs	r0, r0, #24
 801afa8:	9013      	str	r0, [sp, #76]	; 0x4c
 801afaa:	e65d      	b.n	801ac68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801afac:	f113 0801 	adds.w	r8, r3, #1
 801afb0:	f53f af74 	bmi.w	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801afb4:	4540      	cmp	r0, r8
 801afb6:	f6ff af71 	blt.w	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801afba:	f11c 0801 	adds.w	r8, ip, #1
 801afbe:	f53f af6d 	bmi.w	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801afc2:	45c6      	cmp	lr, r8
 801afc4:	f6ff af6a 	blt.w	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801afc8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801afca:	b200      	sxth	r0, r0
 801afcc:	9302      	str	r3, [sp, #8]
 801afce:	fa0f f38e 	sxth.w	r3, lr
 801afd2:	9000      	str	r0, [sp, #0]
 801afd4:	9301      	str	r3, [sp, #4]
 801afd6:	4633      	mov	r3, r6
 801afd8:	981d      	ldr	r0, [sp, #116]	; 0x74
 801afda:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801afde:	e9cd c203 	strd	ip, r2, [sp, #12]
 801afe2:	4639      	mov	r1, r7
 801afe4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801afe6:	f7ff fc63 	bl	801a8b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801afea:	e757      	b.n	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801afec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801afee:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801aff2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aff4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801aff8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801affa:	1427      	asrs	r7, r4, #16
 801affc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801affe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b002:	142b      	asrs	r3, r5, #16
 801b004:	fb01 7303 	mla	r3, r1, r3, r7
 801b008:	18e7      	adds	r7, r4, r3
 801b00a:	5ce3      	ldrb	r3, [r4, r3]
 801b00c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b010:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b014:	2a00      	cmp	r2, #0
 801b016:	f000 8137 	beq.w	801b288 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801b01a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b01e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b022:	9410      	str	r4, [sp, #64]	; 0x40
 801b024:	0e24      	lsrs	r4, r4, #24
 801b026:	9417      	str	r4, [sp, #92]	; 0x5c
 801b028:	b170      	cbz	r0, 801b048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b02a:	eb07 0e01 	add.w	lr, r7, r1
 801b02e:	5c79      	ldrb	r1, [r7, r1]
 801b030:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b034:	910b      	str	r1, [sp, #44]	; 0x2c
 801b036:	0e09      	lsrs	r1, r1, #24
 801b038:	9114      	str	r1, [sp, #80]	; 0x50
 801b03a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b03e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b042:	9111      	str	r1, [sp, #68]	; 0x44
 801b044:	0e09      	lsrs	r1, r1, #24
 801b046:	9118      	str	r1, [sp, #96]	; 0x60
 801b048:	b292      	uxth	r2, r2
 801b04a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b04c:	b280      	uxth	r0, r0
 801b04e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b050:	fb02 f800 	mul.w	r8, r2, r0
 801b054:	0112      	lsls	r2, r2, #4
 801b056:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b05a:	eba2 0e08 	sub.w	lr, r2, r8
 801b05e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b062:	b280      	uxth	r0, r0
 801b064:	fa1f fe8e 	uxth.w	lr, lr
 801b068:	1a12      	subs	r2, r2, r0
 801b06a:	fb0e f101 	mul.w	r1, lr, r1
 801b06e:	b292      	uxth	r2, r2
 801b070:	fb02 110c 	mla	r1, r2, ip, r1
 801b074:	fb00 1104 	mla	r1, r0, r4, r1
 801b078:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b07a:	fb08 1104 	mla	r1, r8, r4, r1
 801b07e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b082:	2900      	cmp	r1, #0
 801b084:	f000 80f5 	beq.w	801b272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801b088:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b08c:	d019      	beq.n	801b0c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801b08e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b092:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b096:	fb0c fa0a 	mul.w	sl, ip, sl
 801b09a:	fb0c fc03 	mul.w	ip, ip, r3
 801b09e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b0a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b0a6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b0aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b0ae:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b0b2:	4453      	add	r3, sl
 801b0b4:	0a3f      	lsrs	r7, r7, #8
 801b0b6:	0a1b      	lsrs	r3, r3, #8
 801b0b8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b0bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b0c0:	433b      	orrs	r3, r7
 801b0c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b0c4:	2cff      	cmp	r4, #255	; 0xff
 801b0c6:	d020      	beq.n	801b10a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801b0c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b0ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b0ce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b0d0:	4367      	muls	r7, r4
 801b0d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b0d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b0d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b0dc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b0de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b0e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0e6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b0ea:	44bc      	add	ip, r7
 801b0ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b0f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b0f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b100:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b104:	ea4c 040a 	orr.w	r4, ip, sl
 801b108:	9410      	str	r4, [sp, #64]	; 0x40
 801b10a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b10c:	2cff      	cmp	r4, #255	; 0xff
 801b10e:	d020      	beq.n	801b152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801b110:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b112:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b116:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b118:	4367      	muls	r7, r4
 801b11a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b11c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b120:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b124:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b126:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b12a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b12e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b132:	44bc      	add	ip, r7
 801b134:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b13c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b140:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b144:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b148:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b14c:	ea4c 040a 	orr.w	r4, ip, sl
 801b150:	940b      	str	r4, [sp, #44]	; 0x2c
 801b152:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b154:	2cff      	cmp	r4, #255	; 0xff
 801b156:	d020      	beq.n	801b19a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801b158:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b15a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b15e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b160:	4367      	muls	r7, r4
 801b162:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b164:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b168:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b16c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b16e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b172:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b176:	fb04 fa0a 	mul.w	sl, r4, sl
 801b17a:	44bc      	add	ip, r7
 801b17c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b180:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b184:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b188:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b18c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b190:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b194:	ea4c 040a 	orr.w	r4, ip, sl
 801b198:	9411      	str	r4, [sp, #68]	; 0x44
 801b19a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b19c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b1a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b1a4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b1a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b1aa:	fb0e f707 	mul.w	r7, lr, r7
 801b1ae:	fb02 770c 	mla	r7, r2, ip, r7
 801b1b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b1b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b1b8:	fb00 770c 	mla	r7, r0, ip, r7
 801b1bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b1c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b1c2:	fb08 770c 	mla	r7, r8, ip, r7
 801b1c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b1ca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b1cc:	fb0e fe0c 	mul.w	lr, lr, ip
 801b1d0:	0a3f      	lsrs	r7, r7, #8
 801b1d2:	fb02 e303 	mla	r3, r2, r3, lr
 801b1d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b1d8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b1dc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b1e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b1e2:	fb00 330a 	mla	r3, r0, sl, r3
 801b1e6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b1ea:	f8b9 0000 	ldrh.w	r0, [r9]
 801b1ee:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b1f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b1f4:	1202      	asrs	r2, r0, #8
 801b1f6:	434b      	muls	r3, r1
 801b1f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b200:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b204:	1c59      	adds	r1, r3, #1
 801b206:	ea47 070c 	orr.w	r7, r7, ip
 801b20a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b20e:	0c3b      	lsrs	r3, r7, #16
 801b210:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b214:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b218:	b2ff      	uxtb	r7, r7
 801b21a:	fb13 f304 	smulbb	r3, r3, r4
 801b21e:	b2c9      	uxtb	r1, r1
 801b220:	fb1c fc04 	smulbb	ip, ip, r4
 801b224:	fb02 3201 	mla	r2, r2, r1, r3
 801b228:	10c3      	asrs	r3, r0, #3
 801b22a:	fb17 f704 	smulbb	r7, r7, r4
 801b22e:	00c0      	lsls	r0, r0, #3
 801b230:	b292      	uxth	r2, r2
 801b232:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b236:	b2c0      	uxtb	r0, r0
 801b238:	fb03 c301 	mla	r3, r3, r1, ip
 801b23c:	f102 0c01 	add.w	ip, r2, #1
 801b240:	fb00 7001 	mla	r0, r0, r1, r7
 801b244:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b248:	b280      	uxth	r0, r0
 801b24a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b24e:	b29b      	uxth	r3, r3
 801b250:	1c42      	adds	r2, r0, #1
 801b252:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b256:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b25a:	ea42 020c 	orr.w	r2, r2, ip
 801b25e:	f103 0c01 	add.w	ip, r3, #1
 801b262:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b266:	095b      	lsrs	r3, r3, #5
 801b268:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b26c:	431a      	orrs	r2, r3
 801b26e:	f8a9 2000 	strh.w	r2, [r9]
 801b272:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b274:	f109 0902 	add.w	r9, r9, #2
 801b278:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b27a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b27e:	441a      	add	r2, r3
 801b280:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b282:	9229      	str	r2, [sp, #164]	; 0xa4
 801b284:	441d      	add	r5, r3
 801b286:	e63d      	b.n	801af04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b288:	2800      	cmp	r0, #0
 801b28a:	f43f aedd 	beq.w	801b048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b28e:	5c79      	ldrb	r1, [r7, r1]
 801b290:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b294:	910b      	str	r1, [sp, #44]	; 0x2c
 801b296:	0e09      	lsrs	r1, r1, #24
 801b298:	9114      	str	r1, [sp, #80]	; 0x50
 801b29a:	e6d5      	b.n	801b048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b29c:	b01f      	add	sp, #124	; 0x7c
 801b29e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b2a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2a6:	b089      	sub	sp, #36	; 0x24
 801b2a8:	9101      	str	r1, [sp, #4]
 801b2aa:	9801      	ldr	r0, [sp, #4]
 801b2ac:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b2b0:	8800      	ldrh	r0, [r0, #0]
 801b2b2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b2b6:	1206      	asrs	r6, r0, #8
 801b2b8:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b2bc:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b2c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b2c4:	9602      	str	r6, [sp, #8]
 801b2c6:	10c6      	asrs	r6, r0, #3
 801b2c8:	00c0      	lsls	r0, r0, #3
 801b2ca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b2ce:	b2c0      	uxtb	r0, r0
 801b2d0:	9603      	str	r6, [sp, #12]
 801b2d2:	9004      	str	r0, [sp, #16]
 801b2d4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b2d8:	fb07 100c 	mla	r0, r7, ip, r1
 801b2dc:	2f00      	cmp	r7, #0
 801b2de:	eb02 0e00 	add.w	lr, r2, r0
 801b2e2:	f2c0 810a 	blt.w	801b4fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b2e6:	45b8      	cmp	r8, r7
 801b2e8:	f340 8107 	ble.w	801b4fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b2ec:	2900      	cmp	r1, #0
 801b2ee:	f2c0 8102 	blt.w	801b4f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b2f2:	458c      	cmp	ip, r1
 801b2f4:	f340 80ff 	ble.w	801b4f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b2f8:	5c12      	ldrb	r2, [r2, r0]
 801b2fa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b2fe:	1c4a      	adds	r2, r1, #1
 801b300:	f100 80fe 	bmi.w	801b500 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b304:	4594      	cmp	ip, r2
 801b306:	f340 80fb 	ble.w	801b500 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b30a:	2d00      	cmp	r5, #0
 801b30c:	f000 80fa 	beq.w	801b504 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b310:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b314:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b318:	3701      	adds	r7, #1
 801b31a:	f100 80f7 	bmi.w	801b50c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b31e:	45b8      	cmp	r8, r7
 801b320:	f340 80f4 	ble.w	801b50c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b324:	2c00      	cmp	r4, #0
 801b326:	f000 80f4 	beq.w	801b512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b32a:	2900      	cmp	r1, #0
 801b32c:	eb0e 020c 	add.w	r2, lr, ip
 801b330:	f2c0 80ea 	blt.w	801b508 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b334:	458c      	cmp	ip, r1
 801b336:	f340 80e7 	ble.w	801b508 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b33a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b33e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b342:	3101      	adds	r1, #1
 801b344:	f100 80e8 	bmi.w	801b518 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b348:	458c      	cmp	ip, r1
 801b34a:	f340 80e5 	ble.w	801b518 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b34e:	2d00      	cmp	r5, #0
 801b350:	f000 80e4 	beq.w	801b51c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b354:	7852      	ldrb	r2, [r2, #1]
 801b356:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b35a:	0e0b      	lsrs	r3, r1, #24
 801b35c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b360:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b364:	9300      	str	r3, [sp, #0]
 801b366:	b2a4      	uxth	r4, r4
 801b368:	b2ab      	uxth	r3, r5
 801b36a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b36e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b372:	fb03 f904 	mul.w	r9, r3, r4
 801b376:	011b      	lsls	r3, r3, #4
 801b378:	fb0a f505 	mul.w	r5, sl, r5
 801b37c:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b380:	eba3 0e09 	sub.w	lr, r3, r9
 801b384:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b388:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b38c:	0a28      	lsrs	r0, r5, #8
 801b38e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b392:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b396:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b39a:	fb0a f303 	mul.w	r3, sl, r3
 801b39e:	fb08 f707 	mul.w	r7, r8, r7
 801b3a2:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b3a6:	4405      	add	r5, r0
 801b3a8:	fb08 fc0c 	mul.w	ip, r8, ip
 801b3ac:	b2a4      	uxth	r4, r4
 801b3ae:	0a2d      	lsrs	r5, r5, #8
 801b3b0:	fa1f fe8e 	uxth.w	lr, lr
 801b3b4:	1b12      	subs	r2, r2, r4
 801b3b6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b3ba:	b292      	uxth	r2, r2
 801b3bc:	9005      	str	r0, [sp, #20]
 801b3be:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b3c2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b3c6:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b3ca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b3ce:	0a1b      	lsrs	r3, r3, #8
 801b3d0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b3d4:	9306      	str	r3, [sp, #24]
 801b3d6:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b3da:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b3de:	4460      	add	r0, ip
 801b3e0:	fb0b f303 	mul.w	r3, fp, r3
 801b3e4:	fb0b f606 	mul.w	r6, fp, r6
 801b3e8:	0a00      	lsrs	r0, r0, #8
 801b3ea:	0a1d      	lsrs	r5, r3, #8
 801b3ec:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b3f0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b3f4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b3f8:	441d      	add	r5, r3
 801b3fa:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b3fe:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b402:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b406:	0a2d      	lsrs	r5, r5, #8
 801b408:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b40c:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b410:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b414:	0a36      	lsrs	r6, r6, #8
 801b416:	0a1b      	lsrs	r3, r3, #8
 801b418:	fb05 f50e 	mul.w	r5, r5, lr
 801b41c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b420:	9307      	str	r3, [sp, #28]
 801b422:	0e0b      	lsrs	r3, r1, #24
 801b424:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b428:	fb0e f606 	mul.w	r6, lr, r6
 801b42c:	435f      	muls	r7, r3
 801b42e:	4359      	muls	r1, r3
 801b430:	9b05      	ldr	r3, [sp, #20]
 801b432:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b436:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b43a:	fb03 5502 	mla	r5, r3, r2, r5
 801b43e:	9b06      	ldr	r3, [sp, #24]
 801b440:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b444:	fb0e fe0b 	mul.w	lr, lr, fp
 801b448:	44bc      	add	ip, r7
 801b44a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b44e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b452:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b456:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b45a:	0a09      	lsrs	r1, r1, #8
 801b45c:	fb0c 5509 	mla	r5, ip, r9, r5
 801b460:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b464:	fb00 5504 	mla	r5, r0, r4, r5
 801b468:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b46c:	9b07      	ldr	r3, [sp, #28]
 801b46e:	fb02 6000 	mla	r0, r2, r0, r6
 801b472:	0a2d      	lsrs	r5, r5, #8
 801b474:	fb02 e20a 	mla	r2, r2, sl, lr
 801b478:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b47c:	fb09 0001 	mla	r0, r9, r1, r0
 801b480:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b484:	fb04 0003 	mla	r0, r4, r3, r0
 801b488:	9b00      	ldr	r3, [sp, #0]
 801b48a:	fb04 2408 	mla	r4, r4, r8, r2
 801b48e:	9a04      	ldr	r2, [sp, #16]
 801b490:	0a00      	lsrs	r0, r0, #8
 801b492:	fb09 4903 	mla	r9, r9, r3, r4
 801b496:	9b02      	ldr	r3, [sp, #8]
 801b498:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b49c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b4a0:	4305      	orrs	r5, r0
 801b4a2:	fa5f f989 	uxtb.w	r9, r9
 801b4a6:	fb03 f109 	mul.w	r1, r3, r9
 801b4aa:	9b03      	ldr	r3, [sp, #12]
 801b4ac:	fb03 f309 	mul.w	r3, r3, r9
 801b4b0:	fb02 f909 	mul.w	r9, r2, r9
 801b4b4:	1c4a      	adds	r2, r1, #1
 801b4b6:	1c58      	adds	r0, r3, #1
 801b4b8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b4bc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b4c0:	0c2a      	lsrs	r2, r5, #16
 801b4c2:	0a2b      	lsrs	r3, r5, #8
 801b4c4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b4c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b4cc:	0212      	lsls	r2, r2, #8
 801b4ce:	00db      	lsls	r3, r3, #3
 801b4d0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b4d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b4d8:	4313      	orrs	r3, r2
 801b4da:	f109 0201 	add.w	r2, r9, #1
 801b4de:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b4e2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b4e6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b4ea:	431d      	orrs	r5, r3
 801b4ec:	9b01      	ldr	r3, [sp, #4]
 801b4ee:	801d      	strh	r5, [r3, #0]
 801b4f0:	b009      	add	sp, #36	; 0x24
 801b4f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4f6:	2000      	movs	r0, #0
 801b4f8:	e701      	b.n	801b2fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b4fa:	2600      	movs	r6, #0
 801b4fc:	4630      	mov	r0, r6
 801b4fe:	e70b      	b.n	801b318 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b500:	2600      	movs	r6, #0
 801b502:	e709      	b.n	801b318 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b504:	462e      	mov	r6, r5
 801b506:	e707      	b.n	801b318 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b508:	2700      	movs	r7, #0
 801b50a:	e71a      	b.n	801b342 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b50c:	2100      	movs	r1, #0
 801b50e:	460f      	mov	r7, r1
 801b510:	e723      	b.n	801b35a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b512:	4621      	mov	r1, r4
 801b514:	4627      	mov	r7, r4
 801b516:	e720      	b.n	801b35a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b518:	2100      	movs	r1, #0
 801b51a:	e71e      	b.n	801b35a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b51c:	4629      	mov	r1, r5
 801b51e:	e71c      	b.n	801b35a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b520 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b524:	b09b      	sub	sp, #108	; 0x6c
 801b526:	9218      	str	r2, [sp, #96]	; 0x60
 801b528:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b52a:	9019      	str	r0, [sp, #100]	; 0x64
 801b52c:	9116      	str	r1, [sp, #88]	; 0x58
 801b52e:	6850      	ldr	r0, [r2, #4]
 801b530:	9307      	str	r3, [sp, #28]
 801b532:	6812      	ldr	r2, [r2, #0]
 801b534:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b536:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b53a:	fb00 1303 	mla	r3, r0, r3, r1
 801b53e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b542:	930a      	str	r3, [sp, #40]	; 0x28
 801b544:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b546:	681b      	ldr	r3, [r3, #0]
 801b548:	930f      	str	r3, [sp, #60]	; 0x3c
 801b54a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b54c:	685e      	ldr	r6, [r3, #4]
 801b54e:	3604      	adds	r6, #4
 801b550:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b552:	2b00      	cmp	r3, #0
 801b554:	dc03      	bgt.n	801b55e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b556:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b558:	2b00      	cmp	r3, #0
 801b55a:	f340 8373 	ble.w	801bc44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b55e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b560:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b564:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b568:	1e48      	subs	r0, r1, #1
 801b56a:	1e57      	subs	r7, r2, #1
 801b56c:	9b07      	ldr	r3, [sp, #28]
 801b56e:	2b00      	cmp	r3, #0
 801b570:	f340 818f 	ble.w	801b892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801b574:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b576:	142b      	asrs	r3, r5, #16
 801b578:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b57c:	d406      	bmi.n	801b58c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b57e:	4584      	cmp	ip, r0
 801b580:	da04      	bge.n	801b58c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b582:	2b00      	cmp	r3, #0
 801b584:	db02      	blt.n	801b58c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b586:	42bb      	cmp	r3, r7
 801b588:	f2c0 8184 	blt.w	801b894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b58c:	f11c 0c01 	adds.w	ip, ip, #1
 801b590:	f100 8172 	bmi.w	801b878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b594:	4561      	cmp	r1, ip
 801b596:	f2c0 816f 	blt.w	801b878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b59a:	3301      	adds	r3, #1
 801b59c:	f100 816c 	bmi.w	801b878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b5a0:	429a      	cmp	r2, r3
 801b5a2:	f2c0 8169 	blt.w	801b878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b5a6:	9b07      	ldr	r3, [sp, #28]
 801b5a8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b5aa:	9317      	str	r3, [sp, #92]	; 0x5c
 801b5ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b5ae:	2b00      	cmp	r3, #0
 801b5b0:	f340 818e 	ble.w	801b8d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801b5b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b5b6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b5ba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b5be:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b5c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5c4:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b5c8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b5ca:	141b      	asrs	r3, r3, #16
 801b5cc:	f100 81d1 	bmi.w	801b972 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b5d0:	f101 38ff 	add.w	r8, r1, #4294967295
 801b5d4:	4543      	cmp	r3, r8
 801b5d6:	f280 81cc 	bge.w	801b972 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b5da:	f1bc 0f00 	cmp.w	ip, #0
 801b5de:	f2c0 81c8 	blt.w	801b972 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b5e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b5e6:	45c4      	cmp	ip, r8
 801b5e8:	f280 81c3 	bge.w	801b972 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b5ec:	b209      	sxth	r1, r1
 801b5ee:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b5f0:	fb0c 3301 	mla	r3, ip, r1, r3
 801b5f4:	eb04 0803 	add.w	r8, r4, r3
 801b5f8:	5ce3      	ldrb	r3, [r4, r3]
 801b5fa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b5fe:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b602:	2a00      	cmp	r2, #0
 801b604:	f000 81aa 	beq.w	801b95c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801b608:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b60c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b610:	940b      	str	r4, [sp, #44]	; 0x2c
 801b612:	0e24      	lsrs	r4, r4, #24
 801b614:	9412      	str	r4, [sp, #72]	; 0x48
 801b616:	b178      	cbz	r0, 801b638 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801b618:	eb08 0c01 	add.w	ip, r8, r1
 801b61c:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b620:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b624:	9108      	str	r1, [sp, #32]
 801b626:	0e09      	lsrs	r1, r1, #24
 801b628:	9110      	str	r1, [sp, #64]	; 0x40
 801b62a:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b62e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b632:	910c      	str	r1, [sp, #48]	; 0x30
 801b634:	0e09      	lsrs	r1, r1, #24
 801b636:	9113      	str	r1, [sp, #76]	; 0x4c
 801b638:	b292      	uxth	r2, r2
 801b63a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b63c:	b280      	uxth	r0, r0
 801b63e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b640:	fb02 f900 	mul.w	r9, r2, r0
 801b644:	0112      	lsls	r2, r2, #4
 801b646:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b64a:	eba2 0809 	sub.w	r8, r2, r9
 801b64e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b652:	b280      	uxth	r0, r0
 801b654:	fa1f f888 	uxth.w	r8, r8
 801b658:	1a12      	subs	r2, r2, r0
 801b65a:	fb08 f101 	mul.w	r1, r8, r1
 801b65e:	b292      	uxth	r2, r2
 801b660:	fb02 110e 	mla	r1, r2, lr, r1
 801b664:	fb00 1104 	mla	r1, r0, r4, r1
 801b668:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b66a:	fb09 1104 	mla	r1, r9, r4, r1
 801b66e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b672:	2900      	cmp	r1, #0
 801b674:	f000 80f5 	beq.w	801b862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b678:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b67c:	d01b      	beq.n	801b6b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b67e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b682:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b686:	fb0e fa0a 	mul.w	sl, lr, sl
 801b68a:	fb0e fe03 	mul.w	lr, lr, r3
 801b68e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b692:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b696:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b69a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b69e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b6a2:	4453      	add	r3, sl
 801b6a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6a8:	0a1b      	lsrs	r3, r3, #8
 801b6aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b6ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b6b2:	ea43 030c 	orr.w	r3, r3, ip
 801b6b6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b6b8:	2cff      	cmp	r4, #255	; 0xff
 801b6ba:	d021      	beq.n	801b700 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b6bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b6be:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b6c2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b6c4:	fb04 fb0b 	mul.w	fp, r4, fp
 801b6c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b6ca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b6ce:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b6d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b6d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b6d8:	fb04 fa0a 	mul.w	sl, r4, sl
 801b6dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b6e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b6e4:	44de      	add	lr, fp
 801b6e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b6ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b6ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b6f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b6f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b6fa:	ea4e 040a 	orr.w	r4, lr, sl
 801b6fe:	940b      	str	r4, [sp, #44]	; 0x2c
 801b700:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b702:	2cff      	cmp	r4, #255	; 0xff
 801b704:	d021      	beq.n	801b74a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b706:	9c08      	ldr	r4, [sp, #32]
 801b708:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b70c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b70e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b712:	9c08      	ldr	r4, [sp, #32]
 801b714:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b718:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b71a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b71e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b722:	fb04 fa0a 	mul.w	sl, r4, sl
 801b726:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b72a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b72e:	44de      	add	lr, fp
 801b730:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b734:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b738:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b73c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b740:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b744:	ea4e 040a 	orr.w	r4, lr, sl
 801b748:	9408      	str	r4, [sp, #32]
 801b74a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b74c:	2cff      	cmp	r4, #255	; 0xff
 801b74e:	d021      	beq.n	801b794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b750:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b752:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b756:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b758:	fb04 fb0b 	mul.w	fp, r4, fp
 801b75c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b75e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b762:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b764:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b768:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b76c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b770:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b774:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b778:	44de      	add	lr, fp
 801b77a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b77e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b782:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b786:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b78a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b78e:	ea4e 040a 	orr.w	r4, lr, sl
 801b792:	940c      	str	r4, [sp, #48]	; 0x30
 801b794:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b796:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b79a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b79e:	43c9      	mvns	r1, r1
 801b7a0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b7a4:	9c08      	ldr	r4, [sp, #32]
 801b7a6:	fb08 fc0c 	mul.w	ip, r8, ip
 801b7aa:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b7ae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b7b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b7b4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b7b8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b7bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7be:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b7c2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b7c6:	fb08 f80e 	mul.w	r8, r8, lr
 801b7ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7ce:	fa5f fe81 	uxtb.w	lr, r1
 801b7d2:	fb02 8303 	mla	r3, r2, r3, r8
 801b7d6:	9a08      	ldr	r2, [sp, #32]
 801b7d8:	f8b7 8000 	ldrh.w	r8, [r7]
 801b7dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7e0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b7e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b7e6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b7ea:	fb00 330a 	mla	r3, r0, sl, r3
 801b7ee:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b7f2:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b7f6:	fb09 3900 	mla	r9, r9, r0, r3
 801b7fa:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b7fe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b802:	b2c9      	uxtb	r1, r1
 801b804:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b808:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b80c:	fb02 f20e 	mul.w	r2, r2, lr
 801b810:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b814:	fb00 f00e 	mul.w	r0, r0, lr
 801b818:	1c53      	adds	r3, r2, #1
 801b81a:	fb01 f10e 	mul.w	r1, r1, lr
 801b81e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b822:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b826:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b82a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b82e:	4a60      	ldr	r2, [pc, #384]	; (801b9b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b830:	b2db      	uxtb	r3, r3
 801b832:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b836:	1c43      	adds	r3, r0, #1
 801b838:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b83c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b840:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b844:	00db      	lsls	r3, r3, #3
 801b846:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b84a:	4313      	orrs	r3, r2
 801b84c:	1c4a      	adds	r2, r1, #1
 801b84e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b852:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b856:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b85a:	ea4c 0c03 	orr.w	ip, ip, r3
 801b85e:	f8a7 c000 	strh.w	ip, [r7]
 801b862:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b864:	3702      	adds	r7, #2
 801b866:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b868:	441a      	add	r2, r3
 801b86a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b86c:	441d      	add	r5, r3
 801b86e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b870:	9225      	str	r2, [sp, #148]	; 0x94
 801b872:	3b01      	subs	r3, #1
 801b874:	9317      	str	r3, [sp, #92]	; 0x5c
 801b876:	e699      	b.n	801b5ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b878:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b87a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b87c:	441c      	add	r4, r3
 801b87e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b880:	441d      	add	r5, r3
 801b882:	9b07      	ldr	r3, [sp, #28]
 801b884:	9425      	str	r4, [sp, #148]	; 0x94
 801b886:	3b01      	subs	r3, #1
 801b888:	9307      	str	r3, [sp, #28]
 801b88a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b88c:	3302      	adds	r3, #2
 801b88e:	930a      	str	r3, [sp, #40]	; 0x28
 801b890:	e66c      	b.n	801b56c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b892:	d024      	beq.n	801b8de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801b894:	9b07      	ldr	r3, [sp, #28]
 801b896:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b898:	3b01      	subs	r3, #1
 801b89a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b89c:	fb00 4003 	mla	r0, r0, r3, r4
 801b8a0:	1400      	asrs	r0, r0, #16
 801b8a2:	f53f ae80 	bmi.w	801b5a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8a6:	3901      	subs	r1, #1
 801b8a8:	4288      	cmp	r0, r1
 801b8aa:	f6bf ae7c 	bge.w	801b5a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8ae:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b8b0:	fb01 5303 	mla	r3, r1, r3, r5
 801b8b4:	141b      	asrs	r3, r3, #16
 801b8b6:	f53f ae76 	bmi.w	801b5a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8ba:	3a01      	subs	r2, #1
 801b8bc:	4293      	cmp	r3, r2
 801b8be:	f6bf ae72 	bge.w	801b5a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8c2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b8c6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b8ca:	f1bb 0f00 	cmp.w	fp, #0
 801b8ce:	dc71      	bgt.n	801b9b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b8d0:	9b07      	ldr	r3, [sp, #28]
 801b8d2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b8d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b8d8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b8dc:	930a      	str	r3, [sp, #40]	; 0x28
 801b8de:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b8e0:	2b00      	cmp	r3, #0
 801b8e2:	f340 81af 	ble.w	801bc44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b8e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b8ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b8ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b8f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b8f4:	eef0 6a62 	vmov.f32	s13, s5
 801b8f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b8fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b900:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b904:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801b908:	eef0 6a43 	vmov.f32	s13, s6
 801b90c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b910:	ee16 5a90 	vmov	r5, s13
 801b914:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b918:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b91c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b920:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b924:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b928:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b92c:	ee12 2a90 	vmov	r2, s5
 801b930:	eef0 2a47 	vmov.f32	s5, s14
 801b934:	fb92 f3f3 	sdiv	r3, r2, r3
 801b938:	ee13 2a10 	vmov	r2, s6
 801b93c:	9327      	str	r3, [sp, #156]	; 0x9c
 801b93e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b940:	eeb0 3a67 	vmov.f32	s6, s15
 801b944:	fb92 f3f3 	sdiv	r3, r2, r3
 801b948:	9328      	str	r3, [sp, #160]	; 0xa0
 801b94a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b94c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b94e:	3b01      	subs	r3, #1
 801b950:	9316      	str	r3, [sp, #88]	; 0x58
 801b952:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b954:	bf08      	it	eq
 801b956:	4613      	moveq	r3, r2
 801b958:	9307      	str	r3, [sp, #28]
 801b95a:	e5f9      	b.n	801b550 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b95c:	2800      	cmp	r0, #0
 801b95e:	f43f ae6b 	beq.w	801b638 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801b962:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b966:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b96a:	9108      	str	r1, [sp, #32]
 801b96c:	0e09      	lsrs	r1, r1, #24
 801b96e:	9110      	str	r1, [sp, #64]	; 0x40
 801b970:	e662      	b.n	801b638 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801b972:	f113 0801 	adds.w	r8, r3, #1
 801b976:	f53f af74 	bmi.w	801b862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b97a:	4541      	cmp	r1, r8
 801b97c:	f6ff af71 	blt.w	801b862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b980:	f11c 0801 	adds.w	r8, ip, #1
 801b984:	f53f af6d 	bmi.w	801b862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b988:	45c6      	cmp	lr, r8
 801b98a:	f6ff af6a 	blt.w	801b862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b98e:	b209      	sxth	r1, r1
 801b990:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b994:	fa0f f38e 	sxth.w	r3, lr
 801b998:	9100      	str	r1, [sp, #0]
 801b99a:	4639      	mov	r1, r7
 801b99c:	9301      	str	r3, [sp, #4]
 801b99e:	4633      	mov	r3, r6
 801b9a0:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b9a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b9a6:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b9a8:	f7ff fc7b 	bl	801b2a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b9ac:	e759      	b.n	801b862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b9ae:	bf00      	nop
 801b9b0:	fffff800 	.word	0xfffff800
 801b9b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b9b6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b9ba:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b9bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b9c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b9c2:	1427      	asrs	r7, r4, #16
 801b9c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b9c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b9ca:	142b      	asrs	r3, r5, #16
 801b9cc:	fb01 7303 	mla	r3, r1, r3, r7
 801b9d0:	18e7      	adds	r7, r4, r3
 801b9d2:	5ce3      	ldrb	r3, [r4, r3]
 801b9d4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b9d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b9dc:	2a00      	cmp	r2, #0
 801b9de:	f000 8127 	beq.w	801bc30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b9e2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b9e6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b9ea:	940d      	str	r4, [sp, #52]	; 0x34
 801b9ec:	0e24      	lsrs	r4, r4, #24
 801b9ee:	9414      	str	r4, [sp, #80]	; 0x50
 801b9f0:	b170      	cbz	r0, 801ba10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b9f2:	eb07 0e01 	add.w	lr, r7, r1
 801b9f6:	5c79      	ldrb	r1, [r7, r1]
 801b9f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b9fc:	9109      	str	r1, [sp, #36]	; 0x24
 801b9fe:	0e09      	lsrs	r1, r1, #24
 801ba00:	9111      	str	r1, [sp, #68]	; 0x44
 801ba02:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ba06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba0a:	910e      	str	r1, [sp, #56]	; 0x38
 801ba0c:	0e09      	lsrs	r1, r1, #24
 801ba0e:	9115      	str	r1, [sp, #84]	; 0x54
 801ba10:	b292      	uxth	r2, r2
 801ba12:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ba14:	b280      	uxth	r0, r0
 801ba16:	fb02 f800 	mul.w	r8, r2, r0
 801ba1a:	0112      	lsls	r2, r2, #4
 801ba1c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ba20:	eba2 0e08 	sub.w	lr, r2, r8
 801ba24:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ba28:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba2a:	b280      	uxth	r0, r0
 801ba2c:	fa1f fe8e 	uxth.w	lr, lr
 801ba30:	1a09      	subs	r1, r1, r0
 801ba32:	fb0e f202 	mul.w	r2, lr, r2
 801ba36:	b289      	uxth	r1, r1
 801ba38:	fb01 220c 	mla	r2, r1, ip, r2
 801ba3c:	fb00 2204 	mla	r2, r0, r4, r2
 801ba40:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ba42:	fb08 2204 	mla	r2, r8, r4, r2
 801ba46:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ba4a:	2a00      	cmp	r2, #0
 801ba4c:	f000 80e5 	beq.w	801bc1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801ba50:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ba54:	d019      	beq.n	801ba8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801ba56:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ba5a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ba5e:	fb0c fa0a 	mul.w	sl, ip, sl
 801ba62:	fb0c fc03 	mul.w	ip, ip, r3
 801ba66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ba6a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ba6e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ba72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ba76:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ba7a:	4453      	add	r3, sl
 801ba7c:	0a3f      	lsrs	r7, r7, #8
 801ba7e:	0a1b      	lsrs	r3, r3, #8
 801ba80:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ba84:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ba88:	433b      	orrs	r3, r7
 801ba8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba8c:	2cff      	cmp	r4, #255	; 0xff
 801ba8e:	d020      	beq.n	801bad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801ba90:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ba92:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ba96:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba98:	4367      	muls	r7, r4
 801ba9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ba9c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801baa0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801baa4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801baa6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801baaa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801baae:	fb04 fa0a 	mul.w	sl, r4, sl
 801bab2:	44bc      	add	ip, r7
 801bab4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bab8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801babc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bac0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bac4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bac8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bacc:	ea4c 040a 	orr.w	r4, ip, sl
 801bad0:	940d      	str	r4, [sp, #52]	; 0x34
 801bad2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bad4:	2cff      	cmp	r4, #255	; 0xff
 801bad6:	d020      	beq.n	801bb1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bad8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bada:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bade:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bae0:	4367      	muls	r7, r4
 801bae2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bae4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bae8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801baec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801baee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801baf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801baf6:	fb04 fa0a 	mul.w	sl, r4, sl
 801bafa:	44bc      	add	ip, r7
 801bafc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb14:	ea4c 040a 	orr.w	r4, ip, sl
 801bb18:	9409      	str	r4, [sp, #36]	; 0x24
 801bb1a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb1c:	2cff      	cmp	r4, #255	; 0xff
 801bb1e:	d020      	beq.n	801bb62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bb20:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bb22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb26:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb28:	4367      	muls	r7, r4
 801bb2a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bb2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb30:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bb34:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb3e:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb42:	44bc      	add	ip, r7
 801bb44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb5c:	ea4c 040a 	orr.w	r4, ip, sl
 801bb60:	940e      	str	r4, [sp, #56]	; 0x38
 801bb62:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bb64:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bb68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bb6c:	43d2      	mvns	r2, r2
 801bb6e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb72:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bb74:	b2d2      	uxtb	r2, r2
 801bb76:	fb0e f707 	mul.w	r7, lr, r7
 801bb7a:	fb01 770c 	mla	r7, r1, ip, r7
 801bb7e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bb82:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bb84:	fb00 770c 	mla	r7, r0, ip, r7
 801bb88:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bb8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bb8e:	fb08 770c 	mla	r7, r8, ip, r7
 801bb92:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bb96:	fb0e fe0c 	mul.w	lr, lr, ip
 801bb9a:	0a3f      	lsrs	r7, r7, #8
 801bb9c:	fb01 e303 	mla	r3, r1, r3, lr
 801bba0:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bba2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bba6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bbaa:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bbac:	fb00 330a 	mla	r3, r0, sl, r3
 801bbb0:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bbb4:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bbb8:	f8b9 3000 	ldrh.w	r3, [r9]
 801bbbc:	1218      	asrs	r0, r3, #8
 801bbbe:	10d9      	asrs	r1, r3, #3
 801bbc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbc4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bbc8:	00db      	lsls	r3, r3, #3
 801bbca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bbce:	4350      	muls	r0, r2
 801bbd0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bbd4:	b2db      	uxtb	r3, r3
 801bbd6:	4351      	muls	r1, r2
 801bbd8:	ea47 070c 	orr.w	r7, r7, ip
 801bbdc:	4353      	muls	r3, r2
 801bbde:	1c42      	adds	r2, r0, #1
 801bbe0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bbe4:	0c3a      	lsrs	r2, r7, #16
 801bbe6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bbea:	4a18      	ldr	r2, [pc, #96]	; (801bc4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bbec:	b2c0      	uxtb	r0, r0
 801bbee:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bbf2:	1c4a      	adds	r2, r1, #1
 801bbf4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bbf8:	0a3a      	lsrs	r2, r7, #8
 801bbfa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bbfe:	00c9      	lsls	r1, r1, #3
 801bc00:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bc04:	4301      	orrs	r1, r0
 801bc06:	1c58      	adds	r0, r3, #1
 801bc08:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bc0c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bc10:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bc14:	4308      	orrs	r0, r1
 801bc16:	f8a9 0000 	strh.w	r0, [r9]
 801bc1a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bc1c:	f109 0902 	add.w	r9, r9, #2
 801bc20:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bc22:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bc26:	441a      	add	r2, r3
 801bc28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc2a:	9225      	str	r2, [sp, #148]	; 0x94
 801bc2c:	441d      	add	r5, r3
 801bc2e:	e64c      	b.n	801b8ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801bc30:	2800      	cmp	r0, #0
 801bc32:	f43f aeed 	beq.w	801ba10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bc36:	5c79      	ldrb	r1, [r7, r1]
 801bc38:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc3c:	9109      	str	r1, [sp, #36]	; 0x24
 801bc3e:	0e09      	lsrs	r1, r1, #24
 801bc40:	9111      	str	r1, [sp, #68]	; 0x44
 801bc42:	e6e5      	b.n	801ba10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bc44:	b01b      	add	sp, #108	; 0x6c
 801bc46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc4a:	bf00      	nop
 801bc4c:	fffff800 	.word	0xfffff800

0801bc50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bc50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc54:	b085      	sub	sp, #20
 801bc56:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bc5a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bc5e:	2800      	cmp	r0, #0
 801bc60:	9103      	str	r1, [sp, #12]
 801bc62:	fb00 7406 	mla	r4, r0, r6, r7
 801bc66:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bc6a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bc6e:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bc72:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bc76:	eb03 0904 	add.w	r9, r3, r4
 801bc7a:	9501      	str	r5, [sp, #4]
 801bc7c:	f2c0 8150 	blt.w	801bf20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bc80:	4583      	cmp	fp, r0
 801bc82:	f340 814d 	ble.w	801bf20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bc86:	2f00      	cmp	r7, #0
 801bc88:	f2c0 8146 	blt.w	801bf18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bc8c:	42be      	cmp	r6, r7
 801bc8e:	f340 8143 	ble.w	801bf18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bc92:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bc96:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bc9a:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bc9e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bca2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bca6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bcaa:	4355      	muls	r5, r2
 801bcac:	fb0c f203 	mul.w	r2, ip, r3
 801bcb0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bcb4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bcb8:	441d      	add	r5, r3
 801bcba:	f102 0320 	add.w	r3, r2, #32
 801bcbe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bcc2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bcc6:	0a1b      	lsrs	r3, r3, #8
 801bcc8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bccc:	431c      	orrs	r4, r3
 801bcce:	1c7b      	adds	r3, r7, #1
 801bcd0:	f100 812b 	bmi.w	801bf2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bcd4:	429e      	cmp	r6, r3
 801bcd6:	f340 8128 	ble.w	801bf2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bcda:	2900      	cmp	r1, #0
 801bcdc:	f000 8128 	beq.w	801bf30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bce0:	9a01      	ldr	r2, [sp, #4]
 801bce2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bce6:	8855      	ldrh	r5, [r2, #2]
 801bce8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bcec:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bcf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bcf4:	fb08 f802 	mul.w	r8, r8, r2
 801bcf8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bcfc:	435d      	muls	r5, r3
 801bcfe:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bd02:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bd06:	44d0      	add	r8, sl
 801bd08:	f105 0a20 	add.w	sl, r5, #32
 801bd0c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bd10:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bd14:	0a2d      	lsrs	r5, r5, #8
 801bd16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bd1a:	432a      	orrs	r2, r5
 801bd1c:	3001      	adds	r0, #1
 801bd1e:	f100 810d 	bmi.w	801bf3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bd22:	4583      	cmp	fp, r0
 801bd24:	f340 810a 	ble.w	801bf3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bd28:	f1be 0f00 	cmp.w	lr, #0
 801bd2c:	f000 810b 	beq.w	801bf46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bd30:	2f00      	cmp	r7, #0
 801bd32:	f2c0 8100 	blt.w	801bf36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bd36:	42be      	cmp	r6, r7
 801bd38:	f340 80fd 	ble.w	801bf36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bd3c:	9801      	ldr	r0, [sp, #4]
 801bd3e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bd42:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bd46:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bd4a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bd4e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bd52:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bd56:	fb0a fa00 	mul.w	sl, sl, r0
 801bd5a:	fb05 f808 	mul.w	r8, r5, r8
 801bd5e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bd62:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bd66:	4482      	add	sl, r0
 801bd68:	f108 0020 	add.w	r0, r8, #32
 801bd6c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bd70:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bd74:	0a00      	lsrs	r0, r0, #8
 801bd76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bd7a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bd7e:	3701      	adds	r7, #1
 801bd80:	f100 80e6 	bmi.w	801bf50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bd84:	42be      	cmp	r6, r7
 801bd86:	f340 80e3 	ble.w	801bf50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bd8a:	2900      	cmp	r1, #0
 801bd8c:	f000 80e3 	beq.w	801bf56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bd90:	3601      	adds	r6, #1
 801bd92:	9801      	ldr	r0, [sp, #4]
 801bd94:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bd98:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bd9c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bda0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bda4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bda8:	fb09 f906 	mul.w	r9, r9, r6
 801bdac:	fb07 f800 	mul.w	r8, r7, r0
 801bdb0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bdb4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bdb8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bdbc:	44d1      	add	r9, sl
 801bdbe:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bdc2:	f108 0020 	add.w	r0, r8, #32
 801bdc6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bdca:	0a00      	lsrs	r0, r0, #8
 801bdcc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bdd0:	4330      	orrs	r0, r6
 801bdd2:	b28e      	uxth	r6, r1
 801bdd4:	fa1f f98e 	uxth.w	r9, lr
 801bdd8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bddc:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bde0:	fb06 f809 	mul.w	r8, r6, r9
 801bde4:	0136      	lsls	r6, r6, #4
 801bde6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bdea:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bdee:	9601      	str	r6, [sp, #4]
 801bdf0:	ea4a 0404 	orr.w	r4, sl, r4
 801bdf4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bdf8:	fa1f f689 	uxth.w	r6, r9
 801bdfc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801be00:	fb11 f90e 	smulbb	r9, r1, lr
 801be04:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801be08:	9602      	str	r6, [sp, #8]
 801be0a:	4626      	mov	r6, r4
 801be0c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801be10:	f1ce 0410 	rsb	r4, lr, #16
 801be14:	ea4a 0202 	orr.w	r2, sl, r2
 801be18:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801be1c:	1a64      	subs	r4, r4, r1
 801be1e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801be22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801be26:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801be2a:	434a      	muls	r2, r1
 801be2c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801be30:	ea4a 0000 	orr.w	r0, sl, r0
 801be34:	9903      	ldr	r1, [sp, #12]
 801be36:	fb04 2406 	mla	r4, r4, r6, r2
 801be3a:	9e02      	ldr	r6, [sp, #8]
 801be3c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801be40:	fb09 4200 	mla	r2, r9, r0, r4
 801be44:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801be48:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801be4c:	8808      	ldrh	r0, [r1, #0]
 801be4e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801be52:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801be56:	ea44 0b0b 	orr.w	fp, r4, fp
 801be5a:	9c01      	ldr	r4, [sp, #4]
 801be5c:	b289      	uxth	r1, r1
 801be5e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801be62:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801be66:	1ba4      	subs	r4, r4, r6
 801be68:	9e01      	ldr	r6, [sp, #4]
 801be6a:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801be6e:	eba6 0608 	sub.w	r6, r6, r8
 801be72:	b2a4      	uxth	r4, r4
 801be74:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801be78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801be7c:	b2b6      	uxth	r6, r6
 801be7e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801be82:	4373      	muls	r3, r6
 801be84:	ea42 0e0e 	orr.w	lr, r2, lr
 801be88:	fb0c 3304 	mla	r3, ip, r4, r3
 801be8c:	9c02      	ldr	r4, [sp, #8]
 801be8e:	fa1f f28e 	uxth.w	r2, lr
 801be92:	fb04 3505 	mla	r5, r4, r5, r3
 801be96:	10d4      	asrs	r4, r2, #3
 801be98:	fb08 5707 	mla	r7, r8, r7, r5
 801be9c:	1215      	asrs	r5, r2, #8
 801be9e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bea2:	00d2      	lsls	r2, r2, #3
 801bea4:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bea8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801beac:	b2d2      	uxtb	r2, r2
 801beae:	434f      	muls	r7, r1
 801beb0:	1c7b      	adds	r3, r7, #1
 801beb2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801beb6:	1203      	asrs	r3, r0, #8
 801beb8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bebc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bec0:	b2ff      	uxtb	r7, r7
 801bec2:	fb13 f307 	smulbb	r3, r3, r7
 801bec6:	fb05 3501 	mla	r5, r5, r1, r3
 801beca:	10c3      	asrs	r3, r0, #3
 801becc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bed0:	b2ad      	uxth	r5, r5
 801bed2:	fb13 f307 	smulbb	r3, r3, r7
 801bed6:	fb04 3401 	mla	r4, r4, r1, r3
 801beda:	00c3      	lsls	r3, r0, #3
 801bedc:	b2db      	uxtb	r3, r3
 801bede:	b2a4      	uxth	r4, r4
 801bee0:	fb13 f307 	smulbb	r3, r3, r7
 801bee4:	fb02 3101 	mla	r1, r2, r1, r3
 801bee8:	1c6b      	adds	r3, r5, #1
 801beea:	1c62      	adds	r2, r4, #1
 801beec:	b289      	uxth	r1, r1
 801beee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bef2:	1c4b      	adds	r3, r1, #1
 801bef4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bef8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801befc:	9a03      	ldr	r2, [sp, #12]
 801befe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bf02:	0964      	lsrs	r4, r4, #5
 801bf04:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bf08:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bf0c:	432b      	orrs	r3, r5
 801bf0e:	4323      	orrs	r3, r4
 801bf10:	8013      	strh	r3, [r2, #0]
 801bf12:	b005      	add	sp, #20
 801bf14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf18:	f04f 0c00 	mov.w	ip, #0
 801bf1c:	4664      	mov	r4, ip
 801bf1e:	e6d6      	b.n	801bcce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801bf20:	2300      	movs	r3, #0
 801bf22:	469c      	mov	ip, r3
 801bf24:	461a      	mov	r2, r3
 801bf26:	461c      	mov	r4, r3
 801bf28:	e6f8      	b.n	801bd1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bf2a:	2300      	movs	r3, #0
 801bf2c:	461a      	mov	r2, r3
 801bf2e:	e6f5      	b.n	801bd1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bf30:	460b      	mov	r3, r1
 801bf32:	460a      	mov	r2, r1
 801bf34:	e6f2      	b.n	801bd1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bf36:	2500      	movs	r5, #0
 801bf38:	46ab      	mov	fp, r5
 801bf3a:	e720      	b.n	801bd7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801bf3c:	2700      	movs	r7, #0
 801bf3e:	463d      	mov	r5, r7
 801bf40:	4638      	mov	r0, r7
 801bf42:	46bb      	mov	fp, r7
 801bf44:	e745      	b.n	801bdd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bf46:	4677      	mov	r7, lr
 801bf48:	4675      	mov	r5, lr
 801bf4a:	4670      	mov	r0, lr
 801bf4c:	46f3      	mov	fp, lr
 801bf4e:	e740      	b.n	801bdd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bf50:	2700      	movs	r7, #0
 801bf52:	4638      	mov	r0, r7
 801bf54:	e73d      	b.n	801bdd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bf56:	460f      	mov	r7, r1
 801bf58:	4608      	mov	r0, r1
 801bf5a:	e73a      	b.n	801bdd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801bf5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf60:	b097      	sub	sp, #92	; 0x5c
 801bf62:	9214      	str	r2, [sp, #80]	; 0x50
 801bf64:	9308      	str	r3, [sp, #32]
 801bf66:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bf68:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801bf6c:	9015      	str	r0, [sp, #84]	; 0x54
 801bf6e:	9312      	str	r3, [sp, #72]	; 0x48
 801bf70:	6850      	ldr	r0, [r2, #4]
 801bf72:	9111      	str	r1, [sp, #68]	; 0x44
 801bf74:	6812      	ldr	r2, [r2, #0]
 801bf76:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801bf7a:	fb00 1303 	mla	r3, r0, r3, r1
 801bf7e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bf82:	9309      	str	r3, [sp, #36]	; 0x24
 801bf84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bf86:	681b      	ldr	r3, [r3, #0]
 801bf88:	930b      	str	r3, [sp, #44]	; 0x2c
 801bf8a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bf8c:	685b      	ldr	r3, [r3, #4]
 801bf8e:	930c      	str	r3, [sp, #48]	; 0x30
 801bf90:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801bf94:	930a      	str	r3, [sp, #40]	; 0x28
 801bf96:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801bf98:	2b00      	cmp	r3, #0
 801bf9a:	dc03      	bgt.n	801bfa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bf9c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bf9e:	2b00      	cmp	r3, #0
 801bfa0:	f340 83cd 	ble.w	801c73e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801bfa4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bfa6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bfaa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bfae:	1e48      	subs	r0, r1, #1
 801bfb0:	1e55      	subs	r5, r2, #1
 801bfb2:	9b08      	ldr	r3, [sp, #32]
 801bfb4:	2b00      	cmp	r3, #0
 801bfb6:	f340 81a5 	ble.w	801c304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801bfba:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801bfbc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bfbe:	1436      	asrs	r6, r6, #16
 801bfc0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801bfc4:	d406      	bmi.n	801bfd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bfc6:	4286      	cmp	r6, r0
 801bfc8:	da04      	bge.n	801bfd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bfca:	2b00      	cmp	r3, #0
 801bfcc:	db02      	blt.n	801bfd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bfce:	42ab      	cmp	r3, r5
 801bfd0:	f2c0 8199 	blt.w	801c306 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801bfd4:	3601      	adds	r6, #1
 801bfd6:	f100 8186 	bmi.w	801c2e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bfda:	42b1      	cmp	r1, r6
 801bfdc:	f2c0 8183 	blt.w	801c2e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bfe0:	3301      	adds	r3, #1
 801bfe2:	f100 8180 	bmi.w	801c2e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bfe6:	429a      	cmp	r2, r3
 801bfe8:	f2c0 817d 	blt.w	801c2e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bfec:	9b08      	ldr	r3, [sp, #32]
 801bfee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bff2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801bff4:	9313      	str	r3, [sp, #76]	; 0x4c
 801bff6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bff8:	2b00      	cmp	r3, #0
 801bffa:	f340 81a6 	ble.w	801c34a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801bffe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c000:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c002:	1418      	asrs	r0, r3, #16
 801c004:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c006:	142d      	asrs	r5, r5, #16
 801c008:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c00c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c00e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c012:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c014:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c018:	f100 81fa 	bmi.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c01c:	f102 3eff 	add.w	lr, r2, #4294967295
 801c020:	4575      	cmp	r5, lr
 801c022:	f280 81f5 	bge.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c026:	2800      	cmp	r0, #0
 801c028:	f2c0 81f2 	blt.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c02c:	f103 3eff 	add.w	lr, r3, #4294967295
 801c030:	4570      	cmp	r0, lr
 801c032:	f280 81ed 	bge.w	801c410 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c036:	b212      	sxth	r2, r2
 801c038:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c03a:	fa1f fe81 	uxth.w	lr, r1
 801c03e:	fb00 5002 	mla	r0, r0, r2, r5
 801c042:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c046:	eb03 0a00 	add.w	sl, r3, r0
 801c04a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c04e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c052:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c056:	b29b      	uxth	r3, r3
 801c058:	f1bc 0f00 	cmp.w	ip, #0
 801c05c:	f000 81bb 	beq.w	801c3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c060:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c064:	eb0a 0b02 	add.w	fp, sl, r2
 801c068:	fa1f fa8c 	uxth.w	sl, ip
 801c06c:	940d      	str	r4, [sp, #52]	; 0x34
 801c06e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c072:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c076:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c07a:	eba5 050e 	sub.w	r5, r5, lr
 801c07e:	940e      	str	r4, [sp, #56]	; 0x38
 801c080:	fa1f fa8a 	uxth.w	sl, sl
 801c084:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c086:	b2ad      	uxth	r5, r5
 801c088:	eba3 030a 	sub.w	r3, r3, sl
 801c08c:	fb08 f505 	mul.w	r5, r8, r5
 801c090:	b29b      	uxth	r3, r3
 801c092:	fb09 5303 	mla	r3, r9, r3, r5
 801c096:	fb0a 3304 	mla	r3, sl, r4, r3
 801c09a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c09c:	fb0e 3304 	mla	r3, lr, r4, r3
 801c0a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c0a4:	2b00      	cmp	r3, #0
 801c0a6:	f000 8111 	beq.w	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c0aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c0ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c0b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c0b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c0b8:	f000 8192 	beq.w	801c3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c0bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c0c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c0c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c0c8:	fb0a fe0e 	mul.w	lr, sl, lr
 801c0cc:	fb09 f000 	mul.w	r0, r9, r0
 801c0d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c0d4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c0d8:	f100 0b20 	add.w	fp, r0, #32
 801c0dc:	44ce      	add	lr, r9
 801c0de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c0e2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c0e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c0ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c0ee:	ea4e 0909 	orr.w	r9, lr, r9
 801c0f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c0f6:	8868      	ldrh	r0, [r5, #2]
 801c0f8:	d019      	beq.n	801c12e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c0fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c0fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c102:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c106:	fb0a fe0e 	mul.w	lr, sl, lr
 801c10a:	fb08 f800 	mul.w	r8, r8, r0
 801c10e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c112:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c116:	f108 0b20 	add.w	fp, r8, #32
 801c11a:	4486      	add	lr, r0
 801c11c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c120:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c124:	0a00      	lsrs	r0, r0, #8
 801c126:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c12a:	ea4e 0000 	orr.w	r0, lr, r0
 801c12e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c132:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c136:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c13a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c13e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c142:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c146:	ea4e 0909 	orr.w	r9, lr, r9
 801c14a:	ea4a 0000 	orr.w	r0, sl, r0
 801c14e:	f1bc 0f00 	cmp.w	ip, #0
 801c152:	f000 8147 	beq.w	801c3e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801c156:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c15a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c15c:	3a01      	subs	r2, #1
 801c15e:	2cff      	cmp	r4, #255	; 0xff
 801c160:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801c164:	f102 0202 	add.w	r2, r2, #2
 801c168:	eb05 0e02 	add.w	lr, r5, r2
 801c16c:	5aaa      	ldrh	r2, [r5, r2]
 801c16e:	d018      	beq.n	801c1a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c170:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c174:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c178:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c17c:	fb04 fa02 	mul.w	sl, r4, r2
 801c180:	fb08 f805 	mul.w	r8, r8, r5
 801c184:	f10a 0520 	add.w	r5, sl, #32
 801c188:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c18c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c190:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c194:	4442      	add	r2, r8
 801c196:	0a2d      	lsrs	r5, r5, #8
 801c198:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c19c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c1a0:	432a      	orrs	r2, r5
 801c1a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c1a4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c1a8:	2cff      	cmp	r4, #255	; 0xff
 801c1aa:	d01a      	beq.n	801c1e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801c1ac:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c1b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c1b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c1b8:	fb04 fa05 	mul.w	sl, r4, r5
 801c1bc:	fb08 f80e 	mul.w	r8, r8, lr
 801c1c0:	f10a 0e20 	add.w	lr, sl, #32
 801c1c4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c1c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c1cc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c1d0:	4445      	add	r5, r8
 801c1d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c1d6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c1da:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c1de:	ea45 050e 	orr.w	r5, r5, lr
 801c1e2:	fb1c fe01 	smulbb	lr, ip, r1
 801c1e6:	f1cc 0810 	rsb	r8, ip, #16
 801c1ea:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c1ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c1f2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c1f6:	eba8 0801 	sub.w	r8, r8, r1
 801c1fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c1fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c202:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c206:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c20a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c20e:	ea4a 0202 	orr.w	r2, sl, r2
 801c212:	4341      	muls	r1, r0
 801c214:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c218:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c21c:	fb09 1108 	mla	r1, r9, r8, r1
 801c220:	ea4b 0505 	orr.w	r5, fp, r5
 801c224:	fb0c 1102 	mla	r1, ip, r2, r1
 801c228:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c22c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c230:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c234:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c238:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c23c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c240:	fa1f f28e 	uxth.w	r2, lr
 801c244:	2bff      	cmp	r3, #255	; 0xff
 801c246:	d103      	bne.n	801c250 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c248:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c24a:	29ff      	cmp	r1, #255	; 0xff
 801c24c:	f000 80de 	beq.w	801c40c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c250:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c252:	1215      	asrs	r5, r2, #8
 801c254:	8838      	ldrh	r0, [r7, #0]
 801c256:	434b      	muls	r3, r1
 801c258:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c25c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c25e:	f103 0c01 	add.w	ip, r3, #1
 801c262:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c266:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c26a:	fa5f fc83 	uxtb.w	ip, r3
 801c26e:	1203      	asrs	r3, r0, #8
 801c270:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c274:	fb13 f30c 	smulbb	r3, r3, ip
 801c278:	fb05 3501 	mla	r5, r5, r1, r3
 801c27c:	10c3      	asrs	r3, r0, #3
 801c27e:	10d1      	asrs	r1, r2, #3
 801c280:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c284:	00d2      	lsls	r2, r2, #3
 801c286:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c28a:	b2ad      	uxth	r5, r5
 801c28c:	fb13 f30c 	smulbb	r3, r3, ip
 801c290:	b2d2      	uxtb	r2, r2
 801c292:	fb01 3104 	mla	r1, r1, r4, r3
 801c296:	00c3      	lsls	r3, r0, #3
 801c298:	b2db      	uxtb	r3, r3
 801c29a:	b289      	uxth	r1, r1
 801c29c:	fb13 f30c 	smulbb	r3, r3, ip
 801c2a0:	fb02 3304 	mla	r3, r2, r4, r3
 801c2a4:	b29a      	uxth	r2, r3
 801c2a6:	1c6b      	adds	r3, r5, #1
 801c2a8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c2ac:	1c53      	adds	r3, r2, #1
 801c2ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c2b2:	1c4a      	adds	r2, r1, #1
 801c2b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c2b8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c2bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c2c0:	0949      	lsrs	r1, r1, #5
 801c2c2:	432b      	orrs	r3, r5
 801c2c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c2c8:	430b      	orrs	r3, r1
 801c2ca:	803b      	strh	r3, [r7, #0]
 801c2cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c2ce:	3702      	adds	r7, #2
 801c2d0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c2d2:	4413      	add	r3, r2
 801c2d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c2d6:	9321      	str	r3, [sp, #132]	; 0x84
 801c2d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c2da:	441a      	add	r2, r3
 801c2dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c2de:	3b01      	subs	r3, #1
 801c2e0:	9222      	str	r2, [sp, #136]	; 0x88
 801c2e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c2e4:	e687      	b.n	801bff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c2e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c2e8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c2ea:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c2ec:	4433      	add	r3, r6
 801c2ee:	9321      	str	r3, [sp, #132]	; 0x84
 801c2f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c2f2:	441c      	add	r4, r3
 801c2f4:	9b08      	ldr	r3, [sp, #32]
 801c2f6:	3b01      	subs	r3, #1
 801c2f8:	9422      	str	r4, [sp, #136]	; 0x88
 801c2fa:	9308      	str	r3, [sp, #32]
 801c2fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2fe:	3302      	adds	r3, #2
 801c300:	9309      	str	r3, [sp, #36]	; 0x24
 801c302:	e656      	b.n	801bfb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c304:	d028      	beq.n	801c358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801c306:	9b08      	ldr	r3, [sp, #32]
 801c308:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c30a:	3b01      	subs	r3, #1
 801c30c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c30e:	fb00 5003 	mla	r0, r0, r3, r5
 801c312:	1400      	asrs	r0, r0, #16
 801c314:	f53f ae6a 	bmi.w	801bfec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c318:	3901      	subs	r1, #1
 801c31a:	4288      	cmp	r0, r1
 801c31c:	f6bf ae66 	bge.w	801bfec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c320:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c322:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c324:	fb01 0303 	mla	r3, r1, r3, r0
 801c328:	141b      	asrs	r3, r3, #16
 801c32a:	f53f ae5f 	bmi.w	801bfec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c32e:	3a01      	subs	r2, #1
 801c330:	4293      	cmp	r3, r2
 801c332:	f6bf ae5b 	bge.w	801bfec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c336:	9b08      	ldr	r3, [sp, #32]
 801c338:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c33c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c340:	9313      	str	r3, [sp, #76]	; 0x4c
 801c342:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c344:	2b00      	cmp	r3, #0
 801c346:	f300 8082 	bgt.w	801c44e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801c34a:	9b08      	ldr	r3, [sp, #32]
 801c34c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c350:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c352:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c356:	9309      	str	r3, [sp, #36]	; 0x24
 801c358:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c35a:	2b00      	cmp	r3, #0
 801c35c:	f340 81ef 	ble.w	801c73e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801c360:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c364:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c366:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c36a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c36e:	eef0 6a62 	vmov.f32	s13, s5
 801c372:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c376:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c37a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c37e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c382:	eef0 6a43 	vmov.f32	s13, s6
 801c386:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c38a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c38e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c392:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c396:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c39a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c39e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c3a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c3a6:	ee12 2a90 	vmov	r2, s5
 801c3aa:	eef0 2a47 	vmov.f32	s5, s14
 801c3ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3b2:	ee13 2a10 	vmov	r2, s6
 801c3b6:	9323      	str	r3, [sp, #140]	; 0x8c
 801c3b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c3ba:	eeb0 3a67 	vmov.f32	s6, s15
 801c3be:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3c2:	9324      	str	r3, [sp, #144]	; 0x90
 801c3c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c3c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c3c8:	3b01      	subs	r3, #1
 801c3ca:	9311      	str	r3, [sp, #68]	; 0x44
 801c3cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c3ce:	bf08      	it	eq
 801c3d0:	4613      	moveq	r3, r2
 801c3d2:	9308      	str	r3, [sp, #32]
 801c3d4:	e5df      	b.n	801bf96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c3d6:	fb08 f505 	mul.w	r5, r8, r5
 801c3da:	fb09 5303 	mla	r3, r9, r3, r5
 801c3de:	e65f      	b.n	801c0a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c3e0:	4681      	mov	r9, r0
 801c3e2:	e686      	b.n	801c0f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c3e4:	f1c1 0210 	rsb	r2, r1, #16
 801c3e8:	4341      	muls	r1, r0
 801c3ea:	fb09 1902 	mla	r9, r9, r2, r1
 801c3ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c3f2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c3f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c3fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c3fe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c402:	ea42 0909 	orr.w	r9, r2, r9
 801c406:	fa1f f289 	uxth.w	r2, r9
 801c40a:	e71b      	b.n	801c244 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801c40c:	803a      	strh	r2, [r7, #0]
 801c40e:	e75d      	b.n	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c410:	f115 0e01 	adds.w	lr, r5, #1
 801c414:	f53f af5a 	bmi.w	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c418:	4572      	cmp	r2, lr
 801c41a:	f6ff af57 	blt.w	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c41e:	f110 0e01 	adds.w	lr, r0, #1
 801c422:	f53f af53 	bmi.w	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c426:	4573      	cmp	r3, lr
 801c428:	f6ff af50 	blt.w	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c42c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c42e:	b21b      	sxth	r3, r3
 801c430:	b212      	sxth	r2, r2
 801c432:	9502      	str	r5, [sp, #8]
 801c434:	9301      	str	r3, [sp, #4]
 801c436:	9200      	str	r2, [sp, #0]
 801c438:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c43c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c440:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c444:	4639      	mov	r1, r7
 801c446:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c448:	f7ff fc02 	bl	801bc50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c44c:	e73e      	b.n	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c44e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c450:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c454:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c456:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c45a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c45c:	fa1f fc82 	uxth.w	ip, r2
 801c460:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c464:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c466:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c46a:	141f      	asrs	r7, r3, #16
 801c46c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c46e:	141b      	asrs	r3, r3, #16
 801c470:	fb01 3707 	mla	r7, r1, r7, r3
 801c474:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c476:	eb03 0a07 	add.w	sl, r3, r7
 801c47a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c47e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c482:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c486:	b29b      	uxth	r3, r3
 801c488:	2d00      	cmp	r5, #0
 801c48a:	f000 813d 	beq.w	801c708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801c48e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c492:	eb0a 0b01 	add.w	fp, sl, r1
 801c496:	fa1f fa85 	uxth.w	sl, r5
 801c49a:	940f      	str	r4, [sp, #60]	; 0x3c
 801c49c:	fb0a fc0c 	mul.w	ip, sl, ip
 801c4a0:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c4a4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c4a8:	eba0 000c 	sub.w	r0, r0, ip
 801c4ac:	9410      	str	r4, [sp, #64]	; 0x40
 801c4ae:	fa1f fa8a 	uxth.w	sl, sl
 801c4b2:	b280      	uxth	r0, r0
 801c4b4:	eba3 030a 	sub.w	r3, r3, sl
 801c4b8:	fb08 f000 	mul.w	r0, r8, r0
 801c4bc:	b29b      	uxth	r3, r3
 801c4be:	fb09 0303 	mla	r3, r9, r3, r0
 801c4c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c4c4:	fb0a 3300 	mla	r3, sl, r0, r3
 801c4c8:	fb0c 3304 	mla	r3, ip, r4, r3
 801c4cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c4d0:	2b00      	cmp	r3, #0
 801c4d2:	f000 810b 	beq.w	801c6ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801c4d6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c4d8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c4dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c4de:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c4e2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c4e6:	f000 8114 	beq.w	801c712 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c4ea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c4ee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c4f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c4f6:	fb0a fc0c 	mul.w	ip, sl, ip
 801c4fa:	fb09 f707 	mul.w	r7, r9, r7
 801c4fe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c502:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c506:	f107 0b20 	add.w	fp, r7, #32
 801c50a:	44cc      	add	ip, r9
 801c50c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c510:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c514:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c518:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c51c:	ea4c 0909 	orr.w	r9, ip, r9
 801c520:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c524:	8847      	ldrh	r7, [r0, #2]
 801c526:	d019      	beq.n	801c55c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801c528:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c52c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c530:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c534:	fb0a fc0c 	mul.w	ip, sl, ip
 801c538:	fb08 f807 	mul.w	r8, r8, r7
 801c53c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c540:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c544:	f108 0b20 	add.w	fp, r8, #32
 801c548:	44bc      	add	ip, r7
 801c54a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c54e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c552:	0a3f      	lsrs	r7, r7, #8
 801c554:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c558:	ea4c 0707 	orr.w	r7, ip, r7
 801c55c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c560:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c564:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c568:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c56c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c570:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c574:	ea4c 0909 	orr.w	r9, ip, r9
 801c578:	ea4a 0707 	orr.w	r7, sl, r7
 801c57c:	2d00      	cmp	r5, #0
 801c57e:	f000 80ca 	beq.w	801c716 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801c582:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c586:	3901      	subs	r1, #1
 801c588:	0049      	lsls	r1, r1, #1
 801c58a:	3102      	adds	r1, #2
 801c58c:	eb00 0c01 	add.w	ip, r0, r1
 801c590:	5a41      	ldrh	r1, [r0, r1]
 801c592:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c594:	28ff      	cmp	r0, #255	; 0xff
 801c596:	d019      	beq.n	801c5cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801c598:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c59c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c59e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c5a2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c5a6:	fb04 fa01 	mul.w	sl, r4, r1
 801c5aa:	fb08 f800 	mul.w	r8, r8, r0
 801c5ae:	f10a 0020 	add.w	r0, sl, #32
 801c5b2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c5b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c5ba:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c5be:	4441      	add	r1, r8
 801c5c0:	0a00      	lsrs	r0, r0, #8
 801c5c2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c5c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c5ca:	4301      	orrs	r1, r0
 801c5cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c5ce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c5d2:	2cff      	cmp	r4, #255	; 0xff
 801c5d4:	d01a      	beq.n	801c60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801c5d6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c5da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c5de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c5e2:	fb04 fa00 	mul.w	sl, r4, r0
 801c5e6:	fb08 f80c 	mul.w	r8, r8, ip
 801c5ea:	f10a 0c20 	add.w	ip, sl, #32
 801c5ee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c5f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c5f6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c5fa:	4440      	add	r0, r8
 801c5fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c600:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c604:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c608:	ea40 000c 	orr.w	r0, r0, ip
 801c60c:	fb15 fc02 	smulbb	ip, r5, r2
 801c610:	f1c5 0810 	rsb	r8, r5, #16
 801c614:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c618:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c61c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c620:	eba8 0802 	sub.w	r8, r8, r2
 801c624:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c628:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c62c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c630:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c634:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c638:	ea4a 0101 	orr.w	r1, sl, r1
 801c63c:	437a      	muls	r2, r7
 801c63e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c642:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c646:	fb09 2208 	mla	r2, r9, r8, r2
 801c64a:	ea4b 0000 	orr.w	r0, fp, r0
 801c64e:	fb05 2201 	mla	r2, r5, r1, r2
 801c652:	fb0c 2200 	mla	r2, ip, r0, r2
 801c656:	0d57      	lsrs	r7, r2, #21
 801c658:	0952      	lsrs	r2, r2, #5
 801c65a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c65e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c662:	433a      	orrs	r2, r7
 801c664:	2bff      	cmp	r3, #255	; 0xff
 801c666:	b292      	uxth	r2, r2
 801c668:	d102      	bne.n	801c670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801c66a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c66c:	29ff      	cmp	r1, #255	; 0xff
 801c66e:	d063      	beq.n	801c738 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801c670:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c672:	1215      	asrs	r5, r2, #8
 801c674:	f8be 1000 	ldrh.w	r1, [lr]
 801c678:	4343      	muls	r3, r0
 801c67a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c67c:	10cf      	asrs	r7, r1, #3
 801c67e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c682:	1c58      	adds	r0, r3, #1
 801c684:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c688:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c68c:	1208      	asrs	r0, r1, #8
 801c68e:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c692:	00c9      	lsls	r1, r1, #3
 801c694:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c698:	b2db      	uxtb	r3, r3
 801c69a:	b2c9      	uxtb	r1, r1
 801c69c:	fb10 f003 	smulbb	r0, r0, r3
 801c6a0:	fb11 f103 	smulbb	r1, r1, r3
 801c6a4:	fb05 0504 	mla	r5, r5, r4, r0
 801c6a8:	10d0      	asrs	r0, r2, #3
 801c6aa:	fb17 f703 	smulbb	r7, r7, r3
 801c6ae:	00d2      	lsls	r2, r2, #3
 801c6b0:	b2ad      	uxth	r5, r5
 801c6b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c6b6:	b2d2      	uxtb	r2, r2
 801c6b8:	fb00 7004 	mla	r0, r0, r4, r7
 801c6bc:	1c6b      	adds	r3, r5, #1
 801c6be:	fb02 1204 	mla	r2, r2, r4, r1
 801c6c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c6c6:	b292      	uxth	r2, r2
 801c6c8:	b280      	uxth	r0, r0
 801c6ca:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c6ce:	1c57      	adds	r7, r2, #1
 801c6d0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c6d4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c6d8:	433d      	orrs	r5, r7
 801c6da:	1c47      	adds	r7, r0, #1
 801c6dc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c6e0:	097f      	lsrs	r7, r7, #5
 801c6e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c6e6:	433d      	orrs	r5, r7
 801c6e8:	f8ae 5000 	strh.w	r5, [lr]
 801c6ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c6ee:	f10e 0e02 	add.w	lr, lr, #2
 801c6f2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c6f4:	4413      	add	r3, r2
 801c6f6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c6f8:	9321      	str	r3, [sp, #132]	; 0x84
 801c6fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c6fc:	441a      	add	r2, r3
 801c6fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c700:	3b01      	subs	r3, #1
 801c702:	9222      	str	r2, [sp, #136]	; 0x88
 801c704:	9313      	str	r3, [sp, #76]	; 0x4c
 801c706:	e61c      	b.n	801c342 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801c708:	fb08 f000 	mul.w	r0, r8, r0
 801c70c:	fb09 0303 	mla	r3, r9, r3, r0
 801c710:	e6dc      	b.n	801c4cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801c712:	46b9      	mov	r9, r7
 801c714:	e704      	b.n	801c520 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801c716:	f1c2 0110 	rsb	r1, r2, #16
 801c71a:	437a      	muls	r2, r7
 801c71c:	fb09 2901 	mla	r9, r9, r1, r2
 801c720:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c724:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c728:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c72c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c730:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c734:	4302      	orrs	r2, r0
 801c736:	e795      	b.n	801c664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801c738:	f8ae 2000 	strh.w	r2, [lr]
 801c73c:	e7d6      	b.n	801c6ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801c73e:	b017      	add	sp, #92	; 0x5c
 801c740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c748:	b085      	sub	sp, #20
 801c74a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c74e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c752:	2800      	cmp	r0, #0
 801c754:	9103      	str	r1, [sp, #12]
 801c756:	fb00 7406 	mla	r4, r0, r6, r7
 801c75a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c75e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c762:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c766:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c76a:	eb02 0904 	add.w	r9, r2, r4
 801c76e:	9501      	str	r5, [sp, #4]
 801c770:	f2c0 8141 	blt.w	801c9f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c774:	4583      	cmp	fp, r0
 801c776:	f340 813e 	ble.w	801c9f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c77a:	2f00      	cmp	r7, #0
 801c77c:	f2c0 8137 	blt.w	801c9ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c780:	42be      	cmp	r6, r7
 801c782:	f340 8134 	ble.w	801c9ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c786:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c78a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c78e:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c792:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c796:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c79a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c79e:	4355      	muls	r5, r2
 801c7a0:	fb0c f203 	mul.w	r2, ip, r3
 801c7a4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c7a8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c7ac:	441d      	add	r5, r3
 801c7ae:	f102 0320 	add.w	r3, r2, #32
 801c7b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c7b6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c7ba:	0a1b      	lsrs	r3, r3, #8
 801c7bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c7c0:	431c      	orrs	r4, r3
 801c7c2:	1c7b      	adds	r3, r7, #1
 801c7c4:	f100 811c 	bmi.w	801ca00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c7c8:	429e      	cmp	r6, r3
 801c7ca:	f340 8119 	ble.w	801ca00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c7ce:	2900      	cmp	r1, #0
 801c7d0:	f000 8119 	beq.w	801ca06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c7d4:	9a01      	ldr	r2, [sp, #4]
 801c7d6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c7da:	8855      	ldrh	r5, [r2, #2]
 801c7dc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c7e0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c7e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c7e8:	fb08 f802 	mul.w	r8, r8, r2
 801c7ec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c7f0:	435d      	muls	r5, r3
 801c7f2:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c7f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c7fa:	44d0      	add	r8, sl
 801c7fc:	f105 0a20 	add.w	sl, r5, #32
 801c800:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c804:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c808:	0a2d      	lsrs	r5, r5, #8
 801c80a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c80e:	432a      	orrs	r2, r5
 801c810:	3001      	adds	r0, #1
 801c812:	f100 80fe 	bmi.w	801ca12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c816:	4583      	cmp	fp, r0
 801c818:	f340 80fb 	ble.w	801ca12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c81c:	f1be 0f00 	cmp.w	lr, #0
 801c820:	f000 80fc 	beq.w	801ca1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c824:	2f00      	cmp	r7, #0
 801c826:	f2c0 80f1 	blt.w	801ca0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c82a:	42be      	cmp	r6, r7
 801c82c:	f340 80ee 	ble.w	801ca0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c830:	9801      	ldr	r0, [sp, #4]
 801c832:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c836:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c83a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c83e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c842:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c846:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c84a:	fb0a fa00 	mul.w	sl, sl, r0
 801c84e:	fb05 f808 	mul.w	r8, r5, r8
 801c852:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c856:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c85a:	4482      	add	sl, r0
 801c85c:	f108 0020 	add.w	r0, r8, #32
 801c860:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c864:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c868:	0a00      	lsrs	r0, r0, #8
 801c86a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c86e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c872:	3701      	adds	r7, #1
 801c874:	f100 80d7 	bmi.w	801ca26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c878:	42be      	cmp	r6, r7
 801c87a:	f340 80d4 	ble.w	801ca26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c87e:	2900      	cmp	r1, #0
 801c880:	f000 80d4 	beq.w	801ca2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c884:	3601      	adds	r6, #1
 801c886:	9801      	ldr	r0, [sp, #4]
 801c888:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c88c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c890:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c894:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c898:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c89c:	fb09 f906 	mul.w	r9, r9, r6
 801c8a0:	fb07 f800 	mul.w	r8, r7, r0
 801c8a4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c8a8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c8ac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c8b0:	44d1      	add	r9, sl
 801c8b2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c8b6:	f108 0020 	add.w	r0, r8, #32
 801c8ba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c8be:	0a00      	lsrs	r0, r0, #8
 801c8c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c8c4:	4330      	orrs	r0, r6
 801c8c6:	b28e      	uxth	r6, r1
 801c8c8:	fa1f f98e 	uxth.w	r9, lr
 801c8cc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c8d0:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c8d4:	fb06 f809 	mul.w	r8, r6, r9
 801c8d8:	0136      	lsls	r6, r6, #4
 801c8da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c8de:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c8e2:	9601      	str	r6, [sp, #4]
 801c8e4:	ea4a 0404 	orr.w	r4, sl, r4
 801c8e8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c8ec:	fa1f f689 	uxth.w	r6, r9
 801c8f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c8f4:	fb11 f90e 	smulbb	r9, r1, lr
 801c8f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c8fc:	9602      	str	r6, [sp, #8]
 801c8fe:	4626      	mov	r6, r4
 801c900:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c904:	f1ce 0410 	rsb	r4, lr, #16
 801c908:	ea4a 0202 	orr.w	r2, sl, r2
 801c90c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c910:	1a64      	subs	r4, r4, r1
 801c912:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c916:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c91a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c91e:	434a      	muls	r2, r1
 801c920:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c924:	ea4a 0000 	orr.w	r0, sl, r0
 801c928:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c92c:	fb04 2406 	mla	r4, r4, r6, r2
 801c930:	9903      	ldr	r1, [sp, #12]
 801c932:	fb09 4200 	mla	r2, r9, r0, r4
 801c936:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c93a:	9801      	ldr	r0, [sp, #4]
 801c93c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c940:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c944:	8809      	ldrh	r1, [r1, #0]
 801c946:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c94a:	ea44 0b0b 	orr.w	fp, r4, fp
 801c94e:	9c02      	ldr	r4, [sp, #8]
 801c950:	1b00      	subs	r0, r0, r4
 801c952:	9c01      	ldr	r4, [sp, #4]
 801c954:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c958:	eba4 0608 	sub.w	r6, r4, r8
 801c95c:	b280      	uxth	r0, r0
 801c95e:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c962:	b2b6      	uxth	r6, r6
 801c964:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c968:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c96c:	4373      	muls	r3, r6
 801c96e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c972:	fb0c 3300 	mla	r3, ip, r0, r3
 801c976:	9802      	ldr	r0, [sp, #8]
 801c978:	ea42 0e0e 	orr.w	lr, r2, lr
 801c97c:	fb00 3505 	mla	r5, r0, r5, r3
 801c980:	120b      	asrs	r3, r1, #8
 801c982:	10c8      	asrs	r0, r1, #3
 801c984:	fb08 5707 	mla	r7, r8, r7, r5
 801c988:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c98c:	00c9      	lsls	r1, r1, #3
 801c98e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c992:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c996:	fa1f f28e 	uxth.w	r2, lr
 801c99a:	b2c9      	uxtb	r1, r1
 801c99c:	b2ff      	uxtb	r7, r7
 801c99e:	437b      	muls	r3, r7
 801c9a0:	4378      	muls	r0, r7
 801c9a2:	434f      	muls	r7, r1
 801c9a4:	1c59      	adds	r1, r3, #1
 801c9a6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c9aa:	1213      	asrs	r3, r2, #8
 801c9ac:	f023 0307 	bic.w	r3, r3, #7
 801c9b0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c9b4:	1c41      	adds	r1, r0, #1
 801c9b6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c9ba:	10d1      	asrs	r1, r2, #3
 801c9bc:	021b      	lsls	r3, r3, #8
 801c9be:	f021 0103 	bic.w	r1, r1, #3
 801c9c2:	00d2      	lsls	r2, r2, #3
 801c9c4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c9c8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c9cc:	00c9      	lsls	r1, r1, #3
 801c9ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c9d2:	430b      	orrs	r3, r1
 801c9d4:	1c79      	adds	r1, r7, #1
 801c9d6:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801c9da:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c9de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c9e2:	431a      	orrs	r2, r3
 801c9e4:	9b03      	ldr	r3, [sp, #12]
 801c9e6:	801a      	strh	r2, [r3, #0]
 801c9e8:	b005      	add	sp, #20
 801c9ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9ee:	f04f 0c00 	mov.w	ip, #0
 801c9f2:	4664      	mov	r4, ip
 801c9f4:	e6e5      	b.n	801c7c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801c9f6:	2300      	movs	r3, #0
 801c9f8:	469c      	mov	ip, r3
 801c9fa:	461a      	mov	r2, r3
 801c9fc:	461c      	mov	r4, r3
 801c9fe:	e707      	b.n	801c810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca00:	2300      	movs	r3, #0
 801ca02:	461a      	mov	r2, r3
 801ca04:	e704      	b.n	801c810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca06:	460b      	mov	r3, r1
 801ca08:	460a      	mov	r2, r1
 801ca0a:	e701      	b.n	801c810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca0c:	2500      	movs	r5, #0
 801ca0e:	46ab      	mov	fp, r5
 801ca10:	e72f      	b.n	801c872 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ca12:	2700      	movs	r7, #0
 801ca14:	463d      	mov	r5, r7
 801ca16:	4638      	mov	r0, r7
 801ca18:	46bb      	mov	fp, r7
 801ca1a:	e754      	b.n	801c8c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ca1c:	4677      	mov	r7, lr
 801ca1e:	4675      	mov	r5, lr
 801ca20:	4670      	mov	r0, lr
 801ca22:	46f3      	mov	fp, lr
 801ca24:	e74f      	b.n	801c8c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ca26:	2700      	movs	r7, #0
 801ca28:	4638      	mov	r0, r7
 801ca2a:	e74c      	b.n	801c8c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ca2c:	460f      	mov	r7, r1
 801ca2e:	4608      	mov	r0, r1
 801ca30:	e749      	b.n	801c8c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801ca34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca38:	b093      	sub	sp, #76	; 0x4c
 801ca3a:	9210      	str	r2, [sp, #64]	; 0x40
 801ca3c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ca3e:	9011      	str	r0, [sp, #68]	; 0x44
 801ca40:	910e      	str	r1, [sp, #56]	; 0x38
 801ca42:	6850      	ldr	r0, [r2, #4]
 801ca44:	9306      	str	r3, [sp, #24]
 801ca46:	6812      	ldr	r2, [r2, #0]
 801ca48:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ca4c:	fb00 1303 	mla	r3, r0, r3, r1
 801ca50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ca54:	9307      	str	r3, [sp, #28]
 801ca56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ca58:	681b      	ldr	r3, [r3, #0]
 801ca5a:	9308      	str	r3, [sp, #32]
 801ca5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ca5e:	685b      	ldr	r3, [r3, #4]
 801ca60:	9309      	str	r3, [sp, #36]	; 0x24
 801ca62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca64:	2b00      	cmp	r3, #0
 801ca66:	dc03      	bgt.n	801ca70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ca68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca6a:	2b00      	cmp	r3, #0
 801ca6c:	f340 83b6 	ble.w	801d1dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ca70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ca72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ca7a:	1e48      	subs	r0, r1, #1
 801ca7c:	1e55      	subs	r5, r2, #1
 801ca7e:	9b06      	ldr	r3, [sp, #24]
 801ca80:	2b00      	cmp	r3, #0
 801ca82:	f340 8165 	ble.w	801cd50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ca86:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801ca88:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ca8a:	1436      	asrs	r6, r6, #16
 801ca8c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ca90:	d406      	bmi.n	801caa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ca92:	4286      	cmp	r6, r0
 801ca94:	da04      	bge.n	801caa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ca96:	2b00      	cmp	r3, #0
 801ca98:	db02      	blt.n	801caa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ca9a:	42ab      	cmp	r3, r5
 801ca9c:	f2c0 8159 	blt.w	801cd52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801caa0:	3601      	adds	r6, #1
 801caa2:	f100 8146 	bmi.w	801cd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801caa6:	42b1      	cmp	r1, r6
 801caa8:	f2c0 8143 	blt.w	801cd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801caac:	3301      	adds	r3, #1
 801caae:	f100 8140 	bmi.w	801cd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cab2:	429a      	cmp	r2, r3
 801cab4:	f2c0 813d 	blt.w	801cd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cab8:	9b06      	ldr	r3, [sp, #24]
 801caba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cabe:	9f07      	ldr	r7, [sp, #28]
 801cac0:	930f      	str	r3, [sp, #60]	; 0x3c
 801cac2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cac4:	2b00      	cmp	r3, #0
 801cac6:	f340 8166 	ble.w	801cd96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801caca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cacc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cace:	1418      	asrs	r0, r3, #16
 801cad0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cad2:	142d      	asrs	r5, r5, #16
 801cad4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cad8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cada:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cade:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cae0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cae4:	f100 81f0 	bmi.w	801cec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cae8:	f102 3eff 	add.w	lr, r2, #4294967295
 801caec:	4575      	cmp	r5, lr
 801caee:	f280 81eb 	bge.w	801cec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801caf2:	2800      	cmp	r0, #0
 801caf4:	f2c0 81e8 	blt.w	801cec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801caf8:	f103 3eff 	add.w	lr, r3, #4294967295
 801cafc:	4570      	cmp	r0, lr
 801cafe:	f280 81e3 	bge.w	801cec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cb02:	b212      	sxth	r2, r2
 801cb04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb06:	fa1f fe81 	uxth.w	lr, r1
 801cb0a:	fb00 5002 	mla	r0, r0, r2, r5
 801cb0e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cb12:	eb03 0a00 	add.w	sl, r3, r0
 801cb16:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cb1a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cb1e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cb22:	b29b      	uxth	r3, r3
 801cb24:	f1bc 0f00 	cmp.w	ip, #0
 801cb28:	f000 817b 	beq.w	801ce22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801cb2c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cb30:	eb0a 0b02 	add.w	fp, sl, r2
 801cb34:	fa1f fa8c 	uxth.w	sl, ip
 801cb38:	940a      	str	r4, [sp, #40]	; 0x28
 801cb3a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cb3e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cb42:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cb46:	eba5 050e 	sub.w	r5, r5, lr
 801cb4a:	940b      	str	r4, [sp, #44]	; 0x2c
 801cb4c:	fa1f fa8a 	uxth.w	sl, sl
 801cb50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cb52:	b2ad      	uxth	r5, r5
 801cb54:	eba3 030a 	sub.w	r3, r3, sl
 801cb58:	fb08 f505 	mul.w	r5, r8, r5
 801cb5c:	b29b      	uxth	r3, r3
 801cb5e:	fb09 5303 	mla	r3, r9, r3, r5
 801cb62:	fb0a 3304 	mla	r3, sl, r4, r3
 801cb66:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cb68:	fb0e 3304 	mla	r3, lr, r4, r3
 801cb6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cb70:	2b00      	cmp	r3, #0
 801cb72:	f000 80d1 	beq.w	801cd18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cb76:	9c08      	ldr	r4, [sp, #32]
 801cb78:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cb7c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cb80:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cb84:	f000 8152 	beq.w	801ce2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cb88:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cb8c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cb90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cb94:	fb0a fe0e 	mul.w	lr, sl, lr
 801cb98:	fb09 f000 	mul.w	r0, r9, r0
 801cb9c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cba0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cba4:	f100 0b20 	add.w	fp, r0, #32
 801cba8:	44ce      	add	lr, r9
 801cbaa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cbae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cbb2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cbb6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cbba:	ea4e 0909 	orr.w	r9, lr, r9
 801cbbe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cbc2:	8868      	ldrh	r0, [r5, #2]
 801cbc4:	d019      	beq.n	801cbfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cbc6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cbca:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cbce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cbd2:	fb0a fe0e 	mul.w	lr, sl, lr
 801cbd6:	fb08 f800 	mul.w	r8, r8, r0
 801cbda:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cbde:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cbe2:	f108 0b20 	add.w	fp, r8, #32
 801cbe6:	4486      	add	lr, r0
 801cbe8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cbec:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cbf0:	0a00      	lsrs	r0, r0, #8
 801cbf2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cbf6:	ea4e 0000 	orr.w	r0, lr, r0
 801cbfa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cbfe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cc02:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cc06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cc0a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cc0e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cc12:	ea4e 0909 	orr.w	r9, lr, r9
 801cc16:	ea4a 0000 	orr.w	r0, sl, r0
 801cc1a:	f1bc 0f00 	cmp.w	ip, #0
 801cc1e:	f000 8107 	beq.w	801ce30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801cc22:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cc26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cc28:	3a01      	subs	r2, #1
 801cc2a:	2cff      	cmp	r4, #255	; 0xff
 801cc2c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801cc30:	f102 0202 	add.w	r2, r2, #2
 801cc34:	eb05 0e02 	add.w	lr, r5, r2
 801cc38:	5aaa      	ldrh	r2, [r5, r2]
 801cc3a:	d018      	beq.n	801cc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801cc3c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cc40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc44:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cc48:	fb04 fa02 	mul.w	sl, r4, r2
 801cc4c:	fb08 f805 	mul.w	r8, r8, r5
 801cc50:	f10a 0520 	add.w	r5, sl, #32
 801cc54:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cc58:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cc5c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cc60:	4442      	add	r2, r8
 801cc62:	0a2d      	lsrs	r5, r5, #8
 801cc64:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cc68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cc6c:	432a      	orrs	r2, r5
 801cc6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cc70:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cc74:	2cff      	cmp	r4, #255	; 0xff
 801cc76:	d01a      	beq.n	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801cc78:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cc7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cc80:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cc84:	fb04 fa05 	mul.w	sl, r4, r5
 801cc88:	fb08 f80e 	mul.w	r8, r8, lr
 801cc8c:	f10a 0e20 	add.w	lr, sl, #32
 801cc90:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cc94:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cc98:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cc9c:	4445      	add	r5, r8
 801cc9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cca2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cca6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ccaa:	ea45 050e 	orr.w	r5, r5, lr
 801ccae:	fb1c fe01 	smulbb	lr, ip, r1
 801ccb2:	f1cc 0810 	rsb	r8, ip, #16
 801ccb6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ccba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ccbe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ccc2:	eba8 0801 	sub.w	r8, r8, r1
 801ccc6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ccca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ccce:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ccd2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ccd6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ccda:	ea4a 0202 	orr.w	r2, sl, r2
 801ccde:	4341      	muls	r1, r0
 801cce0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cce4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cce8:	fb09 1108 	mla	r1, r9, r8, r1
 801ccec:	ea4b 0505 	orr.w	r5, fp, r5
 801ccf0:	fb0c 1102 	mla	r1, ip, r2, r1
 801ccf4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ccf8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ccfc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cd00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd04:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cd08:	ea42 0e0e 	orr.w	lr, r2, lr
 801cd0c:	fa1f f28e 	uxth.w	r2, lr
 801cd10:	2bff      	cmp	r3, #255	; 0xff
 801cd12:	f040 80a1 	bne.w	801ce58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801cd16:	803a      	strh	r2, [r7, #0]
 801cd18:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cd1a:	3702      	adds	r7, #2
 801cd1c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cd1e:	4413      	add	r3, r2
 801cd20:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cd22:	931d      	str	r3, [sp, #116]	; 0x74
 801cd24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cd26:	441a      	add	r2, r3
 801cd28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cd2a:	3b01      	subs	r3, #1
 801cd2c:	921e      	str	r2, [sp, #120]	; 0x78
 801cd2e:	930f      	str	r3, [sp, #60]	; 0x3c
 801cd30:	e6c7      	b.n	801cac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cd32:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cd34:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cd36:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801cd38:	4433      	add	r3, r6
 801cd3a:	931d      	str	r3, [sp, #116]	; 0x74
 801cd3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cd3e:	441c      	add	r4, r3
 801cd40:	9b06      	ldr	r3, [sp, #24]
 801cd42:	3b01      	subs	r3, #1
 801cd44:	941e      	str	r4, [sp, #120]	; 0x78
 801cd46:	9306      	str	r3, [sp, #24]
 801cd48:	9b07      	ldr	r3, [sp, #28]
 801cd4a:	3302      	adds	r3, #2
 801cd4c:	9307      	str	r3, [sp, #28]
 801cd4e:	e696      	b.n	801ca7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cd50:	d028      	beq.n	801cda4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cd52:	9b06      	ldr	r3, [sp, #24]
 801cd54:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cd56:	3b01      	subs	r3, #1
 801cd58:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cd5a:	fb00 5003 	mla	r0, r0, r3, r5
 801cd5e:	1400      	asrs	r0, r0, #16
 801cd60:	f53f aeaa 	bmi.w	801cab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cd64:	3901      	subs	r1, #1
 801cd66:	4288      	cmp	r0, r1
 801cd68:	f6bf aea6 	bge.w	801cab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cd6c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cd6e:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cd70:	fb01 0303 	mla	r3, r1, r3, r0
 801cd74:	141b      	asrs	r3, r3, #16
 801cd76:	f53f ae9f 	bmi.w	801cab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cd7a:	3a01      	subs	r2, #1
 801cd7c:	4293      	cmp	r3, r2
 801cd7e:	f6bf ae9b 	bge.w	801cab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cd82:	9b06      	ldr	r3, [sp, #24]
 801cd84:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cd88:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cd8c:	930f      	str	r3, [sp, #60]	; 0x3c
 801cd8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cd90:	2b00      	cmp	r3, #0
 801cd92:	f300 80b6 	bgt.w	801cf02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801cd96:	9b06      	ldr	r3, [sp, #24]
 801cd98:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cd9c:	9b07      	ldr	r3, [sp, #28]
 801cd9e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cda2:	9307      	str	r3, [sp, #28]
 801cda4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cda6:	2b00      	cmp	r3, #0
 801cda8:	f340 8218 	ble.w	801d1dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cdac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cdb0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cdb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cdb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cdba:	eef0 6a62 	vmov.f32	s13, s5
 801cdbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cdc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cdc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdca:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801cdce:	eef0 6a43 	vmov.f32	s13, s6
 801cdd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdd6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cdda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cdde:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cde2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cde6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cdea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cdee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cdf2:	ee12 2a90 	vmov	r2, s5
 801cdf6:	eef0 2a47 	vmov.f32	s5, s14
 801cdfa:	fb92 f3f3 	sdiv	r3, r2, r3
 801cdfe:	ee13 2a10 	vmov	r2, s6
 801ce02:	931f      	str	r3, [sp, #124]	; 0x7c
 801ce04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce06:	eeb0 3a67 	vmov.f32	s6, s15
 801ce0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce0e:	9320      	str	r3, [sp, #128]	; 0x80
 801ce10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ce14:	3b01      	subs	r3, #1
 801ce16:	930e      	str	r3, [sp, #56]	; 0x38
 801ce18:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce1a:	bf08      	it	eq
 801ce1c:	4613      	moveq	r3, r2
 801ce1e:	9306      	str	r3, [sp, #24]
 801ce20:	e61f      	b.n	801ca62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801ce22:	fb08 f505 	mul.w	r5, r8, r5
 801ce26:	fb09 5303 	mla	r3, r9, r3, r5
 801ce2a:	e69f      	b.n	801cb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801ce2c:	4681      	mov	r9, r0
 801ce2e:	e6c6      	b.n	801cbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801ce30:	f1c1 0210 	rsb	r2, r1, #16
 801ce34:	4341      	muls	r1, r0
 801ce36:	fb09 1902 	mla	r9, r9, r2, r1
 801ce3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ce3e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801ce42:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ce46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce4a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ce4e:	ea42 0909 	orr.w	r9, r2, r9
 801ce52:	fa1f f289 	uxth.w	r2, r9
 801ce56:	e75b      	b.n	801cd10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801ce58:	f8b7 c000 	ldrh.w	ip, [r7]
 801ce5c:	43db      	mvns	r3, r3
 801ce5e:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ce62:	fa5f fe83 	uxtb.w	lr, r3
 801ce66:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ce6a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ce6e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801ce72:	fb00 f00e 	mul.w	r0, r0, lr
 801ce76:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ce7a:	b2db      	uxtb	r3, r3
 801ce7c:	1c41      	adds	r1, r0, #1
 801ce7e:	fb05 f50e 	mul.w	r5, r5, lr
 801ce82:	fb03 f30e 	mul.w	r3, r3, lr
 801ce86:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ce8a:	1211      	asrs	r1, r2, #8
 801ce8c:	f021 0107 	bic.w	r1, r1, #7
 801ce90:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ce94:	48d3      	ldr	r0, [pc, #844]	; (801d1e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801ce96:	b2c9      	uxtb	r1, r1
 801ce98:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801ce9c:	1c69      	adds	r1, r5, #1
 801ce9e:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cea2:	10d1      	asrs	r1, r2, #3
 801cea4:	00d2      	lsls	r2, r2, #3
 801cea6:	f021 0103 	bic.w	r1, r1, #3
 801ceaa:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ceae:	00c9      	lsls	r1, r1, #3
 801ceb0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ceb4:	4301      	orrs	r1, r0
 801ceb6:	1c58      	adds	r0, r3, #1
 801ceb8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cebc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cec0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cec4:	430a      	orrs	r2, r1
 801cec6:	e726      	b.n	801cd16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801cec8:	f115 0e01 	adds.w	lr, r5, #1
 801cecc:	f53f af24 	bmi.w	801cd18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ced0:	4572      	cmp	r2, lr
 801ced2:	f6ff af21 	blt.w	801cd18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ced6:	f110 0e01 	adds.w	lr, r0, #1
 801ceda:	f53f af1d 	bmi.w	801cd18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cede:	4573      	cmp	r3, lr
 801cee0:	f6ff af1a 	blt.w	801cd18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cee4:	b21b      	sxth	r3, r3
 801cee6:	b212      	sxth	r2, r2
 801cee8:	9301      	str	r3, [sp, #4]
 801ceea:	9200      	str	r2, [sp, #0]
 801ceec:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801cef0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801cef4:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801cef8:	4639      	mov	r1, r7
 801cefa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cefc:	f7ff fc22 	bl	801c744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cf00:	e70a      	b.n	801cd18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf02:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cf04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cf08:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cf0a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cf0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cf10:	fa1f fc82 	uxth.w	ip, r2
 801cf14:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cf18:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cf1a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cf1e:	141f      	asrs	r7, r3, #16
 801cf20:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cf22:	141b      	asrs	r3, r3, #16
 801cf24:	fb01 3707 	mla	r7, r1, r7, r3
 801cf28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf2a:	eb03 0a07 	add.w	sl, r3, r7
 801cf2e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cf32:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801cf36:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cf3a:	b29b      	uxth	r3, r3
 801cf3c:	2d00      	cmp	r5, #0
 801cf3e:	f000 80fe 	beq.w	801d13e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801cf42:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cf46:	eb0a 0b01 	add.w	fp, sl, r1
 801cf4a:	fa1f fa85 	uxth.w	sl, r5
 801cf4e:	940c      	str	r4, [sp, #48]	; 0x30
 801cf50:	fb0a fc0c 	mul.w	ip, sl, ip
 801cf54:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cf58:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cf5c:	eba0 000c 	sub.w	r0, r0, ip
 801cf60:	940d      	str	r4, [sp, #52]	; 0x34
 801cf62:	fa1f fa8a 	uxth.w	sl, sl
 801cf66:	b280      	uxth	r0, r0
 801cf68:	eba3 030a 	sub.w	r3, r3, sl
 801cf6c:	fb08 f000 	mul.w	r0, r8, r0
 801cf70:	b29b      	uxth	r3, r3
 801cf72:	fb09 0303 	mla	r3, r9, r3, r0
 801cf76:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cf78:	fb0a 3300 	mla	r3, sl, r0, r3
 801cf7c:	fb0c 3304 	mla	r3, ip, r4, r3
 801cf80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cf84:	2b00      	cmp	r3, #0
 801cf86:	f000 80cc 	beq.w	801d122 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801cf8a:	9808      	ldr	r0, [sp, #32]
 801cf8c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cf90:	9c08      	ldr	r4, [sp, #32]
 801cf92:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cf96:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cf9a:	f000 80d5 	beq.w	801d148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801cf9e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cfa2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cfa6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cfaa:	fb0a fc0c 	mul.w	ip, sl, ip
 801cfae:	fb09 f707 	mul.w	r7, r9, r7
 801cfb2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cfb6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cfba:	f107 0b20 	add.w	fp, r7, #32
 801cfbe:	44cc      	add	ip, r9
 801cfc0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cfc4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cfc8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cfcc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cfd0:	ea4c 0909 	orr.w	r9, ip, r9
 801cfd4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cfd8:	8847      	ldrh	r7, [r0, #2]
 801cfda:	d019      	beq.n	801d010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801cfdc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cfe0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cfe4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cfe8:	fb0a fc0c 	mul.w	ip, sl, ip
 801cfec:	fb08 f807 	mul.w	r8, r8, r7
 801cff0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cff4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cff8:	f108 0b20 	add.w	fp, r8, #32
 801cffc:	44bc      	add	ip, r7
 801cffe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d002:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d006:	0a3f      	lsrs	r7, r7, #8
 801d008:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d00c:	ea4c 0707 	orr.w	r7, ip, r7
 801d010:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d014:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d018:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d01c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d020:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d024:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d028:	ea4c 0909 	orr.w	r9, ip, r9
 801d02c:	ea4a 0707 	orr.w	r7, sl, r7
 801d030:	2d00      	cmp	r5, #0
 801d032:	f000 808b 	beq.w	801d14c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801d036:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d03a:	3901      	subs	r1, #1
 801d03c:	0049      	lsls	r1, r1, #1
 801d03e:	3102      	adds	r1, #2
 801d040:	eb00 0c01 	add.w	ip, r0, r1
 801d044:	5a41      	ldrh	r1, [r0, r1]
 801d046:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d048:	28ff      	cmp	r0, #255	; 0xff
 801d04a:	d019      	beq.n	801d080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801d04c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d050:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d052:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d056:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d05a:	fb04 fa01 	mul.w	sl, r4, r1
 801d05e:	fb08 f800 	mul.w	r8, r8, r0
 801d062:	f10a 0020 	add.w	r0, sl, #32
 801d066:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d06a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d06e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d072:	4441      	add	r1, r8
 801d074:	0a00      	lsrs	r0, r0, #8
 801d076:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d07a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d07e:	4301      	orrs	r1, r0
 801d080:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d082:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d086:	2cff      	cmp	r4, #255	; 0xff
 801d088:	d01a      	beq.n	801d0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801d08a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d08e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d092:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d096:	fb04 fa00 	mul.w	sl, r4, r0
 801d09a:	fb08 f80c 	mul.w	r8, r8, ip
 801d09e:	f10a 0c20 	add.w	ip, sl, #32
 801d0a2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d0a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d0aa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d0ae:	4440      	add	r0, r8
 801d0b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d0b4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d0b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d0bc:	ea40 000c 	orr.w	r0, r0, ip
 801d0c0:	fb15 fc02 	smulbb	ip, r5, r2
 801d0c4:	f1c5 0810 	rsb	r8, r5, #16
 801d0c8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d0cc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d0d0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d0d4:	eba8 0802 	sub.w	r8, r8, r2
 801d0d8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d0dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d0e0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d0e4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d0e8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d0ec:	ea4a 0101 	orr.w	r1, sl, r1
 801d0f0:	437a      	muls	r2, r7
 801d0f2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d0f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d0fa:	fb09 2208 	mla	r2, r9, r8, r2
 801d0fe:	ea4b 0000 	orr.w	r0, fp, r0
 801d102:	fb05 2201 	mla	r2, r5, r1, r2
 801d106:	fb0c 2200 	mla	r2, ip, r0, r2
 801d10a:	0d57      	lsrs	r7, r2, #21
 801d10c:	0952      	lsrs	r2, r2, #5
 801d10e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d112:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d116:	433a      	orrs	r2, r7
 801d118:	2bff      	cmp	r3, #255	; 0xff
 801d11a:	b292      	uxth	r2, r2
 801d11c:	d127      	bne.n	801d16e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801d11e:	f8ae 2000 	strh.w	r2, [lr]
 801d122:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d124:	f10e 0e02 	add.w	lr, lr, #2
 801d128:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d12a:	4413      	add	r3, r2
 801d12c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d12e:	931d      	str	r3, [sp, #116]	; 0x74
 801d130:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d132:	441a      	add	r2, r3
 801d134:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d136:	3b01      	subs	r3, #1
 801d138:	921e      	str	r2, [sp, #120]	; 0x78
 801d13a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d13c:	e627      	b.n	801cd8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d13e:	fb08 f000 	mul.w	r0, r8, r0
 801d142:	fb09 0303 	mla	r3, r9, r3, r0
 801d146:	e71b      	b.n	801cf80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801d148:	46b9      	mov	r9, r7
 801d14a:	e743      	b.n	801cfd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801d14c:	f1c2 0110 	rsb	r1, r2, #16
 801d150:	437a      	muls	r2, r7
 801d152:	fb09 2901 	mla	r9, r9, r1, r2
 801d156:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d15a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d15e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d162:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d166:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d16a:	4302      	orrs	r2, r0
 801d16c:	e7d4      	b.n	801d118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801d16e:	f8be 7000 	ldrh.w	r7, [lr]
 801d172:	43db      	mvns	r3, r3
 801d174:	4c1b      	ldr	r4, [pc, #108]	; (801d1e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801d176:	1238      	asrs	r0, r7, #8
 801d178:	fa5f fc83 	uxtb.w	ip, r3
 801d17c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d180:	10fd      	asrs	r5, r7, #3
 801d182:	00fb      	lsls	r3, r7, #3
 801d184:	fb00 f00c 	mul.w	r0, r0, ip
 801d188:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d18c:	b2db      	uxtb	r3, r3
 801d18e:	fb05 f10c 	mul.w	r1, r5, ip
 801d192:	1c45      	adds	r5, r0, #1
 801d194:	fb03 f30c 	mul.w	r3, r3, ip
 801d198:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d19c:	1215      	asrs	r5, r2, #8
 801d19e:	f025 0507 	bic.w	r5, r5, #7
 801d1a2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d1a6:	1c4d      	adds	r5, r1, #1
 801d1a8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d1ac:	10d1      	asrs	r1, r2, #3
 801d1ae:	b2c0      	uxtb	r0, r0
 801d1b0:	f021 0103 	bic.w	r1, r1, #3
 801d1b4:	00d2      	lsls	r2, r2, #3
 801d1b6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d1ba:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d1be:	00c9      	lsls	r1, r1, #3
 801d1c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d1c4:	4308      	orrs	r0, r1
 801d1c6:	1c59      	adds	r1, r3, #1
 801d1c8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d1cc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d1d0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d1d4:	4318      	orrs	r0, r3
 801d1d6:	f8ae 0000 	strh.w	r0, [lr]
 801d1da:	e7a2      	b.n	801d122 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801d1dc:	b013      	add	sp, #76	; 0x4c
 801d1de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1e2:	bf00      	nop
 801d1e4:	fffff800 	.word	0xfffff800

0801d1e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d1e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d1ec:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d1f0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d1f4:	fb05 4c03 	mla	ip, r5, r3, r4
 801d1f8:	2d00      	cmp	r5, #0
 801d1fa:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d1fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d202:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d206:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d20a:	8808      	ldrh	r0, [r1, #0]
 801d20c:	f2c0 80a7 	blt.w	801d35e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d210:	45aa      	cmp	sl, r5
 801d212:	f340 80a4 	ble.w	801d35e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d216:	2c00      	cmp	r4, #0
 801d218:	f2c0 809f 	blt.w	801d35a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d21c:	42a3      	cmp	r3, r4
 801d21e:	f340 809c 	ble.w	801d35a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d222:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d226:	1c62      	adds	r2, r4, #1
 801d228:	f100 809c 	bmi.w	801d364 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d22c:	4293      	cmp	r3, r2
 801d22e:	f340 8099 	ble.w	801d364 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d232:	f1b9 0f00 	cmp.w	r9, #0
 801d236:	f000 8095 	beq.w	801d364 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d23a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d23e:	3501      	adds	r5, #1
 801d240:	f100 8094 	bmi.w	801d36c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d244:	45aa      	cmp	sl, r5
 801d246:	f340 8091 	ble.w	801d36c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d24a:	2f00      	cmp	r7, #0
 801d24c:	f000 808e 	beq.w	801d36c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d250:	2c00      	cmp	r4, #0
 801d252:	f2c0 8089 	blt.w	801d368 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d256:	42a3      	cmp	r3, r4
 801d258:	f340 8086 	ble.w	801d368 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d25c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d260:	3401      	adds	r4, #1
 801d262:	f100 8086 	bmi.w	801d372 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d266:	42a3      	cmp	r3, r4
 801d268:	f340 8083 	ble.w	801d372 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d26c:	f1b9 0f00 	cmp.w	r9, #0
 801d270:	d07f      	beq.n	801d372 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d272:	3301      	adds	r3, #1
 801d274:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d278:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d27c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d280:	fb19 fe07 	smulbb	lr, r9, r7
 801d284:	f1c7 0210 	rsb	r2, r7, #16
 801d288:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d28c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d290:	eba2 0209 	sub.w	r2, r2, r9
 801d294:	ea44 0808 	orr.w	r8, r4, r8
 801d298:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d29c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d2a0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d2a4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d2a8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d2ac:	ea44 0c0c 	orr.w	ip, r4, ip
 801d2b0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d2b4:	fb04 f40c 	mul.w	r4, r4, ip
 801d2b8:	fb02 4808 	mla	r8, r2, r8, r4
 801d2bc:	041a      	lsls	r2, r3, #16
 801d2be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d2c2:	b2b4      	uxth	r4, r6
 801d2c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d2c8:	43f6      	mvns	r6, r6
 801d2ca:	4313      	orrs	r3, r2
 801d2cc:	042a      	lsls	r2, r5, #16
 801d2ce:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d2d2:	b2f6      	uxtb	r6, r6
 801d2d4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d2d8:	fb0e 8303 	mla	r3, lr, r3, r8
 801d2dc:	432a      	orrs	r2, r5
 801d2de:	fb07 3202 	mla	r2, r7, r2, r3
 801d2e2:	10c7      	asrs	r7, r0, #3
 801d2e4:	0d53      	lsrs	r3, r2, #21
 801d2e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d2ea:	0952      	lsrs	r2, r2, #5
 801d2ec:	fb17 f706 	smulbb	r7, r7, r6
 801d2f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d2f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d2f8:	431a      	orrs	r2, r3
 801d2fa:	b293      	uxth	r3, r2
 801d2fc:	1202      	asrs	r2, r0, #8
 801d2fe:	121d      	asrs	r5, r3, #8
 801d300:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d304:	00c0      	lsls	r0, r0, #3
 801d306:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d30a:	fb12 f206 	smulbb	r2, r2, r6
 801d30e:	b2c0      	uxtb	r0, r0
 801d310:	fb05 2504 	mla	r5, r5, r4, r2
 801d314:	10da      	asrs	r2, r3, #3
 801d316:	fb10 f006 	smulbb	r0, r0, r6
 801d31a:	00db      	lsls	r3, r3, #3
 801d31c:	b2ad      	uxth	r5, r5
 801d31e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d322:	b2db      	uxtb	r3, r3
 801d324:	fb02 7204 	mla	r2, r2, r4, r7
 801d328:	fb03 0004 	mla	r0, r3, r4, r0
 801d32c:	1c6b      	adds	r3, r5, #1
 801d32e:	b292      	uxth	r2, r2
 801d330:	b280      	uxth	r0, r0
 801d332:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d336:	1c43      	adds	r3, r0, #1
 801d338:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d33c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d340:	1c50      	adds	r0, r2, #1
 801d342:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d346:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d34a:	0952      	lsrs	r2, r2, #5
 801d34c:	432b      	orrs	r3, r5
 801d34e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d352:	4313      	orrs	r3, r2
 801d354:	800b      	strh	r3, [r1, #0]
 801d356:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d35a:	4680      	mov	r8, r0
 801d35c:	e763      	b.n	801d226 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d35e:	4684      	mov	ip, r0
 801d360:	4680      	mov	r8, r0
 801d362:	e76c      	b.n	801d23e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d364:	4684      	mov	ip, r0
 801d366:	e76a      	b.n	801d23e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d368:	4605      	mov	r5, r0
 801d36a:	e779      	b.n	801d260 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d36c:	4603      	mov	r3, r0
 801d36e:	4605      	mov	r5, r0
 801d370:	e782      	b.n	801d278 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d372:	4603      	mov	r3, r0
 801d374:	e780      	b.n	801d278 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d376 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d376:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d37a:	b093      	sub	sp, #76	; 0x4c
 801d37c:	461d      	mov	r5, r3
 801d37e:	9210      	str	r2, [sp, #64]	; 0x40
 801d380:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d382:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d386:	910a      	str	r1, [sp, #40]	; 0x28
 801d388:	920b      	str	r2, [sp, #44]	; 0x2c
 801d38a:	6859      	ldr	r1, [r3, #4]
 801d38c:	681b      	ldr	r3, [r3, #0]
 801d38e:	9011      	str	r0, [sp, #68]	; 0x44
 801d390:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d394:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d398:	fb01 2707 	mla	r7, r1, r7, r2
 801d39c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d3a0:	9307      	str	r3, [sp, #28]
 801d3a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d3a4:	681b      	ldr	r3, [r3, #0]
 801d3a6:	9309      	str	r3, [sp, #36]	; 0x24
 801d3a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3aa:	43db      	mvns	r3, r3
 801d3ac:	b2db      	uxtb	r3, r3
 801d3ae:	9308      	str	r3, [sp, #32]
 801d3b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d3b2:	2b00      	cmp	r3, #0
 801d3b4:	dc03      	bgt.n	801d3be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d3b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d3b8:	2b00      	cmp	r3, #0
 801d3ba:	f340 8205 	ble.w	801d7c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d3be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d3c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d3c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d3c8:	1e48      	subs	r0, r1, #1
 801d3ca:	f102 3cff 	add.w	ip, r2, #4294967295
 801d3ce:	2d00      	cmp	r5, #0
 801d3d0:	f340 80da 	ble.w	801d588 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d3d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d3d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d3dc:	d406      	bmi.n	801d3ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d3de:	4586      	cmp	lr, r0
 801d3e0:	da04      	bge.n	801d3ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d3e2:	2b00      	cmp	r3, #0
 801d3e4:	db02      	blt.n	801d3ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d3e6:	4563      	cmp	r3, ip
 801d3e8:	f2c0 80cf 	blt.w	801d58a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d3ec:	f11e 0e01 	adds.w	lr, lr, #1
 801d3f0:	f100 80c1 	bmi.w	801d576 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d3f4:	4571      	cmp	r1, lr
 801d3f6:	f2c0 80be 	blt.w	801d576 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d3fa:	3301      	adds	r3, #1
 801d3fc:	f100 80bb 	bmi.w	801d576 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d400:	429a      	cmp	r2, r3
 801d402:	f2c0 80b8 	blt.w	801d576 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d406:	46a9      	mov	r9, r5
 801d408:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d40c:	f1b9 0f00 	cmp.w	r9, #0
 801d410:	f340 80d8 	ble.w	801d5c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d414:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d416:	1421      	asrs	r1, r4, #16
 801d418:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d41c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d420:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d424:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d428:	f100 8112 	bmi.w	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d42c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d430:	4551      	cmp	r1, sl
 801d432:	f280 810d 	bge.w	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d436:	2800      	cmp	r0, #0
 801d438:	f2c0 810a 	blt.w	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d43c:	f103 3aff 	add.w	sl, r3, #4294967295
 801d440:	4550      	cmp	r0, sl
 801d442:	f280 8105 	bge.w	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d446:	fa0f f38e 	sxth.w	r3, lr
 801d44a:	fb00 1103 	mla	r1, r0, r3, r1
 801d44e:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d450:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d454:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d458:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d45c:	f1bc 0f00 	cmp.w	ip, #0
 801d460:	d007      	beq.n	801d472 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d462:	005b      	lsls	r3, r3, #1
 801d464:	eb0a 0003 	add.w	r0, sl, r3
 801d468:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d46c:	930c      	str	r3, [sp, #48]	; 0x30
 801d46e:	8843      	ldrh	r3, [r0, #2]
 801d470:	930d      	str	r3, [sp, #52]	; 0x34
 801d472:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d476:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d47a:	fb12 f30c 	smulbb	r3, r2, ip
 801d47e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d482:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d486:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d48a:	10db      	asrs	r3, r3, #3
 801d48c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d490:	ea40 000e 	orr.w	r0, r0, lr
 801d494:	f1cc 0e10 	rsb	lr, ip, #16
 801d498:	ea4a 0101 	orr.w	r1, sl, r1
 801d49c:	9f08      	ldr	r7, [sp, #32]
 801d49e:	ebae 0e02 	sub.w	lr, lr, r2
 801d4a2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d4a6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d4aa:	4351      	muls	r1, r2
 801d4ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d4ae:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d4b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d4b4:	0410      	lsls	r0, r2, #16
 801d4b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d4ba:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d4be:	4310      	orrs	r0, r2
 801d4c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d4c2:	0412      	lsls	r2, r2, #16
 801d4c4:	fb03 e000 	mla	r0, r3, r0, lr
 801d4c8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d4cc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d4d0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d4d4:	ea42 020e 	orr.w	r2, r2, lr
 801d4d8:	fb03 0302 	mla	r3, r3, r2, r0
 801d4dc:	f8b8 0000 	ldrh.w	r0, [r8]
 801d4e0:	0d5a      	lsrs	r2, r3, #21
 801d4e2:	095b      	lsrs	r3, r3, #5
 801d4e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d4e8:	1201      	asrs	r1, r0, #8
 801d4ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d4ee:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d4f2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d4f6:	00c0      	lsls	r0, r0, #3
 801d4f8:	4313      	orrs	r3, r2
 801d4fa:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d4fe:	fb11 f107 	smulbb	r1, r1, r7
 801d502:	b2c0      	uxtb	r0, r0
 801d504:	b29b      	uxth	r3, r3
 801d506:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d50a:	fb10 f007 	smulbb	r0, r0, r7
 801d50e:	fb1e fe07 	smulbb	lr, lr, r7
 801d512:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d516:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d51a:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d51e:	10d9      	asrs	r1, r3, #3
 801d520:	00db      	lsls	r3, r3, #3
 801d522:	fa1f fc8c 	uxth.w	ip, ip
 801d526:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d52a:	b2db      	uxtb	r3, r3
 801d52c:	fb01 e102 	mla	r1, r1, r2, lr
 801d530:	fb03 0302 	mla	r3, r3, r2, r0
 801d534:	b289      	uxth	r1, r1
 801d536:	b29a      	uxth	r2, r3
 801d538:	f10c 0301 	add.w	r3, ip, #1
 801d53c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d540:	1c53      	adds	r3, r2, #1
 801d542:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d546:	1c4a      	adds	r2, r1, #1
 801d548:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d54c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d550:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d554:	0949      	lsrs	r1, r1, #5
 801d556:	ea43 030c 	orr.w	r3, r3, ip
 801d55a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d55e:	430b      	orrs	r3, r1
 801d560:	f8a8 3000 	strh.w	r3, [r8]
 801d564:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d566:	f108 0802 	add.w	r8, r8, #2
 801d56a:	f109 39ff 	add.w	r9, r9, #4294967295
 801d56e:	441c      	add	r4, r3
 801d570:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d572:	441e      	add	r6, r3
 801d574:	e74a      	b.n	801d40c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d576:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d578:	3d01      	subs	r5, #1
 801d57a:	441c      	add	r4, r3
 801d57c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d57e:	441e      	add	r6, r3
 801d580:	9b07      	ldr	r3, [sp, #28]
 801d582:	3302      	adds	r3, #2
 801d584:	9307      	str	r3, [sp, #28]
 801d586:	e722      	b.n	801d3ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d588:	d022      	beq.n	801d5d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d58a:	1e6b      	subs	r3, r5, #1
 801d58c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d58e:	fb00 4003 	mla	r0, r0, r3, r4
 801d592:	1400      	asrs	r0, r0, #16
 801d594:	f53f af37 	bmi.w	801d406 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d598:	3901      	subs	r1, #1
 801d59a:	4288      	cmp	r0, r1
 801d59c:	f6bf af33 	bge.w	801d406 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d5a0:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d5a2:	fb01 6303 	mla	r3, r1, r3, r6
 801d5a6:	141b      	asrs	r3, r3, #16
 801d5a8:	f53f af2d 	bmi.w	801d406 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d5ac:	3a01      	subs	r2, #1
 801d5ae:	4293      	cmp	r3, r2
 801d5b0:	f6bf af29 	bge.w	801d406 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d5b4:	46a8      	mov	r8, r5
 801d5b6:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d5ba:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d5be:	f1b8 0f00 	cmp.w	r8, #0
 801d5c2:	dc60      	bgt.n	801d686 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801d5c4:	9b07      	ldr	r3, [sp, #28]
 801d5c6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d5ca:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d5ce:	9307      	str	r3, [sp, #28]
 801d5d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d5d2:	2b00      	cmp	r3, #0
 801d5d4:	f340 80f8 	ble.w	801d7c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d5d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d5dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d5de:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5e6:	eef0 6a62 	vmov.f32	s13, s5
 801d5ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d5ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d5f6:	ee16 4a90 	vmov	r4, s13
 801d5fa:	eef0 6a43 	vmov.f32	s13, s6
 801d5fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d602:	ee16 6a90 	vmov	r6, s13
 801d606:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d60a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d60e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d612:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d616:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d61a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d61e:	ee12 2a90 	vmov	r2, s5
 801d622:	eef0 2a47 	vmov.f32	s5, s14
 801d626:	fb92 f3f3 	sdiv	r3, r2, r3
 801d62a:	ee13 2a10 	vmov	r2, s6
 801d62e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d630:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d632:	eeb0 3a67 	vmov.f32	s6, s15
 801d636:	fb92 f3f3 	sdiv	r3, r2, r3
 801d63a:	9320      	str	r3, [sp, #128]	; 0x80
 801d63c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d63e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d640:	3b01      	subs	r3, #1
 801d642:	930a      	str	r3, [sp, #40]	; 0x28
 801d644:	bf08      	it	eq
 801d646:	4615      	moveq	r5, r2
 801d648:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d64a:	bf18      	it	ne
 801d64c:	461d      	movne	r5, r3
 801d64e:	e6af      	b.n	801d3b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d650:	f111 0a01 	adds.w	sl, r1, #1
 801d654:	d486      	bmi.n	801d564 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d656:	45d6      	cmp	lr, sl
 801d658:	db84      	blt.n	801d564 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d65a:	f110 0a01 	adds.w	sl, r0, #1
 801d65e:	d481      	bmi.n	801d564 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d660:	4553      	cmp	r3, sl
 801d662:	f6ff af7f 	blt.w	801d564 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d666:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d668:	b21b      	sxth	r3, r3
 801d66a:	9101      	str	r1, [sp, #4]
 801d66c:	4641      	mov	r1, r8
 801d66e:	9300      	str	r3, [sp, #0]
 801d670:	fa0f f38e 	sxth.w	r3, lr
 801d674:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d678:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d67c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d67e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d680:	f7ff fdb2 	bl	801d1e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d684:	e76e      	b.n	801d564 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d686:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d688:	1430      	asrs	r0, r6, #16
 801d68a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d68c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d690:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d694:	1423      	asrs	r3, r4, #16
 801d696:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d69a:	fb01 3000 	mla	r0, r1, r0, r3
 801d69e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d6a0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d6a4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d6a8:	8858      	ldrh	r0, [r3, #2]
 801d6aa:	f1be 0f00 	cmp.w	lr, #0
 801d6ae:	d00b      	beq.n	801d6c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801d6b0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d6b4:	3901      	subs	r1, #1
 801d6b6:	0049      	lsls	r1, r1, #1
 801d6b8:	3102      	adds	r1, #2
 801d6ba:	eb03 0b01 	add.w	fp, r3, r1
 801d6be:	5a5b      	ldrh	r3, [r3, r1]
 801d6c0:	930e      	str	r3, [sp, #56]	; 0x38
 801d6c2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d6c6:	930f      	str	r3, [sp, #60]	; 0x3c
 801d6c8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d6cc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d6d0:	fb12 f30e 	smulbb	r3, r2, lr
 801d6d4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d6d8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d6dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d6e0:	10db      	asrs	r3, r3, #3
 801d6e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d6e6:	ea41 010c 	orr.w	r1, r1, ip
 801d6ea:	f1ce 0c10 	rsb	ip, lr, #16
 801d6ee:	ea4b 0000 	orr.w	r0, fp, r0
 801d6f2:	9f08      	ldr	r7, [sp, #32]
 801d6f4:	ebac 0c02 	sub.w	ip, ip, r2
 801d6f8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d6fc:	f108 38ff 	add.w	r8, r8, #4294967295
 801d700:	4350      	muls	r0, r2
 801d702:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d706:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d708:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d70c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d70e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d712:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d716:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d718:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d71c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d720:	0412      	lsls	r2, r2, #16
 801d722:	ea4b 0101 	orr.w	r1, fp, r1
 801d726:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d72a:	fb03 c101 	mla	r1, r3, r1, ip
 801d72e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d732:	4302      	orrs	r2, r0
 801d734:	fb03 1202 	mla	r2, r3, r2, r1
 801d738:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d73c:	0952      	lsrs	r2, r2, #5
 801d73e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d742:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d746:	f8b9 2000 	ldrh.w	r2, [r9]
 801d74a:	ea4b 0303 	orr.w	r3, fp, r3
 801d74e:	1211      	asrs	r1, r2, #8
 801d750:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d754:	b29b      	uxth	r3, r3
 801d756:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d75a:	00d2      	lsls	r2, r2, #3
 801d75c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d760:	fb11 f107 	smulbb	r1, r1, r7
 801d764:	1218      	asrs	r0, r3, #8
 801d766:	fb1c fc07 	smulbb	ip, ip, r7
 801d76a:	b2d2      	uxtb	r2, r2
 801d76c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d770:	fb12 f207 	smulbb	r2, r2, r7
 801d774:	fb00 100a 	mla	r0, r0, sl, r1
 801d778:	10d9      	asrs	r1, r3, #3
 801d77a:	00db      	lsls	r3, r3, #3
 801d77c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d780:	b280      	uxth	r0, r0
 801d782:	b2db      	uxtb	r3, r3
 801d784:	fb01 c10a 	mla	r1, r1, sl, ip
 801d788:	fb03 230a 	mla	r3, r3, sl, r2
 801d78c:	1c42      	adds	r2, r0, #1
 801d78e:	b289      	uxth	r1, r1
 801d790:	b29b      	uxth	r3, r3
 801d792:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d796:	f101 0c01 	add.w	ip, r1, #1
 801d79a:	1c5a      	adds	r2, r3, #1
 801d79c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d7a0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d7a4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d7a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d7aa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d7ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d7b2:	441c      	add	r4, r3
 801d7b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d7b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d7ba:	4310      	orrs	r0, r2
 801d7bc:	441e      	add	r6, r3
 801d7be:	ea40 000c 	orr.w	r0, r0, ip
 801d7c2:	f829 0b02 	strh.w	r0, [r9], #2
 801d7c6:	e6fa      	b.n	801d5be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d7c8:	b013      	add	sp, #76	; 0x4c
 801d7ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d7ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d7ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d7d2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d7d6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d7da:	fb0e 4703 	mla	r7, lr, r3, r4
 801d7de:	f1be 0f00 	cmp.w	lr, #0
 801d7e2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d7e6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d7ea:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d7ee:	8808      	ldrh	r0, [r1, #0]
 801d7f0:	db60      	blt.n	801d8b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d7f2:	45f1      	cmp	r9, lr
 801d7f4:	dd5e      	ble.n	801d8b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d7f6:	2c00      	cmp	r4, #0
 801d7f8:	db5a      	blt.n	801d8b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d7fa:	42a3      	cmp	r3, r4
 801d7fc:	dd58      	ble.n	801d8b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d7fe:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d802:	1c62      	adds	r2, r4, #1
 801d804:	d459      	bmi.n	801d8ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d806:	4293      	cmp	r3, r2
 801d808:	dd57      	ble.n	801d8ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d80a:	2d00      	cmp	r5, #0
 801d80c:	d055      	beq.n	801d8ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d80e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d812:	f11e 0e01 	adds.w	lr, lr, #1
 801d816:	d454      	bmi.n	801d8c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d818:	45f1      	cmp	r9, lr
 801d81a:	dd52      	ble.n	801d8c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d81c:	2e00      	cmp	r6, #0
 801d81e:	d050      	beq.n	801d8c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d820:	2c00      	cmp	r4, #0
 801d822:	db4c      	blt.n	801d8be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d824:	42a3      	cmp	r3, r4
 801d826:	dd4a      	ble.n	801d8be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d828:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d82c:	3401      	adds	r4, #1
 801d82e:	d405      	bmi.n	801d83c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d830:	42a3      	cmp	r3, r4
 801d832:	dd03      	ble.n	801d83c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d834:	b115      	cbz	r5, 801d83c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d836:	3301      	adds	r3, #1
 801d838:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d83c:	fb15 f406 	smulbb	r4, r5, r6
 801d840:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d844:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d848:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d84c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d850:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d854:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d858:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d85c:	ea43 0c0c 	orr.w	ip, r3, ip
 801d860:	f1c6 0310 	rsb	r3, r6, #16
 801d864:	ea4e 0707 	orr.w	r7, lr, r7
 801d868:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d86c:	1b5b      	subs	r3, r3, r5
 801d86e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d872:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d876:	437d      	muls	r5, r7
 801d878:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d87c:	0403      	lsls	r3, r0, #16
 801d87e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d882:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d886:	4318      	orrs	r0, r3
 801d888:	0413      	lsls	r3, r2, #16
 801d88a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d88e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d892:	fb04 c000 	mla	r0, r4, r0, ip
 801d896:	4313      	orrs	r3, r2
 801d898:	fb06 0003 	mla	r0, r6, r3, r0
 801d89c:	0d43      	lsrs	r3, r0, #21
 801d89e:	0940      	lsrs	r0, r0, #5
 801d8a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d8a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d8a8:	4318      	orrs	r0, r3
 801d8aa:	8008      	strh	r0, [r1, #0]
 801d8ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d8b0:	4684      	mov	ip, r0
 801d8b2:	e7a6      	b.n	801d802 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d8b4:	4607      	mov	r7, r0
 801d8b6:	4684      	mov	ip, r0
 801d8b8:	e7ab      	b.n	801d812 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d8ba:	4607      	mov	r7, r0
 801d8bc:	e7a9      	b.n	801d812 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d8be:	4602      	mov	r2, r0
 801d8c0:	e7b4      	b.n	801d82c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d8c2:	4602      	mov	r2, r0
 801d8c4:	e7ba      	b.n	801d83c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d8c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d8c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8ca:	b08f      	sub	sp, #60	; 0x3c
 801d8cc:	461d      	mov	r5, r3
 801d8ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d8d0:	9107      	str	r1, [sp, #28]
 801d8d2:	920c      	str	r2, [sp, #48]	; 0x30
 801d8d4:	6859      	ldr	r1, [r3, #4]
 801d8d6:	681b      	ldr	r3, [r3, #0]
 801d8d8:	900d      	str	r0, [sp, #52]	; 0x34
 801d8da:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d8de:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d8e2:	fb01 2707 	mla	r7, r1, r7, r2
 801d8e6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d8ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d8ec:	f8d3 8000 	ldr.w	r8, [r3]
 801d8f0:	9b07      	ldr	r3, [sp, #28]
 801d8f2:	2b00      	cmp	r3, #0
 801d8f4:	dc03      	bgt.n	801d8fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d8f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d8f8:	2b00      	cmp	r3, #0
 801d8fa:	f340 8182 	ble.w	801dc02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801d8fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d900:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d904:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d908:	1e48      	subs	r0, r1, #1
 801d90a:	f102 3cff 	add.w	ip, r2, #4294967295
 801d90e:	2d00      	cmp	r5, #0
 801d910:	f340 809b 	ble.w	801da4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d914:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d918:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d91c:	d406      	bmi.n	801d92c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d91e:	4586      	cmp	lr, r0
 801d920:	da04      	bge.n	801d92c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d922:	2b00      	cmp	r3, #0
 801d924:	db02      	blt.n	801d92c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d926:	4563      	cmp	r3, ip
 801d928:	f2c0 8090 	blt.w	801da4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d92c:	f11e 0e01 	adds.w	lr, lr, #1
 801d930:	f100 8084 	bmi.w	801da3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d934:	4571      	cmp	r1, lr
 801d936:	f2c0 8081 	blt.w	801da3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d93a:	3301      	adds	r3, #1
 801d93c:	d47e      	bmi.n	801da3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d93e:	429a      	cmp	r2, r3
 801d940:	db7c      	blt.n	801da3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d942:	46aa      	mov	sl, r5
 801d944:	46b9      	mov	r9, r7
 801d946:	f1ba 0f00 	cmp.w	sl, #0
 801d94a:	f340 8099 	ble.w	801da80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d94e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d950:	1421      	asrs	r1, r4, #16
 801d952:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d956:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d95a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d95e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d962:	f100 80d1 	bmi.w	801db08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d966:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d96a:	4559      	cmp	r1, fp
 801d96c:	f280 80cc 	bge.w	801db08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d970:	2800      	cmp	r0, #0
 801d972:	f2c0 80c9 	blt.w	801db08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d976:	f103 3bff 	add.w	fp, r3, #4294967295
 801d97a:	4558      	cmp	r0, fp
 801d97c:	f280 80c4 	bge.w	801db08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d980:	fa0f fe8e 	sxth.w	lr, lr
 801d984:	fb00 110e 	mla	r1, r0, lr, r1
 801d988:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d98c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d990:	8841      	ldrh	r1, [r0, #2]
 801d992:	f1bc 0f00 	cmp.w	ip, #0
 801d996:	d00b      	beq.n	801d9b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d998:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801d99c:	3b01      	subs	r3, #1
 801d99e:	005b      	lsls	r3, r3, #1
 801d9a0:	3302      	adds	r3, #2
 801d9a2:	eb00 0e03 	add.w	lr, r0, r3
 801d9a6:	5ac3      	ldrh	r3, [r0, r3]
 801d9a8:	9308      	str	r3, [sp, #32]
 801d9aa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d9ae:	9309      	str	r3, [sp, #36]	; 0x24
 801d9b0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d9b4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d9b8:	fb12 f30c 	smulbb	r3, r2, ip
 801d9bc:	f1cc 0e10 	rsb	lr, ip, #16
 801d9c0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d9c4:	10db      	asrs	r3, r3, #3
 801d9c6:	ebae 0e02 	sub.w	lr, lr, r2
 801d9ca:	ea40 000b 	orr.w	r0, r0, fp
 801d9ce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d9d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d9d6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d9da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d9de:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d9e2:	ea4b 0101 	orr.w	r1, fp, r1
 801d9e6:	4351      	muls	r1, r2
 801d9e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d9ea:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d9ee:	0410      	lsls	r0, r2, #16
 801d9f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d9f4:	9908      	ldr	r1, [sp, #32]
 801d9f6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d9fa:	4310      	orrs	r0, r2
 801d9fc:	9a08      	ldr	r2, [sp, #32]
 801d9fe:	0412      	lsls	r2, r2, #16
 801da00:	fb03 e000 	mla	r0, r3, r0, lr
 801da04:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801da08:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801da0c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801da10:	ea42 020e 	orr.w	r2, r2, lr
 801da14:	fb03 0302 	mla	r3, r3, r2, r0
 801da18:	0d5a      	lsrs	r2, r3, #21
 801da1a:	095b      	lsrs	r3, r3, #5
 801da1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801da20:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801da24:	4313      	orrs	r3, r2
 801da26:	f8a9 3000 	strh.w	r3, [r9]
 801da2a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801da2c:	f109 0902 	add.w	r9, r9, #2
 801da30:	f10a 3aff 	add.w	sl, sl, #4294967295
 801da34:	441c      	add	r4, r3
 801da36:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da38:	441e      	add	r6, r3
 801da3a:	e784      	b.n	801d946 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801da3c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801da3e:	3d01      	subs	r5, #1
 801da40:	3702      	adds	r7, #2
 801da42:	441c      	add	r4, r3
 801da44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da46:	441e      	add	r6, r3
 801da48:	e761      	b.n	801d90e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801da4a:	d01d      	beq.n	801da88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801da4c:	1e6b      	subs	r3, r5, #1
 801da4e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801da50:	fb00 4003 	mla	r0, r0, r3, r4
 801da54:	1400      	asrs	r0, r0, #16
 801da56:	f53f af74 	bmi.w	801d942 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da5a:	3901      	subs	r1, #1
 801da5c:	4288      	cmp	r0, r1
 801da5e:	f6bf af70 	bge.w	801d942 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da62:	991c      	ldr	r1, [sp, #112]	; 0x70
 801da64:	fb01 6303 	mla	r3, r1, r3, r6
 801da68:	141b      	asrs	r3, r3, #16
 801da6a:	f53f af6a 	bmi.w	801d942 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da6e:	3a01      	subs	r2, #1
 801da70:	4293      	cmp	r3, r2
 801da72:	f6bf af66 	bge.w	801d942 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da76:	46a9      	mov	r9, r5
 801da78:	46ba      	mov	sl, r7
 801da7a:	f1b9 0f00 	cmp.w	r9, #0
 801da7e:	dc5b      	bgt.n	801db38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801da80:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801da84:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801da88:	9b07      	ldr	r3, [sp, #28]
 801da8a:	2b00      	cmp	r3, #0
 801da8c:	f340 80b9 	ble.w	801dc02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801da90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801da94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801da96:	ee30 0a04 	vadd.f32	s0, s0, s8
 801da9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801da9e:	eef0 6a62 	vmov.f32	s13, s5
 801daa2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801daa6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801daaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801daae:	ee16 4a90 	vmov	r4, s13
 801dab2:	eef0 6a43 	vmov.f32	s13, s6
 801dab6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801daba:	ee16 6a90 	vmov	r6, s13
 801dabe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dac2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dac6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801daca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dace:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dad2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dad6:	ee12 2a90 	vmov	r2, s5
 801dada:	eef0 2a47 	vmov.f32	s5, s14
 801dade:	fb92 f3f3 	sdiv	r3, r2, r3
 801dae2:	ee13 2a10 	vmov	r2, s6
 801dae6:	931b      	str	r3, [sp, #108]	; 0x6c
 801dae8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801daea:	eeb0 3a67 	vmov.f32	s6, s15
 801daee:	fb92 f3f3 	sdiv	r3, r2, r3
 801daf2:	931c      	str	r3, [sp, #112]	; 0x70
 801daf4:	9b07      	ldr	r3, [sp, #28]
 801daf6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801daf8:	3b01      	subs	r3, #1
 801dafa:	9307      	str	r3, [sp, #28]
 801dafc:	bf08      	it	eq
 801dafe:	4615      	moveq	r5, r2
 801db00:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801db02:	bf18      	it	ne
 801db04:	461d      	movne	r5, r3
 801db06:	e6f3      	b.n	801d8f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801db08:	f111 0b01 	adds.w	fp, r1, #1
 801db0c:	d48d      	bmi.n	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db0e:	45de      	cmp	lr, fp
 801db10:	db8b      	blt.n	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db12:	f110 0b01 	adds.w	fp, r0, #1
 801db16:	d488      	bmi.n	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db18:	455b      	cmp	r3, fp
 801db1a:	db86      	blt.n	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db1c:	b21b      	sxth	r3, r3
 801db1e:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801db22:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801db26:	9300      	str	r3, [sp, #0]
 801db28:	4642      	mov	r2, r8
 801db2a:	fa0f f38e 	sxth.w	r3, lr
 801db2e:	4649      	mov	r1, r9
 801db30:	980d      	ldr	r0, [sp, #52]	; 0x34
 801db32:	f7ff fe4c 	bl	801d7ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801db36:	e778      	b.n	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db3a:	1420      	asrs	r0, r4, #16
 801db3c:	1431      	asrs	r1, r6, #16
 801db3e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801db42:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801db46:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801db4a:	fb03 0101 	mla	r1, r3, r1, r0
 801db4e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801db52:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801db56:	8841      	ldrh	r1, [r0, #2]
 801db58:	f1be 0f00 	cmp.w	lr, #0
 801db5c:	d00b      	beq.n	801db76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801db5e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801db62:	3b01      	subs	r3, #1
 801db64:	005b      	lsls	r3, r3, #1
 801db66:	3302      	adds	r3, #2
 801db68:	eb00 0b03 	add.w	fp, r0, r3
 801db6c:	5ac3      	ldrh	r3, [r0, r3]
 801db6e:	930a      	str	r3, [sp, #40]	; 0x28
 801db70:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801db74:	930b      	str	r3, [sp, #44]	; 0x2c
 801db76:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801db7a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801db7e:	fb12 f30e 	smulbb	r3, r2, lr
 801db82:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801db86:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801db8a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801db8e:	10db      	asrs	r3, r3, #3
 801db90:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801db94:	ea40 000c 	orr.w	r0, r0, ip
 801db98:	f1ce 0c10 	rsb	ip, lr, #16
 801db9c:	ea4b 0101 	orr.w	r1, fp, r1
 801dba0:	f109 39ff 	add.w	r9, r9, #4294967295
 801dba4:	ebac 0c02 	sub.w	ip, ip, r2
 801dba8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dbac:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dbb0:	4351      	muls	r1, r2
 801dbb2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dbb4:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dbb8:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dbba:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dbbe:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dbc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dbc4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dbc8:	0412      	lsls	r2, r2, #16
 801dbca:	ea4b 0000 	orr.w	r0, fp, r0
 801dbce:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801dbd2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dbd6:	fb03 c000 	mla	r0, r3, r0, ip
 801dbda:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dbde:	ea42 0b0b 	orr.w	fp, r2, fp
 801dbe2:	fb03 000b 	mla	r0, r3, fp, r0
 801dbe6:	0d43      	lsrs	r3, r0, #21
 801dbe8:	0940      	lsrs	r0, r0, #5
 801dbea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dbee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dbf2:	4318      	orrs	r0, r3
 801dbf4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dbf6:	441c      	add	r4, r3
 801dbf8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dbfa:	f82a 0b02 	strh.w	r0, [sl], #2
 801dbfe:	441e      	add	r6, r3
 801dc00:	e73b      	b.n	801da7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dc02:	b00f      	add	sp, #60	; 0x3c
 801dc04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dc08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc0c:	b085      	sub	sp, #20
 801dc0e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dc12:	9102      	str	r1, [sp, #8]
 801dc14:	2c00      	cmp	r4, #0
 801dc16:	fb04 7103 	mla	r1, r4, r3, r7
 801dc1a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801dc1e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801dc22:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dc26:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801dc2a:	f2c0 811b 	blt.w	801de64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dc2e:	45a6      	cmp	lr, r4
 801dc30:	f340 8118 	ble.w	801de64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dc34:	2f00      	cmp	r7, #0
 801dc36:	f2c0 8113 	blt.w	801de60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dc3a:	42bb      	cmp	r3, r7
 801dc3c:	f340 8110 	ble.w	801de60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dc40:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dc44:	1c7a      	adds	r2, r7, #1
 801dc46:	f100 8110 	bmi.w	801de6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dc4a:	4293      	cmp	r3, r2
 801dc4c:	f340 810d 	ble.w	801de6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dc50:	2e00      	cmp	r6, #0
 801dc52:	f000 810c 	beq.w	801de6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dc56:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dc5a:	3401      	adds	r4, #1
 801dc5c:	f100 810b 	bmi.w	801de76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dc60:	45a6      	cmp	lr, r4
 801dc62:	f340 8108 	ble.w	801de76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dc66:	2800      	cmp	r0, #0
 801dc68:	f000 8108 	beq.w	801de7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801dc6c:	2f00      	cmp	r7, #0
 801dc6e:	f2c0 8100 	blt.w	801de72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dc72:	42bb      	cmp	r3, r7
 801dc74:	f340 80fd 	ble.w	801de72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dc78:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dc7c:	3701      	adds	r7, #1
 801dc7e:	f100 8100 	bmi.w	801de82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dc82:	42bb      	cmp	r3, r7
 801dc84:	f340 80fd 	ble.w	801de82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dc88:	2e00      	cmp	r6, #0
 801dc8a:	f000 80fc 	beq.w	801de86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801dc8e:	3301      	adds	r3, #1
 801dc90:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801dc94:	b2b6      	uxth	r6, r6
 801dc96:	b280      	uxth	r0, r0
 801dc98:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dc9c:	fb00 fe06 	mul.w	lr, r0, r6
 801dca0:	0136      	lsls	r6, r6, #4
 801dca2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dca6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dcaa:	eba6 070e 	sub.w	r7, r6, lr
 801dcae:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dcb2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dcb6:	b280      	uxth	r0, r0
 801dcb8:	b2bf      	uxth	r7, r7
 801dcba:	1a1b      	subs	r3, r3, r0
 801dcbc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801dcc0:	fb0a f607 	mul.w	r6, sl, r7
 801dcc4:	b29b      	uxth	r3, r3
 801dcc6:	fb0b 6603 	mla	r6, fp, r3, r6
 801dcca:	fb00 6609 	mla	r6, r0, r9, r6
 801dcce:	fb0e 6608 	mla	r6, lr, r8, r6
 801dcd2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dcd6:	9600      	str	r6, [sp, #0]
 801dcd8:	2e00      	cmp	r6, #0
 801dcda:	f000 80be 	beq.w	801de5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801dcde:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dce2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801dce6:	9e02      	ldr	r6, [sp, #8]
 801dce8:	fb0b fc0c 	mul.w	ip, fp, ip
 801dcec:	fb0b f505 	mul.w	r5, fp, r5
 801dcf0:	8836      	ldrh	r6, [r6, #0]
 801dcf2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dcf6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dcfa:	9501      	str	r5, [sp, #4]
 801dcfc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801dd00:	44dc      	add	ip, fp
 801dd02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd06:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801dd0a:	9503      	str	r5, [sp, #12]
 801dd0c:	9d01      	ldr	r5, [sp, #4]
 801dd0e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801dd12:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dd16:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801dd1a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dd1e:	fb0a fc0c 	mul.w	ip, sl, ip
 801dd22:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dd26:	fb0a fa01 	mul.w	sl, sl, r1
 801dd2a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dd2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dd32:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801dd36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dd3a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dd3e:	4465      	add	r5, ip
 801dd40:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dd44:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801dd48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd4c:	fb09 fc0c 	mul.w	ip, r9, ip
 801dd50:	0a2d      	lsrs	r5, r5, #8
 801dd52:	fb09 f904 	mul.w	r9, r9, r4
 801dd56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd5a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801dd5e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dd62:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801dd66:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dd6a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dd6e:	437d      	muls	r5, r7
 801dd70:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801dd74:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801dd78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dd7c:	4461      	add	r1, ip
 801dd7e:	fb08 f404 	mul.w	r4, r8, r4
 801dd82:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dd86:	fb08 f802 	mul.w	r8, r8, r2
 801dd8a:	0a09      	lsrs	r1, r1, #8
 801dd8c:	0a22      	lsrs	r2, r4, #8
 801dd8e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801dd92:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dd96:	fb07 f70a 	mul.w	r7, r7, sl
 801dd9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dd9e:	4414      	add	r4, r2
 801dda0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801dda4:	0a24      	lsrs	r4, r4, #8
 801dda6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ddaa:	9a03      	ldr	r2, [sp, #12]
 801ddac:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ddb0:	fb02 5503 	mla	r5, r2, r3, r5
 801ddb4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ddb8:	9a00      	ldr	r2, [sp, #0]
 801ddba:	fb04 540e 	mla	r4, r4, lr, r5
 801ddbe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ddc2:	1235      	asrs	r5, r6, #8
 801ddc4:	fb01 4100 	mla	r1, r1, r0, r4
 801ddc8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ddcc:	0a09      	lsrs	r1, r1, #8
 801ddce:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ddd2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ddd6:	fb03 7101 	mla	r1, r3, r1, r7
 801ddda:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ddde:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801dde2:	fb00 e101 	mla	r1, r0, r1, lr
 801dde6:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ddea:	b287      	uxth	r7, r0
 801ddec:	0a09      	lsrs	r1, r1, #8
 801ddee:	437a      	muls	r2, r7
 801ddf0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ddf4:	1c53      	adds	r3, r2, #1
 801ddf6:	4321      	orrs	r1, r4
 801ddf8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ddfc:	0c0a      	lsrs	r2, r1, #16
 801ddfe:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801de02:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801de06:	b2c8      	uxtb	r0, r1
 801de08:	fb12 f207 	smulbb	r2, r2, r7
 801de0c:	fb14 f407 	smulbb	r4, r4, r7
 801de10:	b2db      	uxtb	r3, r3
 801de12:	fb10 f007 	smulbb	r0, r0, r7
 801de16:	fb05 2503 	mla	r5, r5, r3, r2
 801de1a:	10f2      	asrs	r2, r6, #3
 801de1c:	00f6      	lsls	r6, r6, #3
 801de1e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801de22:	b2ad      	uxth	r5, r5
 801de24:	b2f6      	uxtb	r6, r6
 801de26:	fb02 4203 	mla	r2, r2, r3, r4
 801de2a:	fb06 0303 	mla	r3, r6, r3, r0
 801de2e:	b294      	uxth	r4, r2
 801de30:	b299      	uxth	r1, r3
 801de32:	1c6b      	adds	r3, r5, #1
 801de34:	1c62      	adds	r2, r4, #1
 801de36:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801de3a:	1c4b      	adds	r3, r1, #1
 801de3c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801de40:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801de44:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801de48:	0952      	lsrs	r2, r2, #5
 801de4a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801de4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de52:	432b      	orrs	r3, r5
 801de54:	4313      	orrs	r3, r2
 801de56:	9a02      	ldr	r2, [sp, #8]
 801de58:	8013      	strh	r3, [r2, #0]
 801de5a:	b005      	add	sp, #20
 801de5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de60:	2500      	movs	r5, #0
 801de62:	e6ef      	b.n	801dc44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801de64:	2100      	movs	r1, #0
 801de66:	460d      	mov	r5, r1
 801de68:	e6f7      	b.n	801dc5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801de6a:	2100      	movs	r1, #0
 801de6c:	e6f5      	b.n	801dc5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801de6e:	4631      	mov	r1, r6
 801de70:	e6f3      	b.n	801dc5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801de72:	2400      	movs	r4, #0
 801de74:	e702      	b.n	801dc7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801de76:	2200      	movs	r2, #0
 801de78:	4614      	mov	r4, r2
 801de7a:	e70b      	b.n	801dc94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801de7c:	4602      	mov	r2, r0
 801de7e:	4604      	mov	r4, r0
 801de80:	e708      	b.n	801dc94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801de82:	2200      	movs	r2, #0
 801de84:	e706      	b.n	801dc94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801de86:	4632      	mov	r2, r6
 801de88:	e704      	b.n	801dc94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801de8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de8e:	b09d      	sub	sp, #116	; 0x74
 801de90:	9219      	str	r2, [sp, #100]	; 0x64
 801de92:	9307      	str	r3, [sp, #28]
 801de94:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801de96:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801de9a:	901b      	str	r0, [sp, #108]	; 0x6c
 801de9c:	931a      	str	r3, [sp, #104]	; 0x68
 801de9e:	6850      	ldr	r0, [r2, #4]
 801dea0:	9117      	str	r1, [sp, #92]	; 0x5c
 801dea2:	6812      	ldr	r2, [r2, #0]
 801dea4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801dea8:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801deac:	fb00 1303 	mla	r3, r0, r3, r1
 801deb0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801deb4:	930a      	str	r3, [sp, #40]	; 0x28
 801deb6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801deb8:	681b      	ldr	r3, [r3, #0]
 801deba:	9310      	str	r3, [sp, #64]	; 0x40
 801debc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dec0:	930b      	str	r3, [sp, #44]	; 0x2c
 801dec2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dec4:	2b00      	cmp	r3, #0
 801dec6:	dc03      	bgt.n	801ded0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801dec8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801deca:	2b00      	cmp	r3, #0
 801decc:	f340 8375 	ble.w	801e5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ded0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ded2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ded6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801deda:	1e48      	subs	r0, r1, #1
 801dedc:	1e57      	subs	r7, r2, #1
 801dede:	9b07      	ldr	r3, [sp, #28]
 801dee0:	2b00      	cmp	r3, #0
 801dee2:	f340 818e 	ble.w	801e202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801dee6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801deea:	ea4f 4326 	mov.w	r3, r6, asr #16
 801deee:	d406      	bmi.n	801defe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801def0:	4584      	cmp	ip, r0
 801def2:	da04      	bge.n	801defe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801def4:	2b00      	cmp	r3, #0
 801def6:	db02      	blt.n	801defe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801def8:	42bb      	cmp	r3, r7
 801defa:	f2c0 8183 	blt.w	801e204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801defe:	f11c 0c01 	adds.w	ip, ip, #1
 801df02:	f100 8173 	bmi.w	801e1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df06:	4561      	cmp	r1, ip
 801df08:	f2c0 8170 	blt.w	801e1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df0c:	3301      	adds	r3, #1
 801df0e:	f100 816d 	bmi.w	801e1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df12:	429a      	cmp	r2, r3
 801df14:	f2c0 816a 	blt.w	801e1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df18:	9b07      	ldr	r3, [sp, #28]
 801df1a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801df1c:	9318      	str	r3, [sp, #96]	; 0x60
 801df1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801df20:	2b00      	cmp	r3, #0
 801df22:	f340 818c 	ble.w	801e23e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801df26:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801df28:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801df2c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801df2e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801df32:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801df36:	1422      	asrs	r2, r4, #16
 801df38:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801df3c:	689b      	ldr	r3, [r3, #8]
 801df3e:	f100 81cd 	bmi.w	801e2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df42:	f103 38ff 	add.w	r8, r3, #4294967295
 801df46:	4542      	cmp	r2, r8
 801df48:	f280 81c8 	bge.w	801e2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df4c:	f1bc 0f00 	cmp.w	ip, #0
 801df50:	f2c0 81c4 	blt.w	801e2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df54:	f10e 38ff 	add.w	r8, lr, #4294967295
 801df58:	45c4      	cmp	ip, r8
 801df5a:	f280 81bf 	bge.w	801e2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df5e:	b21b      	sxth	r3, r3
 801df60:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801df62:	fb0c 2203 	mla	r2, ip, r3, r2
 801df66:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801df6a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801df6e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801df72:	2800      	cmp	r0, #0
 801df74:	f000 81a9 	beq.w	801e2ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801df78:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801df7c:	950c      	str	r5, [sp, #48]	; 0x30
 801df7e:	0e2d      	lsrs	r5, r5, #24
 801df80:	9513      	str	r5, [sp, #76]	; 0x4c
 801df82:	b181      	cbz	r1, 801dfa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df84:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801df88:	3b01      	subs	r3, #1
 801df8a:	009b      	lsls	r3, r3, #2
 801df8c:	3304      	adds	r3, #4
 801df8e:	eb08 0c03 	add.w	ip, r8, r3
 801df92:	f858 3003 	ldr.w	r3, [r8, r3]
 801df96:	9308      	str	r3, [sp, #32]
 801df98:	0e1b      	lsrs	r3, r3, #24
 801df9a:	9311      	str	r3, [sp, #68]	; 0x44
 801df9c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801dfa0:	930d      	str	r3, [sp, #52]	; 0x34
 801dfa2:	0e1b      	lsrs	r3, r3, #24
 801dfa4:	9314      	str	r3, [sp, #80]	; 0x50
 801dfa6:	b280      	uxth	r0, r0
 801dfa8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dfaa:	b289      	uxth	r1, r1
 801dfac:	fb00 f901 	mul.w	r9, r0, r1
 801dfb0:	0100      	lsls	r0, r0, #4
 801dfb2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dfb6:	eba0 0809 	sub.w	r8, r0, r9
 801dfba:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801dfbe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dfc0:	b289      	uxth	r1, r1
 801dfc2:	fa1f f888 	uxth.w	r8, r8
 801dfc6:	1a5b      	subs	r3, r3, r1
 801dfc8:	fb08 f000 	mul.w	r0, r8, r0
 801dfcc:	b29b      	uxth	r3, r3
 801dfce:	fb03 000e 	mla	r0, r3, lr, r0
 801dfd2:	fb01 0005 	mla	r0, r1, r5, r0
 801dfd6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dfd8:	fb09 0005 	mla	r0, r9, r5, r0
 801dfdc:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801dfe0:	2800      	cmp	r0, #0
 801dfe2:	f000 80fa 	beq.w	801e1da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801dfe6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801dfea:	d01b      	beq.n	801e024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801dfec:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801dff0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dff4:	fb0e fa0a 	mul.w	sl, lr, sl
 801dff8:	fb0e fe02 	mul.w	lr, lr, r2
 801dffc:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e000:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e004:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e008:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e00c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e010:	4452      	add	r2, sl
 801e012:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e016:	0a12      	lsrs	r2, r2, #8
 801e018:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e01c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e020:	ea42 020c 	orr.w	r2, r2, ip
 801e024:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e026:	2dff      	cmp	r5, #255	; 0xff
 801e028:	d021      	beq.n	801e06e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e02a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e02c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e030:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e032:	fb05 fb0b 	mul.w	fp, r5, fp
 801e036:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e038:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e03c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e03e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e042:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e046:	fb05 fa0a 	mul.w	sl, r5, sl
 801e04a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e04e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e052:	44de      	add	lr, fp
 801e054:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e058:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e05c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e060:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e064:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e068:	ea4e 050a 	orr.w	r5, lr, sl
 801e06c:	950c      	str	r5, [sp, #48]	; 0x30
 801e06e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e070:	2dff      	cmp	r5, #255	; 0xff
 801e072:	d021      	beq.n	801e0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e074:	9d08      	ldr	r5, [sp, #32]
 801e076:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e07a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e07c:	fb05 fb0b 	mul.w	fp, r5, fp
 801e080:	9d08      	ldr	r5, [sp, #32]
 801e082:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e086:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e088:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e08c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e090:	fb05 fa0a 	mul.w	sl, r5, sl
 801e094:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e098:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e09c:	44de      	add	lr, fp
 801e09e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e0a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e0a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e0ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e0b2:	ea4e 050a 	orr.w	r5, lr, sl
 801e0b6:	9508      	str	r5, [sp, #32]
 801e0b8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e0ba:	2dff      	cmp	r5, #255	; 0xff
 801e0bc:	d021      	beq.n	801e102 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e0be:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e0c0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e0c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e0c6:	fb05 fb0b 	mul.w	fp, r5, fp
 801e0ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e0cc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e0d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e0d2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e0d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e0da:	fb05 fa0a 	mul.w	sl, r5, sl
 801e0de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e0e2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e0e6:	44de      	add	lr, fp
 801e0e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e0ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e0f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e0f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e0fc:	ea4e 050a 	orr.w	r5, lr, sl
 801e100:	950d      	str	r5, [sp, #52]	; 0x34
 801e102:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e104:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e108:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e10c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e110:	9d08      	ldr	r5, [sp, #32]
 801e112:	fb08 fc0c 	mul.w	ip, r8, ip
 801e116:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e11a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e11e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e120:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e124:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e128:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e12a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e12e:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e132:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e134:	fb08 f80e 	mul.w	r8, r8, lr
 801e138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e13c:	fb03 8202 	mla	r2, r3, r2, r8
 801e140:	9b08      	ldr	r3, [sp, #32]
 801e142:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e146:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e14a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e14c:	fb01 220a 	mla	r2, r1, sl, r2
 801e150:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e154:	883b      	ldrh	r3, [r7, #0]
 801e156:	fb09 2901 	mla	r9, r9, r1, r2
 801e15a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e15c:	1219      	asrs	r1, r3, #8
 801e15e:	4342      	muls	r2, r0
 801e160:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e164:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e168:	1c50      	adds	r0, r2, #1
 801e16a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e16e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e172:	ea4c 0c09 	orr.w	ip, ip, r9
 801e176:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e17a:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e17e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e182:	fa5f fc8c 	uxtb.w	ip, ip
 801e186:	fb12 f205 	smulbb	r2, r2, r5
 801e18a:	b2c0      	uxtb	r0, r0
 801e18c:	fb1c fc05 	smulbb	ip, ip, r5
 801e190:	fb01 2100 	mla	r1, r1, r0, r2
 801e194:	10da      	asrs	r2, r3, #3
 801e196:	fb1e fe05 	smulbb	lr, lr, r5
 801e19a:	00db      	lsls	r3, r3, #3
 801e19c:	b289      	uxth	r1, r1
 801e19e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e1a2:	b2db      	uxtb	r3, r3
 801e1a4:	fb02 e200 	mla	r2, r2, r0, lr
 801e1a8:	fb03 c300 	mla	r3, r3, r0, ip
 801e1ac:	b292      	uxth	r2, r2
 801e1ae:	fa1f fc83 	uxth.w	ip, r3
 801e1b2:	1c4b      	adds	r3, r1, #1
 801e1b4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e1b8:	f10c 0301 	add.w	r3, ip, #1
 801e1bc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e1c0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e1c4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e1c8:	430b      	orrs	r3, r1
 801e1ca:	1c51      	adds	r1, r2, #1
 801e1cc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e1d0:	0952      	lsrs	r2, r2, #5
 801e1d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e1d6:	4313      	orrs	r3, r2
 801e1d8:	803b      	strh	r3, [r7, #0]
 801e1da:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e1dc:	3702      	adds	r7, #2
 801e1de:	441c      	add	r4, r3
 801e1e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e1e2:	441e      	add	r6, r3
 801e1e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e1e6:	3b01      	subs	r3, #1
 801e1e8:	9318      	str	r3, [sp, #96]	; 0x60
 801e1ea:	e698      	b.n	801df1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e1ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e1ee:	441c      	add	r4, r3
 801e1f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e1f2:	441e      	add	r6, r3
 801e1f4:	9b07      	ldr	r3, [sp, #28]
 801e1f6:	3b01      	subs	r3, #1
 801e1f8:	9307      	str	r3, [sp, #28]
 801e1fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e1fc:	3302      	adds	r3, #2
 801e1fe:	930a      	str	r3, [sp, #40]	; 0x28
 801e200:	e66d      	b.n	801dede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e202:	d023      	beq.n	801e24c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e204:	9b07      	ldr	r3, [sp, #28]
 801e206:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e208:	3b01      	subs	r3, #1
 801e20a:	fb00 4003 	mla	r0, r0, r3, r4
 801e20e:	1400      	asrs	r0, r0, #16
 801e210:	f53f ae82 	bmi.w	801df18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e214:	3901      	subs	r1, #1
 801e216:	4288      	cmp	r0, r1
 801e218:	f6bf ae7e 	bge.w	801df18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e21c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e21e:	fb01 6303 	mla	r3, r1, r3, r6
 801e222:	141b      	asrs	r3, r3, #16
 801e224:	f53f ae78 	bmi.w	801df18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e228:	3a01      	subs	r2, #1
 801e22a:	4293      	cmp	r3, r2
 801e22c:	f6bf ae74 	bge.w	801df18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e230:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e234:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e238:	f1bb 0f00 	cmp.w	fp, #0
 801e23c:	dc6c      	bgt.n	801e318 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e23e:	9b07      	ldr	r3, [sp, #28]
 801e240:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e244:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e246:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e24a:	930a      	str	r3, [sp, #40]	; 0x28
 801e24c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e24e:	2b00      	cmp	r3, #0
 801e250:	f340 81b3 	ble.w	801e5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e254:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e258:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e25a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e25e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e262:	eef0 6a62 	vmov.f32	s13, s5
 801e266:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e26a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e26e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e272:	ee16 4a90 	vmov	r4, s13
 801e276:	eef0 6a43 	vmov.f32	s13, s6
 801e27a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e27e:	ee16 6a90 	vmov	r6, s13
 801e282:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e286:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e28a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e28e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e292:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e296:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e29a:	ee12 2a90 	vmov	r2, s5
 801e29e:	eef0 2a47 	vmov.f32	s5, s14
 801e2a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2a6:	ee13 2a10 	vmov	r2, s6
 801e2aa:	9329      	str	r3, [sp, #164]	; 0xa4
 801e2ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e2ae:	eeb0 3a67 	vmov.f32	s6, s15
 801e2b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2b6:	932a      	str	r3, [sp, #168]	; 0xa8
 801e2b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e2ba:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e2bc:	3b01      	subs	r3, #1
 801e2be:	9317      	str	r3, [sp, #92]	; 0x5c
 801e2c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e2c2:	bf08      	it	eq
 801e2c4:	4613      	moveq	r3, r2
 801e2c6:	9307      	str	r3, [sp, #28]
 801e2c8:	e5fb      	b.n	801dec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e2ca:	2900      	cmp	r1, #0
 801e2cc:	f43f ae6b 	beq.w	801dfa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e2d0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e2d4:	9308      	str	r3, [sp, #32]
 801e2d6:	0e1b      	lsrs	r3, r3, #24
 801e2d8:	9311      	str	r3, [sp, #68]	; 0x44
 801e2da:	e664      	b.n	801dfa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e2dc:	f112 0801 	adds.w	r8, r2, #1
 801e2e0:	f53f af7b 	bmi.w	801e1da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e2e4:	4543      	cmp	r3, r8
 801e2e6:	f6ff af78 	blt.w	801e1da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e2ea:	f11c 0801 	adds.w	r8, ip, #1
 801e2ee:	f53f af74 	bmi.w	801e1da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e2f2:	45c6      	cmp	lr, r8
 801e2f4:	f6ff af71 	blt.w	801e1da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e2f8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e2fa:	b21b      	sxth	r3, r3
 801e2fc:	9201      	str	r2, [sp, #4]
 801e2fe:	fa0f f28e 	sxth.w	r2, lr
 801e302:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e306:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e30a:	9200      	str	r2, [sp, #0]
 801e30c:	4639      	mov	r1, r7
 801e30e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e310:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e312:	f7ff fc79 	bl	801dc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e316:	e760      	b.n	801e1da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e318:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e31a:	1427      	asrs	r7, r4, #16
 801e31c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e31e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e322:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e326:	1433      	asrs	r3, r6, #16
 801e328:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e32c:	fb01 7303 	mla	r3, r1, r3, r7
 801e330:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e334:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e338:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e33c:	2a00      	cmp	r2, #0
 801e33e:	f000 8133 	beq.w	801e5a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e342:	687d      	ldr	r5, [r7, #4]
 801e344:	950e      	str	r5, [sp, #56]	; 0x38
 801e346:	0e2d      	lsrs	r5, r5, #24
 801e348:	9515      	str	r5, [sp, #84]	; 0x54
 801e34a:	b178      	cbz	r0, 801e36c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e34c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e350:	3901      	subs	r1, #1
 801e352:	0089      	lsls	r1, r1, #2
 801e354:	3104      	adds	r1, #4
 801e356:	eb07 0e01 	add.w	lr, r7, r1
 801e35a:	5879      	ldr	r1, [r7, r1]
 801e35c:	9109      	str	r1, [sp, #36]	; 0x24
 801e35e:	0e09      	lsrs	r1, r1, #24
 801e360:	9112      	str	r1, [sp, #72]	; 0x48
 801e362:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e366:	910f      	str	r1, [sp, #60]	; 0x3c
 801e368:	0e09      	lsrs	r1, r1, #24
 801e36a:	9116      	str	r1, [sp, #88]	; 0x58
 801e36c:	b292      	uxth	r2, r2
 801e36e:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e370:	b280      	uxth	r0, r0
 801e372:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e374:	fb02 f800 	mul.w	r8, r2, r0
 801e378:	0112      	lsls	r2, r2, #4
 801e37a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e37e:	eba2 0e08 	sub.w	lr, r2, r8
 801e382:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e386:	b280      	uxth	r0, r0
 801e388:	fa1f fe8e 	uxth.w	lr, lr
 801e38c:	1a12      	subs	r2, r2, r0
 801e38e:	fb0e f101 	mul.w	r1, lr, r1
 801e392:	b292      	uxth	r2, r2
 801e394:	fb02 110c 	mla	r1, r2, ip, r1
 801e398:	fb00 1105 	mla	r1, r0, r5, r1
 801e39c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e39e:	fb08 1105 	mla	r1, r8, r5, r1
 801e3a2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e3a6:	2900      	cmp	r1, #0
 801e3a8:	f000 80f5 	beq.w	801e596 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e3ac:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e3b0:	d019      	beq.n	801e3e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e3b2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e3b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e3ba:	fb0c fa0a 	mul.w	sl, ip, sl
 801e3be:	fb0c fc03 	mul.w	ip, ip, r3
 801e3c2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e3c6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e3ca:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e3ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e3d2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e3d6:	4453      	add	r3, sl
 801e3d8:	0a3f      	lsrs	r7, r7, #8
 801e3da:	0a1b      	lsrs	r3, r3, #8
 801e3dc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e3e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e3e4:	433b      	orrs	r3, r7
 801e3e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e3e8:	2dff      	cmp	r5, #255	; 0xff
 801e3ea:	d020      	beq.n	801e42e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e3ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e3ee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e3f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e3f4:	436f      	muls	r7, r5
 801e3f6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e3f8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e3fc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e400:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e402:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e406:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e40a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e40e:	44bc      	add	ip, r7
 801e410:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e414:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e418:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e41c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e420:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e424:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e428:	ea4c 050a 	orr.w	r5, ip, sl
 801e42c:	950e      	str	r5, [sp, #56]	; 0x38
 801e42e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e430:	2dff      	cmp	r5, #255	; 0xff
 801e432:	d020      	beq.n	801e476 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e434:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e436:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e43a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e43c:	436f      	muls	r7, r5
 801e43e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e440:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e444:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e448:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e44a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e44e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e452:	fb05 fa0a 	mul.w	sl, r5, sl
 801e456:	44bc      	add	ip, r7
 801e458:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e45c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e460:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e464:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e468:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e46c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e470:	ea4c 050a 	orr.w	r5, ip, sl
 801e474:	9509      	str	r5, [sp, #36]	; 0x24
 801e476:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e478:	2dff      	cmp	r5, #255	; 0xff
 801e47a:	d020      	beq.n	801e4be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e47c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e47e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e482:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e484:	436f      	muls	r7, r5
 801e486:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e488:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e48c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e490:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e492:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e496:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e49a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e49e:	44bc      	add	ip, r7
 801e4a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e4a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e4ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e4b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e4b8:	ea4c 050a 	orr.w	r5, ip, sl
 801e4bc:	950f      	str	r5, [sp, #60]	; 0x3c
 801e4be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e4c0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e4c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e4c8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e4cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e4ce:	fb0e f707 	mul.w	r7, lr, r7
 801e4d2:	fb02 770c 	mla	r7, r2, ip, r7
 801e4d6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e4da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e4dc:	fb00 770c 	mla	r7, r0, ip, r7
 801e4e0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e4e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e4e6:	fb08 770c 	mla	r7, r8, ip, r7
 801e4ea:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e4ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e4f0:	fb0e fe0c 	mul.w	lr, lr, ip
 801e4f4:	0a3f      	lsrs	r7, r7, #8
 801e4f6:	fb02 e303 	mla	r3, r2, r3, lr
 801e4fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e4fc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e500:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e504:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e506:	fb00 330a 	mla	r3, r0, sl, r3
 801e50a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e50e:	f8b9 0000 	ldrh.w	r0, [r9]
 801e512:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e516:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e518:	1202      	asrs	r2, r0, #8
 801e51a:	4359      	muls	r1, r3
 801e51c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e520:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e524:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e528:	1c4b      	adds	r3, r1, #1
 801e52a:	ea47 070c 	orr.w	r7, r7, ip
 801e52e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e532:	0c3b      	lsrs	r3, r7, #16
 801e534:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e538:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e53c:	b2ff      	uxtb	r7, r7
 801e53e:	fb13 f305 	smulbb	r3, r3, r5
 801e542:	b2c9      	uxtb	r1, r1
 801e544:	fb17 f705 	smulbb	r7, r7, r5
 801e548:	fb02 3201 	mla	r2, r2, r1, r3
 801e54c:	10c3      	asrs	r3, r0, #3
 801e54e:	fb1c fc05 	smulbb	ip, ip, r5
 801e552:	00c0      	lsls	r0, r0, #3
 801e554:	b292      	uxth	r2, r2
 801e556:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e55a:	b2c0      	uxtb	r0, r0
 801e55c:	fb03 c301 	mla	r3, r3, r1, ip
 801e560:	fb00 7001 	mla	r0, r0, r1, r7
 801e564:	1c51      	adds	r1, r2, #1
 801e566:	b29b      	uxth	r3, r3
 801e568:	b280      	uxth	r0, r0
 801e56a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e56e:	f100 0c01 	add.w	ip, r0, #1
 801e572:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e576:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e57a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e57e:	ea4c 0202 	orr.w	r2, ip, r2
 801e582:	f103 0c01 	add.w	ip, r3, #1
 801e586:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e58a:	095b      	lsrs	r3, r3, #5
 801e58c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e590:	431a      	orrs	r2, r3
 801e592:	f8a9 2000 	strh.w	r2, [r9]
 801e596:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e598:	f109 0902 	add.w	r9, r9, #2
 801e59c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e5a0:	441c      	add	r4, r3
 801e5a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e5a4:	441e      	add	r6, r3
 801e5a6:	e647      	b.n	801e238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e5a8:	2800      	cmp	r0, #0
 801e5aa:	f43f aedf 	beq.w	801e36c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e5ae:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e5b2:	9109      	str	r1, [sp, #36]	; 0x24
 801e5b4:	0e09      	lsrs	r1, r1, #24
 801e5b6:	9112      	str	r1, [sp, #72]	; 0x48
 801e5b8:	e6d8      	b.n	801e36c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e5ba:	b01d      	add	sp, #116	; 0x74
 801e5bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e5c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5c4:	b085      	sub	sp, #20
 801e5c6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e5ca:	9102      	str	r1, [sp, #8]
 801e5cc:	2c00      	cmp	r4, #0
 801e5ce:	fb04 7103 	mla	r1, r4, r3, r7
 801e5d2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e5d6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e5da:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e5de:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e5e2:	f2c0 810c 	blt.w	801e7fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e5e6:	45a6      	cmp	lr, r4
 801e5e8:	f340 8109 	ble.w	801e7fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e5ec:	2f00      	cmp	r7, #0
 801e5ee:	f2c0 8104 	blt.w	801e7fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e5f2:	42bb      	cmp	r3, r7
 801e5f4:	f340 8101 	ble.w	801e7fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e5f8:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e5fc:	1c7a      	adds	r2, r7, #1
 801e5fe:	f100 8101 	bmi.w	801e804 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e602:	4293      	cmp	r3, r2
 801e604:	f340 80fe 	ble.w	801e804 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e608:	2e00      	cmp	r6, #0
 801e60a:	f000 80fd 	beq.w	801e808 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e60e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e612:	3401      	adds	r4, #1
 801e614:	f100 80fc 	bmi.w	801e810 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e618:	45a6      	cmp	lr, r4
 801e61a:	f340 80f9 	ble.w	801e810 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e61e:	2800      	cmp	r0, #0
 801e620:	f000 80f9 	beq.w	801e816 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e624:	2f00      	cmp	r7, #0
 801e626:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e62a:	f2c0 80ef 	blt.w	801e80c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e62e:	42bb      	cmp	r3, r7
 801e630:	f340 80ec 	ble.w	801e80c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e634:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e638:	3701      	adds	r7, #1
 801e63a:	f100 80ef 	bmi.w	801e81c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e63e:	42bb      	cmp	r3, r7
 801e640:	f340 80ec 	ble.w	801e81c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e644:	2e00      	cmp	r6, #0
 801e646:	f000 80eb 	beq.w	801e820 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e64a:	6852      	ldr	r2, [r2, #4]
 801e64c:	b2b6      	uxth	r6, r6
 801e64e:	b280      	uxth	r0, r0
 801e650:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e654:	fb00 fe06 	mul.w	lr, r0, r6
 801e658:	0136      	lsls	r6, r6, #4
 801e65a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e65e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e662:	eba6 070e 	sub.w	r7, r6, lr
 801e666:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e66a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e66e:	b280      	uxth	r0, r0
 801e670:	b2bf      	uxth	r7, r7
 801e672:	1a1b      	subs	r3, r3, r0
 801e674:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e678:	fb07 f60a 	mul.w	r6, r7, sl
 801e67c:	b29b      	uxth	r3, r3
 801e67e:	fb0b 6603 	mla	r6, fp, r3, r6
 801e682:	fb00 6609 	mla	r6, r0, r9, r6
 801e686:	fb0e 6608 	mla	r6, lr, r8, r6
 801e68a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e68e:	9600      	str	r6, [sp, #0]
 801e690:	2e00      	cmp	r6, #0
 801e692:	f000 80af 	beq.w	801e7f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e696:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e69a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e69e:	9e02      	ldr	r6, [sp, #8]
 801e6a0:	fb0b fc0c 	mul.w	ip, fp, ip
 801e6a4:	fb0b f505 	mul.w	r5, fp, r5
 801e6a8:	8836      	ldrh	r6, [r6, #0]
 801e6aa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e6ae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e6b2:	9501      	str	r5, [sp, #4]
 801e6b4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e6b8:	44dc      	add	ip, fp
 801e6ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e6be:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e6c2:	9503      	str	r5, [sp, #12]
 801e6c4:	9d01      	ldr	r5, [sp, #4]
 801e6c6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e6ca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e6ce:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e6d2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e6d6:	fb0a fc0c 	mul.w	ip, sl, ip
 801e6da:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e6de:	fb0a fa01 	mul.w	sl, sl, r1
 801e6e2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e6e6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e6ea:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e6ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e6f2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e6f6:	4465      	add	r5, ip
 801e6f8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e6fc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e700:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e704:	fb09 fc0c 	mul.w	ip, r9, ip
 801e708:	0a2d      	lsrs	r5, r5, #8
 801e70a:	fb09 f904 	mul.w	r9, r9, r4
 801e70e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e712:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e716:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e71a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e71e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e722:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e726:	437d      	muls	r5, r7
 801e728:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e72c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e730:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e734:	4461      	add	r1, ip
 801e736:	fb08 f404 	mul.w	r4, r8, r4
 801e73a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e73e:	fb08 f802 	mul.w	r8, r8, r2
 801e742:	0a09      	lsrs	r1, r1, #8
 801e744:	0a22      	lsrs	r2, r4, #8
 801e746:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e74a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e74e:	fb07 f70a 	mul.w	r7, r7, sl
 801e752:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e756:	4414      	add	r4, r2
 801e758:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e75c:	0a24      	lsrs	r4, r4, #8
 801e75e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e762:	9a03      	ldr	r2, [sp, #12]
 801e764:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e768:	fb02 5503 	mla	r5, r2, r3, r5
 801e76c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e770:	fb04 540e 	mla	r4, r4, lr, r5
 801e774:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e778:	fb01 4100 	mla	r1, r1, r0, r4
 801e77c:	0a09      	lsrs	r1, r1, #8
 801e77e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e782:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e786:	fb03 7101 	mla	r1, r3, r1, r7
 801e78a:	9b00      	ldr	r3, [sp, #0]
 801e78c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e790:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e794:	43da      	mvns	r2, r3
 801e796:	1233      	asrs	r3, r6, #8
 801e798:	fb00 e101 	mla	r1, r0, r1, lr
 801e79c:	10f0      	asrs	r0, r6, #3
 801e79e:	b2d2      	uxtb	r2, r2
 801e7a0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e7a4:	0a09      	lsrs	r1, r1, #8
 801e7a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e7aa:	00f6      	lsls	r6, r6, #3
 801e7ac:	4353      	muls	r3, r2
 801e7ae:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e7b2:	4350      	muls	r0, r2
 801e7b4:	b2f6      	uxtb	r6, r6
 801e7b6:	4321      	orrs	r1, r4
 801e7b8:	4356      	muls	r6, r2
 801e7ba:	1c5a      	adds	r2, r3, #1
 801e7bc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e7c0:	0c0b      	lsrs	r3, r1, #16
 801e7c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e7c6:	1c42      	adds	r2, r0, #1
 801e7c8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e7cc:	0a0a      	lsrs	r2, r1, #8
 801e7ce:	021b      	lsls	r3, r3, #8
 801e7d0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e7d4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e7d8:	00d2      	lsls	r2, r2, #3
 801e7da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e7de:	4313      	orrs	r3, r2
 801e7e0:	1c72      	adds	r2, r6, #1
 801e7e2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e7e6:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e7ea:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e7ee:	4319      	orrs	r1, r3
 801e7f0:	9b02      	ldr	r3, [sp, #8]
 801e7f2:	8019      	strh	r1, [r3, #0]
 801e7f4:	b005      	add	sp, #20
 801e7f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7fa:	2500      	movs	r5, #0
 801e7fc:	e6fe      	b.n	801e5fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e7fe:	2100      	movs	r1, #0
 801e800:	460d      	mov	r5, r1
 801e802:	e706      	b.n	801e612 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e804:	2100      	movs	r1, #0
 801e806:	e704      	b.n	801e612 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e808:	4631      	mov	r1, r6
 801e80a:	e702      	b.n	801e612 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e80c:	2400      	movs	r4, #0
 801e80e:	e713      	b.n	801e638 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e810:	2200      	movs	r2, #0
 801e812:	4614      	mov	r4, r2
 801e814:	e71a      	b.n	801e64c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e816:	4602      	mov	r2, r0
 801e818:	4604      	mov	r4, r0
 801e81a:	e717      	b.n	801e64c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e81c:	2200      	movs	r2, #0
 801e81e:	e715      	b.n	801e64c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e820:	4632      	mov	r2, r6
 801e822:	e713      	b.n	801e64c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801e824 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e828:	b09b      	sub	sp, #108	; 0x6c
 801e82a:	9218      	str	r2, [sp, #96]	; 0x60
 801e82c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e82e:	9019      	str	r0, [sp, #100]	; 0x64
 801e830:	9116      	str	r1, [sp, #88]	; 0x58
 801e832:	6850      	ldr	r0, [r2, #4]
 801e834:	9307      	str	r3, [sp, #28]
 801e836:	6812      	ldr	r2, [r2, #0]
 801e838:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e83c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e840:	fb00 1303 	mla	r3, r0, r3, r1
 801e844:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e848:	930a      	str	r3, [sp, #40]	; 0x28
 801e84a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e84c:	681b      	ldr	r3, [r3, #0]
 801e84e:	930f      	str	r3, [sp, #60]	; 0x3c
 801e850:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e852:	2b00      	cmp	r3, #0
 801e854:	dc03      	bgt.n	801e85e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e856:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e858:	2b00      	cmp	r3, #0
 801e85a:	f340 8387 	ble.w	801ef6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801e85e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e860:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e864:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e868:	1e48      	subs	r0, r1, #1
 801e86a:	1e57      	subs	r7, r2, #1
 801e86c:	9b07      	ldr	r3, [sp, #28]
 801e86e:	2b00      	cmp	r3, #0
 801e870:	f340 8166 	ble.w	801eb40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e874:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e878:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e87c:	d406      	bmi.n	801e88c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e87e:	4584      	cmp	ip, r0
 801e880:	da04      	bge.n	801e88c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e882:	2b00      	cmp	r3, #0
 801e884:	db02      	blt.n	801e88c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e886:	42bb      	cmp	r3, r7
 801e888:	f2c0 815b 	blt.w	801eb42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e88c:	f11c 0c01 	adds.w	ip, ip, #1
 801e890:	f100 814b 	bmi.w	801eb2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e894:	4561      	cmp	r1, ip
 801e896:	f2c0 8148 	blt.w	801eb2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e89a:	3301      	adds	r3, #1
 801e89c:	f100 8145 	bmi.w	801eb2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e8a0:	429a      	cmp	r2, r3
 801e8a2:	f2c0 8142 	blt.w	801eb2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e8a6:	9b07      	ldr	r3, [sp, #28]
 801e8a8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e8aa:	9317      	str	r3, [sp, #92]	; 0x5c
 801e8ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e8ae:	2b00      	cmp	r3, #0
 801e8b0:	f340 8165 	ble.w	801eb7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e8b4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e8b6:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e8ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e8bc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e8c0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e8c4:	1422      	asrs	r2, r4, #16
 801e8c6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e8ca:	689b      	ldr	r3, [r3, #8]
 801e8cc:	f100 81d5 	bmi.w	801ec7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e8d0:	f103 38ff 	add.w	r8, r3, #4294967295
 801e8d4:	4542      	cmp	r2, r8
 801e8d6:	f280 81d0 	bge.w	801ec7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e8da:	f1bc 0f00 	cmp.w	ip, #0
 801e8de:	f2c0 81cc 	blt.w	801ec7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e8e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e8e6:	45c4      	cmp	ip, r8
 801e8e8:	f280 81c7 	bge.w	801ec7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e8ec:	b21b      	sxth	r3, r3
 801e8ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e8f0:	fb0c 2203 	mla	r2, ip, r3, r2
 801e8f4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e8f8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e8fc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e900:	2900      	cmp	r1, #0
 801e902:	f000 8182 	beq.w	801ec0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e906:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e90a:	950b      	str	r5, [sp, #44]	; 0x2c
 801e90c:	0e2d      	lsrs	r5, r5, #24
 801e90e:	9512      	str	r5, [sp, #72]	; 0x48
 801e910:	b180      	cbz	r0, 801e934 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e912:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e916:	3b01      	subs	r3, #1
 801e918:	009b      	lsls	r3, r3, #2
 801e91a:	3304      	adds	r3, #4
 801e91c:	eb08 0c03 	add.w	ip, r8, r3
 801e920:	f858 3003 	ldr.w	r3, [r8, r3]
 801e924:	9308      	str	r3, [sp, #32]
 801e926:	0e1b      	lsrs	r3, r3, #24
 801e928:	9310      	str	r3, [sp, #64]	; 0x40
 801e92a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e92e:	930c      	str	r3, [sp, #48]	; 0x30
 801e930:	0e1b      	lsrs	r3, r3, #24
 801e932:	9313      	str	r3, [sp, #76]	; 0x4c
 801e934:	b289      	uxth	r1, r1
 801e936:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e938:	b280      	uxth	r0, r0
 801e93a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e93c:	fb01 f900 	mul.w	r9, r1, r0
 801e940:	0109      	lsls	r1, r1, #4
 801e942:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e946:	eba1 0809 	sub.w	r8, r1, r9
 801e94a:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801e94e:	b280      	uxth	r0, r0
 801e950:	fa1f f888 	uxth.w	r8, r8
 801e954:	1a09      	subs	r1, r1, r0
 801e956:	fb08 f303 	mul.w	r3, r8, r3
 801e95a:	b289      	uxth	r1, r1
 801e95c:	fb01 330e 	mla	r3, r1, lr, r3
 801e960:	fb00 3305 	mla	r3, r0, r5, r3
 801e964:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e966:	fb09 3305 	mla	r3, r9, r5, r3
 801e96a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e96e:	2b00      	cmp	r3, #0
 801e970:	f000 80d2 	beq.w	801eb18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e974:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e978:	d01b      	beq.n	801e9b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e97a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e97e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e982:	fb0e fa0a 	mul.w	sl, lr, sl
 801e986:	fb0e fe02 	mul.w	lr, lr, r2
 801e98a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e98e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e992:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e996:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e99a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e99e:	4452      	add	r2, sl
 801e9a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9a4:	0a12      	lsrs	r2, r2, #8
 801e9a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e9aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e9ae:	ea42 020c 	orr.w	r2, r2, ip
 801e9b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e9b4:	2dff      	cmp	r5, #255	; 0xff
 801e9b6:	d021      	beq.n	801e9fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e9b8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e9ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e9be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e9c0:	fb05 fb0b 	mul.w	fp, r5, fp
 801e9c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e9c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e9ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e9cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e9d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e9d4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e9d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e9dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e9e0:	44de      	add	lr, fp
 801e9e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e9e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e9ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e9f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e9f6:	ea4e 050a 	orr.w	r5, lr, sl
 801e9fa:	950b      	str	r5, [sp, #44]	; 0x2c
 801e9fc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e9fe:	2dff      	cmp	r5, #255	; 0xff
 801ea00:	d021      	beq.n	801ea46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ea02:	9d08      	ldr	r5, [sp, #32]
 801ea04:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ea08:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea0a:	fb05 fb0b 	mul.w	fp, r5, fp
 801ea0e:	9d08      	ldr	r5, [sp, #32]
 801ea10:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ea14:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea16:	fb05 fa0e 	mul.w	sl, r5, lr
 801ea1a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ea1e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ea22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ea26:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ea2a:	44de      	add	lr, fp
 801ea2c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ea30:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ea34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ea3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ea40:	ea4e 050a 	orr.w	r5, lr, sl
 801ea44:	9508      	str	r5, [sp, #32]
 801ea46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea48:	2dff      	cmp	r5, #255	; 0xff
 801ea4a:	d021      	beq.n	801ea90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ea4c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ea4e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ea52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea54:	fb05 fb0b 	mul.w	fp, r5, fp
 801ea58:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ea5a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ea5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea60:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ea64:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ea68:	fb05 fa0a 	mul.w	sl, r5, sl
 801ea6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ea70:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ea74:	44de      	add	lr, fp
 801ea76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ea7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ea7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea82:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ea86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ea8a:	ea4e 050a 	orr.w	r5, lr, sl
 801ea8e:	950c      	str	r5, [sp, #48]	; 0x30
 801ea90:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ea92:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ea96:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ea9a:	2bff      	cmp	r3, #255	; 0xff
 801ea9c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eaa0:	9d08      	ldr	r5, [sp, #32]
 801eaa2:	fb08 fc0c 	mul.w	ip, r8, ip
 801eaa6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801eaaa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eaae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eab0:	fb00 cc0e 	mla	ip, r0, lr, ip
 801eab4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eab8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eaba:	fb09 cc0e 	mla	ip, r9, lr, ip
 801eabe:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801eac2:	fb08 f80e 	mul.w	r8, r8, lr
 801eac6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eaca:	fb01 8202 	mla	r2, r1, r2, r8
 801eace:	9908      	ldr	r1, [sp, #32]
 801ead0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ead4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ead8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eada:	fb00 220a 	mla	r2, r0, sl, r2
 801eade:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801eae2:	fb09 2900 	mla	r9, r9, r0, r2
 801eae6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eaea:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801eaee:	ea4c 0c09 	orr.w	ip, ip, r9
 801eaf2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801eaf6:	f040 8091 	bne.w	801ec1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801eafa:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801eafe:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801eb02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb06:	f022 0207 	bic.w	r2, r2, #7
 801eb0a:	431a      	orrs	r2, r3
 801eb0c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801eb10:	ea4c 0c02 	orr.w	ip, ip, r2
 801eb14:	f8a7 c000 	strh.w	ip, [r7]
 801eb18:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801eb1a:	3702      	adds	r7, #2
 801eb1c:	441c      	add	r4, r3
 801eb1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eb20:	441e      	add	r6, r3
 801eb22:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801eb24:	3b01      	subs	r3, #1
 801eb26:	9317      	str	r3, [sp, #92]	; 0x5c
 801eb28:	e6c0      	b.n	801e8ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801eb2a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801eb2c:	441c      	add	r4, r3
 801eb2e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eb30:	441e      	add	r6, r3
 801eb32:	9b07      	ldr	r3, [sp, #28]
 801eb34:	3b01      	subs	r3, #1
 801eb36:	9307      	str	r3, [sp, #28]
 801eb38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eb3a:	3302      	adds	r3, #2
 801eb3c:	930a      	str	r3, [sp, #40]	; 0x28
 801eb3e:	e695      	b.n	801e86c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801eb40:	d024      	beq.n	801eb8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801eb42:	9b07      	ldr	r3, [sp, #28]
 801eb44:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801eb46:	3b01      	subs	r3, #1
 801eb48:	fb00 4003 	mla	r0, r0, r3, r4
 801eb4c:	1400      	asrs	r0, r0, #16
 801eb4e:	f53f aeaa 	bmi.w	801e8a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb52:	3901      	subs	r1, #1
 801eb54:	4288      	cmp	r0, r1
 801eb56:	f6bf aea6 	bge.w	801e8a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb5a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801eb5c:	fb01 6303 	mla	r3, r1, r3, r6
 801eb60:	141b      	asrs	r3, r3, #16
 801eb62:	f53f aea0 	bmi.w	801e8a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb66:	3a01      	subs	r2, #1
 801eb68:	4293      	cmp	r3, r2
 801eb6a:	f6bf ae9c 	bge.w	801e8a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801eb6e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801eb72:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801eb76:	f1bb 0f00 	cmp.w	fp, #0
 801eb7a:	f300 809a 	bgt.w	801ecb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801eb7e:	9b07      	ldr	r3, [sp, #28]
 801eb80:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eb84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eb86:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801eb8a:	930a      	str	r3, [sp, #40]	; 0x28
 801eb8c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eb8e:	2b00      	cmp	r3, #0
 801eb90:	f340 81ec 	ble.w	801ef6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801eb94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eb98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eba2:	eef0 6a62 	vmov.f32	s13, s5
 801eba6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ebaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ebae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ebb2:	ee16 4a90 	vmov	r4, s13
 801ebb6:	eef0 6a43 	vmov.f32	s13, s6
 801ebba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ebbe:	ee16 6a90 	vmov	r6, s13
 801ebc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ebc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ebca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ebce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ebd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ebd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ebda:	ee12 2a90 	vmov	r2, s5
 801ebde:	eef0 2a47 	vmov.f32	s5, s14
 801ebe2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ebe6:	ee13 2a10 	vmov	r2, s6
 801ebea:	9327      	str	r3, [sp, #156]	; 0x9c
 801ebec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ebee:	eeb0 3a67 	vmov.f32	s6, s15
 801ebf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ebf6:	9328      	str	r3, [sp, #160]	; 0xa0
 801ebf8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ebfa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ebfc:	3b01      	subs	r3, #1
 801ebfe:	9316      	str	r3, [sp, #88]	; 0x58
 801ec00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec02:	bf08      	it	eq
 801ec04:	4613      	moveq	r3, r2
 801ec06:	9307      	str	r3, [sp, #28]
 801ec08:	e622      	b.n	801e850 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ec0a:	2800      	cmp	r0, #0
 801ec0c:	f43f ae92 	beq.w	801e934 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ec10:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ec14:	9308      	str	r3, [sp, #32]
 801ec16:	0e1b      	lsrs	r3, r3, #24
 801ec18:	9310      	str	r3, [sp, #64]	; 0x40
 801ec1a:	e68b      	b.n	801e934 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ec1c:	8839      	ldrh	r1, [r7, #0]
 801ec1e:	43db      	mvns	r3, r3
 801ec20:	4dd4      	ldr	r5, [pc, #848]	; (801ef74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801ec22:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ec26:	fa5f f883 	uxtb.w	r8, r3
 801ec2a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ec2e:	10c8      	asrs	r0, r1, #3
 801ec30:	00cb      	lsls	r3, r1, #3
 801ec32:	fb0e fe08 	mul.w	lr, lr, r8
 801ec36:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ec3a:	b2db      	uxtb	r3, r3
 801ec3c:	f10e 0101 	add.w	r1, lr, #1
 801ec40:	fb00 f008 	mul.w	r0, r0, r8
 801ec44:	fb03 f308 	mul.w	r3, r3, r8
 801ec48:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ec4c:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ec50:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ec54:	f100 0e01 	add.w	lr, r0, #1
 801ec58:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ec5c:	b2c9      	uxtb	r1, r1
 801ec5e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ec62:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ec66:	00d2      	lsls	r2, r2, #3
 801ec68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec6c:	430a      	orrs	r2, r1
 801ec6e:	1c59      	adds	r1, r3, #1
 801ec70:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ec74:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ec78:	e748      	b.n	801eb0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ec7a:	f112 0801 	adds.w	r8, r2, #1
 801ec7e:	f53f af4b 	bmi.w	801eb18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ec82:	4543      	cmp	r3, r8
 801ec84:	f6ff af48 	blt.w	801eb18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ec88:	f11c 0801 	adds.w	r8, ip, #1
 801ec8c:	f53f af44 	bmi.w	801eb18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ec90:	45c6      	cmp	lr, r8
 801ec92:	f6ff af41 	blt.w	801eb18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ec96:	b21b      	sxth	r3, r3
 801ec98:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ec9c:	fa0f f28e 	sxth.w	r2, lr
 801eca0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801eca4:	9200      	str	r2, [sp, #0]
 801eca6:	4639      	mov	r1, r7
 801eca8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ecaa:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ecac:	f7ff fc88 	bl	801e5c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ecb0:	e732      	b.n	801eb18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ecb2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ecb4:	1421      	asrs	r1, r4, #16
 801ecb6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ecb8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ecbc:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ecc0:	1433      	asrs	r3, r6, #16
 801ecc2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ecc6:	fb07 1303 	mla	r3, r7, r3, r1
 801ecca:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801eccc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ecd0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ecd4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ecd8:	2a00      	cmp	r2, #0
 801ecda:	f000 8108 	beq.w	801eeee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801ecde:	684d      	ldr	r5, [r1, #4]
 801ece0:	950d      	str	r5, [sp, #52]	; 0x34
 801ece2:	0e2d      	lsrs	r5, r5, #24
 801ece4:	9514      	str	r5, [sp, #80]	; 0x50
 801ece6:	b178      	cbz	r0, 801ed08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ece8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ecec:	3f01      	subs	r7, #1
 801ecee:	00bf      	lsls	r7, r7, #2
 801ecf0:	3704      	adds	r7, #4
 801ecf2:	eb01 0e07 	add.w	lr, r1, r7
 801ecf6:	59c9      	ldr	r1, [r1, r7]
 801ecf8:	9109      	str	r1, [sp, #36]	; 0x24
 801ecfa:	0e09      	lsrs	r1, r1, #24
 801ecfc:	9111      	str	r1, [sp, #68]	; 0x44
 801ecfe:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ed02:	910e      	str	r1, [sp, #56]	; 0x38
 801ed04:	0e09      	lsrs	r1, r1, #24
 801ed06:	9115      	str	r1, [sp, #84]	; 0x54
 801ed08:	b292      	uxth	r2, r2
 801ed0a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ed0c:	b280      	uxth	r0, r0
 801ed0e:	fb02 f900 	mul.w	r9, r2, r0
 801ed12:	0112      	lsls	r2, r2, #4
 801ed14:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ed18:	eba2 0e09 	sub.w	lr, r2, r9
 801ed1c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ed20:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ed22:	b280      	uxth	r0, r0
 801ed24:	fa1f fe8e 	uxth.w	lr, lr
 801ed28:	1a09      	subs	r1, r1, r0
 801ed2a:	fb0e f202 	mul.w	r2, lr, r2
 801ed2e:	b289      	uxth	r1, r1
 801ed30:	fb01 220c 	mla	r2, r1, ip, r2
 801ed34:	fb00 2205 	mla	r2, r0, r5, r2
 801ed38:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ed3a:	fb09 2205 	mla	r2, r9, r5, r2
 801ed3e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ed42:	2a00      	cmp	r2, #0
 801ed44:	f000 80ca 	beq.w	801eedc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801ed48:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ed4c:	d019      	beq.n	801ed82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ed4e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ed52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ed56:	fb0c fa0a 	mul.w	sl, ip, sl
 801ed5a:	fb0c fc03 	mul.w	ip, ip, r3
 801ed5e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ed62:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ed66:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ed6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ed6e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ed72:	4453      	add	r3, sl
 801ed74:	0a3f      	lsrs	r7, r7, #8
 801ed76:	0a1b      	lsrs	r3, r3, #8
 801ed78:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ed7c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ed80:	433b      	orrs	r3, r7
 801ed82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ed84:	2dff      	cmp	r5, #255	; 0xff
 801ed86:	d020      	beq.n	801edca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ed88:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ed8a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ed8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ed90:	436f      	muls	r7, r5
 801ed92:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ed94:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed98:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ed9c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ed9e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eda2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eda6:	fb05 fa0a 	mul.w	sl, r5, sl
 801edaa:	44bc      	add	ip, r7
 801edac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801edb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801edb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801edb8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801edbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801edc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801edc4:	ea4c 050a 	orr.w	r5, ip, sl
 801edc8:	950d      	str	r5, [sp, #52]	; 0x34
 801edca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801edcc:	2dff      	cmp	r5, #255	; 0xff
 801edce:	d020      	beq.n	801ee12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801edd0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801edd2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801edd6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801edd8:	436f      	muls	r7, r5
 801edda:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eddc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ede0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ede2:	fb05 fa0c 	mul.w	sl, r5, ip
 801ede6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801edea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801edee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801edf2:	44bc      	add	ip, r7
 801edf4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801edf8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801edfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee08:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ee0c:	ea4c 050a 	orr.w	r5, ip, sl
 801ee10:	9509      	str	r5, [sp, #36]	; 0x24
 801ee12:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee14:	2dff      	cmp	r5, #255	; 0xff
 801ee16:	d020      	beq.n	801ee5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ee18:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ee1a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ee1e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee20:	436f      	muls	r7, r5
 801ee22:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ee24:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ee28:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ee2c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee2e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ee32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee36:	fb05 fa0a 	mul.w	sl, r5, sl
 801ee3a:	44bc      	add	ip, r7
 801ee3c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ee40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ee48:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ee54:	ea4c 050a 	orr.w	r5, ip, sl
 801ee58:	950e      	str	r5, [sp, #56]	; 0x38
 801ee5a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee5c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ee60:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ee64:	2aff      	cmp	r2, #255	; 0xff
 801ee66:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ee6a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ee6c:	fb0e f707 	mul.w	r7, lr, r7
 801ee70:	fb01 770c 	mla	r7, r1, ip, r7
 801ee74:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ee78:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ee7a:	fb00 770c 	mla	r7, r0, ip, r7
 801ee7e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ee82:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee84:	fb09 770c 	mla	r7, r9, ip, r7
 801ee88:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ee8c:	fb0e fe0c 	mul.w	lr, lr, ip
 801ee90:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801ee94:	fb01 e303 	mla	r3, r1, r3, lr
 801ee98:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ee9a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ee9e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801eea2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801eea4:	fb00 330a 	mla	r3, r0, sl, r3
 801eea8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801eeac:	fb09 3c0c 	mla	ip, r9, ip, r3
 801eeb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eeb4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eeb8:	ea47 070c 	orr.w	r7, r7, ip
 801eebc:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801eec0:	d11e      	bne.n	801ef00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801eec2:	097a      	lsrs	r2, r7, #5
 801eec4:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801eec8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801eecc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eed0:	f023 0307 	bic.w	r3, r3, #7
 801eed4:	4313      	orrs	r3, r2
 801eed6:	431f      	orrs	r7, r3
 801eed8:	f8a8 7000 	strh.w	r7, [r8]
 801eedc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801eede:	f108 0802 	add.w	r8, r8, #2
 801eee2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eee6:	441c      	add	r4, r3
 801eee8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eeea:	441e      	add	r6, r3
 801eeec:	e643      	b.n	801eb76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801eeee:	2800      	cmp	r0, #0
 801eef0:	f43f af0a 	beq.w	801ed08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801eef4:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801eef8:	9109      	str	r1, [sp, #36]	; 0x24
 801eefa:	0e09      	lsrs	r1, r1, #24
 801eefc:	9111      	str	r1, [sp, #68]	; 0x44
 801eefe:	e703      	b.n	801ed08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ef00:	f8b8 1000 	ldrh.w	r1, [r8]
 801ef04:	43d2      	mvns	r2, r2
 801ef06:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ef0a:	fa5f fe82 	uxtb.w	lr, r2
 801ef0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ef12:	10c8      	asrs	r0, r1, #3
 801ef14:	00ca      	lsls	r2, r1, #3
 801ef16:	fb0c fc0e 	mul.w	ip, ip, lr
 801ef1a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ef1e:	b2d2      	uxtb	r2, r2
 801ef20:	f10c 0101 	add.w	r1, ip, #1
 801ef24:	fb00 f00e 	mul.w	r0, r0, lr
 801ef28:	fb02 f20e 	mul.w	r2, r2, lr
 801ef2c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ef30:	0c39      	lsrs	r1, r7, #16
 801ef32:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ef36:	490f      	ldr	r1, [pc, #60]	; (801ef74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801ef38:	fa5f fc8c 	uxtb.w	ip, ip
 801ef3c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ef40:	1c41      	adds	r1, r0, #1
 801ef42:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ef46:	1c51      	adds	r1, r2, #1
 801ef48:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ef4c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ef50:	00c0      	lsls	r0, r0, #3
 801ef52:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ef56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef5a:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ef5e:	ea4c 0c00 	orr.w	ip, ip, r0
 801ef62:	ea47 0c0c 	orr.w	ip, r7, ip
 801ef66:	f8a8 c000 	strh.w	ip, [r8]
 801ef6a:	e7b7      	b.n	801eedc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801ef6c:	b01b      	add	sp, #108	; 0x6c
 801ef6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef72:	bf00      	nop
 801ef74:	fffff800 	.word	0xfffff800

0801ef78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801ef78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ef7c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801ef80:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ef84:	2d00      	cmp	r5, #0
 801ef86:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ef8a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801ef8e:	fb05 0e03 	mla	lr, r5, r3, r0
 801ef92:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801ef96:	f2c0 808c 	blt.w	801f0b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ef9a:	45a9      	cmp	r9, r5
 801ef9c:	f340 8089 	ble.w	801f0b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801efa0:	2800      	cmp	r0, #0
 801efa2:	f2c0 8084 	blt.w	801f0ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801efa6:	4580      	cmp	r8, r0
 801efa8:	f340 8081 	ble.w	801f0ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801efac:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801efb0:	f01e 0f01 	tst.w	lr, #1
 801efb4:	5d16      	ldrb	r6, [r2, r4]
 801efb6:	bf0c      	ite	eq
 801efb8:	f006 060f 	andeq.w	r6, r6, #15
 801efbc:	1136      	asrne	r6, r6, #4
 801efbe:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801efc2:	b2f6      	uxtb	r6, r6
 801efc4:	1c44      	adds	r4, r0, #1
 801efc6:	d477      	bmi.n	801f0b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801efc8:	45a0      	cmp	r8, r4
 801efca:	dd75      	ble.n	801f0b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801efcc:	2f00      	cmp	r7, #0
 801efce:	d075      	beq.n	801f0bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801efd0:	f10e 0a01 	add.w	sl, lr, #1
 801efd4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801efd8:	f01a 0f01 	tst.w	sl, #1
 801efdc:	5d14      	ldrb	r4, [r2, r4]
 801efde:	bf0c      	ite	eq
 801efe0:	f004 040f 	andeq.w	r4, r4, #15
 801efe4:	1124      	asrne	r4, r4, #4
 801efe6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801efea:	b2e4      	uxtb	r4, r4
 801efec:	3501      	adds	r5, #1
 801efee:	d469      	bmi.n	801f0c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801eff0:	45a9      	cmp	r9, r5
 801eff2:	dd67      	ble.n	801f0c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801eff4:	f1bc 0f00 	cmp.w	ip, #0
 801eff8:	d067      	beq.n	801f0ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801effa:	2800      	cmp	r0, #0
 801effc:	db60      	blt.n	801f0c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801effe:	4580      	cmp	r8, r0
 801f000:	dd5e      	ble.n	801f0c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f002:	eb03 090e 	add.w	r9, r3, lr
 801f006:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f00a:	f019 0f01 	tst.w	r9, #1
 801f00e:	5d55      	ldrb	r5, [r2, r5]
 801f010:	bf0c      	ite	eq
 801f012:	f005 050f 	andeq.w	r5, r5, #15
 801f016:	112d      	asrne	r5, r5, #4
 801f018:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f01c:	b2ed      	uxtb	r5, r5
 801f01e:	3001      	adds	r0, #1
 801f020:	d456      	bmi.n	801f0d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f022:	4580      	cmp	r8, r0
 801f024:	dd54      	ble.n	801f0d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f026:	2f00      	cmp	r7, #0
 801f028:	d054      	beq.n	801f0d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f02a:	3301      	adds	r3, #1
 801f02c:	449e      	add	lr, r3
 801f02e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f032:	f01e 0f01 	tst.w	lr, #1
 801f036:	5cd0      	ldrb	r0, [r2, r3]
 801f038:	bf0c      	ite	eq
 801f03a:	f000 000f 	andeq.w	r0, r0, #15
 801f03e:	1100      	asrne	r0, r0, #4
 801f040:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f044:	b2c3      	uxtb	r3, r0
 801f046:	b2ba      	uxth	r2, r7
 801f048:	fa1f fc8c 	uxth.w	ip, ip
 801f04c:	fb02 f00c 	mul.w	r0, r2, ip
 801f050:	0112      	lsls	r2, r2, #4
 801f052:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f056:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f05a:	1a12      	subs	r2, r2, r0
 801f05c:	fa1f fc8c 	uxth.w	ip, ip
 801f060:	b292      	uxth	r2, r2
 801f062:	eba7 070c 	sub.w	r7, r7, ip
 801f066:	4362      	muls	r2, r4
 801f068:	b2bf      	uxth	r7, r7
 801f06a:	fb06 2207 	mla	r2, r6, r7, r2
 801f06e:	fb0c 2505 	mla	r5, ip, r5, r2
 801f072:	fb00 5303 	mla	r3, r0, r3, r5
 801f076:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f07a:	b1b3      	cbz	r3, 801f0aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f07c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f080:	435a      	muls	r2, r3
 801f082:	1c53      	adds	r3, r2, #1
 801f084:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f088:	4a2d      	ldr	r2, [pc, #180]	; (801f140 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f08a:	121b      	asrs	r3, r3, #8
 801f08c:	6812      	ldr	r2, [r2, #0]
 801f08e:	2bff      	cmp	r3, #255	; 0xff
 801f090:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f094:	d120      	bne.n	801f0d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f096:	0950      	lsrs	r0, r2, #5
 801f098:	4b2a      	ldr	r3, [pc, #168]	; (801f144 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f09a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f09e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f0a2:	4033      	ands	r3, r6
 801f0a4:	4318      	orrs	r0, r3
 801f0a6:	4302      	orrs	r2, r0
 801f0a8:	800a      	strh	r2, [r1, #0]
 801f0aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f0ae:	2600      	movs	r6, #0
 801f0b0:	e788      	b.n	801efc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f0b2:	2400      	movs	r4, #0
 801f0b4:	4626      	mov	r6, r4
 801f0b6:	e799      	b.n	801efec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f0b8:	2400      	movs	r4, #0
 801f0ba:	e797      	b.n	801efec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f0bc:	463c      	mov	r4, r7
 801f0be:	e795      	b.n	801efec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f0c0:	2500      	movs	r5, #0
 801f0c2:	e7ac      	b.n	801f01e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f0c4:	2300      	movs	r3, #0
 801f0c6:	461d      	mov	r5, r3
 801f0c8:	e7bd      	b.n	801f046 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f0ca:	4663      	mov	r3, ip
 801f0cc:	4665      	mov	r5, ip
 801f0ce:	e7ba      	b.n	801f046 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f0d0:	2300      	movs	r3, #0
 801f0d2:	e7b8      	b.n	801f046 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f0d4:	463b      	mov	r3, r7
 801f0d6:	e7b6      	b.n	801f046 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f0d8:	880d      	ldrh	r5, [r1, #0]
 801f0da:	b29f      	uxth	r7, r3
 801f0dc:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f0e0:	43db      	mvns	r3, r3
 801f0e2:	122c      	asrs	r4, r5, #8
 801f0e4:	fb10 f007 	smulbb	r0, r0, r7
 801f0e8:	b2db      	uxtb	r3, r3
 801f0ea:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f0ee:	b2f6      	uxtb	r6, r6
 801f0f0:	b2d2      	uxtb	r2, r2
 801f0f2:	fb04 0403 	mla	r4, r4, r3, r0
 801f0f6:	10e8      	asrs	r0, r5, #3
 801f0f8:	fb12 f207 	smulbb	r2, r2, r7
 801f0fc:	00ed      	lsls	r5, r5, #3
 801f0fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f102:	b2a4      	uxth	r4, r4
 801f104:	fb16 f607 	smulbb	r6, r6, r7
 801f108:	b2ed      	uxtb	r5, r5
 801f10a:	fb00 6603 	mla	r6, r0, r3, r6
 801f10e:	fb05 2303 	mla	r3, r5, r3, r2
 801f112:	b2b0      	uxth	r0, r6
 801f114:	b29a      	uxth	r2, r3
 801f116:	1c63      	adds	r3, r4, #1
 801f118:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f11c:	1c53      	adds	r3, r2, #1
 801f11e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f122:	1c42      	adds	r2, r0, #1
 801f124:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f128:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f12c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f130:	0940      	lsrs	r0, r0, #5
 801f132:	4323      	orrs	r3, r4
 801f134:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f138:	4303      	orrs	r3, r0
 801f13a:	800b      	strh	r3, [r1, #0]
 801f13c:	e7b5      	b.n	801f0aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f13e:	bf00      	nop
 801f140:	2400e434 	.word	0x2400e434
 801f144:	00fff800 	.word	0x00fff800

0801f148 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f14c:	b097      	sub	sp, #92	; 0x5c
 801f14e:	9214      	str	r2, [sp, #80]	; 0x50
 801f150:	9309      	str	r3, [sp, #36]	; 0x24
 801f152:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f154:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f158:	9015      	str	r0, [sp, #84]	; 0x54
 801f15a:	910d      	str	r1, [sp, #52]	; 0x34
 801f15c:	6850      	ldr	r0, [r2, #4]
 801f15e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f160:	6812      	ldr	r2, [r2, #0]
 801f162:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f166:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f16a:	fb00 1303 	mla	r3, r0, r3, r1
 801f16e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f172:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f174:	689b      	ldr	r3, [r3, #8]
 801f176:	3301      	adds	r3, #1
 801f178:	f023 0301 	bic.w	r3, r3, #1
 801f17c:	930a      	str	r3, [sp, #40]	; 0x28
 801f17e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f180:	681f      	ldr	r7, [r3, #0]
 801f182:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f184:	2b00      	cmp	r3, #0
 801f186:	dc03      	bgt.n	801f190 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f188:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f18a:	2b00      	cmp	r3, #0
 801f18c:	f340 8289 	ble.w	801f6a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f190:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f192:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f196:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f19a:	1e48      	subs	r0, r1, #1
 801f19c:	f102 3cff 	add.w	ip, r2, #4294967295
 801f1a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f1a2:	2b00      	cmp	r3, #0
 801f1a4:	f340 80c5 	ble.w	801f332 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f1a8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f1ac:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f1b0:	d406      	bmi.n	801f1c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1b2:	4586      	cmp	lr, r0
 801f1b4:	da04      	bge.n	801f1c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1b6:	2b00      	cmp	r3, #0
 801f1b8:	db02      	blt.n	801f1c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f1ba:	4563      	cmp	r3, ip
 801f1bc:	f2c0 80ba 	blt.w	801f334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801f1c0:	f11e 0e01 	adds.w	lr, lr, #1
 801f1c4:	f100 80ab 	bmi.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f1c8:	4571      	cmp	r1, lr
 801f1ca:	f2c0 80a8 	blt.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f1ce:	3301      	adds	r3, #1
 801f1d0:	f100 80a5 	bmi.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f1d4:	429a      	cmp	r2, r3
 801f1d6:	f2c0 80a2 	blt.w	801f31e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f1da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f1dc:	46c8      	mov	r8, r9
 801f1de:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f1e2:	930e      	str	r3, [sp, #56]	; 0x38
 801f1e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f1e6:	2b00      	cmp	r3, #0
 801f1e8:	f340 80c4 	ble.w	801f374 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801f1ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f1ee:	1430      	asrs	r0, r6, #16
 801f1f0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f1f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f1f8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f1fc:	1423      	asrs	r3, r4, #16
 801f1fe:	f100 814f 	bmi.w	801f4a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f202:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f206:	455b      	cmp	r3, fp
 801f208:	f280 814a 	bge.w	801f4a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f20c:	2800      	cmp	r0, #0
 801f20e:	f2c0 8147 	blt.w	801f4a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f212:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f216:	4558      	cmp	r0, fp
 801f218:	f280 8142 	bge.w	801f4a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f21c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f21e:	fb00 3305 	mla	r3, r0, r5, r3
 801f222:	0858      	lsrs	r0, r3, #1
 801f224:	07dd      	lsls	r5, r3, #31
 801f226:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f22a:	bf54      	ite	pl
 801f22c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f230:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f234:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f238:	fa5f fc8c 	uxtb.w	ip, ip
 801f23c:	2a00      	cmp	r2, #0
 801f23e:	f000 80dd 	beq.w	801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801f242:	1c58      	adds	r0, r3, #1
 801f244:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f248:	07c0      	lsls	r0, r0, #31
 801f24a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f24e:	bf54      	ite	pl
 801f250:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f254:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f258:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f25c:	fa5f f08e 	uxtb.w	r0, lr
 801f260:	9010      	str	r0, [sp, #64]	; 0x40
 801f262:	b1d9      	cbz	r1, 801f29c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f264:	4453      	add	r3, sl
 801f266:	0858      	lsrs	r0, r3, #1
 801f268:	07dd      	lsls	r5, r3, #31
 801f26a:	f103 0301 	add.w	r3, r3, #1
 801f26e:	5c38      	ldrb	r0, [r7, r0]
 801f270:	bf54      	ite	pl
 801f272:	f000 000f 	andpl.w	r0, r0, #15
 801f276:	1100      	asrmi	r0, r0, #4
 801f278:	07dd      	lsls	r5, r3, #31
 801f27a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f27e:	b2c0      	uxtb	r0, r0
 801f280:	900b      	str	r0, [sp, #44]	; 0x2c
 801f282:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801f286:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f28a:	bf54      	ite	pl
 801f28c:	f00e 030f 	andpl.w	r3, lr, #15
 801f290:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f294:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f298:	b2db      	uxtb	r3, r3
 801f29a:	9311      	str	r3, [sp, #68]	; 0x44
 801f29c:	b292      	uxth	r2, r2
 801f29e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f2a0:	b289      	uxth	r1, r1
 801f2a2:	fb02 f301 	mul.w	r3, r2, r1
 801f2a6:	0112      	lsls	r2, r2, #4
 801f2a8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f2ac:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f2b0:	1ad2      	subs	r2, r2, r3
 801f2b2:	b289      	uxth	r1, r1
 801f2b4:	b292      	uxth	r2, r2
 801f2b6:	1a40      	subs	r0, r0, r1
 801f2b8:	436a      	muls	r2, r5
 801f2ba:	b280      	uxth	r0, r0
 801f2bc:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f2c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f2c2:	fb01 c102 	mla	r1, r1, r2, ip
 801f2c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f2c8:	fb03 1302 	mla	r3, r3, r2, r1
 801f2cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f2d0:	b1db      	cbz	r3, 801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f2d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f2d4:	4353      	muls	r3, r2
 801f2d6:	1c5a      	adds	r2, r3, #1
 801f2d8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f2dc:	4ac6      	ldr	r2, [pc, #792]	; (801f5f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801f2de:	121b      	asrs	r3, r3, #8
 801f2e0:	6812      	ldr	r2, [r2, #0]
 801f2e2:	2bff      	cmp	r3, #255	; 0xff
 801f2e4:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f2e8:	f040 8099 	bne.w	801f41e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801f2ec:	0953      	lsrs	r3, r2, #5
 801f2ee:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f2f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f2f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f2fa:	f02c 0c07 	bic.w	ip, ip, #7
 801f2fe:	ea43 0c0c 	orr.w	ip, r3, ip
 801f302:	ea4c 0202 	orr.w	r2, ip, r2
 801f306:	f8a8 2000 	strh.w	r2, [r8]
 801f30a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f30c:	f108 0802 	add.w	r8, r8, #2
 801f310:	441c      	add	r4, r3
 801f312:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f314:	441e      	add	r6, r3
 801f316:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f318:	3b01      	subs	r3, #1
 801f31a:	930e      	str	r3, [sp, #56]	; 0x38
 801f31c:	e762      	b.n	801f1e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f31e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f320:	f109 0902 	add.w	r9, r9, #2
 801f324:	441c      	add	r4, r3
 801f326:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f328:	441e      	add	r6, r3
 801f32a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f32c:	3b01      	subs	r3, #1
 801f32e:	9309      	str	r3, [sp, #36]	; 0x24
 801f330:	e736      	b.n	801f1a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f332:	d024      	beq.n	801f37e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801f334:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f336:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f338:	3b01      	subs	r3, #1
 801f33a:	fb00 4003 	mla	r0, r0, r3, r4
 801f33e:	1400      	asrs	r0, r0, #16
 801f340:	f53f af4b 	bmi.w	801f1da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f344:	3901      	subs	r1, #1
 801f346:	4288      	cmp	r0, r1
 801f348:	f6bf af47 	bge.w	801f1da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f34c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f34e:	fb01 6303 	mla	r3, r1, r3, r6
 801f352:	141b      	asrs	r3, r3, #16
 801f354:	f53f af41 	bmi.w	801f1da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f358:	3a01      	subs	r2, #1
 801f35a:	4293      	cmp	r3, r2
 801f35c:	f6bf af3d 	bge.w	801f1da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f360:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f364:	46c8      	mov	r8, r9
 801f366:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f36a:	930e      	str	r3, [sp, #56]	; 0x38
 801f36c:	f1bb 0f00 	cmp.w	fp, #0
 801f370:	f300 80b7 	bgt.w	801f4e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801f374:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f376:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f37a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f37e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f380:	2b00      	cmp	r3, #0
 801f382:	f340 818e 	ble.w	801f6a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f386:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f38a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f38c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f390:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f394:	eef0 6a62 	vmov.f32	s13, s5
 801f398:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f39c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f3a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3a4:	ee16 4a90 	vmov	r4, s13
 801f3a8:	eef0 6a43 	vmov.f32	s13, s6
 801f3ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3b0:	ee16 6a90 	vmov	r6, s13
 801f3b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f3b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f3bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f3c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f3c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f3c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f3cc:	ee12 2a90 	vmov	r2, s5
 801f3d0:	eef0 2a47 	vmov.f32	s5, s14
 801f3d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3d8:	ee13 2a10 	vmov	r2, s6
 801f3dc:	9323      	str	r3, [sp, #140]	; 0x8c
 801f3de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f3e0:	eeb0 3a67 	vmov.f32	s6, s15
 801f3e4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3e8:	9324      	str	r3, [sp, #144]	; 0x90
 801f3ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f3ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f3ee:	3b01      	subs	r3, #1
 801f3f0:	930d      	str	r3, [sp, #52]	; 0x34
 801f3f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f3f4:	bf08      	it	eq
 801f3f6:	4613      	moveq	r3, r2
 801f3f8:	9309      	str	r3, [sp, #36]	; 0x24
 801f3fa:	e6c2      	b.n	801f182 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f3fc:	2900      	cmp	r1, #0
 801f3fe:	f43f af4d 	beq.w	801f29c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f402:	eb0a 0003 	add.w	r0, sl, r3
 801f406:	0843      	lsrs	r3, r0, #1
 801f408:	07c0      	lsls	r0, r0, #31
 801f40a:	5cfb      	ldrb	r3, [r7, r3]
 801f40c:	bf54      	ite	pl
 801f40e:	f003 030f 	andpl.w	r3, r3, #15
 801f412:	111b      	asrmi	r3, r3, #4
 801f414:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f418:	b2db      	uxtb	r3, r3
 801f41a:	930b      	str	r3, [sp, #44]	; 0x2c
 801f41c:	e73e      	b.n	801f29c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f41e:	f8b8 e000 	ldrh.w	lr, [r8]
 801f422:	fa1f fb83 	uxth.w	fp, r3
 801f426:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f42a:	43db      	mvns	r3, r3
 801f42c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f430:	fb11 f10b 	smulbb	r1, r1, fp
 801f434:	b2db      	uxtb	r3, r3
 801f436:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f43a:	fa5f fc8c 	uxtb.w	ip, ip
 801f43e:	b2d2      	uxtb	r2, r2
 801f440:	fb00 1003 	mla	r0, r0, r3, r1
 801f444:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f448:	fb1c fc0b 	smulbb	ip, ip, fp
 801f44c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f450:	b280      	uxth	r0, r0
 801f452:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f456:	fb12 fb0b 	smulbb	fp, r2, fp
 801f45a:	fa5f fe8e 	uxtb.w	lr, lr
 801f45e:	fb01 cc03 	mla	ip, r1, r3, ip
 801f462:	fb0e bb03 	mla	fp, lr, r3, fp
 801f466:	1c43      	adds	r3, r0, #1
 801f468:	fa1f fc8c 	uxth.w	ip, ip
 801f46c:	fa1f fb8b 	uxth.w	fp, fp
 801f470:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f474:	f10c 0101 	add.w	r1, ip, #1
 801f478:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f47c:	f10b 0001 	add.w	r0, fp, #1
 801f480:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f484:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f488:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f48c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f490:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f494:	4318      	orrs	r0, r3
 801f496:	ea40 000c 	orr.w	r0, r0, ip
 801f49a:	f8a8 0000 	strh.w	r0, [r8]
 801f49e:	e734      	b.n	801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f4a0:	f113 0b01 	adds.w	fp, r3, #1
 801f4a4:	f53f af31 	bmi.w	801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f4a8:	45dc      	cmp	ip, fp
 801f4aa:	f6ff af2e 	blt.w	801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f4ae:	f110 0b01 	adds.w	fp, r0, #1
 801f4b2:	f53f af2a 	bmi.w	801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f4b6:	45de      	cmp	lr, fp
 801f4b8:	f6ff af27 	blt.w	801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f4bc:	9302      	str	r3, [sp, #8]
 801f4be:	fa0f f38e 	sxth.w	r3, lr
 801f4c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f4c4:	9301      	str	r3, [sp, #4]
 801f4c6:	fa0f f38c 	sxth.w	r3, ip
 801f4ca:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f4ce:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f4d2:	9300      	str	r3, [sp, #0]
 801f4d4:	463a      	mov	r2, r7
 801f4d6:	4653      	mov	r3, sl
 801f4d8:	4641      	mov	r1, r8
 801f4da:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f4dc:	f7ff fd4c 	bl	801ef78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f4e0:	e713      	b.n	801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f4e2:	1422      	asrs	r2, r4, #16
 801f4e4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f4e6:	1433      	asrs	r3, r6, #16
 801f4e8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f4ec:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f4f0:	fb05 2303 	mla	r3, r5, r3, r2
 801f4f4:	085a      	lsrs	r2, r3, #1
 801f4f6:	07dd      	lsls	r5, r3, #31
 801f4f8:	5cba      	ldrb	r2, [r7, r2]
 801f4fa:	bf54      	ite	pl
 801f4fc:	f002 020f 	andpl.w	r2, r2, #15
 801f500:	1112      	asrmi	r2, r2, #4
 801f502:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f506:	b2d2      	uxtb	r2, r2
 801f508:	2900      	cmp	r1, #0
 801f50a:	d077      	beq.n	801f5fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f50c:	f103 0e01 	add.w	lr, r3, #1
 801f510:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f514:	f01e 0f01 	tst.w	lr, #1
 801f518:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f51c:	bf0c      	ite	eq
 801f51e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f522:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f526:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f52a:	fa5f f58c 	uxtb.w	r5, ip
 801f52e:	9512      	str	r5, [sp, #72]	; 0x48
 801f530:	b308      	cbz	r0, 801f576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f532:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f534:	442b      	add	r3, r5
 801f536:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f53a:	07dd      	lsls	r5, r3, #31
 801f53c:	f103 0301 	add.w	r3, r3, #1
 801f540:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f544:	bf54      	ite	pl
 801f546:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f54a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f54e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f552:	fa5f f58c 	uxtb.w	r5, ip
 801f556:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f55a:	950c      	str	r5, [sp, #48]	; 0x30
 801f55c:	07dd      	lsls	r5, r3, #31
 801f55e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f562:	bf54      	ite	pl
 801f564:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f568:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f56c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f570:	fa5f f38c 	uxtb.w	r3, ip
 801f574:	9313      	str	r3, [sp, #76]	; 0x4c
 801f576:	b289      	uxth	r1, r1
 801f578:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f57a:	b280      	uxth	r0, r0
 801f57c:	fb01 f300 	mul.w	r3, r1, r0
 801f580:	0109      	lsls	r1, r1, #4
 801f582:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f586:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f58a:	1ac9      	subs	r1, r1, r3
 801f58c:	b280      	uxth	r0, r0
 801f58e:	b289      	uxth	r1, r1
 801f590:	ebac 0c00 	sub.w	ip, ip, r0
 801f594:	4369      	muls	r1, r5
 801f596:	fa1f fc8c 	uxth.w	ip, ip
 801f59a:	fb02 120c 	mla	r2, r2, ip, r1
 801f59e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f5a0:	fb00 2001 	mla	r0, r0, r1, r2
 801f5a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f5a6:	fb03 0302 	mla	r3, r3, r2, r0
 801f5aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f5ae:	b1d3      	cbz	r3, 801f5e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801f5b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f5b2:	4353      	muls	r3, r2
 801f5b4:	1c5a      	adds	r2, r3, #1
 801f5b6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f5ba:	4a0f      	ldr	r2, [pc, #60]	; (801f5f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801f5bc:	121b      	asrs	r3, r3, #8
 801f5be:	6812      	ldr	r2, [r2, #0]
 801f5c0:	2bff      	cmp	r3, #255	; 0xff
 801f5c2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f5c6:	d12d      	bne.n	801f624 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801f5c8:	0953      	lsrs	r3, r2, #5
 801f5ca:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f5ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f5d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f5d6:	f02c 0c07 	bic.w	ip, ip, #7
 801f5da:	ea43 0c0c 	orr.w	ip, r3, ip
 801f5de:	ea4c 0202 	orr.w	r2, ip, r2
 801f5e2:	f8a8 2000 	strh.w	r2, [r8]
 801f5e6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f5e8:	f108 0802 	add.w	r8, r8, #2
 801f5ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f5f0:	441c      	add	r4, r3
 801f5f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f5f4:	441e      	add	r6, r3
 801f5f6:	e6b9      	b.n	801f36c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801f5f8:	2400e434 	.word	0x2400e434
 801f5fc:	2800      	cmp	r0, #0
 801f5fe:	d0ba      	beq.n	801f576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f600:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f602:	442b      	add	r3, r5
 801f604:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f608:	07db      	lsls	r3, r3, #31
 801f60a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f60e:	bf54      	ite	pl
 801f610:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f614:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f618:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f61c:	fa5f f38c 	uxtb.w	r3, ip
 801f620:	930c      	str	r3, [sp, #48]	; 0x30
 801f622:	e7a8      	b.n	801f576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f624:	f8b8 e000 	ldrh.w	lr, [r8]
 801f628:	fa1f fa83 	uxth.w	sl, r3
 801f62c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f630:	43db      	mvns	r3, r3
 801f632:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f636:	fb11 f10a 	smulbb	r1, r1, sl
 801f63a:	b2db      	uxtb	r3, r3
 801f63c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f640:	b2d2      	uxtb	r2, r2
 801f642:	fa5f fc8c 	uxtb.w	ip, ip
 801f646:	fb00 1003 	mla	r0, r0, r3, r1
 801f64a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f64e:	fb12 f20a 	smulbb	r2, r2, sl
 801f652:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f656:	b280      	uxth	r0, r0
 801f658:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f65c:	fb1c fc0a 	smulbb	ip, ip, sl
 801f660:	fa5f fe8e 	uxtb.w	lr, lr
 801f664:	fb0e 2203 	mla	r2, lr, r3, r2
 801f668:	fb01 cc03 	mla	ip, r1, r3, ip
 801f66c:	1c43      	adds	r3, r0, #1
 801f66e:	b292      	uxth	r2, r2
 801f670:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f674:	1c51      	adds	r1, r2, #1
 801f676:	fa1f fc8c 	uxth.w	ip, ip
 801f67a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f67e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f682:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f686:	4308      	orrs	r0, r1
 801f688:	f10c 0101 	add.w	r1, ip, #1
 801f68c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f690:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f694:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f698:	ea40 000c 	orr.w	r0, r0, ip
 801f69c:	f8a8 0000 	strh.w	r0, [r8]
 801f6a0:	e7a1      	b.n	801f5e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801f6a2:	b017      	add	sp, #92	; 0x5c
 801f6a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f6a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f6a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f6ac:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f6b0:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f6b4:	2d00      	cmp	r5, #0
 801f6b6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f6ba:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f6be:	fb05 0e03 	mla	lr, r5, r3, r0
 801f6c2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f6c6:	f2c0 80b0 	blt.w	801f82a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f6ca:	45a9      	cmp	r9, r5
 801f6cc:	f340 80ad 	ble.w	801f82a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f6d0:	2800      	cmp	r0, #0
 801f6d2:	f2c0 80a8 	blt.w	801f826 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f6d6:	4580      	cmp	r8, r0
 801f6d8:	f340 80a5 	ble.w	801f826 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f6dc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f6e0:	f01e 0f01 	tst.w	lr, #1
 801f6e4:	5d16      	ldrb	r6, [r2, r4]
 801f6e6:	bf0c      	ite	eq
 801f6e8:	f006 060f 	andeq.w	r6, r6, #15
 801f6ec:	1136      	asrne	r6, r6, #4
 801f6ee:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f6f2:	b2f6      	uxtb	r6, r6
 801f6f4:	1c44      	adds	r4, r0, #1
 801f6f6:	f100 809b 	bmi.w	801f830 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f6fa:	45a0      	cmp	r8, r4
 801f6fc:	f340 8098 	ble.w	801f830 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f700:	2f00      	cmp	r7, #0
 801f702:	f000 8097 	beq.w	801f834 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f706:	f10e 0a01 	add.w	sl, lr, #1
 801f70a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f70e:	f01a 0f01 	tst.w	sl, #1
 801f712:	5d14      	ldrb	r4, [r2, r4]
 801f714:	bf0c      	ite	eq
 801f716:	f004 040f 	andeq.w	r4, r4, #15
 801f71a:	1124      	asrne	r4, r4, #4
 801f71c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f720:	b2e4      	uxtb	r4, r4
 801f722:	3501      	adds	r5, #1
 801f724:	f100 808a 	bmi.w	801f83c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f728:	45a9      	cmp	r9, r5
 801f72a:	f340 8087 	ble.w	801f83c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f72e:	f1bc 0f00 	cmp.w	ip, #0
 801f732:	f000 8086 	beq.w	801f842 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f736:	2800      	cmp	r0, #0
 801f738:	db7e      	blt.n	801f838 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f73a:	4580      	cmp	r8, r0
 801f73c:	dd7c      	ble.n	801f838 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f73e:	eb03 090e 	add.w	r9, r3, lr
 801f742:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f746:	f019 0f01 	tst.w	r9, #1
 801f74a:	5d55      	ldrb	r5, [r2, r5]
 801f74c:	bf0c      	ite	eq
 801f74e:	f005 050f 	andeq.w	r5, r5, #15
 801f752:	112d      	asrne	r5, r5, #4
 801f754:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f758:	b2ed      	uxtb	r5, r5
 801f75a:	3001      	adds	r0, #1
 801f75c:	d474      	bmi.n	801f848 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f75e:	4580      	cmp	r8, r0
 801f760:	dd72      	ble.n	801f848 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f762:	2f00      	cmp	r7, #0
 801f764:	d072      	beq.n	801f84c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f766:	3301      	adds	r3, #1
 801f768:	449e      	add	lr, r3
 801f76a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f76e:	f01e 0f01 	tst.w	lr, #1
 801f772:	5cd0      	ldrb	r0, [r2, r3]
 801f774:	bf0c      	ite	eq
 801f776:	f000 000f 	andeq.w	r0, r0, #15
 801f77a:	1100      	asrne	r0, r0, #4
 801f77c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f780:	b2c3      	uxtb	r3, r0
 801f782:	b2ba      	uxth	r2, r7
 801f784:	fa1f fc8c 	uxth.w	ip, ip
 801f788:	fb02 f00c 	mul.w	r0, r2, ip
 801f78c:	0112      	lsls	r2, r2, #4
 801f78e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f792:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f796:	1a12      	subs	r2, r2, r0
 801f798:	fa1f fc8c 	uxth.w	ip, ip
 801f79c:	b292      	uxth	r2, r2
 801f79e:	eba7 070c 	sub.w	r7, r7, ip
 801f7a2:	4362      	muls	r2, r4
 801f7a4:	b2bf      	uxth	r7, r7
 801f7a6:	fb06 2207 	mla	r2, r6, r7, r2
 801f7aa:	fb0c 2505 	mla	r5, ip, r5, r2
 801f7ae:	fb00 5303 	mla	r3, r0, r3, r5
 801f7b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f7b6:	b3a3      	cbz	r3, 801f822 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f7b8:	4a25      	ldr	r2, [pc, #148]	; (801f850 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f7ba:	880e      	ldrh	r6, [r1, #0]
 801f7bc:	6815      	ldr	r5, [r2, #0]
 801f7be:	b29a      	uxth	r2, r3
 801f7c0:	1234      	asrs	r4, r6, #8
 801f7c2:	43db      	mvns	r3, r3
 801f7c4:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f7c8:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f7cc:	b2db      	uxtb	r3, r3
 801f7ce:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f7d2:	fb10 f002 	smulbb	r0, r0, r2
 801f7d6:	b2ed      	uxtb	r5, r5
 801f7d8:	fb17 f702 	smulbb	r7, r7, r2
 801f7dc:	fb04 0403 	mla	r4, r4, r3, r0
 801f7e0:	10f0      	asrs	r0, r6, #3
 801f7e2:	fb15 f202 	smulbb	r2, r5, r2
 801f7e6:	00f6      	lsls	r6, r6, #3
 801f7e8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f7ec:	b2a4      	uxth	r4, r4
 801f7ee:	b2f6      	uxtb	r6, r6
 801f7f0:	fb00 7003 	mla	r0, r0, r3, r7
 801f7f4:	fb06 2303 	mla	r3, r6, r3, r2
 801f7f8:	b280      	uxth	r0, r0
 801f7fa:	b29a      	uxth	r2, r3
 801f7fc:	1c63      	adds	r3, r4, #1
 801f7fe:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f802:	1c53      	adds	r3, r2, #1
 801f804:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f808:	1c42      	adds	r2, r0, #1
 801f80a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f80e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f812:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f816:	0940      	lsrs	r0, r0, #5
 801f818:	4323      	orrs	r3, r4
 801f81a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f81e:	4303      	orrs	r3, r0
 801f820:	800b      	strh	r3, [r1, #0]
 801f822:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f826:	2600      	movs	r6, #0
 801f828:	e764      	b.n	801f6f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f82a:	2400      	movs	r4, #0
 801f82c:	4626      	mov	r6, r4
 801f82e:	e778      	b.n	801f722 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f830:	2400      	movs	r4, #0
 801f832:	e776      	b.n	801f722 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f834:	463c      	mov	r4, r7
 801f836:	e774      	b.n	801f722 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f838:	2500      	movs	r5, #0
 801f83a:	e78e      	b.n	801f75a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f83c:	2300      	movs	r3, #0
 801f83e:	461d      	mov	r5, r3
 801f840:	e79f      	b.n	801f782 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f842:	4663      	mov	r3, ip
 801f844:	4665      	mov	r5, ip
 801f846:	e79c      	b.n	801f782 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f848:	2300      	movs	r3, #0
 801f84a:	e79a      	b.n	801f782 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f84c:	463b      	mov	r3, r7
 801f84e:	e798      	b.n	801f782 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f850:	2400e434 	.word	0x2400e434

0801f854 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f858:	b093      	sub	sp, #76	; 0x4c
 801f85a:	461d      	mov	r5, r3
 801f85c:	920c      	str	r2, [sp, #48]	; 0x30
 801f85e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f860:	9011      	str	r0, [sp, #68]	; 0x44
 801f862:	9107      	str	r1, [sp, #28]
 801f864:	6850      	ldr	r0, [r2, #4]
 801f866:	6812      	ldr	r2, [r2, #0]
 801f868:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f86c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f870:	fb00 1303 	mla	r3, r0, r3, r1
 801f874:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f878:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f87a:	689b      	ldr	r3, [r3, #8]
 801f87c:	3301      	adds	r3, #1
 801f87e:	f023 0301 	bic.w	r3, r3, #1
 801f882:	9306      	str	r3, [sp, #24]
 801f884:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f886:	681f      	ldr	r7, [r3, #0]
 801f888:	9b07      	ldr	r3, [sp, #28]
 801f88a:	2b00      	cmp	r3, #0
 801f88c:	dc03      	bgt.n	801f896 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f88e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f890:	2b00      	cmp	r3, #0
 801f892:	f340 8267 	ble.w	801fd64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f896:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f898:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f89c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f8a0:	1e48      	subs	r0, r1, #1
 801f8a2:	f102 3cff 	add.w	ip, r2, #4294967295
 801f8a6:	2d00      	cmp	r5, #0
 801f8a8:	f340 80b7 	ble.w	801fa1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f8ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f8b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f8b4:	d406      	bmi.n	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f8b6:	4586      	cmp	lr, r0
 801f8b8:	da04      	bge.n	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f8ba:	2b00      	cmp	r3, #0
 801f8bc:	db02      	blt.n	801f8c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f8be:	4563      	cmp	r3, ip
 801f8c0:	f2c0 80ac 	blt.w	801fa1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f8c4:	f11e 0e01 	adds.w	lr, lr, #1
 801f8c8:	f100 809f 	bmi.w	801fa0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f8cc:	4571      	cmp	r1, lr
 801f8ce:	f2c0 809c 	blt.w	801fa0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f8d2:	3301      	adds	r3, #1
 801f8d4:	f100 8099 	bmi.w	801fa0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f8d8:	429a      	cmp	r2, r3
 801f8da:	f2c0 8096 	blt.w	801fa0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f8de:	46c8      	mov	r8, r9
 801f8e0:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f8e4:	9509      	str	r5, [sp, #36]	; 0x24
 801f8e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8e8:	2b00      	cmp	r3, #0
 801f8ea:	f340 80b5 	ble.w	801fa58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f8ee:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f8f2:	1430      	asrs	r0, r6, #16
 801f8f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f8f8:	9308      	str	r3, [sp, #32]
 801f8fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f8fc:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f900:	1423      	asrs	r3, r4, #16
 801f902:	f100 813f 	bmi.w	801fb84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f906:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f90a:	455b      	cmp	r3, fp
 801f90c:	f280 813a 	bge.w	801fb84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f910:	2800      	cmp	r0, #0
 801f912:	f2c0 8137 	blt.w	801fb84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f916:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f91a:	4558      	cmp	r0, fp
 801f91c:	f280 8132 	bge.w	801fb84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f920:	9a06      	ldr	r2, [sp, #24]
 801f922:	fb00 3302 	mla	r3, r0, r2, r3
 801f926:	0858      	lsrs	r0, r3, #1
 801f928:	07da      	lsls	r2, r3, #31
 801f92a:	9a08      	ldr	r2, [sp, #32]
 801f92c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f930:	bf54      	ite	pl
 801f932:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f936:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f93a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f93e:	fa5f fc8c 	uxtb.w	ip, ip
 801f942:	2a00      	cmp	r2, #0
 801f944:	f000 80cc 	beq.w	801fae0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f948:	1c58      	adds	r0, r3, #1
 801f94a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f94e:	07c0      	lsls	r0, r0, #31
 801f950:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f954:	bf54      	ite	pl
 801f956:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f95a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f95e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f962:	fa5f fe8e 	uxtb.w	lr, lr
 801f966:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801f96a:	b1b9      	cbz	r1, 801f99c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801f96c:	4453      	add	r3, sl
 801f96e:	0858      	lsrs	r0, r3, #1
 801f970:	07da      	lsls	r2, r3, #31
 801f972:	5c38      	ldrb	r0, [r7, r0]
 801f974:	bf54      	ite	pl
 801f976:	f000 000f 	andpl.w	r0, r0, #15
 801f97a:	1100      	asrmi	r0, r0, #4
 801f97c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f980:	b2c0      	uxtb	r0, r0
 801f982:	900a      	str	r0, [sp, #40]	; 0x28
 801f984:	1c58      	adds	r0, r3, #1
 801f986:	0843      	lsrs	r3, r0, #1
 801f988:	07c2      	lsls	r2, r0, #31
 801f98a:	5cfb      	ldrb	r3, [r7, r3]
 801f98c:	bf54      	ite	pl
 801f98e:	f003 030f 	andpl.w	r3, r3, #15
 801f992:	111b      	asrmi	r3, r3, #4
 801f994:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f998:	b2db      	uxtb	r3, r3
 801f99a:	930e      	str	r3, [sp, #56]	; 0x38
 801f99c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f9a0:	b289      	uxth	r1, r1
 801f9a2:	fb02 f301 	mul.w	r3, r2, r1
 801f9a6:	0112      	lsls	r2, r2, #4
 801f9a8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f9ac:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f9b0:	1ad2      	subs	r2, r2, r3
 801f9b2:	b289      	uxth	r1, r1
 801f9b4:	b292      	uxth	r2, r2
 801f9b6:	1a40      	subs	r0, r0, r1
 801f9b8:	fa1f fe80 	uxth.w	lr, r0
 801f9bc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f9be:	4342      	muls	r2, r0
 801f9c0:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f9c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f9c6:	fb01 c102 	mla	r1, r1, r2, ip
 801f9ca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f9cc:	fb03 1302 	mla	r3, r3, r2, r1
 801f9d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f9d4:	2bff      	cmp	r3, #255	; 0xff
 801f9d6:	f040 8094 	bne.w	801fb02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f9da:	4bbf      	ldr	r3, [pc, #764]	; (801fcd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f9dc:	681a      	ldr	r2, [r3, #0]
 801f9de:	4bbf      	ldr	r3, [pc, #764]	; (801fcdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f9e0:	0951      	lsrs	r1, r2, #5
 801f9e2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f9e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f9ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f9ee:	430b      	orrs	r3, r1
 801f9f0:	4313      	orrs	r3, r2
 801f9f2:	f8a8 3000 	strh.w	r3, [r8]
 801f9f6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f9f8:	f108 0802 	add.w	r8, r8, #2
 801f9fc:	441c      	add	r4, r3
 801f9fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa00:	441e      	add	r6, r3
 801fa02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa04:	3b01      	subs	r3, #1
 801fa06:	9309      	str	r3, [sp, #36]	; 0x24
 801fa08:	e76d      	b.n	801f8e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fa0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fa0c:	3d01      	subs	r5, #1
 801fa0e:	f109 0902 	add.w	r9, r9, #2
 801fa12:	441c      	add	r4, r3
 801fa14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa16:	441e      	add	r6, r3
 801fa18:	e745      	b.n	801f8a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fa1a:	d021      	beq.n	801fa60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801fa1c:	1e6b      	subs	r3, r5, #1
 801fa1e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fa20:	fb00 4003 	mla	r0, r0, r3, r4
 801fa24:	1400      	asrs	r0, r0, #16
 801fa26:	f53f af5a 	bmi.w	801f8de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa2a:	3901      	subs	r1, #1
 801fa2c:	4288      	cmp	r0, r1
 801fa2e:	f6bf af56 	bge.w	801f8de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa32:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fa34:	fb01 6303 	mla	r3, r1, r3, r6
 801fa38:	141b      	asrs	r3, r3, #16
 801fa3a:	f53f af50 	bmi.w	801f8de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa3e:	3a01      	subs	r2, #1
 801fa40:	4293      	cmp	r3, r2
 801fa42:	f6bf af4c 	bge.w	801f8de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fa46:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fa4a:	46a8      	mov	r8, r5
 801fa4c:	46ce      	mov	lr, r9
 801fa4e:	9308      	str	r3, [sp, #32]
 801fa50:	f1b8 0f00 	cmp.w	r8, #0
 801fa54:	f300 80b6 	bgt.w	801fbc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fa58:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fa5c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fa60:	9b07      	ldr	r3, [sp, #28]
 801fa62:	2b00      	cmp	r3, #0
 801fa64:	f340 817e 	ble.w	801fd64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fa68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fa6c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa76:	eef0 6a62 	vmov.f32	s13, s5
 801fa7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa86:	ee16 4a90 	vmov	r4, s13
 801fa8a:	eef0 6a43 	vmov.f32	s13, s6
 801fa8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa92:	ee16 6a90 	vmov	r6, s13
 801fa96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801faa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801faa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801faaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801faae:	ee12 2a90 	vmov	r2, s5
 801fab2:	eef0 2a47 	vmov.f32	s5, s14
 801fab6:	fb92 f3f3 	sdiv	r3, r2, r3
 801faba:	ee13 2a10 	vmov	r2, s6
 801fabe:	931f      	str	r3, [sp, #124]	; 0x7c
 801fac0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fac2:	eeb0 3a67 	vmov.f32	s6, s15
 801fac6:	fb92 f3f3 	sdiv	r3, r2, r3
 801faca:	9320      	str	r3, [sp, #128]	; 0x80
 801facc:	9b07      	ldr	r3, [sp, #28]
 801face:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fad0:	3b01      	subs	r3, #1
 801fad2:	9307      	str	r3, [sp, #28]
 801fad4:	bf08      	it	eq
 801fad6:	4615      	moveq	r5, r2
 801fad8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fada:	bf18      	it	ne
 801fadc:	461d      	movne	r5, r3
 801fade:	e6d3      	b.n	801f888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fae0:	2900      	cmp	r1, #0
 801fae2:	f43f af5b 	beq.w	801f99c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fae6:	eb0a 0003 	add.w	r0, sl, r3
 801faea:	0843      	lsrs	r3, r0, #1
 801faec:	07c0      	lsls	r0, r0, #31
 801faee:	5cfb      	ldrb	r3, [r7, r3]
 801faf0:	bf54      	ite	pl
 801faf2:	f003 030f 	andpl.w	r3, r3, #15
 801faf6:	111b      	asrmi	r3, r3, #4
 801faf8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fafc:	b2db      	uxtb	r3, r3
 801fafe:	930a      	str	r3, [sp, #40]	; 0x28
 801fb00:	e74c      	b.n	801f99c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fb02:	2b00      	cmp	r3, #0
 801fb04:	f43f af77 	beq.w	801f9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fb08:	4a73      	ldr	r2, [pc, #460]	; (801fcd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb0a:	fa1f fe83 	uxth.w	lr, r3
 801fb0e:	f8b8 c000 	ldrh.w	ip, [r8]
 801fb12:	43db      	mvns	r3, r3
 801fb14:	6810      	ldr	r0, [r2, #0]
 801fb16:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fb1a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fb1e:	b2db      	uxtb	r3, r3
 801fb20:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fb24:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fb28:	fb12 f20e 	smulbb	r2, r2, lr
 801fb2c:	b2c0      	uxtb	r0, r0
 801fb2e:	fb1b fb0e 	smulbb	fp, fp, lr
 801fb32:	fb01 2103 	mla	r1, r1, r3, r2
 801fb36:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fb3a:	fb10 fe0e 	smulbb	lr, r0, lr
 801fb3e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fb42:	b289      	uxth	r1, r1
 801fb44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fb48:	fa5f fc8c 	uxtb.w	ip, ip
 801fb4c:	fb02 b203 	mla	r2, r2, r3, fp
 801fb50:	1c48      	adds	r0, r1, #1
 801fb52:	fb0c e303 	mla	r3, ip, r3, lr
 801fb56:	b292      	uxth	r2, r2
 801fb58:	b29b      	uxth	r3, r3
 801fb5a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fb5e:	f102 0b01 	add.w	fp, r2, #1
 801fb62:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fb66:	1c59      	adds	r1, r3, #1
 801fb68:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fb6c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fb70:	0952      	lsrs	r2, r2, #5
 801fb72:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fb76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb7a:	4301      	orrs	r1, r0
 801fb7c:	4311      	orrs	r1, r2
 801fb7e:	f8a8 1000 	strh.w	r1, [r8]
 801fb82:	e738      	b.n	801f9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fb84:	f113 0b01 	adds.w	fp, r3, #1
 801fb88:	f53f af35 	bmi.w	801f9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fb8c:	45dc      	cmp	ip, fp
 801fb8e:	f6ff af32 	blt.w	801f9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fb92:	f110 0b01 	adds.w	fp, r0, #1
 801fb96:	f53f af2e 	bmi.w	801f9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fb9a:	45de      	cmp	lr, fp
 801fb9c:	f6ff af2b 	blt.w	801f9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fba0:	9302      	str	r3, [sp, #8]
 801fba2:	fa0f f38e 	sxth.w	r3, lr
 801fba6:	9a08      	ldr	r2, [sp, #32]
 801fba8:	9301      	str	r3, [sp, #4]
 801fbaa:	fa0f f38c 	sxth.w	r3, ip
 801fbae:	9105      	str	r1, [sp, #20]
 801fbb0:	4641      	mov	r1, r8
 801fbb2:	9300      	str	r3, [sp, #0]
 801fbb4:	4653      	mov	r3, sl
 801fbb6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fbba:	463a      	mov	r2, r7
 801fbbc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fbbe:	f7ff fd73 	bl	801f6a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fbc2:	e718      	b.n	801f9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fbc4:	1422      	asrs	r2, r4, #16
 801fbc6:	9906      	ldr	r1, [sp, #24]
 801fbc8:	1433      	asrs	r3, r6, #16
 801fbca:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fbce:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fbd2:	fb01 2303 	mla	r3, r1, r3, r2
 801fbd6:	085a      	lsrs	r2, r3, #1
 801fbd8:	07d9      	lsls	r1, r3, #31
 801fbda:	5cba      	ldrb	r2, [r7, r2]
 801fbdc:	bf54      	ite	pl
 801fbde:	f002 020f 	andpl.w	r2, r2, #15
 801fbe2:	1112      	asrmi	r2, r2, #4
 801fbe4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fbe8:	b2d2      	uxtb	r2, r2
 801fbea:	2800      	cmp	r0, #0
 801fbec:	d063      	beq.n	801fcb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801fbee:	f103 0a01 	add.w	sl, r3, #1
 801fbf2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fbf6:	f01a 0f01 	tst.w	sl, #1
 801fbfa:	5c79      	ldrb	r1, [r7, r1]
 801fbfc:	bf0c      	ite	eq
 801fbfe:	f001 010f 	andeq.w	r1, r1, #15
 801fc02:	1109      	asrne	r1, r1, #4
 801fc04:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fc08:	b2c9      	uxtb	r1, r1
 801fc0a:	910f      	str	r1, [sp, #60]	; 0x3c
 801fc0c:	f1bc 0f00 	cmp.w	ip, #0
 801fc10:	d01a      	beq.n	801fc48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fc12:	9908      	ldr	r1, [sp, #32]
 801fc14:	440b      	add	r3, r1
 801fc16:	0859      	lsrs	r1, r3, #1
 801fc18:	f013 0f01 	tst.w	r3, #1
 801fc1c:	f103 0301 	add.w	r3, r3, #1
 801fc20:	5c79      	ldrb	r1, [r7, r1]
 801fc22:	bf0c      	ite	eq
 801fc24:	f001 010f 	andeq.w	r1, r1, #15
 801fc28:	1109      	asrne	r1, r1, #4
 801fc2a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fc2e:	b2c9      	uxtb	r1, r1
 801fc30:	910b      	str	r1, [sp, #44]	; 0x2c
 801fc32:	0859      	lsrs	r1, r3, #1
 801fc34:	07db      	lsls	r3, r3, #31
 801fc36:	5c79      	ldrb	r1, [r7, r1]
 801fc38:	bf54      	ite	pl
 801fc3a:	f001 010f 	andpl.w	r1, r1, #15
 801fc3e:	1109      	asrmi	r1, r1, #4
 801fc40:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fc44:	b2c9      	uxtb	r1, r1
 801fc46:	9110      	str	r1, [sp, #64]	; 0x40
 801fc48:	b280      	uxth	r0, r0
 801fc4a:	fa1f fc8c 	uxth.w	ip, ip
 801fc4e:	fb00 f30c 	mul.w	r3, r0, ip
 801fc52:	0100      	lsls	r0, r0, #4
 801fc54:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fc58:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fc5c:	1ac0      	subs	r0, r0, r3
 801fc5e:	fa1f fc8c 	uxth.w	ip, ip
 801fc62:	b280      	uxth	r0, r0
 801fc64:	eba1 010c 	sub.w	r1, r1, ip
 801fc68:	fa1f fa81 	uxth.w	sl, r1
 801fc6c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fc6e:	4348      	muls	r0, r1
 801fc70:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fc72:	fb02 020a 	mla	r2, r2, sl, r0
 801fc76:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fc7a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fc7c:	fb03 c302 	mla	r3, r3, r2, ip
 801fc80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc84:	2bff      	cmp	r3, #255	; 0xff
 801fc86:	d12b      	bne.n	801fce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fc88:	4b13      	ldr	r3, [pc, #76]	; (801fcd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fc8a:	681a      	ldr	r2, [r3, #0]
 801fc8c:	4b13      	ldr	r3, [pc, #76]	; (801fcdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fc8e:	0951      	lsrs	r1, r2, #5
 801fc90:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fc94:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fc98:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc9c:	430b      	orrs	r3, r1
 801fc9e:	4313      	orrs	r3, r2
 801fca0:	f8ae 3000 	strh.w	r3, [lr]
 801fca4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fca6:	f10e 0e02 	add.w	lr, lr, #2
 801fcaa:	f108 38ff 	add.w	r8, r8, #4294967295
 801fcae:	441c      	add	r4, r3
 801fcb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcb2:	441e      	add	r6, r3
 801fcb4:	e6cc      	b.n	801fa50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801fcb6:	f1bc 0f00 	cmp.w	ip, #0
 801fcba:	d0c5      	beq.n	801fc48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fcbc:	9908      	ldr	r1, [sp, #32]
 801fcbe:	440b      	add	r3, r1
 801fcc0:	0859      	lsrs	r1, r3, #1
 801fcc2:	07db      	lsls	r3, r3, #31
 801fcc4:	5c79      	ldrb	r1, [r7, r1]
 801fcc6:	bf54      	ite	pl
 801fcc8:	f001 010f 	andpl.w	r1, r1, #15
 801fccc:	1109      	asrmi	r1, r1, #4
 801fcce:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fcd2:	b2c9      	uxtb	r1, r1
 801fcd4:	910b      	str	r1, [sp, #44]	; 0x2c
 801fcd6:	e7b7      	b.n	801fc48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fcd8:	2400e434 	.word	0x2400e434
 801fcdc:	fffff800 	.word	0xfffff800
 801fce0:	2b00      	cmp	r3, #0
 801fce2:	d0df      	beq.n	801fca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801fce4:	4a21      	ldr	r2, [pc, #132]	; (801fd6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fce6:	fa1f fa83 	uxth.w	sl, r3
 801fcea:	f8be c000 	ldrh.w	ip, [lr]
 801fcee:	43db      	mvns	r3, r3
 801fcf0:	6810      	ldr	r0, [r2, #0]
 801fcf2:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fcf6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fcfa:	b2db      	uxtb	r3, r3
 801fcfc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fd00:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fd04:	fb12 f20a 	smulbb	r2, r2, sl
 801fd08:	b2c0      	uxtb	r0, r0
 801fd0a:	fb1b fb0a 	smulbb	fp, fp, sl
 801fd0e:	fb01 2103 	mla	r1, r1, r3, r2
 801fd12:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fd16:	fb10 f00a 	smulbb	r0, r0, sl
 801fd1a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fd1e:	b289      	uxth	r1, r1
 801fd20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fd24:	fa5f fc8c 	uxtb.w	ip, ip
 801fd28:	fb02 b203 	mla	r2, r2, r3, fp
 801fd2c:	fb0c 0003 	mla	r0, ip, r3, r0
 801fd30:	1c4b      	adds	r3, r1, #1
 801fd32:	b292      	uxth	r2, r2
 801fd34:	b280      	uxth	r0, r0
 801fd36:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fd3a:	f100 0b01 	add.w	fp, r0, #1
 801fd3e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fd42:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fd46:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fd4a:	ea4b 0101 	orr.w	r1, fp, r1
 801fd4e:	f102 0b01 	add.w	fp, r2, #1
 801fd52:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fd56:	0952      	lsrs	r2, r2, #5
 801fd58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fd5c:	4311      	orrs	r1, r2
 801fd5e:	f8ae 1000 	strh.w	r1, [lr]
 801fd62:	e79f      	b.n	801fca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801fd64:	b013      	add	sp, #76	; 0x4c
 801fd66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd6a:	bf00      	nop
 801fd6c:	2400e434 	.word	0x2400e434

0801fd70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801fd70:	b570      	push	{r4, r5, r6, lr}
 801fd72:	1208      	asrs	r0, r1, #8
 801fd74:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801fd78:	b29e      	uxth	r6, r3
 801fd7a:	1213      	asrs	r3, r2, #8
 801fd7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fd80:	10cc      	asrs	r4, r1, #3
 801fd82:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801fd86:	00c9      	lsls	r1, r1, #3
 801fd88:	fb10 f006 	smulbb	r0, r0, r6
 801fd8c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801fd90:	fb13 f305 	smulbb	r3, r3, r5
 801fd94:	fb14 f406 	smulbb	r4, r4, r6
 801fd98:	4418      	add	r0, r3
 801fd9a:	10d3      	asrs	r3, r2, #3
 801fd9c:	00d2      	lsls	r2, r2, #3
 801fd9e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801fda2:	b280      	uxth	r0, r0
 801fda4:	b2d2      	uxtb	r2, r2
 801fda6:	fb13 f305 	smulbb	r3, r3, r5
 801fdaa:	fb12 f205 	smulbb	r2, r2, r5
 801fdae:	441c      	add	r4, r3
 801fdb0:	b2cb      	uxtb	r3, r1
 801fdb2:	fb13 f306 	smulbb	r3, r3, r6
 801fdb6:	b2a4      	uxth	r4, r4
 801fdb8:	4413      	add	r3, r2
 801fdba:	1c42      	adds	r2, r0, #1
 801fdbc:	b29b      	uxth	r3, r3
 801fdbe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fdc2:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 801fdc6:	1c58      	adds	r0, r3, #1
 801fdc8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fdcc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fdd0:	4310      	orrs	r0, r2
 801fdd2:	1c62      	adds	r2, r4, #1
 801fdd4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801fdd8:	0964      	lsrs	r4, r4, #5
 801fdda:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801fdde:	4320      	orrs	r0, r4
 801fde0:	bd70      	pop	{r4, r5, r6, pc}
	...

0801fde4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801fde4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fde8:	b08f      	sub	sp, #60	; 0x3c
 801fdea:	461c      	mov	r4, r3
 801fdec:	460d      	mov	r5, r1
 801fdee:	4616      	mov	r6, r2
 801fdf0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 801fdf4:	9004      	str	r0, [sp, #16]
 801fdf6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fdf8:	2f00      	cmp	r7, #0
 801fdfa:	f000 80f6 	beq.w	801ffea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801fdfe:	6820      	ldr	r0, [r4, #0]
 801fe00:	aa0a      	add	r2, sp, #40	; 0x28
 801fe02:	6861      	ldr	r1, [r4, #4]
 801fe04:	f04f 0802 	mov.w	r8, #2
 801fe08:	3604      	adds	r6, #4
 801fe0a:	c203      	stmia	r2!, {r0, r1}
 801fe0c:	6818      	ldr	r0, [r3, #0]
 801fe0e:	aa0c      	add	r2, sp, #48	; 0x30
 801fe10:	6859      	ldr	r1, [r3, #4]
 801fe12:	c203      	stmia	r2!, {r0, r1}
 801fe14:	a80a      	add	r0, sp, #40	; 0x28
 801fe16:	f7f0 f8c1 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fe1a:	4621      	mov	r1, r4
 801fe1c:	a80c      	add	r0, sp, #48	; 0x30
 801fe1e:	f7f0 f901 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fe22:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801fe26:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 801fe2a:	f002 0301 	and.w	r3, r2, #1
 801fe2e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fe32:	9306      	str	r3, [sp, #24]
 801fe34:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801fe38:	f003 0101 	and.w	r1, r3, #1
 801fe3c:	9105      	str	r1, [sp, #20]
 801fe3e:	9805      	ldr	r0, [sp, #20]
 801fe40:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801fe44:	4403      	add	r3, r0
 801fe46:	fb01 2303 	mla	r3, r1, r3, r2
 801fe4a:	fb93 f3f8 	sdiv	r3, r3, r8
 801fe4e:	441d      	add	r5, r3
 801fe50:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801fe54:	441a      	add	r2, r3
 801fe56:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801fe5a:	4419      	add	r1, r3
 801fe5c:	4b64      	ldr	r3, [pc, #400]	; (801fff0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801fe5e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801fe62:	6818      	ldr	r0, [r3, #0]
 801fe64:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 801fe68:	6803      	ldr	r3, [r0, #0]
 801fe6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fe6c:	4798      	blx	r3
 801fe6e:	4a61      	ldr	r2, [pc, #388]	; (801fff4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801fe70:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 801fe74:	2fff      	cmp	r7, #255	; 0xff
 801fe76:	8813      	ldrh	r3, [r2, #0]
 801fe78:	4611      	mov	r1, r2
 801fe7a:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 801fe7e:	fb03 fb0b 	mul.w	fp, r3, fp
 801fe82:	fb03 a404 	mla	r4, r3, r4, sl
 801fe86:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801fe8a:	d06b      	beq.n	801ff64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 801fe8c:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 801fe90:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801fe94:	9303      	str	r3, [sp, #12]
 801fe96:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801fe9a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801fe9e:	9b07      	ldr	r3, [sp, #28]
 801fea0:	42a3      	cmp	r3, r4
 801fea2:	f240 809d 	bls.w	801ffe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801fea6:	9b06      	ldr	r3, [sp, #24]
 801fea8:	2b00      	cmp	r3, #0
 801feaa:	d039      	beq.n	801ff20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 801feac:	782b      	ldrb	r3, [r5, #0]
 801feae:	f105 0801 	add.w	r8, r5, #1
 801feb2:	f109 3bff 	add.w	fp, r9, #4294967295
 801feb6:	8822      	ldrh	r2, [r4, #0]
 801feb8:	f003 030f 	and.w	r3, r3, #15
 801febc:	9804      	ldr	r0, [sp, #16]
 801febe:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801fec2:	9b03      	ldr	r3, [sp, #12]
 801fec4:	9300      	str	r3, [sp, #0]
 801fec6:	463b      	mov	r3, r7
 801fec8:	f7ff ff52 	bl	801fd70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801fecc:	f824 0b02 	strh.w	r0, [r4], #2
 801fed0:	f1bb 0f01 	cmp.w	fp, #1
 801fed4:	46a2      	mov	sl, r4
 801fed6:	f104 0404 	add.w	r4, r4, #4
 801feda:	dd24      	ble.n	801ff26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 801fedc:	f898 3000 	ldrb.w	r3, [r8]
 801fee0:	f1ab 0b02 	sub.w	fp, fp, #2
 801fee4:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801fee8:	091b      	lsrs	r3, r3, #4
 801feea:	9804      	ldr	r0, [sp, #16]
 801feec:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801fef0:	9b03      	ldr	r3, [sp, #12]
 801fef2:	9300      	str	r3, [sp, #0]
 801fef4:	463b      	mov	r3, r7
 801fef6:	f7ff ff3b 	bl	801fd70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801fefa:	f824 0c04 	strh.w	r0, [r4, #-4]
 801fefe:	f818 3b01 	ldrb.w	r3, [r8], #1
 801ff02:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801ff06:	f003 030f 	and.w	r3, r3, #15
 801ff0a:	9804      	ldr	r0, [sp, #16]
 801ff0c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff10:	9b03      	ldr	r3, [sp, #12]
 801ff12:	9300      	str	r3, [sp, #0]
 801ff14:	463b      	mov	r3, r7
 801ff16:	f7ff ff2b 	bl	801fd70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff1a:	f824 0c02 	strh.w	r0, [r4, #-2]
 801ff1e:	e7d7      	b.n	801fed0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801ff20:	46a8      	mov	r8, r5
 801ff22:	46cb      	mov	fp, r9
 801ff24:	e7d4      	b.n	801fed0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801ff26:	d10e      	bne.n	801ff46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 801ff28:	f898 3000 	ldrb.w	r3, [r8]
 801ff2c:	f8ba 2000 	ldrh.w	r2, [sl]
 801ff30:	091b      	lsrs	r3, r3, #4
 801ff32:	9804      	ldr	r0, [sp, #16]
 801ff34:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff38:	9b03      	ldr	r3, [sp, #12]
 801ff3a:	9300      	str	r3, [sp, #0]
 801ff3c:	463b      	mov	r3, r7
 801ff3e:	f7ff ff17 	bl	801fd70 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff42:	f82a 0b02 	strh.w	r0, [sl], #2
 801ff46:	9b08      	ldr	r3, [sp, #32]
 801ff48:	9a05      	ldr	r2, [sp, #20]
 801ff4a:	881c      	ldrh	r4, [r3, #0]
 801ff4c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801ff50:	eba4 0409 	sub.w	r4, r4, r9
 801ff54:	4413      	add	r3, r2
 801ff56:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ff58:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801ff5c:	fb93 f3f2 	sdiv	r3, r3, r2
 801ff60:	441d      	add	r5, r3
 801ff62:	e79c      	b.n	801fe9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 801ff64:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801ff68:	45a3      	cmp	fp, r4
 801ff6a:	d939      	bls.n	801ffe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801ff6c:	9b06      	ldr	r3, [sp, #24]
 801ff6e:	b1fb      	cbz	r3, 801ffb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801ff70:	782b      	ldrb	r3, [r5, #0]
 801ff72:	1c6a      	adds	r2, r5, #1
 801ff74:	f109 30ff 	add.w	r0, r9, #4294967295
 801ff78:	3402      	adds	r4, #2
 801ff7a:	f003 030f 	and.w	r3, r3, #15
 801ff7e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ff82:	f824 3c02 	strh.w	r3, [r4, #-2]
 801ff86:	2801      	cmp	r0, #1
 801ff88:	4623      	mov	r3, r4
 801ff8a:	f104 0404 	add.w	r4, r4, #4
 801ff8e:	dd12      	ble.n	801ffb6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ff90:	7813      	ldrb	r3, [r2, #0]
 801ff92:	3802      	subs	r0, #2
 801ff94:	091b      	lsrs	r3, r3, #4
 801ff96:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ff9a:	f824 3c04 	strh.w	r3, [r4, #-4]
 801ff9e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801ffa2:	f003 030f 	and.w	r3, r3, #15
 801ffa6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ffaa:	f824 3c02 	strh.w	r3, [r4, #-2]
 801ffae:	e7ea      	b.n	801ff86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801ffb0:	462a      	mov	r2, r5
 801ffb2:	4648      	mov	r0, r9
 801ffb4:	e7e7      	b.n	801ff86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801ffb6:	d106      	bne.n	801ffc6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801ffb8:	7812      	ldrb	r2, [r2, #0]
 801ffba:	3302      	adds	r3, #2
 801ffbc:	0912      	lsrs	r2, r2, #4
 801ffbe:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ffc2:	f823 2c02 	strh.w	r2, [r3, #-2]
 801ffc6:	880c      	ldrh	r4, [r1, #0]
 801ffc8:	9a05      	ldr	r2, [sp, #20]
 801ffca:	eba4 0409 	sub.w	r4, r4, r9
 801ffce:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801ffd2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801ffd6:	4413      	add	r3, r2
 801ffd8:	fb93 f3f8 	sdiv	r3, r3, r8
 801ffdc:	441d      	add	r5, r3
 801ffde:	e7c3      	b.n	801ff68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 801ffe0:	4b03      	ldr	r3, [pc, #12]	; (801fff0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801ffe2:	6818      	ldr	r0, [r3, #0]
 801ffe4:	6803      	ldr	r3, [r0, #0]
 801ffe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ffe8:	4798      	blx	r3
 801ffea:	b00f      	add	sp, #60	; 0x3c
 801ffec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fff0:	2400e424 	.word	0x2400e424
 801fff4:	2400e41e 	.word	0x2400e41e

0801fff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801fff8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fffa:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801fffe:	0a0f      	lsrs	r7, r1, #8
 8020000:	2dff      	cmp	r5, #255	; 0xff
 8020002:	d10c      	bne.n	802001e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020004:	2bff      	cmp	r3, #255	; 0xff
 8020006:	d10a      	bne.n	802001e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020008:	0948      	lsrs	r0, r1, #5
 802000a:	4b25      	ldr	r3, [pc, #148]	; (80200a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802000c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020010:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020014:	403b      	ands	r3, r7
 8020016:	4318      	orrs	r0, r3
 8020018:	4308      	orrs	r0, r1
 802001a:	b280      	uxth	r0, r0
 802001c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802001e:	fb15 f503 	smulbb	r5, r5, r3
 8020022:	1214      	asrs	r4, r2, #8
 8020024:	10d6      	asrs	r6, r2, #3
 8020026:	b2ab      	uxth	r3, r5
 8020028:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802002c:	00d0      	lsls	r0, r2, #3
 802002e:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020032:	1c5d      	adds	r5, r3, #1
 8020034:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020038:	b2c0      	uxtb	r0, r0
 802003a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802003e:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8020042:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020046:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802004a:	fa1f fc85 	uxth.w	ip, r5
 802004e:	43ed      	mvns	r5, r5
 8020050:	fb12 f20c 	smulbb	r2, r2, ip
 8020054:	b2eb      	uxtb	r3, r5
 8020056:	b2fd      	uxtb	r5, r7
 8020058:	fb04 2403 	mla	r4, r4, r3, r2
 802005c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8020060:	fb15 f50c 	smulbb	r5, r5, ip
 8020064:	b2c8      	uxtb	r0, r1
 8020066:	b2a4      	uxth	r4, r4
 8020068:	fb10 f00c 	smulbb	r0, r0, ip
 802006c:	fb06 5503 	mla	r5, r6, r3, r5
 8020070:	fb02 0003 	mla	r0, r2, r3, r0
 8020074:	b2ad      	uxth	r5, r5
 8020076:	b283      	uxth	r3, r0
 8020078:	1c60      	adds	r0, r4, #1
 802007a:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802007e:	1c58      	adds	r0, r3, #1
 8020080:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020084:	1c6b      	adds	r3, r5, #1
 8020086:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802008a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802008e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020092:	096d      	lsrs	r5, r5, #5
 8020094:	4320      	orrs	r0, r4
 8020096:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802009a:	4328      	orrs	r0, r5
 802009c:	e7be      	b.n	802001c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 802009e:	bf00      	nop
 80200a0:	00fff800 	.word	0x00fff800

080200a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80200a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200a8:	461c      	mov	r4, r3
 80200aa:	b08d      	sub	sp, #52	; 0x34
 80200ac:	460d      	mov	r5, r1
 80200ae:	4616      	mov	r6, r2
 80200b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80200b2:	4680      	mov	r8, r0
 80200b4:	6861      	ldr	r1, [r4, #4]
 80200b6:	aa08      	add	r2, sp, #32
 80200b8:	6820      	ldr	r0, [r4, #0]
 80200ba:	f04f 0a02 	mov.w	sl, #2
 80200be:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80200c2:	3604      	adds	r6, #4
 80200c4:	c203      	stmia	r2!, {r0, r1}
 80200c6:	6818      	ldr	r0, [r3, #0]
 80200c8:	aa0a      	add	r2, sp, #40	; 0x28
 80200ca:	6859      	ldr	r1, [r3, #4]
 80200cc:	c203      	stmia	r2!, {r0, r1}
 80200ce:	a808      	add	r0, sp, #32
 80200d0:	f7ef ff64 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80200d4:	4621      	mov	r1, r4
 80200d6:	a80a      	add	r0, sp, #40	; 0x28
 80200d8:	f7ef ffa4 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80200dc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80200e0:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80200e4:	f002 0301 	and.w	r3, r2, #1
 80200e8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80200ec:	9303      	str	r3, [sp, #12]
 80200ee:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80200f2:	f003 0101 	and.w	r1, r3, #1
 80200f6:	9102      	str	r1, [sp, #8]
 80200f8:	9802      	ldr	r0, [sp, #8]
 80200fa:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80200fe:	4403      	add	r3, r0
 8020100:	fb01 2303 	mla	r3, r1, r3, r2
 8020104:	fb93 f3fa 	sdiv	r3, r3, sl
 8020108:	441d      	add	r5, r3
 802010a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802010e:	441a      	add	r2, r3
 8020110:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8020114:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020118:	4419      	add	r1, r3
 802011a:	4a3e      	ldr	r2, [pc, #248]	; (8020214 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802011c:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8020120:	6810      	ldr	r0, [r2, #0]
 8020122:	9205      	str	r2, [sp, #20]
 8020124:	6803      	ldr	r3, [r0, #0]
 8020126:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020128:	4798      	blx	r3
 802012a:	4b3b      	ldr	r3, [pc, #236]	; (8020218 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802012c:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8020130:	8819      	ldrh	r1, [r3, #0]
 8020132:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8020136:	434f      	muls	r7, r1
 8020138:	fb01 c404 	mla	r4, r1, r4, ip
 802013c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020140:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8020144:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8020148:	9204      	str	r2, [sp, #16]
 802014a:	9b04      	ldr	r3, [sp, #16]
 802014c:	429c      	cmp	r4, r3
 802014e:	d258      	bcs.n	8020202 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020150:	9b03      	ldr	r3, [sp, #12]
 8020152:	2b00      	cmp	r3, #0
 8020154:	d034      	beq.n	80201c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8020156:	782b      	ldrb	r3, [r5, #0]
 8020158:	1c6f      	adds	r7, r5, #1
 802015a:	f003 030f 	and.w	r3, r3, #15
 802015e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020162:	0e0b      	lsrs	r3, r1, #24
 8020164:	d006      	beq.n	8020174 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8020166:	8822      	ldrh	r2, [r4, #0]
 8020168:	4640      	mov	r0, r8
 802016a:	9300      	str	r3, [sp, #0]
 802016c:	464b      	mov	r3, r9
 802016e:	f7ff ff43 	bl	801fff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020172:	8020      	strh	r0, [r4, #0]
 8020174:	3402      	adds	r4, #2
 8020176:	f10b 3aff 	add.w	sl, fp, #4294967295
 802017a:	f1ba 0f01 	cmp.w	sl, #1
 802017e:	dd22      	ble.n	80201c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020180:	783b      	ldrb	r3, [r7, #0]
 8020182:	091b      	lsrs	r3, r3, #4
 8020184:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020188:	0e0b      	lsrs	r3, r1, #24
 802018a:	d006      	beq.n	802019a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802018c:	8822      	ldrh	r2, [r4, #0]
 802018e:	4640      	mov	r0, r8
 8020190:	9300      	str	r3, [sp, #0]
 8020192:	464b      	mov	r3, r9
 8020194:	f7ff ff30 	bl	801fff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020198:	8020      	strh	r0, [r4, #0]
 802019a:	f817 3b01 	ldrb.w	r3, [r7], #1
 802019e:	f003 030f 	and.w	r3, r3, #15
 80201a2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80201a6:	0e0b      	lsrs	r3, r1, #24
 80201a8:	d006      	beq.n	80201b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80201aa:	8862      	ldrh	r2, [r4, #2]
 80201ac:	4640      	mov	r0, r8
 80201ae:	9300      	str	r3, [sp, #0]
 80201b0:	464b      	mov	r3, r9
 80201b2:	f7ff ff21 	bl	801fff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80201b6:	8060      	strh	r0, [r4, #2]
 80201b8:	3404      	adds	r4, #4
 80201ba:	f1aa 0a02 	sub.w	sl, sl, #2
 80201be:	e7dc      	b.n	802017a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80201c0:	462f      	mov	r7, r5
 80201c2:	46da      	mov	sl, fp
 80201c4:	e7d9      	b.n	802017a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80201c6:	d10d      	bne.n	80201e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80201c8:	783b      	ldrb	r3, [r7, #0]
 80201ca:	091b      	lsrs	r3, r3, #4
 80201cc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80201d0:	0e0b      	lsrs	r3, r1, #24
 80201d2:	d006      	beq.n	80201e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80201d4:	8822      	ldrh	r2, [r4, #0]
 80201d6:	4640      	mov	r0, r8
 80201d8:	9300      	str	r3, [sp, #0]
 80201da:	464b      	mov	r3, r9
 80201dc:	f7ff ff0c 	bl	801fff8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80201e0:	8020      	strh	r0, [r4, #0]
 80201e2:	3402      	adds	r4, #2
 80201e4:	9b06      	ldr	r3, [sp, #24]
 80201e6:	9a02      	ldr	r2, [sp, #8]
 80201e8:	881b      	ldrh	r3, [r3, #0]
 80201ea:	eba3 030b 	sub.w	r3, r3, fp
 80201ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80201f2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80201f6:	4413      	add	r3, r2
 80201f8:	9a07      	ldr	r2, [sp, #28]
 80201fa:	fb93 f3f2 	sdiv	r3, r3, r2
 80201fe:	441d      	add	r5, r3
 8020200:	e7a3      	b.n	802014a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020202:	9b05      	ldr	r3, [sp, #20]
 8020204:	6818      	ldr	r0, [r3, #0]
 8020206:	6803      	ldr	r3, [r0, #0]
 8020208:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802020a:	4798      	blx	r3
 802020c:	b00d      	add	sp, #52	; 0x34
 802020e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020212:	bf00      	nop
 8020214:	2400e424 	.word	0x2400e424
 8020218:	2400e41e 	.word	0x2400e41e

0802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 802021c:	b570      	push	{r4, r5, r6, lr}
 802021e:	1214      	asrs	r4, r2, #8
 8020220:	788d      	ldrb	r5, [r1, #2]
 8020222:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020226:	10d0      	asrs	r0, r2, #3
 8020228:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802022c:	00d2      	lsls	r2, r2, #3
 802022e:	fb15 f503 	smulbb	r5, r5, r3
 8020232:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020236:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802023a:	b2d2      	uxtb	r2, r2
 802023c:	fb04 5506 	mla	r5, r4, r6, r5
 8020240:	784c      	ldrb	r4, [r1, #1]
 8020242:	7809      	ldrb	r1, [r1, #0]
 8020244:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020248:	fb14 f403 	smulbb	r4, r4, r3
 802024c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020250:	fb11 f303 	smulbb	r3, r1, r3
 8020254:	b2ad      	uxth	r5, r5
 8020256:	fb00 4406 	mla	r4, r0, r6, r4
 802025a:	fb02 3306 	mla	r3, r2, r6, r3
 802025e:	1c68      	adds	r0, r5, #1
 8020260:	b2a4      	uxth	r4, r4
 8020262:	b29b      	uxth	r3, r3
 8020264:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020268:	1c62      	adds	r2, r4, #1
 802026a:	1c58      	adds	r0, r3, #1
 802026c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020270:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020274:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020278:	0964      	lsrs	r4, r4, #5
 802027a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802027e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020282:	4328      	orrs	r0, r5
 8020284:	4320      	orrs	r0, r4
 8020286:	bd70      	pop	{r4, r5, r6, pc}

08020288 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802028c:	b08f      	sub	sp, #60	; 0x3c
 802028e:	461c      	mov	r4, r3
 8020290:	4682      	mov	sl, r0
 8020292:	460e      	mov	r6, r1
 8020294:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8020298:	4615      	mov	r5, r2
 802029a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802029c:	2f00      	cmp	r7, #0
 802029e:	f000 8141 	beq.w	8020524 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 80202a2:	6820      	ldr	r0, [r4, #0]
 80202a4:	aa0a      	add	r2, sp, #40	; 0x28
 80202a6:	6861      	ldr	r1, [r4, #4]
 80202a8:	f04f 0802 	mov.w	r8, #2
 80202ac:	3504      	adds	r5, #4
 80202ae:	c203      	stmia	r2!, {r0, r1}
 80202b0:	6818      	ldr	r0, [r3, #0]
 80202b2:	aa0c      	add	r2, sp, #48	; 0x30
 80202b4:	6859      	ldr	r1, [r3, #4]
 80202b6:	c203      	stmia	r2!, {r0, r1}
 80202b8:	a80a      	add	r0, sp, #40	; 0x28
 80202ba:	f7ef fe6f 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80202be:	4621      	mov	r1, r4
 80202c0:	a80c      	add	r0, sp, #48	; 0x30
 80202c2:	f7ef feaf 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80202c6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80202ca:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80202ce:	f002 0301 	and.w	r3, r2, #1
 80202d2:	9306      	str	r3, [sp, #24]
 80202d4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80202d8:	f003 0101 	and.w	r1, r3, #1
 80202dc:	9105      	str	r1, [sp, #20]
 80202de:	9805      	ldr	r0, [sp, #20]
 80202e0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80202e4:	4403      	add	r3, r0
 80202e6:	fb01 2303 	mla	r3, r1, r3, r2
 80202ea:	fb93 f3f8 	sdiv	r3, r3, r8
 80202ee:	441e      	add	r6, r3
 80202f0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80202f4:	441a      	add	r2, r3
 80202f6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80202fa:	4419      	add	r1, r3
 80202fc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020300:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020304:	9303      	str	r3, [sp, #12]
 8020306:	4b89      	ldr	r3, [pc, #548]	; (802052c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020308:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802030c:	6818      	ldr	r0, [r3, #0]
 802030e:	6803      	ldr	r3, [r0, #0]
 8020310:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020312:	4798      	blx	r3
 8020314:	4a86      	ldr	r2, [pc, #536]	; (8020530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020316:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802031a:	2fff      	cmp	r7, #255	; 0xff
 802031c:	8813      	ldrh	r3, [r2, #0]
 802031e:	4694      	mov	ip, r2
 8020320:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8020324:	fb03 9404 	mla	r4, r3, r4, r9
 8020328:	fb03 f30b 	mul.w	r3, r3, fp
 802032c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020330:	d071      	beq.n	8020416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8020332:	43f9      	mvns	r1, r7
 8020334:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020338:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802033c:	b2c9      	uxtb	r1, r1
 802033e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020342:	9104      	str	r1, [sp, #16]
 8020344:	9b07      	ldr	r3, [sp, #28]
 8020346:	42a3      	cmp	r3, r4
 8020348:	f240 80e7 	bls.w	802051a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 802034c:	9b06      	ldr	r3, [sp, #24]
 802034e:	2b00      	cmp	r3, #0
 8020350:	d03d      	beq.n	80203ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8020352:	7831      	ldrb	r1, [r6, #0]
 8020354:	4650      	mov	r0, sl
 8020356:	9b04      	ldr	r3, [sp, #16]
 8020358:	f106 0801 	add.w	r8, r6, #1
 802035c:	f001 010f 	and.w	r1, r1, #15
 8020360:	8822      	ldrh	r2, [r4, #0]
 8020362:	9300      	str	r3, [sp, #0]
 8020364:	463b      	mov	r3, r7
 8020366:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802036a:	4429      	add	r1, r5
 802036c:	f7ff ff56 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020370:	9b03      	ldr	r3, [sp, #12]
 8020372:	f824 0b02 	strh.w	r0, [r4], #2
 8020376:	f103 3bff 	add.w	fp, r3, #4294967295
 802037a:	f1bb 0f01 	cmp.w	fp, #1
 802037e:	46a1      	mov	r9, r4
 8020380:	f104 0404 	add.w	r4, r4, #4
 8020384:	dd27      	ble.n	80203d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8020386:	f898 1000 	ldrb.w	r1, [r8]
 802038a:	4650      	mov	r0, sl
 802038c:	9b04      	ldr	r3, [sp, #16]
 802038e:	f1ab 0b02 	sub.w	fp, fp, #2
 8020392:	0909      	lsrs	r1, r1, #4
 8020394:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020398:	9300      	str	r3, [sp, #0]
 802039a:	463b      	mov	r3, r7
 802039c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80203a0:	4429      	add	r1, r5
 80203a2:	f7ff ff3b 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80203a6:	f824 0c04 	strh.w	r0, [r4, #-4]
 80203aa:	f818 1b01 	ldrb.w	r1, [r8], #1
 80203ae:	4650      	mov	r0, sl
 80203b0:	9b04      	ldr	r3, [sp, #16]
 80203b2:	f001 010f 	and.w	r1, r1, #15
 80203b6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80203ba:	9300      	str	r3, [sp, #0]
 80203bc:	463b      	mov	r3, r7
 80203be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80203c2:	4429      	add	r1, r5
 80203c4:	f7ff ff2a 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80203c8:	f824 0c02 	strh.w	r0, [r4, #-2]
 80203cc:	e7d5      	b.n	802037a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80203ce:	46b0      	mov	r8, r6
 80203d0:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80203d4:	e7d1      	b.n	802037a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80203d6:	d10f      	bne.n	80203f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 80203d8:	f898 1000 	ldrb.w	r1, [r8]
 80203dc:	4650      	mov	r0, sl
 80203de:	9b04      	ldr	r3, [sp, #16]
 80203e0:	0909      	lsrs	r1, r1, #4
 80203e2:	f8b9 2000 	ldrh.w	r2, [r9]
 80203e6:	9300      	str	r3, [sp, #0]
 80203e8:	463b      	mov	r3, r7
 80203ea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80203ee:	4429      	add	r1, r5
 80203f0:	f7ff ff14 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80203f4:	f829 0b02 	strh.w	r0, [r9], #2
 80203f8:	9b08      	ldr	r3, [sp, #32]
 80203fa:	9a05      	ldr	r2, [sp, #20]
 80203fc:	881c      	ldrh	r4, [r3, #0]
 80203fe:	9b03      	ldr	r3, [sp, #12]
 8020400:	1ae4      	subs	r4, r4, r3
 8020402:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8020406:	4413      	add	r3, r2
 8020408:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802040a:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802040e:	fb93 f3f2 	sdiv	r3, r3, r2
 8020412:	441e      	add	r6, r3
 8020414:	e796      	b.n	8020344 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 8020416:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802041a:	4f46      	ldr	r7, [pc, #280]	; (8020534 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802041c:	42a3      	cmp	r3, r4
 802041e:	d97c      	bls.n	802051a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8020420:	9a06      	ldr	r2, [sp, #24]
 8020422:	2a00      	cmp	r2, #0
 8020424:	d054      	beq.n	80204d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 8020426:	7830      	ldrb	r0, [r6, #0]
 8020428:	1c71      	adds	r1, r6, #1
 802042a:	f000 000f 	and.w	r0, r0, #15
 802042e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020432:	eb05 0e00 	add.w	lr, r5, r0
 8020436:	5c28      	ldrb	r0, [r5, r0]
 8020438:	f89e 2002 	ldrb.w	r2, [lr, #2]
 802043c:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020440:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020444:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020448:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802044c:	ea42 020e 	orr.w	r2, r2, lr
 8020450:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020454:	f824 2b02 	strh.w	r2, [r4], #2
 8020458:	9a03      	ldr	r2, [sp, #12]
 802045a:	f102 3eff 	add.w	lr, r2, #4294967295
 802045e:	f1be 0f01 	cmp.w	lr, #1
 8020462:	4620      	mov	r0, r4
 8020464:	f104 0404 	add.w	r4, r4, #4
 8020468:	dd36      	ble.n	80204d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 802046a:	7808      	ldrb	r0, [r1, #0]
 802046c:	f1ae 0e02 	sub.w	lr, lr, #2
 8020470:	0900      	lsrs	r0, r0, #4
 8020472:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020476:	eb05 0a00 	add.w	sl, r5, r0
 802047a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802047e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020482:	00d2      	lsls	r2, r2, #3
 8020484:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020488:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802048c:	ea49 0202 	orr.w	r2, r9, r2
 8020490:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020494:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020498:	f824 2c04 	strh.w	r2, [r4, #-4]
 802049c:	f811 0b01 	ldrb.w	r0, [r1], #1
 80204a0:	f000 000f 	and.w	r0, r0, #15
 80204a4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80204a8:	eb05 0a00 	add.w	sl, r5, r0
 80204ac:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80204b0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80204b4:	00d2      	lsls	r2, r2, #3
 80204b6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80204ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80204be:	ea49 0202 	orr.w	r2, r9, r2
 80204c2:	f815 9000 	ldrb.w	r9, [r5, r0]
 80204c6:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80204ca:	f824 2c02 	strh.w	r2, [r4, #-2]
 80204ce:	e7c6      	b.n	802045e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80204d0:	4631      	mov	r1, r6
 80204d2:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80204d6:	e7c2      	b.n	802045e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80204d8:	d111      	bne.n	80204fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80204da:	7809      	ldrb	r1, [r1, #0]
 80204dc:	0909      	lsrs	r1, r1, #4
 80204de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80204e2:	186c      	adds	r4, r5, r1
 80204e4:	5c69      	ldrb	r1, [r5, r1]
 80204e6:	78a2      	ldrb	r2, [r4, #2]
 80204e8:	7864      	ldrb	r4, [r4, #1]
 80204ea:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80204ee:	00e4      	lsls	r4, r4, #3
 80204f0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80204f4:	4322      	orrs	r2, r4
 80204f6:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80204fa:	f820 2b02 	strh.w	r2, [r0], #2
 80204fe:	9a03      	ldr	r2, [sp, #12]
 8020500:	f8bc 4000 	ldrh.w	r4, [ip]
 8020504:	9905      	ldr	r1, [sp, #20]
 8020506:	1aa4      	subs	r4, r4, r2
 8020508:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802050c:	440a      	add	r2, r1
 802050e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020512:	fb92 f2f8 	sdiv	r2, r2, r8
 8020516:	4416      	add	r6, r2
 8020518:	e780      	b.n	802041c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 802051a:	4b04      	ldr	r3, [pc, #16]	; (802052c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802051c:	6818      	ldr	r0, [r3, #0]
 802051e:	6803      	ldr	r3, [r0, #0]
 8020520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020522:	4798      	blx	r3
 8020524:	b00f      	add	sp, #60	; 0x3c
 8020526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802052a:	bf00      	nop
 802052c:	2400e424 	.word	0x2400e424
 8020530:	2400e41e 	.word	0x2400e41e
 8020534:	fffff800 	.word	0xfffff800

08020538 <CRC_Lock>:
 8020538:	4a20      	ldr	r2, [pc, #128]	; (80205bc <CRC_Lock+0x84>)
 802053a:	b530      	push	{r4, r5, lr}
 802053c:	6813      	ldr	r3, [r2, #0]
 802053e:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8020542:	f24c 2540 	movw	r5, #49728	; 0xc240
 8020546:	f023 0301 	bic.w	r3, r3, #1
 802054a:	6013      	str	r3, [r2, #0]
 802054c:	4b1c      	ldr	r3, [pc, #112]	; (80205c0 <CRC_Lock+0x88>)
 802054e:	681a      	ldr	r2, [r3, #0]
 8020550:	4022      	ands	r2, r4
 8020552:	42aa      	cmp	r2, r5
 8020554:	d005      	beq.n	8020562 <CRC_Lock+0x2a>
 8020556:	681b      	ldr	r3, [r3, #0]
 8020558:	f24c 2270 	movw	r2, #49776	; 0xc270
 802055c:	4023      	ands	r3, r4
 802055e:	4293      	cmp	r3, r2
 8020560:	d124      	bne.n	80205ac <CRC_Lock+0x74>
 8020562:	4b18      	ldr	r3, [pc, #96]	; (80205c4 <CRC_Lock+0x8c>)
 8020564:	681b      	ldr	r3, [r3, #0]
 8020566:	bb0b      	cbnz	r3, 80205ac <CRC_Lock+0x74>
 8020568:	4b17      	ldr	r3, [pc, #92]	; (80205c8 <CRC_Lock+0x90>)
 802056a:	681a      	ldr	r2, [r3, #0]
 802056c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020570:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8020574:	d00d      	beq.n	8020592 <CRC_Lock+0x5a>
 8020576:	681a      	ldr	r2, [r3, #0]
 8020578:	f240 4483 	movw	r4, #1155	; 0x483
 802057c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020580:	42a2      	cmp	r2, r4
 8020582:	d006      	beq.n	8020592 <CRC_Lock+0x5a>
 8020584:	681b      	ldr	r3, [r3, #0]
 8020586:	f240 4285 	movw	r2, #1157	; 0x485
 802058a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802058e:	4293      	cmp	r3, r2
 8020590:	d10c      	bne.n	80205ac <CRC_Lock+0x74>
 8020592:	4b0e      	ldr	r3, [pc, #56]	; (80205cc <CRC_Lock+0x94>)
 8020594:	2201      	movs	r2, #1
 8020596:	601a      	str	r2, [r3, #0]
 8020598:	681a      	ldr	r2, [r3, #0]
 802059a:	2a00      	cmp	r2, #0
 802059c:	d1fc      	bne.n	8020598 <CRC_Lock+0x60>
 802059e:	4b0c      	ldr	r3, [pc, #48]	; (80205d0 <CRC_Lock+0x98>)
 80205a0:	6018      	str	r0, [r3, #0]
 80205a2:	6818      	ldr	r0, [r3, #0]
 80205a4:	1a43      	subs	r3, r0, r1
 80205a6:	4258      	negs	r0, r3
 80205a8:	4158      	adcs	r0, r3
 80205aa:	bd30      	pop	{r4, r5, pc}
 80205ac:	4b09      	ldr	r3, [pc, #36]	; (80205d4 <CRC_Lock+0x9c>)
 80205ae:	2201      	movs	r2, #1
 80205b0:	601a      	str	r2, [r3, #0]
 80205b2:	681a      	ldr	r2, [r3, #0]
 80205b4:	2a00      	cmp	r2, #0
 80205b6:	d1fc      	bne.n	80205b2 <CRC_Lock+0x7a>
 80205b8:	4b07      	ldr	r3, [pc, #28]	; (80205d8 <CRC_Lock+0xa0>)
 80205ba:	e7f1      	b.n	80205a0 <CRC_Lock+0x68>
 80205bc:	e0002000 	.word	0xe0002000
 80205c0:	e000ed00 	.word	0xe000ed00
 80205c4:	e0042000 	.word	0xe0042000
 80205c8:	5c001000 	.word	0x5c001000
 80205cc:	58024c08 	.word	0x58024c08
 80205d0:	58024c00 	.word	0x58024c00
 80205d4:	40023008 	.word	0x40023008
 80205d8:	40023000 	.word	0x40023000

080205dc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80205dc:	6101      	str	r1, [r0, #16]
 80205de:	4770      	bx	lr

080205e0 <_ZN8touchgfx8Gestures4tickEv>:
 80205e0:	7b83      	ldrb	r3, [r0, #14]
 80205e2:	b14b      	cbz	r3, 80205f8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80205e4:	8903      	ldrh	r3, [r0, #8]
 80205e6:	3301      	adds	r3, #1
 80205e8:	b29b      	uxth	r3, r3
 80205ea:	2b07      	cmp	r3, #7
 80205ec:	8103      	strh	r3, [r0, #8]
 80205ee:	bf81      	itttt	hi
 80205f0:	2300      	movhi	r3, #0
 80205f2:	8143      	strhhi	r3, [r0, #10]
 80205f4:	8183      	strhhi	r3, [r0, #12]
 80205f6:	7383      	strbhi	r3, [r0, #14]
 80205f8:	4770      	bx	lr
	...

080205fc <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80205fc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020600:	4698      	mov	r8, r3
 8020602:	8883      	ldrh	r3, [r0, #4]
 8020604:	4604      	mov	r4, r0
 8020606:	4617      	mov	r7, r2
 8020608:	f8ad 3006 	strh.w	r3, [sp, #6]
 802060c:	eba8 0303 	sub.w	r3, r8, r3
 8020610:	4a19      	ldr	r2, [pc, #100]	; (8020678 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020612:	460e      	mov	r6, r1
 8020614:	b21b      	sxth	r3, r3
 8020616:	88c1      	ldrh	r1, [r0, #6]
 8020618:	9200      	str	r2, [sp, #0]
 802061a:	2000      	movs	r0, #0
 802061c:	2b00      	cmp	r3, #0
 802061e:	8aa2      	ldrh	r2, [r4, #20]
 8020620:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8020624:	bfb8      	it	lt
 8020626:	425b      	neglt	r3, r3
 8020628:	f88d 0004 	strb.w	r0, [sp, #4]
 802062c:	f8ad 1008 	strh.w	r1, [sp, #8]
 8020630:	b21b      	sxth	r3, r3
 8020632:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020636:	f8ad 500c 	strh.w	r5, [sp, #12]
 802063a:	4293      	cmp	r3, r2
 802063c:	dc07      	bgt.n	802064e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 802063e:	1a69      	subs	r1, r5, r1
 8020640:	b209      	sxth	r1, r1
 8020642:	2900      	cmp	r1, #0
 8020644:	bfb8      	it	lt
 8020646:	4249      	neglt	r1, r1
 8020648:	b209      	sxth	r1, r1
 802064a:	428a      	cmp	r2, r1
 802064c:	da10      	bge.n	8020670 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 802064e:	6920      	ldr	r0, [r4, #16]
 8020650:	4669      	mov	r1, sp
 8020652:	eba8 0606 	sub.w	r6, r8, r6
 8020656:	1bef      	subs	r7, r5, r7
 8020658:	6803      	ldr	r3, [r0, #0]
 802065a:	685b      	ldr	r3, [r3, #4]
 802065c:	4798      	blx	r3
 802065e:	2300      	movs	r3, #0
 8020660:	2001      	movs	r0, #1
 8020662:	8166      	strh	r6, [r4, #10]
 8020664:	8123      	strh	r3, [r4, #8]
 8020666:	81a7      	strh	r7, [r4, #12]
 8020668:	f8a4 8004 	strh.w	r8, [r4, #4]
 802066c:	80e5      	strh	r5, [r4, #6]
 802066e:	73a0      	strb	r0, [r4, #14]
 8020670:	b004      	add	sp, #16
 8020672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020676:	bf00      	nop
 8020678:	0802399c 	.word	0x0802399c

0802067c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802067c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802067e:	461e      	mov	r6, r3
 8020680:	1e4b      	subs	r3, r1, #1
 8020682:	b085      	sub	sp, #20
 8020684:	4604      	mov	r4, r0
 8020686:	2b01      	cmp	r3, #1
 8020688:	460d      	mov	r5, r1
 802068a:	4617      	mov	r7, r2
 802068c:	d84b      	bhi.n	8020726 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802068e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020692:	1cd3      	adds	r3, r2, #3
 8020694:	b29b      	uxth	r3, r3
 8020696:	2b06      	cmp	r3, #6
 8020698:	d916      	bls.n	80206c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802069a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 802073c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802069e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80206a2:	f8cd c004 	str.w	ip, [sp, #4]
 80206a6:	f04f 0c00 	mov.w	ip, #0
 80206aa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80206ae:	6900      	ldr	r0, [r0, #16]
 80206b0:	f8ad 100c 	strh.w	r1, [sp, #12]
 80206b4:	a901      	add	r1, sp, #4
 80206b6:	f88d c008 	strb.w	ip, [sp, #8]
 80206ba:	f8ad 200a 	strh.w	r2, [sp, #10]
 80206be:	f8ad 300e 	strh.w	r3, [sp, #14]
 80206c2:	6803      	ldr	r3, [r0, #0]
 80206c4:	689b      	ldr	r3, [r3, #8]
 80206c6:	4798      	blx	r3
 80206c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80206cc:	1cd3      	adds	r3, r2, #3
 80206ce:	b29b      	uxth	r3, r3
 80206d0:	2b06      	cmp	r3, #6
 80206d2:	d916      	bls.n	8020702 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80206d4:	f8df c064 	ldr.w	ip, [pc, #100]	; 802073c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80206d8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80206dc:	f8cd c004 	str.w	ip, [sp, #4]
 80206e0:	f04f 0c01 	mov.w	ip, #1
 80206e4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80206e8:	6920      	ldr	r0, [r4, #16]
 80206ea:	f8ad 100c 	strh.w	r1, [sp, #12]
 80206ee:	a901      	add	r1, sp, #4
 80206f0:	f88d c008 	strb.w	ip, [sp, #8]
 80206f4:	f8ad 200a 	strh.w	r2, [sp, #10]
 80206f8:	f8ad 300e 	strh.w	r3, [sp, #14]
 80206fc:	6803      	ldr	r3, [r0, #0]
 80206fe:	689b      	ldr	r3, [r3, #8]
 8020700:	4798      	blx	r3
 8020702:	4b0d      	ldr	r3, [pc, #52]	; (8020738 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020704:	a901      	add	r1, sp, #4
 8020706:	6920      	ldr	r0, [r4, #16]
 8020708:	9301      	str	r3, [sp, #4]
 802070a:	2300      	movs	r3, #0
 802070c:	f88d 5008 	strb.w	r5, [sp, #8]
 8020710:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020714:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020718:	f8ad 300e 	strh.w	r3, [sp, #14]
 802071c:	6803      	ldr	r3, [r0, #0]
 802071e:	681b      	ldr	r3, [r3, #0]
 8020720:	4798      	blx	r3
 8020722:	b005      	add	sp, #20
 8020724:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020726:	2900      	cmp	r1, #0
 8020728:	d1eb      	bne.n	8020702 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802072a:	80a2      	strh	r2, [r4, #4]
 802072c:	80c6      	strh	r6, [r0, #6]
 802072e:	60a1      	str	r1, [r4, #8]
 8020730:	81a1      	strh	r1, [r4, #12]
 8020732:	73a1      	strb	r1, [r4, #14]
 8020734:	e7e5      	b.n	8020702 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020736:	bf00      	nop
 8020738:	08023988 	.word	0x08023988
 802073c:	080239b0 	.word	0x080239b0

08020740 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8020740:	10c9      	asrs	r1, r1, #3
 8020742:	2900      	cmp	r1, #0
 8020744:	bfb8      	it	lt
 8020746:	4249      	neglt	r1, r1
 8020748:	2801      	cmp	r0, #1
 802074a:	d108      	bne.n	802075e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802074c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020750:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8020754:	4601      	mov	r1, r0
 8020756:	dd02      	ble.n	802075e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020758:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 802075c:	4770      	bx	lr
 802075e:	29ff      	cmp	r1, #255	; 0xff
 8020760:	bfa8      	it	ge
 8020762:	21ff      	movge	r1, #255	; 0xff
 8020764:	4608      	mov	r0, r1
 8020766:	4770      	bx	lr

08020768 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8020768:	b410      	push	{r4}
 802076a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802076e:	429c      	cmp	r4, r3
 8020770:	d803      	bhi.n	802077a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8020772:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020776:	f7ed bf1b 	b.w	800e5b0 <_ZN8touchgfx7Outline6lineToEii>
 802077a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802077e:	4770      	bx	lr

08020780 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8020780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020784:	b08b      	sub	sp, #44	; 0x2c
 8020786:	4606      	mov	r6, r0
 8020788:	468a      	mov	sl, r1
 802078a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802078e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8020792:	9308      	str	r3, [sp, #32]
 8020794:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8020798:	9309      	str	r3, [sp, #36]	; 0x24
 802079a:	f7ee f874 	bl	800e886 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802079e:	68b5      	ldr	r5, [r6, #8]
 80207a0:	4604      	mov	r4, r0
 80207a2:	2d00      	cmp	r5, #0
 80207a4:	d044      	beq.n	8020830 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80207a6:	6873      	ldr	r3, [r6, #4]
 80207a8:	42ab      	cmp	r3, r5
 80207aa:	d33d      	bcc.n	8020828 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80207ac:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80207b0:	f04f 0800 	mov.w	r8, #0
 80207b4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80207b8:	eb02 0b03 	add.w	fp, r2, r3
 80207bc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80207c0:	fb02 1203 	mla	r2, r2, r3, r1
 80207c4:	9205      	str	r2, [sp, #20]
 80207c6:	1e6a      	subs	r2, r5, #1
 80207c8:	9204      	str	r2, [sp, #16]
 80207ca:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80207ce:	f9b4 7000 	ldrsh.w	r7, [r4]
 80207d2:	454b      	cmp	r3, r9
 80207d4:	463a      	mov	r2, r7
 80207d6:	d008      	beq.n	80207ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80207d8:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80207dc:	eb03 0b09 	add.w	fp, r3, r9
 80207e0:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80207e4:	fb03 1309 	mla	r3, r3, r9, r1
 80207e8:	9305      	str	r3, [sp, #20]
 80207ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80207ee:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80207f2:	4498      	add	r8, r3
 80207f4:	9b04      	ldr	r3, [sp, #16]
 80207f6:	3b01      	subs	r3, #1
 80207f8:	9304      	str	r3, [sp, #16]
 80207fa:	9b04      	ldr	r3, [sp, #16]
 80207fc:	3301      	adds	r3, #1
 80207fe:	d015      	beq.n	802082c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020800:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8020804:	42bb      	cmp	r3, r7
 8020806:	d117      	bne.n	8020838 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020808:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802080c:	9b04      	ldr	r3, [sp, #16]
 802080e:	4548      	cmp	r0, r9
 8020810:	f103 33ff 	add.w	r3, r3, #4294967295
 8020814:	d17d      	bne.n	8020912 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 8020816:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802081a:	4401      	add	r1, r0
 802081c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020820:	4480      	add	r8, r0
 8020822:	e7e9      	b.n	80207f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8020824:	461f      	mov	r7, r3
 8020826:	e042      	b.n	80208ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 8020828:	2000      	movs	r0, #0
 802082a:	e002      	b.n	8020832 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802082c:	2900      	cmp	r1, #0
 802082e:	d16d      	bne.n	802090c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020830:	2001      	movs	r0, #1
 8020832:	b00b      	add	sp, #44	; 0x2c
 8020834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020838:	b379      	cbz	r1, 802089a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 802083a:	2f00      	cmp	r7, #0
 802083c:	db29      	blt.n	8020892 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 802083e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8020842:	42bb      	cmp	r3, r7
 8020844:	dd25      	ble.n	8020892 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 8020846:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802084a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802084e:	f7ff ff77 	bl	8020740 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020852:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020854:	fb10 f003 	smulbb	r0, r0, r3
 8020858:	b280      	uxth	r0, r0
 802085a:	1c41      	adds	r1, r0, #1
 802085c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020860:	1209      	asrs	r1, r1, #8
 8020862:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020866:	d014      	beq.n	8020892 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 8020868:	b2c9      	uxtb	r1, r1
 802086a:	9808      	ldr	r0, [sp, #32]
 802086c:	b2ba      	uxth	r2, r7
 802086e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020870:	9102      	str	r1, [sp, #8]
 8020872:	2101      	movs	r1, #1
 8020874:	4413      	add	r3, r2
 8020876:	4402      	add	r2, r0
 8020878:	9101      	str	r1, [sp, #4]
 802087a:	fa0f f18b 	sxth.w	r1, fp
 802087e:	f8da 0000 	ldr.w	r0, [sl]
 8020882:	b21b      	sxth	r3, r3
 8020884:	9100      	str	r1, [sp, #0]
 8020886:	b212      	sxth	r2, r2
 8020888:	6941      	ldr	r1, [r0, #20]
 802088a:	4650      	mov	r0, sl
 802088c:	460d      	mov	r5, r1
 802088e:	9905      	ldr	r1, [sp, #20]
 8020890:	47a8      	blx	r5
 8020892:	9b04      	ldr	r3, [sp, #16]
 8020894:	1c7a      	adds	r2, r7, #1
 8020896:	3301      	adds	r3, #1
 8020898:	d0ca      	beq.n	8020830 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802089a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802089e:	1abb      	subs	r3, r7, r2
 80208a0:	2b00      	cmp	r3, #0
 80208a2:	dd31      	ble.n	8020908 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80208a4:	2a00      	cmp	r2, #0
 80208a6:	dabd      	bge.n	8020824 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80208a8:	2f00      	cmp	r7, #0
 80208aa:	dd2d      	ble.n	8020908 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80208ac:	2200      	movs	r2, #0
 80208ae:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80208b2:	19d1      	adds	r1, r2, r7
 80208b4:	4299      	cmp	r1, r3
 80208b6:	db02      	blt.n	80208be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 80208b8:	1a9f      	subs	r7, r3, r2
 80208ba:	2f00      	cmp	r7, #0
 80208bc:	dd24      	ble.n	8020908 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80208be:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80208c2:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80208c6:	f7ff ff3b 	bl	8020740 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80208ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208cc:	fb10 f003 	smulbb	r0, r0, r3
 80208d0:	b280      	uxth	r0, r0
 80208d2:	1c41      	adds	r1, r0, #1
 80208d4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80208d8:	1209      	asrs	r1, r1, #8
 80208da:	f011 0fff 	tst.w	r1, #255	; 0xff
 80208de:	d013      	beq.n	8020908 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80208e0:	b292      	uxth	r2, r2
 80208e2:	9808      	ldr	r0, [sp, #32]
 80208e4:	b2c9      	uxtb	r1, r1
 80208e6:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80208e8:	b23f      	sxth	r7, r7
 80208ea:	4413      	add	r3, r2
 80208ec:	9102      	str	r1, [sp, #8]
 80208ee:	4402      	add	r2, r0
 80208f0:	fa0f f18b 	sxth.w	r1, fp
 80208f4:	f8da 0000 	ldr.w	r0, [sl]
 80208f8:	b21b      	sxth	r3, r3
 80208fa:	9100      	str	r1, [sp, #0]
 80208fc:	b212      	sxth	r2, r2
 80208fe:	9701      	str	r7, [sp, #4]
 8020900:	9905      	ldr	r1, [sp, #20]
 8020902:	6947      	ldr	r7, [r0, #20]
 8020904:	4650      	mov	r0, sl
 8020906:	47b8      	blx	r7
 8020908:	464b      	mov	r3, r9
 802090a:	e75e      	b.n	80207ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802090c:	2f00      	cmp	r7, #0
 802090e:	da96      	bge.n	802083e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 8020910:	e78e      	b.n	8020830 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020912:	2900      	cmp	r1, #0
 8020914:	d0f8      	beq.n	8020908 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020916:	e790      	b.n	802083a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

08020918 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020918:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802091c:	4b4a      	ldr	r3, [pc, #296]	; (8020a48 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802091e:	2500      	movs	r5, #0
 8020920:	f100 0620 	add.w	r6, r0, #32
 8020924:	4604      	mov	r4, r0
 8020926:	4690      	mov	r8, r2
 8020928:	f100 0718 	add.w	r7, r0, #24
 802092c:	e9c0 3100 	strd	r3, r1, [r0]
 8020930:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8020934:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8020938:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802093c:	4630      	mov	r0, r6
 802093e:	f7ed f97d 	bl	800dc3c <_ZN8touchgfx7OutlineC1Ev>
 8020942:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8020946:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802094a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802094e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8020952:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8020956:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802095a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802095e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8020962:	9500      	str	r5, [sp, #0]
 8020964:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8020968:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802096c:	f9b8 2000 	ldrsh.w	r2, [r8]
 8020970:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8020974:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8020978:	4410      	add	r0, r2
 802097a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802097e:	b280      	uxth	r0, r0
 8020980:	fa0f fa80 	sxth.w	sl, r0
 8020984:	45aa      	cmp	sl, r5
 8020986:	dd5c      	ble.n	8020a42 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020988:	4591      	cmp	r9, r2
 802098a:	dd5a      	ble.n	8020a42 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802098c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8020990:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8020994:	440b      	add	r3, r1
 8020996:	b29b      	uxth	r3, r3
 8020998:	b21d      	sxth	r5, r3
 802099a:	2d00      	cmp	r5, #0
 802099c:	dd51      	ble.n	8020a42 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802099e:	458e      	cmp	lr, r1
 80209a0:	dd4f      	ble.n	8020a42 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80209a2:	45d1      	cmp	r9, sl
 80209a4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80209a8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80209ac:	bfb8      	it	lt
 80209ae:	fa1f f089 	uxthlt.w	r0, r9
 80209b2:	45ae      	cmp	lr, r5
 80209b4:	f8ad 2000 	strh.w	r2, [sp]
 80209b8:	bfb8      	it	lt
 80209ba:	fa1f f38e 	uxthlt.w	r3, lr
 80209be:	1a80      	subs	r0, r0, r2
 80209c0:	f8ad 1002 	strh.w	r1, [sp, #2]
 80209c4:	1a5b      	subs	r3, r3, r1
 80209c6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80209ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 80209ce:	466d      	mov	r5, sp
 80209d0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80209d4:	e887 0003 	stmia.w	r7, {r0, r1}
 80209d8:	f8dc 3000 	ldr.w	r3, [ip]
 80209dc:	4660      	mov	r0, ip
 80209de:	4639      	mov	r1, r7
 80209e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80209e2:	4798      	blx	r3
 80209e4:	6861      	ldr	r1, [r4, #4]
 80209e6:	4628      	mov	r0, r5
 80209e8:	3104      	adds	r1, #4
 80209ea:	f7ef fb1b 	bl	8010024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80209ee:	4638      	mov	r0, r7
 80209f0:	f7ef fad4 	bl	800ff9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80209f4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80209f8:	f8bd 2000 	ldrh.w	r2, [sp]
 80209fc:	4630      	mov	r0, r6
 80209fe:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020a02:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8020a06:	f7ed f8fd 	bl	800dc04 <_ZN8touchgfx7Outline5resetEv>
 8020a0a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020a0e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020a12:	4620      	mov	r0, r4
 8020a14:	015b      	lsls	r3, r3, #5
 8020a16:	60a3      	str	r3, [r4, #8]
 8020a18:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020a1c:	015b      	lsls	r3, r3, #5
 8020a1e:	60e3      	str	r3, [r4, #12]
 8020a20:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020a24:	015b      	lsls	r3, r3, #5
 8020a26:	6123      	str	r3, [r4, #16]
 8020a28:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020a2c:	015b      	lsls	r3, r3, #5
 8020a2e:	6163      	str	r3, [r4, #20]
 8020a30:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020a34:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020a38:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8020a3c:	b002      	add	sp, #8
 8020a3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a42:	2300      	movs	r3, #0
 8020a44:	9301      	str	r3, [sp, #4]
 8020a46:	e7c2      	b.n	80209ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8020a48:	08023cd4 	.word	0x08023cd4

08020a4c <_ZN8touchgfx6Canvas5closeEv>:
 8020a4c:	b538      	push	{r3, r4, r5, lr}
 8020a4e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020a52:	4604      	mov	r4, r0
 8020a54:	b193      	cbz	r3, 8020a7c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020a56:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020a5a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020a5e:	4213      	tst	r3, r2
 8020a60:	d10c      	bne.n	8020a7c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020a62:	f100 0520 	add.w	r5, r0, #32
 8020a66:	b123      	cbz	r3, 8020a72 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8020a68:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8020a6c:	4628      	mov	r0, r5
 8020a6e:	f7ff fe7b 	bl	8020768 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020a72:	4628      	mov	r0, r5
 8020a74:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8020a78:	f7ff fe76 	bl	8020768 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020a7c:	2300      	movs	r3, #0
 8020a7e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020a82:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8020a86:	4298      	cmp	r0, r3
 8020a88:	bf34      	ite	cc
 8020a8a:	2000      	movcc	r0, #0
 8020a8c:	2001      	movcs	r0, #1
 8020a8e:	bd38      	pop	{r3, r4, r5, pc}

08020a90 <_ZN8touchgfx6Canvas6renderEh>:
 8020a90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020a94:	4604      	mov	r4, r0
 8020a96:	6840      	ldr	r0, [r0, #4]
 8020a98:	460d      	mov	r5, r1
 8020a9a:	6803      	ldr	r3, [r0, #0]
 8020a9c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020a9e:	4798      	blx	r3
 8020aa0:	fb10 f105 	smulbb	r1, r0, r5
 8020aa4:	b289      	uxth	r1, r1
 8020aa6:	1c4d      	adds	r5, r1, #1
 8020aa8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020aac:	122d      	asrs	r5, r5, #8
 8020aae:	f000 809c 	beq.w	8020bea <_ZN8touchgfx6Canvas6renderEh+0x15a>
 8020ab2:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8020ab6:	2b00      	cmp	r3, #0
 8020ab8:	f000 8097 	beq.w	8020bea <_ZN8touchgfx6Canvas6renderEh+0x15a>
 8020abc:	4620      	mov	r0, r4
 8020abe:	f7ff ffc5 	bl	8020a4c <_ZN8touchgfx6Canvas5closeEv>
 8020ac2:	4607      	mov	r7, r0
 8020ac4:	2800      	cmp	r0, #0
 8020ac6:	d048      	beq.n	8020b5a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8020ac8:	6863      	ldr	r3, [r4, #4]
 8020aca:	4e49      	ldr	r6, [pc, #292]	; (8020bf0 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8020acc:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020ace:	6837      	ldr	r7, [r6, #0]
 8020ad0:	6803      	ldr	r3, [r0, #0]
 8020ad2:	689b      	ldr	r3, [r3, #8]
 8020ad4:	4798      	blx	r3
 8020ad6:	4601      	mov	r1, r0
 8020ad8:	4638      	mov	r0, r7
 8020ada:	f7ea fee5 	bl	800b8a8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020ade:	4607      	mov	r7, r0
 8020ae0:	f7e1 fc9e 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8020ae4:	6803      	ldr	r3, [r0, #0]
 8020ae6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020ae8:	4798      	blx	r3
 8020aea:	4680      	mov	r8, r0
 8020aec:	f7e1 fc98 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8020af0:	6803      	ldr	r3, [r0, #0]
 8020af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020af4:	4798      	blx	r3
 8020af6:	280b      	cmp	r0, #11
 8020af8:	d85c      	bhi.n	8020bb4 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8020afa:	e8df f000 	tbb	[pc, r0]
 8020afe:	5d52      	.short	0x5d52
 8020b00:	325b066d 	.word	0x325b066d
 8020b04:	66666642 	.word	0x66666642
 8020b08:	6666      	.short	0x6666
 8020b0a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020b0e:	2208      	movs	r2, #8
 8020b10:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020b14:	fb91 f2f2 	sdiv	r2, r1, r2
 8020b18:	fb08 2303 	mla	r3, r8, r3, r2
 8020b1c:	441f      	add	r7, r3
 8020b1e:	424b      	negs	r3, r1
 8020b20:	f001 0107 	and.w	r1, r1, #7
 8020b24:	f003 0307 	and.w	r3, r3, #7
 8020b28:	bf58      	it	pl
 8020b2a:	4259      	negpl	r1, r3
 8020b2c:	b2c9      	uxtb	r1, r1
 8020b2e:	6860      	ldr	r0, [r4, #4]
 8020b30:	b2ed      	uxtb	r5, r5
 8020b32:	463a      	mov	r2, r7
 8020b34:	fa0f f388 	sxth.w	r3, r8
 8020b38:	e9cd 1500 	strd	r1, r5, [sp]
 8020b3c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020b3e:	f104 0020 	add.w	r0, r4, #32
 8020b42:	f7ff fe1d 	bl	8020780 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8020b46:	6863      	ldr	r3, [r4, #4]
 8020b48:	4607      	mov	r7, r0
 8020b4a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020b4c:	6803      	ldr	r3, [r0, #0]
 8020b4e:	691b      	ldr	r3, [r3, #16]
 8020b50:	4798      	blx	r3
 8020b52:	6830      	ldr	r0, [r6, #0]
 8020b54:	6803      	ldr	r3, [r0, #0]
 8020b56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020b58:	4798      	blx	r3
 8020b5a:	4638      	mov	r0, r7
 8020b5c:	b002      	add	sp, #8
 8020b5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020b62:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020b66:	2204      	movs	r2, #4
 8020b68:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020b6c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020b70:	fb08 2303 	mla	r3, r8, r3, r2
 8020b74:	441f      	add	r7, r3
 8020b76:	424b      	negs	r3, r1
 8020b78:	f001 0103 	and.w	r1, r1, #3
 8020b7c:	f003 0303 	and.w	r3, r3, #3
 8020b80:	e7d2      	b.n	8020b28 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8020b82:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020b86:	2202      	movs	r2, #2
 8020b88:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020b8c:	2900      	cmp	r1, #0
 8020b8e:	fb91 f2f2 	sdiv	r2, r1, r2
 8020b92:	f001 0101 	and.w	r1, r1, #1
 8020b96:	fb08 2303 	mla	r3, r8, r3, r2
 8020b9a:	bfb8      	it	lt
 8020b9c:	4249      	neglt	r1, r1
 8020b9e:	441f      	add	r7, r3
 8020ba0:	e7c4      	b.n	8020b2c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8020ba2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020ba6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020baa:	fb08 f303 	mul.w	r3, r8, r3
 8020bae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020bb2:	441f      	add	r7, r3
 8020bb4:	2100      	movs	r1, #0
 8020bb6:	e7ba      	b.n	8020b2e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020bb8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020bbc:	2103      	movs	r1, #3
 8020bbe:	fb08 f203 	mul.w	r2, r8, r3
 8020bc2:	8b23      	ldrh	r3, [r4, #24]
 8020bc4:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020bc8:	e7f3      	b.n	8020bb2 <_ZN8touchgfx6Canvas6renderEh+0x122>
 8020bca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020bce:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020bd2:	fb08 2303 	mla	r3, r8, r3, r2
 8020bd6:	e7ec      	b.n	8020bb2 <_ZN8touchgfx6Canvas6renderEh+0x122>
 8020bd8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020bdc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020be0:	fb08 f303 	mul.w	r3, r8, r3
 8020be4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020be8:	e7e3      	b.n	8020bb2 <_ZN8touchgfx6Canvas6renderEh+0x122>
 8020bea:	2701      	movs	r7, #1
 8020bec:	e7b5      	b.n	8020b5a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8020bee:	bf00      	nop
 8020bf0:	2400e424 	.word	0x2400e424

08020bf4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8020bf4:	4b07      	ldr	r3, [pc, #28]	; (8020c14 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8020bf6:	b510      	push	{r4, lr}
 8020bf8:	781b      	ldrb	r3, [r3, #0]
 8020bfa:	2b01      	cmp	r3, #1
 8020bfc:	d108      	bne.n	8020c10 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020bfe:	6843      	ldr	r3, [r0, #4]
 8020c00:	6814      	ldr	r4, [r2, #0]
 8020c02:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8020c06:	680b      	ldr	r3, [r1, #0]
 8020c08:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020c0c:	6013      	str	r3, [r2, #0]
 8020c0e:	600c      	str	r4, [r1, #0]
 8020c10:	bd10      	pop	{r4, pc}
 8020c12:	bf00      	nop
 8020c14:	2400e41c 	.word	0x2400e41c

08020c18 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020c18:	b513      	push	{r0, r1, r4, lr}
 8020c1a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020c1e:	4604      	mov	r4, r0
 8020c20:	e9cd 2100 	strd	r2, r1, [sp]
 8020c24:	b9a3      	cbnz	r3, 8020c50 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020c26:	466a      	mov	r2, sp
 8020c28:	a901      	add	r1, sp, #4
 8020c2a:	4620      	mov	r0, r4
 8020c2c:	f7ff ffe2 	bl	8020bf4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020c30:	68a3      	ldr	r3, [r4, #8]
 8020c32:	9901      	ldr	r1, [sp, #4]
 8020c34:	9a00      	ldr	r2, [sp, #0]
 8020c36:	1ac9      	subs	r1, r1, r3
 8020c38:	68e3      	ldr	r3, [r4, #12]
 8020c3a:	1ad2      	subs	r2, r2, r3
 8020c3c:	9101      	str	r1, [sp, #4]
 8020c3e:	2a00      	cmp	r2, #0
 8020c40:	9200      	str	r2, [sp, #0]
 8020c42:	da0b      	bge.n	8020c5c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020c44:	2301      	movs	r3, #1
 8020c46:	2900      	cmp	r1, #0
 8020c48:	da0e      	bge.n	8020c68 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020c4a:	f043 0304 	orr.w	r3, r3, #4
 8020c4e:	e013      	b.n	8020c78 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020c50:	f7ff fefc 	bl	8020a4c <_ZN8touchgfx6Canvas5closeEv>
 8020c54:	2800      	cmp	r0, #0
 8020c56:	d1e6      	bne.n	8020c26 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020c58:	b002      	add	sp, #8
 8020c5a:	bd10      	pop	{r4, pc}
 8020c5c:	6963      	ldr	r3, [r4, #20]
 8020c5e:	429a      	cmp	r2, r3
 8020c60:	bfac      	ite	ge
 8020c62:	2302      	movge	r3, #2
 8020c64:	2300      	movlt	r3, #0
 8020c66:	e7ee      	b.n	8020c46 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020c68:	6920      	ldr	r0, [r4, #16]
 8020c6a:	4281      	cmp	r1, r0
 8020c6c:	bfac      	ite	ge
 8020c6e:	2008      	movge	r0, #8
 8020c70:	2000      	movlt	r0, #0
 8020c72:	4318      	orrs	r0, r3
 8020c74:	b2c3      	uxtb	r3, r0
 8020c76:	b158      	cbz	r0, 8020c90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020c78:	2200      	movs	r2, #0
 8020c7a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8020c7e:	9901      	ldr	r1, [sp, #4]
 8020c80:	9a00      	ldr	r2, [sp, #0]
 8020c82:	66a1      	str	r1, [r4, #104]	; 0x68
 8020c84:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020c86:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8020c8a:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020c8e:	e7e3      	b.n	8020c58 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020c90:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020c94:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020c98:	4298      	cmp	r0, r3
 8020c9a:	d803      	bhi.n	8020ca4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020c9c:	f104 0020 	add.w	r0, r4, #32
 8020ca0:	f7ed fca0 	bl	800e5e4 <_ZN8touchgfx7Outline6moveToEii>
 8020ca4:	2301      	movs	r3, #1
 8020ca6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020caa:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8020cae:	2300      	movs	r3, #0
 8020cb0:	e7e5      	b.n	8020c7e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08020cb2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8020cb2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020cb4:	ab02      	add	r3, sp, #8
 8020cb6:	4604      	mov	r4, r0
 8020cb8:	9101      	str	r1, [sp, #4]
 8020cba:	a901      	add	r1, sp, #4
 8020cbc:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020cc0:	461a      	mov	r2, r3
 8020cc2:	f7ff ff97 	bl	8020bf4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020cc6:	68a3      	ldr	r3, [r4, #8]
 8020cc8:	9901      	ldr	r1, [sp, #4]
 8020cca:	9a00      	ldr	r2, [sp, #0]
 8020ccc:	1ac9      	subs	r1, r1, r3
 8020cce:	68e3      	ldr	r3, [r4, #12]
 8020cd0:	1ad2      	subs	r2, r2, r3
 8020cd2:	9101      	str	r1, [sp, #4]
 8020cd4:	2a00      	cmp	r2, #0
 8020cd6:	9200      	str	r2, [sp, #0]
 8020cd8:	db1c      	blt.n	8020d14 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020cda:	6963      	ldr	r3, [r4, #20]
 8020cdc:	429a      	cmp	r2, r3
 8020cde:	bfac      	ite	ge
 8020ce0:	2002      	movge	r0, #2
 8020ce2:	2000      	movlt	r0, #0
 8020ce4:	2900      	cmp	r1, #0
 8020ce6:	db17      	blt.n	8020d18 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020ce8:	6923      	ldr	r3, [r4, #16]
 8020cea:	4299      	cmp	r1, r3
 8020cec:	bfac      	ite	ge
 8020cee:	2308      	movge	r3, #8
 8020cf0:	2300      	movlt	r3, #0
 8020cf2:	4303      	orrs	r3, r0
 8020cf4:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8020cf8:	b2dd      	uxtb	r5, r3
 8020cfa:	b978      	cbnz	r0, 8020d1c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8020cfc:	f104 0020 	add.w	r0, r4, #32
 8020d00:	f7ff fd32 	bl	8020768 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020d04:	9b01      	ldr	r3, [sp, #4]
 8020d06:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8020d0a:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020d0c:	9b00      	ldr	r3, [sp, #0]
 8020d0e:	6623      	str	r3, [r4, #96]	; 0x60
 8020d10:	b002      	add	sp, #8
 8020d12:	bd70      	pop	{r4, r5, r6, pc}
 8020d14:	2001      	movs	r0, #1
 8020d16:	e7e5      	b.n	8020ce4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020d18:	2304      	movs	r3, #4
 8020d1a:	e7ea      	b.n	8020cf2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8020d1c:	b113      	cbz	r3, 8020d24 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8020d1e:	ea10 0305 	ands.w	r3, r0, r5
 8020d22:	d11c      	bne.n	8020d5e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8020d24:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020d28:	f104 0620 	add.w	r6, r4, #32
 8020d2c:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8020d30:	b98b      	cbnz	r3, 8020d56 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8020d32:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020d36:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020d3a:	4298      	cmp	r0, r3
 8020d3c:	d802      	bhi.n	8020d44 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8020d3e:	4630      	mov	r0, r6
 8020d40:	f7ed fc50 	bl	800e5e4 <_ZN8touchgfx7Outline6moveToEii>
 8020d44:	2301      	movs	r3, #1
 8020d46:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020d4a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8020d4e:	4630      	mov	r0, r6
 8020d50:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020d54:	e7d4      	b.n	8020d00 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020d56:	4630      	mov	r0, r6
 8020d58:	f7ff fd06 	bl	8020768 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020d5c:	e7f7      	b.n	8020d4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8020d5e:	461d      	mov	r5, r3
 8020d60:	e7d0      	b.n	8020d04 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08020d64 <_ZN8touchgfx6CanvasD1Ev>:
 8020d64:	4b04      	ldr	r3, [pc, #16]	; (8020d78 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8020d66:	b510      	push	{r4, lr}
 8020d68:	4604      	mov	r4, r0
 8020d6a:	f840 3b20 	str.w	r3, [r0], #32
 8020d6e:	f7ec ff41 	bl	800dbf4 <_ZN8touchgfx7OutlineD1Ev>
 8020d72:	4620      	mov	r0, r4
 8020d74:	bd10      	pop	{r4, pc}
 8020d76:	bf00      	nop
 8020d78:	08023cd4 	.word	0x08023cd4

08020d7c <_ZN8touchgfx6CanvasD0Ev>:
 8020d7c:	b510      	push	{r4, lr}
 8020d7e:	4604      	mov	r4, r0
 8020d80:	f7ff fff0 	bl	8020d64 <_ZN8touchgfx6CanvasD1Ev>
 8020d84:	2170      	movs	r1, #112	; 0x70
 8020d86:	4620      	mov	r0, r4
 8020d88:	f000 f807 	bl	8020d9a <_ZdlPvj>
 8020d8c:	4620      	mov	r0, r4
 8020d8e:	bd10      	pop	{r4, pc}

08020d90 <__aeabi_atexit>:
 8020d90:	460b      	mov	r3, r1
 8020d92:	4601      	mov	r1, r0
 8020d94:	4618      	mov	r0, r3
 8020d96:	f000 b90f 	b.w	8020fb8 <__cxa_atexit>

08020d9a <_ZdlPvj>:
 8020d9a:	f000 b812 	b.w	8020dc2 <_ZdlPv>

08020d9e <__cxa_guard_acquire>:
 8020d9e:	6803      	ldr	r3, [r0, #0]
 8020da0:	07db      	lsls	r3, r3, #31
 8020da2:	d406      	bmi.n	8020db2 <__cxa_guard_acquire+0x14>
 8020da4:	7843      	ldrb	r3, [r0, #1]
 8020da6:	b103      	cbz	r3, 8020daa <__cxa_guard_acquire+0xc>
 8020da8:	deff      	udf	#255	; 0xff
 8020daa:	2301      	movs	r3, #1
 8020dac:	7043      	strb	r3, [r0, #1]
 8020dae:	4618      	mov	r0, r3
 8020db0:	4770      	bx	lr
 8020db2:	2000      	movs	r0, #0
 8020db4:	4770      	bx	lr

08020db6 <__cxa_guard_release>:
 8020db6:	2301      	movs	r3, #1
 8020db8:	6003      	str	r3, [r0, #0]
 8020dba:	4770      	bx	lr

08020dbc <__cxa_pure_virtual>:
 8020dbc:	b508      	push	{r3, lr}
 8020dbe:	f000 f80f 	bl	8020de0 <_ZSt9terminatev>

08020dc2 <_ZdlPv>:
 8020dc2:	f000 b845 	b.w	8020e50 <free>

08020dc6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020dc6:	b508      	push	{r3, lr}
 8020dc8:	4780      	blx	r0
 8020dca:	f000 f80e 	bl	8020dea <abort>
	...

08020dd0 <_ZSt13get_terminatev>:
 8020dd0:	4b02      	ldr	r3, [pc, #8]	; (8020ddc <_ZSt13get_terminatev+0xc>)
 8020dd2:	6818      	ldr	r0, [r3, #0]
 8020dd4:	f3bf 8f5b 	dmb	ish
 8020dd8:	4770      	bx	lr
 8020dda:	bf00      	nop
 8020ddc:	240000fc 	.word	0x240000fc

08020de0 <_ZSt9terminatev>:
 8020de0:	b508      	push	{r3, lr}
 8020de2:	f7ff fff5 	bl	8020dd0 <_ZSt13get_terminatev>
 8020de6:	f7ff ffee 	bl	8020dc6 <_ZN10__cxxabiv111__terminateEPFvvE>

08020dea <abort>:
 8020dea:	b508      	push	{r3, lr}
 8020dec:	2006      	movs	r0, #6
 8020dee:	f000 fa39 	bl	8021264 <raise>
 8020df2:	2001      	movs	r0, #1
 8020df4:	f7e1 f83e 	bl	8001e74 <_exit>

08020df8 <__assert_func>:
 8020df8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020dfa:	4614      	mov	r4, r2
 8020dfc:	461a      	mov	r2, r3
 8020dfe:	4b09      	ldr	r3, [pc, #36]	; (8020e24 <__assert_func+0x2c>)
 8020e00:	681b      	ldr	r3, [r3, #0]
 8020e02:	4605      	mov	r5, r0
 8020e04:	68d8      	ldr	r0, [r3, #12]
 8020e06:	b14c      	cbz	r4, 8020e1c <__assert_func+0x24>
 8020e08:	4b07      	ldr	r3, [pc, #28]	; (8020e28 <__assert_func+0x30>)
 8020e0a:	9100      	str	r1, [sp, #0]
 8020e0c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020e10:	4906      	ldr	r1, [pc, #24]	; (8020e2c <__assert_func+0x34>)
 8020e12:	462b      	mov	r3, r5
 8020e14:	f000 f982 	bl	802111c <fiprintf>
 8020e18:	f7ff ffe7 	bl	8020dea <abort>
 8020e1c:	4b04      	ldr	r3, [pc, #16]	; (8020e30 <__assert_func+0x38>)
 8020e1e:	461c      	mov	r4, r3
 8020e20:	e7f3      	b.n	8020e0a <__assert_func+0x12>
 8020e22:	bf00      	nop
 8020e24:	24000158 	.word	0x24000158
 8020e28:	08023ce0 	.word	0x08023ce0
 8020e2c:	08023ced 	.word	0x08023ced
 8020e30:	08023d1b 	.word	0x08023d1b

08020e34 <atexit>:
 8020e34:	2300      	movs	r3, #0
 8020e36:	4601      	mov	r1, r0
 8020e38:	461a      	mov	r2, r3
 8020e3a:	4618      	mov	r0, r3
 8020e3c:	f000 bac0 	b.w	80213c0 <__register_exitproc>

08020e40 <malloc>:
 8020e40:	4b02      	ldr	r3, [pc, #8]	; (8020e4c <malloc+0xc>)
 8020e42:	4601      	mov	r1, r0
 8020e44:	6818      	ldr	r0, [r3, #0]
 8020e46:	f000 b82b 	b.w	8020ea0 <_malloc_r>
 8020e4a:	bf00      	nop
 8020e4c:	24000158 	.word	0x24000158

08020e50 <free>:
 8020e50:	4b02      	ldr	r3, [pc, #8]	; (8020e5c <free+0xc>)
 8020e52:	4601      	mov	r1, r0
 8020e54:	6818      	ldr	r0, [r3, #0]
 8020e56:	f000 bb11 	b.w	802147c <_free_r>
 8020e5a:	bf00      	nop
 8020e5c:	24000158 	.word	0x24000158

08020e60 <sbrk_aligned>:
 8020e60:	b570      	push	{r4, r5, r6, lr}
 8020e62:	4e0e      	ldr	r6, [pc, #56]	; (8020e9c <sbrk_aligned+0x3c>)
 8020e64:	460c      	mov	r4, r1
 8020e66:	6831      	ldr	r1, [r6, #0]
 8020e68:	4605      	mov	r5, r0
 8020e6a:	b911      	cbnz	r1, 8020e72 <sbrk_aligned+0x12>
 8020e6c:	f000 fa4a 	bl	8021304 <_sbrk_r>
 8020e70:	6030      	str	r0, [r6, #0]
 8020e72:	4621      	mov	r1, r4
 8020e74:	4628      	mov	r0, r5
 8020e76:	f000 fa45 	bl	8021304 <_sbrk_r>
 8020e7a:	1c43      	adds	r3, r0, #1
 8020e7c:	d00a      	beq.n	8020e94 <sbrk_aligned+0x34>
 8020e7e:	1cc4      	adds	r4, r0, #3
 8020e80:	f024 0403 	bic.w	r4, r4, #3
 8020e84:	42a0      	cmp	r0, r4
 8020e86:	d007      	beq.n	8020e98 <sbrk_aligned+0x38>
 8020e88:	1a21      	subs	r1, r4, r0
 8020e8a:	4628      	mov	r0, r5
 8020e8c:	f000 fa3a 	bl	8021304 <_sbrk_r>
 8020e90:	3001      	adds	r0, #1
 8020e92:	d101      	bne.n	8020e98 <sbrk_aligned+0x38>
 8020e94:	f04f 34ff 	mov.w	r4, #4294967295
 8020e98:	4620      	mov	r0, r4
 8020e9a:	bd70      	pop	{r4, r5, r6, pc}
 8020e9c:	2400ed7c 	.word	0x2400ed7c

08020ea0 <_malloc_r>:
 8020ea0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020ea4:	1ccd      	adds	r5, r1, #3
 8020ea6:	f025 0503 	bic.w	r5, r5, #3
 8020eaa:	3508      	adds	r5, #8
 8020eac:	2d0c      	cmp	r5, #12
 8020eae:	bf38      	it	cc
 8020eb0:	250c      	movcc	r5, #12
 8020eb2:	2d00      	cmp	r5, #0
 8020eb4:	4607      	mov	r7, r0
 8020eb6:	db01      	blt.n	8020ebc <_malloc_r+0x1c>
 8020eb8:	42a9      	cmp	r1, r5
 8020eba:	d905      	bls.n	8020ec8 <_malloc_r+0x28>
 8020ebc:	230c      	movs	r3, #12
 8020ebe:	603b      	str	r3, [r7, #0]
 8020ec0:	2600      	movs	r6, #0
 8020ec2:	4630      	mov	r0, r6
 8020ec4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020ec8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8020f9c <_malloc_r+0xfc>
 8020ecc:	f000 f868 	bl	8020fa0 <__malloc_lock>
 8020ed0:	f8d8 3000 	ldr.w	r3, [r8]
 8020ed4:	461c      	mov	r4, r3
 8020ed6:	bb5c      	cbnz	r4, 8020f30 <_malloc_r+0x90>
 8020ed8:	4629      	mov	r1, r5
 8020eda:	4638      	mov	r0, r7
 8020edc:	f7ff ffc0 	bl	8020e60 <sbrk_aligned>
 8020ee0:	1c43      	adds	r3, r0, #1
 8020ee2:	4604      	mov	r4, r0
 8020ee4:	d155      	bne.n	8020f92 <_malloc_r+0xf2>
 8020ee6:	f8d8 4000 	ldr.w	r4, [r8]
 8020eea:	4626      	mov	r6, r4
 8020eec:	2e00      	cmp	r6, #0
 8020eee:	d145      	bne.n	8020f7c <_malloc_r+0xdc>
 8020ef0:	2c00      	cmp	r4, #0
 8020ef2:	d048      	beq.n	8020f86 <_malloc_r+0xe6>
 8020ef4:	6823      	ldr	r3, [r4, #0]
 8020ef6:	4631      	mov	r1, r6
 8020ef8:	4638      	mov	r0, r7
 8020efa:	eb04 0903 	add.w	r9, r4, r3
 8020efe:	f000 fa01 	bl	8021304 <_sbrk_r>
 8020f02:	4581      	cmp	r9, r0
 8020f04:	d13f      	bne.n	8020f86 <_malloc_r+0xe6>
 8020f06:	6821      	ldr	r1, [r4, #0]
 8020f08:	1a6d      	subs	r5, r5, r1
 8020f0a:	4629      	mov	r1, r5
 8020f0c:	4638      	mov	r0, r7
 8020f0e:	f7ff ffa7 	bl	8020e60 <sbrk_aligned>
 8020f12:	3001      	adds	r0, #1
 8020f14:	d037      	beq.n	8020f86 <_malloc_r+0xe6>
 8020f16:	6823      	ldr	r3, [r4, #0]
 8020f18:	442b      	add	r3, r5
 8020f1a:	6023      	str	r3, [r4, #0]
 8020f1c:	f8d8 3000 	ldr.w	r3, [r8]
 8020f20:	2b00      	cmp	r3, #0
 8020f22:	d038      	beq.n	8020f96 <_malloc_r+0xf6>
 8020f24:	685a      	ldr	r2, [r3, #4]
 8020f26:	42a2      	cmp	r2, r4
 8020f28:	d12b      	bne.n	8020f82 <_malloc_r+0xe2>
 8020f2a:	2200      	movs	r2, #0
 8020f2c:	605a      	str	r2, [r3, #4]
 8020f2e:	e00f      	b.n	8020f50 <_malloc_r+0xb0>
 8020f30:	6822      	ldr	r2, [r4, #0]
 8020f32:	1b52      	subs	r2, r2, r5
 8020f34:	d41f      	bmi.n	8020f76 <_malloc_r+0xd6>
 8020f36:	2a0b      	cmp	r2, #11
 8020f38:	d917      	bls.n	8020f6a <_malloc_r+0xca>
 8020f3a:	1961      	adds	r1, r4, r5
 8020f3c:	42a3      	cmp	r3, r4
 8020f3e:	6025      	str	r5, [r4, #0]
 8020f40:	bf18      	it	ne
 8020f42:	6059      	strne	r1, [r3, #4]
 8020f44:	6863      	ldr	r3, [r4, #4]
 8020f46:	bf08      	it	eq
 8020f48:	f8c8 1000 	streq.w	r1, [r8]
 8020f4c:	5162      	str	r2, [r4, r5]
 8020f4e:	604b      	str	r3, [r1, #4]
 8020f50:	4638      	mov	r0, r7
 8020f52:	f104 060b 	add.w	r6, r4, #11
 8020f56:	f000 f829 	bl	8020fac <__malloc_unlock>
 8020f5a:	f026 0607 	bic.w	r6, r6, #7
 8020f5e:	1d23      	adds	r3, r4, #4
 8020f60:	1af2      	subs	r2, r6, r3
 8020f62:	d0ae      	beq.n	8020ec2 <_malloc_r+0x22>
 8020f64:	1b9b      	subs	r3, r3, r6
 8020f66:	50a3      	str	r3, [r4, r2]
 8020f68:	e7ab      	b.n	8020ec2 <_malloc_r+0x22>
 8020f6a:	42a3      	cmp	r3, r4
 8020f6c:	6862      	ldr	r2, [r4, #4]
 8020f6e:	d1dd      	bne.n	8020f2c <_malloc_r+0x8c>
 8020f70:	f8c8 2000 	str.w	r2, [r8]
 8020f74:	e7ec      	b.n	8020f50 <_malloc_r+0xb0>
 8020f76:	4623      	mov	r3, r4
 8020f78:	6864      	ldr	r4, [r4, #4]
 8020f7a:	e7ac      	b.n	8020ed6 <_malloc_r+0x36>
 8020f7c:	4634      	mov	r4, r6
 8020f7e:	6876      	ldr	r6, [r6, #4]
 8020f80:	e7b4      	b.n	8020eec <_malloc_r+0x4c>
 8020f82:	4613      	mov	r3, r2
 8020f84:	e7cc      	b.n	8020f20 <_malloc_r+0x80>
 8020f86:	230c      	movs	r3, #12
 8020f88:	603b      	str	r3, [r7, #0]
 8020f8a:	4638      	mov	r0, r7
 8020f8c:	f000 f80e 	bl	8020fac <__malloc_unlock>
 8020f90:	e797      	b.n	8020ec2 <_malloc_r+0x22>
 8020f92:	6025      	str	r5, [r4, #0]
 8020f94:	e7dc      	b.n	8020f50 <_malloc_r+0xb0>
 8020f96:	605b      	str	r3, [r3, #4]
 8020f98:	deff      	udf	#255	; 0xff
 8020f9a:	bf00      	nop
 8020f9c:	2400ed78 	.word	0x2400ed78

08020fa0 <__malloc_lock>:
 8020fa0:	4801      	ldr	r0, [pc, #4]	; (8020fa8 <__malloc_lock+0x8>)
 8020fa2:	f000 b9fc 	b.w	802139e <__retarget_lock_acquire_recursive>
 8020fa6:	bf00      	nop
 8020fa8:	2400eec1 	.word	0x2400eec1

08020fac <__malloc_unlock>:
 8020fac:	4801      	ldr	r0, [pc, #4]	; (8020fb4 <__malloc_unlock+0x8>)
 8020fae:	f000 b9f7 	b.w	80213a0 <__retarget_lock_release_recursive>
 8020fb2:	bf00      	nop
 8020fb4:	2400eec1 	.word	0x2400eec1

08020fb8 <__cxa_atexit>:
 8020fb8:	b510      	push	{r4, lr}
 8020fba:	4c05      	ldr	r4, [pc, #20]	; (8020fd0 <__cxa_atexit+0x18>)
 8020fbc:	4613      	mov	r3, r2
 8020fbe:	b12c      	cbz	r4, 8020fcc <__cxa_atexit+0x14>
 8020fc0:	460a      	mov	r2, r1
 8020fc2:	4601      	mov	r1, r0
 8020fc4:	2002      	movs	r0, #2
 8020fc6:	f000 f9fb 	bl	80213c0 <__register_exitproc>
 8020fca:	bd10      	pop	{r4, pc}
 8020fcc:	4620      	mov	r0, r4
 8020fce:	e7fc      	b.n	8020fca <__cxa_atexit+0x12>
 8020fd0:	080213c1 	.word	0x080213c1

08020fd4 <std>:
 8020fd4:	2300      	movs	r3, #0
 8020fd6:	b510      	push	{r4, lr}
 8020fd8:	4604      	mov	r4, r0
 8020fda:	e9c0 3300 	strd	r3, r3, [r0]
 8020fde:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020fe2:	6083      	str	r3, [r0, #8]
 8020fe4:	8181      	strh	r1, [r0, #12]
 8020fe6:	6643      	str	r3, [r0, #100]	; 0x64
 8020fe8:	81c2      	strh	r2, [r0, #14]
 8020fea:	6183      	str	r3, [r0, #24]
 8020fec:	4619      	mov	r1, r3
 8020fee:	2208      	movs	r2, #8
 8020ff0:	305c      	adds	r0, #92	; 0x5c
 8020ff2:	f000 f906 	bl	8021202 <memset>
 8020ff6:	4b0d      	ldr	r3, [pc, #52]	; (802102c <std+0x58>)
 8020ff8:	6263      	str	r3, [r4, #36]	; 0x24
 8020ffa:	4b0d      	ldr	r3, [pc, #52]	; (8021030 <std+0x5c>)
 8020ffc:	62a3      	str	r3, [r4, #40]	; 0x28
 8020ffe:	4b0d      	ldr	r3, [pc, #52]	; (8021034 <std+0x60>)
 8021000:	62e3      	str	r3, [r4, #44]	; 0x2c
 8021002:	4b0d      	ldr	r3, [pc, #52]	; (8021038 <std+0x64>)
 8021004:	6323      	str	r3, [r4, #48]	; 0x30
 8021006:	4b0d      	ldr	r3, [pc, #52]	; (802103c <std+0x68>)
 8021008:	6224      	str	r4, [r4, #32]
 802100a:	429c      	cmp	r4, r3
 802100c:	d006      	beq.n	802101c <std+0x48>
 802100e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8021012:	4294      	cmp	r4, r2
 8021014:	d002      	beq.n	802101c <std+0x48>
 8021016:	33d0      	adds	r3, #208	; 0xd0
 8021018:	429c      	cmp	r4, r3
 802101a:	d105      	bne.n	8021028 <std+0x54>
 802101c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8021020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021024:	f000 b9ba 	b.w	802139c <__retarget_lock_init_recursive>
 8021028:	bd10      	pop	{r4, pc}
 802102a:	bf00      	nop
 802102c:	0802117d 	.word	0x0802117d
 8021030:	0802119f 	.word	0x0802119f
 8021034:	080211d7 	.word	0x080211d7
 8021038:	080211fb 	.word	0x080211fb
 802103c:	2400ed80 	.word	0x2400ed80

08021040 <stdio_exit_handler>:
 8021040:	4a02      	ldr	r2, [pc, #8]	; (802104c <stdio_exit_handler+0xc>)
 8021042:	4903      	ldr	r1, [pc, #12]	; (8021050 <stdio_exit_handler+0x10>)
 8021044:	4803      	ldr	r0, [pc, #12]	; (8021054 <stdio_exit_handler+0x14>)
 8021046:	f000 b87b 	b.w	8021140 <_fwalk_sglue>
 802104a:	bf00      	nop
 802104c:	24000100 	.word	0x24000100
 8021050:	08021bc9 	.word	0x08021bc9
 8021054:	2400010c 	.word	0x2400010c

08021058 <cleanup_stdio>:
 8021058:	6841      	ldr	r1, [r0, #4]
 802105a:	4b0c      	ldr	r3, [pc, #48]	; (802108c <cleanup_stdio+0x34>)
 802105c:	4299      	cmp	r1, r3
 802105e:	b510      	push	{r4, lr}
 8021060:	4604      	mov	r4, r0
 8021062:	d001      	beq.n	8021068 <cleanup_stdio+0x10>
 8021064:	f000 fdb0 	bl	8021bc8 <_fflush_r>
 8021068:	68a1      	ldr	r1, [r4, #8]
 802106a:	4b09      	ldr	r3, [pc, #36]	; (8021090 <cleanup_stdio+0x38>)
 802106c:	4299      	cmp	r1, r3
 802106e:	d002      	beq.n	8021076 <cleanup_stdio+0x1e>
 8021070:	4620      	mov	r0, r4
 8021072:	f000 fda9 	bl	8021bc8 <_fflush_r>
 8021076:	68e1      	ldr	r1, [r4, #12]
 8021078:	4b06      	ldr	r3, [pc, #24]	; (8021094 <cleanup_stdio+0x3c>)
 802107a:	4299      	cmp	r1, r3
 802107c:	d004      	beq.n	8021088 <cleanup_stdio+0x30>
 802107e:	4620      	mov	r0, r4
 8021080:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021084:	f000 bda0 	b.w	8021bc8 <_fflush_r>
 8021088:	bd10      	pop	{r4, pc}
 802108a:	bf00      	nop
 802108c:	2400ed80 	.word	0x2400ed80
 8021090:	2400ede8 	.word	0x2400ede8
 8021094:	2400ee50 	.word	0x2400ee50

08021098 <global_stdio_init.part.0>:
 8021098:	b510      	push	{r4, lr}
 802109a:	4b0b      	ldr	r3, [pc, #44]	; (80210c8 <global_stdio_init.part.0+0x30>)
 802109c:	4c0b      	ldr	r4, [pc, #44]	; (80210cc <global_stdio_init.part.0+0x34>)
 802109e:	4a0c      	ldr	r2, [pc, #48]	; (80210d0 <global_stdio_init.part.0+0x38>)
 80210a0:	601a      	str	r2, [r3, #0]
 80210a2:	4620      	mov	r0, r4
 80210a4:	2200      	movs	r2, #0
 80210a6:	2104      	movs	r1, #4
 80210a8:	f7ff ff94 	bl	8020fd4 <std>
 80210ac:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80210b0:	2201      	movs	r2, #1
 80210b2:	2109      	movs	r1, #9
 80210b4:	f7ff ff8e 	bl	8020fd4 <std>
 80210b8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80210bc:	2202      	movs	r2, #2
 80210be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80210c2:	2112      	movs	r1, #18
 80210c4:	f7ff bf86 	b.w	8020fd4 <std>
 80210c8:	2400eeb8 	.word	0x2400eeb8
 80210cc:	2400ed80 	.word	0x2400ed80
 80210d0:	08021041 	.word	0x08021041

080210d4 <__sfp_lock_acquire>:
 80210d4:	4801      	ldr	r0, [pc, #4]	; (80210dc <__sfp_lock_acquire+0x8>)
 80210d6:	f000 b962 	b.w	802139e <__retarget_lock_acquire_recursive>
 80210da:	bf00      	nop
 80210dc:	2400eec2 	.word	0x2400eec2

080210e0 <__sfp_lock_release>:
 80210e0:	4801      	ldr	r0, [pc, #4]	; (80210e8 <__sfp_lock_release+0x8>)
 80210e2:	f000 b95d 	b.w	80213a0 <__retarget_lock_release_recursive>
 80210e6:	bf00      	nop
 80210e8:	2400eec2 	.word	0x2400eec2

080210ec <__sinit>:
 80210ec:	b510      	push	{r4, lr}
 80210ee:	4604      	mov	r4, r0
 80210f0:	f7ff fff0 	bl	80210d4 <__sfp_lock_acquire>
 80210f4:	6a23      	ldr	r3, [r4, #32]
 80210f6:	b11b      	cbz	r3, 8021100 <__sinit+0x14>
 80210f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80210fc:	f7ff bff0 	b.w	80210e0 <__sfp_lock_release>
 8021100:	4b04      	ldr	r3, [pc, #16]	; (8021114 <__sinit+0x28>)
 8021102:	6223      	str	r3, [r4, #32]
 8021104:	4b04      	ldr	r3, [pc, #16]	; (8021118 <__sinit+0x2c>)
 8021106:	681b      	ldr	r3, [r3, #0]
 8021108:	2b00      	cmp	r3, #0
 802110a:	d1f5      	bne.n	80210f8 <__sinit+0xc>
 802110c:	f7ff ffc4 	bl	8021098 <global_stdio_init.part.0>
 8021110:	e7f2      	b.n	80210f8 <__sinit+0xc>
 8021112:	bf00      	nop
 8021114:	08021059 	.word	0x08021059
 8021118:	2400eeb8 	.word	0x2400eeb8

0802111c <fiprintf>:
 802111c:	b40e      	push	{r1, r2, r3}
 802111e:	b503      	push	{r0, r1, lr}
 8021120:	4601      	mov	r1, r0
 8021122:	ab03      	add	r3, sp, #12
 8021124:	4805      	ldr	r0, [pc, #20]	; (802113c <fiprintf+0x20>)
 8021126:	f853 2b04 	ldr.w	r2, [r3], #4
 802112a:	6800      	ldr	r0, [r0, #0]
 802112c:	9301      	str	r3, [sp, #4]
 802112e:	f000 fa1b 	bl	8021568 <_vfiprintf_r>
 8021132:	b002      	add	sp, #8
 8021134:	f85d eb04 	ldr.w	lr, [sp], #4
 8021138:	b003      	add	sp, #12
 802113a:	4770      	bx	lr
 802113c:	24000158 	.word	0x24000158

08021140 <_fwalk_sglue>:
 8021140:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021144:	4607      	mov	r7, r0
 8021146:	4688      	mov	r8, r1
 8021148:	4614      	mov	r4, r2
 802114a:	2600      	movs	r6, #0
 802114c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021150:	f1b9 0901 	subs.w	r9, r9, #1
 8021154:	d505      	bpl.n	8021162 <_fwalk_sglue+0x22>
 8021156:	6824      	ldr	r4, [r4, #0]
 8021158:	2c00      	cmp	r4, #0
 802115a:	d1f7      	bne.n	802114c <_fwalk_sglue+0xc>
 802115c:	4630      	mov	r0, r6
 802115e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021162:	89ab      	ldrh	r3, [r5, #12]
 8021164:	2b01      	cmp	r3, #1
 8021166:	d907      	bls.n	8021178 <_fwalk_sglue+0x38>
 8021168:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802116c:	3301      	adds	r3, #1
 802116e:	d003      	beq.n	8021178 <_fwalk_sglue+0x38>
 8021170:	4629      	mov	r1, r5
 8021172:	4638      	mov	r0, r7
 8021174:	47c0      	blx	r8
 8021176:	4306      	orrs	r6, r0
 8021178:	3568      	adds	r5, #104	; 0x68
 802117a:	e7e9      	b.n	8021150 <_fwalk_sglue+0x10>

0802117c <__sread>:
 802117c:	b510      	push	{r4, lr}
 802117e:	460c      	mov	r4, r1
 8021180:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021184:	f000 f898 	bl	80212b8 <_read_r>
 8021188:	2800      	cmp	r0, #0
 802118a:	bfab      	itete	ge
 802118c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802118e:	89a3      	ldrhlt	r3, [r4, #12]
 8021190:	181b      	addge	r3, r3, r0
 8021192:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8021196:	bfac      	ite	ge
 8021198:	6563      	strge	r3, [r4, #84]	; 0x54
 802119a:	81a3      	strhlt	r3, [r4, #12]
 802119c:	bd10      	pop	{r4, pc}

0802119e <__swrite>:
 802119e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80211a2:	461f      	mov	r7, r3
 80211a4:	898b      	ldrh	r3, [r1, #12]
 80211a6:	05db      	lsls	r3, r3, #23
 80211a8:	4605      	mov	r5, r0
 80211aa:	460c      	mov	r4, r1
 80211ac:	4616      	mov	r6, r2
 80211ae:	d505      	bpl.n	80211bc <__swrite+0x1e>
 80211b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80211b4:	2302      	movs	r3, #2
 80211b6:	2200      	movs	r2, #0
 80211b8:	f000 f86c 	bl	8021294 <_lseek_r>
 80211bc:	89a3      	ldrh	r3, [r4, #12]
 80211be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80211c2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80211c6:	81a3      	strh	r3, [r4, #12]
 80211c8:	4632      	mov	r2, r6
 80211ca:	463b      	mov	r3, r7
 80211cc:	4628      	mov	r0, r5
 80211ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80211d2:	f000 b8a7 	b.w	8021324 <_write_r>

080211d6 <__sseek>:
 80211d6:	b510      	push	{r4, lr}
 80211d8:	460c      	mov	r4, r1
 80211da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80211de:	f000 f859 	bl	8021294 <_lseek_r>
 80211e2:	1c43      	adds	r3, r0, #1
 80211e4:	89a3      	ldrh	r3, [r4, #12]
 80211e6:	bf15      	itete	ne
 80211e8:	6560      	strne	r0, [r4, #84]	; 0x54
 80211ea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80211ee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80211f2:	81a3      	strheq	r3, [r4, #12]
 80211f4:	bf18      	it	ne
 80211f6:	81a3      	strhne	r3, [r4, #12]
 80211f8:	bd10      	pop	{r4, pc}

080211fa <__sclose>:
 80211fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80211fe:	f000 b839 	b.w	8021274 <_close_r>

08021202 <memset>:
 8021202:	4402      	add	r2, r0
 8021204:	4603      	mov	r3, r0
 8021206:	4293      	cmp	r3, r2
 8021208:	d100      	bne.n	802120c <memset+0xa>
 802120a:	4770      	bx	lr
 802120c:	f803 1b01 	strb.w	r1, [r3], #1
 8021210:	e7f9      	b.n	8021206 <memset+0x4>

08021212 <_raise_r>:
 8021212:	291f      	cmp	r1, #31
 8021214:	b538      	push	{r3, r4, r5, lr}
 8021216:	4604      	mov	r4, r0
 8021218:	460d      	mov	r5, r1
 802121a:	d904      	bls.n	8021226 <_raise_r+0x14>
 802121c:	2316      	movs	r3, #22
 802121e:	6003      	str	r3, [r0, #0]
 8021220:	f04f 30ff 	mov.w	r0, #4294967295
 8021224:	bd38      	pop	{r3, r4, r5, pc}
 8021226:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8021228:	b112      	cbz	r2, 8021230 <_raise_r+0x1e>
 802122a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802122e:	b94b      	cbnz	r3, 8021244 <_raise_r+0x32>
 8021230:	4620      	mov	r0, r4
 8021232:	f000 f865 	bl	8021300 <_getpid_r>
 8021236:	462a      	mov	r2, r5
 8021238:	4601      	mov	r1, r0
 802123a:	4620      	mov	r0, r4
 802123c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021240:	f000 b84c 	b.w	80212dc <_kill_r>
 8021244:	2b01      	cmp	r3, #1
 8021246:	d00a      	beq.n	802125e <_raise_r+0x4c>
 8021248:	1c59      	adds	r1, r3, #1
 802124a:	d103      	bne.n	8021254 <_raise_r+0x42>
 802124c:	2316      	movs	r3, #22
 802124e:	6003      	str	r3, [r0, #0]
 8021250:	2001      	movs	r0, #1
 8021252:	e7e7      	b.n	8021224 <_raise_r+0x12>
 8021254:	2400      	movs	r4, #0
 8021256:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802125a:	4628      	mov	r0, r5
 802125c:	4798      	blx	r3
 802125e:	2000      	movs	r0, #0
 8021260:	e7e0      	b.n	8021224 <_raise_r+0x12>
	...

08021264 <raise>:
 8021264:	4b02      	ldr	r3, [pc, #8]	; (8021270 <raise+0xc>)
 8021266:	4601      	mov	r1, r0
 8021268:	6818      	ldr	r0, [r3, #0]
 802126a:	f7ff bfd2 	b.w	8021212 <_raise_r>
 802126e:	bf00      	nop
 8021270:	24000158 	.word	0x24000158

08021274 <_close_r>:
 8021274:	b538      	push	{r3, r4, r5, lr}
 8021276:	4d06      	ldr	r5, [pc, #24]	; (8021290 <_close_r+0x1c>)
 8021278:	2300      	movs	r3, #0
 802127a:	4604      	mov	r4, r0
 802127c:	4608      	mov	r0, r1
 802127e:	602b      	str	r3, [r5, #0]
 8021280:	f7e0 fe1a 	bl	8001eb8 <_close>
 8021284:	1c43      	adds	r3, r0, #1
 8021286:	d102      	bne.n	802128e <_close_r+0x1a>
 8021288:	682b      	ldr	r3, [r5, #0]
 802128a:	b103      	cbz	r3, 802128e <_close_r+0x1a>
 802128c:	6023      	str	r3, [r4, #0]
 802128e:	bd38      	pop	{r3, r4, r5, pc}
 8021290:	2400eebc 	.word	0x2400eebc

08021294 <_lseek_r>:
 8021294:	b538      	push	{r3, r4, r5, lr}
 8021296:	4d07      	ldr	r5, [pc, #28]	; (80212b4 <_lseek_r+0x20>)
 8021298:	4604      	mov	r4, r0
 802129a:	4608      	mov	r0, r1
 802129c:	4611      	mov	r1, r2
 802129e:	2200      	movs	r2, #0
 80212a0:	602a      	str	r2, [r5, #0]
 80212a2:	461a      	mov	r2, r3
 80212a4:	f7e0 fe12 	bl	8001ecc <_lseek>
 80212a8:	1c43      	adds	r3, r0, #1
 80212aa:	d102      	bne.n	80212b2 <_lseek_r+0x1e>
 80212ac:	682b      	ldr	r3, [r5, #0]
 80212ae:	b103      	cbz	r3, 80212b2 <_lseek_r+0x1e>
 80212b0:	6023      	str	r3, [r4, #0]
 80212b2:	bd38      	pop	{r3, r4, r5, pc}
 80212b4:	2400eebc 	.word	0x2400eebc

080212b8 <_read_r>:
 80212b8:	b538      	push	{r3, r4, r5, lr}
 80212ba:	4d07      	ldr	r5, [pc, #28]	; (80212d8 <_read_r+0x20>)
 80212bc:	4604      	mov	r4, r0
 80212be:	4608      	mov	r0, r1
 80212c0:	4611      	mov	r1, r2
 80212c2:	2200      	movs	r2, #0
 80212c4:	602a      	str	r2, [r5, #0]
 80212c6:	461a      	mov	r2, r3
 80212c8:	f7e0 fdda 	bl	8001e80 <_read>
 80212cc:	1c43      	adds	r3, r0, #1
 80212ce:	d102      	bne.n	80212d6 <_read_r+0x1e>
 80212d0:	682b      	ldr	r3, [r5, #0]
 80212d2:	b103      	cbz	r3, 80212d6 <_read_r+0x1e>
 80212d4:	6023      	str	r3, [r4, #0]
 80212d6:	bd38      	pop	{r3, r4, r5, pc}
 80212d8:	2400eebc 	.word	0x2400eebc

080212dc <_kill_r>:
 80212dc:	b538      	push	{r3, r4, r5, lr}
 80212de:	4d07      	ldr	r5, [pc, #28]	; (80212fc <_kill_r+0x20>)
 80212e0:	2300      	movs	r3, #0
 80212e2:	4604      	mov	r4, r0
 80212e4:	4608      	mov	r0, r1
 80212e6:	4611      	mov	r1, r2
 80212e8:	602b      	str	r3, [r5, #0]
 80212ea:	f7e0 fdbb 	bl	8001e64 <_kill>
 80212ee:	1c43      	adds	r3, r0, #1
 80212f0:	d102      	bne.n	80212f8 <_kill_r+0x1c>
 80212f2:	682b      	ldr	r3, [r5, #0]
 80212f4:	b103      	cbz	r3, 80212f8 <_kill_r+0x1c>
 80212f6:	6023      	str	r3, [r4, #0]
 80212f8:	bd38      	pop	{r3, r4, r5, pc}
 80212fa:	bf00      	nop
 80212fc:	2400eebc 	.word	0x2400eebc

08021300 <_getpid_r>:
 8021300:	f7e0 bdae 	b.w	8001e60 <_getpid>

08021304 <_sbrk_r>:
 8021304:	b538      	push	{r3, r4, r5, lr}
 8021306:	4d06      	ldr	r5, [pc, #24]	; (8021320 <_sbrk_r+0x1c>)
 8021308:	2300      	movs	r3, #0
 802130a:	4604      	mov	r4, r0
 802130c:	4608      	mov	r0, r1
 802130e:	602b      	str	r3, [r5, #0]
 8021310:	f7e0 fdde 	bl	8001ed0 <_sbrk>
 8021314:	1c43      	adds	r3, r0, #1
 8021316:	d102      	bne.n	802131e <_sbrk_r+0x1a>
 8021318:	682b      	ldr	r3, [r5, #0]
 802131a:	b103      	cbz	r3, 802131e <_sbrk_r+0x1a>
 802131c:	6023      	str	r3, [r4, #0]
 802131e:	bd38      	pop	{r3, r4, r5, pc}
 8021320:	2400eebc 	.word	0x2400eebc

08021324 <_write_r>:
 8021324:	b538      	push	{r3, r4, r5, lr}
 8021326:	4d07      	ldr	r5, [pc, #28]	; (8021344 <_write_r+0x20>)
 8021328:	4604      	mov	r4, r0
 802132a:	4608      	mov	r0, r1
 802132c:	4611      	mov	r1, r2
 802132e:	2200      	movs	r2, #0
 8021330:	602a      	str	r2, [r5, #0]
 8021332:	461a      	mov	r2, r3
 8021334:	f7e0 fdb2 	bl	8001e9c <_write>
 8021338:	1c43      	adds	r3, r0, #1
 802133a:	d102      	bne.n	8021342 <_write_r+0x1e>
 802133c:	682b      	ldr	r3, [r5, #0]
 802133e:	b103      	cbz	r3, 8021342 <_write_r+0x1e>
 8021340:	6023      	str	r3, [r4, #0]
 8021342:	bd38      	pop	{r3, r4, r5, pc}
 8021344:	2400eebc 	.word	0x2400eebc

08021348 <__errno>:
 8021348:	4b01      	ldr	r3, [pc, #4]	; (8021350 <__errno+0x8>)
 802134a:	6818      	ldr	r0, [r3, #0]
 802134c:	4770      	bx	lr
 802134e:	bf00      	nop
 8021350:	24000158 	.word	0x24000158

08021354 <__libc_init_array>:
 8021354:	b570      	push	{r4, r5, r6, lr}
 8021356:	4d0d      	ldr	r5, [pc, #52]	; (802138c <__libc_init_array+0x38>)
 8021358:	4c0d      	ldr	r4, [pc, #52]	; (8021390 <__libc_init_array+0x3c>)
 802135a:	1b64      	subs	r4, r4, r5
 802135c:	10a4      	asrs	r4, r4, #2
 802135e:	2600      	movs	r6, #0
 8021360:	42a6      	cmp	r6, r4
 8021362:	d109      	bne.n	8021378 <__libc_init_array+0x24>
 8021364:	4d0b      	ldr	r5, [pc, #44]	; (8021394 <__libc_init_array+0x40>)
 8021366:	4c0c      	ldr	r4, [pc, #48]	; (8021398 <__libc_init_array+0x44>)
 8021368:	f000 fd70 	bl	8021e4c <_init>
 802136c:	1b64      	subs	r4, r4, r5
 802136e:	10a4      	asrs	r4, r4, #2
 8021370:	2600      	movs	r6, #0
 8021372:	42a6      	cmp	r6, r4
 8021374:	d105      	bne.n	8021382 <__libc_init_array+0x2e>
 8021376:	bd70      	pop	{r4, r5, r6, pc}
 8021378:	f855 3b04 	ldr.w	r3, [r5], #4
 802137c:	4798      	blx	r3
 802137e:	3601      	adds	r6, #1
 8021380:	e7ee      	b.n	8021360 <__libc_init_array+0xc>
 8021382:	f855 3b04 	ldr.w	r3, [r5], #4
 8021386:	4798      	blx	r3
 8021388:	3601      	adds	r6, #1
 802138a:	e7f2      	b.n	8021372 <__libc_init_array+0x1e>
 802138c:	08023d6c 	.word	0x08023d6c
 8021390:	08023d6c 	.word	0x08023d6c
 8021394:	08023d6c 	.word	0x08023d6c
 8021398:	08023d80 	.word	0x08023d80

0802139c <__retarget_lock_init_recursive>:
 802139c:	4770      	bx	lr

0802139e <__retarget_lock_acquire_recursive>:
 802139e:	4770      	bx	lr

080213a0 <__retarget_lock_release_recursive>:
 80213a0:	4770      	bx	lr

080213a2 <memcpy>:
 80213a2:	440a      	add	r2, r1
 80213a4:	4291      	cmp	r1, r2
 80213a6:	f100 33ff 	add.w	r3, r0, #4294967295
 80213aa:	d100      	bne.n	80213ae <memcpy+0xc>
 80213ac:	4770      	bx	lr
 80213ae:	b510      	push	{r4, lr}
 80213b0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80213b4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80213b8:	4291      	cmp	r1, r2
 80213ba:	d1f9      	bne.n	80213b0 <memcpy+0xe>
 80213bc:	bd10      	pop	{r4, pc}
	...

080213c0 <__register_exitproc>:
 80213c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80213c4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8021478 <__register_exitproc+0xb8>
 80213c8:	4606      	mov	r6, r0
 80213ca:	f8d8 0000 	ldr.w	r0, [r8]
 80213ce:	461f      	mov	r7, r3
 80213d0:	460d      	mov	r5, r1
 80213d2:	4691      	mov	r9, r2
 80213d4:	f7ff ffe3 	bl	802139e <__retarget_lock_acquire_recursive>
 80213d8:	4b23      	ldr	r3, [pc, #140]	; (8021468 <__register_exitproc+0xa8>)
 80213da:	681c      	ldr	r4, [r3, #0]
 80213dc:	b934      	cbnz	r4, 80213ec <__register_exitproc+0x2c>
 80213de:	4c23      	ldr	r4, [pc, #140]	; (802146c <__register_exitproc+0xac>)
 80213e0:	601c      	str	r4, [r3, #0]
 80213e2:	4b23      	ldr	r3, [pc, #140]	; (8021470 <__register_exitproc+0xb0>)
 80213e4:	b113      	cbz	r3, 80213ec <__register_exitproc+0x2c>
 80213e6:	681b      	ldr	r3, [r3, #0]
 80213e8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80213ec:	6863      	ldr	r3, [r4, #4]
 80213ee:	2b1f      	cmp	r3, #31
 80213f0:	dd07      	ble.n	8021402 <__register_exitproc+0x42>
 80213f2:	f8d8 0000 	ldr.w	r0, [r8]
 80213f6:	f7ff ffd3 	bl	80213a0 <__retarget_lock_release_recursive>
 80213fa:	f04f 30ff 	mov.w	r0, #4294967295
 80213fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021402:	b32e      	cbz	r6, 8021450 <__register_exitproc+0x90>
 8021404:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021408:	b968      	cbnz	r0, 8021426 <__register_exitproc+0x66>
 802140a:	4b1a      	ldr	r3, [pc, #104]	; (8021474 <__register_exitproc+0xb4>)
 802140c:	2b00      	cmp	r3, #0
 802140e:	d0f0      	beq.n	80213f2 <__register_exitproc+0x32>
 8021410:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021414:	f7ff fd14 	bl	8020e40 <malloc>
 8021418:	2800      	cmp	r0, #0
 802141a:	d0ea      	beq.n	80213f2 <__register_exitproc+0x32>
 802141c:	2300      	movs	r3, #0
 802141e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8021422:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8021426:	6863      	ldr	r3, [r4, #4]
 8021428:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802142c:	2201      	movs	r2, #1
 802142e:	409a      	lsls	r2, r3
 8021430:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021434:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021438:	4313      	orrs	r3, r2
 802143a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802143e:	2e02      	cmp	r6, #2
 8021440:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021444:	bf02      	ittt	eq
 8021446:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802144a:	4313      	orreq	r3, r2
 802144c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021450:	6863      	ldr	r3, [r4, #4]
 8021452:	f8d8 0000 	ldr.w	r0, [r8]
 8021456:	1c5a      	adds	r2, r3, #1
 8021458:	3302      	adds	r3, #2
 802145a:	6062      	str	r2, [r4, #4]
 802145c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021460:	f7ff ff9e 	bl	80213a0 <__retarget_lock_release_recursive>
 8021464:	2000      	movs	r0, #0
 8021466:	e7ca      	b.n	80213fe <__register_exitproc+0x3e>
 8021468:	2400ef50 	.word	0x2400ef50
 802146c:	2400eec4 	.word	0x2400eec4
 8021470:	08023d1c 	.word	0x08023d1c
 8021474:	08020e41 	.word	0x08020e41
 8021478:	2400015c 	.word	0x2400015c

0802147c <_free_r>:
 802147c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802147e:	2900      	cmp	r1, #0
 8021480:	d044      	beq.n	802150c <_free_r+0x90>
 8021482:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021486:	9001      	str	r0, [sp, #4]
 8021488:	2b00      	cmp	r3, #0
 802148a:	f1a1 0404 	sub.w	r4, r1, #4
 802148e:	bfb8      	it	lt
 8021490:	18e4      	addlt	r4, r4, r3
 8021492:	f7ff fd85 	bl	8020fa0 <__malloc_lock>
 8021496:	4a1e      	ldr	r2, [pc, #120]	; (8021510 <_free_r+0x94>)
 8021498:	9801      	ldr	r0, [sp, #4]
 802149a:	6813      	ldr	r3, [r2, #0]
 802149c:	b933      	cbnz	r3, 80214ac <_free_r+0x30>
 802149e:	6063      	str	r3, [r4, #4]
 80214a0:	6014      	str	r4, [r2, #0]
 80214a2:	b003      	add	sp, #12
 80214a4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80214a8:	f7ff bd80 	b.w	8020fac <__malloc_unlock>
 80214ac:	42a3      	cmp	r3, r4
 80214ae:	d908      	bls.n	80214c2 <_free_r+0x46>
 80214b0:	6825      	ldr	r5, [r4, #0]
 80214b2:	1961      	adds	r1, r4, r5
 80214b4:	428b      	cmp	r3, r1
 80214b6:	bf01      	itttt	eq
 80214b8:	6819      	ldreq	r1, [r3, #0]
 80214ba:	685b      	ldreq	r3, [r3, #4]
 80214bc:	1949      	addeq	r1, r1, r5
 80214be:	6021      	streq	r1, [r4, #0]
 80214c0:	e7ed      	b.n	802149e <_free_r+0x22>
 80214c2:	461a      	mov	r2, r3
 80214c4:	685b      	ldr	r3, [r3, #4]
 80214c6:	b10b      	cbz	r3, 80214cc <_free_r+0x50>
 80214c8:	42a3      	cmp	r3, r4
 80214ca:	d9fa      	bls.n	80214c2 <_free_r+0x46>
 80214cc:	6811      	ldr	r1, [r2, #0]
 80214ce:	1855      	adds	r5, r2, r1
 80214d0:	42a5      	cmp	r5, r4
 80214d2:	d10b      	bne.n	80214ec <_free_r+0x70>
 80214d4:	6824      	ldr	r4, [r4, #0]
 80214d6:	4421      	add	r1, r4
 80214d8:	1854      	adds	r4, r2, r1
 80214da:	42a3      	cmp	r3, r4
 80214dc:	6011      	str	r1, [r2, #0]
 80214de:	d1e0      	bne.n	80214a2 <_free_r+0x26>
 80214e0:	681c      	ldr	r4, [r3, #0]
 80214e2:	685b      	ldr	r3, [r3, #4]
 80214e4:	6053      	str	r3, [r2, #4]
 80214e6:	440c      	add	r4, r1
 80214e8:	6014      	str	r4, [r2, #0]
 80214ea:	e7da      	b.n	80214a2 <_free_r+0x26>
 80214ec:	d902      	bls.n	80214f4 <_free_r+0x78>
 80214ee:	230c      	movs	r3, #12
 80214f0:	6003      	str	r3, [r0, #0]
 80214f2:	e7d6      	b.n	80214a2 <_free_r+0x26>
 80214f4:	6825      	ldr	r5, [r4, #0]
 80214f6:	1961      	adds	r1, r4, r5
 80214f8:	428b      	cmp	r3, r1
 80214fa:	bf04      	itt	eq
 80214fc:	6819      	ldreq	r1, [r3, #0]
 80214fe:	685b      	ldreq	r3, [r3, #4]
 8021500:	6063      	str	r3, [r4, #4]
 8021502:	bf04      	itt	eq
 8021504:	1949      	addeq	r1, r1, r5
 8021506:	6021      	streq	r1, [r4, #0]
 8021508:	6054      	str	r4, [r2, #4]
 802150a:	e7ca      	b.n	80214a2 <_free_r+0x26>
 802150c:	b003      	add	sp, #12
 802150e:	bd30      	pop	{r4, r5, pc}
 8021510:	2400ed78 	.word	0x2400ed78

08021514 <__sfputc_r>:
 8021514:	6893      	ldr	r3, [r2, #8]
 8021516:	3b01      	subs	r3, #1
 8021518:	2b00      	cmp	r3, #0
 802151a:	b410      	push	{r4}
 802151c:	6093      	str	r3, [r2, #8]
 802151e:	da08      	bge.n	8021532 <__sfputc_r+0x1e>
 8021520:	6994      	ldr	r4, [r2, #24]
 8021522:	42a3      	cmp	r3, r4
 8021524:	db01      	blt.n	802152a <__sfputc_r+0x16>
 8021526:	290a      	cmp	r1, #10
 8021528:	d103      	bne.n	8021532 <__sfputc_r+0x1e>
 802152a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802152e:	f000 bb73 	b.w	8021c18 <__swbuf_r>
 8021532:	6813      	ldr	r3, [r2, #0]
 8021534:	1c58      	adds	r0, r3, #1
 8021536:	6010      	str	r0, [r2, #0]
 8021538:	7019      	strb	r1, [r3, #0]
 802153a:	4608      	mov	r0, r1
 802153c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021540:	4770      	bx	lr

08021542 <__sfputs_r>:
 8021542:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021544:	4606      	mov	r6, r0
 8021546:	460f      	mov	r7, r1
 8021548:	4614      	mov	r4, r2
 802154a:	18d5      	adds	r5, r2, r3
 802154c:	42ac      	cmp	r4, r5
 802154e:	d101      	bne.n	8021554 <__sfputs_r+0x12>
 8021550:	2000      	movs	r0, #0
 8021552:	e007      	b.n	8021564 <__sfputs_r+0x22>
 8021554:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021558:	463a      	mov	r2, r7
 802155a:	4630      	mov	r0, r6
 802155c:	f7ff ffda 	bl	8021514 <__sfputc_r>
 8021560:	1c43      	adds	r3, r0, #1
 8021562:	d1f3      	bne.n	802154c <__sfputs_r+0xa>
 8021564:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08021568 <_vfiprintf_r>:
 8021568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802156c:	460d      	mov	r5, r1
 802156e:	b09d      	sub	sp, #116	; 0x74
 8021570:	4614      	mov	r4, r2
 8021572:	4698      	mov	r8, r3
 8021574:	4606      	mov	r6, r0
 8021576:	b118      	cbz	r0, 8021580 <_vfiprintf_r+0x18>
 8021578:	6a03      	ldr	r3, [r0, #32]
 802157a:	b90b      	cbnz	r3, 8021580 <_vfiprintf_r+0x18>
 802157c:	f7ff fdb6 	bl	80210ec <__sinit>
 8021580:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021582:	07d9      	lsls	r1, r3, #31
 8021584:	d405      	bmi.n	8021592 <_vfiprintf_r+0x2a>
 8021586:	89ab      	ldrh	r3, [r5, #12]
 8021588:	059a      	lsls	r2, r3, #22
 802158a:	d402      	bmi.n	8021592 <_vfiprintf_r+0x2a>
 802158c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802158e:	f7ff ff06 	bl	802139e <__retarget_lock_acquire_recursive>
 8021592:	89ab      	ldrh	r3, [r5, #12]
 8021594:	071b      	lsls	r3, r3, #28
 8021596:	d501      	bpl.n	802159c <_vfiprintf_r+0x34>
 8021598:	692b      	ldr	r3, [r5, #16]
 802159a:	b99b      	cbnz	r3, 80215c4 <_vfiprintf_r+0x5c>
 802159c:	4629      	mov	r1, r5
 802159e:	4630      	mov	r0, r6
 80215a0:	f000 fb78 	bl	8021c94 <__swsetup_r>
 80215a4:	b170      	cbz	r0, 80215c4 <_vfiprintf_r+0x5c>
 80215a6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80215a8:	07dc      	lsls	r4, r3, #31
 80215aa:	d504      	bpl.n	80215b6 <_vfiprintf_r+0x4e>
 80215ac:	f04f 30ff 	mov.w	r0, #4294967295
 80215b0:	b01d      	add	sp, #116	; 0x74
 80215b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80215b6:	89ab      	ldrh	r3, [r5, #12]
 80215b8:	0598      	lsls	r0, r3, #22
 80215ba:	d4f7      	bmi.n	80215ac <_vfiprintf_r+0x44>
 80215bc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80215be:	f7ff feef 	bl	80213a0 <__retarget_lock_release_recursive>
 80215c2:	e7f3      	b.n	80215ac <_vfiprintf_r+0x44>
 80215c4:	2300      	movs	r3, #0
 80215c6:	9309      	str	r3, [sp, #36]	; 0x24
 80215c8:	2320      	movs	r3, #32
 80215ca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80215ce:	f8cd 800c 	str.w	r8, [sp, #12]
 80215d2:	2330      	movs	r3, #48	; 0x30
 80215d4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8021788 <_vfiprintf_r+0x220>
 80215d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80215dc:	f04f 0901 	mov.w	r9, #1
 80215e0:	4623      	mov	r3, r4
 80215e2:	469a      	mov	sl, r3
 80215e4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80215e8:	b10a      	cbz	r2, 80215ee <_vfiprintf_r+0x86>
 80215ea:	2a25      	cmp	r2, #37	; 0x25
 80215ec:	d1f9      	bne.n	80215e2 <_vfiprintf_r+0x7a>
 80215ee:	ebba 0b04 	subs.w	fp, sl, r4
 80215f2:	d00b      	beq.n	802160c <_vfiprintf_r+0xa4>
 80215f4:	465b      	mov	r3, fp
 80215f6:	4622      	mov	r2, r4
 80215f8:	4629      	mov	r1, r5
 80215fa:	4630      	mov	r0, r6
 80215fc:	f7ff ffa1 	bl	8021542 <__sfputs_r>
 8021600:	3001      	adds	r0, #1
 8021602:	f000 80a9 	beq.w	8021758 <_vfiprintf_r+0x1f0>
 8021606:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021608:	445a      	add	r2, fp
 802160a:	9209      	str	r2, [sp, #36]	; 0x24
 802160c:	f89a 3000 	ldrb.w	r3, [sl]
 8021610:	2b00      	cmp	r3, #0
 8021612:	f000 80a1 	beq.w	8021758 <_vfiprintf_r+0x1f0>
 8021616:	2300      	movs	r3, #0
 8021618:	f04f 32ff 	mov.w	r2, #4294967295
 802161c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021620:	f10a 0a01 	add.w	sl, sl, #1
 8021624:	9304      	str	r3, [sp, #16]
 8021626:	9307      	str	r3, [sp, #28]
 8021628:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802162c:	931a      	str	r3, [sp, #104]	; 0x68
 802162e:	4654      	mov	r4, sl
 8021630:	2205      	movs	r2, #5
 8021632:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021636:	4854      	ldr	r0, [pc, #336]	; (8021788 <_vfiprintf_r+0x220>)
 8021638:	f7de fe52 	bl	80002e0 <memchr>
 802163c:	9a04      	ldr	r2, [sp, #16]
 802163e:	b9d8      	cbnz	r0, 8021678 <_vfiprintf_r+0x110>
 8021640:	06d1      	lsls	r1, r2, #27
 8021642:	bf44      	itt	mi
 8021644:	2320      	movmi	r3, #32
 8021646:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802164a:	0713      	lsls	r3, r2, #28
 802164c:	bf44      	itt	mi
 802164e:	232b      	movmi	r3, #43	; 0x2b
 8021650:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8021654:	f89a 3000 	ldrb.w	r3, [sl]
 8021658:	2b2a      	cmp	r3, #42	; 0x2a
 802165a:	d015      	beq.n	8021688 <_vfiprintf_r+0x120>
 802165c:	9a07      	ldr	r2, [sp, #28]
 802165e:	4654      	mov	r4, sl
 8021660:	2000      	movs	r0, #0
 8021662:	f04f 0c0a 	mov.w	ip, #10
 8021666:	4621      	mov	r1, r4
 8021668:	f811 3b01 	ldrb.w	r3, [r1], #1
 802166c:	3b30      	subs	r3, #48	; 0x30
 802166e:	2b09      	cmp	r3, #9
 8021670:	d94d      	bls.n	802170e <_vfiprintf_r+0x1a6>
 8021672:	b1b0      	cbz	r0, 80216a2 <_vfiprintf_r+0x13a>
 8021674:	9207      	str	r2, [sp, #28]
 8021676:	e014      	b.n	80216a2 <_vfiprintf_r+0x13a>
 8021678:	eba0 0308 	sub.w	r3, r0, r8
 802167c:	fa09 f303 	lsl.w	r3, r9, r3
 8021680:	4313      	orrs	r3, r2
 8021682:	9304      	str	r3, [sp, #16]
 8021684:	46a2      	mov	sl, r4
 8021686:	e7d2      	b.n	802162e <_vfiprintf_r+0xc6>
 8021688:	9b03      	ldr	r3, [sp, #12]
 802168a:	1d19      	adds	r1, r3, #4
 802168c:	681b      	ldr	r3, [r3, #0]
 802168e:	9103      	str	r1, [sp, #12]
 8021690:	2b00      	cmp	r3, #0
 8021692:	bfbb      	ittet	lt
 8021694:	425b      	neglt	r3, r3
 8021696:	f042 0202 	orrlt.w	r2, r2, #2
 802169a:	9307      	strge	r3, [sp, #28]
 802169c:	9307      	strlt	r3, [sp, #28]
 802169e:	bfb8      	it	lt
 80216a0:	9204      	strlt	r2, [sp, #16]
 80216a2:	7823      	ldrb	r3, [r4, #0]
 80216a4:	2b2e      	cmp	r3, #46	; 0x2e
 80216a6:	d10c      	bne.n	80216c2 <_vfiprintf_r+0x15a>
 80216a8:	7863      	ldrb	r3, [r4, #1]
 80216aa:	2b2a      	cmp	r3, #42	; 0x2a
 80216ac:	d134      	bne.n	8021718 <_vfiprintf_r+0x1b0>
 80216ae:	9b03      	ldr	r3, [sp, #12]
 80216b0:	1d1a      	adds	r2, r3, #4
 80216b2:	681b      	ldr	r3, [r3, #0]
 80216b4:	9203      	str	r2, [sp, #12]
 80216b6:	2b00      	cmp	r3, #0
 80216b8:	bfb8      	it	lt
 80216ba:	f04f 33ff 	movlt.w	r3, #4294967295
 80216be:	3402      	adds	r4, #2
 80216c0:	9305      	str	r3, [sp, #20]
 80216c2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8021798 <_vfiprintf_r+0x230>
 80216c6:	7821      	ldrb	r1, [r4, #0]
 80216c8:	2203      	movs	r2, #3
 80216ca:	4650      	mov	r0, sl
 80216cc:	f7de fe08 	bl	80002e0 <memchr>
 80216d0:	b138      	cbz	r0, 80216e2 <_vfiprintf_r+0x17a>
 80216d2:	9b04      	ldr	r3, [sp, #16]
 80216d4:	eba0 000a 	sub.w	r0, r0, sl
 80216d8:	2240      	movs	r2, #64	; 0x40
 80216da:	4082      	lsls	r2, r0
 80216dc:	4313      	orrs	r3, r2
 80216de:	3401      	adds	r4, #1
 80216e0:	9304      	str	r3, [sp, #16]
 80216e2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80216e6:	4829      	ldr	r0, [pc, #164]	; (802178c <_vfiprintf_r+0x224>)
 80216e8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80216ec:	2206      	movs	r2, #6
 80216ee:	f7de fdf7 	bl	80002e0 <memchr>
 80216f2:	2800      	cmp	r0, #0
 80216f4:	d03f      	beq.n	8021776 <_vfiprintf_r+0x20e>
 80216f6:	4b26      	ldr	r3, [pc, #152]	; (8021790 <_vfiprintf_r+0x228>)
 80216f8:	bb1b      	cbnz	r3, 8021742 <_vfiprintf_r+0x1da>
 80216fa:	9b03      	ldr	r3, [sp, #12]
 80216fc:	3307      	adds	r3, #7
 80216fe:	f023 0307 	bic.w	r3, r3, #7
 8021702:	3308      	adds	r3, #8
 8021704:	9303      	str	r3, [sp, #12]
 8021706:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021708:	443b      	add	r3, r7
 802170a:	9309      	str	r3, [sp, #36]	; 0x24
 802170c:	e768      	b.n	80215e0 <_vfiprintf_r+0x78>
 802170e:	fb0c 3202 	mla	r2, ip, r2, r3
 8021712:	460c      	mov	r4, r1
 8021714:	2001      	movs	r0, #1
 8021716:	e7a6      	b.n	8021666 <_vfiprintf_r+0xfe>
 8021718:	2300      	movs	r3, #0
 802171a:	3401      	adds	r4, #1
 802171c:	9305      	str	r3, [sp, #20]
 802171e:	4619      	mov	r1, r3
 8021720:	f04f 0c0a 	mov.w	ip, #10
 8021724:	4620      	mov	r0, r4
 8021726:	f810 2b01 	ldrb.w	r2, [r0], #1
 802172a:	3a30      	subs	r2, #48	; 0x30
 802172c:	2a09      	cmp	r2, #9
 802172e:	d903      	bls.n	8021738 <_vfiprintf_r+0x1d0>
 8021730:	2b00      	cmp	r3, #0
 8021732:	d0c6      	beq.n	80216c2 <_vfiprintf_r+0x15a>
 8021734:	9105      	str	r1, [sp, #20]
 8021736:	e7c4      	b.n	80216c2 <_vfiprintf_r+0x15a>
 8021738:	fb0c 2101 	mla	r1, ip, r1, r2
 802173c:	4604      	mov	r4, r0
 802173e:	2301      	movs	r3, #1
 8021740:	e7f0      	b.n	8021724 <_vfiprintf_r+0x1bc>
 8021742:	ab03      	add	r3, sp, #12
 8021744:	9300      	str	r3, [sp, #0]
 8021746:	462a      	mov	r2, r5
 8021748:	4b12      	ldr	r3, [pc, #72]	; (8021794 <_vfiprintf_r+0x22c>)
 802174a:	a904      	add	r1, sp, #16
 802174c:	4630      	mov	r0, r6
 802174e:	f3af 8000 	nop.w
 8021752:	4607      	mov	r7, r0
 8021754:	1c78      	adds	r0, r7, #1
 8021756:	d1d6      	bne.n	8021706 <_vfiprintf_r+0x19e>
 8021758:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802175a:	07d9      	lsls	r1, r3, #31
 802175c:	d405      	bmi.n	802176a <_vfiprintf_r+0x202>
 802175e:	89ab      	ldrh	r3, [r5, #12]
 8021760:	059a      	lsls	r2, r3, #22
 8021762:	d402      	bmi.n	802176a <_vfiprintf_r+0x202>
 8021764:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8021766:	f7ff fe1b 	bl	80213a0 <__retarget_lock_release_recursive>
 802176a:	89ab      	ldrh	r3, [r5, #12]
 802176c:	065b      	lsls	r3, r3, #25
 802176e:	f53f af1d 	bmi.w	80215ac <_vfiprintf_r+0x44>
 8021772:	9809      	ldr	r0, [sp, #36]	; 0x24
 8021774:	e71c      	b.n	80215b0 <_vfiprintf_r+0x48>
 8021776:	ab03      	add	r3, sp, #12
 8021778:	9300      	str	r3, [sp, #0]
 802177a:	462a      	mov	r2, r5
 802177c:	4b05      	ldr	r3, [pc, #20]	; (8021794 <_vfiprintf_r+0x22c>)
 802177e:	a904      	add	r1, sp, #16
 8021780:	4630      	mov	r0, r6
 8021782:	f000 f879 	bl	8021878 <_printf_i>
 8021786:	e7e4      	b.n	8021752 <_vfiprintf_r+0x1ea>
 8021788:	08023d20 	.word	0x08023d20
 802178c:	08023d2a 	.word	0x08023d2a
 8021790:	00000000 	.word	0x00000000
 8021794:	08021543 	.word	0x08021543
 8021798:	08023d26 	.word	0x08023d26

0802179c <_printf_common>:
 802179c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80217a0:	4616      	mov	r6, r2
 80217a2:	4699      	mov	r9, r3
 80217a4:	688a      	ldr	r2, [r1, #8]
 80217a6:	690b      	ldr	r3, [r1, #16]
 80217a8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80217ac:	4293      	cmp	r3, r2
 80217ae:	bfb8      	it	lt
 80217b0:	4613      	movlt	r3, r2
 80217b2:	6033      	str	r3, [r6, #0]
 80217b4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80217b8:	4607      	mov	r7, r0
 80217ba:	460c      	mov	r4, r1
 80217bc:	b10a      	cbz	r2, 80217c2 <_printf_common+0x26>
 80217be:	3301      	adds	r3, #1
 80217c0:	6033      	str	r3, [r6, #0]
 80217c2:	6823      	ldr	r3, [r4, #0]
 80217c4:	0699      	lsls	r1, r3, #26
 80217c6:	bf42      	ittt	mi
 80217c8:	6833      	ldrmi	r3, [r6, #0]
 80217ca:	3302      	addmi	r3, #2
 80217cc:	6033      	strmi	r3, [r6, #0]
 80217ce:	6825      	ldr	r5, [r4, #0]
 80217d0:	f015 0506 	ands.w	r5, r5, #6
 80217d4:	d106      	bne.n	80217e4 <_printf_common+0x48>
 80217d6:	f104 0a19 	add.w	sl, r4, #25
 80217da:	68e3      	ldr	r3, [r4, #12]
 80217dc:	6832      	ldr	r2, [r6, #0]
 80217de:	1a9b      	subs	r3, r3, r2
 80217e0:	42ab      	cmp	r3, r5
 80217e2:	dc26      	bgt.n	8021832 <_printf_common+0x96>
 80217e4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80217e8:	1e13      	subs	r3, r2, #0
 80217ea:	6822      	ldr	r2, [r4, #0]
 80217ec:	bf18      	it	ne
 80217ee:	2301      	movne	r3, #1
 80217f0:	0692      	lsls	r2, r2, #26
 80217f2:	d42b      	bmi.n	802184c <_printf_common+0xb0>
 80217f4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80217f8:	4649      	mov	r1, r9
 80217fa:	4638      	mov	r0, r7
 80217fc:	47c0      	blx	r8
 80217fe:	3001      	adds	r0, #1
 8021800:	d01e      	beq.n	8021840 <_printf_common+0xa4>
 8021802:	6823      	ldr	r3, [r4, #0]
 8021804:	6922      	ldr	r2, [r4, #16]
 8021806:	f003 0306 	and.w	r3, r3, #6
 802180a:	2b04      	cmp	r3, #4
 802180c:	bf02      	ittt	eq
 802180e:	68e5      	ldreq	r5, [r4, #12]
 8021810:	6833      	ldreq	r3, [r6, #0]
 8021812:	1aed      	subeq	r5, r5, r3
 8021814:	68a3      	ldr	r3, [r4, #8]
 8021816:	bf0c      	ite	eq
 8021818:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802181c:	2500      	movne	r5, #0
 802181e:	4293      	cmp	r3, r2
 8021820:	bfc4      	itt	gt
 8021822:	1a9b      	subgt	r3, r3, r2
 8021824:	18ed      	addgt	r5, r5, r3
 8021826:	2600      	movs	r6, #0
 8021828:	341a      	adds	r4, #26
 802182a:	42b5      	cmp	r5, r6
 802182c:	d11a      	bne.n	8021864 <_printf_common+0xc8>
 802182e:	2000      	movs	r0, #0
 8021830:	e008      	b.n	8021844 <_printf_common+0xa8>
 8021832:	2301      	movs	r3, #1
 8021834:	4652      	mov	r2, sl
 8021836:	4649      	mov	r1, r9
 8021838:	4638      	mov	r0, r7
 802183a:	47c0      	blx	r8
 802183c:	3001      	adds	r0, #1
 802183e:	d103      	bne.n	8021848 <_printf_common+0xac>
 8021840:	f04f 30ff 	mov.w	r0, #4294967295
 8021844:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021848:	3501      	adds	r5, #1
 802184a:	e7c6      	b.n	80217da <_printf_common+0x3e>
 802184c:	18e1      	adds	r1, r4, r3
 802184e:	1c5a      	adds	r2, r3, #1
 8021850:	2030      	movs	r0, #48	; 0x30
 8021852:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8021856:	4422      	add	r2, r4
 8021858:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802185c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021860:	3302      	adds	r3, #2
 8021862:	e7c7      	b.n	80217f4 <_printf_common+0x58>
 8021864:	2301      	movs	r3, #1
 8021866:	4622      	mov	r2, r4
 8021868:	4649      	mov	r1, r9
 802186a:	4638      	mov	r0, r7
 802186c:	47c0      	blx	r8
 802186e:	3001      	adds	r0, #1
 8021870:	d0e6      	beq.n	8021840 <_printf_common+0xa4>
 8021872:	3601      	adds	r6, #1
 8021874:	e7d9      	b.n	802182a <_printf_common+0x8e>
	...

08021878 <_printf_i>:
 8021878:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802187c:	7e0f      	ldrb	r7, [r1, #24]
 802187e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021880:	2f78      	cmp	r7, #120	; 0x78
 8021882:	4691      	mov	r9, r2
 8021884:	4680      	mov	r8, r0
 8021886:	460c      	mov	r4, r1
 8021888:	469a      	mov	sl, r3
 802188a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802188e:	d807      	bhi.n	80218a0 <_printf_i+0x28>
 8021890:	2f62      	cmp	r7, #98	; 0x62
 8021892:	d80a      	bhi.n	80218aa <_printf_i+0x32>
 8021894:	2f00      	cmp	r7, #0
 8021896:	f000 80d4 	beq.w	8021a42 <_printf_i+0x1ca>
 802189a:	2f58      	cmp	r7, #88	; 0x58
 802189c:	f000 80c0 	beq.w	8021a20 <_printf_i+0x1a8>
 80218a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80218a4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80218a8:	e03a      	b.n	8021920 <_printf_i+0xa8>
 80218aa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80218ae:	2b15      	cmp	r3, #21
 80218b0:	d8f6      	bhi.n	80218a0 <_printf_i+0x28>
 80218b2:	a101      	add	r1, pc, #4	; (adr r1, 80218b8 <_printf_i+0x40>)
 80218b4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80218b8:	08021911 	.word	0x08021911
 80218bc:	08021925 	.word	0x08021925
 80218c0:	080218a1 	.word	0x080218a1
 80218c4:	080218a1 	.word	0x080218a1
 80218c8:	080218a1 	.word	0x080218a1
 80218cc:	080218a1 	.word	0x080218a1
 80218d0:	08021925 	.word	0x08021925
 80218d4:	080218a1 	.word	0x080218a1
 80218d8:	080218a1 	.word	0x080218a1
 80218dc:	080218a1 	.word	0x080218a1
 80218e0:	080218a1 	.word	0x080218a1
 80218e4:	08021a29 	.word	0x08021a29
 80218e8:	08021951 	.word	0x08021951
 80218ec:	080219e3 	.word	0x080219e3
 80218f0:	080218a1 	.word	0x080218a1
 80218f4:	080218a1 	.word	0x080218a1
 80218f8:	08021a4b 	.word	0x08021a4b
 80218fc:	080218a1 	.word	0x080218a1
 8021900:	08021951 	.word	0x08021951
 8021904:	080218a1 	.word	0x080218a1
 8021908:	080218a1 	.word	0x080218a1
 802190c:	080219eb 	.word	0x080219eb
 8021910:	682b      	ldr	r3, [r5, #0]
 8021912:	1d1a      	adds	r2, r3, #4
 8021914:	681b      	ldr	r3, [r3, #0]
 8021916:	602a      	str	r2, [r5, #0]
 8021918:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802191c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021920:	2301      	movs	r3, #1
 8021922:	e09f      	b.n	8021a64 <_printf_i+0x1ec>
 8021924:	6820      	ldr	r0, [r4, #0]
 8021926:	682b      	ldr	r3, [r5, #0]
 8021928:	0607      	lsls	r7, r0, #24
 802192a:	f103 0104 	add.w	r1, r3, #4
 802192e:	6029      	str	r1, [r5, #0]
 8021930:	d501      	bpl.n	8021936 <_printf_i+0xbe>
 8021932:	681e      	ldr	r6, [r3, #0]
 8021934:	e003      	b.n	802193e <_printf_i+0xc6>
 8021936:	0646      	lsls	r6, r0, #25
 8021938:	d5fb      	bpl.n	8021932 <_printf_i+0xba>
 802193a:	f9b3 6000 	ldrsh.w	r6, [r3]
 802193e:	2e00      	cmp	r6, #0
 8021940:	da03      	bge.n	802194a <_printf_i+0xd2>
 8021942:	232d      	movs	r3, #45	; 0x2d
 8021944:	4276      	negs	r6, r6
 8021946:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802194a:	485a      	ldr	r0, [pc, #360]	; (8021ab4 <_printf_i+0x23c>)
 802194c:	230a      	movs	r3, #10
 802194e:	e012      	b.n	8021976 <_printf_i+0xfe>
 8021950:	682b      	ldr	r3, [r5, #0]
 8021952:	6820      	ldr	r0, [r4, #0]
 8021954:	1d19      	adds	r1, r3, #4
 8021956:	6029      	str	r1, [r5, #0]
 8021958:	0605      	lsls	r5, r0, #24
 802195a:	d501      	bpl.n	8021960 <_printf_i+0xe8>
 802195c:	681e      	ldr	r6, [r3, #0]
 802195e:	e002      	b.n	8021966 <_printf_i+0xee>
 8021960:	0641      	lsls	r1, r0, #25
 8021962:	d5fb      	bpl.n	802195c <_printf_i+0xe4>
 8021964:	881e      	ldrh	r6, [r3, #0]
 8021966:	4853      	ldr	r0, [pc, #332]	; (8021ab4 <_printf_i+0x23c>)
 8021968:	2f6f      	cmp	r7, #111	; 0x6f
 802196a:	bf0c      	ite	eq
 802196c:	2308      	moveq	r3, #8
 802196e:	230a      	movne	r3, #10
 8021970:	2100      	movs	r1, #0
 8021972:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8021976:	6865      	ldr	r5, [r4, #4]
 8021978:	60a5      	str	r5, [r4, #8]
 802197a:	2d00      	cmp	r5, #0
 802197c:	bfa2      	ittt	ge
 802197e:	6821      	ldrge	r1, [r4, #0]
 8021980:	f021 0104 	bicge.w	r1, r1, #4
 8021984:	6021      	strge	r1, [r4, #0]
 8021986:	b90e      	cbnz	r6, 802198c <_printf_i+0x114>
 8021988:	2d00      	cmp	r5, #0
 802198a:	d04b      	beq.n	8021a24 <_printf_i+0x1ac>
 802198c:	4615      	mov	r5, r2
 802198e:	fbb6 f1f3 	udiv	r1, r6, r3
 8021992:	fb03 6711 	mls	r7, r3, r1, r6
 8021996:	5dc7      	ldrb	r7, [r0, r7]
 8021998:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802199c:	4637      	mov	r7, r6
 802199e:	42bb      	cmp	r3, r7
 80219a0:	460e      	mov	r6, r1
 80219a2:	d9f4      	bls.n	802198e <_printf_i+0x116>
 80219a4:	2b08      	cmp	r3, #8
 80219a6:	d10b      	bne.n	80219c0 <_printf_i+0x148>
 80219a8:	6823      	ldr	r3, [r4, #0]
 80219aa:	07de      	lsls	r6, r3, #31
 80219ac:	d508      	bpl.n	80219c0 <_printf_i+0x148>
 80219ae:	6923      	ldr	r3, [r4, #16]
 80219b0:	6861      	ldr	r1, [r4, #4]
 80219b2:	4299      	cmp	r1, r3
 80219b4:	bfde      	ittt	le
 80219b6:	2330      	movle	r3, #48	; 0x30
 80219b8:	f805 3c01 	strble.w	r3, [r5, #-1]
 80219bc:	f105 35ff 	addle.w	r5, r5, #4294967295
 80219c0:	1b52      	subs	r2, r2, r5
 80219c2:	6122      	str	r2, [r4, #16]
 80219c4:	f8cd a000 	str.w	sl, [sp]
 80219c8:	464b      	mov	r3, r9
 80219ca:	aa03      	add	r2, sp, #12
 80219cc:	4621      	mov	r1, r4
 80219ce:	4640      	mov	r0, r8
 80219d0:	f7ff fee4 	bl	802179c <_printf_common>
 80219d4:	3001      	adds	r0, #1
 80219d6:	d14a      	bne.n	8021a6e <_printf_i+0x1f6>
 80219d8:	f04f 30ff 	mov.w	r0, #4294967295
 80219dc:	b004      	add	sp, #16
 80219de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80219e2:	6823      	ldr	r3, [r4, #0]
 80219e4:	f043 0320 	orr.w	r3, r3, #32
 80219e8:	6023      	str	r3, [r4, #0]
 80219ea:	4833      	ldr	r0, [pc, #204]	; (8021ab8 <_printf_i+0x240>)
 80219ec:	2778      	movs	r7, #120	; 0x78
 80219ee:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80219f2:	6823      	ldr	r3, [r4, #0]
 80219f4:	6829      	ldr	r1, [r5, #0]
 80219f6:	061f      	lsls	r7, r3, #24
 80219f8:	f851 6b04 	ldr.w	r6, [r1], #4
 80219fc:	d402      	bmi.n	8021a04 <_printf_i+0x18c>
 80219fe:	065f      	lsls	r7, r3, #25
 8021a00:	bf48      	it	mi
 8021a02:	b2b6      	uxthmi	r6, r6
 8021a04:	07df      	lsls	r7, r3, #31
 8021a06:	bf48      	it	mi
 8021a08:	f043 0320 	orrmi.w	r3, r3, #32
 8021a0c:	6029      	str	r1, [r5, #0]
 8021a0e:	bf48      	it	mi
 8021a10:	6023      	strmi	r3, [r4, #0]
 8021a12:	b91e      	cbnz	r6, 8021a1c <_printf_i+0x1a4>
 8021a14:	6823      	ldr	r3, [r4, #0]
 8021a16:	f023 0320 	bic.w	r3, r3, #32
 8021a1a:	6023      	str	r3, [r4, #0]
 8021a1c:	2310      	movs	r3, #16
 8021a1e:	e7a7      	b.n	8021970 <_printf_i+0xf8>
 8021a20:	4824      	ldr	r0, [pc, #144]	; (8021ab4 <_printf_i+0x23c>)
 8021a22:	e7e4      	b.n	80219ee <_printf_i+0x176>
 8021a24:	4615      	mov	r5, r2
 8021a26:	e7bd      	b.n	80219a4 <_printf_i+0x12c>
 8021a28:	682b      	ldr	r3, [r5, #0]
 8021a2a:	6826      	ldr	r6, [r4, #0]
 8021a2c:	6961      	ldr	r1, [r4, #20]
 8021a2e:	1d18      	adds	r0, r3, #4
 8021a30:	6028      	str	r0, [r5, #0]
 8021a32:	0635      	lsls	r5, r6, #24
 8021a34:	681b      	ldr	r3, [r3, #0]
 8021a36:	d501      	bpl.n	8021a3c <_printf_i+0x1c4>
 8021a38:	6019      	str	r1, [r3, #0]
 8021a3a:	e002      	b.n	8021a42 <_printf_i+0x1ca>
 8021a3c:	0670      	lsls	r0, r6, #25
 8021a3e:	d5fb      	bpl.n	8021a38 <_printf_i+0x1c0>
 8021a40:	8019      	strh	r1, [r3, #0]
 8021a42:	2300      	movs	r3, #0
 8021a44:	6123      	str	r3, [r4, #16]
 8021a46:	4615      	mov	r5, r2
 8021a48:	e7bc      	b.n	80219c4 <_printf_i+0x14c>
 8021a4a:	682b      	ldr	r3, [r5, #0]
 8021a4c:	1d1a      	adds	r2, r3, #4
 8021a4e:	602a      	str	r2, [r5, #0]
 8021a50:	681d      	ldr	r5, [r3, #0]
 8021a52:	6862      	ldr	r2, [r4, #4]
 8021a54:	2100      	movs	r1, #0
 8021a56:	4628      	mov	r0, r5
 8021a58:	f7de fc42 	bl	80002e0 <memchr>
 8021a5c:	b108      	cbz	r0, 8021a62 <_printf_i+0x1ea>
 8021a5e:	1b40      	subs	r0, r0, r5
 8021a60:	6060      	str	r0, [r4, #4]
 8021a62:	6863      	ldr	r3, [r4, #4]
 8021a64:	6123      	str	r3, [r4, #16]
 8021a66:	2300      	movs	r3, #0
 8021a68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021a6c:	e7aa      	b.n	80219c4 <_printf_i+0x14c>
 8021a6e:	6923      	ldr	r3, [r4, #16]
 8021a70:	462a      	mov	r2, r5
 8021a72:	4649      	mov	r1, r9
 8021a74:	4640      	mov	r0, r8
 8021a76:	47d0      	blx	sl
 8021a78:	3001      	adds	r0, #1
 8021a7a:	d0ad      	beq.n	80219d8 <_printf_i+0x160>
 8021a7c:	6823      	ldr	r3, [r4, #0]
 8021a7e:	079b      	lsls	r3, r3, #30
 8021a80:	d413      	bmi.n	8021aaa <_printf_i+0x232>
 8021a82:	68e0      	ldr	r0, [r4, #12]
 8021a84:	9b03      	ldr	r3, [sp, #12]
 8021a86:	4298      	cmp	r0, r3
 8021a88:	bfb8      	it	lt
 8021a8a:	4618      	movlt	r0, r3
 8021a8c:	e7a6      	b.n	80219dc <_printf_i+0x164>
 8021a8e:	2301      	movs	r3, #1
 8021a90:	4632      	mov	r2, r6
 8021a92:	4649      	mov	r1, r9
 8021a94:	4640      	mov	r0, r8
 8021a96:	47d0      	blx	sl
 8021a98:	3001      	adds	r0, #1
 8021a9a:	d09d      	beq.n	80219d8 <_printf_i+0x160>
 8021a9c:	3501      	adds	r5, #1
 8021a9e:	68e3      	ldr	r3, [r4, #12]
 8021aa0:	9903      	ldr	r1, [sp, #12]
 8021aa2:	1a5b      	subs	r3, r3, r1
 8021aa4:	42ab      	cmp	r3, r5
 8021aa6:	dcf2      	bgt.n	8021a8e <_printf_i+0x216>
 8021aa8:	e7eb      	b.n	8021a82 <_printf_i+0x20a>
 8021aaa:	2500      	movs	r5, #0
 8021aac:	f104 0619 	add.w	r6, r4, #25
 8021ab0:	e7f5      	b.n	8021a9e <_printf_i+0x226>
 8021ab2:	bf00      	nop
 8021ab4:	08023d31 	.word	0x08023d31
 8021ab8:	08023d42 	.word	0x08023d42

08021abc <__sflush_r>:
 8021abc:	898a      	ldrh	r2, [r1, #12]
 8021abe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021ac2:	4605      	mov	r5, r0
 8021ac4:	0710      	lsls	r0, r2, #28
 8021ac6:	460c      	mov	r4, r1
 8021ac8:	d458      	bmi.n	8021b7c <__sflush_r+0xc0>
 8021aca:	684b      	ldr	r3, [r1, #4]
 8021acc:	2b00      	cmp	r3, #0
 8021ace:	dc05      	bgt.n	8021adc <__sflush_r+0x20>
 8021ad0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021ad2:	2b00      	cmp	r3, #0
 8021ad4:	dc02      	bgt.n	8021adc <__sflush_r+0x20>
 8021ad6:	2000      	movs	r0, #0
 8021ad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021adc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021ade:	2e00      	cmp	r6, #0
 8021ae0:	d0f9      	beq.n	8021ad6 <__sflush_r+0x1a>
 8021ae2:	2300      	movs	r3, #0
 8021ae4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021ae8:	682f      	ldr	r7, [r5, #0]
 8021aea:	6a21      	ldr	r1, [r4, #32]
 8021aec:	602b      	str	r3, [r5, #0]
 8021aee:	d032      	beq.n	8021b56 <__sflush_r+0x9a>
 8021af0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021af2:	89a3      	ldrh	r3, [r4, #12]
 8021af4:	075a      	lsls	r2, r3, #29
 8021af6:	d505      	bpl.n	8021b04 <__sflush_r+0x48>
 8021af8:	6863      	ldr	r3, [r4, #4]
 8021afa:	1ac0      	subs	r0, r0, r3
 8021afc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021afe:	b10b      	cbz	r3, 8021b04 <__sflush_r+0x48>
 8021b00:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021b02:	1ac0      	subs	r0, r0, r3
 8021b04:	2300      	movs	r3, #0
 8021b06:	4602      	mov	r2, r0
 8021b08:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021b0a:	6a21      	ldr	r1, [r4, #32]
 8021b0c:	4628      	mov	r0, r5
 8021b0e:	47b0      	blx	r6
 8021b10:	1c43      	adds	r3, r0, #1
 8021b12:	89a3      	ldrh	r3, [r4, #12]
 8021b14:	d106      	bne.n	8021b24 <__sflush_r+0x68>
 8021b16:	6829      	ldr	r1, [r5, #0]
 8021b18:	291d      	cmp	r1, #29
 8021b1a:	d82b      	bhi.n	8021b74 <__sflush_r+0xb8>
 8021b1c:	4a29      	ldr	r2, [pc, #164]	; (8021bc4 <__sflush_r+0x108>)
 8021b1e:	410a      	asrs	r2, r1
 8021b20:	07d6      	lsls	r6, r2, #31
 8021b22:	d427      	bmi.n	8021b74 <__sflush_r+0xb8>
 8021b24:	2200      	movs	r2, #0
 8021b26:	6062      	str	r2, [r4, #4]
 8021b28:	04d9      	lsls	r1, r3, #19
 8021b2a:	6922      	ldr	r2, [r4, #16]
 8021b2c:	6022      	str	r2, [r4, #0]
 8021b2e:	d504      	bpl.n	8021b3a <__sflush_r+0x7e>
 8021b30:	1c42      	adds	r2, r0, #1
 8021b32:	d101      	bne.n	8021b38 <__sflush_r+0x7c>
 8021b34:	682b      	ldr	r3, [r5, #0]
 8021b36:	b903      	cbnz	r3, 8021b3a <__sflush_r+0x7e>
 8021b38:	6560      	str	r0, [r4, #84]	; 0x54
 8021b3a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021b3c:	602f      	str	r7, [r5, #0]
 8021b3e:	2900      	cmp	r1, #0
 8021b40:	d0c9      	beq.n	8021ad6 <__sflush_r+0x1a>
 8021b42:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021b46:	4299      	cmp	r1, r3
 8021b48:	d002      	beq.n	8021b50 <__sflush_r+0x94>
 8021b4a:	4628      	mov	r0, r5
 8021b4c:	f7ff fc96 	bl	802147c <_free_r>
 8021b50:	2000      	movs	r0, #0
 8021b52:	6360      	str	r0, [r4, #52]	; 0x34
 8021b54:	e7c0      	b.n	8021ad8 <__sflush_r+0x1c>
 8021b56:	2301      	movs	r3, #1
 8021b58:	4628      	mov	r0, r5
 8021b5a:	47b0      	blx	r6
 8021b5c:	1c41      	adds	r1, r0, #1
 8021b5e:	d1c8      	bne.n	8021af2 <__sflush_r+0x36>
 8021b60:	682b      	ldr	r3, [r5, #0]
 8021b62:	2b00      	cmp	r3, #0
 8021b64:	d0c5      	beq.n	8021af2 <__sflush_r+0x36>
 8021b66:	2b1d      	cmp	r3, #29
 8021b68:	d001      	beq.n	8021b6e <__sflush_r+0xb2>
 8021b6a:	2b16      	cmp	r3, #22
 8021b6c:	d101      	bne.n	8021b72 <__sflush_r+0xb6>
 8021b6e:	602f      	str	r7, [r5, #0]
 8021b70:	e7b1      	b.n	8021ad6 <__sflush_r+0x1a>
 8021b72:	89a3      	ldrh	r3, [r4, #12]
 8021b74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021b78:	81a3      	strh	r3, [r4, #12]
 8021b7a:	e7ad      	b.n	8021ad8 <__sflush_r+0x1c>
 8021b7c:	690f      	ldr	r7, [r1, #16]
 8021b7e:	2f00      	cmp	r7, #0
 8021b80:	d0a9      	beq.n	8021ad6 <__sflush_r+0x1a>
 8021b82:	0793      	lsls	r3, r2, #30
 8021b84:	680e      	ldr	r6, [r1, #0]
 8021b86:	bf08      	it	eq
 8021b88:	694b      	ldreq	r3, [r1, #20]
 8021b8a:	600f      	str	r7, [r1, #0]
 8021b8c:	bf18      	it	ne
 8021b8e:	2300      	movne	r3, #0
 8021b90:	eba6 0807 	sub.w	r8, r6, r7
 8021b94:	608b      	str	r3, [r1, #8]
 8021b96:	f1b8 0f00 	cmp.w	r8, #0
 8021b9a:	dd9c      	ble.n	8021ad6 <__sflush_r+0x1a>
 8021b9c:	6a21      	ldr	r1, [r4, #32]
 8021b9e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021ba0:	4643      	mov	r3, r8
 8021ba2:	463a      	mov	r2, r7
 8021ba4:	4628      	mov	r0, r5
 8021ba6:	47b0      	blx	r6
 8021ba8:	2800      	cmp	r0, #0
 8021baa:	dc06      	bgt.n	8021bba <__sflush_r+0xfe>
 8021bac:	89a3      	ldrh	r3, [r4, #12]
 8021bae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021bb2:	81a3      	strh	r3, [r4, #12]
 8021bb4:	f04f 30ff 	mov.w	r0, #4294967295
 8021bb8:	e78e      	b.n	8021ad8 <__sflush_r+0x1c>
 8021bba:	4407      	add	r7, r0
 8021bbc:	eba8 0800 	sub.w	r8, r8, r0
 8021bc0:	e7e9      	b.n	8021b96 <__sflush_r+0xda>
 8021bc2:	bf00      	nop
 8021bc4:	dfbffffe 	.word	0xdfbffffe

08021bc8 <_fflush_r>:
 8021bc8:	b538      	push	{r3, r4, r5, lr}
 8021bca:	690b      	ldr	r3, [r1, #16]
 8021bcc:	4605      	mov	r5, r0
 8021bce:	460c      	mov	r4, r1
 8021bd0:	b913      	cbnz	r3, 8021bd8 <_fflush_r+0x10>
 8021bd2:	2500      	movs	r5, #0
 8021bd4:	4628      	mov	r0, r5
 8021bd6:	bd38      	pop	{r3, r4, r5, pc}
 8021bd8:	b118      	cbz	r0, 8021be2 <_fflush_r+0x1a>
 8021bda:	6a03      	ldr	r3, [r0, #32]
 8021bdc:	b90b      	cbnz	r3, 8021be2 <_fflush_r+0x1a>
 8021bde:	f7ff fa85 	bl	80210ec <__sinit>
 8021be2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021be6:	2b00      	cmp	r3, #0
 8021be8:	d0f3      	beq.n	8021bd2 <_fflush_r+0xa>
 8021bea:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021bec:	07d0      	lsls	r0, r2, #31
 8021bee:	d404      	bmi.n	8021bfa <_fflush_r+0x32>
 8021bf0:	0599      	lsls	r1, r3, #22
 8021bf2:	d402      	bmi.n	8021bfa <_fflush_r+0x32>
 8021bf4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021bf6:	f7ff fbd2 	bl	802139e <__retarget_lock_acquire_recursive>
 8021bfa:	4628      	mov	r0, r5
 8021bfc:	4621      	mov	r1, r4
 8021bfe:	f7ff ff5d 	bl	8021abc <__sflush_r>
 8021c02:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021c04:	07da      	lsls	r2, r3, #31
 8021c06:	4605      	mov	r5, r0
 8021c08:	d4e4      	bmi.n	8021bd4 <_fflush_r+0xc>
 8021c0a:	89a3      	ldrh	r3, [r4, #12]
 8021c0c:	059b      	lsls	r3, r3, #22
 8021c0e:	d4e1      	bmi.n	8021bd4 <_fflush_r+0xc>
 8021c10:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021c12:	f7ff fbc5 	bl	80213a0 <__retarget_lock_release_recursive>
 8021c16:	e7dd      	b.n	8021bd4 <_fflush_r+0xc>

08021c18 <__swbuf_r>:
 8021c18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021c1a:	460e      	mov	r6, r1
 8021c1c:	4614      	mov	r4, r2
 8021c1e:	4605      	mov	r5, r0
 8021c20:	b118      	cbz	r0, 8021c2a <__swbuf_r+0x12>
 8021c22:	6a03      	ldr	r3, [r0, #32]
 8021c24:	b90b      	cbnz	r3, 8021c2a <__swbuf_r+0x12>
 8021c26:	f7ff fa61 	bl	80210ec <__sinit>
 8021c2a:	69a3      	ldr	r3, [r4, #24]
 8021c2c:	60a3      	str	r3, [r4, #8]
 8021c2e:	89a3      	ldrh	r3, [r4, #12]
 8021c30:	071a      	lsls	r2, r3, #28
 8021c32:	d525      	bpl.n	8021c80 <__swbuf_r+0x68>
 8021c34:	6923      	ldr	r3, [r4, #16]
 8021c36:	b31b      	cbz	r3, 8021c80 <__swbuf_r+0x68>
 8021c38:	6823      	ldr	r3, [r4, #0]
 8021c3a:	6922      	ldr	r2, [r4, #16]
 8021c3c:	1a98      	subs	r0, r3, r2
 8021c3e:	6963      	ldr	r3, [r4, #20]
 8021c40:	b2f6      	uxtb	r6, r6
 8021c42:	4283      	cmp	r3, r0
 8021c44:	4637      	mov	r7, r6
 8021c46:	dc04      	bgt.n	8021c52 <__swbuf_r+0x3a>
 8021c48:	4621      	mov	r1, r4
 8021c4a:	4628      	mov	r0, r5
 8021c4c:	f7ff ffbc 	bl	8021bc8 <_fflush_r>
 8021c50:	b9e0      	cbnz	r0, 8021c8c <__swbuf_r+0x74>
 8021c52:	68a3      	ldr	r3, [r4, #8]
 8021c54:	3b01      	subs	r3, #1
 8021c56:	60a3      	str	r3, [r4, #8]
 8021c58:	6823      	ldr	r3, [r4, #0]
 8021c5a:	1c5a      	adds	r2, r3, #1
 8021c5c:	6022      	str	r2, [r4, #0]
 8021c5e:	701e      	strb	r6, [r3, #0]
 8021c60:	6962      	ldr	r2, [r4, #20]
 8021c62:	1c43      	adds	r3, r0, #1
 8021c64:	429a      	cmp	r2, r3
 8021c66:	d004      	beq.n	8021c72 <__swbuf_r+0x5a>
 8021c68:	89a3      	ldrh	r3, [r4, #12]
 8021c6a:	07db      	lsls	r3, r3, #31
 8021c6c:	d506      	bpl.n	8021c7c <__swbuf_r+0x64>
 8021c6e:	2e0a      	cmp	r6, #10
 8021c70:	d104      	bne.n	8021c7c <__swbuf_r+0x64>
 8021c72:	4621      	mov	r1, r4
 8021c74:	4628      	mov	r0, r5
 8021c76:	f7ff ffa7 	bl	8021bc8 <_fflush_r>
 8021c7a:	b938      	cbnz	r0, 8021c8c <__swbuf_r+0x74>
 8021c7c:	4638      	mov	r0, r7
 8021c7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021c80:	4621      	mov	r1, r4
 8021c82:	4628      	mov	r0, r5
 8021c84:	f000 f806 	bl	8021c94 <__swsetup_r>
 8021c88:	2800      	cmp	r0, #0
 8021c8a:	d0d5      	beq.n	8021c38 <__swbuf_r+0x20>
 8021c8c:	f04f 37ff 	mov.w	r7, #4294967295
 8021c90:	e7f4      	b.n	8021c7c <__swbuf_r+0x64>
	...

08021c94 <__swsetup_r>:
 8021c94:	b538      	push	{r3, r4, r5, lr}
 8021c96:	4b2a      	ldr	r3, [pc, #168]	; (8021d40 <__swsetup_r+0xac>)
 8021c98:	4605      	mov	r5, r0
 8021c9a:	6818      	ldr	r0, [r3, #0]
 8021c9c:	460c      	mov	r4, r1
 8021c9e:	b118      	cbz	r0, 8021ca8 <__swsetup_r+0x14>
 8021ca0:	6a03      	ldr	r3, [r0, #32]
 8021ca2:	b90b      	cbnz	r3, 8021ca8 <__swsetup_r+0x14>
 8021ca4:	f7ff fa22 	bl	80210ec <__sinit>
 8021ca8:	89a3      	ldrh	r3, [r4, #12]
 8021caa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021cae:	0718      	lsls	r0, r3, #28
 8021cb0:	d422      	bmi.n	8021cf8 <__swsetup_r+0x64>
 8021cb2:	06d9      	lsls	r1, r3, #27
 8021cb4:	d407      	bmi.n	8021cc6 <__swsetup_r+0x32>
 8021cb6:	2309      	movs	r3, #9
 8021cb8:	602b      	str	r3, [r5, #0]
 8021cba:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021cbe:	81a3      	strh	r3, [r4, #12]
 8021cc0:	f04f 30ff 	mov.w	r0, #4294967295
 8021cc4:	e034      	b.n	8021d30 <__swsetup_r+0x9c>
 8021cc6:	0758      	lsls	r0, r3, #29
 8021cc8:	d512      	bpl.n	8021cf0 <__swsetup_r+0x5c>
 8021cca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021ccc:	b141      	cbz	r1, 8021ce0 <__swsetup_r+0x4c>
 8021cce:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021cd2:	4299      	cmp	r1, r3
 8021cd4:	d002      	beq.n	8021cdc <__swsetup_r+0x48>
 8021cd6:	4628      	mov	r0, r5
 8021cd8:	f7ff fbd0 	bl	802147c <_free_r>
 8021cdc:	2300      	movs	r3, #0
 8021cde:	6363      	str	r3, [r4, #52]	; 0x34
 8021ce0:	89a3      	ldrh	r3, [r4, #12]
 8021ce2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021ce6:	81a3      	strh	r3, [r4, #12]
 8021ce8:	2300      	movs	r3, #0
 8021cea:	6063      	str	r3, [r4, #4]
 8021cec:	6923      	ldr	r3, [r4, #16]
 8021cee:	6023      	str	r3, [r4, #0]
 8021cf0:	89a3      	ldrh	r3, [r4, #12]
 8021cf2:	f043 0308 	orr.w	r3, r3, #8
 8021cf6:	81a3      	strh	r3, [r4, #12]
 8021cf8:	6923      	ldr	r3, [r4, #16]
 8021cfa:	b94b      	cbnz	r3, 8021d10 <__swsetup_r+0x7c>
 8021cfc:	89a3      	ldrh	r3, [r4, #12]
 8021cfe:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021d02:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021d06:	d003      	beq.n	8021d10 <__swsetup_r+0x7c>
 8021d08:	4621      	mov	r1, r4
 8021d0a:	4628      	mov	r0, r5
 8021d0c:	f000 f840 	bl	8021d90 <__smakebuf_r>
 8021d10:	89a0      	ldrh	r0, [r4, #12]
 8021d12:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021d16:	f010 0301 	ands.w	r3, r0, #1
 8021d1a:	d00a      	beq.n	8021d32 <__swsetup_r+0x9e>
 8021d1c:	2300      	movs	r3, #0
 8021d1e:	60a3      	str	r3, [r4, #8]
 8021d20:	6963      	ldr	r3, [r4, #20]
 8021d22:	425b      	negs	r3, r3
 8021d24:	61a3      	str	r3, [r4, #24]
 8021d26:	6923      	ldr	r3, [r4, #16]
 8021d28:	b943      	cbnz	r3, 8021d3c <__swsetup_r+0xa8>
 8021d2a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021d2e:	d1c4      	bne.n	8021cba <__swsetup_r+0x26>
 8021d30:	bd38      	pop	{r3, r4, r5, pc}
 8021d32:	0781      	lsls	r1, r0, #30
 8021d34:	bf58      	it	pl
 8021d36:	6963      	ldrpl	r3, [r4, #20]
 8021d38:	60a3      	str	r3, [r4, #8]
 8021d3a:	e7f4      	b.n	8021d26 <__swsetup_r+0x92>
 8021d3c:	2000      	movs	r0, #0
 8021d3e:	e7f7      	b.n	8021d30 <__swsetup_r+0x9c>
 8021d40:	24000158 	.word	0x24000158

08021d44 <__swhatbuf_r>:
 8021d44:	b570      	push	{r4, r5, r6, lr}
 8021d46:	460c      	mov	r4, r1
 8021d48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021d4c:	2900      	cmp	r1, #0
 8021d4e:	b096      	sub	sp, #88	; 0x58
 8021d50:	4615      	mov	r5, r2
 8021d52:	461e      	mov	r6, r3
 8021d54:	da0d      	bge.n	8021d72 <__swhatbuf_r+0x2e>
 8021d56:	89a3      	ldrh	r3, [r4, #12]
 8021d58:	f013 0f80 	tst.w	r3, #128	; 0x80
 8021d5c:	f04f 0100 	mov.w	r1, #0
 8021d60:	bf0c      	ite	eq
 8021d62:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8021d66:	2340      	movne	r3, #64	; 0x40
 8021d68:	2000      	movs	r0, #0
 8021d6a:	6031      	str	r1, [r6, #0]
 8021d6c:	602b      	str	r3, [r5, #0]
 8021d6e:	b016      	add	sp, #88	; 0x58
 8021d70:	bd70      	pop	{r4, r5, r6, pc}
 8021d72:	466a      	mov	r2, sp
 8021d74:	f000 f848 	bl	8021e08 <_fstat_r>
 8021d78:	2800      	cmp	r0, #0
 8021d7a:	dbec      	blt.n	8021d56 <__swhatbuf_r+0x12>
 8021d7c:	9901      	ldr	r1, [sp, #4]
 8021d7e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8021d82:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8021d86:	4259      	negs	r1, r3
 8021d88:	4159      	adcs	r1, r3
 8021d8a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021d8e:	e7eb      	b.n	8021d68 <__swhatbuf_r+0x24>

08021d90 <__smakebuf_r>:
 8021d90:	898b      	ldrh	r3, [r1, #12]
 8021d92:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021d94:	079d      	lsls	r5, r3, #30
 8021d96:	4606      	mov	r6, r0
 8021d98:	460c      	mov	r4, r1
 8021d9a:	d507      	bpl.n	8021dac <__smakebuf_r+0x1c>
 8021d9c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021da0:	6023      	str	r3, [r4, #0]
 8021da2:	6123      	str	r3, [r4, #16]
 8021da4:	2301      	movs	r3, #1
 8021da6:	6163      	str	r3, [r4, #20]
 8021da8:	b002      	add	sp, #8
 8021daa:	bd70      	pop	{r4, r5, r6, pc}
 8021dac:	ab01      	add	r3, sp, #4
 8021dae:	466a      	mov	r2, sp
 8021db0:	f7ff ffc8 	bl	8021d44 <__swhatbuf_r>
 8021db4:	9900      	ldr	r1, [sp, #0]
 8021db6:	4605      	mov	r5, r0
 8021db8:	4630      	mov	r0, r6
 8021dba:	f7ff f871 	bl	8020ea0 <_malloc_r>
 8021dbe:	b948      	cbnz	r0, 8021dd4 <__smakebuf_r+0x44>
 8021dc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021dc4:	059a      	lsls	r2, r3, #22
 8021dc6:	d4ef      	bmi.n	8021da8 <__smakebuf_r+0x18>
 8021dc8:	f023 0303 	bic.w	r3, r3, #3
 8021dcc:	f043 0302 	orr.w	r3, r3, #2
 8021dd0:	81a3      	strh	r3, [r4, #12]
 8021dd2:	e7e3      	b.n	8021d9c <__smakebuf_r+0xc>
 8021dd4:	89a3      	ldrh	r3, [r4, #12]
 8021dd6:	6020      	str	r0, [r4, #0]
 8021dd8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021ddc:	81a3      	strh	r3, [r4, #12]
 8021dde:	9b00      	ldr	r3, [sp, #0]
 8021de0:	6163      	str	r3, [r4, #20]
 8021de2:	9b01      	ldr	r3, [sp, #4]
 8021de4:	6120      	str	r0, [r4, #16]
 8021de6:	b15b      	cbz	r3, 8021e00 <__smakebuf_r+0x70>
 8021de8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021dec:	4630      	mov	r0, r6
 8021dee:	f000 f81d 	bl	8021e2c <_isatty_r>
 8021df2:	b128      	cbz	r0, 8021e00 <__smakebuf_r+0x70>
 8021df4:	89a3      	ldrh	r3, [r4, #12]
 8021df6:	f023 0303 	bic.w	r3, r3, #3
 8021dfa:	f043 0301 	orr.w	r3, r3, #1
 8021dfe:	81a3      	strh	r3, [r4, #12]
 8021e00:	89a3      	ldrh	r3, [r4, #12]
 8021e02:	431d      	orrs	r5, r3
 8021e04:	81a5      	strh	r5, [r4, #12]
 8021e06:	e7cf      	b.n	8021da8 <__smakebuf_r+0x18>

08021e08 <_fstat_r>:
 8021e08:	b538      	push	{r3, r4, r5, lr}
 8021e0a:	4d07      	ldr	r5, [pc, #28]	; (8021e28 <_fstat_r+0x20>)
 8021e0c:	2300      	movs	r3, #0
 8021e0e:	4604      	mov	r4, r0
 8021e10:	4608      	mov	r0, r1
 8021e12:	4611      	mov	r1, r2
 8021e14:	602b      	str	r3, [r5, #0]
 8021e16:	f7e0 f852 	bl	8001ebe <_fstat>
 8021e1a:	1c43      	adds	r3, r0, #1
 8021e1c:	d102      	bne.n	8021e24 <_fstat_r+0x1c>
 8021e1e:	682b      	ldr	r3, [r5, #0]
 8021e20:	b103      	cbz	r3, 8021e24 <_fstat_r+0x1c>
 8021e22:	6023      	str	r3, [r4, #0]
 8021e24:	bd38      	pop	{r3, r4, r5, pc}
 8021e26:	bf00      	nop
 8021e28:	2400eebc 	.word	0x2400eebc

08021e2c <_isatty_r>:
 8021e2c:	b538      	push	{r3, r4, r5, lr}
 8021e2e:	4d06      	ldr	r5, [pc, #24]	; (8021e48 <_isatty_r+0x1c>)
 8021e30:	2300      	movs	r3, #0
 8021e32:	4604      	mov	r4, r0
 8021e34:	4608      	mov	r0, r1
 8021e36:	602b      	str	r3, [r5, #0]
 8021e38:	f7e0 f846 	bl	8001ec8 <_isatty>
 8021e3c:	1c43      	adds	r3, r0, #1
 8021e3e:	d102      	bne.n	8021e46 <_isatty_r+0x1a>
 8021e40:	682b      	ldr	r3, [r5, #0]
 8021e42:	b103      	cbz	r3, 8021e46 <_isatty_r+0x1a>
 8021e44:	6023      	str	r3, [r4, #0]
 8021e46:	bd38      	pop	{r3, r4, r5, pc}
 8021e48:	2400eebc 	.word	0x2400eebc

08021e4c <_init>:
 8021e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021e4e:	bf00      	nop
 8021e50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021e52:	bc08      	pop	{r3}
 8021e54:	469e      	mov	lr, r3
 8021e56:	4770      	bx	lr

08021e58 <_fini>:
 8021e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021e5a:	bf00      	nop
 8021e5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021e5e:	bc08      	pop	{r3}
 8021e60:	469e      	mov	lr, r3
 8021e62:	4770      	bx	lr
