
STM32H743I-EVAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021c44  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001ee0  08021ee4  08021ee4  00031ee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  08023dc4  08023dc4  00033dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08023ddc  08023ddc  0010ddec  2**0
                  CONTENTS
  5 .ARM          00000000  08023ddc  08023ddc  0010ddec  2**0
                  CONTENTS
  6 .preinit_array 00000000  08023ddc  08023ddc  0010ddec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000014  08023ddc  08023ddc  00033ddc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08023df0  08023df0  00033df0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000160  24000000  08023df8  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000eefc  24000160  08023f58  00040160  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2400f05c  08023f58  0004f05c  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  0010ddec  2**0
                  CONTENTS, READONLY
 13 FontFlashSection 0000075c  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 TextFlashSection 00000090  9000075c  9000075c  0005075c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 ExtFlashSection 000bd600  900007ec  900007ec  000507ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .comment      000000c2  00000000  00000000  0010de1a  2**0
                  CONTENTS, READONLY
 17 .debug_line   0005f11d  00000000  00000000  0010dedc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 0000005e  00000000  00000000  0016cff9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_info   000f5ce8  00000000  00000000  0016d057  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_abbrev 0001904a  00000000  00000000  00262d3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 00003270  00000000  00000000  0027bd90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    001982c9  00000000  00000000  0027f000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_rnglists 00003898  00000000  00000000  004172c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_loclists 0001d5a9  00000000  00000000  0041ab61  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_macro  000486ae  00000000  00000000  0043810a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_frame  000093a8  00000000  00000000  004807b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	24000160 	.word	0x24000160
 80002bc:	00000000 	.word	0x00000000
 80002c0:	08021ecc 	.word	0x08021ecc

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	24000164 	.word	0x24000164
 80002dc:	08021ecc 	.word	0x08021ecc

080002e0 <memchr>:
 80002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002e4:	2a10      	cmp	r2, #16
 80002e6:	db2b      	blt.n	8000340 <memchr+0x60>
 80002e8:	f010 0f07 	tst.w	r0, #7
 80002ec:	d008      	beq.n	8000300 <memchr+0x20>
 80002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002f2:	3a01      	subs	r2, #1
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d02d      	beq.n	8000354 <memchr+0x74>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	b342      	cbz	r2, 8000350 <memchr+0x70>
 80002fe:	d1f6      	bne.n	80002ee <memchr+0xe>
 8000300:	b4f0      	push	{r4, r5, r6, r7}
 8000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800030a:	f022 0407 	bic.w	r4, r2, #7
 800030e:	f07f 0700 	mvns.w	r7, #0
 8000312:	2300      	movs	r3, #0
 8000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000318:	3c08      	subs	r4, #8
 800031a:	ea85 0501 	eor.w	r5, r5, r1
 800031e:	ea86 0601 	eor.w	r6, r6, r1
 8000322:	fa85 f547 	uadd8	r5, r5, r7
 8000326:	faa3 f587 	sel	r5, r3, r7
 800032a:	fa86 f647 	uadd8	r6, r6, r7
 800032e:	faa5 f687 	sel	r6, r5, r7
 8000332:	b98e      	cbnz	r6, 8000358 <memchr+0x78>
 8000334:	d1ee      	bne.n	8000314 <memchr+0x34>
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800033c:	f002 0207 	and.w	r2, r2, #7
 8000340:	b132      	cbz	r2, 8000350 <memchr+0x70>
 8000342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000346:	3a01      	subs	r2, #1
 8000348:	ea83 0301 	eor.w	r3, r3, r1
 800034c:	b113      	cbz	r3, 8000354 <memchr+0x74>
 800034e:	d1f8      	bne.n	8000342 <memchr+0x62>
 8000350:	2000      	movs	r0, #0
 8000352:	4770      	bx	lr
 8000354:	3801      	subs	r0, #1
 8000356:	4770      	bx	lr
 8000358:	2d00      	cmp	r5, #0
 800035a:	bf06      	itte	eq
 800035c:	4635      	moveq	r5, r6
 800035e:	3803      	subeq	r0, #3
 8000360:	3807      	subne	r0, #7
 8000362:	f015 0f01 	tst.w	r5, #1
 8000366:	d107      	bne.n	8000378 <memchr+0x98>
 8000368:	3001      	adds	r0, #1
 800036a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800036e:	bf02      	ittt	eq
 8000370:	3001      	addeq	r0, #1
 8000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000376:	3001      	addeq	r0, #1
 8000378:	bcf0      	pop	{r4, r5, r6, r7}
 800037a:	3801      	subs	r0, #1
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 80003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000386:	e003      	b.n	8000390 <LoopCopyDataInit>

08000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000388:	4b0c      	ldr	r3, [pc, #48]	; (80003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800038e:	3104      	adds	r1, #4

08000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000390:	480b      	ldr	r0, [pc, #44]	; (80003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000392:	4b0c      	ldr	r3, [pc, #48]	; (80003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000398:	d3f6      	bcc.n	8000388 <CopyDataInit>
  ldr  r2, =_sbss
 800039a:	4a0b      	ldr	r2, [pc, #44]	; (80003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800039c:	e002      	b.n	80003a4 <LoopFillZerobss>

0800039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80003a0:	f842 3b04 	str.w	r3, [r2], #4

080003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80003a4:	4b09      	ldr	r3, [pc, #36]	; (80003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80003a8:	d3f9      	bcc.n	800039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80003aa:	f004 fe3d 	bl	8005028 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80003ae:	f021 f811 	bl	80213d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80003b2:	f000 ffcf 	bl	8001354 <main>
  bx  lr    
 80003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
 80003bc:	08023df8 	.word	0x08023df8
  ldr  r0, =_sdata
 80003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
 80003c4:	24000160 	.word	0x24000160
  ldr  r2, =_sbss
 80003c8:	24000160 	.word	0x24000160
  ldr  r3, = _ebss
 80003cc:	2400f05c 	.word	0x2400f05c

080003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80003d0:	e7fe      	b.n	80003d0 <ADC3_IRQHandler>

080003d2 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80003d2:	4770      	bx	lr

080003d4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80003d4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80003d6:	f000 fd91 	bl	8000efc <touchgfx_components_init>
  touchgfx_init();
}
 80003da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80003de:	f000 bd1b 	b.w	8000e18 <touchgfx_init>

080003e2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80003e2:	f000 bd8d 	b.w	8000f00 <touchgfx_taskEntry>

080003e6 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 80003e6:	6840      	ldr	r0, [r0, #4]
    }
 80003e8:	4770      	bx	lr

080003ea <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 80003ea:	6041      	str	r1, [r0, #4]
    }
 80003ec:	4770      	bx	lr
	...

080003f0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 80003f0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80003f4:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 80003f8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003fc:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8000400:	4b05      	ldr	r3, [pc, #20]	; (8000418 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8000402:	4a06      	ldr	r2, [pc, #24]	; (800041c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8000404:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
 8000408:	430a      	orrs	r2, r1
 800040a:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 800040e:	681a      	ldr	r2, [r3, #0]
 8000410:	f042 0201 	orr.w	r2, r2, #1
 8000414:	601a      	str	r2, [r3, #0]
}
 8000416:	4770      	bx	lr
 8000418:	e0001000 	.word	0xe0001000
 800041c:	c5acce55 	.word	0xc5acce55

08000420 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000420:	1a51      	subs	r1, r2, r1
 8000422:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000426:	fbb1 f0f3 	udiv	r0, r1, r3
 800042a:	4770      	bx	lr

0800042c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 800042c:	4b01      	ldr	r3, [pc, #4]	; (8000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 800042e:	6858      	ldr	r0, [r3, #4]
}
 8000430:	4770      	bx	lr
 8000432:	bf00      	nop
 8000434:	e0001000 	.word	0xe0001000

08000438 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000438:	4770      	bx	lr

0800043a <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800043a:	b510      	push	{r4, lr}
 800043c:	4604      	mov	r4, r0
 800043e:	210c      	movs	r1, #12
 8000440:	f020 fceb 	bl	8020e1a <_ZdlPvj>
 8000444:	4620      	mov	r0, r4
 8000446:	bd10      	pop	{r4, pc}

08000448 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000448:	6803      	ldr	r3, [r0, #0]
{
 800044a:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800044c:	691b      	ldr	r3, [r3, #16]
{
 800044e:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000450:	b131      	cbz	r1, 8000460 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000452:	4798      	blx	r3
 8000454:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000456:	6863      	ldr	r3, [r4, #4]
 8000458:	1a9b      	subs	r3, r3, r2
 800045a:	4418      	add	r0, r3
 800045c:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 800045e:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000460:	4798      	blx	r3
 8000462:	60a0      	str	r0, [r4, #8]
}
 8000464:	e7fb      	b.n	800045e <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000466 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000466:	4770      	bx	lr

08000468 <_ZN20STM32TouchControllerD0Ev>:
 8000468:	b510      	push	{r4, lr}
 800046a:	4604      	mov	r4, r0
 800046c:	2104      	movs	r1, #4
 800046e:	f020 fcd4 	bl	8020e1a <_ZdlPvj>
 8000472:	4620      	mov	r0, r4
 8000474:	bd10      	pop	{r4, pc}
	...

08000478 <_ZN20STM32TouchController4initEv>:

#include "stm32h7xx_hal.h"
#include "stm32h743i_eval_ts.h"

void STM32TouchController::init()
{
 8000478:	b530      	push	{r4, r5, lr}
    int trials = 10;
    TS_Init_t hTS;

    /* Initialize the Touch screen */
    hTS.Width = 640;
    hTS.Height = 480;
 800047a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
{
 800047e:	b085      	sub	sp, #20
    hTS.Height = 480;
 8000480:	f44f 7220 	mov.w	r2, #640	; 0x280
    hTS.Orientation = TS_SWAP_NONE;
    hTS.Accuracy = 5;
 8000484:	2101      	movs	r1, #1
 8000486:	250b      	movs	r5, #11
    hTS.Height = 480;
 8000488:	e9cd 2300 	strd	r2, r3, [sp]
    hTS.Accuracy = 5;
 800048c:	2305      	movs	r3, #5
 800048e:	e9cd 1302 	strd	r1, r3, [sp, #8]

    do
    {
        result = BSP_TS_Init(0, &hTS);
 8000492:	4669      	mov	r1, sp
 8000494:	2000      	movs	r0, #0
 8000496:	f004 fcb1 	bl	8004dfc <BSP_TS_Init>
 800049a:	4604      	mov	r4, r0
        HAL_Delay(10);
 800049c:	200a      	movs	r0, #10
    } while ((result != BSP_ERROR_NONE) && (trials-- > 0));
 800049e:	b2e4      	uxtb	r4, r4
        HAL_Delay(10);
 80004a0:	f004 fe3e 	bl	8005120 <HAL_Delay>
    } while ((result != BSP_ERROR_NONE) && (trials-- > 0));
 80004a4:	b13c      	cbz	r4, 80004b6 <_ZN20STM32TouchController4initEv+0x3e>
 80004a6:	3d01      	subs	r5, #1
 80004a8:	d1f3      	bne.n	8000492 <_ZN20STM32TouchController4initEv+0x1a>

    assert(result == BSP_ERROR_NONE);
 80004aa:	4b04      	ldr	r3, [pc, #16]	; (80004bc <_ZN20STM32TouchController4initEv+0x44>)
 80004ac:	212e      	movs	r1, #46	; 0x2e
 80004ae:	4a04      	ldr	r2, [pc, #16]	; (80004c0 <_ZN20STM32TouchController4initEv+0x48>)
 80004b0:	4804      	ldr	r0, [pc, #16]	; (80004c4 <_ZN20STM32TouchController4initEv+0x4c>)
 80004b2:	f020 fce1 	bl	8020e78 <__assert_func>
}
 80004b6:	b005      	add	sp, #20
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	bf00      	nop
 80004bc:	08021f4c 	.word	0x08021f4c
 80004c0:	08021f65 	.word	0x08021f65
 80004c4:	08021f8f 	.word	0x08021f8f

080004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

static int32_t lastX, lastY;
static uint32_t lastTime;

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80004c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ca:	b085      	sub	sp, #20
 80004cc:	460e      	mov	r6, r1
    TS_State_t state;
    unsigned int time;
    BSP_TS_GetState(0, &state);
 80004ce:	2000      	movs	r0, #0
{
 80004d0:	4615      	mov	r5, r2
    BSP_TS_GetState(0, &state);
 80004d2:	a901      	add	r1, sp, #4
 80004d4:	4f12      	ldr	r7, [pc, #72]	; (8000520 <_ZN20STM32TouchController11sampleTouchERlS0_+0x58>)
 80004d6:	f004 fd45 	bl	8004f64 <BSP_TS_GetState>
    if (state.TouchDetected)
 80004da:	9c01      	ldr	r4, [sp, #4]
 80004dc:	b174      	cbz	r4, 80004fc <_ZN20STM32TouchController11sampleTouchERlS0_+0x34>
    {
        x = lastX = state.TouchX;
 80004de:	9b02      	ldr	r3, [sp, #8]
 80004e0:	4a10      	ldr	r2, [pc, #64]	; (8000524 <_ZN20STM32TouchController11sampleTouchERlS0_+0x5c>)
 80004e2:	6033      	str	r3, [r6, #0]
 80004e4:	6013      	str	r3, [r2, #0]
        y = lastY = state.TouchY;
 80004e6:	9b03      	ldr	r3, [sp, #12]
 80004e8:	4a0f      	ldr	r2, [pc, #60]	; (8000528 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 80004ea:	602b      	str	r3, [r5, #0]
 80004ec:	6013      	str	r3, [r2, #0]
        lastTime = HAL_GetTick();
 80004ee:	f004 fe11 	bl	8005114 <HAL_GetTick>
 80004f2:	6038      	str	r0, [r7, #0]
    if (((lastTime + 120) > time)
            && (lastX > 0) && (lastY > 0))
    {
        x = lastX;
        y = lastY;
        return true;
 80004f4:	2401      	movs	r4, #1
    }

    return false;
}
 80004f6:	4620      	mov	r0, r4
 80004f8:	b005      	add	sp, #20
 80004fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    time = HAL_GetTick();
 80004fc:	f004 fe0a 	bl	8005114 <HAL_GetTick>
    if (((lastTime + 120) > time)
 8000500:	683b      	ldr	r3, [r7, #0]
 8000502:	3378      	adds	r3, #120	; 0x78
 8000504:	4298      	cmp	r0, r3
 8000506:	d2f6      	bcs.n	80004f6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
            && (lastX > 0) && (lastY > 0))
 8000508:	4b06      	ldr	r3, [pc, #24]	; (8000524 <_ZN20STM32TouchController11sampleTouchERlS0_+0x5c>)
 800050a:	681a      	ldr	r2, [r3, #0]
 800050c:	2a00      	cmp	r2, #0
 800050e:	ddf2      	ble.n	80004f6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
 8000510:	4b05      	ldr	r3, [pc, #20]	; (8000528 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	2b00      	cmp	r3, #0
 8000516:	ddee      	ble.n	80004f6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2e>
        x = lastX;
 8000518:	6032      	str	r2, [r6, #0]
        y = lastY;
 800051a:	602b      	str	r3, [r5, #0]
 800051c:	e7ea      	b.n	80004f4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>
 800051e:	bf00      	nop
 8000520:	24000184 	.word	0x24000184
 8000524:	2400017c 	.word	0x2400017c
 8000528:	24000180 	.word	0x24000180

0800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800052c:	2803      	cmp	r0, #3
 800052e:	d823      	bhi.n	8000578 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 8000530:	e8df f000 	tbb	[pc, r0]
 8000534:	1a130a02 	.word	0x1a130a02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000538:	4b10      	ldr	r3, [pc, #64]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800053a:	2108      	movs	r1, #8
 800053c:	681a      	ldr	r2, [r3, #0]
 800053e:	fab2 f282 	clz	r2, r2
 8000542:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000544:	480e      	ldr	r0, [pc, #56]	; (8000580 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8000546:	e006      	b.n	8000556 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000548:	4b0c      	ldr	r3, [pc, #48]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800054a:	2104      	movs	r1, #4
 800054c:	685a      	ldr	r2, [r3, #4]
 800054e:	fab2 f282 	clz	r2, r2
 8000552:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000554:	480b      	ldr	r0, [pc, #44]	; (8000584 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000556:	f005 b963 	b.w	8005820 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800055a:	4b08      	ldr	r3, [pc, #32]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800055c:	2102      	movs	r1, #2
 800055e:	689a      	ldr	r2, [r3, #8]
 8000560:	fab2 f282 	clz	r2, r2
 8000564:	0952      	lsrs	r2, r2, #5
 8000566:	e7f5      	b.n	8000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000568:	4b04      	ldr	r3, [pc, #16]	; (800057c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800056a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800056e:	68da      	ldr	r2, [r3, #12]
 8000570:	fab2 f282 	clz	r2, r2
 8000574:	0952      	lsrs	r2, r2, #5
 8000576:	e7e5      	b.n	8000544 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop
 800057c:	24000188 	.word	0x24000188
 8000580:	58020400 	.word	0x58020400
 8000584:	58020800 	.word	0x58020800

08000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000588:	2803      	cmp	r0, #3
 800058a:	d823      	bhi.n	80005d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 800058c:	e8df f000 	tbb	[pc, r0]
 8000590:	1a130a02 	.word	0x1a130a02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000594:	4b10      	ldr	r3, [pc, #64]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000596:	2108      	movs	r1, #8
 8000598:	681a      	ldr	r2, [r3, #0]
 800059a:	3a00      	subs	r2, #0
 800059c:	bf18      	it	ne
 800059e:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80005a0:	480e      	ldr	r0, [pc, #56]	; (80005dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80005a2:	e006      	b.n	80005b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80005a4:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80005a6:	2104      	movs	r1, #4
 80005a8:	685a      	ldr	r2, [r3, #4]
 80005aa:	3a00      	subs	r2, #0
 80005ac:	bf18      	it	ne
 80005ae:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80005b0:	480b      	ldr	r0, [pc, #44]	; (80005e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80005b2:	f005 b935 	b.w	8005820 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80005b6:	4b08      	ldr	r3, [pc, #32]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80005b8:	2102      	movs	r1, #2
 80005ba:	689a      	ldr	r2, [r3, #8]
 80005bc:	3a00      	subs	r2, #0
 80005be:	bf18      	it	ne
 80005c0:	2201      	movne	r2, #1
 80005c2:	e7f5      	b.n	80005b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80005c4:	4b04      	ldr	r3, [pc, #16]	; (80005d8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80005c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80005ca:	68da      	ldr	r2, [r3, #12]
 80005cc:	3a00      	subs	r2, #0
 80005ce:	bf18      	it	ne
 80005d0:	2201      	movne	r2, #1
 80005d2:	e7e5      	b.n	80005a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80005d4:	4770      	bx	lr
 80005d6:	bf00      	nop
 80005d8:	24000188 	.word	0x24000188
 80005dc:	58020400 	.word	0x58020400
 80005e0:	58020800 	.word	0x58020800

080005e4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80005e4:	2803      	cmp	r0, #3
 80005e6:	d80f      	bhi.n	8000608 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 80005e8:	e8df f000 	tbb	[pc, r0]
 80005ec:	0b090502 	.word	0x0b090502
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80005f0:	2108      	movs	r1, #8
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80005f2:	4806      	ldr	r0, [pc, #24]	; (800060c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
 80005f4:	e001      	b.n	80005fa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80005f6:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80005f8:	4805      	ldr	r0, [pc, #20]	; (8000610 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80005fa:	f005 b916 	b.w	800582a <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80005fe:	2102      	movs	r1, #2
 8000600:	e7fa      	b.n	80005f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000602:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000606:	e7f4      	b.n	80005f2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000608:	4770      	bx	lr
 800060a:	bf00      	nop
 800060c:	58020400 	.word	0x58020400
 8000610:	58020800 	.word	0x58020800

08000614 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000614:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000616:	2803      	cmp	r0, #3
 8000618:	d813      	bhi.n	8000642 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 800061a:	e8df f000 	tbb	[pc, r0]
 800061e:	0502      	.short	0x0502
 8000620:	0f0d      	.short	0x0f0d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000622:	2108      	movs	r1, #8
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000624:	4808      	ldr	r0, [pc, #32]	; (8000648 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
 8000626:	e001      	b.n	800062c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x18>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000628:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800062a:	4808      	ldr	r0, [pc, #32]	; (800064c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800062c:	f005 f8f2 	bl	8005814 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000630:	1e43      	subs	r3, r0, #1
 8000632:	4258      	negs	r0, r3
 8000634:	4158      	adcs	r0, r3
 8000636:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000638:	2102      	movs	r1, #2
 800063a:	e7f6      	b.n	800062a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800063c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000640:	e7f0      	b.n	8000624 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000642:	2000      	movs	r0, #0
 8000644:	e7f4      	b.n	8000630 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000646:	bf00      	nop
 8000648:	58020400 	.word	0x58020400
 800064c:	58020800 	.word	0x58020800

08000650 <_ZN8touchgfx4GPIO4initEv>:
{
 8000650:	b570      	push	{r4, r5, r6, lr}
 8000652:	4d08      	ldr	r5, [pc, #32]	; (8000674 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000654:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000656:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000658:	b2e0      	uxtb	r0, r4
 800065a:	f7ff ffdb 	bl	8000614 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800065e:	b118      	cbz	r0, 8000668 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000660:	682b      	ldr	r3, [r5, #0]
 8000662:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000664:	bf18      	it	ne
 8000666:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000668:	3401      	adds	r4, #1
 800066a:	3504      	adds	r5, #4
 800066c:	2c05      	cmp	r4, #5
 800066e:	d1f3      	bne.n	8000658 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000670:	bd70      	pop	{r4, r5, r6, pc}
 8000672:	bf00      	nop
 8000674:	24000188 	.word	0x24000188

08000678 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000678:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800067a:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800067e:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8000682:	4770      	bx	lr

08000684 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000684:	2000      	movs	r0, #0
 8000686:	4770      	bx	lr

08000688 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000688:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800068a:	3900      	subs	r1, #0
 800068c:	4b02      	ldr	r3, [pc, #8]	; (8000698 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 800068e:	bf18      	it	ne
 8000690:	2101      	movne	r1, #1
 8000692:	7019      	strb	r1, [r3, #0]
    }
 8000694:	4770      	bx	lr
 8000696:	bf00      	nop
 8000698:	2400e423 	.word	0x2400e423

0800069c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800069c:	2000      	movs	r0, #0
 800069e:	4770      	bx	lr

080006a0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80006a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80006a2:	b10b      	cbz	r3, 80006a8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80006a4:	4608      	mov	r0, r1
 80006a6:	4718      	bx	r3
        }
    }
 80006a8:	4770      	bx	lr

080006aa <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80006aa:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80006ae:	4770      	bx	lr

080006b0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80006b0:	6840      	ldr	r0, [r0, #4]
 80006b2:	6803      	ldr	r3, [r0, #0]
 80006b4:	699b      	ldr	r3, [r3, #24]
 80006b6:	4718      	bx	r3

080006b8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80006b8:	4770      	bx	lr
	...

080006bc <_ZN11TouchGFXHAL10initializeEv>:
#include "task.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 80006bc:	b538      	push	{r3, r4, r5, lr}
 80006be:	4604      	mov	r4, r0
    // Calling parent implementation of initialize().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.
    GPIO::init();
 80006c0:	f7ff ffc6 	bl	8000650 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80006c4:	4620      	mov	r0, r4
    setAnimationStorage((void*)0xD012C000);  // Add animation storage
    instrumentation.init();
 80006c6:	f104 057c 	add.w	r5, r4, #124	; 0x7c
    TouchGFXGeneratedHAL::initialize();
 80006ca:	f000 fd0d 	bl	80010e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)0xD012C000);  // Add animation storage
 80006ce:	6823      	ldr	r3, [r4, #0]
 80006d0:	4906      	ldr	r1, [pc, #24]	; (80006ec <_ZN11TouchGFXHAL10initializeEv+0x30>)
 80006d2:	4620      	mov	r0, r4
 80006d4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80006d8:	4798      	blx	r3
    instrumentation.init();
 80006da:	4628      	mov	r0, r5
 80006dc:	f7ff fe88 	bl	80003f0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80006e0:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 80006e2:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 80006e4:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 80006e8:	bd38      	pop	{r3, r4, r5, pc}
 80006ea:	bf00      	nop
 80006ec:	d012c000 	.word	0xd012c000

080006f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80006f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80006f2:	6803      	ldr	r3, [r0, #0]
{
 80006f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80006f6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80006fa:	4798      	blx	r3
    enableInterrupts();
 80006fc:	6823      	ldr	r3, [r4, #0]
 80006fe:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000700:	4620      	mov	r0, r4
 8000702:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000704:	f000 f910 	bl	8000928 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000708:	6823      	ldr	r3, [r4, #0]
 800070a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800070c:	e7f8      	b.n	8000700 <_ZN11TouchGFXHAL9taskEntryEv+0x10>

0800070e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800070e:	b510      	push	{r4, lr}
 8000710:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000712:	f00b f8a7 	bl	800b864 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000716:	6823      	ldr	r3, [r4, #0]
 8000718:	4620      	mov	r0, r4
 800071a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 800071e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000722:	4718      	bx	r3

08000724 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000724:	f000 bcd2 	b.w	80010cc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000728 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000728:	f000 bcd6 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800072c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800072c:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800072e:	f000 fcf9 	bl	8001124 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8000732:	4910      	ldr	r1, [pc, #64]	; (8000774 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 8000734:	2300      	movs	r3, #0
 8000736:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800073a:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800073e:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8000742:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000746:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800074a:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800074e:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8000750:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000754:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8000756:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800075a:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800075c:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8000760:	d2f9      	bcs.n	8000756 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 8000762:	3b20      	subs	r3, #32
 8000764:	f113 0f20 	cmn.w	r3, #32
 8000768:	d1f2      	bne.n	8000750 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 800076a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800076e:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 8000772:	bd70      	pop	{r4, r5, r6, pc}
 8000774:	e000ed00 	.word	0xe000ed00

08000778 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000778:	f000 bc84 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800077c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800077c:	f000 bd1a 	b.w	80011b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000780 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000780:	f000 bd04 	b.w	800118c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000784 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000784:	f000 bc88 	b.w	8001098 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000788 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000788:	f00a bad8 	b.w	800ad3c <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800078c <_ZN11TouchGFXHALD0Ev>:
 800078c:	b510      	push	{r4, lr}
 800078e:	4604      	mov	r4, r0
 8000790:	2188      	movs	r1, #136	; 0x88
 8000792:	f020 fb42 	bl	8020e1a <_ZdlPvj>
 8000796:	4620      	mov	r0, r4
 8000798:	bd10      	pop	{r4, pc}

0800079a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800079a:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800079e:	b11b      	cbz	r3, 80007a8 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80007a0:	6840      	ldr	r0, [r0, #4]
 80007a2:	6803      	ldr	r3, [r0, #0]
 80007a4:	681b      	ldr	r3, [r3, #0]
 80007a6:	4718      	bx	r3
    }
 80007a8:	4618      	mov	r0, r3
 80007aa:	4770      	bx	lr

080007ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80007ac:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 80007b0:	4b0d      	ldr	r3, [pc, #52]	; (80007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 80007b2:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80007b4:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80007b8:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80007ba:	428c      	cmp	r4, r1
 80007bc:	d009      	beq.n	80007d2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80007be:	b93a      	cbnz	r2, 80007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 80007c0:	490a      	ldr	r1, [pc, #40]	; (80007ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007c2:	4a0b      	ldr	r2, [pc, #44]	; (80007f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80007c4:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007c6:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80007c8:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80007ca:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007cc:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 80007ce:	701a      	strb	r2, [r3, #0]
        }
    }
 80007d0:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80007d2:	2a00      	cmp	r2, #0
 80007d4:	d0fc      	beq.n	80007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007d6:	4a06      	ldr	r2, [pc, #24]	; (80007f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80007d8:	4904      	ldr	r1, [pc, #16]	; (80007ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007da:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80007dc:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80007de:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80007e0:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 80007e2:	2200      	movs	r2, #0
 80007e4:	e7f3      	b.n	80007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80007e6:	bf00      	nop
 80007e8:	2400e41c 	.word	0x2400e41c
 80007ec:	2400e41a 	.word	0x2400e41a
 80007f0:	2400e418 	.word	0x2400e418

080007f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	460d      	mov	r5, r1
 80007f8:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007fa:	b935      	cbnz	r5, 800080a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80007fc:	4b09      	ldr	r3, [pc, #36]	; (8000824 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007fe:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000802:	4a09      	ldr	r2, [pc, #36]	; (8000828 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000804:	4809      	ldr	r0, [pc, #36]	; (800082c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000806:	f020 fb37 	bl	8020e78 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800080a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800080e:	3a00      	subs	r2, #0
 8000810:	4b07      	ldr	r3, [pc, #28]	; (8000830 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000812:	bf18      	it	ne
 8000814:	2201      	movne	r2, #1
 8000816:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000818:	6803      	ldr	r3, [r0, #0]
    }
 800081a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800081e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000822:	4718      	bx	r3
 8000824:	08021fec 	.word	0x08021fec
 8000828:	08022024 	.word	0x08022024
 800082c:	08022072 	.word	0x08022072
 8000830:	2400e422 	.word	0x2400e422

08000834 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000834:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000836:	4b09      	ldr	r3, [pc, #36]	; (800085c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000838:	881b      	ldrh	r3, [r3, #0]
 800083a:	428b      	cmp	r3, r1
 800083c:	d803      	bhi.n	8000846 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800083e:	4b08      	ldr	r3, [pc, #32]	; (8000860 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000840:	881b      	ldrh	r3, [r3, #0]
 8000842:	4293      	cmp	r3, r2
 8000844:	d905      	bls.n	8000852 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000846:	4b07      	ldr	r3, [pc, #28]	; (8000864 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000848:	219e      	movs	r1, #158	; 0x9e
 800084a:	4a07      	ldr	r2, [pc, #28]	; (8000868 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800084c:	4807      	ldr	r0, [pc, #28]	; (800086c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800084e:	f020 fb13 	bl	8020e78 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000852:	4b07      	ldr	r3, [pc, #28]	; (8000870 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000854:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000856:	4b07      	ldr	r3, [pc, #28]	; (8000874 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000858:	801a      	strh	r2, [r3, #0]
    }
 800085a:	bd08      	pop	{r3, pc}
 800085c:	2400e418 	.word	0x2400e418
 8000860:	2400e41a 	.word	0x2400e41a
 8000864:	080220b7 	.word	0x080220b7
 8000868:	0802211a 	.word	0x0802211a
 800086c:	08022072 	.word	0x08022072
 8000870:	2400e41e 	.word	0x2400e41e
 8000874:	2400e420 	.word	0x2400e420

08000878 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000878:	4601      	mov	r1, r0
 800087a:	b508      	push	{r3, lr}
        return instance;
 800087c:	4b03      	ldr	r3, [pc, #12]	; (800088c <IdleTaskHook+0x14>)
 800087e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000880:	b101      	cbz	r1, 8000884 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000882:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000884:	f00b f808 	bl	800b898 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000888:	2001      	movs	r0, #1
 800088a:	bd08      	pop	{r3, pc}
 800088c:	2400e424 	.word	0x2400e424

08000890 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000890:	2101      	movs	r1, #1
 8000892:	2200      	movs	r2, #0
{
 8000894:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000896:	4608      	mov	r0, r1
 8000898:	f007 fefd 	bl	8008696 <osSemaphoreNew>
 800089c:	4b0a      	ldr	r3, [pc, #40]	; (80008c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800089e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008a0:	b928      	cbnz	r0, 80008ae <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008a2:	4b0a      	ldr	r3, [pc, #40]	; (80008cc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008a4:	2128      	movs	r1, #40	; 0x28
 80008a6:	4a0a      	ldr	r2, [pc, #40]	; (80008d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80008a8:	480a      	ldr	r0, [pc, #40]	; (80008d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80008aa:	f020 fae5 	bl	8020e78 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80008ae:	2200      	movs	r2, #0
 80008b0:	2104      	movs	r1, #4
 80008b2:	2001      	movs	r0, #1
 80008b4:	f007 ff8c 	bl	80087d0 <osMessageQueueNew>
 80008b8:	4b07      	ldr	r3, [pc, #28]	; (80008d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80008ba:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80008bc:	b918      	cbnz	r0, 80008c6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80008be:	4b07      	ldr	r3, [pc, #28]	; (80008dc <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80008c0:	212c      	movs	r1, #44	; 0x2c
 80008c2:	4a03      	ldr	r2, [pc, #12]	; (80008d0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008c4:	e7f0      	b.n	80008a8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80008c6:	bd08      	pop	{r3, pc}
 80008c8:	2400019c 	.word	0x2400019c
 80008cc:	08022238 	.word	0x08022238
 80008d0:	08022281 	.word	0x08022281
 80008d4:	080222b0 	.word	0x080222b0
 80008d8:	24000198 	.word	0x24000198
 80008dc:	080222f5 	.word	0x080222f5

080008e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80008e0:	4b02      	ldr	r3, [pc, #8]	; (80008ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80008e2:	f04f 31ff 	mov.w	r1, #4294967295
 80008e6:	6818      	ldr	r0, [r3, #0]
 80008e8:	f007 bf1f 	b.w	800872a <osSemaphoreAcquire>
 80008ec:	2400019c 	.word	0x2400019c

080008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80008f0:	4b01      	ldr	r3, [pc, #4]	; (80008f8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80008f2:	6818      	ldr	r0, [r3, #0]
 80008f4:	f007 bf44 	b.w	8008780 <osSemaphoreRelease>
 80008f8:	2400019c 	.word	0x2400019c

080008fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80008fc:	4b02      	ldr	r3, [pc, #8]	; (8000908 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80008fe:	2100      	movs	r1, #0
 8000900:	6818      	ldr	r0, [r3, #0]
 8000902:	f007 bf12 	b.w	800872a <osSemaphoreAcquire>
 8000906:	bf00      	nop
 8000908:	2400019c 	.word	0x2400019c

0800090c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800090c:	f7ff bff0 	b.w	80008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000910 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000910:	2300      	movs	r3, #0
 8000912:	4803      	ldr	r0, [pc, #12]	; (8000920 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000914:	4903      	ldr	r1, [pc, #12]	; (8000924 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000916:	461a      	mov	r2, r3
 8000918:	6800      	ldr	r0, [r0, #0]
 800091a:	f007 bf94 	b.w	8008846 <osMessageQueuePut>
 800091e:	bf00      	nop
 8000920:	24000198 	.word	0x24000198
 8000924:	24000004 	.word	0x24000004

08000928 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000928:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800092a:	2300      	movs	r3, #0
 800092c:	4c07      	ldr	r4, [pc, #28]	; (800094c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800092e:	a901      	add	r1, sp, #4
 8000930:	461a      	mov	r2, r3
 8000932:	6820      	ldr	r0, [r4, #0]
 8000934:	f007 ffb7 	bl	80088a6 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000938:	f04f 33ff 	mov.w	r3, #4294967295
 800093c:	2200      	movs	r2, #0
 800093e:	a901      	add	r1, sp, #4
 8000940:	6820      	ldr	r0, [r4, #0]
 8000942:	f007 ffb0 	bl	80088a6 <osMessageQueueGet>
}
 8000946:	b002      	add	sp, #8
 8000948:	bd10      	pop	{r4, pc}
 800094a:	bf00      	nop
 800094c:	24000198 	.word	0x24000198

08000950 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000950:	6803      	ldr	r3, [r0, #0]
 8000952:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000954:	4718      	bx	r3

08000956 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000956:	2001      	movs	r0, #1
 8000958:	4770      	bx	lr

0800095a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800095a:	6803      	ldr	r3, [r0, #0]
 800095c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800095e:	4718      	bx	r3

08000960 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000960:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000964:	4770      	bx	lr
	...

08000968 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000968:	4b05      	ldr	r3, [pc, #20]	; (8000980 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800096a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800096e:	6003      	str	r3, [r0, #0]
 8000970:	4b04      	ldr	r3, [pc, #16]	; (8000984 <_ZN8STM32DMAD1Ev+0x1c>)
 8000972:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8000976:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800097a:	f3bf 8f6f 	isb	sy
}
 800097e:	4770      	bx	lr
 8000980:	0802248c 	.word	0x0802248c
 8000984:	e000e100 	.word	0xe000e100

08000988 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
}
 800098c:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000990:	f7ff ffea 	bl	8000968 <_ZN8STM32DMAD1Ev>
 8000994:	4620      	mov	r0, r4
 8000996:	f020 fa40 	bl	8020e1a <_ZdlPvj>
 800099a:	4620      	mov	r0, r4
 800099c:	bd10      	pop	{r4, pc}
	...

080009a0 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009a0:	4b0f      	ldr	r3, [pc, #60]	; (80009e0 <_ZN8STM32DMA10initializeEv+0x40>)
{
 80009a2:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009a4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80009a8:	f042 0210 	orr.w	r2, r2, #16
 80009ac:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80009b0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80009b4:	f002 0210 	and.w	r2, r2, #16
 80009b8:	9201      	str	r2, [sp, #4]
 80009ba:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009bc:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80009be:	f042 0210 	orr.w	r2, r2, #16
 80009c2:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009c4:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80009c6:	f022 0210 	bic.w	r2, r2, #16
 80009ca:	67da      	str	r2, [r3, #124]	; 0x7c
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009cc:	4b05      	ldr	r3, [pc, #20]	; (80009e4 <_ZN8STM32DMA10initializeEv+0x44>)
 80009ce:	4a06      	ldr	r2, [pc, #24]	; (80009e8 <_ZN8STM32DMA10initializeEv+0x48>)
 80009d0:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009d2:	4b06      	ldr	r3, [pc, #24]	; (80009ec <_ZN8STM32DMA10initializeEv+0x4c>)
 80009d4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009d8:	609a      	str	r2, [r3, #8]
}
 80009da:	b002      	add	sp, #8
 80009dc:	4770      	bx	lr
 80009de:	bf00      	nop
 80009e0:	58024400 	.word	0x58024400
 80009e4:	240047e8 	.word	0x240047e8
 80009e8:	080009f1 	.word	0x080009f1
 80009ec:	e000e100 	.word	0xe000e100

080009f0 <DMA2D_XferCpltCallback>:
 80009f0:	4b02      	ldr	r3, [pc, #8]	; (80009fc <DMA2D_XferCpltCallback+0xc>)
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80009f6:	6803      	ldr	r3, [r0, #0]
 80009f8:	695b      	ldr	r3, [r3, #20]
 80009fa:	4718      	bx	r3
 80009fc:	2400e424 	.word	0x2400e424

08000a00 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a00:	b570      	push	{r4, r5, r6, lr}
 8000a02:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a04:	4b0a      	ldr	r3, [pc, #40]	; (8000a30 <_ZN8STM32DMAC1Ev+0x30>)
 8000a06:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a08:	2600      	movs	r6, #0
 8000a0a:	4625      	mov	r5, r4
 8000a0c:	2260      	movs	r2, #96	; 0x60
 8000a0e:	6060      	str	r0, [r4, #4]
 8000a10:	7226      	strb	r6, [r4, #8]
 8000a12:	7266      	strb	r6, [r4, #9]
 8000a14:	f845 3b20 	str.w	r3, [r5], #32
 8000a18:	4629      	mov	r1, r5
 8000a1a:	f00b f893 	bl	800bb44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a1e:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a22:	60ee      	str	r6, [r5, #12]
 8000a24:	3524      	adds	r5, #36	; 0x24
 8000a26:	42ab      	cmp	r3, r5
 8000a28:	d1fb      	bne.n	8000a22 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a2a:	4620      	mov	r0, r4
 8000a2c:	bd70      	pop	{r4, r5, r6, pc}
 8000a2e:	bf00      	nop
 8000a30:	0802248c 	.word	0x0802248c

08000a34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a34:	b508      	push	{r3, lr}
    switch (format)
 8000a36:	290b      	cmp	r1, #11
 8000a38:	d80b      	bhi.n	8000a52 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a3a:	e8df f001 	tbb	[pc, r1]
 8000a3e:	0612      	.short	0x0612
 8000a40:	0a0a0a10 	.word	0x0a0a0a10
 8000a44:	0808080a 	.word	0x0808080a
 8000a48:	0808      	.short	0x0808
 8000a4a:	2001      	movs	r0, #1
}
 8000a4c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000a4e:	2005      	movs	r0, #5
        break;
 8000a50:	e7fc      	b.n	8000a4c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000a52:	4b05      	ldr	r3, [pc, #20]	; (8000a68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000a54:	2165      	movs	r1, #101	; 0x65
 8000a56:	4a05      	ldr	r2, [pc, #20]	; (8000a6c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000a58:	4805      	ldr	r0, [pc, #20]	; (8000a70 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000a5a:	f020 fa0d 	bl	8020e78 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000a5e:	2000      	movs	r0, #0
 8000a60:	e7f4      	b.n	8000a4c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a62:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a64:	e7f2      	b.n	8000a4c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000a66:	bf00      	nop
 8000a68:	08022337 	.word	0x08022337
 8000a6c:	08022352 	.word	0x08022352
 8000a70:	0802239c 	.word	0x0802239c

08000a74 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a74:	b508      	push	{r3, lr}
    switch (format)
 8000a76:	290a      	cmp	r1, #10
 8000a78:	d809      	bhi.n	8000a8e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000a7a:	e8df f001 	tbb	[pc, r1]
 8000a7e:	0610      	.short	0x0610
 8000a80:	0808080e 	.word	0x0808080e
 8000a84:	06060608 	.word	0x06060608
 8000a88:	06          	.byte	0x06
 8000a89:	00          	.byte	0x00
 8000a8a:	2001      	movs	r0, #1
}
 8000a8c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000a8e:	4b05      	ldr	r3, [pc, #20]	; (8000aa4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000a90:	2186      	movs	r1, #134	; 0x86
 8000a92:	4a05      	ldr	r2, [pc, #20]	; (8000aa8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000a94:	4805      	ldr	r0, [pc, #20]	; (8000aac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000a96:	f020 f9ef 	bl	8020e78 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a9a:	2000      	movs	r0, #0
 8000a9c:	e7f6      	b.n	8000a8c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000a9e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000aa0:	e7f4      	b.n	8000a8c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aa2:	bf00      	nop
 8000aa4:	08022337 	.word	0x08022337
 8000aa8:	080223df 	.word	0x080223df
 8000aac:	0802239c 	.word	0x0802239c

08000ab0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000ab0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000ab4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000ab8:	460c      	mov	r4, r1
 8000aba:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000abc:	4641      	mov	r1, r8
 8000abe:	f7ff ffb9 	bl	8000a34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ac2:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000ac6:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ac8:	4638      	mov	r0, r7
 8000aca:	4649      	mov	r1, r9
 8000acc:	f7ff ffb2 	bl	8000a34 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ad0:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ad2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000ad4:	4638      	mov	r0, r7
 8000ad6:	f7ff ffcd 	bl	8000a74 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ada:	8aa1      	ldrh	r1, [r4, #20]
 8000adc:	8b62      	ldrh	r2, [r4, #26]
 8000ade:	4b43      	ldr	r3, [pc, #268]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000ae0:	1a52      	subs	r2, r2, r1
 8000ae2:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ae4:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000ae6:	8b22      	ldrh	r2, [r4, #24]
 8000ae8:	1a52      	subs	r2, r2, r1
 8000aea:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000aec:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000aee:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000af0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000af4:	6920      	ldr	r0, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000af6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000af8:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000afa:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000afc:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000afe:	6827      	ldr	r7, [r4, #0]
 8000b00:	2f80      	cmp	r7, #128	; 0x80
 8000b02:	d028      	beq.n	8000b56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000b04:	7f22      	ldrb	r2, [r4, #28]
 8000b06:	d80f      	bhi.n	8000b28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000b08:	2f20      	cmp	r7, #32
 8000b0a:	d065      	beq.n	8000bd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b0c:	2f40      	cmp	r7, #64	; 0x40
 8000b0e:	d063      	beq.n	8000bd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b10:	2f04      	cmp	r7, #4
 8000b12:	d01a      	beq.n	8000b4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b14:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000b18:	4b34      	ldr	r3, [pc, #208]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b1a:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b1c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000b20:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b22:	d05f      	beq.n	8000be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b24:	4a32      	ldr	r2, [pc, #200]	; (8000bf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000b26:	e044      	b.n	8000bb2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000b28:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000b2c:	d004      	beq.n	8000b38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000b2e:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000b32:	d1ef      	bne.n	8000b14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b34:	492f      	ldr	r1, [pc, #188]	; (8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000b36:	e000      	b.n	8000b3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b38:	492f      	ldr	r1, [pc, #188]	; (8000bf8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b3a:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000b3e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000b40:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000b42:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b44:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b46:	6158      	str	r0, [r3, #20]
 8000b48:	e032      	b.n	8000bb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b4a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000b4e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	61da      	str	r2, [r3, #28]
 8000b54:	e7f6      	b.n	8000b44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000b56:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000b58:	1d3a      	adds	r2, r7, #4
 8000b5a:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b5c:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b5e:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b60:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000b64:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000b68:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b6a:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b6c:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b6e:	b142      	cbz	r2, 8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000b70:	2a01      	cmp	r2, #1
 8000b72:	d021      	beq.n	8000bb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000b74:	4b21      	ldr	r3, [pc, #132]	; (8000bfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000b76:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000b7a:	4a21      	ldr	r2, [pc, #132]	; (8000c00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000b7c:	4821      	ldr	r0, [pc, #132]	; (8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000b7e:	f020 f97b 	bl	8020e78 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b82:	69da      	ldr	r2, [r3, #28]
 8000b84:	8879      	ldrh	r1, [r7, #2]
 8000b86:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000b8a:	3901      	subs	r1, #1
 8000b8c:	f022 0210 	bic.w	r2, r2, #16
 8000b90:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8000b94:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b96:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000b98:	4b14      	ldr	r3, [pc, #80]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b9a:	69da      	ldr	r2, [r3, #28]
 8000b9c:	f042 0220 	orr.w	r2, r2, #32
 8000ba0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000ba2:	69da      	ldr	r2, [r3, #28]
 8000ba4:	0692      	lsls	r2, r2, #26
 8000ba6:	d4fc      	bmi.n	8000ba2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000ba8:	2210      	movs	r2, #16
 8000baa:	609a      	str	r2, [r3, #8]
            if (blend)
 8000bac:	2900      	cmp	r1, #0
 8000bae:	d0b9      	beq.n	8000b24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bb0:	4a15      	ldr	r2, [pc, #84]	; (8000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000bb2:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000bb4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bb8:	69da      	ldr	r2, [r3, #28]
                if (blitOp.alpha == 255)
 8000bba:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bbc:	8878      	ldrh	r0, [r7, #2]
 8000bbe:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
                if (blitOp.alpha == 255)
 8000bc2:	bf18      	it	ne
 8000bc4:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bc6:	3801      	subs	r0, #1
 8000bc8:	f022 0210 	bic.w	r2, r2, #16
 8000bcc:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000bd0:	f042 0210 	orr.w	r2, r2, #16
 8000bd4:	61da      	str	r2, [r3, #28]
                break;
 8000bd6:	e7df      	b.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bd8:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000bdc:	4b03      	ldr	r3, [pc, #12]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000bde:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000be2:	e7b6      	b.n	8000b52 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000be4:	f240 2201 	movw	r2, #513	; 0x201
 8000be8:	e7e3      	b.n	8000bb2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000bea:	bf00      	nop
 8000bec:	52001000 	.word	0x52001000
 8000bf0:	00010201 	.word	0x00010201
 8000bf4:	00020009 	.word	0x00020009
 8000bf8:	0002000a 	.word	0x0002000a
 8000bfc:	0802242a 	.word	0x0802242a
 8000c00:	08022444 	.word	0x08022444
 8000c04:	0802239c 	.word	0x0802239c
 8000c08:	00020201 	.word	0x00020201

08000c0c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c0c:	b538      	push	{r3, r4, r5, lr}
 8000c0e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c10:	7f89      	ldrb	r1, [r1, #30]
 8000c12:	f7ff ff2f 	bl	8000a74 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c16:	4b17      	ldr	r3, [pc, #92]	; (8000c74 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c18:	8aa5      	ldrh	r5, [r4, #20]
 8000c1a:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c1c:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c1e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c22:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c24:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c26:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c28:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c2a:	1b52      	subs	r2, r2, r5
 8000c2c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c2e:	6825      	ldr	r5, [r4, #0]
 8000c30:	2d08      	cmp	r5, #8
 8000c32:	d10e      	bne.n	8000c52 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c34:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c36:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c38:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c3a:	4a0f      	ldr	r2, [pc, #60]	; (8000c78 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c3c:	7f20      	ldrb	r0, [r4, #28]
 8000c3e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c42:	61da      	str	r2, [r3, #28]
 8000c44:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c46:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c48:	4a0c      	ldr	r2, [pc, #48]	; (8000c7c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4a:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4c:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c4e:	601a      	str	r2, [r3, #0]
    }
}
 8000c50:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c52:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c54:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c56:	611a      	str	r2, [r3, #16]
 8000c58:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000c5a:	0a0a      	lsrs	r2, r1, #8
 8000c5c:	0948      	lsrs	r0, r1, #5
 8000c5e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000c62:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000c66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000c6a:	4302      	orrs	r2, r0
 8000c6c:	430a      	orrs	r2, r1
 8000c6e:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c70:	4a03      	ldr	r2, [pc, #12]	; (8000c80 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000c72:	e7ec      	b.n	8000c4e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000c74:	52001000 	.word	0x52001000
 8000c78:	00010009 	.word	0x00010009
 8000c7c:	00020201 	.word	0x00020201
 8000c80:	00030201 	.word	0x00030201

08000c84 <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000c84:	4b03      	ldr	r3, [pc, #12]	; (8000c94 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000c86:	681a      	ldr	r2, [r3, #0]
 8000c88:	07d2      	lsls	r2, r2, #31
 8000c8a:	d4fc      	bmi.n	8000c86 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000c8c:	2223      	movs	r2, #35	; 0x23
 8000c8e:	609a      	str	r2, [r3, #8]
}
 8000c90:	4770      	bx	lr
 8000c92:	bf00      	nop
 8000c94:	52001000 	.word	0x52001000

08000c98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000c98:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000c9a:	4c10      	ldr	r4, [pc, #64]	; (8000cdc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
 8000c9c:	6825      	ldr	r5, [r4, #0]
 8000c9e:	07ed      	lsls	r5, r5, #31
 8000ca0:	d4fc      	bmi.n	8000c9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ca2:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ca4:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000ca6:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ca8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000caa:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cae:	f04f 0502 	mov.w	r5, #2
 8000cb2:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cb4:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cb6:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000cb8:	d00a      	beq.n	8000cd0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000cba:	4909      	ldr	r1, [pc, #36]	; (8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cbc:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000cbe:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000cc2:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000cc4:	4b07      	ldr	r3, [pc, #28]	; (8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000cc6:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000cc8:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000cca:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000ccc:	6023      	str	r3, [r4, #0]
    }
}
 8000cce:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000cd0:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000cd2:	9b03      	ldr	r3, [sp, #12]
 8000cd4:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000cd6:	4b04      	ldr	r3, [pc, #16]	; (8000ce8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
 8000cd8:	e7f8      	b.n	8000ccc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x34>
 8000cda:	bf00      	nop
 8000cdc:	52001000 	.word	0x52001000
 8000ce0:	00010009 	.word	0x00010009
 8000ce4:	00020001 	.word	0x00020001
 8000ce8:	00030001 	.word	0x00030001

08000cec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000cec:	2001      	movs	r0, #1
 8000cee:	4770      	bx	lr

08000cf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000cf0:	200c      	movs	r0, #12
 8000cf2:	4770      	bx	lr

08000cf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000cf4:	230c      	movs	r3, #12
 8000cf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000cfa:	3008      	adds	r0, #8
 8000cfc:	4770      	bx	lr

08000cfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000cfe:	230c      	movs	r3, #12
 8000d00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d04:	3008      	adds	r0, #8
 8000d06:	4770      	bx	lr

08000d08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d08:	2001      	movs	r0, #1
 8000d0a:	4770      	bx	lr

08000d0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d0c:	f243 50b8 	movw	r0, #13752	; 0x35b8
 8000d10:	4770      	bx	lr

08000d12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d12:	f243 53b8 	movw	r3, #13752	; 0x35b8
 8000d16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d1a:	3008      	adds	r0, #8
 8000d1c:	4770      	bx	lr

08000d1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d1e:	f243 53b8 	movw	r3, #13752	; 0x35b8
 8000d22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d26:	3008      	adds	r0, #8
 8000d28:	4770      	bx	lr

08000d2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d2a:	2001      	movs	r0, #1
 8000d2c:	4770      	bx	lr

08000d2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d2e:	2010      	movs	r0, #16
 8000d30:	4770      	bx	lr

08000d32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d36:	3008      	adds	r0, #8
 8000d38:	4770      	bx	lr

08000d3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMorpion_2ScreenNoTransition();
 8000d42:	4608      	mov	r0, r1
 8000d44:	f001 bba8 	b.w	8002498 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv>

08000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d48:	4b03      	ldr	r3, [pc, #12]	; (8000d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d4a:	b510      	push	{r4, lr}
 8000d4c:	4604      	mov	r4, r0
 8000d4e:	6003      	str	r3, [r0, #0]
 8000d50:	f009 fd4d 	bl	800a7ee <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d54:	4620      	mov	r0, r4
 8000d56:	bd10      	pop	{r4, pc}
 8000d58:	08022544 	.word	0x08022544

08000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d5c:	b510      	push	{r4, lr}
 8000d5e:	4604      	mov	r4, r0
 8000d60:	f7ff fff2 	bl	8000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d64:	2114      	movs	r1, #20
 8000d66:	4620      	mov	r0, r4
 8000d68:	f020 f857 	bl	8020e1a <_ZdlPvj>
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	bd10      	pop	{r4, pc}

08000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d70:	4b03      	ldr	r3, [pc, #12]	; (8000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d72:	b510      	push	{r4, lr}
 8000d74:	4604      	mov	r4, r0
 8000d76:	6003      	str	r3, [r0, #0]
 8000d78:	f009 fd39 	bl	800a7ee <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d7c:	4620      	mov	r0, r4
 8000d7e:	bd10      	pop	{r4, pc}
 8000d80:	08022510 	.word	0x08022510

08000d84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d84:	b510      	push	{r4, lr}
 8000d86:	4604      	mov	r4, r0
 8000d88:	f7ff fff2 	bl	8000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d8c:	f44f 5157 	mov.w	r1, #13760	; 0x35c0
 8000d90:	4620      	mov	r0, r4
 8000d92:	f020 f842 	bl	8020e1a <_ZdlPvj>
 8000d96:	4620      	mov	r0, r4
 8000d98:	bd10      	pop	{r4, pc}
	...

08000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d9c:	4b03      	ldr	r3, [pc, #12]	; (8000dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d9e:	b510      	push	{r4, lr}
 8000da0:	4604      	mov	r4, r0
 8000da2:	6003      	str	r3, [r0, #0]
 8000da4:	f009 fd23 	bl	800a7ee <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	bd10      	pop	{r4, pc}
 8000dac:	080224dc 	.word	0x080224dc

08000db0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000db0:	b510      	push	{r4, lr}
 8000db2:	4604      	mov	r4, r0
 8000db4:	f7ff fff2 	bl	8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000db8:	2118      	movs	r1, #24
 8000dba:	4620      	mov	r0, r4
 8000dbc:	f020 f82d 	bl	8020e1a <_ZdlPvj>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}

08000dc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000dc4:	4b09      	ldr	r3, [pc, #36]	; (8000dec <_ZN12FrontendHeapD1Ev+0x28>)
 8000dc6:	b510      	push	{r4, lr}
 8000dc8:	4604      	mov	r4, r0
 8000dca:	6003      	str	r3, [r0, #0]
 8000dcc:	f500 5057 	add.w	r0, r0, #13760	; 0x35c0
 8000dd0:	302c      	adds	r0, #44	; 0x2c
 8000dd2:	f7ff ffb9 	bl	8000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000dda:	f7ff ffc9 	bl	8000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Morpion_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dde:	f104 0014 	add.w	r0, r4, #20
 8000de2:	f7ff ffdb 	bl	8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18Morpion_2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000de6:	4620      	mov	r0, r4
 8000de8:	bd10      	pop	{r4, pc}
 8000dea:	bf00      	nop
 8000dec:	08022578 	.word	0x08022578

08000df0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000df0:	b508      	push	{r3, lr}
 8000df2:	4802      	ldr	r0, [pc, #8]	; (8000dfc <__tcf_0+0xc>)
 8000df4:	f7ff ffe6 	bl	8000dc4 <_ZN12FrontendHeapD1Ev>
 8000df8:	bd08      	pop	{r3, pc}
 8000dfa:	bf00      	nop
 8000dfc:	240001a4 	.word	0x240001a4

08000e00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e00:	b510      	push	{r4, lr}
 8000e02:	4604      	mov	r4, r0
 8000e04:	f7ff ffde 	bl	8000dc4 <_ZN12FrontendHeapD1Ev>
 8000e08:	f243 7160 	movw	r1, #14176	; 0x3760
 8000e0c:	4620      	mov	r0, r4
 8000e0e:	f020 f804 	bl	8020e1a <_ZdlPvj>
 8000e12:	4620      	mov	r0, r4
 8000e14:	bd10      	pop	{r4, pc}
	...

08000e18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 640, 480);

void touchgfx_init()
{
 8000e18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e1c:	f001 f88e 	bl	8001f3c <_ZN14BitmapDatabase11getInstanceEv>
 8000e20:	2400      	movs	r4, #0
 8000e22:	4605      	mov	r5, r0
 8000e24:	f001 f88e 	bl	8001f44 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e28:	4623      	mov	r3, r4
 8000e2a:	4601      	mov	r1, r0
 8000e2c:	4622      	mov	r2, r4
 8000e2e:	4628      	mov	r0, r5
 8000e30:	9400      	str	r4, [sp, #0]
 8000e32:	f012 f867 	bl	8012f04 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e36:	4b26      	ldr	r3, [pc, #152]	; (8000ed0 <touchgfx_init+0xb8>)
 8000e38:	4a26      	ldr	r2, [pc, #152]	; (8000ed4 <touchgfx_init+0xbc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e3a:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8000e3c:	4d26      	ldr	r5, [pc, #152]	; (8000ed8 <touchgfx_init+0xc0>)
 8000e3e:	601a      	str	r2, [r3, #0]
 8000e40:	f002 fb7e 	bl	8003540 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e44:	4825      	ldr	r0, [pc, #148]	; (8000edc <touchgfx_init+0xc4>)
 8000e46:	f011 ffc5 	bl	8012dd4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e4a:	682b      	ldr	r3, [r5, #0]
 8000e4c:	f3bf 8f5b 	dmb	ish
 8000e50:	07db      	lsls	r3, r3, #31
 8000e52:	d437      	bmi.n	8000ec4 <touchgfx_init+0xac>
 8000e54:	4628      	mov	r0, r5
 8000e56:	f01f ffe2 	bl	8020e1e <__cxa_guard_acquire>
 8000e5a:	b398      	cbz	r0, 8000ec4 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000e5c:	4c20      	ldr	r4, [pc, #128]	; (8000ee0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000e5e:	4b21      	ldr	r3, [pc, #132]	; (8000ee4 <touchgfx_init+0xcc>)
          screenStorage(scr),
 8000e60:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000e64:	f104 0014 	add.w	r0, r4, #20
 8000e68:	6023      	str	r3, [r4, #0]
          transitionStorage(tra),
 8000e6a:	f508 5757 	add.w	r7, r8, #13760	; 0x35c0
        : presenterStorage(pres),
 8000e6e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000e70:	f8c4 8008 	str.w	r8, [r4, #8]
          frontendApplication(app)
 8000e74:	f107 0618 	add.w	r6, r7, #24
          transitionStorage(tra),
 8000e78:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000e7a:	6126      	str	r6, [r4, #16]
 8000e7c:	f009 fcb8 	bl	800a7f0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e80:	4b19      	ldr	r3, [pc, #100]	; (8000ee8 <touchgfx_init+0xd0>)
 8000e82:	4640      	mov	r0, r8
 8000e84:	6163      	str	r3, [r4, #20]
 8000e86:	f009 fcb3 	bl	800a7f0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e8a:	4b18      	ldr	r3, [pc, #96]	; (8000eec <touchgfx_init+0xd4>)
 8000e8c:	4638      	mov	r0, r7
 8000e8e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e90:	f009 fcae 	bl	800a7f0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e94:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8000e98:	4a15      	ldr	r2, [pc, #84]	; (8000ef0 <touchgfx_init+0xd8>)
 8000e9a:	f504 5058 	add.w	r0, r4, #13824	; 0x3600
 8000e9e:	f8c3 25ec 	str.w	r2, [r3, #1516]	; 0x5ec
 8000ea2:	f002 fc15 	bl	80036d0 <_ZN5ModelC1Ev>
 8000ea6:	4622      	mov	r2, r4
 8000ea8:	f504 5158 	add.w	r1, r4, #13824	; 0x3600
 8000eac:	4630      	mov	r0, r6
 8000eae:	f002 fbe5 	bl	800367c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000eb2:	4630      	mov	r0, r6
 8000eb4:	f001 faf0 	bl	8002498 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000eb8:	480e      	ldr	r0, [pc, #56]	; (8000ef4 <touchgfx_init+0xdc>)
 8000eba:	f01f fffb 	bl	8020eb4 <atexit>
 8000ebe:	4628      	mov	r0, r5
 8000ec0:	f01f ffb9 	bl	8020e36 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ec4:	480c      	ldr	r0, [pc, #48]	; (8000ef8 <touchgfx_init+0xe0>)
}
 8000ec6:	b002      	add	sp, #8
 8000ec8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000ecc:	f7ff bbf6 	b.w	80006bc <_ZN11TouchGFXHAL10initializeEv>
 8000ed0:	2400e488 	.word	0x2400e488
 8000ed4:	24004730 	.word	0x24004730
 8000ed8:	240001a0 	.word	0x240001a0
 8000edc:	24000008 	.word	0x24000008
 8000ee0:	240001a4 	.word	0x240001a4
 8000ee4:	08022578 	.word	0x08022578
 8000ee8:	080224dc 	.word	0x080224dc
 8000eec:	08022510 	.word	0x08022510
 8000ef0:	08022544 	.word	0x08022544
 8000ef4:	08000df1 	.word	0x08000df1
 8000ef8:	240046a8 	.word	0x240046a8

08000efc <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000efc:	4770      	bx	lr
	...

08000f00 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f00:	4801      	ldr	r0, [pc, #4]	; (8000f08 <touchgfx_taskEntry+0x8>)
 8000f02:	f7ff bbf5 	b.w	80006f0 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f06:	bf00      	nop
 8000f08:	240046a8 	.word	0x240046a8

08000f0c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f0c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000f0e:	4e25      	ldr	r6, [pc, #148]	; (8000fa4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
{
public:

    STM32TouchController() {}
 8000f10:	4b25      	ldr	r3, [pc, #148]	; (8000fa8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f12:	4c26      	ldr	r4, [pc, #152]	; (8000fac <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8000f14:	4630      	mov	r0, r6
static LCD16bpp display;
 8000f16:	4d26      	ldr	r5, [pc, #152]	; (8000fb0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8000f18:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f1a:	f7ff fd71 	bl	8000a00 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f1e:	4628      	mov	r0, r5
 8000f20:	f016 faca 	bl	80174b8 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000f24:	4b23      	ldr	r3, [pc, #140]	; (8000fb4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
 8000f26:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000f28:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f2c:	4822      	ldr	r0, [pc, #136]	; (8000fb8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f2e:	861a      	strh	r2, [r3, #48]	; 0x30
          useAuxiliaryLCD(false),
 8000f30:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
 8000f34:	665a      	str	r2, [r3, #100]	; 0x64
          updateMCULoad(0),
 8000f36:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          touchController(touchCtrl),
 8000f3a:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8000f3c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000f40:	491e      	ldr	r1, [pc, #120]	; (8000fbc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          vSyncCompensationEnabled(false),
 8000f42:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
        instance = this;
 8000f46:	491e      	ldr	r1, [pc, #120]	; (8000fc0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8000f48:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f4a:	f44f 7120 	mov.w	r1, #640	; 0x280
 8000f4e:	8001      	strh	r1, [r0, #0]
 8000f50:	481c      	ldr	r0, [pc, #112]	; (8000fc4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000f52:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f54:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000f58:	481b      	ldr	r0, [pc, #108]	; (8000fc8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000f5a:	8001      	strh	r1, [r0, #0]
 8000f5c:	481b      	ldr	r0, [pc, #108]	; (8000fcc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000f5e:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000f60:	491b      	ldr	r1, [pc, #108]	; (8000fd0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
          buttonController(0),
 8000f62:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f66:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f6a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000f6e:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000f72:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000f76:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000f7a:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000f7e:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          lcdRef(display),
 8000f82:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_ROTATION = rotate0;
 8000f86:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000f88:	4912      	ldr	r1, [pc, #72]	; (8000fd4 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        : cc_consumed(0),
 8000f8a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000f8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8000f92:	6019      	str	r1, [r3, #0]
          cc_begin(0),
 8000f94:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000f96:	4910      	ldr	r1, [pc, #64]	; (8000fd8 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          cc_in(0)
 8000f98:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8000f9c:	4a0f      	ldr	r2, [pc, #60]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8000f9e:	6799      	str	r1, [r3, #120]	; 0x78
 8000fa0:	67da      	str	r2, [r3, #124]	; 0x7c
}
 8000fa2:	bd70      	pop	{r4, r5, r6, pc}
 8000fa4:	24003908 	.word	0x24003908
 8000fa8:	08021fdc 	.word	0x08021fdc
 8000fac:	24003904 	.word	0x24003904
 8000fb0:	24004734 	.word	0x24004734
 8000fb4:	240046a8 	.word	0x240046a8
 8000fb8:	2400e418 	.word	0x2400e418
 8000fbc:	01000001 	.word	0x01000001
 8000fc0:	2400e424 	.word	0x2400e424
 8000fc4:	2400e41e 	.word	0x2400e41e
 8000fc8:	2400e41a 	.word	0x2400e41a
 8000fcc:	2400e420 	.word	0x2400e420
 8000fd0:	2400e41c 	.word	0x2400e41c
 8000fd4:	08022168 	.word	0x08022168
 8000fd8:	01010000 	.word	0x01010000
 8000fdc:	08021f2c 	.word	0x08021f2c

08000fe0 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8000fe0:	4801      	ldr	r0, [pc, #4]	; (8000fe8 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8000fe2:	f7ff bcc1 	b.w	8000968 <_ZN8STM32DMAD1Ev>
 8000fe6:	bf00      	nop
 8000fe8:	24003908 	.word	0x24003908

08000fec <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000fec:	2000      	movs	r0, #0
 8000fee:	4770      	bx	lr

08000ff0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ff0:	8081      	strh	r1, [r0, #4]
    }
 8000ff2:	4770      	bx	lr

08000ff4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000ff4:	80c1      	strh	r1, [r0, #6]
    }
 8000ff6:	4770      	bx	lr

08000ff8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000ff8:	8101      	strh	r1, [r0, #8]
    }
 8000ffa:	4770      	bx	lr

08000ffc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ffc:	8141      	strh	r1, [r0, #10]
    }
 8000ffe:	4770      	bx	lr

08001000 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001000:	4770      	bx	lr

08001002 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001004:	4770      	bx	lr

08001006 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001006:	4770      	bx	lr

08001008 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001008:	4770      	bx	lr

0800100a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800100a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800100c:	88c4      	ldrh	r4, [r0, #6]
 800100e:	6803      	ldr	r3, [r0, #0]
 8001010:	1b12      	subs	r2, r2, r4
 8001012:	8884      	ldrh	r4, [r0, #4]
 8001014:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001016:	1b09      	subs	r1, r1, r4
 8001018:	b212      	sxth	r2, r2
    }
 800101a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800101e:	b209      	sxth	r1, r1
 8001020:	4718      	bx	r3

08001022 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001022:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001026:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001028:	f04f 33ff 	mov.w	r3, #4294967295
 800102c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800102e:	6813      	ldr	r3, [r2, #0]
 8001030:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001032:	6010      	str	r0, [r2, #0]
    }
 8001034:	4770      	bx	lr

08001036 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001036:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800103a:	b11a      	cbz	r2, 8001044 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800103c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001040:	b102      	cbz	r2, 8001044 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001042:	6018      	str	r0, [r3, #0]
        }
    }
 8001044:	4770      	bx	lr

08001046 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001046:	2000      	movs	r0, #0
 8001048:	4770      	bx	lr

0800104a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800104a:	888b      	ldrh	r3, [r1, #4]
 800104c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800104e:	2001      	movs	r0, #1
 8001050:	4770      	bx	lr

08001052 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001052:	4770      	bx	lr

08001054 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001054:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001058:	4770      	bx	lr

0800105a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800105a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800105e:	4770      	bx	lr

08001060 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001060:	2200      	movs	r2, #0
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001062:	b510      	push	{r4, lr}
        return rect.width;
 8001064:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001068:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800106c:	8002      	strh	r2, [r0, #0]
 800106e:	8042      	strh	r2, [r0, #2]
 8001070:	8084      	strh	r4, [r0, #4]
 8001072:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001074:	bd10      	pop	{r4, pc}

08001076 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001076:	2200      	movs	r2, #0
 8001078:	8002      	strh	r2, [r0, #0]
 800107a:	8042      	strh	r2, [r0, #2]
 800107c:	8082      	strh	r2, [r0, #4]
 800107e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001080:	4770      	bx	lr
	...

08001084 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001084:	4b03      	ldr	r3, [pc, #12]	; (8001094 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001086:	2290      	movs	r2, #144	; 0x90
 8001088:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800108c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop
 8001094:	e000e100 	.word	0xe000e100

08001098 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001098:	4a09      	ldr	r2, [pc, #36]	; (80010c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800109a:	490a      	ldr	r1, [pc, #40]	; (80010c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 800109c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800109e:	480a      	ldr	r0, [pc, #40]	; (80010c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010a0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80010a4:	3b01      	subs	r3, #1
 80010a6:	b29b      	uxth	r3, r3
 80010a8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80010aa:	6911      	ldr	r1, [r2, #16]
 80010ac:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80010b0:	3901      	subs	r1, #1
 80010b2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80010b4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80010b6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80010b8:	f043 0301 	orr.w	r3, r3, #1
 80010bc:	6353      	str	r3, [r2, #52]	; 0x34
}
 80010be:	4770      	bx	lr
 80010c0:	50001000 	.word	0x50001000
 80010c4:	240047ba 	.word	0x240047ba
 80010c8:	240047b8 	.word	0x240047b8

080010cc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80010cc:	4b01      	ldr	r3, [pc, #4]	; (80010d4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80010ce:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80010d2:	4770      	bx	lr
 80010d4:	50001000 	.word	0x50001000

080010d8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010d8:	4b02      	ldr	r3, [pc, #8]	; (80010e4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010da:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010dc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010e0:	625a      	str	r2, [r3, #36]	; 0x24
}
 80010e2:	4770      	bx	lr
 80010e4:	50001000 	.word	0x50001000

080010e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80010e8:	b570      	push	{r4, r5, r6, lr}
 80010ea:	4604      	mov	r4, r0
    HAL::initialize();
 80010ec:	f009 fe7b 	bl	800ade6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80010f0:	6823      	ldr	r3, [r4, #0]
 80010f2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80010f4:	f00f f946 	bl	8010384 <_ZN8touchgfx11Application11getInstanceEv>
 80010f8:	4601      	mov	r1, r0
 80010fa:	4620      	mov	r0, r4
 80010fc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD0096000, (void*)0);
 80010fe:	6823      	ldr	r3, [r4, #0]
 8001100:	4620      	mov	r0, r4
 8001102:	4a05      	ldr	r2, [pc, #20]	; (8001118 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001104:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001108:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 800110c:	2300      	movs	r3, #0
 800110e:	46ac      	mov	ip, r5
}
 8001110:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD0096000, (void*)0);
 8001114:	4760      	bx	ip
 8001116:	bf00      	nop
 8001118:	d0096000 	.word	0xd0096000

0800111c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800111c:	f009 be4a 	b.w	800adb4 <_ZN8touchgfx3HAL10beginFrameEv>

08001120 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001120:	f009 be54 	b.w	800adcc <_ZN8touchgfx3HAL8endFrameEv>

08001124 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001124:	f009 be10 	b.w	800ad48 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001128 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001128:	f009 bf71 	b.w	800b00e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800112c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800112c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001130:	b112      	cbz	r2, 8001138 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001132:	6803      	ldr	r3, [r0, #0]
 8001134:	695b      	ldr	r3, [r3, #20]
 8001136:	4718      	bx	r3
    }
 8001138:	4770      	bx	lr
	...

0800113c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800113c:	4a12      	ldr	r2, [pc, #72]	; (8001188 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x4c>)
 800113e:	6953      	ldr	r3, [r2, #20]
 8001140:	03db      	lsls	r3, r3, #15
{
 8001142:	b570      	push	{r4, r5, r6, lr}
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001144:	d51e      	bpl.n	8001184 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8001146:	2300      	movs	r3, #0
 8001148:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800114c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8001150:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001154:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001158:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800115c:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8001160:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001162:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001166:	4601      	mov	r1, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001168:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 800116c:	3901      	subs	r1, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800116e:	f8c2 5274 	str.w	r5, [r2, #628]	; 0x274
      } while (ways-- != 0U);
 8001172:	d2f9      	bcs.n	8001168 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>
    } while(sets-- != 0U);
 8001174:	3b20      	subs	r3, #32
 8001176:	f113 0f20 	cmn.w	r3, #32
 800117a:	d1f2      	bne.n	8001162 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x26>
 800117c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001180:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
 8001184:	bd70      	pop	{r4, r5, r6, pc}
 8001186:	bf00      	nop
 8001188:	e000ed00 	.word	0xe000ed00

0800118c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800118c:	4b08      	ldr	r3, [pc, #32]	; (80011b0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800118e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001192:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001196:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800119a:	f3bf 8f6f 	isb	sy
 800119e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80011a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80011a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80011aa:	f3bf 8f6f 	isb	sy
}
 80011ae:	4770      	bx	lr
 80011b0:	e000e100 	.word	0xe000e100

080011b4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80011b4:	4b03      	ldr	r3, [pc, #12]	; (80011c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80011b6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80011ba:	609a      	str	r2, [r3, #8]
 80011bc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80011c0:	609a      	str	r2, [r3, #8]
}
 80011c2:	4770      	bx	lr
 80011c4:	e000e100 	.word	0xe000e100

080011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
        : widgetWidth(0)
 80011c8:	2300      	movs	r3, #0
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80011ca:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80011cc:	4e12      	ldr	r6, [pc, #72]	; (8001218 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80011ce:	4605      	mov	r5, r0
 80011d0:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80011d2:	4b12      	ldr	r3, [pc, #72]	; (800121c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80011d4:	6003      	str	r3, [r0, #0]
 80011d6:	6833      	ldr	r3, [r6, #0]
 80011d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80011dc:	b10a      	cbz	r2, 80011e2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80011de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80011e0:	b900      	cbnz	r0, 80011e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80011e2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80011e4:	6803      	ldr	r3, [r0, #0]
 80011e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80011e8:	4798      	blx	r3
        return auxiliaryLCD;
 80011ea:	6833      	ldr	r3, [r6, #0]
 80011ec:	fab0 f480 	clz	r4, r0
 80011f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80011f2:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80011f4:	b130      	cbz	r0, 8001204 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80011f6:	6803      	ldr	r3, [r0, #0]
 80011f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80011fa:	4798      	blx	r3
 80011fc:	2800      	cmp	r0, #0
 80011fe:	bf08      	it	eq
 8001200:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001204:	b92c      	cbnz	r4, 8001212 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001206:	4b06      	ldr	r3, [pc, #24]	; (8001220 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001208:	212c      	movs	r1, #44	; 0x2c
 800120a:	4a06      	ldr	r2, [pc, #24]	; (8001224 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800120c:	4806      	ldr	r0, [pc, #24]	; (8001228 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800120e:	f01f fe33 	bl	8020e78 <__assert_func>
    }
 8001212:	4628      	mov	r0, r5
 8001214:	bd70      	pop	{r4, r5, r6, pc}
 8001216:	bf00      	nop
 8001218:	2400e424 	.word	0x2400e424
 800121c:	08022688 	.word	0x08022688
 8001220:	08022584 	.word	0x08022584
 8001224:	080225e2 	.word	0x080225e2
 8001228:	0802261b 	.word	0x0802261b

0800122c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800122c:	b510      	push	{r4, lr}
        return instance;
 800122e:	4c14      	ldr	r4, [pc, #80]	; (8001280 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001230:	6823      	ldr	r3, [r4, #0]
 8001232:	b323      	cbz	r3, 800127e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001234:	4b13      	ldr	r3, [pc, #76]	; (8001284 <HAL_LTDC_LineEventCallback+0x58>)
 8001236:	4a14      	ldr	r2, [pc, #80]	; (8001288 <HAL_LTDC_LineEventCallback+0x5c>)
 8001238:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800123a:	8811      	ldrh	r1, [r2, #0]
 800123c:	428b      	cmp	r3, r1
 800123e:	d113      	bne.n	8001268 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001240:	4b12      	ldr	r3, [pc, #72]	; (800128c <HAL_LTDC_LineEventCallback+0x60>)
 8001242:	8819      	ldrh	r1, [r3, #0]
 8001244:	f005 f814 	bl	8006270 <HAL_LTDC_ProgramLineEvent>
 8001248:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800124a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800124e:	3301      	adds	r3, #1
 8001250:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001254:	f7ff fb5c 	bl	8000910 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001258:	6820      	ldr	r0, [r4, #0]
 800125a:	f00a fb03 	bl	800b864 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800125e:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001260:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001264:	f7ff b962 	b.w	800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001268:	f005 f802 	bl	8006270 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800126c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800126e:	6803      	ldr	r3, [r0, #0]
 8001270:	6a1b      	ldr	r3, [r3, #32]
 8001272:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001274:	2000      	movs	r0, #0
    }
 8001276:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800127a:	f7ff b985 	b.w	8000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800127e:	bd10      	pop	{r4, pc}
 8001280:	2400e424 	.word	0x2400e424
 8001284:	50001000 	.word	0x50001000
 8001288:	240047ba 	.word	0x240047ba
 800128c:	240047b8 	.word	0x240047b8

08001290 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001290:	4901      	ldr	r1, [pc, #4]	; (8001298 <vApplicationIdleHook+0x8>)
 8001292:	2000      	movs	r0, #0
 8001294:	f008 be34 	b.w	8009f00 <vTaskSetApplicationTaskTag>
 8001298:	08000879 	.word	0x08000879

0800129c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800129c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129e:	2064      	movs	r0, #100	; 0x64
 80012a0:	f007 f9ed 	bl	800867e <osDelay>
  for(;;)
 80012a4:	e7fb      	b.n	800129e <StartDefaultTask+0x2>
	...

080012a8 <SystemClock_Config>:
{
 80012a8:	b570      	push	{r4, r5, r6, lr}
 80012aa:	b09c      	sub	sp, #112	; 0x70
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012ac:	224c      	movs	r2, #76	; 0x4c
 80012ae:	2100      	movs	r1, #0
 80012b0:	a809      	add	r0, sp, #36	; 0x24
 80012b2:	f01f ffe6 	bl	8021282 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80012b6:	2220      	movs	r2, #32
 80012b8:	2100      	movs	r1, #0
 80012ba:	a801      	add	r0, sp, #4
 80012bc:	f01f ffe1 	bl	8021282 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 80012c0:	2002      	movs	r0, #2
 80012c2:	f005 f8b9 	bl	8006438 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012c6:	2300      	movs	r3, #0
 80012c8:	9300      	str	r3, [sp, #0]
 80012ca:	4b20      	ldr	r3, [pc, #128]	; (800134c <SystemClock_Config+0xa4>)
 80012cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80012ce:	f022 0201 	bic.w	r2, r2, #1
 80012d2:	62da      	str	r2, [r3, #44]	; 0x2c
 80012d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012d6:	f003 0301 	and.w	r3, r3, #1
 80012da:	9300      	str	r3, [sp, #0]
 80012dc:	4b1c      	ldr	r3, [pc, #112]	; (8001350 <SystemClock_Config+0xa8>)
 80012de:	699a      	ldr	r2, [r3, #24]
 80012e0:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80012e4:	619a      	str	r2, [r3, #24]
 80012e6:	699a      	ldr	r2, [r3, #24]
 80012e8:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 80012ec:	9200      	str	r2, [sp, #0]
 80012ee:	9a00      	ldr	r2, [sp, #0]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80012f0:	699a      	ldr	r2, [r3, #24]
 80012f2:	0494      	lsls	r4, r2, #18
 80012f4:	d5fc      	bpl.n	80012f0 <SystemClock_Config+0x48>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012f6:	2201      	movs	r2, #1
 80012f8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLN = 160;
 80012fc:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80012fe:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8001300:	2500      	movs	r5, #0
 8001302:	2608      	movs	r6, #8
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001304:	a809      	add	r0, sp, #36	; 0x24
  RCC_OscInitStruct.PLL.PLLP = 2;
 8001306:	9416      	str	r4, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8001308:	951b      	str	r5, [sp, #108]	; 0x6c
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800130a:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLN = 160;
 800130e:	23a0      	movs	r3, #160	; 0xa0
 8001310:	e9cd 1314 	strd	r1, r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001314:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001316:	e9cd 4412 	strd	r4, r4, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 800131a:	e9cd 3417 	strd	r3, r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800131e:	e9cd 6519 	strd	r6, r5, [sp, #100]	; 0x64
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001322:	f005 fbc3 	bl	8006aac <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001326:	203f      	movs	r0, #63	; 0x3f
 8001328:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 800132a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800132e:	4621      	mov	r1, r4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001330:	e9cd 0301 	strd	r0, r3, [sp, #4]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8001334:	2340      	movs	r3, #64	; 0x40
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001336:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8001338:	e9cd 5603 	strd	r5, r6, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 800133c:	e9cd 3305 	strd	r3, r3, [sp, #20]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8001340:	e9cd 2307 	strd	r2, r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001344:	f005 ff00 	bl	8007148 <HAL_RCC_ClockConfig>
}
 8001348:	b01c      	add	sp, #112	; 0x70
 800134a:	bd70      	pop	{r4, r5, r6, pc}
 800134c:	58000400 	.word	0x58000400
 8001350:	58024800 	.word	0x58024800

08001354 <main>:
  *((uint32_t*)0x51046108) = 1; /* DMA2D issue in cut 1.1 */
 8001354:	2301      	movs	r3, #1
 8001356:	4ad7      	ldr	r2, [pc, #860]	; (80016b4 <main+0x360>)
{
 8001358:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  *((uint32_t*)0x51046108) = 1; /* DMA2D issue in cut 1.1 */
 800135c:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
  *((uint32_t*)0x51008108) = 1; /* AXI SRAM issue in cut 1.2 */
 8001360:	f5a2 3278 	sub.w	r2, r2, #253952	; 0x3e000
{
 8001364:	b099      	sub	sp, #100	; 0x64
  *((uint32_t*)0x51008108) = 1; /* AXI SRAM issue in cut 1.2 */
 8001366:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800136a:	4bd3      	ldr	r3, [pc, #844]	; (80016b8 <main+0x364>)
 800136c:	695a      	ldr	r2, [r3, #20]
 800136e:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 8001372:	d111      	bne.n	8001398 <main+0x44>
  __ASM volatile ("dsb 0xF":::"memory");
 8001374:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001378:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800137c:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001380:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001384:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001388:	695a      	ldr	r2, [r3, #20]
 800138a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800138e:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001390:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001394:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 8001398:	4ac7      	ldr	r2, [pc, #796]	; (80016b8 <main+0x364>)
 800139a:	6953      	ldr	r3, [r2, #20]
 800139c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 80013a0:	d123      	bne.n	80013ea <main+0x96>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80013a2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80013a6:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 80013aa:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013ae:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80013b2:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80013b6:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80013ba:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013bc:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80013c0:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013c2:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
      } while (ways-- != 0U);
 80013c6:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80013c8:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 80013cc:	d2f9      	bcs.n	80013c2 <main+0x6e>
    } while(sets-- != 0U);
 80013ce:	3b20      	subs	r3, #32
 80013d0:	f113 0f20 	cmn.w	r3, #32
 80013d4:	d1f2      	bne.n	80013bc <main+0x68>
 80013d6:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 80013da:	6953      	ldr	r3, [r2, #20]
 80013dc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80013e0:	6153      	str	r3, [r2, #20]
 80013e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013e6:	f3bf 8f6f 	isb	sy

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80013ea:	2710      	movs	r7, #16
  HAL_Init();
 80013ec:	f003 fe58 	bl	80050a0 <HAL_Init>
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80013f0:	2100      	movs	r1, #0
 80013f2:	a80b      	add	r0, sp, #44	; 0x2c
 80013f4:	463a      	mov	r2, r7
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80013f6:	2601      	movs	r6, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80013f8:	f01f ff43 	bl	8021282 <memset>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80013fc:	2400      	movs	r4, #0
  HAL_MPU_Disable();
 80013fe:	f003 ff0b 	bl	8005218 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 8001402:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
 8001406:	4bad      	ldr	r3, [pc, #692]	; (80016bc <main+0x368>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001408:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 800140a:	251c      	movs	r5, #28
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 800140c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c

  HAL_MPU_ConfigRegion(&MPU_InitStruct);

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 8001410:	f04f 0902 	mov.w	r9, #2
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8001414:	f04f 0803 	mov.w	r8, #3
  HAL_MPU_ConfigRegion(&MPU_InitStruct);

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 8001418:	f04f 0a1a 	mov.w	sl, #26
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 800141c:	f04f 0b40 	mov.w	fp, #64	; 0x40
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 8001420:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 8001424:	4ba6      	ldr	r3, [pc, #664]	; (80016c0 <main+0x36c>)
 8001426:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001428:	f003 ff14 	bl	8005254 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0xD0000000;
 800142c:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001430:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 8001432:	f88d 5034 	strb.w	r5, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
 8001436:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8001438:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 800143c:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 8001440:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001444:	f003 ff06 	bl	8005254 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 8001448:	2318      	movs	r3, #24
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800144a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 800144c:	f88d 902d 	strb.w	r9, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 8001450:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8001454:	f240 1301 	movw	r3, #257	; 0x101
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8001458:	f88d 8037 	strb.w	r8, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 800145c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001460:	f003 fef8 	bl	8005254 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
 8001464:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001468:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 800146a:	f88d 5034 	strb.w	r5, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 800146e:	2504      	movs	r5, #4
  MPU_InitStruct.BaseAddress = 0x90000000;
 8001470:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 8001472:	f88d 802d 	strb.w	r8, [sp, #45]	; 0x2d
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8001476:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 800147a:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800147e:	f003 fee9 	bl	8005254 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001482:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 8001484:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 8001488:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 800148c:	f88d 8037 	strb.w	r8, [sp, #55]	; 0x37
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8001490:	f88d 603a 	strb.w	r6, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001494:	f003 fede 	bl	8005254 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8001498:	4628      	mov	r0, r5
 800149a:	f003 fecb 	bl	8005234 <HAL_MPU_Enable>
  SystemClock_Config();
 800149e:	f7ff ff03 	bl	80012a8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a2:	2214      	movs	r2, #20
 80014a4:	4621      	mov	r1, r4
 80014a6:	a80b      	add	r0, sp, #44	; 0x2c
 80014a8:	f01f feeb 	bl	8021282 <memset>
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80014ac:	4b85      	ldr	r3, [pc, #532]	; (80016c4 <main+0x370>)
  HAL_GPIO_WritePin(GPIOB, VSYNC_FREQ_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80014ae:	f44f 7184 	mov.w	r1, #264	; 0x108
 80014b2:	4885      	ldr	r0, [pc, #532]	; (80016c8 <main+0x374>)
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80014b4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80014bc:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80014c0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014c4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80014c8:	9200      	str	r2, [sp, #0]
 80014ca:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014cc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014d0:	ea42 0209 	orr.w	r2, r2, r9
 80014d4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80014d8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014dc:	ea02 0209 	and.w	r2, r2, r9
 80014e0:	9201      	str	r2, [sp, #4]
 80014e2:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 80014e4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014e8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80014ec:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80014f0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80014f4:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 80014f8:	9202      	str	r2, [sp, #8]
 80014fa:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014fc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001500:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001504:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001508:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800150c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001510:	9203      	str	r2, [sp, #12]
 8001512:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001514:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001518:	433a      	orrs	r2, r7
 800151a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800151e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001522:	403a      	ands	r2, r7
 8001524:	9204      	str	r2, [sp, #16]
 8001526:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001528:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800152c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001530:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001534:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001538:	f402 7200 	and.w	r2, r2, #512	; 0x200
 800153c:	9205      	str	r2, [sp, #20]
 800153e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001540:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001544:	432a      	orrs	r2, r5
 8001546:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800154a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800154e:	402a      	ands	r2, r5
 8001550:	9206      	str	r2, [sp, #24]
 8001552:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001554:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001558:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800155c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001560:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001564:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001568:	9207      	str	r2, [sp, #28]
 800156a:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800156c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001570:	f042 0208 	orr.w	r2, r2, #8
 8001574:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001578:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800157c:	f002 0208 	and.w	r2, r2, #8
 8001580:	9208      	str	r2, [sp, #32]
 8001582:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001584:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001588:	f042 0220 	orr.w	r2, r2, #32
 800158c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001590:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001594:	f002 0220 	and.w	r2, r2, #32
 8001598:	9209      	str	r2, [sp, #36]	; 0x24
 800159a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800159c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80015a0:	4332      	orrs	r2, r6
 80015a2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  HAL_GPIO_WritePin(GPIOB, VSYNC_FREQ_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015a6:	4622      	mov	r2, r4
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015a8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80015ac:	4033      	ands	r3, r6
 80015ae:	930a      	str	r3, [sp, #40]	; 0x28
 80015b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, VSYNC_FREQ_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015b2:	f004 f935 	bl	8005820 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015b6:	4622      	mov	r2, r4
 80015b8:	2106      	movs	r1, #6
 80015ba:	4844      	ldr	r0, [pc, #272]	; (80016cc <main+0x378>)
 80015bc:	f004 f930 	bl	8005820 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
 80015c0:	4629      	mov	r1, r5
 80015c2:	4622      	mov	r2, r4
 80015c4:	4842      	ldr	r0, [pc, #264]	; (80016d0 <main+0x37c>)
 80015c6:	f004 f92b 	bl	8005820 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 80015ca:	4632      	mov	r2, r6
 80015cc:	2140      	movs	r1, #64	; 0x40
 80015ce:	4840      	ldr	r0, [pc, #256]	; (80016d0 <main+0x37c>)
 80015d0:	f004 f926 	bl	8005820 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|MCU_ACTIVE_Pin;
 80015d4:	f44f 7384 	mov.w	r3, #264	; 0x108
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d8:	a90b      	add	r1, sp, #44	; 0x2c
 80015da:	483b      	ldr	r0, [pc, #236]	; (80016c8 <main+0x374>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015dc:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015e0:	e9cd 480d 	strd	r4, r8, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015e4:	f003 ff8c 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
 80015e8:	2306      	movs	r3, #6
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ea:	a90b      	add	r1, sp, #44	; 0x2c
 80015ec:	4837      	ldr	r0, [pc, #220]	; (80016cc <main+0x378>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ee:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f2:	e9cd 480d 	strd	r4, r8, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015f6:	f003 ff83 	bl	8005500 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 80015fa:	a90b      	add	r1, sp, #44	; 0x2c
 80015fc:	4834      	ldr	r0, [pc, #208]	; (80016d0 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fe:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001602:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8001606:	f003 ff7b 	bl	8005500 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 800160a:	a90b      	add	r1, sp, #44	; 0x2c
 800160c:	4830      	ldr	r0, [pc, #192]	; (80016d0 <main+0x37c>)
  hltdc.Instance = LTDC;
 800160e:	4d31      	ldr	r5, [pc, #196]	; (80016d4 <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001610:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001614:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001618:	f003 ff72 	bl	8005500 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800161c:	482e      	ldr	r0, [pc, #184]	; (80016d8 <main+0x384>)
 800161e:	4a2f      	ldr	r2, [pc, #188]	; (80016dc <main+0x388>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8001620:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 8001622:	6002      	str	r2, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8001624:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8001626:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800162a:	f003 fe3f 	bl	80052ac <HAL_CRC_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800162e:	2234      	movs	r2, #52	; 0x34
 8001630:	4621      	mov	r1, r4
 8001632:	a80b      	add	r0, sp, #44	; 0x2c
 8001634:	f01f fe25 	bl	8021282 <memset>
  hltdc.Instance = LTDC;
 8001638:	4a29      	ldr	r2, [pc, #164]	; (80016e0 <main+0x38c>)
  hltdc.Init.AccumulatedVBP = 34;
 800163a:	218f      	movs	r1, #143	; 0x8f
  hltdc.Init.AccumulatedActiveH = 514;
 800163c:	f240 300f 	movw	r0, #783	; 0x30f
  hltdc.Init.TotalHeigh = 524;
 8001640:	f240 3c1f 	movw	ip, #799	; 0x31f
  hltdc.Init.Backcolor.Blue = 0;
 8001644:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001646:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001648:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800164c:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.HorizontalSync = 29;
 8001650:	221d      	movs	r2, #29
  hltdc.Init.VerticalSync = 2;
 8001652:	e9c5 2905 	strd	r2, r9, [r5, #20]
  hltdc.Init.AccumulatedVBP = 34;
 8001656:	2222      	movs	r2, #34	; 0x22
 8001658:	e9c5 1207 	strd	r1, r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 514;
 800165c:	f240 2202 	movw	r2, #514	; 0x202
 8001660:	e9c5 0209 	strd	r0, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 524;
 8001664:	f44f 7203 	mov.w	r2, #524	; 0x20c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001668:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 524;
 800166a:	e9c5 c20b 	strd	ip, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800166e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001672:	f004 fd05 	bl	8006080 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001676:	20ff      	movs	r0, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001678:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  pLayerCfg.FBStartAdress = 0xD0000000;
 800167c:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  pLayerCfg.WindowX1 = 640;
 8001680:	f44f 7120 	mov.w	r1, #640	; 0x280
  pLayerCfg.WindowY1 = 480;
 8001684:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.WindowX0 = 0;
 8001688:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.ImageHeight = 480;
 800168a:	9216      	str	r2, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 800168c:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
 8001690:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.Alpha0 = 0;
 8001694:	e9cd 0410 	strd	r0, r4, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001698:	2005      	movs	r0, #5
  pLayerCfg.ImageWidth = 640;
 800169a:	e9cd 3114 	strd	r3, r1, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800169e:	e9cd e012 	strd	lr, r0, [sp, #72]	; 0x48
  pLayerCfg.WindowY0 = 0;
 80016a2:	e9cd 140c 	strd	r1, r4, [sp, #48]	; 0x30
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80016a6:	e9cd 290e 	strd	r2, r9, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016aa:	a90b      	add	r1, sp, #44	; 0x2c
 80016ac:	4622      	mov	r2, r4
 80016ae:	4628      	mov	r0, r5
 80016b0:	e018      	b.n	80016e4 <main+0x390>
 80016b2:	bf00      	nop
 80016b4:	51046000 	.word	0x51046000
 80016b8:	e000ed00 	.word	0xe000ed00
 80016bc:	03000012 	.word	0x03000012
 80016c0:	01010001 	.word	0x01010001
 80016c4:	58024400 	.word	0x58024400
 80016c8:	58020400 	.word	0x58020400
 80016cc:	58020800 	.word	0x58020800
 80016d0:	58020000 	.word	0x58020000
 80016d4:	24004850 	.word	0x24004850
 80016d8:	240047c4 	.word	0x240047c4
 80016dc:	58024c00 	.word	0x58024c00
 80016e0:	50001000 	.word	0x50001000
 80016e4:	f004 fd97 	bl	8006216 <HAL_LTDC_ConfigLayer>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80016e8:	4833      	ldr	r0, [pc, #204]	; (80017b8 <main+0x464>)
 80016ea:	4a34      	ldr	r2, [pc, #208]	; (80017bc <main+0x468>)
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016ec:	a90b      	add	r1, sp, #44	; 0x2c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 80016ee:	6284      	str	r4, [r0, #40]	; 0x28
  SdramTiming.RCDDelay = 16;
 80016f0:	9711      	str	r7, [sp, #68]	; 0x44
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80016f2:	e9c0 2600 	strd	r2, r6, [r0]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 80016f6:	2220      	movs	r2, #32
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_2;
 80016f8:	e9c0 2404 	strd	r2, r4, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
 80016fc:	2280      	movs	r2, #128	; 0x80
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_11;
 80016fe:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001702:	e9c0 2406 	strd	r2, r4, [r0, #24]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001706:	e9c0 4408 	strd	r4, r4, [r0, #32]
  SdramTiming.ExitSelfRefreshDelay = 16;
 800170a:	e9cd 770b 	strd	r7, r7, [sp, #44]	; 0x2c
  SdramTiming.RowCycleDelay = 16;
 800170e:	e9cd 770d 	strd	r7, r7, [sp, #52]	; 0x34
  SdramTiming.RPDelay = 16;
 8001712:	e9cd 770f 	strd	r7, r7, [sp, #60]	; 0x3c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001716:	f006 fc9f 	bl	8008058 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 800171a:	4929      	ldr	r1, [pc, #164]	; (80017c0 <main+0x46c>)
  BSP_SDRAM_DeInit(0);
 800171c:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 800171e:	680a      	ldr	r2, [r1, #0]
 8001720:	f022 0201 	bic.w	r2, r2, #1
 8001724:	600a      	str	r2, [r1, #0]
  BSP_SDRAM_DeInit(0);
 8001726:	f003 fa1f 	bl	8004b68 <BSP_SDRAM_DeInit>
  BSP_SDRAM_Init(0);
 800172a:	4620      	mov	r0, r4
 800172c:	f003 fa66 	bl	8004bfc <BSP_SDRAM_Init>
  hdma2d.Init.Mode = DMA2D_R2M;
 8001730:	4b24      	ldr	r3, [pc, #144]	; (80017c4 <main+0x470>)
  hdma2d.Instance = DMA2D;
 8001732:	4825      	ldr	r0, [pc, #148]	; (80017c8 <main+0x474>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8001734:	f44f 3240 	mov.w	r2, #196608	; 0x30000
  hdma2d.Init.OutputOffset = 0;
 8001738:	e9c0 9402 	strd	r9, r4, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 800173c:	e9c0 3200 	strd	r3, r2, [r0]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001740:	f003 fe14 	bl	800536c <HAL_DMA2D_Init>
  hqspi.Instance = QUADSPI;
 8001744:	4821      	ldr	r0, [pc, #132]	; (80017cc <main+0x478>)
 8001746:	4a22      	ldr	r2, [pc, #136]	; (80017d0 <main+0x47c>)
  hqspi.Init.FlashSize = 26;
 8001748:	f8c0 a010 	str.w	sl, [r0, #16]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_ENABLE;
 800174c:	f8c0 b020 	str.w	fp, [r0, #32]
  hqspi.Init.ClockPrescaler = 3;
 8001750:	e9c0 2800 	strd	r2, r8, [r0]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE;
 8001754:	f44f 7240 	mov.w	r2, #768	; 0x300
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 8001758:	e9c0 6402 	strd	r6, r4, [r0, #8]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 800175c:	e9c0 2405 	strd	r2, r4, [r0, #20]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001760:	f004 ff70 	bl	8006644 <HAL_QSPI_Init>
  BSP_QSPI_DeInit (0);
 8001764:	4620      	mov	r0, r4
 8001766:	f002 ff8d 	bl	8004684 <BSP_QSPI_DeInit>
  init.InterfaceMode  = MT25TL01G_QPI_MODE;
 800176a:	f240 1203 	movw	r2, #259	; 0x103
  if(BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 800176e:	a90b      	add	r1, sp, #44	; 0x2c
 8001770:	4620      	mov	r0, r4
  init.InterfaceMode  = MT25TL01G_QPI_MODE;
 8001772:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
  init.DualFlashMode  = MT25TL01G_DUALFLASH_ENABLE;
 8001776:	f88d b02e 	strb.w	fp, [sp, #46]	; 0x2e
  if(BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 800177a:	f003 f82b 	bl	80047d4 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode(0) != BSP_ERROR_NONE)
 800177e:	4620      	mov	r0, r4
 8001780:	f002 ff34 	bl	80045ec <BSP_QSPI_EnableMemoryMappedMode>
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8001784:	205c      	movs	r0, #92	; 0x5c
 8001786:	f003 fd35 	bl	80051f4 <HAL_NVIC_DisableIRQ>
  MX_TouchGFX_Init();
 800178a:	f7fe fe23 	bl	80003d4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800178e:	f7fe fe20 	bl	80003d2 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001792:	f006 ff01 	bl	8008598 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001796:	4a0f      	ldr	r2, [pc, #60]	; (80017d4 <main+0x480>)
 8001798:	4621      	mov	r1, r4
 800179a:	480f      	ldr	r0, [pc, #60]	; (80017d8 <main+0x484>)
 800179c:	f006 ff28 	bl	80085f0 <osThreadNew>
 80017a0:	4b0e      	ldr	r3, [pc, #56]	; (80017dc <main+0x488>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80017a2:	4a0f      	ldr	r2, [pc, #60]	; (80017e0 <main+0x48c>)
 80017a4:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80017a6:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80017a8:	480e      	ldr	r0, [pc, #56]	; (80017e4 <main+0x490>)
 80017aa:	f006 ff21 	bl	80085f0 <osThreadNew>
 80017ae:	4b0e      	ldr	r3, [pc, #56]	; (80017e8 <main+0x494>)
 80017b0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017b2:	f006 ff03 	bl	80085bc <osKernelStart>
  while (1)
 80017b6:	e7fe      	b.n	80017b6 <main+0x462>
 80017b8:	240048f8 	.word	0x240048f8
 80017bc:	52004140 	.word	0x52004140
 80017c0:	52004000 	.word	0x52004000
 80017c4:	52001000 	.word	0x52001000
 80017c8:	240047e8 	.word	0x240047e8
 80017cc:	240054d0 	.word	0x240054d0
 80017d0:	52005000 	.word	0x52005000
 80017d4:	080226e0 	.word	0x080226e0
 80017d8:	0800129d 	.word	0x0800129d
 80017dc:	240047c0 	.word	0x240047c0
 80017e0:	080226bc 	.word	0x080226bc
 80017e4:	080003e3 	.word	0x080003e3
 80017e8:	240047bc 	.word	0x240047bc

080017ec <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80017ec:	6802      	ldr	r2, [r0, #0]
 80017ee:	4b03      	ldr	r3, [pc, #12]	; (80017fc <HAL_TIM_PeriodElapsedCallback+0x10>)
 80017f0:	429a      	cmp	r2, r3
 80017f2:	d101      	bne.n	80017f8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80017f4:	f003 bc82 	b.w	80050fc <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80017f8:	4770      	bx	lr
 80017fa:	bf00      	nop
 80017fc:	40001000 	.word	0x40001000

08001800 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001800:	4770      	bx	lr
	...

08001804 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001804:	4b0a      	ldr	r3, [pc, #40]	; (8001830 <HAL_MspInit+0x2c>)
{
 8001806:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001808:	210f      	movs	r1, #15
 800180a:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800180e:	f8d3 20f4 	ldr.w	r2, [r3, #244]	; 0xf4
 8001812:	f042 0202 	orr.w	r2, r2, #2
 8001816:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800181a:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800181c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8001820:	f003 0302 	and.w	r3, r3, #2
 8001824:	9301      	str	r3, [sp, #4]
 8001826:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001828:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800182a:	f003 bca3 	b.w	8005174 <HAL_NVIC_SetPriority>
 800182e:	bf00      	nop
 8001830:	58024400 	.word	0x58024400

08001834 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001834:	6802      	ldr	r2, [r0, #0]
{
 8001836:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001838:	4b09      	ldr	r3, [pc, #36]	; (8001860 <HAL_CRC_MspInit+0x2c>)
 800183a:	429a      	cmp	r2, r3
 800183c:	d10d      	bne.n	800185a <HAL_CRC_MspInit+0x26>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800183e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8001842:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001846:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800184a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800184e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001852:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8001856:	9301      	str	r3, [sp, #4]
 8001858:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800185a:	b002      	add	sp, #8
 800185c:	4770      	bx	lr
 800185e:	bf00      	nop
 8001860:	58024c00 	.word	0x58024c00

08001864 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001864:	4b0f      	ldr	r3, [pc, #60]	; (80018a4 <HAL_DMA2D_MspInit+0x40>)
{
 8001866:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001868:	6802      	ldr	r2, [r0, #0]
 800186a:	429a      	cmp	r2, r3
 800186c:	d117      	bne.n	800189e <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800186e:	4b0e      	ldr	r3, [pc, #56]	; (80018a8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001870:	2105      	movs	r1, #5
 8001872:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001874:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001878:	f042 0210 	orr.w	r2, r2, #16
 800187c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001880:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001882:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8001886:	f003 0310 	and.w	r3, r3, #16
 800188a:	9301      	str	r3, [sp, #4]
 800188c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800188e:	f003 fc71 	bl	8005174 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001892:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001894:	b003      	add	sp, #12
 8001896:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800189a:	f003 bc9d 	b.w	80051d8 <HAL_NVIC_EnableIRQ>
}
 800189e:	b003      	add	sp, #12
 80018a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80018a4:	52001000 	.word	0x52001000
 80018a8:	58024400 	.word	0x58024400

080018ac <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80018ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018ae:	2214      	movs	r2, #20
{
 80018b0:	b0bb      	sub	sp, #236	; 0xec
 80018b2:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018b4:	2100      	movs	r1, #0
 80018b6:	eb0d 0002 	add.w	r0, sp, r2
 80018ba:	f01f fce2 	bl	8021282 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80018be:	22c0      	movs	r2, #192	; 0xc0
 80018c0:	2100      	movs	r1, #0
 80018c2:	a80a      	add	r0, sp, #40	; 0x28
 80018c4:	f01f fcdd 	bl	8021282 <memset>
  if(hltdc->Instance==LTDC)
 80018c8:	6822      	ldr	r2, [r4, #0]
 80018ca:	4b3c      	ldr	r3, [pc, #240]	; (80019bc <HAL_LTDC_MspInit+0x110>)
 80018cc:	429a      	cmp	r2, r3
 80018ce:	d173      	bne.n	80019b8 <HAL_LTDC_MspInit+0x10c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80018d0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 80018d4:	2300      	movs	r3, #0
    PeriphClkInitStruct.PLL3.PLL3M = 5;
    PeriphClkInitStruct.PLL3.PLL3N = 160;
    PeriphClkInitStruct.PLL3.PLL3P = 2;
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 32;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 80018d6:	2120      	movs	r1, #32
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80018d8:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80018da:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
 80018de:	23a0      	movs	r3, #160	; 0xa0
 80018e0:	2205      	movs	r2, #5
 80018e2:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 80018e6:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 80018e8:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 80018ec:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80018f0:	e9cd 1318 	strd	r1, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80018f4:	f005 fe9c 	bl	8007630 <HAL_RCCEx_PeriphCLKConfig>
 80018f8:	b108      	cbz	r0, 80018fe <HAL_LTDC_MspInit+0x52>
    {
      Error_Handler();
 80018fa:	f7ff ff81 	bl	8001800 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80018fe:	4b30      	ldr	r3, [pc, #192]	; (80019c0 <HAL_LTDC_MspInit+0x114>)
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
                          |GPIO_PIN_7|GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001900:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001902:	2702      	movs	r7, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001904:	2603      	movs	r6, #3
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001906:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800190a:	250e      	movs	r5, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800190c:	a905      	add	r1, sp, #20
 800190e:	482d      	ldr	r0, [pc, #180]	; (80019c4 <HAL_LTDC_MspInit+0x118>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001910:	f042 0208 	orr.w	r2, r2, #8
 8001914:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
 8001918:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 800191c:	f002 0208 	and.w	r2, r2, #8
 8001920:	9201      	str	r2, [sp, #4]
 8001922:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8001924:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001928:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800192c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001930:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001934:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001938:	9202      	str	r2, [sp, #8]
 800193a:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 800193c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001940:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001944:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001948:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800194c:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001950:	9203      	str	r2, [sp, #12]
 8001952:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001954:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001958:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800195c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001960:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001964:	9509      	str	r5, [sp, #36]	; 0x24
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001966:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800196a:	9304      	str	r3, [sp, #16]
 800196c:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800196e:	23ff      	movs	r3, #255	; 0xff
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001970:	e9cd 4607 	strd	r4, r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001974:	e9cd 3705 	strd	r3, r7, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001978:	f003 fdc2 	bl	8005500 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_11|GPIO_PIN_10|GPIO_PIN_9
 800197c:	f648 637d 	movw	r3, #36477	; 0x8e7d
                          |GPIO_PIN_3|GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001980:	a905      	add	r1, sp, #20
 8001982:	4811      	ldr	r0, [pc, #68]	; (80019c8 <HAL_LTDC_MspInit+0x11c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001984:	9509      	str	r5, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001986:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800198a:	e9cd 4607 	strd	r4, r6, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 800198e:	f003 fdb7 	bl	8005500 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8001992:	f44f 4370 	mov.w	r3, #61440	; 0xf000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001996:	a905      	add	r1, sp, #20
 8001998:	480c      	ldr	r0, [pc, #48]	; (80019cc <HAL_LTDC_MspInit+0x120>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800199a:	9509      	str	r5, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800199c:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019a0:	e9cd 4607 	strd	r4, r6, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80019a4:	f003 fdac 	bl	8005500 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 15, 0);
 80019a8:	2058      	movs	r0, #88	; 0x58
 80019aa:	4622      	mov	r2, r4
 80019ac:	210f      	movs	r1, #15
 80019ae:	f003 fbe1 	bl	8005174 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80019b2:	2058      	movs	r0, #88	; 0x58
 80019b4:	f003 fc10 	bl	80051d8 <HAL_NVIC_EnableIRQ>
    // GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    // HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80019b8:	b03b      	add	sp, #236	; 0xec
 80019ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019bc:	50001000 	.word	0x50001000
 80019c0:	58024400 	.word	0x58024400
 80019c4:	58022800 	.word	0x58022800
 80019c8:	58022400 	.word	0x58022400
 80019cc:	58022000 	.word	0x58022000

080019d0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80019d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80019d4:	b0bc      	sub	sp, #240	; 0xf0
 80019d6:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019d8:	2214      	movs	r2, #20
 80019da:	2100      	movs	r1, #0
 80019dc:	a807      	add	r0, sp, #28
 80019de:	f01f fc50 	bl	8021282 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80019e2:	22c0      	movs	r2, #192	; 0xc0
 80019e4:	2100      	movs	r1, #0
 80019e6:	a80c      	add	r0, sp, #48	; 0x30
 80019e8:	f01f fc4b 	bl	8021282 <memset>
  if(hqspi->Instance==QUADSPI)
 80019ec:	6822      	ldr	r2, [r4, #0]
 80019ee:	4b57      	ldr	r3, [pc, #348]	; (8001b4c <HAL_QSPI_MspInit+0x17c>)
 80019f0:	429a      	cmp	r2, r3
 80019f2:	f040 80a7 	bne.w	8001b44 <HAL_QSPI_MspInit+0x174>

  /* USER CODE END QUADSPI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 80019f6:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80019fa:	2300      	movs	r3, #0
    PeriphClkInitStruct.QspiClockSelection = RCC_QSPICLKSOURCE_D1HCLK;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80019fc:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 80019fe:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001a02:	f005 fe15 	bl	8007630 <HAL_RCCEx_PeriphCLKConfig>
 8001a06:	b108      	cbz	r0, 8001a0c <HAL_QSPI_MspInit+0x3c>
    {
      Error_Handler();
 8001a08:	f7ff fefa 	bl	8001800 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a0c:	4b50      	ldr	r3, [pc, #320]	; (8001b50 <HAL_QSPI_MspInit+0x180>)
    PH2     ------> QUADSPI_BK2_IO0
    PH3     ------> QUADSPI_BK2_IO1
    PB2     ------> QUADSPI_CLK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_14;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a0e:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a10:	2403      	movs	r4, #3
 8001a12:	2700      	movs	r7, #0
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a14:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001a18:	2609      	movs	r6, #9
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a1a:	a907      	add	r1, sp, #28
 8001a1c:	484d      	ldr	r0, [pc, #308]	; (8001b54 <HAL_QSPI_MspInit+0x184>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a1e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000

    GPIO_InitStruct.Pin = GPIO_PIN_11;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a22:	f04f 0801 	mov.w	r8, #1
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001a26:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001a2a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001a2e:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001a32:	9201      	str	r2, [sp, #4]
 8001a34:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001a36:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a3a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001a3e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a42:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a46:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001a4a:	9202      	str	r2, [sp, #8]
 8001a4c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a4e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a52:	f042 0204 	orr.w	r2, r2, #4
 8001a56:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a5a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a5e:	f002 0204 	and.w	r2, r2, #4
 8001a62:	9203      	str	r2, [sp, #12]
 8001a64:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001a66:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a6a:	f042 0220 	orr.w	r2, r2, #32
 8001a6e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a72:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a76:	f002 0220 	and.w	r2, r2, #32
 8001a7a:	9204      	str	r2, [sp, #16]
 8001a7c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8001a7e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a82:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001a86:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001a8a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a8e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001a92:	9205      	str	r2, [sp, #20]
 8001a94:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a96:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001a9a:	f042 0202 	orr.w	r2, r2, #2
 8001a9e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001aa2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001aa6:	f003 0302 	and.w	r3, r3, #2
 8001aaa:	9306      	str	r3, [sp, #24]
 8001aac:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aae:	f44f 4384 	mov.w	r3, #16896	; 0x4200
 8001ab2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ab6:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001aba:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001abc:	f003 fd20 	bl	8005500 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001ac0:	f44f 6300 	mov.w	r3, #2048	; 0x800
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ac4:	a907      	add	r1, sp, #28
 8001ac6:	4824      	ldr	r0, [pc, #144]	; (8001b58 <HAL_QSPI_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001ac8:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aca:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ace:	e9cd 8409 	strd	r8, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ad2:	f003 fd15 	bl	8005500 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001ad6:	2340      	movs	r3, #64	; 0x40
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ad8:	a907      	add	r1, sp, #28
 8001ada:	481e      	ldr	r0, [pc, #120]	; (8001b54 <HAL_QSPI_MspInit+0x184>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001adc:	e9cd 8409 	strd	r8, r4, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001ae0:	f04f 080a 	mov.w	r8, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ae4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001ae8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aec:	f003 fd08 	bl	8005500 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001af0:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001af2:	a907      	add	r1, sp, #28
 8001af4:	4819      	ldr	r0, [pc, #100]	; (8001b5c <HAL_QSPI_MspInit+0x18c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001af6:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001afc:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b00:	f003 fcfe 	bl	8005500 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001b04:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b08:	a907      	add	r1, sp, #28
 8001b0a:	4814      	ldr	r0, [pc, #80]	; (8001b5c <HAL_QSPI_MspInit+0x18c>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001b0c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b10:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b14:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b18:	f003 fcf2 	bl	8005500 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001b1c:	230c      	movs	r3, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001b1e:	a907      	add	r1, sp, #28
 8001b20:	480f      	ldr	r0, [pc, #60]	; (8001b60 <HAL_QSPI_MspInit+0x190>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001b22:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b24:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b28:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001b2c:	f003 fce8 	bl	8005500 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b30:	2304      	movs	r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b32:	a907      	add	r1, sp, #28
 8001b34:	480b      	ldr	r0, [pc, #44]	; (8001b64 <HAL_QSPI_MspInit+0x194>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001b36:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b38:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b3c:	e9cd 7409 	strd	r7, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b40:	f003 fcde 	bl	8005500 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001b44:	b03c      	add	sp, #240	; 0xf0
 8001b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b4a:	bf00      	nop
 8001b4c:	52005000 	.word	0x52005000
 8001b50:	58024400 	.word	0x58024400
 8001b54:	58021800 	.word	0x58021800
 8001b58:	58020800 	.word	0x58020800
 8001b5c:	58021400 	.word	0x58021400
 8001b60:	58021c00 	.word	0x58021c00
 8001b64:	58020400 	.word	0x58020400

08001b68 <HAL_QSPI_MspDeInit>:
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
  if(hqspi->Instance==QUADSPI)
 8001b68:	6802      	ldr	r2, [r0, #0]
{
 8001b6a:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001b6c:	4b11      	ldr	r3, [pc, #68]	; (8001bb4 <HAL_QSPI_MspDeInit+0x4c>)
 8001b6e:	429a      	cmp	r2, r3
 8001b70:	d11f      	bne.n	8001bb2 <HAL_QSPI_MspDeInit+0x4a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001b72:	4a11      	ldr	r2, [pc, #68]	; (8001bb8 <HAL_QSPI_MspDeInit+0x50>)
    PF9     ------> QUADSPI_BK1_IO1
    PH2     ------> QUADSPI_BK2_IO0
    PH3     ------> QUADSPI_BK2_IO1
    PB2     ------> QUADSPI_CLK
    */
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_14|GPIO_PIN_6);
 8001b74:	f244 2140 	movw	r1, #16960	; 0x4240
 8001b78:	4810      	ldr	r0, [pc, #64]	; (8001bbc <HAL_QSPI_MspDeInit+0x54>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001b7a:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
 8001b7e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001b82:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_9|GPIO_PIN_14|GPIO_PIN_6);
 8001b86:	f003 fda5 	bl	80056d4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_11);
 8001b8a:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001b8e:	480c      	ldr	r0, [pc, #48]	; (8001bc0 <HAL_QSPI_MspDeInit+0x58>)
 8001b90:	f003 fda0 	bl	80056d4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9);
 8001b94:	f44f 7170 	mov.w	r1, #960	; 0x3c0
 8001b98:	480a      	ldr	r0, [pc, #40]	; (8001bc4 <HAL_QSPI_MspDeInit+0x5c>)
 8001b9a:	f003 fd9b 	bl	80056d4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_2|GPIO_PIN_3);
 8001b9e:	210c      	movs	r1, #12
 8001ba0:	4809      	ldr	r0, [pc, #36]	; (8001bc8 <HAL_QSPI_MspDeInit+0x60>)
 8001ba2:	f003 fd97 	bl	80056d4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 8001ba6:	2104      	movs	r1, #4
 8001ba8:	4808      	ldr	r0, [pc, #32]	; (8001bcc <HAL_QSPI_MspDeInit+0x64>)
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001baa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 8001bae:	f003 bd91 	b.w	80056d4 <HAL_GPIO_DeInit>
}
 8001bb2:	bd08      	pop	{r3, pc}
 8001bb4:	52005000 	.word	0x52005000
 8001bb8:	58024400 	.word	0x58024400
 8001bbc:	58021800 	.word	0x58021800
 8001bc0:	58020800 	.word	0x58020800
 8001bc4:	58021400 	.word	0x58021400
 8001bc8:	58021c00 	.word	0x58021c00
 8001bcc:	58020400 	.word	0x58020400

08001bd0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bd2:	b0b7      	sub	sp, #220	; 0xdc
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001bd4:	2100      	movs	r1, #0
 8001bd6:	2214      	movs	r2, #20
 8001bd8:	a801      	add	r0, sp, #4
 8001bda:	f01f fb52 	bl	8021282 <memset>
  if (FMC_Initialized) {
 8001bde:	4b3f      	ldr	r3, [pc, #252]	; (8001cdc <HAL_SDRAM_MspInit+0x10c>)
 8001be0:	6819      	ldr	r1, [r3, #0]
 8001be2:	2900      	cmp	r1, #0
 8001be4:	d177      	bne.n	8001cd6 <HAL_SDRAM_MspInit+0x106>
  FMC_Initialized = 1;
 8001be6:	2201      	movs	r2, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001be8:	a808      	add	r0, sp, #32
  FMC_Initialized = 1;
 8001bea:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001bec:	22b8      	movs	r2, #184	; 0xb8
 8001bee:	f01f fb48 	bl	8021282 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 8001bf2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001bf6:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bf8:	a806      	add	r0, sp, #24
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 8001bfa:	e9cd 2306 	strd	r2, r3, [sp, #24]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bfe:	f005 fd17 	bl	8007630 <HAL_RCCEx_PeriphCLKConfig>
 8001c02:	b108      	cbz	r0, 8001c08 <HAL_SDRAM_MspInit+0x38>
      Error_Handler();
 8001c04:	f7ff fdfc 	bl	8001800 <Error_Handler>
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c08:	4b35      	ldr	r3, [pc, #212]	; (8001ce0 <HAL_SDRAM_MspInit+0x110>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c0a:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c0c:	2600      	movs	r6, #0
 8001c0e:	2503      	movs	r5, #3
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c10:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c14:	240c      	movs	r4, #12
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001c16:	a901      	add	r1, sp, #4
 8001c18:	4832      	ldr	r0, [pc, #200]	; (8001ce4 <HAL_SDRAM_MspInit+0x114>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c1a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c1e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001c22:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c26:	9405      	str	r4, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c28:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001c2c:	9300      	str	r3, [sp, #0]
 8001c2e:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c30:	f240 63ff 	movw	r3, #1791	; 0x6ff
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c34:	e9cd 6503 	strd	r6, r5, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c38:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001c3c:	f003 fc60 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001c40:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c42:	a901      	add	r1, sp, #4
 8001c44:	4828      	ldr	r0, [pc, #160]	; (8001ce8 <HAL_SDRAM_MspInit+0x118>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c46:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c48:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c4c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c50:	f003 fc56 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 8001c54:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c58:	a901      	add	r1, sp, #4
 8001c5a:	4824      	ldr	r0, [pc, #144]	; (8001cec <HAL_SDRAM_MspInit+0x11c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c5c:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c5e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c62:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c66:	f003 fc4b 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 8001c6a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001c6e:	a901      	add	r1, sp, #4
 8001c70:	481f      	ldr	r0, [pc, #124]	; (8001cf0 <HAL_SDRAM_MspInit+0x120>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c72:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c74:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c78:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001c7c:	f003 fc40 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_4|GPIO_PIN_0;
 8001c80:	f248 1311 	movw	r3, #33041	; 0x8111
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c84:	a901      	add	r1, sp, #4
 8001c86:	481b      	ldr	r0, [pc, #108]	; (8001cf4 <HAL_SDRAM_MspInit+0x124>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c88:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c8e:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c92:	f003 fc35 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 8001c96:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c9a:	a901      	add	r1, sp, #4
 8001c9c:	4816      	ldr	r0, [pc, #88]	; (8001cf8 <HAL_SDRAM_MspInit+0x128>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c9e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ca4:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ca8:	f003 fc2a 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 8001cac:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	a901      	add	r1, sp, #4
 8001cb2:	4812      	ldr	r0, [pc, #72]	; (8001cfc <HAL_SDRAM_MspInit+0x12c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cb4:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cba:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cbe:	f003 fc1f 	bl	8005500 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001cc2:	2301      	movs	r3, #1
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cc4:	a901      	add	r1, sp, #4
 8001cc6:	480e      	ldr	r0, [pc, #56]	; (8001d00 <HAL_SDRAM_MspInit+0x130>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cc8:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cce:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cd2:	f003 fc15 	bl	8005500 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001cd6:	b037      	add	sp, #220	; 0xdc
 8001cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cda:	bf00      	nop
 8001cdc:	24004930 	.word	0x24004930
 8001ce0:	58024400 	.word	0x58024400
 8001ce4:	58022000 	.word	0x58022000
 8001ce8:	58020400 	.word	0x58020400
 8001cec:	58021000 	.word	0x58021000
 8001cf0:	58021c00 	.word	0x58021c00
 8001cf4:	58021800 	.word	0x58021800
 8001cf8:	58020c00 	.word	0x58020c00
 8001cfc:	58021400 	.word	0x58021400
 8001d00:	58020800 	.word	0x58020800

08001d04 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
 8001d04:	4b1a      	ldr	r3, [pc, #104]	; (8001d70 <HAL_SDRAM_MspDeInit+0x6c>)
 8001d06:	681a      	ldr	r2, [r3, #0]
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001d08:	b510      	push	{r4, lr}
  if (FMC_DeInitialized) {
 8001d0a:	bb82      	cbnz	r2, 8001d6e <HAL_SDRAM_MspDeInit+0x6a>
  __HAL_RCC_FMC_CLK_DISABLE();
 8001d0c:	4a19      	ldr	r2, [pc, #100]	; (8001d74 <HAL_SDRAM_MspDeInit+0x70>)
  FMC_DeInitialized = 1;
 8001d0e:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 8001d10:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001d14:	4818      	ldr	r0, [pc, #96]	; (8001d78 <HAL_SDRAM_MspDeInit+0x74>)
  FMC_DeInitialized = 1;
 8001d16:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001d18:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
 8001d1c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001d20:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 8001d24:	f003 fcd6 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOB, GPIO_PIN_5|GPIO_PIN_6);
 8001d28:	2160      	movs	r1, #96	; 0x60
 8001d2a:	4814      	ldr	r0, [pc, #80]	; (8001d7c <HAL_SDRAM_MspDeInit+0x78>)
 8001d2c:	f003 fcd2 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 8001d30:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001d34:	4812      	ldr	r0, [pc, #72]	; (8001d80 <HAL_SDRAM_MspDeInit+0x7c>)
 8001d36:	f003 fccd 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 8001d3a:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001d3e:	4811      	ldr	r0, [pc, #68]	; (8001d84 <HAL_SDRAM_MspDeInit+0x80>)
 8001d40:	f003 fcc8 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_4|GPIO_PIN_0);
 8001d44:	f248 1111 	movw	r1, #33041	; 0x8111
 8001d48:	480f      	ldr	r0, [pc, #60]	; (8001d88 <HAL_SDRAM_MspDeInit+0x84>)
 8001d4a:	f003 fcc3 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 8001d4e:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001d52:	480e      	ldr	r0, [pc, #56]	; (8001d8c <HAL_SDRAM_MspDeInit+0x88>)
 8001d54:	f003 fcbe 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 8001d58:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001d5c:	480c      	ldr	r0, [pc, #48]	; (8001d90 <HAL_SDRAM_MspDeInit+0x8c>)
 8001d5e:	f003 fcb9 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 8001d62:	4621      	mov	r1, r4
 8001d64:	480b      	ldr	r0, [pc, #44]	; (8001d94 <HAL_SDRAM_MspDeInit+0x90>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 8001d6a:	f003 bcb3 	b.w	80056d4 <HAL_GPIO_DeInit>
}
 8001d6e:	bd10      	pop	{r4, pc}
 8001d70:	2400492c 	.word	0x2400492c
 8001d74:	58024400 	.word	0x58024400
 8001d78:	58022000 	.word	0x58022000
 8001d7c:	58020400 	.word	0x58020400
 8001d80:	58021000 	.word	0x58021000
 8001d84:	58021c00 	.word	0x58021c00
 8001d88:	58021800 	.word	0x58021800
 8001d8c:	58020c00 	.word	0x58020c00
 8001d90:	58021400 	.word	0x58021400
 8001d94:	58020800 	.word	0x58020800

08001d98 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001d98:	280f      	cmp	r0, #15
{
 8001d9a:	b510      	push	{r4, lr}
 8001d9c:	4604      	mov	r4, r0
 8001d9e:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001da0:	d902      	bls.n	8001da8 <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
 8001da2:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001da4:	b00a      	add	sp, #40	; 0x28
 8001da6:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
 8001da8:	4601      	mov	r1, r0
 8001daa:	2200      	movs	r2, #0
 8001dac:	2036      	movs	r0, #54	; 0x36
 8001dae:	f003 f9e1 	bl	8005174 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001db2:	2036      	movs	r0, #54	; 0x36
 8001db4:	f003 fa10 	bl	80051d8 <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
 8001db8:	4b18      	ldr	r3, [pc, #96]	; (8001e1c <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001dba:	4669      	mov	r1, sp
 8001dbc:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
 8001dbe:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001dc0:	4b17      	ldr	r3, [pc, #92]	; (8001e20 <HAL_InitTick+0x88>)
 8001dc2:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
 8001dc6:	f042 0210 	orr.w	r2, r2, #16
 8001dca:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
 8001dce:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8001dd2:	f003 0310 	and.w	r3, r3, #16
 8001dd6:	9301      	str	r3, [sp, #4]
 8001dd8:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001dda:	f005 fb0f 	bl	80073fc <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001dde:	9b07      	ldr	r3, [sp, #28]
 8001de0:	b9c3      	cbnz	r3, 8001e14 <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001de2:	f005 faf9 	bl	80073d8 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001de6:	4c0f      	ldr	r4, [pc, #60]	; (8001e24 <HAL_InitTick+0x8c>)
 8001de8:	4b0f      	ldr	r3, [pc, #60]	; (8001e28 <HAL_InitTick+0x90>)
 8001dea:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001dec:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001df0:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001df2:	4b0e      	ldr	r3, [pc, #56]	; (8001e2c <HAL_InitTick+0x94>)
 8001df4:	fbb0 f0f3 	udiv	r0, r0, r3
 8001df8:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
 8001dfa:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001dfc:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001dfe:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001e00:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e02:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e04:	f006 faee 	bl	80083e4 <HAL_TIM_Base_Init>
 8001e08:	2800      	cmp	r0, #0
 8001e0a:	d1ca      	bne.n	8001da2 <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
 8001e0c:	4620      	mov	r0, r4
 8001e0e:	f006 f991 	bl	8008134 <HAL_TIM_Base_Start_IT>
 8001e12:	e7c7      	b.n	8001da4 <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001e14:	f005 fae0 	bl	80073d8 <HAL_RCC_GetPCLK1Freq>
 8001e18:	0040      	lsls	r0, r0, #1
 8001e1a:	e7e4      	b.n	8001de6 <HAL_InitTick+0x4e>
 8001e1c:	24000078 	.word	0x24000078
 8001e20:	58024400 	.word	0x58024400
 8001e24:	24004934 	.word	0x24004934
 8001e28:	40001000 	.word	0x40001000
 8001e2c:	000f4240 	.word	0x000f4240

08001e30 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001e30:	4770      	bx	lr

08001e32 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e32:	e7fe      	b.n	8001e32 <HardFault_Handler>

08001e34 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e34:	e7fe      	b.n	8001e34 <MemManage_Handler>

08001e36 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e36:	e7fe      	b.n	8001e36 <BusFault_Handler>

08001e38 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e38:	e7fe      	b.n	8001e38 <UsageFault_Handler>

08001e3a <DebugMon_Handler>:
 8001e3a:	4770      	bx	lr

08001e3c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001e3c:	4801      	ldr	r0, [pc, #4]	; (8001e44 <TIM6_DAC_IRQHandler+0x8>)
 8001e3e:	f006 b9bb 	b.w	80081b8 <HAL_TIM_IRQHandler>
 8001e42:	bf00      	nop
 8001e44:	24004934 	.word	0x24004934

08001e48 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001e48:	4801      	ldr	r0, [pc, #4]	; (8001e50 <LTDC_IRQHandler+0x8>)
 8001e4a:	f004 b987 	b.w	800615c <HAL_LTDC_IRQHandler>
 8001e4e:	bf00      	nop
 8001e50:	24004850 	.word	0x24004850

08001e54 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001e54:	4801      	ldr	r0, [pc, #4]	; (8001e5c <DMA2D_IRQHandler+0x8>)
 8001e56:	f003 bac8 	b.w	80053ea <HAL_DMA2D_IRQHandler>
 8001e5a:	bf00      	nop
 8001e5c:	240047e8 	.word	0x240047e8

08001e60 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001e60:	2001      	movs	r0, #1
 8001e62:	4770      	bx	lr

08001e64 <_kill>:

int _kill(int pid, int sig)
{
 8001e64:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e66:	f01f faaf 	bl	80213c8 <__errno>
 8001e6a:	2316      	movs	r3, #22
 8001e6c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001e6e:	f04f 30ff 	mov.w	r0, #4294967295
 8001e72:	bd08      	pop	{r3, pc}

08001e74 <_exit>:

void _exit (int status)
{
 8001e74:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001e76:	f01f faa7 	bl	80213c8 <__errno>
 8001e7a:	2316      	movs	r3, #22
 8001e7c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001e7e:	e7fe      	b.n	8001e7e <_exit+0xa>

08001e80 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001e80:	b570      	push	{r4, r5, r6, lr}
 8001e82:	460d      	mov	r5, r1
 8001e84:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e86:	460e      	mov	r6, r1
 8001e88:	1b73      	subs	r3, r6, r5
 8001e8a:	429c      	cmp	r4, r3
 8001e8c:	dc01      	bgt.n	8001e92 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001e8e:	4620      	mov	r0, r4
 8001e90:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001e92:	f3af 8000 	nop.w
 8001e96:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e9a:	e7f5      	b.n	8001e88 <_read+0x8>

08001e9c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001e9c:	b570      	push	{r4, r5, r6, lr}
 8001e9e:	460d      	mov	r5, r1
 8001ea0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ea2:	460e      	mov	r6, r1
 8001ea4:	1b73      	subs	r3, r6, r5
 8001ea6:	429c      	cmp	r4, r3
 8001ea8:	dc01      	bgt.n	8001eae <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001eaa:	4620      	mov	r0, r4
 8001eac:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001eae:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001eb2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001eb6:	e7f5      	b.n	8001ea4 <_write+0x8>

08001eb8 <_close>:

int _close(int file)
{
	return -1;
}
 8001eb8:	f04f 30ff 	mov.w	r0, #4294967295
 8001ebc:	4770      	bx	lr

08001ebe <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001ebe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 8001ec2:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8001ec4:	604b      	str	r3, [r1, #4]
}
 8001ec6:	4770      	bx	lr

08001ec8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001ec8:	2001      	movs	r0, #1
 8001eca:	4770      	bx	lr

08001ecc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001ecc:	2000      	movs	r0, #0
 8001ece:	4770      	bx	lr

08001ed0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001ed0:	4a0a      	ldr	r2, [pc, #40]	; (8001efc <_sbrk+0x2c>)
 8001ed2:	6811      	ldr	r1, [r2, #0]
{
 8001ed4:	b508      	push	{r3, lr}
 8001ed6:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001ed8:	b909      	cbnz	r1, 8001ede <_sbrk+0xe>
		heap_end = &end;
 8001eda:	4909      	ldr	r1, [pc, #36]	; (8001f00 <_sbrk+0x30>)
 8001edc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001ede:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001ee0:	4669      	mov	r1, sp
 8001ee2:	4403      	add	r3, r0
 8001ee4:	428b      	cmp	r3, r1
 8001ee6:	d906      	bls.n	8001ef6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001ee8:	f01f fa6e 	bl	80213c8 <__errno>
 8001eec:	230c      	movs	r3, #12
 8001eee:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001ef0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001ef4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001ef6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001ef8:	e7fc      	b.n	8001ef4 <_sbrk+0x24>
 8001efa:	bf00      	nop
 8001efc:	24004980 	.word	0x24004980
 8001f00:	2400f060 	.word	0x2400f060

08001f04 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f04:	4770      	bx	lr

08001f06 <_ZN23ApplicationFontProviderD0Ev>:
 8001f06:	b510      	push	{r4, lr}
 8001f08:	4604      	mov	r4, r0
 8001f0a:	2104      	movs	r1, #4
 8001f0c:	f01e ff85 	bl	8020e1a <_ZdlPvj>
 8001f10:	4620      	mov	r0, r4
 8001f12:	bd10      	pop	{r4, pc}

08001f14 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001f14:	2901      	cmp	r1, #1
{
 8001f16:	b508      	push	{r3, lr}
    switch (typography)
 8001f18:	d006      	beq.n	8001f28 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001f1a:	2902      	cmp	r1, #2
 8001f1c:	d008      	beq.n	8001f30 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001f1e:	b959      	cbnz	r1, 8001f38 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001f20:	f001 fb5a 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8001f24:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001f26:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001f28:	f001 fb56 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8001f2c:	6840      	ldr	r0, [r0, #4]
 8001f2e:	e7fa      	b.n	8001f26 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001f30:	f001 fb52 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8001f34:	6880      	ldr	r0, [r0, #8]
 8001f36:	e7f6      	b.n	8001f26 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001f38:	2000      	movs	r0, #0
 8001f3a:	e7f4      	b.n	8001f26 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001f3c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001f3c:	4800      	ldr	r0, [pc, #0]	; (8001f40 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001f3e:	4770      	bx	lr
 8001f40:	08022718 	.word	0x08022718

08001f44 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001f44:	2002      	movs	r0, #2
 8001f46:	4770      	bx	lr

08001f48 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001f48:	b513      	push	{r0, r1, r4, lr}
 8001f4a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001f4c:	b151      	cbz	r1, 8001f64 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f4e:	6803      	ldr	r3, [r0, #0]
 8001f50:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8001f52:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001f54:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f58:	689c      	ldr	r4, [r3, #8]
 8001f5a:	f10d 0303 	add.w	r3, sp, #3
 8001f5e:	47a0      	blx	r4
        return glyph;
    }
 8001f60:	b002      	add	sp, #8
 8001f62:	bd10      	pop	{r4, pc}
            return 0;
 8001f64:	4608      	mov	r0, r1
 8001f66:	e7fb      	b.n	8001f60 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001f68 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001f68:	89c0      	ldrh	r0, [r0, #14]
 8001f6a:	4770      	bx	lr

08001f6c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001f6c:	8a00      	ldrh	r0, [r0, #16]
 8001f6e:	4770      	bx	lr

08001f70 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8001f70:	88c0      	ldrh	r0, [r0, #6]
 8001f72:	4770      	bx	lr

08001f74 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8001f74:	8880      	ldrh	r0, [r0, #4]
 8001f76:	4770      	bx	lr

08001f78 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001f78:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f7a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001f7e:	4770      	bx	lr

08001f80 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001f80:	7a80      	ldrb	r0, [r0, #10]
    }
 8001f82:	09c0      	lsrs	r0, r0, #7
 8001f84:	4770      	bx	lr

08001f86 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8001f86:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8001f88:	4770      	bx	lr

08001f8a <_ZN10CercleBaseD1Ev>:
}

CercleBase::~CercleBase()
{

}
 8001f8a:	4770      	bx	lr

08001f8c <_ZN10CercleBase10initializeEv>:

void CercleBase::initialize()
{

}
 8001f8c:	4770      	bx	lr

08001f8e <_ZN10CercleBaseD0Ev>:
CercleBase::~CercleBase()
 8001f8e:	b510      	push	{r4, lr}
 8001f90:	4604      	mov	r4, r0
}
 8001f92:	2188      	movs	r1, #136	; 0x88
 8001f94:	f01e ff41 	bl	8020e1a <_ZdlPvj>
 8001f98:	4620      	mov	r0, r4
 8001f9a:	bd10      	pop	{r4, pc}

08001f9c <_ZN10CercleBaseC1Ev>:
CercleBase::CercleBase()
 8001f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
          touchable(false),
 8001f9e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001fa2:	4604      	mov	r4, r0
 8001fa4:	2500      	movs	r5, #0
 8001fa6:	4606      	mov	r6, r0
 8001fa8:	8483      	strh	r3, [r0, #36]	; 0x24
 8001faa:	f104 0774 	add.w	r7, r4, #116	; 0x74
 8001fae:	4b25      	ldr	r3, [pc, #148]	; (8002044 <_ZN10CercleBaseC1Ev+0xa8>)
          firstChild(0)
 8001fb0:	6285      	str	r5, [r0, #40]	; 0x28
 8001fb2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8001fb6:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8001fba:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8001fbe:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8001fc2:	f846 3b2c 	str.w	r3, [r6], #44
 8001fc6:	4630      	mov	r0, r6
 8001fc8:	f009 fe66 	bl	800bc98 <_ZN8touchgfx6CircleC1Ev>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001fcc:	4638      	mov	r0, r7
 8001fce:	f7ff f8fb 	bl	80011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001fd2:	4b1d      	ldr	r3, [pc, #116]	; (8002048 <_ZN10CercleBaseC1Ev+0xac>)
        setX(x);
 8001fd4:	4629      	mov	r1, r5
 8001fd6:	4630      	mov	r0, r6
 8001fd8:	6763      	str	r3, [r4, #116]	; 0x74
 8001fda:	3324      	adds	r3, #36	; 0x24
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8001fdc:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
 8001fe0:	67e3      	str	r3, [r4, #124]	; 0x7c
        rect.width = width;
 8001fe2:	4b1a      	ldr	r3, [pc, #104]	; (800204c <_ZN10CercleBaseC1Ev+0xb0>)
 8001fe4:	60a3      	str	r3, [r4, #8]
        setX(x);
 8001fe6:	f7ff f803 	bl	8000ff0 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 8001fea:	4629      	mov	r1, r5
 8001fec:	4630      	mov	r0, r6
 8001fee:	f7ff f801 	bl	8000ff4 <_ZN8touchgfx8Drawable4setYEs>
        setWidth(width);
 8001ff2:	4630      	mov	r0, r6
 8001ff4:	219c      	movs	r1, #156	; 0x9c
 8001ff6:	f7fe ffff 	bl	8000ff8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8001ffa:	4630      	mov	r0, r6
 8001ffc:	216a      	movs	r1, #106	; 0x6a
 8001ffe:	f7fe fffd 	bl	8000ffc <_ZN8touchgfx8Drawable9setHeightEs>
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
        this->circleCenterY = CWRUtil::toQ5(y);
 8002002:	f44f 621c 	mov.w	r2, #2496	; 0x9c0
 8002006:	f44f 63d4 	mov.w	r3, #1696	; 0x6a0
    circle1.setCapPrecision(180);
 800200a:	4630      	mov	r0, r6
 800200c:	21b4      	movs	r1, #180	; 0xb4
     * @note    Angles are given in degrees, so a full circle is 360.
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800200e:	6665      	str	r5, [r4, #100]	; 0x64
        this->circleCenterY = CWRUtil::toQ5(y);
 8002010:	e9c4 2316 	strd	r2, r3, [r4, #88]	; 0x58
        this->circleRadius = CWRUtil::toQ5(r);
 8002014:	f44f 63c8 	mov.w	r3, #1600	; 0x640
 8002018:	6623      	str	r3, [r4, #96]	; 0x60
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 800201a:	23a0      	movs	r3, #160	; 0xa0
 800201c:	66e3      	str	r3, [r4, #108]	; 0x6c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800201e:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8002022:	66a3      	str	r3, [r4, #104]	; 0x68
 8002024:	f009 fe50 	bl	800bcc8 <_ZN8touchgfx6Circle15setCapPrecisionEi>
 8002028:	f04f 33ff 	mov.w	r3, #4294967295
    add(circle1);
 800202c:	4620      	mov	r0, r4
 800202e:	4631      	mov	r1, r6
 8002030:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002034:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
        canvasPainter = &painter;
 8002038:	6567      	str	r7, [r4, #84]	; 0x54
 800203a:	f008 fbeb 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800203e:	4620      	mov	r0, r4
 8002040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002042:	bf00      	nop
 8002044:	08022748 	.word	0x08022748
 8002048:	080233d8 	.word	0x080233d8
 800204c:	006a009c 	.word	0x006a009c

08002050 <_ZN9CroixBaseD1Ev>:
}

CroixBase::~CroixBase()
{

}
 8002050:	4770      	bx	lr

08002052 <_ZN9CroixBase10initializeEv>:

void CroixBase::initialize()
{

}
 8002052:	4770      	bx	lr

08002054 <_ZN9CroixBaseD0Ev>:
CroixBase::~CroixBase()
 8002054:	b510      	push	{r4, lr}
 8002056:	4604      	mov	r4, r0
}
 8002058:	f44f 719a 	mov.w	r1, #308	; 0x134
 800205c:	f01e fedd 	bl	8020e1a <_ZdlPvj>
 8002060:	4620      	mov	r0, r4
 8002062:	bd10      	pop	{r4, pc}

08002064 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002068:	461d      	mov	r5, r3
        setX(x);
 800206a:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800206c:	4604      	mov	r4, r0
 800206e:	4616      	mov	r6, r2
        setX(x);
 8002070:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002072:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002076:	4798      	blx	r3
        setY(y);
 8002078:	6823      	ldr	r3, [r4, #0]
 800207a:	4631      	mov	r1, r6
 800207c:	4620      	mov	r0, r4
 800207e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002080:	4798      	blx	r3
        setWidth(width);
 8002082:	6823      	ldr	r3, [r4, #0]
 8002084:	4629      	mov	r1, r5
 8002086:	4620      	mov	r0, r4
 8002088:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800208a:	4798      	blx	r3
        setHeight(height);
 800208c:	6823      	ldr	r3, [r4, #0]
 800208e:	4639      	mov	r1, r7
 8002090:	4620      	mov	r0, r4
 8002092:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002094:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8002098:	4718      	bx	r3
	...

0800209c <_ZN9CroixBaseC1Ev>:
          touchable(false),
 800209c:	f44f 7380 	mov.w	r3, #256	; 0x100
CroixBase::CroixBase()
 80020a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020a4:	4604      	mov	r4, r0
 80020a6:	2500      	movs	r5, #0
 80020a8:	4606      	mov	r6, r0
 80020aa:	8483      	strh	r3, [r0, #36]	; 0x24
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80020ac:	f8df 8128 	ldr.w	r8, [pc, #296]	; 80021d8 <_ZN9CroixBaseC1Ev+0x13c>
 80020b0:	f104 0a9c 	add.w	sl, r4, #156	; 0x9c
 80020b4:	4b46      	ldr	r3, [pc, #280]	; (80021d0 <_ZN9CroixBaseC1Ev+0x134>)
 80020b6:	f104 07b0 	add.w	r7, r4, #176	; 0xb0
 80020ba:	6285      	str	r5, [r0, #40]	; 0x28
 80020bc:	f108 0b24 	add.w	fp, r8, #36	; 0x24
 80020c0:	f504 7990 	add.w	r9, r4, #288	; 0x120
 80020c4:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80020c8:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 80020cc:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 80020d0:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80020d4:	f846 3b2c 	str.w	r3, [r6], #44
 80020d8:	4630      	mov	r0, r6
 80020da:	f00a fc8f 	bl	800c9fc <_ZN8touchgfx4LineC1Ev>
 80020de:	4650      	mov	r0, sl
 80020e0:	f7ff f872 	bl	80011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80020e4:	4638      	mov	r0, r7
 80020e6:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
 80020ea:	f8c4 809c 	str.w	r8, [r4, #156]	; 0x9c
 80020ee:	f8c4 b0a4 	str.w	fp, [r4, #164]	; 0xa4
 80020f2:	f00a fc83 	bl	800c9fc <_ZN8touchgfx4LineC1Ev>
 80020f6:	4648      	mov	r0, r9
 80020f8:	f7ff f866 	bl	80011c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        rect.width = width;
 80020fc:	4b35      	ldr	r3, [pc, #212]	; (80021d4 <_ZN9CroixBaseC1Ev+0x138>)
    line1_2.setPosition(0, 0, 156, 106);
 80020fe:	462a      	mov	r2, r5
 8002100:	4629      	mov	r1, r5
 8002102:	60a3      	str	r3, [r4, #8]
 8002104:	236a      	movs	r3, #106	; 0x6a
 8002106:	4630      	mov	r0, r6
 8002108:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800210c:	9300      	str	r3, [sp, #0]
 800210e:	239c      	movs	r3, #156	; 0x9c
 8002110:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
 8002114:	f8c4 b128 	str.w	fp, [r4, #296]	; 0x128
 8002118:	f7ff ffa4 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 800211c:	f04f 33ff 	mov.w	r3, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002120:	462a      	mov	r2, r5
 8002122:	4629      	mov	r1, r5
 8002124:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8002128:	4630      	mov	r0, r6
        color565 = LCD16bpp::getNativeColor(painterColor);
 800212a:	f8a4 30ac 	strh.w	r3, [r4, #172]	; 0xac
 800212e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
 8002132:	f00a fd79 	bl	800cc28 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002136:	f44f 6254 	mov.w	r2, #3392	; 0xd40
 800213a:	f44f 519c 	mov.w	r1, #4992	; 0x1380
 800213e:	4630      	mov	r0, r6
 8002140:	f00a fd7d 	bl	800cc3e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002144:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8002146:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 800214a:	d005      	beq.n	8002158 <_ZN9CroixBaseC1Ev+0xbc>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800214c:	f44f 73a0 	mov.w	r3, #320	; 0x140

        updateCachedShape();
 8002150:	4630      	mov	r0, r6
        lineWidthQ5 = widthQ5;
 8002152:	66a3      	str	r3, [r4, #104]	; 0x68
        updateCachedShape();
 8002154:	f00a fc72 	bl	800ca3c <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002158:	2101      	movs	r1, #1
 800215a:	4630      	mov	r0, r6
 800215c:	f00a fd7a 	bl	800cc54 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1_2);
 8002160:	4631      	mov	r1, r6
 8002162:	4620      	mov	r0, r4
 8002164:	f008 fb56 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 0, 156, 106);
 8002168:	2200      	movs	r2, #0
 800216a:	236a      	movs	r3, #106	; 0x6a
 800216c:	4638      	mov	r0, r7
 800216e:	4611      	mov	r1, r2
 8002170:	9300      	str	r3, [sp, #0]
 8002172:	239c      	movs	r3, #156	; 0x9c
 8002174:	f7ff ff76 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002178:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800217c:	2200      	movs	r2, #0
 800217e:	f44f 519c 	mov.w	r1, #4992	; 0x1380
 8002182:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
 8002186:	4638      	mov	r0, r7
 8002188:	f8a4 3130 	strh.w	r3, [r4, #304]	; 0x130
 800218c:	f8c4 90d8 	str.w	r9, [r4, #216]	; 0xd8
 8002190:	f00a fd4a 	bl	800cc28 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002194:	f44f 6254 	mov.w	r2, #3392	; 0xd40
 8002198:	2100      	movs	r1, #0
 800219a:	4638      	mov	r0, r7
 800219c:	f00a fd4f 	bl	800cc3e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80021a0:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 80021a4:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 80021a8:	d006      	beq.n	80021b8 <_ZN9CroixBaseC1Ev+0x11c>
        lineWidthQ5 = widthQ5;
 80021aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
 80021ae:	4638      	mov	r0, r7
        lineWidthQ5 = widthQ5;
 80021b0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
        updateCachedShape();
 80021b4:	f00a fc42 	bl	800ca3c <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80021b8:	4638      	mov	r0, r7
 80021ba:	2101      	movs	r1, #1
 80021bc:	f00a fd4a 	bl	800cc54 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    add(line1);
 80021c0:	4620      	mov	r0, r4
 80021c2:	4639      	mov	r1, r7
 80021c4:	f008 fb26 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80021c8:	4620      	mov	r0, r4
 80021ca:	b003      	add	sp, #12
 80021cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80021d0:	080227dc 	.word	0x080227dc
 80021d4:	006a009c 	.word	0x006a009c
 80021d8:	080233d8 	.word	0x080233d8

080021dc <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80021dc:	4770      	bx	lr

080021de <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80021de:	b510      	push	{r4, lr}
 80021e0:	4604      	mov	r4, r0
    }
 80021e2:	2108      	movs	r1, #8
 80021e4:	f01e fe19 	bl	8020e1a <_ZdlPvj>
 80021e8:	4620      	mov	r0, r4
 80021ea:	bd10      	pop	{r4, pc}

080021ec <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80021ec:	4770      	bx	lr

080021ee <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80021ee:	4770      	bx	lr

080021f0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80021f0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80021f4:	6808      	ldr	r0, [r1, #0]
 80021f6:	6849      	ldr	r1, [r1, #4]
 80021f8:	c303      	stmia	r3!, {r0, r1}
    }
 80021fa:	4770      	bx	lr

080021fc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80021fc:	4770      	bx	lr

080021fe <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80021fe:	4770      	bx	lr

08002200 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002200:	6041      	str	r1, [r0, #4]
    }
 8002202:	4770      	bx	lr

08002204 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002204:	4770      	bx	lr
	...

08002208 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002208:	4b06      	ldr	r3, [pc, #24]	; (8002224 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800220a:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800220e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002212:	2300      	movs	r3, #0
 8002214:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Morpion_2

void FrontendApplicationBase::gotoMorpion_2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMorpion_2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002218:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800221c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMorpion_2ScreenNoTransition();
    }
 8002220:	4770      	bx	lr
 8002222:	bf00      	nop
 8002224:	080022cd 	.word	0x080022cd

08002228 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002228:	2301      	movs	r3, #1
 800222a:	7203      	strb	r3, [r0, #8]
    }
 800222c:	4770      	bx	lr

0800222e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800222e:	4770      	bx	lr

08002230 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002230:	4770      	bx	lr

08002232 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002232:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002234:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 8002236:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002238:	68c2      	ldr	r2, [r0, #12]
 800223a:	689b      	ldr	r3, [r3, #8]
 800223c:	1054      	asrs	r4, r2, #1
 800223e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002242:	07d2      	lsls	r2, r2, #31
 8002244:	bf48      	it	mi
 8002246:	590a      	ldrmi	r2, [r1, r4]
    }
 8002248:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800224c:	bf48      	it	mi
 800224e:	58d3      	ldrmi	r3, [r2, r3]
 8002250:	4718      	bx	r3

08002252 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002252:	6843      	ldr	r3, [r0, #4]
 8002254:	b12b      	cbz	r3, 8002262 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002256:	6883      	ldr	r3, [r0, #8]
 8002258:	b92b      	cbnz	r3, 8002266 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800225a:	68c0      	ldr	r0, [r0, #12]
 800225c:	f000 0001 	and.w	r0, r0, #1
 8002260:	4770      	bx	lr
 8002262:	4618      	mov	r0, r3
 8002264:	4770      	bx	lr
 8002266:	2001      	movs	r0, #1
    }
 8002268:	4770      	bx	lr

0800226a <_ZN8touchgfx12NoTransitionD0Ev>:
 800226a:	b510      	push	{r4, lr}
 800226c:	4604      	mov	r4, r0
 800226e:	210c      	movs	r1, #12
 8002270:	f01e fdd3 	bl	8020e1a <_ZdlPvj>
 8002274:	4620      	mov	r0, r4
 8002276:	bd10      	pop	{r4, pc}

08002278 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002278:	b510      	push	{r4, lr}
 800227a:	4604      	mov	r4, r0
 800227c:	2110      	movs	r1, #16
 800227e:	f01e fdcc 	bl	8020e1a <_ZdlPvj>
 8002282:	4620      	mov	r0, r4
 8002284:	bd10      	pop	{r4, pc}

08002286 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002286:	b510      	push	{r4, lr}
 8002288:	4604      	mov	r4, r0
 800228a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800228e:	f01e fdc4 	bl	8020e1a <_ZdlPvj>
 8002292:	4620      	mov	r0, r4
 8002294:	bd10      	pop	{r4, pc}

08002296 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002296:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002298:	f00e f874 	bl	8010384 <_ZN8touchgfx11Application11getInstanceEv>
 800229c:	6803      	ldr	r3, [r0, #0]
    }
 800229e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80022a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80022a4:	4718      	bx	r3

080022a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80022a6:	b510      	push	{r4, lr}
 80022a8:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80022aa:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80022ae:	b158      	cbz	r0, 80022c8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80022b0:	6803      	ldr	r3, [r0, #0]
 80022b2:	68db      	ldr	r3, [r3, #12]
 80022b4:	4798      	blx	r3
 80022b6:	b138      	cbz	r0, 80022c8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80022b8:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80022bc:	6803      	ldr	r3, [r0, #0]
 80022be:	689b      	ldr	r3, [r3, #8]
 80022c0:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80022c2:	2300      	movs	r3, #0
 80022c4:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80022c8:	bd10      	pop	{r4, pc}
	...

080022cc <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoMorpion_2ScreenNoTransitionImpl()
{
 80022cc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Morpion_2View, Morpion_2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022d0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80022d4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022d6:	68a8      	ldr	r0, [r5, #8]
 80022d8:	6803      	ldr	r3, [r0, #0]
 80022da:	6a1b      	ldr	r3, [r3, #32]
 80022dc:	4798      	blx	r3
 80022de:	f243 53b7 	movw	r3, #13751	; 0x35b7
 80022e2:	4298      	cmp	r0, r3
 80022e4:	d805      	bhi.n	80022f2 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x26>
 80022e6:	4b46      	ldr	r3, [pc, #280]	; (8002400 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x134>)
 80022e8:	21a3      	movs	r1, #163	; 0xa3
 80022ea:	4a46      	ldr	r2, [pc, #280]	; (8002404 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x138>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022ec:	4846      	ldr	r0, [pc, #280]	; (8002408 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x13c>)
 80022ee:	f01e fdc3 	bl	8020e78 <__assert_func>
 80022f2:	6868      	ldr	r0, [r5, #4]
 80022f4:	6803      	ldr	r3, [r0, #0]
 80022f6:	6a1b      	ldr	r3, [r3, #32]
 80022f8:	4798      	blx	r3
 80022fa:	280f      	cmp	r0, #15
 80022fc:	d803      	bhi.n	8002306 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x3a>
 80022fe:	4b43      	ldr	r3, [pc, #268]	; (800240c <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x140>)
 8002300:	21a4      	movs	r1, #164	; 0xa4
 8002302:	4a40      	ldr	r2, [pc, #256]	; (8002404 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x138>)
 8002304:	e7f2      	b.n	80022ec <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002306:	68e8      	ldr	r0, [r5, #12]
 8002308:	6803      	ldr	r3, [r0, #0]
 800230a:	6a1b      	ldr	r3, [r3, #32]
 800230c:	4798      	blx	r3
 800230e:	280b      	cmp	r0, #11
 8002310:	d803      	bhi.n	800231a <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x4e>
 8002312:	4b3f      	ldr	r3, [pc, #252]	; (8002410 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x144>)
 8002314:	21a5      	movs	r1, #165	; 0xa5
 8002316:	4a3b      	ldr	r2, [pc, #236]	; (8002404 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x138>)
 8002318:	e7e8      	b.n	80022ec <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 800231a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8002418 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x14c>
    Application::getInstance()->clearAllTimerWidgets();
 800231e:	f00e f831 	bl	8010384 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002322:	3004      	adds	r0, #4
 8002324:	f00e f853 	bl	80103ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
 8002328:	f8d9 0000 	ldr.w	r0, [r9]
 800232c:	b110      	cbz	r0, 8002334 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800232e:	6803      	ldr	r3, [r0, #0]
 8002330:	68db      	ldr	r3, [r3, #12]
 8002332:	4798      	blx	r3
    if (*currentTrans)
 8002334:	f8d9 0000 	ldr.w	r0, [r9]
 8002338:	b110      	cbz	r0, 8002340 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800233a:	6803      	ldr	r3, [r0, #0]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	4798      	blx	r3
    if (*currentScreen)
 8002340:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800241c <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x150>
 8002344:	f8d8 0000 	ldr.w	r0, [r8]
 8002348:	b110      	cbz	r0, 8002350 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800234a:	6803      	ldr	r3, [r0, #0]
 800234c:	695b      	ldr	r3, [r3, #20]
 800234e:	4798      	blx	r3
    if (*currentPresenter)
 8002350:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002354:	b110      	cbz	r0, 800235c <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002356:	6803      	ldr	r3, [r0, #0]
 8002358:	685b      	ldr	r3, [r3, #4]
 800235a:	4798      	blx	r3
    if (*currentScreen)
 800235c:	f8d8 0000 	ldr.w	r0, [r8]
 8002360:	b110      	cbz	r0, 8002368 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002362:	6803      	ldr	r3, [r0, #0]
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	4798      	blx	r3
    if (*currentPresenter)
 8002368:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800236c:	b110      	cbz	r0, 8002374 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800236e:	6803      	ldr	r3, [r0, #0]
 8002370:	689b      	ldr	r3, [r3, #8]
 8002372:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002374:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002376:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 8002378:	f04f 0b00 	mov.w	fp, #0
 800237c:	6803      	ldr	r3, [r0, #0]
 800237e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002380:	4798      	blx	r3
 8002382:	4b24      	ldr	r3, [pc, #144]	; (8002414 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x148>)
 8002384:	4604      	mov	r4, r0
 8002386:	f8c0 b004 	str.w	fp, [r0, #4]
 800238a:	6003      	str	r3, [r0, #0]
 800238c:	4659      	mov	r1, fp
 800238e:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002392:	68a8      	ldr	r0, [r5, #8]
 8002394:	6803      	ldr	r3, [r0, #0]
 8002396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002398:	4798      	blx	r3
 800239a:	4606      	mov	r6, r0
 800239c:	f001 face 	bl	800393c <_ZN13Morpion_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80023a0:	6868      	ldr	r0, [r5, #4]
 80023a2:	4659      	mov	r1, fp
 80023a4:	6803      	ldr	r3, [r0, #0]
 80023a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023a8:	4798      	blx	r3
 80023aa:	4605      	mov	r5, r0
 80023ac:	4631      	mov	r1, r6
 80023ae:	f001 f9a1 	bl	80036f4 <_ZN18Morpion_2PresenterC1ER13Morpion_2View>
    *currentTrans = newTransition;
 80023b2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80023b6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80023ba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80023be:	b1e5      	cbz	r5, 80023fa <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0x12e>
 80023c0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80023c2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80023c6:	4630      	mov	r0, r6
 80023c8:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80023ca:	f8c5 a008 	str.w	sl, [r5, #8]
 80023ce:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80023d0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80023d2:	4798      	blx	r3
    newPresenter->activate();
 80023d4:	682b      	ldr	r3, [r5, #0]
 80023d6:	4628      	mov	r0, r5
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023dc:	4621      	mov	r1, r4
 80023de:	4630      	mov	r0, r6
 80023e0:	f00f fd8c 	bl	8011efc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023e4:	6823      	ldr	r3, [r4, #0]
 80023e6:	4620      	mov	r0, r4
 80023e8:	691b      	ldr	r3, [r3, #16]
 80023ea:	4798      	blx	r3
    newTransition->invalidate();
 80023ec:	6823      	ldr	r3, [r4, #0]
 80023ee:	4620      	mov	r0, r4
 80023f0:	695b      	ldr	r3, [r3, #20]
}
 80023f2:	b001      	add	sp, #4
 80023f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023f8:	4718      	bx	r3
    model->bind(newPresenter);
 80023fa:	462b      	mov	r3, r5
 80023fc:	e7e1      	b.n	80023c2 <_ZN23FrontendApplicationBase35gotoMorpion_2ScreenNoTransitionImplEv+0xf6>
 80023fe:	bf00      	nop
 8002400:	08022878 	.word	0x08022878
 8002404:	08022906 	.word	0x08022906
 8002408:	08022a0e 	.word	0x08022a0e
 800240c:	08022a55 	.word	0x08022a55
 8002410:	08022af8 	.word	0x08022af8
 8002414:	08022c10 	.word	0x08022c10
 8002418:	2400e46c 	.word	0x2400e46c
 800241c:	2400e468 	.word	0x2400e468

08002420 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002420:	4b04      	ldr	r3, [pc, #16]	; (8002434 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002428:	b10a      	cbz	r2, 800242e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800242a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800242c:	b900      	cbnz	r0, 8002430 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800242e:	6898      	ldr	r0, [r3, #8]
    }
 8002430:	4770      	bx	lr
 8002432:	bf00      	nop
 8002434:	2400e424 	.word	0x2400e424

08002438 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800243a:	4604      	mov	r4, r0
 800243c:	4617      	mov	r7, r2
 800243e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002440:	f00e f866 	bl	8010510 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002444:	4b10      	ldr	r3, [pc, #64]	; (8002488 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 8002446:	2500      	movs	r5, #0
        instance = this;
 8002448:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800244a:	4629      	mov	r1, r5
      model(m)
 800244c:	4b0f      	ldr	r3, [pc, #60]	; (800248c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800244e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002450:	4b0f      	ldr	r3, [pc, #60]	; (8002490 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002452:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002456:	4b0f      	ldr	r3, [pc, #60]	; (8002494 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002458:	6818      	ldr	r0, [r3, #0]
 800245a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800245e:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 8002460:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 8002464:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002466:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800246a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800246c:	4628      	mov	r0, r5
 800246e:	f001 f867 	bl	8003540 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002472:	f7ff ffd5 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8002476:	f016 fe4e 	bl	8019116 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800247a:	f7ff ffd1 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800247e:	f016 fec5 	bl	801920c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002482:	4620      	mov	r0, r4
 8002484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002486:	bf00      	nop
 8002488:	2400e478 	.word	0x2400e478
 800248c:	08022bbc 	.word	0x08022bbc
 8002490:	08022ba4 	.word	0x08022ba4
 8002494:	2400e424 	.word	0x2400e424

08002498 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002498:	4b06      	ldr	r3, [pc, #24]	; (80024b4 <_ZN23FrontendApplicationBase31gotoMorpion_2ScreenNoTransitionEv+0x1c>)
 800249a:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800249e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80024a2:	2300      	movs	r3, #0
 80024a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80024a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80024ac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop
 80024b4:	080022cd 	.word	0x080022cd

080024b8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80024b8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80024ba:	4770      	bx	lr

080024bc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80024bc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80024be:	4770      	bx	lr

080024c0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80024c0:	4770      	bx	lr

080024c2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80024c2:	888b      	ldrh	r3, [r1, #4]
 80024c4:	69c0      	ldr	r0, [r0, #28]
 80024c6:	0adb      	lsrs	r3, r3, #11
 80024c8:	680a      	ldr	r2, [r1, #0]
 80024ca:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80024ce:	4410      	add	r0, r2
 80024d0:	4770      	bx	lr

080024d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80024d2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80024d4:	b1c2      	cbz	r2, 8002508 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80024d6:	7b13      	ldrb	r3, [r2, #12]
 80024d8:	b1b3      	cbz	r3, 8002508 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80024da:	7b54      	ldrb	r4, [r2, #13]
 80024dc:	7ad2      	ldrb	r2, [r2, #11]
 80024de:	0224      	lsls	r4, r4, #8
 80024e0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80024e4:	4314      	orrs	r4, r2
 80024e6:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80024e8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80024ea:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80024ee:	8813      	ldrh	r3, [r2, #0]
 80024f0:	428b      	cmp	r3, r1
 80024f2:	d102      	bne.n	80024fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80024f4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80024f8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80024fa:	d805      	bhi.n	8002508 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80024fc:	3801      	subs	r0, #1
 80024fe:	3204      	adds	r2, #4
 8002500:	b280      	uxth	r0, r0
 8002502:	2800      	cmp	r0, #0
 8002504:	d1f3      	bne.n	80024ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002506:	e7f7      	b.n	80024f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002508:	2000      	movs	r0, #0
 800250a:	e7f5      	b.n	80024f8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800250c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800250c:	b510      	push	{r4, lr}
 800250e:	4604      	mov	r4, r0
 8002510:	212c      	movs	r1, #44	; 0x2c
 8002512:	f01e fc82 	bl	8020e1a <_ZdlPvj>
 8002516:	4620      	mov	r0, r4
 8002518:	bd10      	pop	{r4, pc}
	...

0800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800251c:	b530      	push	{r4, r5, lr}
 800251e:	b08b      	sub	sp, #44	; 0x2c
 8002520:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002522:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8002526:	9508      	str	r5, [sp, #32]
 8002528:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800252c:	9507      	str	r5, [sp, #28]
 800252e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8002532:	9506      	str	r5, [sp, #24]
 8002534:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8002538:	9505      	str	r5, [sp, #20]
 800253a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800253e:	9504      	str	r5, [sp, #16]
 8002540:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8002544:	9503      	str	r5, [sp, #12]
 8002546:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800254a:	9502      	str	r5, [sp, #8]
 800254c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002550:	9501      	str	r5, [sp, #4]
 8002552:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8002556:	9500      	str	r5, [sp, #0]
 8002558:	f00f f83a 	bl	80115d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800255c:	4b06      	ldr	r3, [pc, #24]	; (8002578 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
}
 800255e:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002560:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002562:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002564:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002566:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002568:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 800256a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800256c:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800256e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8002570:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8002572:	b00b      	add	sp, #44	; 0x2c
 8002574:	bd30      	pop	{r4, r5, pc}
 8002576:	bf00      	nop
 8002578:	08022c34 	.word	0x08022c34

0800257c <_ZN10GrilleBaseD1Ev>:
}

GrilleBase::~GrilleBase()
{

}
 800257c:	4770      	bx	lr

0800257e <_ZN10GrilleBase10initializeEv>:

void GrilleBase::initialize()
{

}
 800257e:	4770      	bx	lr

08002580 <_ZN10GrilleBaseD0Ev>:
GrilleBase::~GrilleBase()
 8002580:	b510      	push	{r4, lr}
 8002582:	4604      	mov	r4, r0
}
 8002584:	21dc      	movs	r1, #220	; 0xdc
 8002586:	f01e fc48 	bl	8020e1a <_ZdlPvj>
 800258a:	4620      	mov	r0, r4
 800258c:	bd10      	pop	{r4, pc}
	...

08002590 <_ZN10GrilleBaseC1Ev>:
          touchable(false),
 8002590:	f44f 7380 	mov.w	r3, #256	; 0x100
GrilleBase::GrilleBase()
 8002594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002598:	4604      	mov	r4, r0
 800259a:	b085      	sub	sp, #20
 800259c:	2500      	movs	r5, #0
 800259e:	4606      	mov	r6, r0
 80025a0:	8483      	strh	r3, [r0, #36]	; 0x24
 80025a2:	f104 0958 	add.w	r9, r4, #88	; 0x58
 80025a6:	4b47      	ldr	r3, [pc, #284]	; (80026c4 <_ZN10GrilleBaseC1Ev+0x134>)
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80025a8:	f64f 7aff 	movw	sl, #65535	; 0xffff
 80025ac:	f104 0884 	add.w	r8, r4, #132	; 0x84
 80025b0:	6285      	str	r5, [r0, #40]	; 0x28
 80025b2:	a903      	add	r1, sp, #12
 80025b4:	f104 07b0 	add.w	r7, r4, #176	; 0xb0
 80025b8:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025bc:	f04f 0b01 	mov.w	fp, #1
 80025c0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80025c4:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 80025c8:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 80025cc:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80025d0:	f846 3b2c 	str.w	r3, [r6], #44
 80025d4:	4630      	mov	r0, r6
 80025d6:	f00a fc3d 	bl	800ce54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80025da:	a903      	add	r1, sp, #12
 80025dc:	4648      	mov	r0, r9
 80025de:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025e2:	f00a fc37 	bl	800ce54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80025e6:	a903      	add	r1, sp, #12
 80025e8:	4640      	mov	r0, r8
 80025ea:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025ee:	f00a fc31 	bl	800ce54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80025f2:	a903      	add	r1, sp, #12
 80025f4:	4638      	mov	r0, r7
 80025f6:	f8ad a00c 	strh.w	sl, [sp, #12]
 80025fa:	f00a fc2b 	bl	800ce54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        rect.width = width;
 80025fe:	4b32      	ldr	r3, [pc, #200]	; (80026c8 <_ZN10GrilleBaseC1Ev+0x138>)
    Verticale_2.setPosition(0, 218, 480, 6);
 8002600:	f04f 0a06 	mov.w	sl, #6
    Verticale_2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 8002604:	a903      	add	r1, sp, #12
 8002606:	4630      	mov	r0, r6
 8002608:	60a3      	str	r3, [r4, #8]
 800260a:	f8ad b00c 	strh.w	fp, [sp, #12]
 800260e:	f00b fabd 	bl	800db8c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Verticale_2.setPosition(0, 218, 480, 6);
 8002612:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002616:	22da      	movs	r2, #218	; 0xda
 8002618:	4629      	mov	r1, r5
 800261a:	4630      	mov	r0, r6
 800261c:	f8cd a000 	str.w	sl, [sp]
 8002620:	f7ff fd20 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Verticale_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002624:	4629      	mov	r1, r5
 8002626:	4630      	mov	r0, r6
 8002628:	f00a fbcf 	bl	800cdca <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Verticale_2);
 800262c:	4631      	mov	r1, r6
 800262e:	4620      	mov	r0, r4
    Verticale_1.setPosition(156, 0, 6, 330);
 8002630:	f44f 76a5 	mov.w	r6, #330	; 0x14a
    add(Verticale_2);
 8002634:	f008 f8ee 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Verticale_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 8002638:	a903      	add	r1, sp, #12
 800263a:	4648      	mov	r0, r9
 800263c:	f8ad b00c 	strh.w	fp, [sp, #12]
 8002640:	f00b faa4 	bl	800db8c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Verticale_1.setPosition(156, 0, 6, 330);
 8002644:	4653      	mov	r3, sl
 8002646:	462a      	mov	r2, r5
 8002648:	4648      	mov	r0, r9
 800264a:	219c      	movs	r1, #156	; 0x9c
 800264c:	9600      	str	r6, [sp, #0]
 800264e:	f7ff fd09 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Verticale_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002652:	4629      	mov	r1, r5
 8002654:	4648      	mov	r0, r9
 8002656:	f00a fbb8 	bl	800cdca <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Verticale_1);
 800265a:	4649      	mov	r1, r9
 800265c:	4620      	mov	r0, r4
 800265e:	f008 f8d9 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Horizontale_2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 8002662:	a903      	add	r1, sp, #12
 8002664:	4640      	mov	r0, r8
 8002666:	f8ad b00c 	strh.w	fp, [sp, #12]
 800266a:	f00b fa8f 	bl	800db8c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Horizontale_2.setPosition(318, 0, 6, 330);
 800266e:	4653      	mov	r3, sl
 8002670:	462a      	mov	r2, r5
 8002672:	4640      	mov	r0, r8
 8002674:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8002678:	9600      	str	r6, [sp, #0]
 800267a:	f7ff fcf3 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Horizontale_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800267e:	4629      	mov	r1, r5
 8002680:	4640      	mov	r0, r8
 8002682:	f00a fba2 	bl	800cdca <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Horizontale_2);
 8002686:	4641      	mov	r1, r8
 8002688:	4620      	mov	r0, r4
 800268a:	f008 f8c3 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Horizontale_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_DIVIDERS_HORIZONTAL_SMALL_THICK_LIGHT_ID));
 800268e:	a903      	add	r1, sp, #12
 8002690:	4638      	mov	r0, r7
 8002692:	f8ad b00c 	strh.w	fp, [sp, #12]
 8002696:	f00b fa79 	bl	800db8c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Horizontale_1.setPosition(0, 106, 480, 6);
 800269a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800269e:	226a      	movs	r2, #106	; 0x6a
 80026a0:	4629      	mov	r1, r5
 80026a2:	4638      	mov	r0, r7
 80026a4:	f8cd a000 	str.w	sl, [sp]
 80026a8:	f7ff fcdc 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Horizontale_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80026ac:	4629      	mov	r1, r5
 80026ae:	4638      	mov	r0, r7
 80026b0:	f00a fb8b 	bl	800cdca <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(Horizontale_1);
 80026b4:	4620      	mov	r0, r4
 80026b6:	4639      	mov	r1, r7
 80026b8:	f008 f8ac 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80026bc:	4620      	mov	r0, r4
 80026be:	b005      	add	sp, #20
 80026c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026c4:	08022c94 	.word	0x08022c94
 80026c8:	014a01e0 	.word	0x014a01e0

080026cc <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80026cc:	4770      	bx	lr

080026ce <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80026ce:	4770      	bx	lr

080026d0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80026d0:	4770      	bx	lr

080026d2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80026d2:	4770      	bx	lr

080026d4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80026d4:	4770      	bx	lr

080026d6 <_ZN17Morpion_2ViewBase14restart_buttonEv>:
     * Virtual Action Handlers
     */
    virtual void restart_button()
    {
        // Override and implement this function in Morpion_2
    }
 80026d6:	4770      	bx	lr

080026d8 <_ZN17Morpion_2ViewBase10button_0_0Ev>:
    virtual void button_0_0()
    {
        // Override and implement this function in Morpion_2
    }
 80026d8:	4770      	bx	lr

080026da <_ZN17Morpion_2ViewBase10button_0_1Ev>:
    virtual void button_0_1()
    {
        // Override and implement this function in Morpion_2
    }
 80026da:	4770      	bx	lr

080026dc <_ZN17Morpion_2ViewBase10button_0_2Ev>:
    virtual void button_0_2()
    {
        // Override and implement this function in Morpion_2
    }
 80026dc:	4770      	bx	lr

080026de <_ZN17Morpion_2ViewBase10button_1_0Ev>:
    virtual void button_1_0()
    {
        // Override and implement this function in Morpion_2
    }
 80026de:	4770      	bx	lr

080026e0 <_ZN17Morpion_2ViewBase10button_1_1Ev>:
    virtual void button_1_1()
    {
        // Override and implement this function in Morpion_2
    }
 80026e0:	4770      	bx	lr

080026e2 <_ZN17Morpion_2ViewBase10button_1_2Ev>:
    virtual void button_1_2()
    {
        // Override and implement this function in Morpion_2
    }
 80026e2:	4770      	bx	lr

080026e4 <_ZN17Morpion_2ViewBase10button_2_0Ev>:
    virtual void button_2_0()
    {
        // Override and implement this function in Morpion_2
    }
 80026e4:	4770      	bx	lr

080026e6 <_ZN17Morpion_2ViewBase10button_2_1Ev>:
    virtual void button_2_1()
    {
        // Override and implement this function in Morpion_2
    }
 80026e6:	4770      	bx	lr

080026e8 <_ZN17Morpion_2ViewBase10button_2_2Ev>:
    virtual void button_2_2()
    {
        // Override and implement this function in Morpion_2
    }
 80026e8:	4770      	bx	lr

080026ea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80026ea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80026ee:	b14b      	cbz	r3, 8002704 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80026f0:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80026f4:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80026f6:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80026f8:	b13b      	cbz	r3, 800270a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80026fa:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80026fe:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002700:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002702:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002704:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002708:	e7f4      	b.n	80026f4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800270a:	f100 0370 	add.w	r3, r0, #112	; 0x70
 800270e:	e7f6      	b.n	80026fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002710 <_ZN8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002710:	4770      	bx	lr

08002712 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 8002712:	4770      	bx	lr

08002714 <_ZN8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002714:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002716:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 8002718:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800271a:	68c2      	ldr	r2, [r0, #12]
 800271c:	689b      	ldr	r3, [r3, #8]
 800271e:	1055      	asrs	r5, r2, #1
 8002720:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002724:	07d2      	lsls	r2, r2, #31
 8002726:	bf48      	it	mi
 8002728:	5962      	ldrmi	r2, [r4, r5]
    }
 800272a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800272c:	bf48      	it	mi
 800272e:	58d3      	ldrmi	r3, [r2, r3]
 8002730:	4718      	bx	r3

08002732 <_ZNK8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002732:	6843      	ldr	r3, [r0, #4]
 8002734:	b12b      	cbz	r3, 8002742 <_ZNK8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002736:	6883      	ldr	r3, [r0, #8]
 8002738:	b92b      	cbnz	r3, 8002746 <_ZNK8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800273a:	68c0      	ldr	r0, [r0, #12]
 800273c:	f000 0001 	and.w	r0, r0, #1
 8002740:	4770      	bx	lr
 8002742:	4618      	mov	r0, r3
 8002744:	4770      	bx	lr
 8002746:	2001      	movs	r0, #1
    }
 8002748:	4770      	bx	lr

0800274a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800274a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800274e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002752:	4770      	bx	lr

08002754 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002754:	b510      	push	{r4, lr}
 8002756:	4604      	mov	r4, r0
 8002758:	2178      	movs	r1, #120	; 0x78
 800275a:	f01e fb5e 	bl	8020e1a <_ZdlPvj>
 800275e:	4620      	mov	r0, r4
 8002760:	bd10      	pop	{r4, pc}

08002762 <_ZN8touchgfx8CallbackI17Morpion_2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002762:	b510      	push	{r4, lr}
 8002764:	4604      	mov	r4, r0
 8002766:	2110      	movs	r1, #16
 8002768:	f01e fb57 	bl	8020e1a <_ZdlPvj>
 800276c:	4620      	mov	r0, r4
 800276e:	bd10      	pop	{r4, pc}

08002770 <_ZN17Morpion_2ViewBase11setupScreenEv>:
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Morpion_2ViewBase::setupScreen()
{
 8002770:	b510      	push	{r4, lr}
 8002772:	4604      	mov	r4, r0
    Grille_main.initialize();
 8002774:	3098      	adds	r0, #152	; 0x98
 8002776:	f000 ffa9 	bl	80036cc <_ZN6Grille10initializeEv>
    Croix_1.initialize();
 800277a:	f604 0004 	addw	r0, r4, #2052	; 0x804
 800277e:	f000 ff67 	bl	8003650 <_ZN5Croix10initializeEv>
    Cercle_1.initialize();
 8002782:	f604 1038 	addw	r0, r4, #2360	; 0x938
 8002786:	f000 ff57 	bl	8003638 <_ZN6Cercle10initializeEv>
    Cercle_2.initialize();
 800278a:	f504 601c 	add.w	r0, r4, #2496	; 0x9c0
 800278e:	f000 ff53 	bl	8003638 <_ZN6Cercle10initializeEv>
    Croix_2.initialize();
 8002792:	f604 2048 	addw	r0, r4, #2632	; 0xa48
 8002796:	f000 ff5b 	bl	8003650 <_ZN5Croix10initializeEv>
    Cercle_3.initialize();
 800279a:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
 800279e:	f000 ff4b 	bl	8003638 <_ZN6Cercle10initializeEv>
    Croix_3.initialize();
 80027a2:	f604 4004 	addw	r0, r4, #3076	; 0xc04
 80027a6:	f000 ff53 	bl	8003650 <_ZN5Croix10initializeEv>
    Cercle_4.initialize();
 80027aa:	f604 5038 	addw	r0, r4, #3384	; 0xd38
 80027ae:	f000 ff43 	bl	8003638 <_ZN6Cercle10initializeEv>
    Croix_4.initialize();
 80027b2:	f504 605c 	add.w	r0, r4, #3520	; 0xdc0
 80027b6:	f000 ff4b 	bl	8003650 <_ZN5Croix10initializeEv>
    Croix_5.initialize();
 80027ba:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
}
 80027be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Croix_5.initialize();
 80027c2:	f000 bf45 	b.w	8003650 <_ZN5Croix10initializeEv>

080027c6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80027c6:	b510      	push	{r4, lr}
 80027c8:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80027ca:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80027cc:	b150      	cbz	r0, 80027e4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80027ce:	6803      	ldr	r3, [r0, #0]
 80027d0:	68db      	ldr	r3, [r3, #12]
 80027d2:	4798      	blx	r3
 80027d4:	b130      	cbz	r0, 80027e4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80027d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80027d8:	4621      	mov	r1, r4
 80027da:	6803      	ldr	r3, [r0, #0]
        }
    }
 80027dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80027e0:	689b      	ldr	r3, [r3, #8]
 80027e2:	4718      	bx	r3
    }
 80027e4:	bd10      	pop	{r4, pc}

080027e6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80027e6:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80027e8:	b570      	push	{r4, r5, r6, lr}
 80027ea:	4604      	mov	r4, r0
 80027ec:	460d      	mov	r5, r1
        return pressed;
 80027ee:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80027f2:	b99b      	cbnz	r3, 800281c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80027f4:	b98e      	cbnz	r6, 800281a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80027f6:	fab3 f383 	clz	r3, r3
        handlePressedUpdated();
 80027fa:	4620      	mov	r0, r4
 80027fc:	095b      	lsrs	r3, r3, #5
 80027fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8002802:	6823      	ldr	r3, [r4, #0]
 8002804:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002808:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 800280a:	6823      	ldr	r3, [r4, #0]
 800280c:	4620      	mov	r0, r4
 800280e:	695b      	ldr	r3, [r3, #20]
 8002810:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002812:	b116      	cbz	r6, 800281a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002814:	792b      	ldrb	r3, [r5, #4]
 8002816:	2b01      	cmp	r3, #1
 8002818:	d003      	beq.n	8002822 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 800281a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800281c:	2e00      	cmp	r6, #0
 800281e:	d0fc      	beq.n	800281a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002820:	e7e9      	b.n	80027f6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002822:	6823      	ldr	r3, [r4, #0]
 8002824:	4620      	mov	r0, r4
 8002826:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 800282a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 800282e:	4718      	bx	r3

08002830 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002830:	4a07      	ldr	r2, [pc, #28]	; (8002850 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8002832:	6002      	str	r2, [r0, #0]
 8002834:	2200      	movs	r2, #0
 8002836:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800283a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800283e:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002842:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002846:	f44f 7280 	mov.w	r2, #256	; 0x100
 800284a:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 800284c:	4770      	bx	lr
 800284e:	bf00      	nop
 8002850:	08023930 	.word	0x08023930

08002854 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002854:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002856:	b570      	push	{r4, r5, r6, lr}
 8002858:	4604      	mov	r4, r0
        setX(x);
 800285a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800285c:	4615      	mov	r5, r2
        setX(x);
 800285e:	4798      	blx	r3
        setY(y);
 8002860:	6823      	ldr	r3, [r4, #0]
 8002862:	4620      	mov	r0, r4
 8002864:	4629      	mov	r1, r5
 8002866:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002868:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800286c:	4718      	bx	r3
	...

08002870 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002870:	b510      	push	{r4, lr}
 8002872:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002874:	2226      	movs	r2, #38	; 0x26
 8002876:	2100      	movs	r1, #0
 8002878:	f01e fd03 	bl	8021282 <memset>
class Widget : public Drawable
 800287c:	4620      	mov	r0, r4
 800287e:	f7ff ffd7 	bl	8002830 <_ZN8touchgfx8DrawableC1Ev>
 8002882:	4b04      	ldr	r3, [pc, #16]	; (8002894 <_ZN8touchgfx3BoxC1Ev+0x24>)
    }
 8002884:	4620      	mov	r0, r4
        : Widget(), alpha(255), color(0)
 8002886:	6023      	str	r3, [r4, #0]
 8002888:	23ff      	movs	r3, #255	; 0xff
 800288a:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 800288e:	2300      	movs	r3, #0
 8002890:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002892:	bd10      	pop	{r4, pc}
 8002894:	08023790 	.word	0x08023790

08002898 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8002898:	b510      	push	{r4, lr}
 800289a:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800289c:	2226      	movs	r2, #38	; 0x26
 800289e:	2100      	movs	r1, #0
 80028a0:	f01e fcef 	bl	8021282 <memset>
 80028a4:	4620      	mov	r0, r4
 80028a6:	f7ff ffc3 	bl	8002830 <_ZN8touchgfx8DrawableC1Ev>
 80028aa:	4b0a      	ldr	r3, [pc, #40]	; (80028d4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80028ac:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
    {
    }
 80028b0:	4620      	mov	r0, r4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80028b2:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80028b4:	4b08      	ldr	r3, [pc, #32]	; (80028d8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80028b6:	62a3      	str	r3, [r4, #40]	; 0x28
 80028b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028bc:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80028be:	2300      	movs	r3, #0
 80028c0:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80028c4:	f04f 32ff 	mov.w	r2, #4294967295
 80028c8:	8723      	strh	r3, [r4, #56]	; 0x38
 80028ca:	63e3      	str	r3, [r4, #60]	; 0x3c
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80028cc:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
    }
 80028d0:	bd10      	pop	{r4, pc}
 80028d2:	bf00      	nop
 80028d4:	08023700 	.word	0x08023700
 80028d8:	08022870 	.word	0x08022870

080028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>:
        handleAlphaUpdated();
 80028dc:	6803      	ldr	r3, [r0, #0]
        alpha = newAlpha;
 80028de:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
        handleAlphaUpdated();
 80028e2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80028e6:	4718      	bx	r3

080028e8 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Morpion_2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Restart)
 80028e8:	f500 7355 	add.w	r3, r0, #852	; 0x354
 80028ec:	4299      	cmp	r1, r3
{
 80028ee:	b570      	push	{r4, r5, r6, lr}
 80028f0:	4604      	mov	r4, r0
 80028f2:	460d      	mov	r5, r1
    if (&src == &Restart)
 80028f4:	d102      	bne.n	80028fc <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    {
        //Restart_Game
        //When Restart clicked call virtual function
        //Call restart_button
        restart_button();
 80028f6:	6803      	ldr	r3, [r0, #0]
 80028f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028fa:	4798      	blx	r3
    }
    if (&src == &Quit)
 80028fc:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8002900:	42ab      	cmp	r3, r5
 8002902:	d106      	bne.n	8002912 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
    {
        //Quit_Game
        //When Quit clicked fade Quit
        //Set alpha to 255 on Quit
        Quit.setAlpha(255);
 8002904:	4628      	mov	r0, r5
 8002906:	21ff      	movs	r1, #255	; 0xff
 8002908:	f7ff ffe8 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
        Quit.invalidate();
 800290c:	4628      	mov	r0, r5
 800290e:	f00e fdb2 	bl	8011476 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
    if (&src == &Button_0_0)
 8002912:	f204 738c 	addw	r3, r4, #1932	; 0x78c
 8002916:	429d      	cmp	r5, r3
 8002918:	d103      	bne.n	8002922 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
    {
        //Button_0_0
        //When Button_0_0 clicked call virtual function
        //Call button_0_0
        button_0_0();
 800291a:	6823      	ldr	r3, [r4, #0]
 800291c:	4620      	mov	r0, r4
 800291e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002920:	4798      	blx	r3
    }
    if (&src == &Button_0_1)
 8002922:	f204 7314 	addw	r3, r4, #1812	; 0x714
 8002926:	429d      	cmp	r5, r3
 8002928:	d103      	bne.n	8002932 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4a>
    {
        //Button_0_1
        //When Button_0_1 clicked call virtual function
        //Call button_0_1
        button_0_1();
 800292a:	6823      	ldr	r3, [r4, #0]
 800292c:	4620      	mov	r0, r4
 800292e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002930:	4798      	blx	r3
    }
    if (&src == &Button_0_2)
 8002932:	f204 639c 	addw	r3, r4, #1692	; 0x69c
 8002936:	429d      	cmp	r5, r3
 8002938:	d103      	bne.n	8002942 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
    {
        //Button_0_2
        //When Button_0_2 clicked call virtual function
        //Call button_0_2
        button_0_2();
 800293a:	6823      	ldr	r3, [r4, #0]
 800293c:	4620      	mov	r0, r4
 800293e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002940:	4798      	blx	r3
    }
    if (&src == &Button_1_0)
 8002942:	f204 6324 	addw	r3, r4, #1572	; 0x624
 8002946:	429d      	cmp	r5, r3
 8002948:	d103      	bne.n	8002952 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6a>
    {
        //Button_1_0
        //When Button_1_0 clicked call virtual function
        //Call button_1_0
        button_1_0();
 800294a:	6823      	ldr	r3, [r4, #0]
 800294c:	4620      	mov	r0, r4
 800294e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002950:	4798      	blx	r3
    }
    if (&src == &Button_1_1)
 8002952:	f204 53ac 	addw	r3, r4, #1452	; 0x5ac
 8002956:	429d      	cmp	r5, r3
 8002958:	d103      	bne.n	8002962 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x7a>
    {
        //Button_1_1
        //When Button_1_1 clicked call virtual function
        //Call button_1_1
        button_1_1();
 800295a:	6823      	ldr	r3, [r4, #0]
 800295c:	4620      	mov	r0, r4
 800295e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002960:	4798      	blx	r3
    }
    if (&src == &Button_1_2)
 8002962:	f204 5334 	addw	r3, r4, #1332	; 0x534
 8002966:	429d      	cmp	r5, r3
 8002968:	d103      	bne.n	8002972 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8a>
    {
        //Button_1_2
        //When Button_1_2 clicked call virtual function
        //Call button_1_2
        button_1_2();
 800296a:	6823      	ldr	r3, [r4, #0]
 800296c:	4620      	mov	r0, r4
 800296e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002970:	4798      	blx	r3
    }
    if (&src == &Button_2_0)
 8002972:	f204 43bc 	addw	r3, r4, #1212	; 0x4bc
 8002976:	429d      	cmp	r5, r3
 8002978:	d103      	bne.n	8002982 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x9a>
    {
        //Button_2_0
        //When Button_2_0 clicked call virtual function
        //Call button_2_0
        button_2_0();
 800297a:	6823      	ldr	r3, [r4, #0]
 800297c:	4620      	mov	r0, r4
 800297e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002980:	4798      	blx	r3
    }
    if (&src == &Button_2_1)
 8002982:	f204 4344 	addw	r3, r4, #1092	; 0x444
 8002986:	429d      	cmp	r5, r3
 8002988:	d103      	bne.n	8002992 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xaa>
    {
        //Button_2_1
        //When Button_2_1 clicked call virtual function
        //Call button_2_1
        button_2_1();
 800298a:	6823      	ldr	r3, [r4, #0]
 800298c:	4620      	mov	r0, r4
 800298e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002990:	4798      	blx	r3
    }
    if (&src == &Button_2_2)
 8002992:	f504 7373 	add.w	r3, r4, #972	; 0x3cc
 8002996:	429d      	cmp	r5, r3
 8002998:	d105      	bne.n	80029a6 <_ZN17Morpion_2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xbe>
    {
        //Button_2_2
        //When Button_2_2 clicked call virtual function
        //Call button_2_2
        button_2_2();
 800299a:	6823      	ldr	r3, [r4, #0]
 800299c:	4620      	mov	r0, r4
 800299e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    }
}
 80029a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        button_2_2();
 80029a4:	4718      	bx	r3
}
 80029a6:	bd70      	pop	{r4, r5, r6, pc}

080029a8 <_ZN5CroixD1Ev>:

class Croix : public CroixBase
{
public:
    Croix();
    virtual ~Croix() {}
 80029a8:	4b03      	ldr	r3, [pc, #12]	; (80029b8 <_ZN5CroixD1Ev+0x10>)
 80029aa:	b510      	push	{r4, lr}
 80029ac:	4604      	mov	r4, r0
 80029ae:	6003      	str	r3, [r0, #0]
 80029b0:	f7ff fb4e 	bl	8002050 <_ZN9CroixBaseD1Ev>
 80029b4:	4620      	mov	r0, r4
 80029b6:	bd10      	pop	{r4, pc}
 80029b8:	080230ac 	.word	0x080230ac

080029bc <_ZN17Morpion_2ViewBaseD1Ev>:
Morpion_2ViewBase::~Morpion_2ViewBase()
 80029bc:	b538      	push	{r3, r4, r5, lr}
 80029be:	4b1d      	ldr	r3, [pc, #116]	; (8002a34 <_ZN17Morpion_2ViewBaseD1Ev+0x78>)
 80029c0:	4604      	mov	r4, r0

class Cercle : public CercleBase
{
public:
    Cercle();
    virtual ~Cercle() {}
 80029c2:	4d1d      	ldr	r5, [pc, #116]	; (8002a38 <_ZN17Morpion_2ViewBaseD1Ev+0x7c>)
 80029c4:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80029c6:	f00b ffdd 	bl	800e984 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Morpion_2ViewBase::~Morpion_2ViewBase()
 80029ca:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
 80029ce:	f7ff ffeb 	bl	80029a8 <_ZN5CroixD1Ev>
 80029d2:	f504 605c 	add.w	r0, r4, #3520	; 0xdc0
 80029d6:	f7ff ffe7 	bl	80029a8 <_ZN5CroixD1Ev>
 80029da:	f604 5038 	addw	r0, r4, #3384	; 0xd38
 80029de:	f8c4 5d38 	str.w	r5, [r4, #3384]	; 0xd38
 80029e2:	f7ff fad2 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 80029e6:	f604 4004 	addw	r0, r4, #3076	; 0xc04
 80029ea:	f7ff ffdd 	bl	80029a8 <_ZN5CroixD1Ev>
 80029ee:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
 80029f2:	f8c4 5b7c 	str.w	r5, [r4, #2940]	; 0xb7c
 80029f6:	f7ff fac8 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 80029fa:	f604 2048 	addw	r0, r4, #2632	; 0xa48
 80029fe:	f7ff ffd3 	bl	80029a8 <_ZN5CroixD1Ev>
 8002a02:	f504 601c 	add.w	r0, r4, #2496	; 0x9c0
 8002a06:	f8c4 59c0 	str.w	r5, [r4, #2496]	; 0x9c0
 8002a0a:	f7ff fabe 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 8002a0e:	f604 1038 	addw	r0, r4, #2360	; 0x938
 8002a12:	f8c4 5938 	str.w	r5, [r4, #2360]	; 0x938
 8002a16:	f7ff fab8 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 8002a1a:	f604 0004 	addw	r0, r4, #2052	; 0x804
 8002a1e:	f7ff ffc3 	bl	80029a8 <_ZN5CroixD1Ev>

class Grille : public GrilleBase
{
public:
    Grille();
    virtual ~Grille() {}
 8002a22:	4620      	mov	r0, r4
 8002a24:	4b05      	ldr	r3, [pc, #20]	; (8002a3c <_ZN17Morpion_2ViewBaseD1Ev+0x80>)
 8002a26:	f840 3f98 	str.w	r3, [r0, #152]!
 8002a2a:	f7ff fda7 	bl	800257c <_ZN10GrilleBaseD1Ev>
}
 8002a2e:	4620      	mov	r0, r4
 8002a30:	bd38      	pop	{r3, r4, r5, pc}
 8002a32:	bf00      	nop
 8002a34:	08022ddc 	.word	0x08022ddc
 8002a38:	08023018 	.word	0x08023018
 8002a3c:	08023194 	.word	0x08023194

08002a40 <_ZN17Morpion_2ViewBaseD0Ev>:
Morpion_2ViewBase::~Morpion_2ViewBase()
 8002a40:	b510      	push	{r4, lr}
 8002a42:	4604      	mov	r4, r0
}
 8002a44:	f7ff ffba 	bl	80029bc <_ZN17Morpion_2ViewBaseD1Ev>
 8002a48:	f243 51b8 	movw	r1, #13752	; 0x35b8
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	f01e f9e4 	bl	8020e1a <_ZdlPvj>
 8002a52:	4620      	mov	r0, r4
 8002a54:	bd10      	pop	{r4, pc}

08002a56 <_ZN5CroixD0Ev>:
 8002a56:	b510      	push	{r4, lr}
 8002a58:	4604      	mov	r4, r0
 8002a5a:	f7ff ffa5 	bl	80029a8 <_ZN5CroixD1Ev>
 8002a5e:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002a62:	4620      	mov	r0, r4
 8002a64:	f01e f9d9 	bl	8020e1a <_ZdlPvj>
 8002a68:	4620      	mov	r0, r4
 8002a6a:	bd10      	pop	{r4, pc}

08002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 8002a6c:	b570      	push	{r4, r5, r6, lr}
 8002a6e:	4604      	mov	r4, r0
 8002a70:	f7ff fede 	bl	8002830 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002a74:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8002a78:	2500      	movs	r5, #0
        : T(), up(), down()
 8002a7a:	4626      	mov	r6, r4
 8002a7c:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002a7e:	2301      	movs	r3, #1
 8002a80:	62a5      	str	r5, [r4, #40]	; 0x28
 8002a82:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8002a86:	4b0d      	ldr	r3, [pc, #52]	; (8002abc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 8002a88:	6325      	str	r5, [r4, #48]	; 0x30
 8002a8a:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 8002a8e:	4630      	mov	r0, r6
 8002a90:	f7ff feee 	bl	8002870 <_ZN8touchgfx3BoxC1Ev>
 8002a94:	4b0a      	ldr	r3, [pc, #40]	; (8002ac0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
        borderBox.setXY(0, 0);
 8002a96:	462a      	mov	r2, r5
 8002a98:	4629      	mov	r1, r5
 8002a9a:	4630      	mov	r0, r6
 8002a9c:	6363      	str	r3, [r4, #52]	; 0x34
        : color(col)
 8002a9e:	6625      	str	r5, [r4, #96]	; 0x60
 8002aa0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
        : color(0)
 8002aa4:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002aa8:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8002aac:	f7ff fed2 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002ab0:	4620      	mov	r0, r4
 8002ab2:	4631      	mov	r1, r6
 8002ab4:	f007 feae 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002ab8:	4620      	mov	r0, r4
 8002aba:	bd70      	pop	{r4, r5, r6, pc}
 8002abc:	08022d28 	.word	0x08022d28
 8002ac0:	080237f8 	.word	0x080237f8

08002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002ac4:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002ac6:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002ac8:	9b01      	ldr	r3, [sp, #4]
    }
 8002aca:	f85d 4b04 	ldr.w	r4, [sp], #4
        borderDown = borderColorPressed;
 8002ace:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002ad0:	6803      	ldr	r3, [r0, #0]
        down = colorPressed;
 8002ad2:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002ad6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ada:	4718      	bx	r3

08002adc <_ZN17Morpion_2ViewBaseC1Ev>:
Morpion_2ViewBase::Morpion_2ViewBase() :
 8002adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ae0:	4604      	mov	r4, r0
        : presenter(0)
 8002ae2:	2500      	movs	r5, #0
 8002ae4:	ed2d 8b10 	vpush	{d8-d15}
 8002ae8:	b091      	sub	sp, #68	; 0x44
    flexButtonCallback(this, &Morpion_2ViewBase::flexButtonCallbackHandler)
 8002aea:	46a2      	mov	sl, r4
 8002aec:	f00f f85a 	bl	8011ba4 <_ZN8touchgfx6ScreenC1Ev>
 8002af0:	4bed      	ldr	r3, [pc, #948]	; (8002ea8 <_ZN17Morpion_2ViewBaseC1Ev+0x3cc>)
 8002af2:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8002af6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002af8:	f84a 3b40 	str.w	r3, [sl], #64
 8002afc:	4650      	mov	r0, sl
 8002afe:	f7ff feb7 	bl	8002870 <_ZN8touchgfx3BoxC1Ev>
 8002b02:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b06:	a90e      	add	r1, sp, #56	; 0x38
 8002b08:	4648      	mov	r0, r9
 8002b0a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8002b0e:	f00a f9a1 	bl	800ce54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002b12:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002b16:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8002b1a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8002b1e:	f504 7b25 	add.w	fp, r4, #660	; 0x294
 8002b22:	4618      	mov	r0, r3
 8002b24:	ee0e 3a90 	vmov	s29, r3
 8002b28:	f000 fdc6 	bl	80036b8 <_ZN6GrilleC1Ev>
 8002b2c:	4640      	mov	r0, r8
 8002b2e:	f7ff feb3 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b32:	4638      	mov	r0, r7
 8002b34:	f7ff feb0 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b38:	f504 7301 	add.w	r3, r4, #516	; 0x204
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002b3c:	1d26      	adds	r6, r4, #4
 8002b3e:	4618      	mov	r0, r3
 8002b40:	ee08 3a10 	vmov	s16, r3
 8002b44:	f7ff fea8 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b48:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8002b4c:	4618      	mov	r0, r3
 8002b4e:	ee08 3a90 	vmov	s17, r3
 8002b52:	f7ff fea1 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b56:	4658      	mov	r0, fp
 8002b58:	f7ff fe9e 	bl	8002898 <_ZN8touchgfx8TextAreaC1Ev>
 8002b5c:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8002b60:	4618      	mov	r0, r3
 8002b62:	ee0d 3a90 	vmov	s27, r3
 8002b66:	f7ff ff81 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b6a:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8002b6e:	4618      	mov	r0, r3
 8002b70:	ee0e 3a10 	vmov	s28, r3
 8002b74:	f7ff ff7a 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b78:	f504 7373 	add.w	r3, r4, #972	; 0x3cc
 8002b7c:	4618      	mov	r0, r3
 8002b7e:	ee09 3a10 	vmov	s18, r3
 8002b82:	f7ff ff73 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b86:	f204 4344 	addw	r3, r4, #1092	; 0x444
 8002b8a:	4618      	mov	r0, r3
 8002b8c:	ee09 3a90 	vmov	s19, r3
 8002b90:	f7ff ff6c 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002b94:	f204 43bc 	addw	r3, r4, #1212	; 0x4bc
 8002b98:	4618      	mov	r0, r3
 8002b9a:	ee0a 3a10 	vmov	s20, r3
 8002b9e:	f7ff ff65 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002ba2:	f204 5334 	addw	r3, r4, #1332	; 0x534
 8002ba6:	4618      	mov	r0, r3
 8002ba8:	ee0a 3a90 	vmov	s21, r3
 8002bac:	f7ff ff5e 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bb0:	f204 53ac 	addw	r3, r4, #1452	; 0x5ac
 8002bb4:	4618      	mov	r0, r3
 8002bb6:	ee0b 3a10 	vmov	s22, r3
 8002bba:	f7ff ff57 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bbe:	f204 6324 	addw	r3, r4, #1572	; 0x624
 8002bc2:	4618      	mov	r0, r3
 8002bc4:	ee0b 3a90 	vmov	s23, r3
 8002bc8:	f7ff ff50 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bcc:	f204 639c 	addw	r3, r4, #1692	; 0x69c
 8002bd0:	4618      	mov	r0, r3
 8002bd2:	ee0c 3a10 	vmov	s24, r3
 8002bd6:	f7ff ff49 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bda:	f204 7314 	addw	r3, r4, #1812	; 0x714
 8002bde:	4618      	mov	r0, r3
 8002be0:	ee0c 3a90 	vmov	s25, r3
 8002be4:	f7ff ff42 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002be8:	f204 738c 	addw	r3, r4, #1932	; 0x78c
 8002bec:	4618      	mov	r0, r3
 8002bee:	ee0d 3a10 	vmov	s26, r3
 8002bf2:	f7ff ff3b 	bl	8002a6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bf6:	f604 0304 	addw	r3, r4, #2052	; 0x804
 8002bfa:	4618      	mov	r0, r3
 8002bfc:	ee0f 3a10 	vmov	s30, r3
 8002c00:	f000 fd1c 	bl	800363c <_ZN5CroixC1Ev>
 8002c04:	f604 1338 	addw	r3, r4, #2360	; 0x938
 8002c08:	4618      	mov	r0, r3
 8002c0a:	ee0f 3a90 	vmov	s31, r3
 8002c0e:	f000 fd09 	bl	8003624 <_ZN6CercleC1Ev>
 8002c12:	f504 631c 	add.w	r3, r4, #2496	; 0x9c0
 8002c16:	4618      	mov	r0, r3
 8002c18:	9303      	str	r3, [sp, #12]
 8002c1a:	f000 fd03 	bl	8003624 <_ZN6CercleC1Ev>
 8002c1e:	f604 2348 	addw	r3, r4, #2632	; 0xa48
 8002c22:	4618      	mov	r0, r3
 8002c24:	9304      	str	r3, [sp, #16]
 8002c26:	f000 fd09 	bl	800363c <_ZN5CroixC1Ev>
 8002c2a:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8002c2e:	4618      	mov	r0, r3
 8002c30:	9305      	str	r3, [sp, #20]
 8002c32:	f000 fcf7 	bl	8003624 <_ZN6CercleC1Ev>
 8002c36:	f604 4304 	addw	r3, r4, #3076	; 0xc04
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	9306      	str	r3, [sp, #24]
 8002c3e:	f000 fcfd 	bl	800363c <_ZN5CroixC1Ev>
 8002c42:	f604 5338 	addw	r3, r4, #3384	; 0xd38
 8002c46:	4618      	mov	r0, r3
 8002c48:	9307      	str	r3, [sp, #28]
 8002c4a:	f000 fceb 	bl	8003624 <_ZN6CercleC1Ev>
 8002c4e:	f504 635c 	add.w	r3, r4, #3520	; 0xdc0
 8002c52:	4618      	mov	r0, r3
 8002c54:	9308      	str	r3, [sp, #32]
 8002c56:	f000 fcf1 	bl	800363c <_ZN5CroixC1Ev>
 8002c5a:	f604 63f4 	addw	r3, r4, #3828	; 0xef4
 8002c5e:	4618      	mov	r0, r3
 8002c60:	9309      	str	r3, [sp, #36]	; 0x24
 8002c62:	f000 fceb 	bl	800363c <_ZN5CroixC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002c66:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8002c6a:	4a90      	ldr	r2, [pc, #576]	; (8002eac <_ZN17Morpion_2ViewBaseC1Ev+0x3d0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002c6c:	f504 5081 	add.w	r0, r4, #4128	; 0x1020
 8002c70:	f8c3 45ac 	str.w	r4, [r3, #1452]	; 0x5ac
 8002c74:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8002c78:	f8c3 25a8 	str.w	r2, [r3, #1448]	; 0x5a8
 8002c7c:	3008      	adds	r0, #8
 8002c7e:	4a8c      	ldr	r2, [pc, #560]	; (8002eb0 <_ZN17Morpion_2ViewBaseC1Ev+0x3d4>)
 8002c80:	f8c3 55b4 	str.w	r5, [r3, #1460]	; 0x5b4
 8002c84:	f8c3 25b0 	str.w	r2, [r3, #1456]	; 0x5b0
 8002c88:	f00b fe72 	bl	800e970 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 640, 480);
 8002c8c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002c90:	462a      	mov	r2, r5
 8002c92:	4629      	mov	r1, r5
 8002c94:	4650      	mov	r0, sl
 8002c96:	9300      	str	r3, [sp, #0]
 8002c98:	f44f 7320 	mov.w	r3, #640	; 0x280
 8002c9c:	f7ff f9e2 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002ca0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002ca4:	4651      	mov	r1, sl
 8002ca6:	4630      	mov	r0, r6
 8002ca8:	66a3      	str	r3, [r4, #104]	; 0x68
        color = newColor;
 8002caa:	f04f 3aff 	mov.w	sl, #4294967295
 8002cae:	f007 fdb1 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_800X480_ASPHALT_ID));
 8002cb2:	a90e      	add	r1, sp, #56	; 0x38
 8002cb4:	4648      	mov	r0, r9
 8002cb6:	f8ad 5038 	strh.w	r5, [sp, #56]	; 0x38
 8002cba:	f00a ff67 	bl	800db8c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    Background.setPosition(0, 0, 640, 480);
 8002cbe:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002cc2:	462a      	mov	r2, r5
 8002cc4:	4629      	mov	r1, r5
 8002cc6:	4648      	mov	r0, r9
 8002cc8:	9300      	str	r3, [sp, #0]
 8002cca:	f44f 7320 	mov.w	r3, #640	; 0x280
 8002cce:	f7ff f9c9 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002cd2:	4629      	mov	r1, r5
 8002cd4:	4648      	mov	r0, r9
 8002cd6:	f00a f878 	bl	800cdca <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002cda:	4649      	mov	r1, r9
 8002cdc:	4630      	mov	r0, r6
        boundingArea = calculateBoundingArea();
 8002cde:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8002ce2:	f007 fd97 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Grille_main.setXY(80, 134);
 8002ce6:	2286      	movs	r2, #134	; 0x86
 8002ce8:	ee1e 0a90 	vmov	r0, s29
 8002cec:	2150      	movs	r1, #80	; 0x50
 8002cee:	f7ff fdb1 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002cf2:	ee1e 1a90 	vmov	r1, s29
 8002cf6:	4630      	mov	r0, r6
 8002cf8:	f007 fd8c 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Titre.setXY(244, 14);
 8002cfc:	220e      	movs	r2, #14
 8002cfe:	4640      	mov	r0, r8
 8002d00:	21f4      	movs	r1, #244	; 0xf4
 8002d02:	f7ff fda7 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002d06:	4641      	mov	r1, r8
 8002d08:	4648      	mov	r0, r9
        color = newColor;
 8002d0a:	f8c4 a1a4 	str.w	sl, [r4, #420]	; 0x1a4
        linespace = space;
 8002d0e:	f8a4 51a8 	strh.w	r5, [r4, #424]	; 0x1a8
        boundingArea = calculateBoundingArea();
 8002d12:	f00a fba3 	bl	800d45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d16:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002d1a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002d1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d22:	4b64      	ldr	r3, [pc, #400]	; (8002eb4 <_ZN17Morpion_2ViewBaseC1Ev+0x3d8>)
    Titre.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZXE));
 8002d24:	a90e      	add	r1, sp, #56	; 0x38
 8002d26:	4640      	mov	r0, r8
 8002d28:	930e      	str	r3, [sp, #56]	; 0x38
 8002d2a:	2304      	movs	r3, #4
 8002d2c:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002d30:	f00a fe3c 	bl	800d9ac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d34:	4641      	mov	r1, r8
 8002d36:	4630      	mov	r0, r6
 8002d38:	f007 fd6c 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Quitter.setXY(519, 82);
 8002d3c:	2252      	movs	r2, #82	; 0x52
 8002d3e:	4638      	mov	r0, r7
 8002d40:	f240 2107 	movw	r1, #519	; 0x207
 8002d44:	f7ff fd86 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002d48:	4639      	mov	r1, r7
 8002d4a:	4648      	mov	r0, r9
        color = newColor;
 8002d4c:	f8c4 a1ec 	str.w	sl, [r4, #492]	; 0x1ec
        linespace = space;
 8002d50:	f8a4 51f0 	strh.w	r5, [r4, #496]	; 0x1f0
        boundingArea = calculateBoundingArea();
 8002d54:	f00a fb82 	bl	800d45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d58:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002d5c:	f8df 8160 	ldr.w	r8, [pc, #352]	; 8002ec0 <_ZN17Morpion_2ViewBaseC1Ev+0x3e4>
 8002d60:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002d64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d68:	4b52      	ldr	r3, [pc, #328]	; (8002eb4 <_ZN17Morpion_2ViewBaseC1Ev+0x3d8>)
    Quitter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OAW0));
 8002d6a:	a90e      	add	r1, sp, #56	; 0x38
 8002d6c:	4638      	mov	r0, r7
 8002d6e:	930e      	str	r3, [sp, #56]	; 0x38
 8002d70:	2303      	movs	r3, #3
 8002d72:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002d76:	f00a fe19 	bl	800d9ac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d7a:	4639      	mov	r1, r7
 8002d7c:	4630      	mov	r0, r6
 8002d7e:	f007 fd49 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Recommencer.setXY(27, 82);
 8002d82:	2252      	movs	r2, #82	; 0x52
 8002d84:	ee18 0a10 	vmov	r0, s16
 8002d88:	211b      	movs	r1, #27
 8002d8a:	f7ff fd63 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002d8e:	ee18 1a10 	vmov	r1, s16
 8002d92:	4648      	mov	r0, r9
        color = newColor;
 8002d94:	f8c4 a234 	str.w	sl, [r4, #564]	; 0x234
        linespace = space;
 8002d98:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8002d9c:	f00a fb5e 	bl	800d45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002da0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002da4:	4f43      	ldr	r7, [pc, #268]	; (8002eb4 <_ZN17Morpion_2ViewBaseC1Ev+0x3d8>)
 8002da6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002daa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002dae:	2302      	movs	r3, #2
    Recommencer.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CEIK));
 8002db0:	a90e      	add	r1, sp, #56	; 0x38
 8002db2:	ee18 0a10 	vmov	r0, s16
 8002db6:	970e      	str	r7, [sp, #56]	; 0x38
 8002db8:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002dbc:	f00a fdf6 	bl	800d9ac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002dc0:	ee18 1a10 	vmov	r1, s16
 8002dc4:	4630      	mov	r0, r6
 8002dc6:	f007 fd25 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Joueur_2.setXY(275, 68);
 8002dca:	2244      	movs	r2, #68	; 0x44
 8002dcc:	ee18 0a90 	vmov	r0, s17
 8002dd0:	f240 1113 	movw	r1, #275	; 0x113
 8002dd4:	f7ff fd3e 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002dd8:	ee18 1a90 	vmov	r1, s17
 8002ddc:	4648      	mov	r0, r9
        color = newColor;
 8002dde:	f8c4 a27c 	str.w	sl, [r4, #636]	; 0x27c
        linespace = space;
 8002de2:	f8a4 5280 	strh.w	r5, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8002de6:	f00a fb39 	bl	800d45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002dea:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002dee:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002df2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002df6:	2301      	movs	r3, #1
    Joueur_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HD7Q));
 8002df8:	a90e      	add	r1, sp, #56	; 0x38
 8002dfa:	ee18 0a90 	vmov	r0, s17
 8002dfe:	970e      	str	r7, [sp, #56]	; 0x38
 8002e00:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8002e04:	f00a fdd2 	bl	800d9ac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e08:	ee18 1a90 	vmov	r1, s17
 8002e0c:	4630      	mov	r0, r6
 8002e0e:	f007 fd01 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Joueur_1.setXY(275, 68);
 8002e12:	2244      	movs	r2, #68	; 0x44
 8002e14:	4658      	mov	r0, fp
 8002e16:	f240 1113 	movw	r1, #275	; 0x113
 8002e1a:	f7ff fd1b 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8002e1e:	4659      	mov	r1, fp
 8002e20:	4648      	mov	r0, r9
        color = newColor;
 8002e22:	f8c4 a2c4 	str.w	sl, [r4, #708]	; 0x2c4
        linespace = space;
 8002e26:	f8a4 52c8 	strh.w	r5, [r4, #712]	; 0x2c8
        borderBox.setPosition(x, y, width, height);
 8002e2a:	f04f 0a44 	mov.w	sl, #68	; 0x44
        boundingArea = calculateBoundingArea();
 8002e2e:	f00a fb15 	bl	800d45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e32:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002e36:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002e3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Joueur_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TNV6));
 8002e3e:	a90e      	add	r1, sp, #56	; 0x38
 8002e40:	4658      	mov	r0, fp
 8002e42:	970e      	str	r7, [sp, #56]	; 0x38
 8002e44:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
 8002e48:	f00a fdb0 	bl	800d9ac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e4c:	4659      	mov	r1, fp
 8002e4e:	4630      	mov	r0, r6
 8002e50:	f007 fce0 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002e54:	462a      	mov	r2, r5
 8002e56:	4629      	mov	r1, r5
 8002e58:	f504 7044 	add.w	r0, r4, #784	; 0x310
 8002e5c:	f8cd a000 	str.w	sl, [sp]
 8002e60:	2360      	movs	r3, #96	; 0x60
 8002e62:	f7ff f8ff 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002e66:	f04f 0305 	mov.w	r3, #5
    Quit.setAction(flexButtonCallback);
 8002e6a:	f504 5b56 	add.w	fp, r4, #13696	; 0x3580
 8002e6e:	4f12      	ldr	r7, [pc, #72]	; (8002eb8 <_ZN17Morpion_2ViewBaseC1Ev+0x3dc>)
 8002e70:	f8df 9050 	ldr.w	r9, [pc, #80]	; 8002ec4 <_ZN17Morpion_2ViewBaseC1Ev+0x3e8>
    Quit.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002e74:	4642      	mov	r2, r8
 8002e76:	f8a4 3340 	strh.w	r3, [r4, #832]	; 0x340
    Quit.setAction(flexButtonCallback);
 8002e7a:	f10b 0b28 	add.w	fp, fp, #40	; 0x28
    Quit.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002e7e:	4b0f      	ldr	r3, [pc, #60]	; (8002ebc <_ZN17Morpion_2ViewBaseC1Ev+0x3e0>)
 8002e80:	4639      	mov	r1, r7
 8002e82:	ee1d 0a90 	vmov	r0, s27
 8002e86:	9300      	str	r3, [sp, #0]
 8002e88:	464b      	mov	r3, r9
 8002e8a:	f7ff fe1b 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Quit.setPosition(506, 14, 96, 68);
 8002e8e:	2360      	movs	r3, #96	; 0x60
 8002e90:	220e      	movs	r2, #14
 8002e92:	ee1d 0a90 	vmov	r0, s27
 8002e96:	f8cd a000 	str.w	sl, [sp]
 8002e9a:	f44f 71fd 	mov.w	r1, #506	; 0x1fa
        action = &callback;
 8002e9e:	f8c4 b30c 	str.w	fp, [r4, #780]	; 0x30c
 8002ea2:	f7ff f8df 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ea6:	e00f      	b.n	8002ec8 <_ZN17Morpion_2ViewBaseC1Ev+0x3ec>
 8002ea8:	08022ddc 	.word	0x08022ddc
 8002eac:	08022dc4 	.word	0x08022dc4
 8002eb0:	080028e9 	.word	0x080028e9
 8002eb4:	08022870 	.word	0x08022870
 8002eb8:	ff006699 	.word	0xff006699
 8002ebc:	ff336699 	.word	0xff336699
 8002ec0:	ff0099cc 	.word	0xff0099cc
 8002ec4:	ff003366 	.word	0xff003366
 8002ec8:	ee1d 1a90 	vmov	r1, s27
 8002ecc:	4630      	mov	r0, r6
 8002ece:	f007 fca1 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ed2:	462a      	mov	r2, r5
 8002ed4:	4629      	mov	r1, r5
 8002ed6:	f504 7062 	add.w	r0, r4, #904	; 0x388
 8002eda:	f8cd a000 	str.w	sl, [sp]
 8002ede:	2360      	movs	r3, #96	; 0x60
 8002ee0:	f7ff f8c0 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ee4:	f04f 0205 	mov.w	r2, #5
    Restart.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002ee8:	4bef      	ldr	r3, [pc, #956]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002eea:	4639      	mov	r1, r7
 8002eec:	ee1e 0a10 	vmov	r0, s28
 8002ef0:	f8a4 23b8 	strh.w	r2, [r4, #952]	; 0x3b8
 8002ef4:	9300      	str	r3, [sp, #0]
 8002ef6:	4642      	mov	r2, r8
 8002ef8:	464b      	mov	r3, r9
 8002efa:	f7ff fde3 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Restart.setPosition(50, 14, 96, 68);
 8002efe:	2360      	movs	r3, #96	; 0x60
 8002f00:	220e      	movs	r2, #14
 8002f02:	ee1e 0a10 	vmov	r0, s28
 8002f06:	f8cd a000 	str.w	sl, [sp]
 8002f0a:	2132      	movs	r1, #50	; 0x32
 8002f0c:	f04f 0a6a 	mov.w	sl, #106	; 0x6a
 8002f10:	f8c4 b384 	str.w	fp, [r4, #900]	; 0x384
 8002f14:	f7ff f8a6 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f18:	ee1e 1a10 	vmov	r1, s28
 8002f1c:	4630      	mov	r0, r6
 8002f1e:	f007 fc79 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f22:	462a      	mov	r2, r5
 8002f24:	4629      	mov	r1, r5
 8002f26:	f504 6080 	add.w	r0, r4, #1024	; 0x400
 8002f2a:	239c      	movs	r3, #156	; 0x9c
 8002f2c:	f8cd a000 	str.w	sl, [sp]
 8002f30:	f7ff f898 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_2_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002f34:	4bdc      	ldr	r3, [pc, #880]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002f36:	4642      	mov	r2, r8
 8002f38:	4639      	mov	r1, r7
 8002f3a:	ee19 0a10 	vmov	r0, s18
 8002f3e:	9300      	str	r3, [sp, #0]
 8002f40:	f8a4 5430 	strh.w	r5, [r4, #1072]	; 0x430
 8002f44:	464b      	mov	r3, r9
 8002f46:	f7ff fdbd 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_2_2.setAlpha(0);
 8002f4a:	4629      	mov	r1, r5
 8002f4c:	ee19 0a10 	vmov	r0, s18
 8002f50:	f7ff fcc4 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_2_2.setPosition(404, 358, 156, 106);
 8002f54:	239c      	movs	r3, #156	; 0x9c
 8002f56:	f44f 72b3 	mov.w	r2, #358	; 0x166
 8002f5a:	ee19 0a10 	vmov	r0, s18
 8002f5e:	f44f 71ca 	mov.w	r1, #404	; 0x194
 8002f62:	f8c4 b3fc 	str.w	fp, [r4, #1020]	; 0x3fc
 8002f66:	f8cd a000 	str.w	sl, [sp]
 8002f6a:	f7ff f87b 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f6e:	ee19 1a10 	vmov	r1, s18
 8002f72:	4630      	mov	r0, r6
 8002f74:	f007 fc4e 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f78:	462a      	mov	r2, r5
 8002f7a:	4629      	mov	r1, r5
 8002f7c:	f504 608f 	add.w	r0, r4, #1144	; 0x478
 8002f80:	239c      	movs	r3, #156	; 0x9c
 8002f82:	f8cd a000 	str.w	sl, [sp]
 8002f86:	f7ff f86d 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_2_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002f8a:	4bc7      	ldr	r3, [pc, #796]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002f8c:	4642      	mov	r2, r8
 8002f8e:	4639      	mov	r1, r7
 8002f90:	ee19 0a90 	vmov	r0, s19
 8002f94:	9300      	str	r3, [sp, #0]
 8002f96:	f8a4 54a8 	strh.w	r5, [r4, #1192]	; 0x4a8
 8002f9a:	464b      	mov	r3, r9
 8002f9c:	f7ff fd92 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_2_1.setAlpha(0);
 8002fa0:	4629      	mov	r1, r5
 8002fa2:	ee19 0a90 	vmov	r0, s19
 8002fa6:	f7ff fc99 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_2_1.setPosition(242, 358, 156, 106);
 8002faa:	239c      	movs	r3, #156	; 0x9c
 8002fac:	f44f 72b3 	mov.w	r2, #358	; 0x166
 8002fb0:	ee19 0a90 	vmov	r0, s19
 8002fb4:	21f2      	movs	r1, #242	; 0xf2
 8002fb6:	f8c4 b474 	str.w	fp, [r4, #1140]	; 0x474
 8002fba:	f8cd a000 	str.w	sl, [sp]
 8002fbe:	f7ff f851 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fc2:	ee19 1a90 	vmov	r1, s19
 8002fc6:	4630      	mov	r0, r6
 8002fc8:	f007 fc24 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002fcc:	462a      	mov	r2, r5
 8002fce:	4629      	mov	r1, r5
 8002fd0:	f504 609e 	add.w	r0, r4, #1264	; 0x4f0
 8002fd4:	239c      	movs	r3, #156	; 0x9c
 8002fd6:	f8cd a000 	str.w	sl, [sp]
 8002fda:	f7ff f843 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_2_0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8002fde:	4bb2      	ldr	r3, [pc, #712]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8002fe0:	4642      	mov	r2, r8
 8002fe2:	4639      	mov	r1, r7
 8002fe4:	ee1a 0a10 	vmov	r0, s20
 8002fe8:	9300      	str	r3, [sp, #0]
 8002fea:	f8a4 5520 	strh.w	r5, [r4, #1312]	; 0x520
 8002fee:	464b      	mov	r3, r9
 8002ff0:	f7ff fd68 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_2_0.setAlpha(0);
 8002ff4:	4629      	mov	r1, r5
 8002ff6:	ee1a 0a10 	vmov	r0, s20
 8002ffa:	f7ff fc6f 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_2_0.setPosition(80, 358, 156, 106);
 8002ffe:	239c      	movs	r3, #156	; 0x9c
 8003000:	f44f 72b3 	mov.w	r2, #358	; 0x166
 8003004:	ee1a 0a10 	vmov	r0, s20
 8003008:	2150      	movs	r1, #80	; 0x50
 800300a:	f8c4 b4ec 	str.w	fp, [r4, #1260]	; 0x4ec
 800300e:	f8cd a000 	str.w	sl, [sp]
 8003012:	f7ff f827 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003016:	ee1a 1a10 	vmov	r1, s20
 800301a:	4630      	mov	r0, r6
 800301c:	f007 fbfa 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003020:	462a      	mov	r2, r5
 8003022:	4629      	mov	r1, r5
 8003024:	f504 60ad 	add.w	r0, r4, #1384	; 0x568
 8003028:	239c      	movs	r3, #156	; 0x9c
 800302a:	f8cd a000 	str.w	sl, [sp]
 800302e:	f7ff f819 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_1_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003032:	4b9d      	ldr	r3, [pc, #628]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8003034:	4642      	mov	r2, r8
 8003036:	4639      	mov	r1, r7
 8003038:	ee1a 0a90 	vmov	r0, s21
 800303c:	9300      	str	r3, [sp, #0]
 800303e:	f8a4 5598 	strh.w	r5, [r4, #1432]	; 0x598
 8003042:	464b      	mov	r3, r9
 8003044:	f7ff fd3e 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_1_2.setAlpha(0);
 8003048:	4629      	mov	r1, r5
 800304a:	ee1a 0a90 	vmov	r0, s21
 800304e:	f7ff fc45 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_1_2.setPosition(404, 246, 156, 106);
 8003052:	239c      	movs	r3, #156	; 0x9c
 8003054:	22f6      	movs	r2, #246	; 0xf6
 8003056:	ee1a 0a90 	vmov	r0, s21
 800305a:	f44f 71ca 	mov.w	r1, #404	; 0x194
 800305e:	f8c4 b564 	str.w	fp, [r4, #1380]	; 0x564
 8003062:	f8cd a000 	str.w	sl, [sp]
 8003066:	f7fe fffd 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 800306a:	ee1a 1a90 	vmov	r1, s21
 800306e:	4630      	mov	r0, r6
 8003070:	f007 fbd0 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003074:	462a      	mov	r2, r5
 8003076:	4629      	mov	r1, r5
 8003078:	f504 60bc 	add.w	r0, r4, #1504	; 0x5e0
 800307c:	239c      	movs	r3, #156	; 0x9c
 800307e:	f8cd a000 	str.w	sl, [sp]
 8003082:	f7fe ffef 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_1_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003086:	4b88      	ldr	r3, [pc, #544]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8003088:	4642      	mov	r2, r8
 800308a:	4639      	mov	r1, r7
 800308c:	ee1b 0a10 	vmov	r0, s22
 8003090:	9300      	str	r3, [sp, #0]
 8003092:	f8a4 5610 	strh.w	r5, [r4, #1552]	; 0x610
 8003096:	464b      	mov	r3, r9
 8003098:	f7ff fd14 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_1_1.setAlpha(0);
 800309c:	4629      	mov	r1, r5
 800309e:	ee1b 0a10 	vmov	r0, s22
 80030a2:	f7ff fc1b 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_1_1.setPosition(241, 246, 156, 106);
 80030a6:	239c      	movs	r3, #156	; 0x9c
 80030a8:	22f6      	movs	r2, #246	; 0xf6
 80030aa:	ee1b 0a10 	vmov	r0, s22
 80030ae:	21f1      	movs	r1, #241	; 0xf1
 80030b0:	f8c4 b5dc 	str.w	fp, [r4, #1500]	; 0x5dc
 80030b4:	f8cd a000 	str.w	sl, [sp]
 80030b8:	f7fe ffd4 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030bc:	ee1b 1a10 	vmov	r1, s22
 80030c0:	4630      	mov	r0, r6
 80030c2:	f007 fba7 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80030c6:	462a      	mov	r2, r5
 80030c8:	4629      	mov	r1, r5
 80030ca:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80030ce:	239c      	movs	r3, #156	; 0x9c
 80030d0:	f8cd a000 	str.w	sl, [sp]
 80030d4:	f7fe ffc6 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_1_0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80030d8:	4b73      	ldr	r3, [pc, #460]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 80030da:	4642      	mov	r2, r8
 80030dc:	4639      	mov	r1, r7
 80030de:	ee1b 0a90 	vmov	r0, s23
 80030e2:	9300      	str	r3, [sp, #0]
 80030e4:	f8a4 5688 	strh.w	r5, [r4, #1672]	; 0x688
 80030e8:	464b      	mov	r3, r9
 80030ea:	f7ff fceb 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_1_0.setAlpha(0);
 80030ee:	4629      	mov	r1, r5
 80030f0:	ee1b 0a90 	vmov	r0, s23
 80030f4:	f7ff fbf2 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_1_0.setPosition(80, 245, 156, 106);
 80030f8:	239c      	movs	r3, #156	; 0x9c
 80030fa:	22f5      	movs	r2, #245	; 0xf5
 80030fc:	ee1b 0a90 	vmov	r0, s23
 8003100:	2150      	movs	r1, #80	; 0x50
 8003102:	f8c4 b654 	str.w	fp, [r4, #1620]	; 0x654
 8003106:	f8cd a000 	str.w	sl, [sp]
 800310a:	f7fe ffab 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 800310e:	ee1b 1a90 	vmov	r1, s23
 8003112:	4630      	mov	r0, r6
 8003114:	f007 fb7e 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003118:	462a      	mov	r2, r5
 800311a:	4629      	mov	r1, r5
 800311c:	f504 60da 	add.w	r0, r4, #1744	; 0x6d0
 8003120:	239c      	movs	r3, #156	; 0x9c
 8003122:	f8cd a000 	str.w	sl, [sp]
 8003126:	f7fe ff9d 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_0_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800312a:	4b5f      	ldr	r3, [pc, #380]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 800312c:	4642      	mov	r2, r8
 800312e:	4639      	mov	r1, r7
 8003130:	ee1c 0a10 	vmov	r0, s24
 8003134:	9300      	str	r3, [sp, #0]
 8003136:	f8a4 5700 	strh.w	r5, [r4, #1792]	; 0x700
 800313a:	464b      	mov	r3, r9
 800313c:	f7ff fcc2 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_0_2.setAlpha(0);
 8003140:	4629      	mov	r1, r5
 8003142:	ee1c 0a10 	vmov	r0, s24
 8003146:	f7ff fbc9 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_0_2.setPosition(404, 134, 156, 106);
 800314a:	239c      	movs	r3, #156	; 0x9c
 800314c:	2286      	movs	r2, #134	; 0x86
 800314e:	ee1c 0a10 	vmov	r0, s24
 8003152:	f44f 71ca 	mov.w	r1, #404	; 0x194
 8003156:	f8c4 b6cc 	str.w	fp, [r4, #1740]	; 0x6cc
 800315a:	f8cd a000 	str.w	sl, [sp]
 800315e:	f7fe ff81 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003162:	ee1c 1a10 	vmov	r1, s24
 8003166:	4630      	mov	r0, r6
 8003168:	f007 fb54 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800316c:	462a      	mov	r2, r5
 800316e:	4629      	mov	r1, r5
 8003170:	f504 60e9 	add.w	r0, r4, #1864	; 0x748
 8003174:	239c      	movs	r3, #156	; 0x9c
 8003176:	f8cd a000 	str.w	sl, [sp]
 800317a:	f7fe ff73 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_0_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800317e:	4b4a      	ldr	r3, [pc, #296]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 8003180:	4642      	mov	r2, r8
 8003182:	4639      	mov	r1, r7
 8003184:	ee1c 0a90 	vmov	r0, s25
 8003188:	9300      	str	r3, [sp, #0]
 800318a:	f8a4 5778 	strh.w	r5, [r4, #1912]	; 0x778
 800318e:	464b      	mov	r3, r9
 8003190:	f7ff fc98 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_0_1.setAlpha(0);
 8003194:	4629      	mov	r1, r5
 8003196:	ee1c 0a90 	vmov	r0, s25
 800319a:	f7ff fb9f 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_0_1.setPosition(241, 134, 156, 106);
 800319e:	239c      	movs	r3, #156	; 0x9c
 80031a0:	2286      	movs	r2, #134	; 0x86
 80031a2:	ee1c 0a90 	vmov	r0, s25
 80031a6:	21f1      	movs	r1, #241	; 0xf1
 80031a8:	f8c4 b744 	str.w	fp, [r4, #1860]	; 0x744
 80031ac:	f8cd a000 	str.w	sl, [sp]
 80031b0:	f7fe ff58 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031b4:	ee1c 1a90 	vmov	r1, s25
 80031b8:	4630      	mov	r0, r6
 80031ba:	f007 fb2b 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031be:	462a      	mov	r2, r5
 80031c0:	4629      	mov	r1, r5
 80031c2:	f504 60f8 	add.w	r0, r4, #1984	; 0x7c0
 80031c6:	239c      	movs	r3, #156	; 0x9c
 80031c8:	f8cd a000 	str.w	sl, [sp]
 80031cc:	f7fe ff4a 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
    Button_0_0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80031d0:	4b35      	ldr	r3, [pc, #212]	; (80032a8 <_ZN17Morpion_2ViewBaseC1Ev+0x7cc>)
 80031d2:	4642      	mov	r2, r8
 80031d4:	4639      	mov	r1, r7
 80031d6:	ee1d 0a10 	vmov	r0, s26
 80031da:	9300      	str	r3, [sp, #0]
 80031dc:	f8a4 57f0 	strh.w	r5, [r4, #2032]	; 0x7f0
 80031e0:	464b      	mov	r3, r9
 80031e2:	f7ff fc6f 	bl	8002ac4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    Button_0_0.setAlpha(0);
 80031e6:	4629      	mov	r1, r5
 80031e8:	ee1d 0a10 	vmov	r0, s26
 80031ec:	f7ff fb76 	bl	80028dc <_ZN8touchgfx23AbstractButtonContainer8setAlphaEh>
    Button_0_0.setPosition(80, 134, 156, 106);
 80031f0:	239c      	movs	r3, #156	; 0x9c
 80031f2:	2286      	movs	r2, #134	; 0x86
 80031f4:	ee1d 0a10 	vmov	r0, s26
 80031f8:	2150      	movs	r1, #80	; 0x50
 80031fa:	f8c4 b7bc 	str.w	fp, [r4, #1980]	; 0x7bc
 80031fe:	f8cd a000 	str.w	sl, [sp]
 8003202:	f7fe ff2f 	bl	8002064 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003206:	ee1d 1a10 	vmov	r1, s26
 800320a:	4630      	mov	r0, r6
 800320c:	f007 fb02 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_1.setXY(-156, 401);
 8003210:	f240 1291 	movw	r2, #401	; 0x191
 8003214:	ee1f 0a10 	vmov	r0, s30
 8003218:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 800321c:	f7ff fb1a 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8003220:	ee1f 1a10 	vmov	r1, s30
 8003224:	4630      	mov	r0, r6
 8003226:	f007 faf5 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_1.setXY(640, 351);
 800322a:	f240 125f 	movw	r2, #351	; 0x15f
 800322e:	ee1f 0a90 	vmov	r0, s31
 8003232:	f44f 7120 	mov.w	r1, #640	; 0x280
 8003236:	f7ff fb0d 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800323a:	ee1f 1a90 	vmov	r1, s31
 800323e:	4630      	mov	r0, r6
 8003240:	f007 fae8 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_2.setXY(640, 245);
 8003244:	22f5      	movs	r2, #245	; 0xf5
 8003246:	9803      	ldr	r0, [sp, #12]
 8003248:	f44f 7120 	mov.w	r1, #640	; 0x280
 800324c:	f7ff fb02 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8003250:	9903      	ldr	r1, [sp, #12]
 8003252:	4630      	mov	r0, r6
 8003254:	f007 fade 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_2.setXY(-156, 292);
 8003258:	f44f 7292 	mov.w	r2, #292	; 0x124
 800325c:	9804      	ldr	r0, [sp, #16]
 800325e:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003262:	f7ff faf7 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 8003266:	9904      	ldr	r1, [sp, #16]
 8003268:	4630      	mov	r0, r6
 800326a:	f007 fad3 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_3.setXY(640, 139);
 800326e:	228b      	movs	r2, #139	; 0x8b
 8003270:	9805      	ldr	r0, [sp, #20]
 8003272:	f44f 7120 	mov.w	r1, #640	; 0x280
 8003276:	f7ff faed 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800327a:	9905      	ldr	r1, [sp, #20]
 800327c:	4630      	mov	r0, r6
 800327e:	f007 fac9 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_3.setXY(-156, 186);
 8003282:	22ba      	movs	r2, #186	; 0xba
 8003284:	9806      	ldr	r0, [sp, #24]
 8003286:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 800328a:	f7ff fae3 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800328e:	9906      	ldr	r1, [sp, #24]
 8003290:	4630      	mov	r0, r6
 8003292:	f007 fabf 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Cercle_4.setXY(640, 33);
 8003296:	2221      	movs	r2, #33	; 0x21
 8003298:	9807      	ldr	r0, [sp, #28]
 800329a:	f44f 7120 	mov.w	r1, #640	; 0x280
 800329e:	f7ff fad9 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 80032a2:	9907      	ldr	r1, [sp, #28]
 80032a4:	e002      	b.n	80032ac <_ZN17Morpion_2ViewBaseC1Ev+0x7d0>
 80032a6:	bf00      	nop
 80032a8:	ff336699 	.word	0xff336699
 80032ac:	4630      	mov	r0, r6
 80032ae:	f007 fab1 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_4.setXY(-156, 80);
 80032b2:	2250      	movs	r2, #80	; 0x50
 80032b4:	9808      	ldr	r0, [sp, #32]
 80032b6:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80032ba:	f7ff facb 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 80032be:	9908      	ldr	r1, [sp, #32]
 80032c0:	4630      	mov	r0, r6
 80032c2:	f007 faa7 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Croix_5.setXY(-156, -26);
 80032c6:	f06f 0219 	mvn.w	r2, #25
 80032ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80032cc:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80032d0:	f7ff fac0 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 80032d4:	4630      	mov	r0, r6
 80032d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80032d8:	f007 fa9c 	bl	800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032dc:	4620      	mov	r0, r4
 80032de:	b011      	add	sp, #68	; 0x44
 80032e0:	ecbd 8b10 	vpop	{d8-d15}
 80032e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080032e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80032e8:	4770      	bx	lr
	...

080032ec <_Z23getFont_verdana_10_4bppv>:
{
 80032ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80032ee:	4d16      	ldr	r5, [pc, #88]	; (8003348 <_Z23getFont_verdana_10_4bppv+0x5c>)
{
 80032f0:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80032f2:	682c      	ldr	r4, [r5, #0]
 80032f4:	f3bf 8f5b 	dmb	ish
 80032f8:	f014 0401 	ands.w	r4, r4, #1
 80032fc:	d120      	bne.n	8003340 <_Z23getFont_verdana_10_4bppv+0x54>
 80032fe:	4628      	mov	r0, r5
 8003300:	f01d fd8d 	bl	8020e1e <__cxa_guard_acquire>
 8003304:	b1e0      	cbz	r0, 8003340 <_Z23getFont_verdana_10_4bppv+0x54>
 8003306:	233f      	movs	r3, #63	; 0x3f
 8003308:	2201      	movs	r2, #1
 800330a:	4910      	ldr	r1, [pc, #64]	; (800334c <_Z23getFont_verdana_10_4bppv+0x60>)
 800330c:	9309      	str	r3, [sp, #36]	; 0x24
 800330e:	4b10      	ldr	r3, [pc, #64]	; (8003350 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003310:	4810      	ldr	r0, [pc, #64]	; (8003354 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003312:	9308      	str	r3, [sp, #32]
 8003314:	4b10      	ldr	r3, [pc, #64]	; (8003358 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003316:	940a      	str	r4, [sp, #40]	; 0x28
 8003318:	9405      	str	r4, [sp, #20]
 800331a:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800331e:	2304      	movs	r3, #4
 8003320:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003324:	230a      	movs	r3, #10
 8003326:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800332a:	9300      	str	r3, [sp, #0]
 800332c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003330:	f7ff f8f4 	bl	800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003334:	4809      	ldr	r0, [pc, #36]	; (800335c <_Z23getFont_verdana_10_4bppv+0x70>)
 8003336:	f01d fdbd 	bl	8020eb4 <atexit>
 800333a:	4628      	mov	r0, r5
 800333c:	f01d fd7b 	bl	8020e36 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003340:	4804      	ldr	r0, [pc, #16]	; (8003354 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003342:	b00f      	add	sp, #60	; 0x3c
 8003344:	bd30      	pop	{r4, r5, pc}
 8003346:	bf00      	nop
 8003348:	24004984 	.word	0x24004984
 800334c:	90000630 	.word	0x90000630
 8003350:	08023dc4 	.word	0x08023dc4
 8003354:	24004988 	.word	0x24004988
 8003358:	08023dd0 	.word	0x08023dd0
 800335c:	080032e9 	.word	0x080032e9

08003360 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 19, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003360:	4770      	bx	lr
	...

08003364 <_Z23getFont_verdana_20_4bppv>:
{
 8003364:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 19, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003366:	4d17      	ldr	r5, [pc, #92]	; (80033c4 <_Z23getFont_verdana_20_4bppv+0x60>)
{
 8003368:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 19, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800336a:	682c      	ldr	r4, [r5, #0]
 800336c:	f3bf 8f5b 	dmb	ish
 8003370:	f014 0401 	ands.w	r4, r4, #1
 8003374:	d122      	bne.n	80033bc <_Z23getFont_verdana_20_4bppv+0x58>
 8003376:	4628      	mov	r0, r5
 8003378:	f01d fd51 	bl	8020e1e <__cxa_guard_acquire>
 800337c:	b1f0      	cbz	r0, 80033bc <_Z23getFont_verdana_20_4bppv+0x58>
 800337e:	233f      	movs	r3, #63	; 0x3f
 8003380:	2201      	movs	r2, #1
 8003382:	4911      	ldr	r1, [pc, #68]	; (80033c8 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003384:	9309      	str	r3, [sp, #36]	; 0x24
 8003386:	4b11      	ldr	r3, [pc, #68]	; (80033cc <_Z23getFont_verdana_20_4bppv+0x68>)
 8003388:	4811      	ldr	r0, [pc, #68]	; (80033d0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800338a:	9308      	str	r3, [sp, #32]
 800338c:	4b11      	ldr	r3, [pc, #68]	; (80033d4 <_Z23getFont_verdana_20_4bppv+0x70>)
 800338e:	940a      	str	r4, [sp, #40]	; 0x28
 8003390:	9405      	str	r4, [sp, #20]
 8003392:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003396:	2304      	movs	r3, #4
 8003398:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800339c:	2314      	movs	r3, #20
 800339e:	2213      	movs	r2, #19
 80033a0:	9300      	str	r3, [sp, #0]
 80033a2:	2318      	movs	r3, #24
 80033a4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80033a8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80033ac:	f7ff f8b6 	bl	800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80033b0:	4809      	ldr	r0, [pc, #36]	; (80033d8 <_Z23getFont_verdana_20_4bppv+0x74>)
 80033b2:	f01d fd7f 	bl	8020eb4 <atexit>
 80033b6:	4628      	mov	r0, r5
 80033b8:	f01d fd3d 	bl	8020e36 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80033bc:	4804      	ldr	r0, [pc, #16]	; (80033d0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80033be:	b00f      	add	sp, #60	; 0x3c
 80033c0:	bd30      	pop	{r4, r5, pc}
 80033c2:	bf00      	nop
 80033c4:	240049b4 	.word	0x240049b4
 80033c8:	90000640 	.word	0x90000640
 80033cc:	08023dc8 	.word	0x08023dc8
 80033d0:	240049b8 	.word	0x240049b8
 80033d4:	08023dd4 	.word	0x08023dd4
 80033d8:	08003361 	.word	0x08003361

080033dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80033dc:	4770      	bx	lr
	...

080033e0 <_Z23getFont_verdana_40_4bppv>:
{
 80033e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80033e2:	4d16      	ldr	r5, [pc, #88]	; (800343c <_Z23getFont_verdana_40_4bppv+0x5c>)
{
 80033e4:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80033e6:	682c      	ldr	r4, [r5, #0]
 80033e8:	f3bf 8f5b 	dmb	ish
 80033ec:	f014 0401 	ands.w	r4, r4, #1
 80033f0:	d120      	bne.n	8003434 <_Z23getFont_verdana_40_4bppv+0x54>
 80033f2:	4628      	mov	r0, r5
 80033f4:	f01d fd13 	bl	8020e1e <__cxa_guard_acquire>
 80033f8:	b1e0      	cbz	r0, 8003434 <_Z23getFont_verdana_40_4bppv+0x54>
 80033fa:	233f      	movs	r3, #63	; 0x3f
 80033fc:	2201      	movs	r2, #1
 80033fe:	4910      	ldr	r1, [pc, #64]	; (8003440 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003400:	9309      	str	r3, [sp, #36]	; 0x24
 8003402:	4b10      	ldr	r3, [pc, #64]	; (8003444 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003404:	4810      	ldr	r0, [pc, #64]	; (8003448 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003406:	9308      	str	r3, [sp, #32]
 8003408:	4b10      	ldr	r3, [pc, #64]	; (800344c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800340a:	940a      	str	r4, [sp, #40]	; 0x28
 800340c:	9405      	str	r4, [sp, #20]
 800340e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003412:	2304      	movs	r3, #4
 8003414:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003418:	2328      	movs	r3, #40	; 0x28
 800341a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800341e:	9300      	str	r3, [sp, #0]
 8003420:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003424:	f7ff f87a 	bl	800251c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003428:	4809      	ldr	r0, [pc, #36]	; (8003450 <_Z23getFont_verdana_40_4bppv+0x70>)
 800342a:	f01d fd43 	bl	8020eb4 <atexit>
 800342e:	4628      	mov	r0, r5
 8003430:	f01d fd01 	bl	8020e36 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003434:	4804      	ldr	r0, [pc, #16]	; (8003448 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003436:	b00f      	add	sp, #60	; 0x3c
 8003438:	bd30      	pop	{r4, r5, pc}
 800343a:	bf00      	nop
 800343c:	240049e4 	.word	0x240049e4
 8003440:	9000074c 	.word	0x9000074c
 8003444:	08023dcc 	.word	0x08023dcc
 8003448:	240049e8 	.word	0x240049e8
 800344c:	08023dd8 	.word	0x08023dd8
 8003450:	080033dd 	.word	0x080033dd

08003454 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003454:	2000      	movs	r0, #0
 8003456:	4770      	bx	lr

08003458 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8003458:	2000      	movs	r0, #0
 800345a:	4770      	bx	lr

0800345c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800345c:	b40e      	push	{r1, r2, r3}
 800345e:	b503      	push	{r0, r1, lr}
 8003460:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003462:	2100      	movs	r1, #0
{
 8003464:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003468:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800346a:	f00d fed9 	bl	8011220 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800346e:	b002      	add	sp, #8
 8003470:	f85d eb04 	ldr.w	lr, [sp], #4
 8003474:	b003      	add	sp, #12
 8003476:	4770      	bx	lr

08003478 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003478:	b40c      	push	{r2, r3}
 800347a:	b507      	push	{r0, r1, r2, lr}
 800347c:	ab04      	add	r3, sp, #16
 800347e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003482:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003484:	f00d fecc 	bl	8011220 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003488:	b003      	add	sp, #12
 800348a:	f85d eb04 	ldr.w	lr, [sp], #4
 800348e:	b002      	add	sp, #8
 8003490:	4770      	bx	lr
	...

08003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003494:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8003496:	b510      	push	{r4, lr}
 8003498:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800349a:	b373      	cbz	r3, 80034fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800349c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800349e:	b92b      	cbnz	r3, 80034ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80034a0:	4b18      	ldr	r3, [pc, #96]	; (8003504 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80034a2:	21c5      	movs	r1, #197	; 0xc5
 80034a4:	4a18      	ldr	r2, [pc, #96]	; (8003508 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80034a6:	4819      	ldr	r0, [pc, #100]	; (800350c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80034a8:	f01d fce6 	bl	8020e78 <__assert_func>
            return buffer[pos];
 80034ac:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80034ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80034b2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80034b4:	b30b      	cbz	r3, 80034fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80034b6:	f00f fa51 	bl	801295c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80034ba:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80034bc:	2b01      	cmp	r3, #1
 80034be:	d803      	bhi.n	80034c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80034c0:	4b13      	ldr	r3, [pc, #76]	; (8003510 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80034c2:	21cb      	movs	r1, #203	; 0xcb
 80034c4:	4a13      	ldr	r2, [pc, #76]	; (8003514 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80034c6:	e7ee      	b.n	80034a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80034c8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80034ca:	f640 103f 	movw	r0, #2367	; 0x93f
 80034ce:	1c53      	adds	r3, r2, #1
 80034d0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80034d2:	2b09      	cmp	r3, #9
 80034d4:	4619      	mov	r1, r3
 80034d6:	bf88      	it	hi
 80034d8:	f1a3 010a 	subhi.w	r1, r3, #10
 80034dc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80034e0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80034e2:	4281      	cmp	r1, r0
 80034e4:	d109      	bne.n	80034fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80034e6:	2b0a      	cmp	r3, #10
 80034e8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80034ec:	bf28      	it	cs
 80034ee:	2300      	movcs	r3, #0
            return buffer[pos];
 80034f0:	8c50      	ldrh	r0, [r2, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80034f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80034f6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80034f8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80034fa:	4620      	mov	r0, r4
}
 80034fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003500:	f00f b92e 	b.w	8012760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003504:	08022e30 	.word	0x08022e30
 8003508:	08022e39 	.word	0x08022e39
 800350c:	08022ee4 	.word	0x08022ee4
 8003510:	08022f2e 	.word	0x08022f2e
 8003514:	08022f3c 	.word	0x08022f3c

08003518 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003518:	f00f b8eb 	b.w	80126f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800351c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800351c:	b510      	push	{r4, lr}
 800351e:	b086      	sub	sp, #24
 8003520:	ac02      	add	r4, sp, #8
 8003522:	e884 0006 	stmia.w	r4, {r1, r2}
 8003526:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003528:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800352a:	4621      	mov	r1, r4
    va_start(pArg, format);
 800352c:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800352e:	9301      	str	r3, [sp, #4]
 8003530:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003532:	9300      	str	r3, [sp, #0]
 8003534:	9b08      	ldr	r3, [sp, #32]
 8003536:	f00c faa7 	bl	800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800353a:	b006      	add	sp, #24
 800353c:	bd10      	pop	{r4, pc}
	...

08003540 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003540:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003542:	bb18      	cbnz	r0, 800358c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003544:	4b12      	ldr	r3, [pc, #72]	; (8003590 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003546:	4813      	ldr	r0, [pc, #76]	; (8003594 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003548:	681c      	ldr	r4, [r3, #0]
 800354a:	4913      	ldr	r1, [pc, #76]	; (8003598 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800354c:	b1b4      	cbz	r4, 800357c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800354e:	6822      	ldr	r2, [r4, #0]
 8003550:	4422      	add	r2, r4
 8003552:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003554:	6862      	ldr	r2, [r4, #4]
 8003556:	4422      	add	r2, r4
 8003558:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800355a:	68a2      	ldr	r2, [r4, #8]
 800355c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800355e:	4b0f      	ldr	r3, [pc, #60]	; (800359c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003560:	2200      	movs	r2, #0
 8003562:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003564:	f000 f838 	bl	80035d8 <_ZN17TypedTextDatabase8getFontsEv>
 8003568:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800356a:	f000 f833 	bl	80035d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800356e:	4b0c      	ldr	r3, [pc, #48]	; (80035a0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003570:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003572:	4b0c      	ldr	r3, [pc, #48]	; (80035a4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003574:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003576:	4b0c      	ldr	r3, [pc, #48]	; (80035a8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003578:	8018      	strh	r0, [r3, #0]
    }
}
 800357a:	e007      	b.n	800358c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800357c:	4b0b      	ldr	r3, [pc, #44]	; (80035ac <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800357e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003580:	4b0b      	ldr	r3, [pc, #44]	; (80035b0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003582:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003584:	4b0b      	ldr	r3, [pc, #44]	; (80035b4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003586:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003588:	2c00      	cmp	r4, #0
 800358a:	d1e8      	bne.n	800355e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800358c:	bd38      	pop	{r3, r4, r5, pc}
 800358e:	bf00      	nop
 8003590:	24004a14 	.word	0x24004a14
 8003594:	24004a18 	.word	0x24004a18
 8003598:	24004a1c 	.word	0x24004a1c
 800359c:	24004a20 	.word	0x24004a20
 80035a0:	2400e47c 	.word	0x2400e47c
 80035a4:	2400e484 	.word	0x2400e484
 80035a8:	2400e480 	.word	0x2400e480
 80035ac:	90000770 	.word	0x90000770
 80035b0:	9000075c 	.word	0x9000075c
 80035b4:	900007e8 	.word	0x900007e8

080035b8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80035b8:	4b04      	ldr	r3, [pc, #16]	; (80035cc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80035c0:	4b03      	ldr	r3, [pc, #12]	; (80035d0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80035c2:	681b      	ldr	r3, [r3, #0]
}
 80035c4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80035c8:	4770      	bx	lr
 80035ca:	bf00      	nop
 80035cc:	24004a1c 	.word	0x24004a1c
 80035d0:	24004a18 	.word	0x24004a18

080035d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80035d4:	2005      	movs	r0, #5
 80035d6:	4770      	bx	lr

080035d8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80035d8:	4800      	ldr	r0, [pc, #0]	; (80035dc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80035da:	4770      	bx	lr
 80035dc:	24004a24 	.word	0x24004a24

080035e0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80035e0:	b510      	push	{r4, lr}
};
 80035e2:	4c05      	ldr	r4, [pc, #20]	; (80035f8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
 80035e4:	f7ff febe 	bl	8003364 <_Z23getFont_verdana_20_4bppv>
};
 80035e8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80035ea:	f7ff fef9 	bl	80033e0 <_Z23getFont_verdana_40_4bppv>
};
 80035ee:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80035f0:	f7ff fe7c 	bl	80032ec <_Z23getFont_verdana_10_4bppv>
};
 80035f4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80035f6:	bd10      	pop	{r4, pc}
 80035f8:	24004a24 	.word	0x24004a24

080035fc <_ZN6CercleD1Ev>:
 80035fc:	4b03      	ldr	r3, [pc, #12]	; (800360c <_ZN6CercleD1Ev+0x10>)
 80035fe:	b510      	push	{r4, lr}
 8003600:	4604      	mov	r4, r0
 8003602:	6003      	str	r3, [r0, #0]
 8003604:	f7fe fcc1 	bl	8001f8a <_ZN10CercleBaseD1Ev>
 8003608:	4620      	mov	r0, r4
 800360a:	bd10      	pop	{r4, pc}
 800360c:	08023018 	.word	0x08023018

08003610 <_ZN6CercleD0Ev>:
 8003610:	b510      	push	{r4, lr}
 8003612:	4604      	mov	r4, r0
 8003614:	f7ff fff2 	bl	80035fc <_ZN6CercleD1Ev>
 8003618:	2188      	movs	r1, #136	; 0x88
 800361a:	4620      	mov	r0, r4
 800361c:	f01d fbfd 	bl	8020e1a <_ZdlPvj>
 8003620:	4620      	mov	r0, r4
 8003622:	bd10      	pop	{r4, pc}

08003624 <_ZN6CercleC1Ev>:
#include <gui/containers/Cercle.hpp>

Cercle::Cercle()
 8003624:	b510      	push	{r4, lr}
 8003626:	4604      	mov	r4, r0
 8003628:	f7fe fcb8 	bl	8001f9c <_ZN10CercleBaseC1Ev>
 800362c:	4b01      	ldr	r3, [pc, #4]	; (8003634 <_ZN6CercleC1Ev+0x10>)
{

}
 800362e:	4620      	mov	r0, r4
Cercle::Cercle()
 8003630:	6023      	str	r3, [r4, #0]
}
 8003632:	bd10      	pop	{r4, pc}
 8003634:	08023018 	.word	0x08023018

08003638 <_ZN6Cercle10initializeEv>:

void Cercle::initialize()
{
    CercleBase::initialize();
 8003638:	f7fe bca8 	b.w	8001f8c <_ZN10CercleBase10initializeEv>

0800363c <_ZN5CroixC1Ev>:
#include <gui/containers/Croix.hpp>

Croix::Croix()
 800363c:	b510      	push	{r4, lr}
 800363e:	4604      	mov	r4, r0
 8003640:	f7fe fd2c 	bl	800209c <_ZN9CroixBaseC1Ev>
 8003644:	4b01      	ldr	r3, [pc, #4]	; (800364c <_ZN5CroixC1Ev+0x10>)
{

}
 8003646:	4620      	mov	r0, r4
Croix::Croix()
 8003648:	6023      	str	r3, [r4, #0]
}
 800364a:	bd10      	pop	{r4, pc}
 800364c:	080230ac 	.word	0x080230ac

08003650 <_ZN5Croix10initializeEv>:

void Croix::initialize()
{
    CroixBase::initialize();
 8003650:	f7fe bcff 	b.w	8002052 <_ZN9CroixBase10initializeEv>

08003654 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003654:	4770      	bx	lr

08003656 <_ZN19FrontendApplicationD0Ev>:
 8003656:	b510      	push	{r4, lr}
 8003658:	4604      	mov	r4, r0
 800365a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800365e:	f01d fbdc 	bl	8020e1a <_ZdlPvj>
 8003662:	4620      	mov	r0, r4
 8003664:	bd10      	pop	{r4, pc}

08003666 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003666:	b510      	push	{r4, lr}
 8003668:	4604      	mov	r4, r0
    {
        model.tick();
 800366a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800366e:	f000 f832 	bl	80036d6 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003672:	4620      	mov	r0, r4
    }
 8003674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003678:	f00c bf06 	b.w	8010488 <_ZN8touchgfx11Application15handleTickEventEv>

0800367c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800367c:	b510      	push	{r4, lr}
 800367e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003680:	f7fe feda 	bl	8002438 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003684:	4b01      	ldr	r3, [pc, #4]	; (800368c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003686:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003688:	6023      	str	r3, [r4, #0]
}
 800368a:	bd10      	pop	{r4, pc}
 800368c:	08023140 	.word	0x08023140

08003690 <_ZN6GrilleD1Ev>:
 8003690:	4b03      	ldr	r3, [pc, #12]	; (80036a0 <_ZN6GrilleD1Ev+0x10>)
 8003692:	b510      	push	{r4, lr}
 8003694:	4604      	mov	r4, r0
 8003696:	6003      	str	r3, [r0, #0]
 8003698:	f7fe ff70 	bl	800257c <_ZN10GrilleBaseD1Ev>
 800369c:	4620      	mov	r0, r4
 800369e:	bd10      	pop	{r4, pc}
 80036a0:	08023194 	.word	0x08023194

080036a4 <_ZN6GrilleD0Ev>:
 80036a4:	b510      	push	{r4, lr}
 80036a6:	4604      	mov	r4, r0
 80036a8:	f7ff fff2 	bl	8003690 <_ZN6GrilleD1Ev>
 80036ac:	21dc      	movs	r1, #220	; 0xdc
 80036ae:	4620      	mov	r0, r4
 80036b0:	f01d fbb3 	bl	8020e1a <_ZdlPvj>
 80036b4:	4620      	mov	r0, r4
 80036b6:	bd10      	pop	{r4, pc}

080036b8 <_ZN6GrilleC1Ev>:
#include <gui/containers/Grille.hpp>

Grille::Grille()
 80036b8:	b510      	push	{r4, lr}
 80036ba:	4604      	mov	r4, r0
 80036bc:	f7fe ff68 	bl	8002590 <_ZN10GrilleBaseC1Ev>
 80036c0:	4b01      	ldr	r3, [pc, #4]	; (80036c8 <_ZN6GrilleC1Ev+0x10>)
{

}
 80036c2:	4620      	mov	r0, r4
Grille::Grille()
 80036c4:	6023      	str	r3, [r4, #0]
}
 80036c6:	bd10      	pop	{r4, pc}
 80036c8:	08023194 	.word	0x08023194

080036cc <_ZN6Grille10initializeEv>:

void Grille::initialize()
{
    GrilleBase::initialize();
 80036cc:	f7fe bf57 	b.w	800257e <_ZN10GrilleBase10initializeEv>

080036d0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80036d0:	2200      	movs	r2, #0
 80036d2:	6002      	str	r2, [r0, #0]
{

}
 80036d4:	4770      	bx	lr

080036d6 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80036d6:	4770      	bx	lr

080036d8 <_ZN18Morpion_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Morpion_2Presenter() {}
 80036d8:	4770      	bx	lr

080036da <_ZThn4_N18Morpion_2PresenterD1Ev>:
 80036da:	3804      	subs	r0, #4
 80036dc:	4770      	bx	lr

080036de <_ZN18Morpion_2Presenter10deactivateEv>:
}

void Morpion_2Presenter::activate()
{

}
 80036de:	4770      	bx	lr

080036e0 <_ZN18Morpion_2PresenterD0Ev>:
 80036e0:	b510      	push	{r4, lr}
 80036e2:	4604      	mov	r4, r0
 80036e4:	2110      	movs	r1, #16
 80036e6:	f01d fb98 	bl	8020e1a <_ZdlPvj>
 80036ea:	4620      	mov	r0, r4
 80036ec:	bd10      	pop	{r4, pc}

080036ee <_ZThn4_N18Morpion_2PresenterD0Ev>:
 80036ee:	f1a0 0004 	sub.w	r0, r0, #4
 80036f2:	e7f5      	b.n	80036e0 <_ZN18Morpion_2PresenterD0Ev>

080036f4 <_ZN18Morpion_2PresenterC1ER13Morpion_2View>:
    ModelListener() : model(0) {}
 80036f4:	2200      	movs	r2, #0
    : view(v)
 80036f6:	60c1      	str	r1, [r0, #12]
 80036f8:	6082      	str	r2, [r0, #8]
 80036fa:	4a04      	ldr	r2, [pc, #16]	; (800370c <_ZN18Morpion_2PresenterC1ER13Morpion_2View+0x18>)
Morpion_2Presenter::Morpion_2Presenter(Morpion_2View& v)
 80036fc:	b510      	push	{r4, lr}
    : view(v)
 80036fe:	f102 0408 	add.w	r4, r2, #8
 8003702:	3220      	adds	r2, #32
 8003704:	6004      	str	r4, [r0, #0]
 8003706:	6042      	str	r2, [r0, #4]
}
 8003708:	bd10      	pop	{r4, pc}
 800370a:	bf00      	nop
 800370c:	08023220 	.word	0x08023220

08003710 <_ZN13Morpion_2View14tearDownScreenEv>:
}

void Morpion_2View::tearDownScreen()
{
    Morpion_2ViewBase::tearDownScreen();
}
 8003710:	4770      	bx	lr
	...

08003714 <_ZN13Morpion_2View8PlayMoveEii>:
}

//Commentaire de merde

void Morpion_2View::PlayMove(int X, int Y)
{
 8003714:	b570      	push	{r4, r5, r6, lr}
	if(turn%2==0)
 8003716:	4c13      	ldr	r4, [pc, #76]	; (8003764 <_ZN13Morpion_2View8PlayMoveEii+0x50>)
{
 8003718:	4616      	mov	r6, r2
 800371a:	460d      	mov	r5, r1
	if(turn%2==0)
 800371c:	6823      	ldr	r3, [r4, #0]
 800371e:	07da      	lsls	r2, r3, #31
 8003720:	d40a      	bmi.n	8003738 <_ZN13Morpion_2View8PlayMoveEii+0x24>
		Croix[turn/2]->moveTo(X,Y);
 8003722:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8003726:	4a10      	ldr	r2, [pc, #64]	; (8003768 <_ZN13Morpion_2View8PlayMoveEii+0x54>)
 8003728:	b209      	sxth	r1, r1
 800372a:	105b      	asrs	r3, r3, #1
 800372c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8003730:	b232      	sxth	r2, r6
 8003732:	6803      	ldr	r3, [r0, #0]
 8003734:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003736:	4798      	blx	r3
	if(turn%2==1)
 8003738:	6823      	ldr	r3, [r4, #0]
 800373a:	2b00      	cmp	r3, #0
 800373c:	f003 0201 	and.w	r2, r3, #1
 8003740:	bfb8      	it	lt
 8003742:	4252      	neglt	r2, r2
 8003744:	2a01      	cmp	r2, #1
 8003746:	d108      	bne.n	800375a <_ZN13Morpion_2View8PlayMoveEii+0x46>
		Cercle[turn/2]->moveTo(X,Y);
 8003748:	105b      	asrs	r3, r3, #1
 800374a:	4a08      	ldr	r2, [pc, #32]	; (800376c <_ZN13Morpion_2View8PlayMoveEii+0x58>)
 800374c:	b229      	sxth	r1, r5
 800374e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8003752:	b232      	sxth	r2, r6
 8003754:	6803      	ldr	r3, [r0, #0]
 8003756:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003758:	4798      	blx	r3
	turn++;
 800375a:	6823      	ldr	r3, [r4, #0]
 800375c:	3301      	adds	r3, #1
 800375e:	6023      	str	r3, [r4, #0]
}
 8003760:	bd70      	pop	{r4, r5, r6, pc}
 8003762:	bf00      	nop
 8003764:	24004a54 	.word	0x24004a54
 8003768:	24004a40 	.word	0x24004a40
 800376c:	24004a30 	.word	0x24004a30

08003770 <_ZN13Morpion_2View10button_0_0Ev>:


void Morpion_2View::button_0_0()
{
 8003770:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_0_0.getX(),Button_0_0.getY());
 8003772:	f9b0 2792 	ldrsh.w	r2, [r0, #1938]	; 0x792
{
 8003776:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_0_0.getX(),Button_0_0.getY());
 8003778:	f9b0 1790 	ldrsh.w	r1, [r0, #1936]	; 0x790
 800377c:	f7ff ffca 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 8003780:	2300      	movs	r3, #0
 8003782:	f884 37b0 	strb.w	r3, [r4, #1968]	; 0x7b0
	Button_0_0.setTouchable(0);
}
 8003786:	bd10      	pop	{r4, pc}

08003788 <_ZN13Morpion_2View10button_0_1Ev>:

void Morpion_2View::button_0_1()
{
 8003788:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_0_1.getX(),Button_0_1.getY());
 800378a:	f9b0 271a 	ldrsh.w	r2, [r0, #1818]	; 0x71a
{
 800378e:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_0_1.getX(),Button_0_1.getY());
 8003790:	f9b0 1718 	ldrsh.w	r1, [r0, #1816]	; 0x718
 8003794:	f7ff ffbe 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 8003798:	2300      	movs	r3, #0
 800379a:	f884 3738 	strb.w	r3, [r4, #1848]	; 0x738
	Button_0_1.setTouchable(0);
}
 800379e:	bd10      	pop	{r4, pc}

080037a0 <_ZN13Morpion_2View10button_0_2Ev>:

void Morpion_2View::button_0_2()
{
 80037a0:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_0_2.getX(),Button_0_2.getY());
 80037a2:	f9b0 26a2 	ldrsh.w	r2, [r0, #1698]	; 0x6a2
{
 80037a6:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_0_2.getX(),Button_0_2.getY());
 80037a8:	f9b0 16a0 	ldrsh.w	r1, [r0, #1696]	; 0x6a0
 80037ac:	f7ff ffb2 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 80037b0:	2300      	movs	r3, #0
 80037b2:	f884 36c0 	strb.w	r3, [r4, #1728]	; 0x6c0
	Button_0_2.setTouchable(0);
}
 80037b6:	bd10      	pop	{r4, pc}

080037b8 <_ZN13Morpion_2View10button_1_0Ev>:

void Morpion_2View::button_1_0()
{
 80037b8:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_1_0.getX(),Button_1_0.getY());
 80037ba:	f9b0 262a 	ldrsh.w	r2, [r0, #1578]	; 0x62a
{
 80037be:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_1_0.getX(),Button_1_0.getY());
 80037c0:	f9b0 1628 	ldrsh.w	r1, [r0, #1576]	; 0x628
 80037c4:	f7ff ffa6 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 80037c8:	2300      	movs	r3, #0
 80037ca:	f884 3648 	strb.w	r3, [r4, #1608]	; 0x648
	Button_1_0.setTouchable(0);
}
 80037ce:	bd10      	pop	{r4, pc}

080037d0 <_ZN13Morpion_2View10button_1_1Ev>:

void Morpion_2View::button_1_1()
{
 80037d0:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_1_1.getX(),Button_1_1.getY());
 80037d2:	f9b0 25b2 	ldrsh.w	r2, [r0, #1458]	; 0x5b2
{
 80037d6:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_1_1.getX(),Button_1_1.getY());
 80037d8:	f9b0 15b0 	ldrsh.w	r1, [r0, #1456]	; 0x5b0
 80037dc:	f7ff ff9a 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 80037e0:	2300      	movs	r3, #0
 80037e2:	f884 35d0 	strb.w	r3, [r4, #1488]	; 0x5d0
	Button_1_1.setTouchable(0);
}
 80037e6:	bd10      	pop	{r4, pc}

080037e8 <_ZN13Morpion_2View10button_1_2Ev>:

void Morpion_2View::button_1_2()
{
 80037e8:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_1_2.getX(),Button_1_2.getY());
 80037ea:	f9b0 253a 	ldrsh.w	r2, [r0, #1338]	; 0x53a
{
 80037ee:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_1_2.getX(),Button_1_2.getY());
 80037f0:	f9b0 1538 	ldrsh.w	r1, [r0, #1336]	; 0x538
 80037f4:	f7ff ff8e 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 80037f8:	2300      	movs	r3, #0
 80037fa:	f884 3558 	strb.w	r3, [r4, #1368]	; 0x558
	Button_1_2.setTouchable(0);
}
 80037fe:	bd10      	pop	{r4, pc}

08003800 <_ZN13Morpion_2View10button_2_0Ev>:

void Morpion_2View::button_2_0()
{
 8003800:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_2_0.getX(),Button_2_0.getY());
 8003802:	f9b0 24c2 	ldrsh.w	r2, [r0, #1218]	; 0x4c2
{
 8003806:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_2_0.getX(),Button_2_0.getY());
 8003808:	f9b0 14c0 	ldrsh.w	r1, [r0, #1216]	; 0x4c0
 800380c:	f7ff ff82 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 8003810:	2300      	movs	r3, #0
 8003812:	f884 34e0 	strb.w	r3, [r4, #1248]	; 0x4e0
	Button_2_0.setTouchable(0);
}
 8003816:	bd10      	pop	{r4, pc}

08003818 <_ZN13Morpion_2View10button_2_1Ev>:

void Morpion_2View::button_2_1()
{
 8003818:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_2_1.getX(),Button_2_1.getY());
 800381a:	f9b0 244a 	ldrsh.w	r2, [r0, #1098]	; 0x44a
{
 800381e:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_2_1.getX(),Button_2_1.getY());
 8003820:	f9b0 1448 	ldrsh.w	r1, [r0, #1096]	; 0x448
 8003824:	f7ff ff76 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 8003828:	2300      	movs	r3, #0
 800382a:	f884 3468 	strb.w	r3, [r4, #1128]	; 0x468
	Button_2_1.setTouchable(0);
}
 800382e:	bd10      	pop	{r4, pc}

08003830 <_ZN13Morpion_2View10button_2_2Ev>:

void Morpion_2View::button_2_2()
{
 8003830:	b510      	push	{r4, lr}
	Morpion_2View::PlayMove(Button_2_2.getX(),Button_2_2.getY());
 8003832:	f9b0 23d2 	ldrsh.w	r2, [r0, #978]	; 0x3d2
{
 8003836:	4604      	mov	r4, r0
	Morpion_2View::PlayMove(Button_2_2.getX(),Button_2_2.getY());
 8003838:	f9b0 13d0 	ldrsh.w	r1, [r0, #976]	; 0x3d0
 800383c:	f7ff ff6a 	bl	8003714 <_ZN13Morpion_2View8PlayMoveEii>
 8003840:	2300      	movs	r3, #0
 8003842:	f884 33f0 	strb.w	r3, [r4, #1008]	; 0x3f0
	Button_2_2.setTouchable(0);
}
 8003846:	bd10      	pop	{r4, pc}

08003848 <_ZN13Morpion_2ViewD1Ev>:

class Morpion_2View : public Morpion_2ViewBase
{
public:
    Morpion_2View();
    virtual ~Morpion_2View() {}
 8003848:	4b03      	ldr	r3, [pc, #12]	; (8003858 <_ZN13Morpion_2ViewD1Ev+0x10>)
 800384a:	b510      	push	{r4, lr}
 800384c:	4604      	mov	r4, r0
 800384e:	6003      	str	r3, [r0, #0]
 8003850:	f7ff f8b4 	bl	80029bc <_ZN17Morpion_2ViewBaseD1Ev>
 8003854:	4620      	mov	r0, r4
 8003856:	bd10      	pop	{r4, pc}
 8003858:	08023250 	.word	0x08023250

0800385c <_ZN13Morpion_2ViewD0Ev>:
 800385c:	b510      	push	{r4, lr}
 800385e:	4604      	mov	r4, r0
 8003860:	f7ff fff2 	bl	8003848 <_ZN13Morpion_2ViewD1Ev>
 8003864:	f243 51b8 	movw	r1, #13752	; 0x35b8
 8003868:	4620      	mov	r0, r4
 800386a:	f01d fad6 	bl	8020e1a <_ZdlPvj>
 800386e:	4620      	mov	r0, r4
 8003870:	bd10      	pop	{r4, pc}
	...

08003874 <_ZN13Morpion_2View14restart_buttonEv>:
 8003874:	2301      	movs	r3, #1
	Croix_1.moveTo(-156,-26);
 8003876:	f06f 0219 	mvn.w	r2, #25
 800387a:	f06f 019b 	mvn.w	r1, #155	; 0x9b
{
 800387e:	b510      	push	{r4, lr}
 8003880:	4604      	mov	r4, r0
 8003882:	f880 37b0 	strb.w	r3, [r0, #1968]	; 0x7b0
 8003886:	f880 3738 	strb.w	r3, [r0, #1848]	; 0x738
 800388a:	f880 36c0 	strb.w	r3, [r0, #1728]	; 0x6c0
 800388e:	f880 3648 	strb.w	r3, [r0, #1608]	; 0x648
 8003892:	f880 35d0 	strb.w	r3, [r0, #1488]	; 0x5d0
 8003896:	f880 3558 	strb.w	r3, [r0, #1368]	; 0x558
 800389a:	f880 34e0 	strb.w	r3, [r0, #1248]	; 0x4e0
 800389e:	f880 3468 	strb.w	r3, [r0, #1128]	; 0x468
 80038a2:	f880 33f0 	strb.w	r3, [r0, #1008]	; 0x3f0
	Croix_1.moveTo(-156,-26);
 80038a6:	f600 0004 	addw	r0, r0, #2052	; 0x804
 80038aa:	f7fd fbae 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_2.moveTo(-156,-26);
 80038ae:	f06f 0219 	mvn.w	r2, #25
 80038b2:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80038b6:	f604 2048 	addw	r0, r4, #2632	; 0xa48
 80038ba:	f7fd fba6 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_3.moveTo(-156,-26);
 80038be:	f06f 0219 	mvn.w	r2, #25
 80038c2:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80038c6:	f604 4004 	addw	r0, r4, #3076	; 0xc04
 80038ca:	f7fd fb9e 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_4.moveTo(-156,-26);
 80038ce:	f06f 0219 	mvn.w	r2, #25
 80038d2:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80038d6:	f504 605c 	add.w	r0, r4, #3520	; 0xdc0
 80038da:	f7fd fb96 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Croix_5.moveTo(-156,-26);
 80038de:	f06f 0219 	mvn.w	r2, #25
 80038e2:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80038e6:	f604 60f4 	addw	r0, r4, #3828	; 0xef4
 80038ea:	f7fd fb8e 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_1.moveTo(-156,-26);
 80038ee:	f06f 0219 	mvn.w	r2, #25
 80038f2:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 80038f6:	f604 1038 	addw	r0, r4, #2360	; 0x938
 80038fa:	f7fd fb86 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_2.moveTo(-156,-26);
 80038fe:	f06f 0219 	mvn.w	r2, #25
 8003902:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003906:	f504 601c 	add.w	r0, r4, #2496	; 0x9c0
 800390a:	f7fd fb7e 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_3.moveTo(-156,-26);
 800390e:	f06f 0219 	mvn.w	r2, #25
 8003912:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003916:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
 800391a:	f7fd fb76 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	Cercle_4.moveTo(-156,-26);
 800391e:	f06f 0219 	mvn.w	r2, #25
 8003922:	f06f 019b 	mvn.w	r1, #155	; 0x9b
 8003926:	f604 5038 	addw	r0, r4, #3384	; 0xd38
 800392a:	f7fd fb6e 	bl	800100a <_ZN8touchgfx8Drawable6moveToEss>
	turn=0;
 800392e:	4b02      	ldr	r3, [pc, #8]	; (8003938 <_ZN13Morpion_2View14restart_buttonEv+0xc4>)
 8003930:	2200      	movs	r2, #0
 8003932:	601a      	str	r2, [r3, #0]
}
 8003934:	bd10      	pop	{r4, pc}
 8003936:	bf00      	nop
 8003938:	24004a54 	.word	0x24004a54

0800393c <_ZN13Morpion_2ViewC1Ev>:
Morpion_2View::Morpion_2View()
 800393c:	b510      	push	{r4, lr}
 800393e:	4604      	mov	r4, r0
 8003940:	f7ff f8cc 	bl	8002adc <_ZN17Morpion_2ViewBaseC1Ev>
 8003944:	4b10      	ldr	r3, [pc, #64]	; (8003988 <_ZN13Morpion_2ViewC1Ev+0x4c>)
	Croix[0]=&Croix_1;
 8003946:	f604 0204 	addw	r2, r4, #2052	; 0x804
	Cercle[0]=&Cercle_1;
 800394a:	f604 1138 	addw	r1, r4, #2360	; 0x938
Morpion_2View::Morpion_2View()
 800394e:	6023      	str	r3, [r4, #0]
}
 8003950:	4620      	mov	r0, r4
	Croix[0]=&Croix_1;
 8003952:	4b0e      	ldr	r3, [pc, #56]	; (800398c <_ZN13Morpion_2ViewC1Ev+0x50>)
 8003954:	601a      	str	r2, [r3, #0]
	Cercle[0]=&Cercle_1;
 8003956:	4a0e      	ldr	r2, [pc, #56]	; (8003990 <_ZN13Morpion_2ViewC1Ev+0x54>)
 8003958:	6011      	str	r1, [r2, #0]
	Croix[1]=&Croix_2;
 800395a:	f604 2148 	addw	r1, r4, #2632	; 0xa48
 800395e:	6059      	str	r1, [r3, #4]
	Cercle[1]=&Cercle_2;
 8003960:	f504 611c 	add.w	r1, r4, #2496	; 0x9c0
 8003964:	6051      	str	r1, [r2, #4]
	Croix[2]=&Croix_3;
 8003966:	f604 4104 	addw	r1, r4, #3076	; 0xc04
 800396a:	6099      	str	r1, [r3, #8]
	Cercle[2]=&Cercle_3;
 800396c:	f604 317c 	addw	r1, r4, #2940	; 0xb7c
 8003970:	6091      	str	r1, [r2, #8]
	Croix[3]=&Croix_4;
 8003972:	f504 615c 	add.w	r1, r4, #3520	; 0xdc0
 8003976:	60d9      	str	r1, [r3, #12]
	Cercle[3]=&Cercle_4;
 8003978:	f604 5138 	addw	r1, r4, #3384	; 0xd38
 800397c:	60d1      	str	r1, [r2, #12]
	Croix[4]=&Croix_5;
 800397e:	f604 62f4 	addw	r2, r4, #3828	; 0xef4
 8003982:	611a      	str	r2, [r3, #16]
}
 8003984:	bd10      	pop	{r4, pc}
 8003986:	bf00      	nop
 8003988:	08023250 	.word	0x08023250
 800398c:	24004a40 	.word	0x24004a40
 8003990:	24004a30 	.word	0x24004a30

08003994 <_ZN13Morpion_2View11setupScreenEv>:
    Morpion_2ViewBase::setupScreen();
 8003994:	f7fe beec 	b.w	8002770 <_ZN17Morpion_2ViewBase11setupScreenEv>

08003998 <EXC7200_GetCapabilities>:
  (void)(pObj);
  
  /* Store component's capabilities */
  Capabilities->MultiTouch = 0;
  Capabilities->Gesture    = 0;
  Capabilities->MaxTouch   = EXC7200_MAX_NB_TOUCH;
 8003998:	2301      	movs	r3, #1
  Capabilities->MultiTouch = 0;
 800399a:	2000      	movs	r0, #0
  Capabilities->MaxTouch   = EXC7200_MAX_NB_TOUCH;
 800399c:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxXl      = EXC7200_MAX_X_LENGTH;
 800399e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  Capabilities->MultiTouch = 0;
 80039a2:	8008      	strh	r0, [r1, #0]
  Capabilities->MaxYl      = EXC7200_MAX_Y_LENGTH;
 80039a4:	e9c1 3301 	strd	r3, r3, [r1, #4]
  
  return EXC7200_OK;
}
 80039a8:	4770      	bx	lr

080039aa <EXC7200_GestureConfig>:
  */
int32_t EXC7200_GestureConfig(EXC7200_Object_t *pObj, EXC7200_Gesture_Init_t *GestureInit)
{
  /* Feature not supported */
  return EXC7200_ERROR;  
}
 80039aa:	f04f 30ff 	mov.w	r0, #4294967295
 80039ae:	4770      	bx	lr

080039b0 <EXC7200_EnableIT>:
  */
int32_t EXC7200_EnableIT(EXC7200_Object_t *pObj)
{
  /* Feature not supported */
  return EXC7200_ERROR;
}
 80039b0:	f04f 30ff 	mov.w	r0, #4294967295
 80039b4:	4770      	bx	lr

080039b6 <ReadRegWrap>:
  * @param  pData The target register value to be read
  * @param  Length buffer size to be read
  * @retval Component status.
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 80039b6:	b410      	push	{r4}
  EXC7200_Object_t *pObj = (EXC7200_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 80039b8:	6904      	ldr	r4, [r0, #16]
 80039ba:	8900      	ldrh	r0, [r0, #8]
 80039bc:	46a4      	mov	ip, r4
}
 80039be:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 80039c2:	4760      	bx	ip

080039c4 <WriteRegWrap>:
  * @param  pData The target register value to be written
  * @param  Length buffer size to be written
  * @retval Component status.
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 80039c4:	b410      	push	{r4}
  EXC7200_Object_t *pObj = (EXC7200_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 80039c6:	68c4      	ldr	r4, [r0, #12]
 80039c8:	8900      	ldrh	r0, [r0, #8]
 80039ca:	46a4      	mov	ip, r4
}
 80039cc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 80039d0:	4760      	bx	ip

080039d2 <EXC7200_ReadID>:
{
 80039d2:	b513      	push	{r0, r1, r4, lr}
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, &data, 1) == EXC7200_OK)
 80039d4:	2301      	movs	r3, #1
{
 80039d6:	460c      	mov	r4, r1
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, &data, 1) == EXC7200_OK)
 80039d8:	f10d 0207 	add.w	r2, sp, #7
 80039dc:	2109      	movs	r1, #9
 80039de:	3018      	adds	r0, #24
 80039e0:	f000 f888 	bl	8003af4 <exc7200_read_reg>
 80039e4:	b920      	cbnz	r0, 80039f0 <EXC7200_ReadID+0x1e>
    *Id = EXC7200_ID; 
 80039e6:	f44f 43e4 	mov.w	r3, #29184	; 0x7200
 80039ea:	6023      	str	r3, [r4, #0]
}
 80039ec:	b002      	add	sp, #8
 80039ee:	bd10      	pop	{r4, pc}
  int32_t ret = EXC7200_ERROR;
 80039f0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 80039f4:	e7fa      	b.n	80039ec <EXC7200_ReadID+0x1a>

080039f6 <EXC7200_Init>:
{
 80039f6:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 80039f8:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 80039fc:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 80039fe:	b933      	cbnz	r3, 8003a0e <EXC7200_Init+0x18>
    if(pObj->IO.Init() != EXC7200_OK)
 8003a00:	6803      	ldr	r3, [r0, #0]
 8003a02:	4798      	blx	r3
 8003a04:	b928      	cbnz	r0, 8003a12 <EXC7200_Init+0x1c>
      pObj->IsInitialized = 1;
 8003a06:	2301      	movs	r3, #1
 8003a08:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
}
 8003a0c:	bd10      	pop	{r4, pc}
  int32_t ret = EXC7200_OK;
 8003a0e:	2000      	movs	r0, #0
 8003a10:	e7fc      	b.n	8003a0c <EXC7200_Init+0x16>
      ret = EXC7200_ERROR;
 8003a12:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003a16:	e7f9      	b.n	8003a0c <EXC7200_Init+0x16>

08003a18 <EXC7200_DeInit>:
{
 8003a18:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 1U)
 8003a1a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8003a1e:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 1U)
 8003a20:	2b01      	cmp	r3, #1
 8003a22:	d105      	bne.n	8003a30 <EXC7200_DeInit+0x18>
    if(pObj->IO.DeInit() != EXC7200_OK)
 8003a24:	6843      	ldr	r3, [r0, #4]
 8003a26:	4798      	blx	r3
 8003a28:	b920      	cbnz	r0, 8003a34 <EXC7200_DeInit+0x1c>
      pObj->IsInitialized = 0;
 8003a2a:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
}
 8003a2e:	bd10      	pop	{r4, pc}
  int32_t ret = EXC7200_OK;
 8003a30:	2000      	movs	r0, #0
 8003a32:	e7fc      	b.n	8003a2e <EXC7200_DeInit+0x16>
      ret = EXC7200_ERROR;
 8003a34:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003a38:	e7f9      	b.n	8003a2e <EXC7200_DeInit+0x16>

08003a3a <EXC7200_DisableIT>:
 8003a3a:	f04f 30ff 	mov.w	r0, #4294967295
 8003a3e:	4770      	bx	lr

08003a40 <EXC7200_GetMultiTouchState>:
 8003a40:	f04f 30ff 	mov.w	r0, #4294967295
 8003a44:	4770      	bx	lr

08003a46 <EXC7200_GetGesture>:
 8003a46:	f04f 30ff 	mov.w	r0, #4294967295
 8003a4a:	4770      	bx	lr

08003a4c <EXC7200_ITStatus>:
 8003a4c:	f04f 30ff 	mov.w	r0, #4294967295
 8003a50:	4770      	bx	lr

08003a52 <EXC7200_ClearIT>:
 8003a52:	f04f 30ff 	mov.w	r0, #4294967295
 8003a56:	4770      	bx	lr

08003a58 <EXC7200_GetState>:
{
 8003a58:	b530      	push	{r4, r5, lr}
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003a5a:	f100 0518 	add.w	r5, r0, #24
{
 8003a5e:	b085      	sub	sp, #20
 8003a60:	460c      	mov	r4, r1
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003a62:	230a      	movs	r3, #10
 8003a64:	aa01      	add	r2, sp, #4
 8003a66:	2109      	movs	r1, #9
 8003a68:	4628      	mov	r0, r5
 8003a6a:	f000 f843 	bl	8003af4 <exc7200_read_reg>
 8003a6e:	bb08      	cbnz	r0, 8003ab4 <EXC7200_GetState+0x5c>
    if(pData[1] == 0x83U)
 8003a70:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8003a74:	f1a3 0283 	sub.w	r2, r3, #131	; 0x83
 8003a78:	4253      	negs	r3, r2
 8003a7a:	4153      	adcs	r3, r2
  State->TouchDetected = (uint32_t)EXC7200_DetectTouch(pObj, data, (uint32_t)sizeof(data));
 8003a7c:	6023      	str	r3, [r4, #0]
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003a7e:	2109      	movs	r1, #9
  State->TouchX = (((data[3]&0x00ff) << 4) | ((data[2]&0x00f0) >> 4)) << 1;
 8003a80:	f89d 3006 	ldrb.w	r3, [sp, #6]
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003a84:	4628      	mov	r0, r5
  State->TouchX = (((data[3]&0x00ff) << 4) | ((data[2]&0x00f0) >> 4)) << 1;
 8003a86:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003a8a:	091b      	lsrs	r3, r3, #4
 8003a8c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
  State->TouchY = (((data[5]&0x00ff) << 4) | ((data[4]&0x00f0) >> 4)) << 1;
 8003a90:	f89d 2009 	ldrb.w	r2, [sp, #9]
  State->TouchX = (((data[3]&0x00ff) << 4) | ((data[2]&0x00f0) >> 4)) << 1;
 8003a94:	005b      	lsls	r3, r3, #1
 8003a96:	6063      	str	r3, [r4, #4]
  State->TouchY = (((data[5]&0x00ff) << 4) | ((data[4]&0x00f0) >> 4)) << 1;
 8003a98:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8003a9c:	091b      	lsrs	r3, r3, #4
 8003a9e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003aa2:	aa01      	add	r2, sp, #4
  State->TouchY = (((data[5]&0x00ff) << 4) | ((data[4]&0x00f0) >> 4)) << 1;
 8003aa4:	005b      	lsls	r3, r3, #1
 8003aa6:	60a3      	str	r3, [r4, #8]
  if(exc7200_read_reg(&pObj->Ctx, EXC7200_READ_REG, pData, Length) != EXC7200_OK)
 8003aa8:	230a      	movs	r3, #10
 8003aaa:	f000 f823 	bl	8003af4 <exc7200_read_reg>
}
 8003aae:	2000      	movs	r0, #0
 8003ab0:	b005      	add	sp, #20
 8003ab2:	bd30      	pop	{r4, r5, pc}
    ret = EXC7200_ERROR;
 8003ab4:	f04f 33ff 	mov.w	r3, #4294967295
 8003ab8:	e7e0      	b.n	8003a7c <EXC7200_GetState+0x24>
	...

08003abc <EXC7200_RegisterBusIO>:
  if (pObj == NULL)
 8003abc:	b190      	cbz	r0, 8003ae4 <EXC7200_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 8003abe:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 8003ac0:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 8003ac2:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 8003ac4:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 8003ac6:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 8003ac8:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 8003aca:	68ca      	ldr	r2, [r1, #12]
 8003acc:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 8003ace:	690a      	ldr	r2, [r1, #16]
 8003ad0:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 8003ad2:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 8003ad4:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 8003ad6:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 8003ad8:	4a04      	ldr	r2, [pc, #16]	; (8003aec <EXC7200_RegisterBusIO+0x30>)
 8003ada:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 8003adc:	4a04      	ldr	r2, [pc, #16]	; (8003af0 <EXC7200_RegisterBusIO+0x34>)
 8003ade:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 8003ae0:	b103      	cbz	r3, 8003ae4 <EXC7200_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 8003ae2:	4718      	bx	r3
}
 8003ae4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ae8:	4770      	bx	lr
 8003aea:	bf00      	nop
 8003aec:	080039b7 	.word	0x080039b7
 8003af0:	080039c5 	.word	0x080039c5

08003af4 <exc7200_read_reg>:
  * @param  pdata Pointer to data buffer
  * @param  length Number of data to read  
  * @retval Component status
  */
int32_t exc7200_read_reg(exc7200_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 8003af4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8003af6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 8003afa:	46a4      	mov	ip, r4
}
 8003afc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8003b00:	4760      	bx	ip
	...

08003b04 <IS42S32800G_ClockEnable>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800G_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface)
{
 8003b04:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800G_CLK_ENABLE_CMD;
 8003b06:	2201      	movs	r2, #1
 8003b08:	4b07      	ldr	r3, [pc, #28]	; (8003b28 <IS42S32800G_ClockEnable+0x24>)
  Command.CommandTarget          = Interface;
 8003b0a:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
 8003b0e:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8003b10:	2200      	movs	r2, #0

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003b12:	4619      	mov	r1, r3
  Command.ModeRegisterDefinition = 0;
 8003b14:	60da      	str	r2, [r3, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003b16:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003b1a:	f004 fad3 	bl	80080c4 <HAL_SDRAM_SendCommand>
 8003b1e:	3800      	subs	r0, #0
 8003b20:	bf18      	it	ne
 8003b22:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003b24:	4240      	negs	r0, r0
 8003b26:	bd08      	pop	{r3, pc}
 8003b28:	24004a58 	.word	0x24004a58

08003b2c <IS42S32800G_Precharge>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800G_Precharge(SDRAM_HandleTypeDef *Ctx, uint32_t Interface)
{
 8003b2c:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800G_PALL_CMD   ;
 8003b2e:	2202      	movs	r2, #2
 8003b30:	4b08      	ldr	r3, [pc, #32]	; (8003b54 <IS42S32800G_Precharge+0x28>)
  Command.CommandTarget          = Interface;
 8003b32:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
 8003b36:	2101      	movs	r1, #1
 8003b38:	2200      	movs	r2, #0
 8003b3a:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003b3e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003b42:	4619      	mov	r1, r3
 8003b44:	f004 fabe 	bl	80080c4 <HAL_SDRAM_SendCommand>
 8003b48:	3800      	subs	r0, #0
 8003b4a:	bf18      	it	ne
 8003b4c:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003b4e:	4240      	negs	r0, r0
 8003b50:	bd08      	pop	{r3, pc}
 8003b52:	bf00      	nop
 8003b54:	24004a58 	.word	0x24004a58

08003b58 <IS42S32800G_ModeRegConfig>:
int32_t IS42S32800G_ModeRegConfig(SDRAM_HandleTypeDef *Ctx, IS42S32800G_Context_t *pRegMode)
{
  uint32_t tmpmrd;

  /* Program the external memory mode register */
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8003b58:	e9d1 3203 	ldrd	r3, r2, [r1, #12]
{
 8003b5c:	b510      	push	{r4, lr}
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8003b5e:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
 8003b60:	694a      	ldr	r2, [r1, #20]
                     pRegMode->CASLatency    |\
                     pRegMode->OperationMode |\
                     pRegMode->WriteBurstMode;

  Command.CommandMode            = IS42S32800G_LOAD_MODE_CMD;
 8003b62:	4c0b      	ldr	r4, [pc, #44]	; (8003b90 <IS42S32800G_ModeRegConfig+0x38>)
                     pRegMode->BurstType     |\
 8003b64:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
 8003b66:	698a      	ldr	r2, [r1, #24]
 8003b68:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8003b6a:	69ca      	ldr	r2, [r1, #28]
 8003b6c:	4313      	orrs	r3, r2
  Command.CommandMode            = IS42S32800G_LOAD_MODE_CMD;
 8003b6e:	2204      	movs	r2, #4
 8003b70:	6022      	str	r2, [r4, #0]
  Command.CommandTarget          = pRegMode->TargetBank;
 8003b72:	680a      	ldr	r2, [r1, #0]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003b74:	4621      	mov	r1, r4
  Command.CommandTarget          = pRegMode->TargetBank;
 8003b76:	6062      	str	r2, [r4, #4]
  Command.AutoRefreshNumber      = 1;
 8003b78:	2201      	movs	r2, #1
  Command.ModeRegisterDefinition = tmpmrd;
 8003b7a:	e9c4 2302 	strd	r2, r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003b7e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003b82:	f004 fa9f 	bl	80080c4 <HAL_SDRAM_SendCommand>
 8003b86:	3800      	subs	r0, #0
 8003b88:	bf18      	it	ne
 8003b8a:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003b8c:	4240      	negs	r0, r0
 8003b8e:	bd10      	pop	{r4, pc}
 8003b90:	24004a58 	.word	0x24004a58

08003b94 <IS42S32800G_RefreshMode>:
  * @param  RefreshMode Could be IS42S32800G_CMD_AUTOREFRESH_MODE or
  *                      IS42S32800G_CMD_SELFREFRESH_MODE
  * @retval error status
  */
int32_t IS42S32800G_RefreshMode(SDRAM_HandleTypeDef *Ctx, uint32_t Interface, uint32_t RefreshMode)
{
 8003b94:	b508      	push	{r3, lr}
  Command.CommandMode            = RefreshMode;
 8003b96:	4b08      	ldr	r3, [pc, #32]	; (8003bb8 <IS42S32800G_RefreshMode+0x24>)
  Command.CommandTarget          = Interface;
 8003b98:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;
 8003b9c:	2108      	movs	r1, #8
 8003b9e:	2200      	movs	r2, #0
 8003ba0:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800G_TIMEOUT) != HAL_OK)
 8003ba4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003ba8:	4619      	mov	r1, r3
 8003baa:	f004 fa8b 	bl	80080c4 <HAL_SDRAM_SendCommand>
 8003bae:	3800      	subs	r0, #0
 8003bb0:	bf18      	it	ne
 8003bb2:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003bb4:	4240      	negs	r0, r0
 8003bb6:	bd08      	pop	{r3, pc}
 8003bb8:	24004a58 	.word	0x24004a58

08003bbc <IS42S32800G_RefreshRate>:
  * @param  Ctx Component object pointer
  * @param  RefreshCount The refresh rate to be programmed
  * @retval error status
  */
int32_t IS42S32800G_RefreshRate(SDRAM_HandleTypeDef *Ctx, uint32_t RefreshCount)
{
 8003bbc:	b508      	push	{r3, lr}
  /* Set the device refresh rate */
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
 8003bbe:	f004 faa0 	bl	8008102 <HAL_SDRAM_ProgramRefreshRate>
 8003bc2:	3800      	subs	r0, #0
 8003bc4:	bf18      	it	ne
 8003bc6:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800G_OK;
  }
}
 8003bc8:	4240      	negs	r0, r0
 8003bca:	bd08      	pop	{r3, pc}

08003bcc <IS42S32800G_Init>:
{
 8003bcc:	b570      	push	{r4, r5, r6, lr}
 8003bce:	460c      	mov	r4, r1
  if(IS42S32800G_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800G_OK)
 8003bd0:	6809      	ldr	r1, [r1, #0]
{
 8003bd2:	4605      	mov	r5, r0
  if(IS42S32800G_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800G_OK)
 8003bd4:	f7ff ff96 	bl	8003b04 <IS42S32800G_ClockEnable>
 8003bd8:	b110      	cbz	r0, 8003be0 <IS42S32800G_Init+0x14>
  int32_t ret = IS42S32800G_ERROR;
 8003bda:	f04f 30ff 	mov.w	r0, #4294967295
}
 8003bde:	bd70      	pop	{r4, r5, r6, pc}
  * @retval IS42S32800G_OK
  */
static int32_t IS42S32800G_Delay(uint32_t Delay)
{
  uint32_t tickstart;
  tickstart = HAL_GetTick();
 8003be0:	f001 fa98 	bl	8005114 <HAL_GetTick>
 8003be4:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
 8003be6:	f001 fa95 	bl	8005114 <HAL_GetTick>
 8003bea:	4286      	cmp	r6, r0
 8003bec:	d0fb      	beq.n	8003be6 <IS42S32800G_Init+0x1a>
    if(IS42S32800G_Precharge(Ctx, pRegMode->TargetBank) == IS42S32800G_OK)
 8003bee:	6821      	ldr	r1, [r4, #0]
 8003bf0:	4628      	mov	r0, r5
 8003bf2:	f7ff ff9b 	bl	8003b2c <IS42S32800G_Precharge>
 8003bf6:	2800      	cmp	r0, #0
 8003bf8:	d1ef      	bne.n	8003bda <IS42S32800G_Init+0xe>
      if(IS42S32800G_RefreshMode(Ctx, pRegMode->TargetBank, pRegMode->RefreshMode) == IS42S32800G_OK)
 8003bfa:	4628      	mov	r0, r5
 8003bfc:	e9d4 1200 	ldrd	r1, r2, [r4]
 8003c00:	f7ff ffc8 	bl	8003b94 <IS42S32800G_RefreshMode>
 8003c04:	2800      	cmp	r0, #0
 8003c06:	d1e8      	bne.n	8003bda <IS42S32800G_Init+0xe>
        if(IS42S32800G_ModeRegConfig(Ctx, pRegMode) == IS42S32800G_OK)
 8003c08:	4621      	mov	r1, r4
 8003c0a:	4628      	mov	r0, r5
 8003c0c:	f7ff ffa4 	bl	8003b58 <IS42S32800G_ModeRegConfig>
 8003c10:	2800      	cmp	r0, #0
 8003c12:	d1e2      	bne.n	8003bda <IS42S32800G_Init+0xe>
          if(IS42S32800G_RefreshRate(Ctx, pRegMode->RefreshRate) == IS42S32800G_OK)
 8003c14:	68a1      	ldr	r1, [r4, #8]
 8003c16:	4628      	mov	r0, r5
 8003c18:	f7ff ffd0 	bl	8003bbc <IS42S32800G_RefreshRate>
 8003c1c:	3800      	subs	r0, #0
 8003c1e:	bf18      	it	ne
 8003c20:	2001      	movne	r0, #1
 8003c22:	4240      	negs	r0, r0
  return ret;
 8003c24:	e7db      	b.n	8003bde <IS42S32800G_Init+0x12>

08003c26 <MT25TL01G_GetFlashInfo>:
  * @retval QSPI memory status
  */
int32_t MT25TL01G_GetFlashInfo(MT25TL01G_Info_t *pInfo)
{
  pInfo->FlashSize          = MT25TL01G_FLASH_SIZE;
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 8003c26:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003c2a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  pInfo->ProgPageSize       = MT25TL01G_PAGE_SIZE;
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 8003c2e:	f44f 7180 	mov.w	r1, #256	; 0x100
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 8003c32:	e9c0 2300 	strd	r2, r3, [r0]
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 8003c36:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003c3a:	e9c0 3102 	strd	r3, r1, [r0, #8]
  pInfo->ProgPagesNumber    = (MT25TL01G_FLASH_SIZE/pInfo->ProgPageSize);
 8003c3e:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8003c42:	6103      	str	r3, [r0, #16]
  return MT25TL01G_OK;
}
 8003c44:	2000      	movs	r0, #0
 8003c46:	4770      	bx	lr

08003c48 <MT25TL01G_AutoPollingMemReady>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_AutoPollingMemReady(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8003c48:	b500      	push	{lr}

  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003c4a:	f44f 7340 	mov.w	r3, #768	; 0x300
{
 8003c4e:	b095      	sub	sp, #84	; 0x54
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003c50:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003c54:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 8003c56:	2305      	movs	r3, #5
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003c58:	920f      	str	r2, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 2;
 8003c5a:	2202      	movs	r2, #2
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 8003c5c:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003c5e:	2300      	movs	r3, #0
  s_command.DummyCycles       = 2;
 8003c60:	920b      	str	r2, [sp, #44]	; 0x2c
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
  s_config.StatusBytesSize = 2;

  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c62:	a906      	add	r1, sp, #24
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003c64:	9313      	str	r3, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003c66:	9300      	str	r3, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003c68:	9304      	str	r3, [sp, #16]
  s_config.StatusBytesSize = 2;
 8003c6a:	9203      	str	r2, [sp, #12]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c6c:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003c6e:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003c72:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_config.Interval        = 0x10;
 8003c76:	2310      	movs	r3, #16
 8003c78:	9302      	str	r3, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003c7a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003c7e:	9305      	str	r3, [sp, #20]
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
 8003c80:	f240 1301 	movw	r3, #257	; 0x101
 8003c84:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003c86:	f241 3388 	movw	r3, #5000	; 0x1388
 8003c8a:	f002 fe35 	bl	80068f8 <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 8003c8e:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;

}
 8003c90:	bf14      	ite	ne
 8003c92:	f06f 0004 	mvnne.w	r0, #4
 8003c96:	2000      	moveq	r0, #0
 8003c98:	b015      	add	sp, #84	; 0x54
 8003c9a:	f85d fb04 	ldr.w	pc, [sp], #4

08003c9e <MT25TL01G_WriteEnable>:
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Enable write operations */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003c9e:	2903      	cmp	r1, #3
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ca0:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8003ca4:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003ca6:	bf08      	it	eq
 8003ca8:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8003cac:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003cae:	bf18      	it	ne
 8003cb0:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 8003cb4:	460c      	mov	r4, r1
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003cb6:	a906      	add	r1, sp, #24
{
 8003cb8:	4605      	mov	r5, r0
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003cba:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_WRITE_ENABLE_CMD;
 8003cbc:	2306      	movs	r3, #6
 8003cbe:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003cc0:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003cc2:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 8003cc6:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003cc8:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003cca:	9313      	str	r3, [sp, #76]	; 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003ccc:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003cd0:	f002 fd17 	bl	8006702 <HAL_QSPI_Command>
 8003cd4:	bb20      	cbnz	r0, 8003d20 <MT25TL01G_WriteEnable+0x82>
  {
    return MT25TL01G_ERROR_COMMAND;
  }

  /* Configure automatic polling mode to wait for write enabling */
  s_config.Match           = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 8003cd6:	f240 2302 	movw	r3, #514	; 0x202
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 2;
  s_config.Interval        = 0x10;
 8003cda:	2202      	movs	r2, #2
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 8003cdc:	2c03      	cmp	r4, #3
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 8003cde:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003ce2:	9004      	str	r0, [sp, #16]


  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ce4:	4628      	mov	r0, r5
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 8003ce6:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003cea:	f04f 0310 	mov.w	r3, #16
 8003cee:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 8003cf2:	f04f 0305 	mov.w	r3, #5
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003cf6:	466a      	mov	r2, sp
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 8003cf8:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 8003cfc:	bf0c      	ite	eq
 8003cfe:	f04f 7340 	moveq.w	r3, #50331648	; 0x3000000
 8003d02:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d06:	a906      	add	r1, sp, #24
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 8003d08:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d0a:	f241 3388 	movw	r3, #5000	; 0x1388
 8003d0e:	f002 fdf3 	bl	80068f8 <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 8003d12:	2800      	cmp	r0, #0
 8003d14:	bf0c      	ite	eq
 8003d16:	2000      	moveq	r0, #0
 8003d18:	f06f 0004 	mvnne.w	r0, #4
  }

  return MT25TL01G_OK;
}
 8003d1c:	b015      	add	sp, #84	; 0x54
 8003d1e:	bd30      	pop	{r4, r5, pc}
    return MT25TL01G_ERROR_COMMAND;
 8003d20:	f06f 0001 	mvn.w	r0, #1
 8003d24:	e7fa      	b.n	8003d1c <MT25TL01G_WriteEnable+0x7e>

08003d26 <MT25TL01G_Enter4BytesAddressMode>:
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003d26:	2903      	cmp	r1, #3
{
 8003d28:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003d2a:	bf08      	it	eq
 8003d2c:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8003d30:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003d32:	bf18      	it	ne
 8003d34:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 8003d38:	4604      	mov	r4, r0
 8003d3a:	460d      	mov	r5, r1
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003d3c:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_4_BYTE_ADDR_MODE_CMD;
 8003d3e:	23b7      	movs	r3, #183	; 0xb7
 8003d40:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003d42:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003d44:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003d48:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003d4a:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003d4c:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003d4e:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if( MT25TL01G_WriteEnable(Ctx,Mode)!=MT25TL01G_OK)
 8003d52:	f7ff ffa4 	bl	8003c9e <MT25TL01G_WriteEnable>
 8003d56:	b958      	cbnz	r0, 8003d70 <MT25TL01G_Enter4BytesAddressMode+0x4a>
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003d58:	f241 3288 	movw	r2, #5000	; 0x1388
 8003d5c:	4669      	mov	r1, sp
 8003d5e:	4620      	mov	r0, r4
 8003d60:	f002 fccf 	bl	8006702 <HAL_QSPI_Command>
 8003d64:	b920      	cbnz	r0, 8003d70 <MT25TL01G_Enter4BytesAddressMode+0x4a>
  else if(MT25TL01G_AutoPollingMemReady(Ctx,Mode)!=MT25TL01G_OK)
 8003d66:	4629      	mov	r1, r5
 8003d68:	4620      	mov	r0, r4
 8003d6a:	f7ff ff6d 	bl	8003c48 <MT25TL01G_AutoPollingMemReady>
 8003d6e:	b108      	cbz	r0, 8003d74 <MT25TL01G_Enter4BytesAddressMode+0x4e>
    return MT25TL01G_ERROR_COMMAND;
 8003d70:	f06f 0001 	mvn.w	r0, #1
}
 8003d74:	b00f      	add	sp, #60	; 0x3c
 8003d76:	bd30      	pop	{r4, r5, pc}

08003d78 <MT25TL01G_ReadSTR>:
  * @param  Size Size of data to read
  * @retval QSPI memory status
  */

int32_t MT25TL01G_ReadSTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode, uint8_t *pData, uint32_t ReadAddr, uint32_t Size)
{
 8003d78:	b530      	push	{r4, r5, lr}
 8003d7a:	4604      	mov	r4, r0
 8003d7c:	b08f      	sub	sp, #60	; 0x3c
 8003d7e:	4615      	mov	r5, r2
  QSPI_CommandTypeDef s_command;
  switch(Mode)
 8003d80:	2903      	cmp	r1, #3
 8003d82:	d80e      	bhi.n	8003da2 <MT25TL01G_ReadSTR+0x2a>
 8003d84:	e8df f001 	tbb	[pc, r1]
 8003d88:	44392e02 	.word	0x44392e02
  {
  case MT25TL01G_SPI_MODE:           /* 1-1-1 read commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d8c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003d90:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_ADDR_CMD;
 8003d92:	220c      	movs	r2, #12
 8003d94:	9200      	str	r2, [sp, #0]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003d96:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003d9a:	9207      	str	r2, [sp, #28]
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8003d9c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
    break;
  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003da0:	9209      	str	r2, [sp, #36]	; 0x24

    break;
  }
  /* Initialize the read command */
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003da2:	2208      	movs	r2, #8
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
  s_command.Address           = ReadAddr;
 8003da4:	9301      	str	r3, [sp, #4]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003da6:	2300      	movs	r3, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Configure the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003da8:	4669      	mov	r1, sp
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003daa:	9205      	str	r2, [sp, #20]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003dac:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003db0:	4620      	mov	r0, r4
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003db2:	9308      	str	r3, [sp, #32]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003db4:	9203      	str	r2, [sp, #12]
  s_command.NbData            = Size;
 8003db6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003db8:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dbc:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003dc0:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dc4:	f002 fc9d 	bl	8006702 <HAL_QSPI_Command>
 8003dc8:	bb38      	cbnz	r0, 8003e1a <MT25TL01G_ReadSTR+0xa2>
  {
    return MT25TL01G_ERROR_COMMAND;
  }

  /* Reception of the data */
  if (HAL_QSPI_Receive(Ctx, pData, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dca:	f241 3288 	movw	r2, #5000	; 0x1388
 8003dce:	4629      	mov	r1, r5
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	f002 fd32 	bl	800683a <HAL_QSPI_Receive>
  {
    return MT25TL01G_ERROR_RECEIVE;
 8003dd6:	2800      	cmp	r0, #0
 8003dd8:	bf0c      	ite	eq
 8003dda:	2000      	moveq	r0, #0
 8003ddc:	f06f 0003 	mvnne.w	r0, #3
  }


  return MT25TL01G_OK;

}
 8003de0:	b00f      	add	sp, #60	; 0x3c
 8003de2:	bd30      	pop	{r4, r5, pc}
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003de4:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003de8:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_DUAL_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003dea:	22bc      	movs	r2, #188	; 0xbc
 8003dec:	9200      	str	r2, [sp, #0]
    s_command.AddressMode       = QSPI_ADDRESS_2_LINES;
 8003dee:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003df2:	9207      	str	r2, [sp, #28]
    s_command.DataMode          = QSPI_DATA_2_LINES;
 8003df4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8003df8:	e7d2      	b.n	8003da0 <MT25TL01G_ReadSTR+0x28>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003dfa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003dfe:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003e00:	22ec      	movs	r2, #236	; 0xec
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003e02:	9200      	str	r2, [sp, #0]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003e04:	f44f 6240 	mov.w	r2, #3072	; 0xc00
 8003e08:	9207      	str	r2, [sp, #28]
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003e0a:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8003e0e:	e7c7      	b.n	8003da0 <MT25TL01G_ReadSTR+0x28>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003e10:	f44f 7240 	mov.w	r2, #768	; 0x300
 8003e14:	9206      	str	r2, [sp, #24]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003e16:	22eb      	movs	r2, #235	; 0xeb
 8003e18:	e7f3      	b.n	8003e02 <MT25TL01G_ReadSTR+0x8a>
    return MT25TL01G_ERROR_COMMAND;
 8003e1a:	f06f 0001 	mvn.w	r0, #1
 8003e1e:	e7df      	b.n	8003de0 <MT25TL01G_ReadSTR+0x68>

08003e20 <MT25TL01G_EnterQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnterQPIMode(QSPI_HandleTypeDef *Ctx)
{
 8003e20:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e22:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 8003e26:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e28:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e2c:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 8003e2e:	2335      	movs	r3, #53	; 0x35
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e30:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 8003e32:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003e34:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003e36:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003e3a:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003e3c:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003e3e:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003e40:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e44:	f002 fc5d 	bl	8006702 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8003e48:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003e4a:	bf14      	ite	ne
 8003e4c:	f06f 0001 	mvnne.w	r0, #1
 8003e50:	2000      	moveq	r0, #0
 8003e52:	b00f      	add	sp, #60	; 0x3c
 8003e54:	f85d fb04 	ldr.w	pc, [sp], #4

08003e58 <MT25TL01G_ExitQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_ExitQPIMode(QSPI_HandleTypeDef *Ctx)
{
 8003e58:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e5a:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 8003e5e:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e60:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e64:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 8003e66:	23f5      	movs	r3, #245	; 0xf5
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e68:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 8003e6a:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003e6c:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003e6e:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003e72:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003e74:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003e76:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003e78:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003e7c:	f002 fc41 	bl	8006702 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8003e80:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003e82:	bf14      	ite	ne
 8003e84:	f06f 0001 	mvnne.w	r0, #1
 8003e88:	2000      	moveq	r0, #0
 8003e8a:	b00f      	add	sp, #60	; 0x3c
 8003e8c:	f85d fb04 	ldr.w	pc, [sp], #4

08003e90 <MT25TL01G_EnableMemoryMappedModeDTR>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnableMemoryMappedModeDTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8003e90:	b500      	push	{lr}
 8003e92:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 8003e94:	2903      	cmp	r1, #3
 8003e96:	d80e      	bhi.n	8003eb6 <MT25TL01G_EnableMemoryMappedModeDTR+0x26>
 8003e98:	e8df f001 	tbb	[pc, r1]
 8003e9c:	3f342902 	.word	0x3f342902
  {
  case MT25TL01G_SPI_MODE:                /* 1-1-1 commands, Power on H/W default setting */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003ea0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003ea4:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_DTR_CMD;
 8003ea6:	230e      	movs	r3, #14
 8003ea8:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003eaa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003eae:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8003eb0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    break;
  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003eb4:	930b      	str	r3, [sp, #44]	; 0x2c
    break;
  }
  /* Configure the command for the read instruction */
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 8003eb6:	2208      	movs	r2, #8
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003eb8:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  s_command.DdrMode           = QSPI_DDR_MODE_ENABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 8003ebc:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003ec0:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 8003ec2:	9207      	str	r2, [sp, #28]
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 8003ec4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003ec8:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003eca:	2300      	movs	r3, #0
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 8003ecc:	e9cd c20d 	strd	ip, r2, [sp, #52]	; 0x34
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003ed0:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003ed2:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003ed4:	930f      	str	r3, [sp, #60]	; 0x3c
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 8003ed6:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003eda:	f002 fd5d 	bl	8006998 <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 8003ede:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003ee0:	bf14      	ite	ne
 8003ee2:	f06f 0005 	mvnne.w	r0, #5
 8003ee6:	2000      	moveq	r0, #0
 8003ee8:	b011      	add	sp, #68	; 0x44
 8003eea:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003eee:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003ef2:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_OUT_FAST_READ_DTR_CMD;
 8003ef4:	233d      	movs	r3, #61	; 0x3d
 8003ef6:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003ef8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003efc:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 8003efe:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003f02:	e7d7      	b.n	8003eb4 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003f04:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003f08:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_DTR_CMD;
 8003f0a:	23ee      	movs	r3, #238	; 0xee
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 8003f0c:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003f0e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003f12:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003f14:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8003f18:	e7cc      	b.n	8003eb4 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003f1a:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003f1e:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 8003f20:	23ed      	movs	r3, #237	; 0xed
 8003f22:	e7f3      	b.n	8003f0c <MT25TL01G_EnableMemoryMappedModeDTR+0x7c>

08003f24 <MT25TL01G_EnableMemoryMappedModeSTR>:
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */

int32_t MT25TL01G_EnableMemoryMappedModeSTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8003f24:	b500      	push	{lr}
 8003f26:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 8003f28:	2903      	cmp	r1, #3
 8003f2a:	d80e      	bhi.n	8003f4a <MT25TL01G_EnableMemoryMappedModeSTR+0x26>
 8003f2c:	e8df f001 	tbb	[pc, r1]
 8003f30:	3b302502 	.word	0x3b302502
  {
  case MT25TL01G_SPI_MODE:           /* 1-1-1 read commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003f34:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003f38:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_ADDR_CMD;
 8003f3a:	230c      	movs	r3, #12
 8003f3c:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8003f3e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003f42:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8003f44:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000

  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003f48:	930b      	str	r3, [sp, #44]	; 0x2c

    break;

  }
  /* Configure the command for the read instruction */
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003f4a:	2308      	movs	r3, #8

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003f4c:	466a      	mov	r2, sp
 8003f4e:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8003f50:	9307      	str	r3, [sp, #28]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8003f52:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003f56:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003f58:	2300      	movs	r3, #0
 8003f5a:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003f5c:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003f5e:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 8003f62:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003f66:	f002 fd17 	bl	8006998 <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 8003f6a:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003f6c:	bf14      	ite	ne
 8003f6e:	f06f 0005 	mvnne.w	r0, #5
 8003f72:	2000      	moveq	r0, #0
 8003f74:	b011      	add	sp, #68	; 0x44
 8003f76:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003f7a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003f7e:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003f80:	23bc      	movs	r3, #188	; 0xbc
 8003f82:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_2_LINES;
 8003f84:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8003f88:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 8003f8a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003f8e:	e7db      	b.n	8003f48 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003f90:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003f94:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 8003f96:	23ec      	movs	r3, #236	; 0xec
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003f98:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003f9a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003f9e:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8003fa0:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8003fa4:	e7d0      	b.n	8003f48 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8003fa6:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003faa:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 8003fac:	23eb      	movs	r3, #235	; 0xeb
 8003fae:	e7f3      	b.n	8003f98 <MT25TL01G_EnableMemoryMappedModeSTR+0x74>

08003fb0 <MT25TL01G_ResetEnable>:
int32_t MT25TL01G_ResetEnable(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003fb0:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fb2:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8003fb6:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003fb8:	bf08      	it	eq
 8003fba:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8003fbe:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003fc0:	bf18      	it	ne
 8003fc2:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fc6:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003fc8:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_ENABLE_CMD;
 8003fca:	2366      	movs	r3, #102	; 0x66
 8003fcc:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003fce:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003fd0:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8003fd4:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8003fd6:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003fd8:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003fda:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fde:	f002 fb90 	bl	8006702 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8003fe2:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8003fe4:	bf14      	ite	ne
 8003fe6:	f06f 0001 	mvnne.w	r0, #1
 8003fea:	2000      	moveq	r0, #0
 8003fec:	b00f      	add	sp, #60	; 0x3c
 8003fee:	f85d fb04 	ldr.w	pc, [sp], #4

08003ff2 <MT25TL01G_ResetMemory>:
int32_t MT25TL01G_ResetMemory(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003ff2:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003ff4:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8003ff8:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8003ffa:	bf08      	it	eq
 8003ffc:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8004000:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004002:	bf18      	it	ne
 8004004:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004008:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800400a:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_MEMORY_CMD ;
 800400c:	2399      	movs	r3, #153	; 0x99
 800400e:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004010:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004012:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8004016:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8004018:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800401a:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800401c:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004020:	f002 fb6f 	bl	8006702 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8004024:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004026:	bf14      	ite	ne
 8004028:	f06f 0001 	mvnne.w	r0, #1
 800402c:	2000      	moveq	r0, #0
 800402e:	b00f      	add	sp, #60	; 0x3c
 8004030:	f85d fb04 	ldr.w	pc, [sp], #4

08004034 <TS3510_GetCapabilities>:
  (void)(pObj);
  
  /* Store component's capabilities */
  Capabilities->MultiTouch = 0;
  Capabilities->Gesture    = 0;
  Capabilities->MaxTouch   = TS3510_MAX_NB_TOUCH;
 8004034:	2301      	movs	r3, #1
  Capabilities->MultiTouch = 0;
 8004036:	2000      	movs	r0, #0
  Capabilities->MaxTouch   = TS3510_MAX_NB_TOUCH;
 8004038:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxXl      = TS3510_MAX_X_LENGTH;
 800403a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  Capabilities->MultiTouch = 0;
 800403e:	8008      	strh	r0, [r1, #0]
  Capabilities->MaxYl      = TS3510_MAX_Y_LENGTH;
 8004040:	e9c1 3301 	strd	r3, r3, [r1, #4]
  
  return TS3510_OK;
}
 8004044:	4770      	bx	lr

08004046 <TS3510_GestureConfig>:
  */
int32_t TS3510_GestureConfig(TS3510_Object_t *pObj, TS3510_Gesture_Init_t *GestureInit)
{
  /* Feature not supported */
  return TS3510_ERROR;  
}
 8004046:	f04f 30ff 	mov.w	r0, #4294967295
 800404a:	4770      	bx	lr

0800404c <TS3510_EnableIT>:
  */
int32_t TS3510_EnableIT(TS3510_Object_t *pObj)
{
  /* Feature not supported */
  return TS3510_ERROR;
}
 800404c:	f04f 30ff 	mov.w	r0, #4294967295
 8004050:	4770      	bx	lr

08004052 <ReadRegWrap>:
  * @param  pData The target register value to be read
  * @param  Length buffer size to be read
  * @retval Component status.
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8004052:	b410      	push	{r4}
  TS3510_Object_t *pObj = (TS3510_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8004054:	6904      	ldr	r4, [r0, #16]
 8004056:	8900      	ldrh	r0, [r0, #8]
 8004058:	46a4      	mov	ip, r4
}
 800405a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 800405e:	4760      	bx	ip

08004060 <WriteRegWrap>:
  * @param  pData The target register value to be written
  * @param  Length buffer size to be written
  * @retval Component status.
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8004060:	b410      	push	{r4}
  TS3510_Object_t *pObj = (TS3510_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8004062:	68c4      	ldr	r4, [r0, #12]
 8004064:	8900      	ldrh	r0, [r0, #8]
 8004066:	46a4      	mov	ip, r4
}
 8004068:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 800406c:	4760      	bx	ip

0800406e <TS3510_ReadID>:
{
 800406e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 8004070:	f640 0381 	movw	r3, #2177	; 0x881
  if(ts3510_write_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, aTmpBuffer, 2) != TS3510_OK)
 8004074:	f100 0418 	add.w	r4, r0, #24
{
 8004078:	460d      	mov	r5, r1
  if(ts3510_write_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, aTmpBuffer, 2) != TS3510_OK)
 800407a:	aa01      	add	r2, sp, #4
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 800407c:	f8ad 3004 	strh.w	r3, [sp, #4]
  if(ts3510_write_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, aTmpBuffer, 2) != TS3510_OK)
 8004080:	218a      	movs	r1, #138	; 0x8a
 8004082:	2302      	movs	r3, #2
 8004084:	4620      	mov	r0, r4
 8004086:	f000 f8be 	bl	8004206 <ts3510_write_reg>
 800408a:	b118      	cbz	r0, 8004094 <TS3510_ReadID+0x26>
    ret = TS3510_ERROR;
 800408c:	f04f 30ff 	mov.w	r0, #4294967295
}
 8004090:	b003      	add	sp, #12
 8004092:	bd30      	pop	{r4, r5, pc}
  else if(ts3510_read_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, &data, 1) != TS3510_OK)
 8004094:	2301      	movs	r3, #1
 8004096:	f10d 0203 	add.w	r2, sp, #3
 800409a:	218a      	movs	r1, #138	; 0x8a
 800409c:	4620      	mov	r0, r4
 800409e:	f000 f8ab 	bl	80041f8 <ts3510_read_reg>
 80040a2:	2800      	cmp	r0, #0
 80040a4:	d1f2      	bne.n	800408c <TS3510_ReadID+0x1e>
    *Id = TS3510_ID;
 80040a6:	f243 5310 	movw	r3, #13584	; 0x3510
 80040aa:	602b      	str	r3, [r5, #0]
  return ret;     
 80040ac:	e7f0      	b.n	8004090 <TS3510_ReadID+0x22>

080040ae <TS3510_GetState>:
{
 80040ae:	b530      	push	{r4, r5, lr}
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 80040b0:	f640 0381 	movw	r3, #2177	; 0x881
{
 80040b4:	b087      	sub	sp, #28
  if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 80040b6:	f100 0518 	add.w	r5, r0, #24
{
 80040ba:	460c      	mov	r4, r1
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 80040bc:	f8ad 3004 	strh.w	r3, [sp, #4]
  if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 80040c0:	aa02      	add	r2, sp, #8
  uint8_t aTmpBuffer[2] = {TS3510_READ_CMD, TS3510_WRITE_CMD};
 80040c2:	f8ad 3008 	strh.w	r3, [sp, #8]
  if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 80040c6:	2100      	movs	r1, #0
 80040c8:	2302      	movs	r3, #2
 80040ca:	4628      	mov	r0, r5
 80040cc:	f000 f89b 	bl	8004206 <ts3510_write_reg>
 80040d0:	b178      	cbz	r0, 80040f2 <TS3510_GetState+0x44>
    ret = TS3510_ERROR;
 80040d2:	f04f 33ff 	mov.w	r3, #4294967295
  if(State->TouchDetected == 1U)
 80040d6:	2b01      	cmp	r3, #1
  State->TouchDetected = (uint32_t)TS3510_DetectTouch(pObj);
 80040d8:	6023      	str	r3, [r4, #0]
  if(State->TouchDetected == 1U)
 80040da:	d13e      	bne.n	800415a <TS3510_GetState+0xac>
    if(ts3510_write_reg(&pObj->Ctx, TS3510_SEND_CMD_REG, aTmpBuffer, 2) != TS3510_OK)
 80040dc:	2302      	movs	r3, #2
 80040de:	aa01      	add	r2, sp, #4
 80040e0:	2100      	movs	r1, #0
 80040e2:	4628      	mov	r0, r5
 80040e4:	f000 f88f 	bl	8004206 <ts3510_write_reg>
 80040e8:	b1d0      	cbz	r0, 8004120 <TS3510_GetState+0x72>
      ret = TS3510_ERROR;
 80040ea:	f04f 30ff 	mov.w	r0, #4294967295
}
 80040ee:	b007      	add	sp, #28
 80040f0:	bd30      	pop	{r4, r5, pc}
  else if(ts3510_read_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, pData, 11) != TS3510_OK)
 80040f2:	230b      	movs	r3, #11
 80040f4:	aa03      	add	r2, sp, #12
 80040f6:	218a      	movs	r1, #138	; 0x8a
 80040f8:	4628      	mov	r0, r5
 80040fa:	f000 f87d 	bl	80041f8 <ts3510_read_reg>
 80040fe:	2800      	cmp	r0, #0
 8004100:	d1e7      	bne.n	80040d2 <TS3510_GetState+0x24>
    if((pData[1] == 0xFF) && (pData[2] == 0xFF) && (pData[3] == 0xFF) && (pData[4] == 0xFF))
 8004102:	f89d 200e 	ldrb.w	r2, [sp, #14]
 8004106:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800410a:	4013      	ands	r3, r2
 800410c:	f89d 200f 	ldrb.w	r2, [sp, #15]
 8004110:	4013      	ands	r3, r2
 8004112:	f89d 2010 	ldrb.w	r2, [sp, #16]
 8004116:	4013      	ands	r3, r2
 8004118:	3bff      	subs	r3, #255	; 0xff
 800411a:	bf18      	it	ne
 800411c:	2301      	movne	r3, #1
 800411e:	e7da      	b.n	80040d6 <TS3510_GetState+0x28>
    else if(ts3510_read_reg(&pObj->Ctx, TS3510_READ_BLOCK_REG, pData, 11) != TS3510_OK)
 8004120:	230b      	movs	r3, #11
 8004122:	aa03      	add	r2, sp, #12
 8004124:	218a      	movs	r1, #138	; 0x8a
 8004126:	4628      	mov	r0, r5
 8004128:	f000 f866 	bl	80041f8 <ts3510_read_reg>
 800412c:	2800      	cmp	r0, #0
 800412e:	d1dc      	bne.n	80040ea <TS3510_GetState+0x3c>
      State->TouchX = (((pData[1] << 8) | pData[2]) << 12) / 640;
 8004130:	f8bd 300d 	ldrh.w	r3, [sp, #13]
 8004134:	f44f 7220 	mov.w	r2, #640	; 0x280
 8004138:	ba5b      	rev16	r3, r3
 800413a:	b29b      	uxth	r3, r3
 800413c:	031b      	lsls	r3, r3, #12
 800413e:	fbb3 f3f2 	udiv	r3, r3, r2
 8004142:	6063      	str	r3, [r4, #4]
      State->TouchY = (((pData[3] << 8) | pData[4]) << 12) / 480;
 8004144:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8004148:	f8bd 300f 	ldrh.w	r3, [sp, #15]
 800414c:	ba5b      	rev16	r3, r3
 800414e:	b29b      	uxth	r3, r3
 8004150:	031b      	lsls	r3, r3, #12
 8004152:	fbb3 f3f2 	udiv	r3, r3, r2
 8004156:	60a3      	str	r3, [r4, #8]
 8004158:	e7c9      	b.n	80040ee <TS3510_GetState+0x40>
  int32_t ret = TS3510_OK;
 800415a:	2000      	movs	r0, #0
  return ret;
 800415c:	e7c7      	b.n	80040ee <TS3510_GetState+0x40>

0800415e <TS3510_Init>:
{
 800415e:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 8004160:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8004164:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 8004166:	b933      	cbnz	r3, 8004176 <TS3510_Init+0x18>
    if(pObj->IO.Init() != TS3510_OK)
 8004168:	6803      	ldr	r3, [r0, #0]
 800416a:	4798      	blx	r3
 800416c:	b928      	cbnz	r0, 800417a <TS3510_Init+0x1c>
      pObj->IsInitialized = 1;
 800416e:	2301      	movs	r3, #1
 8004170:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
}
 8004174:	bd10      	pop	{r4, pc}
  int32_t ret = TS3510_OK;
 8004176:	2000      	movs	r0, #0
 8004178:	e7fc      	b.n	8004174 <TS3510_Init+0x16>
      ret = TS3510_ERROR;
 800417a:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 800417e:	e7f9      	b.n	8004174 <TS3510_Init+0x16>

08004180 <TS3510_DeInit>:
{
 8004180:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 1U)
 8004182:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8004186:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 1U)
 8004188:	2b01      	cmp	r3, #1
 800418a:	d105      	bne.n	8004198 <TS3510_DeInit+0x18>
    if(pObj->IO.DeInit() != TS3510_OK)
 800418c:	6843      	ldr	r3, [r0, #4]
 800418e:	4798      	blx	r3
 8004190:	b920      	cbnz	r0, 800419c <TS3510_DeInit+0x1c>
      pObj->IsInitialized = 0;
 8004192:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
}
 8004196:	bd10      	pop	{r4, pc}
  int32_t ret = TS3510_OK;
 8004198:	2000      	movs	r0, #0
 800419a:	e7fc      	b.n	8004196 <TS3510_DeInit+0x16>
      ret = TS3510_ERROR;
 800419c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 80041a0:	e7f9      	b.n	8004196 <TS3510_DeInit+0x16>

080041a2 <TS3510_DisableIT>:
 80041a2:	f04f 30ff 	mov.w	r0, #4294967295
 80041a6:	4770      	bx	lr

080041a8 <TS3510_GetMultiTouchState>:
 80041a8:	f04f 30ff 	mov.w	r0, #4294967295
 80041ac:	4770      	bx	lr

080041ae <TS3510_GetGesture>:
 80041ae:	f04f 30ff 	mov.w	r0, #4294967295
 80041b2:	4770      	bx	lr

080041b4 <TS3510_ITStatus>:
 80041b4:	f04f 30ff 	mov.w	r0, #4294967295
 80041b8:	4770      	bx	lr

080041ba <TS3510_ClearIT>:
 80041ba:	f04f 30ff 	mov.w	r0, #4294967295
 80041be:	4770      	bx	lr

080041c0 <TS3510_RegisterBusIO>:
  if (pObj == NULL)
 80041c0:	b190      	cbz	r0, 80041e8 <TS3510_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 80041c2:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 80041c4:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 80041c6:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 80041c8:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 80041ca:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 80041cc:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 80041ce:	68ca      	ldr	r2, [r1, #12]
 80041d0:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 80041d2:	690a      	ldr	r2, [r1, #16]
 80041d4:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 80041d6:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 80041d8:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 80041da:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 80041dc:	4a04      	ldr	r2, [pc, #16]	; (80041f0 <TS3510_RegisterBusIO+0x30>)
 80041de:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 80041e0:	4a04      	ldr	r2, [pc, #16]	; (80041f4 <TS3510_RegisterBusIO+0x34>)
 80041e2:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 80041e4:	b103      	cbz	r3, 80041e8 <TS3510_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 80041e6:	4718      	bx	r3
}
 80041e8:	f04f 30ff 	mov.w	r0, #4294967295
 80041ec:	4770      	bx	lr
 80041ee:	bf00      	nop
 80041f0:	08004053 	.word	0x08004053
 80041f4:	08004061 	.word	0x08004061

080041f8 <ts3510_read_reg>:
  * @param  pdata Pointer to data buffer
  * @param  length Number of data to read  
  * @retval Component status
  */
int32_t ts3510_read_reg(ts3510_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 80041f8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 80041fa:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 80041fe:	46a4      	mov	ip, r4
}
 8004200:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8004204:	4760      	bx	ip

08004206 <ts3510_write_reg>:
  * @param  pdata Pointer to data buffer
  * @param  length Number of data to write  
  * @retval Component status
  */
int32_t ts3510_write_reg(ts3510_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 8004206:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8004208:	6804      	ldr	r4, [r0, #0]
 800420a:	6880      	ldr	r0, [r0, #8]
 800420c:	46a4      	mov	ip, r4
}
 800420e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8004212:	4760      	bx	ip

08004214 <BSP_I2C1_DeInit>:
  */
int32_t BSP_I2C1_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c1InitCounter--;
 8004214:	4a0f      	ldr	r2, [pc, #60]	; (8004254 <BSP_I2C1_DeInit+0x40>)
{
 8004216:	b508      	push	{r3, lr}

  if (--I2c1InitCounter == 0U)
 8004218:	6813      	ldr	r3, [r2, #0]
 800421a:	3b02      	subs	r3, #2
 800421c:	6013      	str	r3, [r2, #0]
 800421e:	b10b      	cbz	r3, 8004224 <BSP_I2C1_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
 8004220:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
 8004222:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hI2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C1_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C1_SCL_GPIO_PORT, gpio_init_structure.Pin );
 8004224:	2140      	movs	r1, #64	; 0x40
 8004226:	480c      	ldr	r0, [pc, #48]	; (8004258 <BSP_I2C1_DeInit+0x44>)
 8004228:	f001 fa54 	bl	80056d4 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C1_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C1_SDA_GPIO_PORT, gpio_init_structure.Pin);
 800422c:	480a      	ldr	r0, [pc, #40]	; (8004258 <BSP_I2C1_DeInit+0x44>)
 800422e:	2180      	movs	r1, #128	; 0x80
 8004230:	f001 fa50 	bl	80056d4 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C1_CLK_DISABLE();
 8004234:	4a09      	ldr	r2, [pc, #36]	; (800425c <BSP_I2C1_DeInit+0x48>)
    if (HAL_I2C_DeInit(&hbus_i2c1) != HAL_OK)
 8004236:	480a      	ldr	r0, [pc, #40]	; (8004260 <BSP_I2C1_DeInit+0x4c>)
  BUS_I2C1_CLK_DISABLE();
 8004238:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 800423c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8004240:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
    if (HAL_I2C_DeInit(&hbus_i2c1) != HAL_OK)
 8004244:	f001 fc78 	bl	8005b38 <HAL_I2C_DeInit>
 8004248:	2800      	cmp	r0, #0
 800424a:	d0e9      	beq.n	8004220 <BSP_I2C1_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
 800424c:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8004250:	e7e7      	b.n	8004222 <BSP_I2C1_DeInit+0xe>
 8004252:	bf00      	nop
 8004254:	24004a68 	.word	0x24004a68
 8004258:	58020400 	.word	0x58020400
 800425c:	58024400 	.word	0x58024400
 8004260:	24005470 	.word	0x24005470

08004264 <MX_I2C1_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8004264:	2300      	movs	r3, #0
 8004266:	2201      	movs	r2, #1
{
 8004268:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 800426a:	6041      	str	r1, [r0, #4]
{
 800426c:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 800426e:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8004270:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 8004274:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8004278:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 800427c:	f001 fc0a 	bl	8005a94 <HAL_I2C_Init>
 8004280:	4601      	mov	r1, r0
 8004282:	b108      	cbz	r0, 8004288 <MX_I2C1_Init+0x24>
    status = HAL_ERROR;
 8004284:	2001      	movs	r0, #1
}
 8004286:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 8004288:	4620      	mov	r0, r4
 800428a:	f001 fe2c 	bl	8005ee6 <HAL_I2CEx_ConfigAnalogFilter>
 800428e:	4601      	mov	r1, r0
 8004290:	2800      	cmp	r0, #0
 8004292:	d1f7      	bne.n	8004284 <MX_I2C1_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 8004294:	4620      	mov	r0, r4
 8004296:	f001 fe4c 	bl	8005f32 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
 800429a:	3800      	subs	r0, #0
 800429c:	bf18      	it	ne
 800429e:	2001      	movne	r0, #1
 80042a0:	e7f1      	b.n	8004286 <MX_I2C1_Init+0x22>
	...

080042a4 <BSP_I2C1_Init>:
  hbus_i2c1.Instance = BUS_I2C1;
 80042a4:	4ba3      	ldr	r3, [pc, #652]	; (8004534 <BSP_I2C1_Init+0x290>)
 80042a6:	48a4      	ldr	r0, [pc, #656]	; (8004538 <BSP_I2C1_Init+0x294>)
{
 80042a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c1.Instance = BUS_I2C1;
 80042ac:	6003      	str	r3, [r0, #0]
{
 80042ae:	b093      	sub	sp, #76	; 0x4c
  if (I2c1InitCounter == 0U)
 80042b0:	4ba2      	ldr	r3, [pc, #648]	; (800453c <BSP_I2C1_Init+0x298>)
 80042b2:	681c      	ldr	r4, [r3, #0]
 80042b4:	2c00      	cmp	r4, #0
 80042b6:	f040 80cd 	bne.w	8004454 <BSP_I2C1_Init+0x1b0>
    I2c1InitCounter++;
 80042ba:	2201      	movs	r2, #1
 80042bc:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c1) == HAL_I2C_STATE_RESET)
 80042be:	f001 fe0d 	bl	8005edc <HAL_I2C_GetState>
 80042c2:	2800      	cmp	r0, #0
 80042c4:	f040 80c6 	bne.w	8004454 <BSP_I2C1_Init+0x1b0>
  BUS_I2C1_SCL_GPIO_CLK_ENABLE();
 80042c8:	4d9d      	ldr	r5, [pc, #628]	; (8004540 <BSP_I2C1_Init+0x29c>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 80042ca:	f04f 0812 	mov.w	r8, #18
  gpio_init_structure.Alternate = BUS_I2C1_SCL_AF;
 80042ce:	2702      	movs	r7, #2
 80042d0:	2604      	movs	r6, #4
  BUS_I2C1_SCL_GPIO_CLK_ENABLE();
 80042d2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  HAL_GPIO_Init(BUS_I2C1_SCL_GPIO_PORT, &gpio_init_structure);
 80042d6:	a90d      	add	r1, sp, #52	; 0x34
 80042d8:	489a      	ldr	r0, [pc, #616]	; (8004544 <BSP_I2C1_Init+0x2a0>)
  BUS_I2C1_SCL_GPIO_CLK_ENABLE();
 80042da:	f043 0302 	orr.w	r3, r3, #2
 80042de:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 80042e2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 80042e6:	f003 0302 	and.w	r3, r3, #2
 80042ea:	930a      	str	r3, [sp, #40]	; 0x28
 80042ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C1_SDA_GPIO_CLK_ENABLE();
 80042ee:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 80042f2:	f043 0302 	orr.w	r3, r3, #2
 80042f6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 80042fa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80042fe:	940f      	str	r4, [sp, #60]	; 0x3c
  BUS_I2C1_SDA_GPIO_CLK_ENABLE();
 8004300:	f003 0302 	and.w	r3, r3, #2
 8004304:	930b      	str	r3, [sp, #44]	; 0x2c
 8004306:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8004308:	2340      	movs	r3, #64	; 0x40
  gpio_init_structure.Alternate = BUS_I2C1_SCL_AF;
 800430a:	e9cd 7610 	strd	r7, r6, [sp, #64]	; 0x40
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 800430e:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  HAL_GPIO_Init(BUS_I2C1_SCL_GPIO_PORT, &gpio_init_structure);
 8004312:	f001 f8f5 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin 		= BUS_I2C1_SDA_PIN;
 8004316:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(BUS_I2C1_SDA_GPIO_PORT, &gpio_init_structure);
 8004318:	a90d      	add	r1, sp, #52	; 0x34
 800431a:	488a      	ldr	r0, [pc, #552]	; (8004544 <BSP_I2C1_Init+0x2a0>)
  gpio_init_structure.Alternate = BUS_I2C1_SDA_AF;
 800431c:	9611      	str	r6, [sp, #68]	; 0x44
  gpio_init_structure.Mode 		= GPIO_MODE_AF_OD;
 800431e:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
 8004322:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C1_SDA_GPIO_PORT, &gpio_init_structure);
 8004326:	f001 f8eb 	bl	8005500 <HAL_GPIO_Init>
  BUS_I2C1_CLK_ENABLE();
 800432a:	f8d5 30e8 	ldr.w	r3, [r5, #232]	; 0xe8
 800432e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004332:	f8c5 30e8 	str.w	r3, [r5, #232]	; 0xe8
 8004336:	f8d5 30e8 	ldr.w	r3, [r5, #232]	; 0xe8
 800433a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800433e:	930c      	str	r3, [sp, #48]	; 0x30
 8004340:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C1_FORCE_RESET();
 8004342:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8004346:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800434a:	f8c5 3090 	str.w	r3, [r5, #144]	; 0x90
  BUS_I2C1_RELEASE_RESET();
 800434e:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8004352:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8004356:	f8c5 3090 	str.w	r3, [r5, #144]	; 0x90
        if (MX_I2C1_Init(&hbus_i2c1, I2C_GetTiming(HAL_RCC_GetPCLK1Freq(), BUS_I2C1_FREQUENCY)) != HAL_OK)
 800435a:	f003 f83d 	bl	80073d8 <HAL_RCC_GetPCLK1Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
 800435e:	2800      	cmp	r0, #0
 8004360:	d072      	beq.n	8004448 <BSP_I2C1_Init+0x1a4>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8004362:	4b79      	ldr	r3, [pc, #484]	; (8004548 <BSP_I2C1_Init+0x2a4>)
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8004364:	f640 16f6 	movw	r6, #2550	; 0x9f6
 8004368:	4622      	mov	r2, r4
 800436a:	46a1      	mov	r9, r4
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 800436c:	eb03 0350 	add.w	r3, r3, r0, lsr #1
  uint32_t prev_presc = I2C_PRESC_MAX;
 8004370:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8004374:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8004550 <BSP_I2C1_Init+0x2ac>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8004378:	fbb3 f0f0 	udiv	r0, r3, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 800437c:	f06f 031d 	mvn.w	r3, #29
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 8004380:	eb00 0540 	add.w	r5, r0, r0, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8004384:	eba6 0680 	sub.w	r6, r6, r0, lsl #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8004388:	4601      	mov	r1, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 800438a:	1b5b      	subs	r3, r3, r5
 800438c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8004390:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004394:	9300      	str	r3, [sp, #0]
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8004396:	4b6d      	ldr	r3, [pc, #436]	; (800454c <BSP_I2C1_Init+0x2a8>)
 8004398:	681b      	ldr	r3, [r3, #0]
{
 800439a:	4688      	mov	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 800439c:	f04f 0c00 	mov.w	ip, #0
      if (tscldel >= (uint32_t)tscldel_min)
 80043a0:	f240 3579 	movw	r5, #889	; 0x379
 80043a4:	f8cd c004 	str.w	ip, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 80043a8:	f10c 0c01 	add.w	ip, ip, #1
      if (tscldel >= (uint32_t)tscldel_min)
 80043ac:	45a8      	cmp	r8, r5
 80043ae:	d95e      	bls.n	800446e <BSP_I2C1_Init+0x1ca>
 80043b0:	2700      	movs	r7, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 80043b2:	46be      	mov	lr, r7
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 80043b4:	9d00      	ldr	r5, [sp, #0]
 80043b6:	42bd      	cmp	r5, r7
 80043b8:	d853      	bhi.n	8004462 <BSP_I2C1_Init+0x1be>
 80043ba:	42be      	cmp	r6, r7
 80043bc:	d351      	bcc.n	8004462 <BSP_I2C1_Init+0x1be>
            if(presc != prev_presc)
 80043be:	4592      	cmp	sl, r2
 80043c0:	d04f      	beq.n	8004462 <BSP_I2C1_Init+0x1be>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 80043c2:	2514      	movs	r5, #20
 80043c4:	fb05 fa03 	mul.w	sl, r5, r3
              I2c_valid_timing_nbr ++;
 80043c8:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 80043ca:	9d01      	ldr	r5, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 80043cc:	eb0b 090a 	add.w	r9, fp, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 80043d0:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 80043d2:	f84b 200a 	str.w	r2, [fp, sl]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 80043d6:	e9c9 5e01 	strd	r5, lr, [r9, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 80043da:	d93f      	bls.n	800445c <BSP_I2C1_Init+0x1b8>
 80043dc:	4a5b      	ldr	r2, [pc, #364]	; (800454c <BSP_I2C1_Init+0x2a8>)
 80043de:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80043e0:	4b5a      	ldr	r3, [pc, #360]	; (800454c <BSP_I2C1_Init+0x2a8>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80043e2:	f242 7210 	movw	r2, #10000	; 0x2710
 80043e6:	495a      	ldr	r1, [pc, #360]	; (8004550 <BSP_I2C1_Init+0x2ac>)
 80043e8:	2700      	movs	r7, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80043ea:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80043ec:	9203      	str	r2, [sp, #12]
 80043ee:	f04f 32ff 	mov.w	r2, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80043f2:	9305      	str	r3, [sp, #20]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80043f4:	0043      	lsls	r3, r0, #1
 80043f6:	9201      	str	r2, [sp, #4]
 80043f8:	f103 0532 	add.w	r5, r3, #50	; 0x32
 80043fc:	f5c3 5b90 	rsb	fp, r3, #4608	; 0x1200
 8004400:	f5a3 5311 	sub.w	r3, r3, #9280	; 0x2440
 8004404:	f10b 0b0c 	add.w	fp, fp, #12
 8004408:	9509      	str	r5, [sp, #36]	; 0x24
 800440a:	3b0a      	subs	r3, #10
 800440c:	9302      	str	r3, [sp, #8]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 800440e:	9b05      	ldr	r3, [sp, #20]
 8004410:	429f      	cmp	r7, r3
 8004412:	d138      	bne.n	8004486 <BSP_I2C1_Init+0x1e2>
        if (idx < I2C_VALID_TIMING_NBR)
 8004414:	9b01      	ldr	r3, [sp, #4]
 8004416:	2b7f      	cmp	r3, #127	; 0x7f
 8004418:	d816      	bhi.n	8004448 <BSP_I2C1_Init+0x1a4>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 800441a:	2114      	movs	r1, #20
 800441c:	9a01      	ldr	r2, [sp, #4]
 800441e:	4b4c      	ldr	r3, [pc, #304]	; (8004550 <BSP_I2C1_Init+0x2ac>)
 8004420:	434a      	muls	r2, r1
 8004422:	1899      	adds	r1, r3, r2
 8004424:	589b      	ldr	r3, [r3, r2]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 8004426:	7c0c      	ldrb	r4, [r1, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004428:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
 800442c:	684b      	ldr	r3, [r1, #4]
 800442e:	051b      	lsls	r3, r3, #20
 8004430:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004434:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
 8004436:	688b      	ldr	r3, [r1, #8]
 8004438:	041b      	lsls	r3, r3, #16
 800443a:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 800443e:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
 8004440:	68cb      	ldr	r3, [r1, #12]
 8004442:	021b      	lsls	r3, r3, #8
 8004444:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004446:	431c      	orrs	r4, r3
        if (MX_I2C1_Init(&hbus_i2c1, I2C_GetTiming(HAL_RCC_GetPCLK1Freq(), BUS_I2C1_FREQUENCY)) != HAL_OK)
 8004448:	4621      	mov	r1, r4
 800444a:	483b      	ldr	r0, [pc, #236]	; (8004538 <BSP_I2C1_Init+0x294>)
 800444c:	f7ff ff0a 	bl	8004264 <MX_I2C1_Init>
 8004450:	2800      	cmp	r0, #0
 8004452:	d16c      	bne.n	800452e <BSP_I2C1_Init+0x28a>
  int32_t ret = BSP_ERROR_NONE;
 8004454:	2000      	movs	r0, #0
}
 8004456:	b013      	add	sp, #76	; 0x4c
 8004458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800445c:	4692      	mov	sl, r2
 800445e:	f04f 0901 	mov.w	r9, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8004462:	f10e 0e01 	add.w	lr, lr, #1
 8004466:	440f      	add	r7, r1
 8004468:	f1be 0f10 	cmp.w	lr, #16
 800446c:	d1a2      	bne.n	80043b4 <BSP_I2C1_Init+0x110>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 800446e:	f1bc 0f10 	cmp.w	ip, #16
 8004472:	4488      	add	r8, r1
 8004474:	d194      	bne.n	80043a0 <BSP_I2C1_Init+0xfc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8004476:	3201      	adds	r2, #1
 8004478:	4401      	add	r1, r0
 800447a:	2a10      	cmp	r2, #16
 800447c:	d18d      	bne.n	800439a <BSP_I2C1_Init+0xf6>
 800447e:	f1b9 0f00 	cmp.w	r9, #0
 8004482:	d1ab      	bne.n	80043dc <BSP_I2C1_Init+0x138>
 8004484:	e7ac      	b.n	80043e0 <BSP_I2C1_Init+0x13c>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8004486:	680b      	ldr	r3, [r1, #0]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004488:	f04f 0c00 	mov.w	ip, #0
 800448c:	9d09      	ldr	r5, [sp, #36]	; 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 800448e:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004492:	9e02      	ldr	r6, [sp, #8]
 8004494:	441d      	add	r5, r3
 8004496:	441e      	add	r6, r3
 8004498:	9504      	str	r5, [sp, #16]
 800449a:	ebab 0503 	sub.w	r5, fp, r3
 800449e:	9608      	str	r6, [sp, #32]
 80044a0:	006d      	lsls	r5, r5, #1
 80044a2:	9500      	str	r5, [sp, #0]
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 80044a4:	9d04      	ldr	r5, [sp, #16]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 80044a6:	f241 225c 	movw	r2, #4700	; 0x125c
 80044aa:	f8cd c018 	str.w	ip, [sp, #24]
 80044ae:	f1a5 0632 	sub.w	r6, r5, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80044b2:	f10c 0c01 	add.w	ip, ip, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 80044b6:	4295      	cmp	r5, r2
 80044b8:	d92e      	bls.n	8004518 <BSP_I2C1_Init+0x274>
 80044ba:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 80044be:	d22b      	bcs.n	8004518 <BSP_I2C1_Init+0x274>
 80044c0:	9e08      	ldr	r6, [sp, #32]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 80044c2:	f04f 0e00 	mov.w	lr, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 80044c6:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80044ca:	442e      	add	r6, r5
 80044cc:	f8dd 9000 	ldr.w	r9, [sp]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 80044d0:	f206 6a83 	addw	sl, r6, #1667	; 0x683
 80044d4:	f241 0247 	movw	r2, #4167	; 0x1047
 80044d8:	f8cd e01c 	str.w	lr, [sp, #28]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 80044dc:	f10e 0e01 	add.w	lr, lr, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 80044e0:	4592      	cmp	sl, r2
 80044e2:	d812      	bhi.n	800450a <BSP_I2C1_Init+0x266>
 80044e4:	f5b8 6f7a 	cmp.w	r8, #4000	; 0xfa0
 80044e8:	d30f      	bcc.n	800450a <BSP_I2C1_Init+0x266>
 80044ea:	4540      	cmp	r0, r8
 80044ec:	d20d      	bcs.n	800450a <BSP_I2C1_Init+0x266>
              error = -error;
 80044ee:	ea36 0a26 	bics.w	sl, r6, r6, asr #32
 80044f2:	bf28      	it	cs
 80044f4:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
 80044f6:	9a03      	ldr	r2, [sp, #12]
 80044f8:	4592      	cmp	sl, r2
 80044fa:	d206      	bcs.n	800450a <BSP_I2C1_Init+0x266>
              I2c_valid_timing[count].scll = scll;
 80044fc:	9a06      	ldr	r2, [sp, #24]
              I2c_valid_timing[count].sclh = sclh;
 80044fe:	f8cd a00c 	str.w	sl, [sp, #12]
              I2c_valid_timing[count].scll = scll;
 8004502:	610a      	str	r2, [r1, #16]
              I2c_valid_timing[count].sclh = sclh;
 8004504:	9a07      	ldr	r2, [sp, #28]
 8004506:	9701      	str	r7, [sp, #4]
 8004508:	60ca      	str	r2, [r1, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 800450a:	f5be 7f80 	cmp.w	lr, #256	; 0x100
 800450e:	441e      	add	r6, r3
 8004510:	eba9 0903 	sub.w	r9, r9, r3
 8004514:	4498      	add	r8, r3
 8004516:	d1db      	bne.n	80044d0 <BSP_I2C1_Init+0x22c>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004518:	9a00      	ldr	r2, [sp, #0]
 800451a:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 800451e:	441d      	add	r5, r3
 8004520:	eba2 0203 	sub.w	r2, r2, r3
 8004524:	9200      	str	r2, [sp, #0]
 8004526:	d1be      	bne.n	80044a6 <BSP_I2C1_Init+0x202>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8004528:	3701      	adds	r7, #1
 800452a:	3114      	adds	r1, #20
 800452c:	e76f      	b.n	800440e <BSP_I2C1_Init+0x16a>
          ret = BSP_ERROR_BUS_FAILURE;
 800452e:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8004532:	e790      	b.n	8004456 <BSP_I2C1_Init+0x1b2>
 8004534:	40005400 	.word	0x40005400
 8004538:	24005470 	.word	0x24005470
 800453c:	24004a68 	.word	0x24004a68
 8004540:	58024400 	.word	0x58024400
 8004544:	58020400 	.word	0x58020400
 8004548:	3b9aca00 	.word	0x3b9aca00
 800454c:	2400546c 	.word	0x2400546c
 8004550:	24004a6c 	.word	0x24004a6c

08004554 <BSP_I2C1_WriteReg>:
{
 8004554:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C1_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c1, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 8004556:	f242 7410 	movw	r4, #10000	; 0x2710
 800455a:	9200      	str	r2, [sp, #0]
 800455c:	460a      	mov	r2, r1
 800455e:	4601      	mov	r1, r0
 8004560:	4808      	ldr	r0, [pc, #32]	; (8004584 <BSP_I2C1_WriteReg+0x30>)
 8004562:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004566:	2301      	movs	r3, #1
 8004568:	f001 fb00 	bl	8005b6c <HAL_I2C_Mem_Write>
 800456c:	b140      	cbz	r0, 8004580 <BSP_I2C1_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c1) == HAL_I2C_ERROR_AF)
 800456e:	4805      	ldr	r0, [pc, #20]	; (8004584 <BSP_I2C1_WriteReg+0x30>)
 8004570:	f001 fcb7 	bl	8005ee2 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8004574:	2804      	cmp	r0, #4
 8004576:	bf0c      	ite	eq
 8004578:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 800457c:	f06f 0003 	mvnne.w	r0, #3
}
 8004580:	b004      	add	sp, #16
 8004582:	bd10      	pop	{r4, pc}
 8004584:	24005470 	.word	0x24005470

08004588 <BSP_I2C1_ReadReg>:
{
 8004588:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C1_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c1, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 800458a:	f242 7410 	movw	r4, #10000	; 0x2710
 800458e:	9200      	str	r2, [sp, #0]
 8004590:	460a      	mov	r2, r1
 8004592:	4601      	mov	r1, r0
 8004594:	4808      	ldr	r0, [pc, #32]	; (80045b8 <BSP_I2C1_ReadReg+0x30>)
 8004596:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800459a:	2301      	movs	r3, #1
 800459c:	f001 fbc0 	bl	8005d20 <HAL_I2C_Mem_Read>
 80045a0:	b140      	cbz	r0, 80045b4 <BSP_I2C1_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c1) == HAL_I2C_ERROR_AF)
 80045a2:	4805      	ldr	r0, [pc, #20]	; (80045b8 <BSP_I2C1_ReadReg+0x30>)
 80045a4:	f001 fc9d 	bl	8005ee2 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 80045a8:	2804      	cmp	r0, #4
 80045aa:	bf0c      	ite	eq
 80045ac:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 80045b0:	f06f 0003 	mvnne.w	r0, #3
}
 80045b4:	b004      	add	sp, #16
 80045b6:	bd10      	pop	{r4, pc}
 80045b8:	24005470 	.word	0x24005470

080045bc <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 80045bc:	f000 bdaa 	b.w	8005114 <HAL_GetTick>

080045c0 <MX_QSPI_Init>:
  */
__weak HAL_StatusTypeDef MX_QSPI_Init(QSPI_HandleTypeDef *hQspi, MX_QSPI_Init_t *Config)
{
  /* QSPI initialization */
  /* QSPI freq = SYSCLK /(1 + ClockPrescaler) Mhz */
  hQspi->Instance                = QUADSPI;
 80045c0:	4a09      	ldr	r2, [pc, #36]	; (80045e8 <MX_QSPI_Init+0x28>)
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
  hQspi->Init.FifoThreshold      = 1;
  hQspi->Init.SampleShifting     = Config->SampleShifting;
  hQspi->Init.FlashSize          = Config->FlashSize;
  hQspi->Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE; /* Min 50ns for nonRead */
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80045c2:	f44f 7c40 	mov.w	ip, #768	; 0x300
  hQspi->Instance                = QUADSPI;
 80045c6:	6002      	str	r2, [r0, #0]
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
 80045c8:	684a      	ldr	r2, [r1, #4]
 80045ca:	6042      	str	r2, [r0, #4]
  hQspi->Init.FifoThreshold      = 1;
 80045cc:	2201      	movs	r2, #1
 80045ce:	6082      	str	r2, [r0, #8]
  hQspi->Init.SampleShifting     = Config->SampleShifting;
 80045d0:	688a      	ldr	r2, [r1, #8]
 80045d2:	60c2      	str	r2, [r0, #12]
  hQspi->Init.FlashSize          = Config->FlashSize;
 80045d4:	680a      	ldr	r2, [r1, #0]
 80045d6:	6102      	str	r2, [r0, #16]
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80045d8:	2200      	movs	r2, #0
 80045da:	e9c0 c205 	strd	ip, r2, [r0, #20]
  hQspi->Init.FlashID            = QSPI_FLASH_ID_1;
 80045de:	61c2      	str	r2, [r0, #28]
  hQspi->Init.DualFlash          = Config->DualFlashMode;
 80045e0:	68ca      	ldr	r2, [r1, #12]
 80045e2:	6202      	str	r2, [r0, #32]

  return HAL_QSPI_Init(hQspi);
 80045e4:	f002 b82e 	b.w	8006644 <HAL_QSPI_Init>
 80045e8:	52005000 	.word	0x52005000

080045ec <BSP_QSPI_EnableMemoryMappedMode>:
  *         Only 1 Instance can running MMP mode. And it will lock system at this mode.
  * @param  Instance  QSPI instance
  * @retval BSP status
  */
int32_t BSP_QSPI_EnableMemoryMappedMode(uint32_t Instance)
{
 80045ec:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 80045ee:	b988      	cbnz	r0, 8004614 <BSP_QSPI_EnableMemoryMappedMode+0x28>
  }
  else
  {
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
    {
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80045f0:	4c0a      	ldr	r4, [pc, #40]	; (800461c <BSP_QSPI_EnableMemoryMappedMode+0x30>)
 80045f2:	480b      	ldr	r0, [pc, #44]	; (8004620 <BSP_QSPI_EnableMemoryMappedMode+0x34>)
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 80045f4:	78a3      	ldrb	r3, [r4, #2]
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80045f6:	7861      	ldrb	r1, [r4, #1]
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 80045f8:	b94b      	cbnz	r3, 800460e <BSP_QSPI_EnableMemoryMappedMode+0x22>
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80045fa:	f7ff fc93 	bl	8003f24 <MT25TL01G_EnableMemoryMappedModeSTR>
 80045fe:	b110      	cbz	r0, 8004606 <BSP_QSPI_EnableMemoryMappedMode+0x1a>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004600:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 8004604:	bd10      	pop	{r4, pc}
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 8004606:	2302      	movs	r3, #2
  int32_t ret = BSP_ERROR_NONE;
 8004608:	2000      	movs	r0, #0
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 800460a:	7023      	strb	r3, [r4, #0]
 800460c:	e7fa      	b.n	8004604 <BSP_QSPI_EnableMemoryMappedMode+0x18>
      if(MT25TL01G_EnableMemoryMappedModeDTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800460e:	f7ff fc3f 	bl	8003e90 <MT25TL01G_EnableMemoryMappedModeDTR>
 8004612:	e7f4      	b.n	80045fe <BSP_QSPI_EnableMemoryMappedMode+0x12>
    ret = BSP_ERROR_WRONG_PARAM;
 8004614:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004618:	e7f4      	b.n	8004604 <BSP_QSPI_EnableMemoryMappedMode+0x18>
 800461a:	bf00      	nop
 800461c:	240054c4 	.word	0x240054c4
 8004620:	240054d0 	.word	0x240054d0

08004624 <BSP_QSPI_DisableMemoryMappedMode>:
  *         Only 1 Instance can running MMP mode. And it will lock system at this mode.
  * @param  Instance  QSPI instance
  * @retval BSP status
  */
int32_t BSP_QSPI_DisableMemoryMappedMode(uint32_t Instance)
{
 8004624:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Dummy;
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 8004626:	b9f8      	cbnz	r0, 8004668 <BSP_QSPI_DisableMemoryMappedMode+0x44>
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    if(QSPI_Ctx[Instance].IsInitialized != QSPI_ACCESS_MMP)
 8004628:	4d14      	ldr	r5, [pc, #80]	; (800467c <BSP_QSPI_DisableMemoryMappedMode+0x58>)
 800462a:	782b      	ldrb	r3, [r5, #0]
 800462c:	2b02      	cmp	r3, #2
 800462e:	d11e      	bne.n	800466e <BSP_QSPI_DisableMemoryMappedMode+0x4a>
    {
      ret = BSP_ERROR_QSPI_MMP_UNLOCK_FAILURE;
    }/* Abort MMP back to indirect mode */
    else if(HAL_QSPI_Abort(&hqspi) != HAL_OK)
 8004630:	4c13      	ldr	r4, [pc, #76]	; (8004680 <BSP_QSPI_DisableMemoryMappedMode+0x5c>)
 8004632:	4620      	mov	r0, r4
 8004634:	f002 f9f1 	bl	8006a1a <HAL_QSPI_Abort>
 8004638:	b118      	cbz	r0, 8004642 <BSP_QSPI_DisableMemoryMappedMode+0x1e>
    {
      ret = BSP_ERROR_PERIPH_FAILURE;
 800463a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }
  /* Return BSP status */
  return ret;
}
 800463e:	b004      	add	sp, #16
 8004640:	bd70      	pop	{r4, r5, r6, pc}
      hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004642:	2310      	movs	r3, #16
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 8004644:	4620      	mov	r0, r4
      hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004646:	60e3      	str	r3, [r4, #12]
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 8004648:	f001 fffc 	bl	8006644 <HAL_QSPI_Init>
 800464c:	4603      	mov	r3, r0
 800464e:	2800      	cmp	r0, #0
 8004650:	d1f3      	bne.n	800463a <BSP_QSPI_DisableMemoryMappedMode+0x16>
      else if(MT25TL01G_ReadSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode, &Dummy, 0, 1) != MT25TL01G_OK)
 8004652:	2601      	movs	r6, #1
 8004654:	f10d 020f 	add.w	r2, sp, #15
 8004658:	7869      	ldrb	r1, [r5, #1]
 800465a:	4620      	mov	r0, r4
 800465c:	9600      	str	r6, [sp, #0]
 800465e:	f7ff fb8b 	bl	8003d78 <MT25TL01G_ReadSTR>
 8004662:	b938      	cbnz	r0, 8004674 <BSP_QSPI_DisableMemoryMappedMode+0x50>
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 8004664:	702e      	strb	r6, [r5, #0]
 8004666:	e7ea      	b.n	800463e <BSP_QSPI_DisableMemoryMappedMode+0x1a>
    ret = BSP_ERROR_WRONG_PARAM;
 8004668:	f06f 0001 	mvn.w	r0, #1
 800466c:	e7e7      	b.n	800463e <BSP_QSPI_DisableMemoryMappedMode+0x1a>
      ret = BSP_ERROR_QSPI_MMP_UNLOCK_FAILURE;
 800466e:	f06f 001a 	mvn.w	r0, #26
 8004672:	e7e4      	b.n	800463e <BSP_QSPI_DisableMemoryMappedMode+0x1a>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004674:	f06f 0004 	mvn.w	r0, #4
  return ret;
 8004678:	e7e1      	b.n	800463e <BSP_QSPI_DisableMemoryMappedMode+0x1a>
 800467a:	bf00      	nop
 800467c:	240054c4 	.word	0x240054c4
 8004680:	240054d0 	.word	0x240054d0

08004684 <BSP_QSPI_DeInit>:
{
 8004684:	b538      	push	{r3, r4, r5, lr}
  if(Instance >= QSPI_INSTANCES_NUMBER)
 8004686:	2800      	cmp	r0, #0
 8004688:	d158      	bne.n	800473c <BSP_QSPI_DeInit+0xb8>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_MMP)
 800468a:	4c2e      	ldr	r4, [pc, #184]	; (8004744 <BSP_QSPI_DeInit+0xc0>)
 800468c:	7823      	ldrb	r3, [r4, #0]
 800468e:	2b02      	cmp	r3, #2
 8004690:	d04d      	beq.n	800472e <BSP_QSPI_DeInit+0xaa>
      QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_NONE;
 8004692:	2300      	movs	r3, #0
      QSPI_Ctx[Instance].DualFlashMode = QSPI_DUALFLASH_ENABLE;
 8004694:	2540      	movs	r5, #64	; 0x40
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hQspi);

  /*##-2- Disable peripherals and GPIO Clocks ################################*/
  /* De-Configure QSPI pins */
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8004696:	2104      	movs	r1, #4
 8004698:	482b      	ldr	r0, [pc, #172]	; (8004748 <BSP_QSPI_DeInit+0xc4>)
      QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_NONE;
 800469a:	8023      	strh	r3, [r4, #0]
      QSPI_Ctx[Instance].TransferRate  = BSP_QSPI_STR_TRANSFER;
 800469c:	70a3      	strb	r3, [r4, #2]
      QSPI_Ctx[Instance].DualFlashMode = QSPI_DUALFLASH_ENABLE;
 800469e:	6065      	str	r5, [r4, #4]
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 80046a0:	f001 f818 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_CS_GPIO_PORT, QSPI_BK1_CS_PIN);
 80046a4:	4629      	mov	r1, r5
 80046a6:	4829      	ldr	r0, [pc, #164]	; (800474c <BSP_QSPI_DeInit+0xc8>)
 80046a8:	f001 f814 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D0_GPIO_PORT, QSPI_BK1_D0_PIN);
 80046ac:	f44f 7180 	mov.w	r1, #256	; 0x100
 80046b0:	4827      	ldr	r0, [pc, #156]	; (8004750 <BSP_QSPI_DeInit+0xcc>)
 80046b2:	f001 f80f 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D1_GPIO_PORT, QSPI_BK1_D1_PIN);
 80046b6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80046ba:	4825      	ldr	r0, [pc, #148]	; (8004750 <BSP_QSPI_DeInit+0xcc>)
 80046bc:	f001 f80a 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D2_GPIO_PORT, QSPI_BK1_D2_PIN);
 80046c0:	2180      	movs	r1, #128	; 0x80
 80046c2:	4823      	ldr	r0, [pc, #140]	; (8004750 <BSP_QSPI_DeInit+0xcc>)
 80046c4:	f001 f806 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK1_D3_GPIO_PORT, QSPI_BK1_D3_PIN);
 80046c8:	4629      	mov	r1, r5
 80046ca:	4821      	ldr	r0, [pc, #132]	; (8004750 <BSP_QSPI_DeInit+0xcc>)
 80046cc:	f001 f802 	bl	80056d4 <HAL_GPIO_DeInit>

  HAL_GPIO_DeInit(QSPI_BK2_CS_GPIO_PORT, QSPI_BK2_CS_PIN);
 80046d0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80046d4:	481f      	ldr	r0, [pc, #124]	; (8004754 <BSP_QSPI_DeInit+0xd0>)
 80046d6:	f000 fffd 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D0_GPIO_PORT, QSPI_BK2_D0_PIN);
 80046da:	2104      	movs	r1, #4
 80046dc:	481e      	ldr	r0, [pc, #120]	; (8004758 <BSP_QSPI_DeInit+0xd4>)
 80046de:	f000 fff9 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D1_GPIO_PORT, QSPI_BK2_D1_PIN);
 80046e2:	2108      	movs	r1, #8
 80046e4:	481c      	ldr	r0, [pc, #112]	; (8004758 <BSP_QSPI_DeInit+0xd4>)
 80046e6:	f000 fff5 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D2_GPIO_PORT, QSPI_BK2_D2_PIN);
 80046ea:	f44f 7100 	mov.w	r1, #512	; 0x200
 80046ee:	4817      	ldr	r0, [pc, #92]	; (800474c <BSP_QSPI_DeInit+0xc8>)
 80046f0:	f000 fff0 	bl	80056d4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_BK2_D3_GPIO_PORT, QSPI_BK2_D3_PIN);
 80046f4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80046f8:	4814      	ldr	r0, [pc, #80]	; (800474c <BSP_QSPI_DeInit+0xc8>)
 80046fa:	f000 ffeb 	bl	80056d4 <HAL_GPIO_DeInit>

  /*##-3- Reset peripherals ##################################################*/
  /* Reset the QuadSPI memory interface */
  QSPI_FORCE_RESET();
 80046fe:	4b17      	ldr	r3, [pc, #92]	; (800475c <BSP_QSPI_DeInit+0xd8>)
      if (HAL_QSPI_DeInit(&hqspi) != HAL_OK)
 8004700:	4817      	ldr	r0, [pc, #92]	; (8004760 <BSP_QSPI_DeInit+0xdc>)
  QSPI_FORCE_RESET();
 8004702:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8004704:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004708:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_RELEASE_RESET();
 800470a:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 800470c:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004710:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Disable the QuadSPI memory interface clock */
  QSPI_CLK_DISABLE();
 8004712:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004716:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800471a:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
      if (HAL_QSPI_DeInit(&hqspi) != HAL_OK)
 800471e:	f001 ffdf 	bl	80066e0 <HAL_QSPI_DeInit>
        ret = BSP_ERROR_PERIPH_FAILURE;
 8004722:	2800      	cmp	r0, #0
 8004724:	bf0c      	ite	eq
 8004726:	2000      	moveq	r0, #0
 8004728:	f06f 0003 	mvnne.w	r0, #3
}
 800472c:	bd38      	pop	{r3, r4, r5, pc}
      if(BSP_QSPI_DisableMemoryMappedMode(Instance) != BSP_ERROR_NONE)
 800472e:	f7ff ff79 	bl	8004624 <BSP_QSPI_DisableMemoryMappedMode>
 8004732:	2800      	cmp	r0, #0
 8004734:	d0ad      	beq.n	8004692 <BSP_QSPI_DeInit+0xe>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004736:	f06f 0004 	mvn.w	r0, #4
 800473a:	e7f7      	b.n	800472c <BSP_QSPI_DeInit+0xa8>
    ret = BSP_ERROR_WRONG_PARAM;
 800473c:	f06f 0001 	mvn.w	r0, #1
 8004740:	e7f4      	b.n	800472c <BSP_QSPI_DeInit+0xa8>
 8004742:	bf00      	nop
 8004744:	240054c4 	.word	0x240054c4
 8004748:	58020400 	.word	0x58020400
 800474c:	58021800 	.word	0x58021800
 8004750:	58021400 	.word	0x58021400
 8004754:	58020800 	.word	0x58020800
 8004758:	58021c00 	.word	0x58021c00
 800475c:	58024400 	.word	0x58024400
 8004760:	240054d0 	.word	0x240054d0

08004764 <BSP_QSPI_ConfigFlash>:
{
 8004764:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004766:	460c      	mov	r4, r1
 8004768:	4617      	mov	r7, r2
  if(Instance >= QSPI_INSTANCES_NUMBER)
 800476a:	bb30      	cbnz	r0, 80047ba <BSP_QSPI_ConfigFlash+0x56>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_MMP)
 800476c:	4d17      	ldr	r5, [pc, #92]	; (80047cc <BSP_QSPI_ConfigFlash+0x68>)
 800476e:	782b      	ldrb	r3, [r5, #0]
 8004770:	2b02      	cmp	r3, #2
 8004772:	d025      	beq.n	80047c0 <BSP_QSPI_ConfigFlash+0x5c>
      hqspi.Init.SampleShifting = (Rate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 8004774:	fab2 f382 	clz	r3, r2
 8004778:	4e15      	ldr	r6, [pc, #84]	; (80047d0 <BSP_QSPI_ConfigFlash+0x6c>)
 800477a:	095b      	lsrs	r3, r3, #5
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 800477c:	4630      	mov	r0, r6
      hqspi.Init.SampleShifting = (Rate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 800477e:	011b      	lsls	r3, r3, #4
 8004780:	60f3      	str	r3, [r6, #12]
      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 8004782:	f001 ff5f 	bl	8006644 <HAL_QSPI_Init>
 8004786:	b9f0      	cbnz	r0, 80047c6 <BSP_QSPI_ConfigFlash+0x62>
        switch(QSPI_Ctx[Instance].InterfaceMode)
 8004788:	786b      	ldrb	r3, [r5, #1]
 800478a:	2b03      	cmp	r3, #3
 800478c:	d10f      	bne.n	80047ae <BSP_QSPI_ConfigFlash+0x4a>
          if(Mode != MT25TL01G_QPI_MODE)
 800478e:	2c03      	cmp	r4, #3
 8004790:	d105      	bne.n	800479e <BSP_QSPI_ConfigFlash+0x3a>
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 8004792:	2301      	movs	r3, #1
          QSPI_Ctx[Instance].TransferRate  = Rate;
 8004794:	2000      	movs	r0, #0
          QSPI_Ctx[Instance].InterfaceMode = Mode;
 8004796:	706c      	strb	r4, [r5, #1]
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 8004798:	702b      	strb	r3, [r5, #0]
          QSPI_Ctx[Instance].TransferRate  = Rate;
 800479a:	70af      	strb	r7, [r5, #2]
}
 800479c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if(MT25TL01G_ExitQPIMode(&hqspi) != MT25TL01G_OK)
 800479e:	4630      	mov	r0, r6
 80047a0:	f7ff fb5a 	bl	8003e58 <MT25TL01G_ExitQPIMode>
 80047a4:	2800      	cmp	r0, #0
 80047a6:	d0f4      	beq.n	8004792 <BSP_QSPI_ConfigFlash+0x2e>
              ret = BSP_ERROR_COMPONENT_FAILURE;
 80047a8:	f06f 0004 	mvn.w	r0, #4
 80047ac:	e7f6      	b.n	800479c <BSP_QSPI_ConfigFlash+0x38>
          if(Mode == MT25TL01G_QPI_MODE)
 80047ae:	2c03      	cmp	r4, #3
 80047b0:	d1ef      	bne.n	8004792 <BSP_QSPI_ConfigFlash+0x2e>
            if(MT25TL01G_EnterQPIMode(&hqspi) != MT25TL01G_OK)
 80047b2:	4630      	mov	r0, r6
 80047b4:	f7ff fb34 	bl	8003e20 <MT25TL01G_EnterQPIMode>
 80047b8:	e7f4      	b.n	80047a4 <BSP_QSPI_ConfigFlash+0x40>
    ret = BSP_ERROR_WRONG_PARAM;
 80047ba:	f06f 0001 	mvn.w	r0, #1
 80047be:	e7ed      	b.n	800479c <BSP_QSPI_ConfigFlash+0x38>
      ret = BSP_ERROR_QSPI_MMP_LOCK_FAILURE;
 80047c0:	f06f 0019 	mvn.w	r0, #25
 80047c4:	e7ea      	b.n	800479c <BSP_QSPI_ConfigFlash+0x38>
        ret = BSP_ERROR_PERIPH_FAILURE;
 80047c6:	f06f 0003 	mvn.w	r0, #3
  return ret;
 80047ca:	e7e7      	b.n	800479c <BSP_QSPI_ConfigFlash+0x38>
 80047cc:	240054c4 	.word	0x240054c4
 80047d0:	240054d0 	.word	0x240054d0

080047d4 <BSP_QSPI_Init>:
{
 80047d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047d8:	460c      	mov	r4, r1
 80047da:	b0a5      	sub	sp, #148	; 0x94
  if(Instance >= QSPI_INSTANCES_NUMBER)
 80047dc:	2800      	cmp	r0, #0
 80047de:	f040 81bb 	bne.w	8004b58 <BSP_QSPI_Init+0x384>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_NONE)
 80047e2:	4d03      	ldr	r5, [pc, #12]	; (80047f0 <BSP_QSPI_Init+0x1c>)
 80047e4:	782f      	ldrb	r7, [r5, #0]
 80047e6:	b12f      	cbz	r7, 80047f4 <BSP_QSPI_Init+0x20>
  int32_t ret = BSP_ERROR_NONE;
 80047e8:	2000      	movs	r0, #0
}
 80047ea:	b025      	add	sp, #148	; 0x94
 80047ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80047f0:	240054c4 	.word	0x240054c4
  QSPI_CLK_ENABLE();
 80047f4:	4bc4      	ldr	r3, [pc, #784]	; (8004b08 <BSP_QSPI_Init+0x334>)
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80047f6:	2609      	movs	r6, #9
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80047f8:	f04f 0a04 	mov.w	sl, #4
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 80047fc:	f04f 0b03 	mov.w	fp, #3
  QSPI_CLK_ENABLE();
 8004800:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004804:	a916      	add	r1, sp, #88	; 0x58
 8004806:	48c1      	ldr	r0, [pc, #772]	; (8004b0c <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 8004808:	f04f 0840 	mov.w	r8, #64	; 0x40
  QSPI_CLK_ENABLE();
 800480c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004810:	f04f 090a 	mov.w	r9, #10
  QSPI_CLK_ENABLE();
 8004814:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8004818:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 800481c:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8004820:	9201      	str	r2, [sp, #4]
 8004822:	9a01      	ldr	r2, [sp, #4]
  QSPI_FORCE_RESET();
 8004824:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8004826:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800482a:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_RELEASE_RESET();
 800482c:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 800482e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004832:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_CLK_GPIO_CLK_ENABLE();
 8004834:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004838:	f042 0202 	orr.w	r2, r2, #2
 800483c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004840:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004844:	f002 0202 	and.w	r2, r2, #2
 8004848:	9202      	str	r2, [sp, #8]
 800484a:	9a02      	ldr	r2, [sp, #8]
  QSPI_BK1_CS_GPIO_CLK_ENABLE();
 800484c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004850:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004854:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004858:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800485c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004860:	9203      	str	r2, [sp, #12]
 8004862:	9a03      	ldr	r2, [sp, #12]
  QSPI_BK1_D0_GPIO_CLK_ENABLE();
 8004864:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004868:	f042 0220 	orr.w	r2, r2, #32
 800486c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004870:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004874:	f002 0220 	and.w	r2, r2, #32
 8004878:	9204      	str	r2, [sp, #16]
 800487a:	9a04      	ldr	r2, [sp, #16]
  QSPI_BK1_D1_GPIO_CLK_ENABLE();
 800487c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004880:	f042 0220 	orr.w	r2, r2, #32
 8004884:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004888:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800488c:	f002 0220 	and.w	r2, r2, #32
 8004890:	9205      	str	r2, [sp, #20]
 8004892:	9a05      	ldr	r2, [sp, #20]
  QSPI_BK1_D2_GPIO_CLK_ENABLE();
 8004894:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004898:	f042 0220 	orr.w	r2, r2, #32
 800489c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80048a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048a4:	f002 0220 	and.w	r2, r2, #32
 80048a8:	9206      	str	r2, [sp, #24]
 80048aa:	9a06      	ldr	r2, [sp, #24]
  QSPI_BK1_D3_GPIO_CLK_ENABLE();
 80048ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048b0:	f042 0220 	orr.w	r2, r2, #32
 80048b4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80048b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048bc:	f002 0220 	and.w	r2, r2, #32
 80048c0:	9207      	str	r2, [sp, #28]
 80048c2:	9a07      	ldr	r2, [sp, #28]
  QSPI_BK2_CS_GPIO_CLK_ENABLE();
 80048c4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048c8:	f042 0204 	orr.w	r2, r2, #4
 80048cc:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80048d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048d4:	f002 0204 	and.w	r2, r2, #4
 80048d8:	9208      	str	r2, [sp, #32]
 80048da:	9a08      	ldr	r2, [sp, #32]
  QSPI_BK2_D0_GPIO_CLK_ENABLE();
 80048dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048e0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80048e4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80048e8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048ec:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80048f0:	9209      	str	r2, [sp, #36]	; 0x24
 80048f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  QSPI_BK2_D1_GPIO_CLK_ENABLE();
 80048f4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80048f8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80048fc:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004900:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004904:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004908:	920a      	str	r2, [sp, #40]	; 0x28
 800490a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  QSPI_BK2_D2_GPIO_CLK_ENABLE();
 800490c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004910:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004914:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004918:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800491c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004920:	920b      	str	r2, [sp, #44]	; 0x2c
 8004922:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  QSPI_BK2_D3_GPIO_CLK_ENABLE();
 8004924:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004928:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800492c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004930:	2202      	movs	r2, #2
  QSPI_BK2_D3_GPIO_CLK_ENABLE();
 8004932:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004936:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800493a:	930c      	str	r3, [sp, #48]	; 0x30
 800493c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800493e:	e9cd a216 	strd	sl, r2, [sp, #88]	; 0x58
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004942:	e9cd 7b18 	strd	r7, fp, [sp, #96]	; 0x60
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8004946:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004948:	f000 fdda 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pull      = GPIO_PULLUP;
 800494c:	2301      	movs	r3, #1
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 800494e:	a916      	add	r1, sp, #88	; 0x58
 8004950:	486f      	ldr	r0, [pc, #444]	; (8004b10 <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8004952:	9318      	str	r3, [sp, #96]	; 0x60
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 8004954:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004958:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 800495c:	f000 fdd0 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004960:	2202      	movs	r2, #2
 8004962:	f44f 6100 	mov.w	r1, #2048	; 0x800
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8004966:	2301      	movs	r3, #1
  HAL_GPIO_Init(QSPI_BK2_CS_GPIO_PORT, &gpio_init_structure);
 8004968:	486a      	ldr	r0, [pc, #424]	; (8004b14 <BSP_QSPI_Init+0x340>)
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800496a:	961a      	str	r6, [sp, #104]	; 0x68
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800496c:	e9cd 1216 	strd	r1, r2, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_CS_GPIO_PORT, &gpio_init_structure);
 8004970:	a916      	add	r1, sp, #88	; 0x58
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8004972:	e9cd 3b18 	strd	r3, fp, [sp, #96]	; 0x60
  HAL_GPIO_Init(QSPI_BK2_CS_GPIO_PORT, &gpio_init_structure);
 8004976:	f000 fdc3 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 800497a:	f44f 7380 	mov.w	r3, #256	; 0x100
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 800497e:	a916      	add	r1, sp, #88	; 0x58
 8004980:	4865      	ldr	r0, [pc, #404]	; (8004b18 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 8004982:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004984:	9718      	str	r7, [sp, #96]	; 0x60
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8004986:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 800498a:	f000 fdb9 	bl	8005500 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 800498e:	a916      	add	r1, sp, #88	; 0x58
  gpio_init_structure.Pin       = QSPI_BK2_D0_PIN;
 8004990:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 8004994:	4861      	ldr	r0, [pc, #388]	; (8004b1c <BSP_QSPI_Init+0x348>)
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 8004996:	f44f 7a00 	mov.w	sl, #512	; 0x200
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800499a:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 800499c:	f000 fdb0 	bl	8005500 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 80049a0:	a916      	add	r1, sp, #88	; 0x58
 80049a2:	485d      	ldr	r0, [pc, #372]	; (8004b18 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 80049a4:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80049a8:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 80049ac:	f000 fda8 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 80049b0:	2308      	movs	r3, #8
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 80049b2:	a916      	add	r1, sp, #88	; 0x58
 80049b4:	4859      	ldr	r0, [pc, #356]	; (8004b1c <BSP_QSPI_Init+0x348>)
  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 80049b6:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80049b8:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 80049ba:	f000 fda1 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 80049be:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 80049c0:	a916      	add	r1, sp, #88	; 0x58
 80049c2:	4855      	ldr	r0, [pc, #340]	; (8004b18 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 80049c4:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80049c6:	961a      	str	r6, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 80049c8:	f000 fd9a 	bl	8005500 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 80049cc:	a916      	add	r1, sp, #88	; 0x58
 80049ce:	4850      	ldr	r0, [pc, #320]	; (8004b10 <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pin       = QSPI_BK2_D2_PIN;
 80049d0:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 80049d4:	f000 fd94 	bl	8005500 <HAL_GPIO_Init>
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 80049d8:	a916      	add	r1, sp, #88	; 0x58
 80049da:	484f      	ldr	r0, [pc, #316]	; (8004b18 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D3_PIN;
 80049dc:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 80049e0:	f000 fd8e 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 80049e4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 80049e8:	a916      	add	r1, sp, #88	; 0x58
 80049ea:	4849      	ldr	r0, [pc, #292]	; (8004b10 <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 80049ec:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 80049ee:	f000 fd87 	bl	8005500 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80049f2:	463a      	mov	r2, r7
 80049f4:	210f      	movs	r1, #15
 80049f6:	205c      	movs	r0, #92	; 0x5c
 80049f8:	f000 fbbc 	bl	8005174 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80049fc:	205c      	movs	r0, #92	; 0x5c
 80049fe:	f000 fbeb 	bl	80051d8 <HAL_NVIC_EnableIRQ>
        (void)MT25TL01G_GetFlashInfo(&pInfo);
 8004a02:	a811      	add	r0, sp, #68	; 0x44
 8004a04:	f7ff f90f 	bl	8003c26 <MT25TL01G_GetFlashInfo>
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 8004a08:	7863      	ldrb	r3, [r4, #1]
 8004a0a:	4a45      	ldr	r2, [pc, #276]	; (8004b20 <BSP_QSPI_Init+0x34c>)
        qspi_init.DualFlashMode  = QSPI_DUALFLASH_ENABLE;
 8004a0c:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 8004a10:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8004a14:	920e      	str	r2, [sp, #56]	; 0x38
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004a16:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004a18:	fa92 f2a2 	rbit	r2, r2
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 8004a1c:	fab3 f383 	clz	r3, r3
   */
  if (value == 0U)
  {
    return 32U;
  }
  return __builtin_clz(value);
 8004a20:	fab2 f282 	clz	r2, r2
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 8004a24:	a90d      	add	r1, sp, #52	; 0x34
 8004a26:	483f      	ldr	r0, [pc, #252]	; (8004b24 <BSP_QSPI_Init+0x350>)
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 8004a28:	095b      	lsrs	r3, r3, #5
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 8004a2a:	3a01      	subs	r2, #1
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 8004a2c:	011b      	lsls	r3, r3, #4
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 8004a2e:	920d      	str	r2, [sp, #52]	; 0x34
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 8004a30:	930f      	str	r3, [sp, #60]	; 0x3c
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 8004a32:	f7ff fdc5 	bl	80045c0 <MX_QSPI_Init>
 8004a36:	2800      	cmp	r0, #0
 8004a38:	f040 8091 	bne.w	8004b5e <BSP_QSPI_Init+0x38a>
static int32_t QSPI_ResetMemory(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  /* Send RESET ENABLE command in QPI mode (QUAD I/Os, 4-4-4) */
  if(MT25TL01G_ResetEnable(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 8004a3c:	4659      	mov	r1, fp
 8004a3e:	4839      	ldr	r0, [pc, #228]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004a40:	f7ff fab6 	bl	8003fb0 <MT25TL01G_ResetEnable>
 8004a44:	2800      	cmp	r0, #0
 8004a46:	d17c      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
  {
    ret =BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in QPI mode (QUAD I/Os, 4-4-4) */
  else if(MT25TL01G_ResetMemory(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 8004a48:	4659      	mov	r1, fp
 8004a4a:	4836      	ldr	r0, [pc, #216]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004a4c:	f7ff fad1 	bl	8003ff2 <MT25TL01G_ResetMemory>
 8004a50:	2800      	cmp	r0, #0
 8004a52:	d176      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Wait Flash ready */
  else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004a54:	7869      	ldrb	r1, [r5, #1]
 8004a56:	4833      	ldr	r0, [pc, #204]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004a58:	f7ff f8f6 	bl	8003c48 <MT25TL01G_AutoPollingMemReady>
 8004a5c:	4601      	mov	r1, r0
 8004a5e:	2800      	cmp	r0, #0
 8004a60:	d16f      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET ENABLE command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetEnable(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 8004a62:	4830      	ldr	r0, [pc, #192]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004a64:	f7ff faa4 	bl	8003fb0 <MT25TL01G_ResetEnable>
 8004a68:	4601      	mov	r1, r0
 8004a6a:	2800      	cmp	r0, #0
 8004a6c:	d169      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetMemory(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 8004a6e:	482d      	ldr	r0, [pc, #180]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004a70:	f7ff fabf 	bl	8003ff2 <MT25TL01G_ResetMemory>
 8004a74:	4601      	mov	r1, r0
 8004a76:	2800      	cmp	r0, #0
 8004a78:	d163      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else
  {
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 8004a7a:	2301      	movs	r3, #1
    QSPI_Ctx[Instance].InterfaceMode = BSP_QSPI_SPI_MODE;     /* After reset H/W back to SPI mode by default  */
    QSPI_Ctx[Instance].TransferRate  = BSP_QSPI_STR_TRANSFER; /* After reset S/W setting to STR mode          */
 8004a7c:	70a8      	strb	r0, [r5, #2]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004a7e:	4829      	ldr	r0, [pc, #164]	; (8004b24 <BSP_QSPI_Init+0x350>)
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 8004a80:	802b      	strh	r3, [r5, #0]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004a82:	f7ff f8e1 	bl	8003c48 <MT25TL01G_AutoPollingMemReady>
 8004a86:	2800      	cmp	r0, #0
 8004a88:	d15b      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
        else if(MT25TL01G_Enter4BytesAddressMode(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004a8a:	7869      	ldrb	r1, [r5, #1]
 8004a8c:	4825      	ldr	r0, [pc, #148]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004a8e:	f7ff f94a 	bl	8003d26 <MT25TL01G_Enter4BytesAddressMode>
 8004a92:	2800      	cmp	r0, #0
 8004a94:	d155      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
    int32_t ret= BSP_ERROR_NONE;
    QSPI_CommandTypeDef s_command;
  uint16_t reg=0;

  /* Initialize the read volatile configuration register command */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8004a96:	f44f 7340 	mov.w	r3, #768	; 0x300
  uint16_t reg=0;
 8004a9a:	f8ad 0002 	strh.w	r0, [sp, #2]
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
  s_command.DummyCycles       = 0;
 8004a9e:	901b      	str	r0, [sp, #108]	; 0x6c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Configure the command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004aa0:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8004aa4:	931c      	str	r3, [sp, #112]	; 0x70
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 8004aa6:	2385      	movs	r3, #133	; 0x85
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004aa8:	a916      	add	r1, sp, #88	; 0x58
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 8004aaa:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004aac:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8004ab0:	931f      	str	r3, [sp, #124]	; 0x7c
  s_command.NbData            = 2;
 8004ab2:	2302      	movs	r3, #2
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004ab4:	e9cd 001d 	strd	r0, r0, [sp, #116]	; 0x74
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004ab8:	e9cd 3020 	strd	r3, r0, [sp, #128]	; 0x80
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004abc:	e9cd 0022 	strd	r0, r0, [sp, #136]	; 0x88
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004ac0:	4818      	ldr	r0, [pc, #96]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004ac2:	f001 fe1e 	bl	8006702 <HAL_QSPI_Command>
 8004ac6:	2800      	cmp	r0, #0
 8004ac8:	d13b      	bne.n	8004b42 <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Reception of the data */
  if (HAL_QSPI_Receive(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004aca:	f241 3288 	movw	r2, #5000	; 0x1388
 8004ace:	f10d 0102 	add.w	r1, sp, #2
 8004ad2:	4814      	ldr	r0, [pc, #80]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004ad4:	f001 feb1 	bl	800683a <HAL_QSPI_Receive>
 8004ad8:	bb98      	cbnz	r0, 8004b42 <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Enable write operations */
  if (MT25TL01G_WriteEnable(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8004ada:	7869      	ldrb	r1, [r5, #1]
 8004adc:	4811      	ldr	r0, [pc, #68]	; (8004b24 <BSP_QSPI_Init+0x350>)
 8004ade:	f7ff f8de 	bl	8003c9e <MT25TL01G_WriteEnable>
 8004ae2:	bb70      	cbnz	r0, 8004b42 <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Update volatile configuration register (with new dummy cycles) */
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 8004ae4:	2381      	movs	r3, #129	; 0x81
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
                               (MT25TL01G_DUMMY_CYCLES_READ_QUAD << 12)));

  /* Configure the write volatile configuration register command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004ae6:	f241 3288 	movw	r2, #5000	; 0x1388
 8004aea:	a916      	add	r1, sp, #88	; 0x58
 8004aec:	480d      	ldr	r0, [pc, #52]	; (8004b24 <BSP_QSPI_Init+0x350>)
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 8004aee:	9316      	str	r3, [sp, #88]	; 0x58
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
 8004af0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8004af4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004af8:	051b      	lsls	r3, r3, #20
 8004afa:	0d1b      	lsrs	r3, r3, #20
 8004afc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004b00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004b04:	e010      	b.n	8004b28 <BSP_QSPI_Init+0x354>
 8004b06:	bf00      	nop
 8004b08:	58024400 	.word	0x58024400
 8004b0c:	58020400 	.word	0x58020400
 8004b10:	58021800 	.word	0x58021800
 8004b14:	58020800 	.word	0x58020800
 8004b18:	58021400 	.word	0x58021400
 8004b1c:	58021c00 	.word	0x58021c00
 8004b20:	080232a8 	.word	0x080232a8
 8004b24:	240054d0 	.word	0x240054d0
 8004b28:	f8ad 3002 	strh.w	r3, [sp, #2]
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b2c:	f001 fde9 	bl	8006702 <HAL_QSPI_Command>
 8004b30:	b938      	cbnz	r0, 8004b42 <BSP_QSPI_Init+0x36e>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Transmission of the data */
  if (HAL_QSPI_Transmit(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b32:	f241 3288 	movw	r2, #5000	; 0x1388
 8004b36:	f10d 0102 	add.w	r1, sp, #2
 8004b3a:	480a      	ldr	r0, [pc, #40]	; (8004b64 <BSP_QSPI_Init+0x390>)
 8004b3c:	f001 fe24 	bl	8006788 <HAL_QSPI_Transmit>
 8004b40:	b110      	cbz	r0, 8004b48 <BSP_QSPI_Init+0x374>
            ret = BSP_ERROR_COMPONENT_FAILURE;
 8004b42:	f06f 0004 	mvn.w	r0, #4
 8004b46:	e650      	b.n	80047ea <BSP_QSPI_Init+0x16>
          if(BSP_QSPI_ConfigFlash(Instance, Init->InterfaceMode, Init->TransferRate) != BSP_ERROR_NONE)
 8004b48:	7862      	ldrb	r2, [r4, #1]
 8004b4a:	7821      	ldrb	r1, [r4, #0]
 8004b4c:	f7ff fe0a 	bl	8004764 <BSP_QSPI_ConfigFlash>
 8004b50:	2800      	cmp	r0, #0
 8004b52:	f43f ae49 	beq.w	80047e8 <BSP_QSPI_Init+0x14>
 8004b56:	e7f4      	b.n	8004b42 <BSP_QSPI_Init+0x36e>
    ret = BSP_ERROR_WRONG_PARAM;
 8004b58:	f06f 0001 	mvn.w	r0, #1
 8004b5c:	e645      	b.n	80047ea <BSP_QSPI_Init+0x16>
          ret = BSP_ERROR_PERIPH_FAILURE;
 8004b5e:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8004b62:	e642      	b.n	80047ea <BSP_QSPI_Init+0x16>
 8004b64:	240054d0 	.word	0x240054d0

08004b68 <BSP_SDRAM_DeInit>:
  * @brief  DeInitializes the SDRAM device.
  * @param  Instance  SDRAM Instance
  * @retval BSP status
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
 8004b68:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;;

  if(Instance >= SDRAM_INSTANCES_NBR)
 8004b6a:	4604      	mov	r4, r0
 8004b6c:	b970      	cbnz	r0, 8004b8c <BSP_SDRAM_DeInit+0x24>
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* SDRAM device de-initialization */
    hsdram[Instance].Instance = FMC_SDRAM_DEVICE;
 8004b6e:	4b09      	ldr	r3, [pc, #36]	; (8004b94 <BSP_SDRAM_DeInit+0x2c>)
 8004b70:	4809      	ldr	r0, [pc, #36]	; (8004b98 <BSP_SDRAM_DeInit+0x30>)
 8004b72:	6003      	str	r3, [r0, #0]

    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
 8004b74:	f003 fa98 	bl	80080a8 <HAL_SDRAM_DeInit>
  static MDMA_HandleTypeDef mdma_handle;

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);
  /* Disable NVIC configuration for MDMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
 8004b78:	207a      	movs	r0, #122	; 0x7a
 8004b7a:	f000 fb3b 	bl	80051f4 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
 8004b7e:	4807      	ldr	r0, [pc, #28]	; (8004b9c <BSP_SDRAM_DeInit+0x34>)
 8004b80:	4b07      	ldr	r3, [pc, #28]	; (8004ba0 <BSP_SDRAM_DeInit+0x38>)
 8004b82:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
 8004b84:	f001 fc01 	bl	800638a <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;;
 8004b88:	4620      	mov	r0, r4
}
 8004b8a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8004b8c:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004b90:	e7fb      	b.n	8004b8a <BSP_SDRAM_DeInit+0x22>
 8004b92:	bf00      	nop
 8004b94:	52004140 	.word	0x52004140
 8004b98:	2400551c 	.word	0x2400551c
 8004b9c:	24005550 	.word	0x24005550
 8004ba0:	52000040 	.word	0x52000040

08004ba4 <MX_SDRAM_BANK2_Init>:
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8004ba4:	2201      	movs	r2, #1
 8004ba6:	4914      	ldr	r1, [pc, #80]	; (8004bf8 <MX_SDRAM_BANK2_Init+0x54>)
  sdram_timing.ExitSelfRefreshDelay = 7;
 8004ba8:	2302      	movs	r3, #2
{
 8004baa:	b510      	push	{r4, lr}
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8004bac:	e9c0 1200 	strd	r1, r2, [r0]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_9;
 8004bb0:	6082      	str	r2, [r0, #8]
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8004bb2:	2104      	movs	r1, #4
 8004bb4:	2220      	movs	r2, #32
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004bb6:	2440      	movs	r4, #64	; 0x40
{
 8004bb8:	b088      	sub	sp, #32
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8004bba:	e9c0 1203 	strd	r1, r2, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004bbe:	f44f 72c0 	mov.w	r2, #384	; 0x180
  sdram_timing.RCDDelay             = 2;
 8004bc2:	9307      	str	r3, [sp, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004bc4:	e9c0 4205 	strd	r4, r2, [r0, #20]
  hSdram->Init.SDClockPeriod      = FMC_SDRAM_CLOCK_PERIOD_2;
 8004bc8:	2200      	movs	r2, #0
 8004bca:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8004bce:	e9c0 2407 	strd	r2, r4, [r0, #28]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8004bd2:	f44f 5480 	mov.w	r4, #4096	; 0x1000
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8004bd6:	e9c0 4209 	strd	r4, r2, [r0, #36]	; 0x24
  sdram_timing.ExitSelfRefreshDelay = 7;
 8004bda:	2207      	movs	r2, #7
  sdram_timing.RowCycleDelay        = 7;
 8004bdc:	e9cd 1203 	strd	r1, r2, [sp, #12]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 8004be0:	4469      	add	r1, sp
  sdram_timing.ExitSelfRefreshDelay = 7;
 8004be2:	e9cd 3201 	strd	r3, r2, [sp, #4]
  sdram_timing.RPDelay              = 2;
 8004be6:	e9cd 3305 	strd	r3, r3, [sp, #20]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 8004bea:	f003 fa35 	bl	8008058 <HAL_SDRAM_Init>
}
 8004bee:	3800      	subs	r0, #0
 8004bf0:	bf18      	it	ne
 8004bf2:	2001      	movne	r0, #1
 8004bf4:	b008      	add	sp, #32
 8004bf6:	bd10      	pop	{r4, pc}
 8004bf8:	52004140 	.word	0x52004140

08004bfc <BSP_SDRAM_Init>:
{
 8004bfc:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(Instance >= SDRAM_INSTANCES_NBR)
 8004bfe:	4605      	mov	r5, r0
{
 8004c00:	b08f      	sub	sp, #60	; 0x3c
  if(Instance >= SDRAM_INSTANCES_NBR)
 8004c02:	2800      	cmp	r0, #0
 8004c04:	f040 80dd 	bne.w	8004dc2 <BSP_SDRAM_Init+0x1c6>
  __HAL_RCC_FMC_CLK_ENABLE();
 8004c08:	4b71      	ldr	r3, [pc, #452]	; (8004dd0 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004c0a:	2703      	movs	r7, #3
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8004c0c:	a909      	add	r1, sp, #36	; 0x24
 8004c0e:	4871      	ldr	r0, [pc, #452]	; (8004dd4 <BSP_SDRAM_Init+0x1d8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8004c10:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  mdma_handle.Init.Request                  = MDMA_REQUEST_SW;
 8004c14:	4c70      	ldr	r4, [pc, #448]	; (8004dd8 <BSP_SDRAM_Init+0x1dc>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8004c16:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hSdram, hmdma, mdma_handle);
 8004c1a:	4e70      	ldr	r6, [pc, #448]	; (8004ddc <BSP_SDRAM_Init+0x1e0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8004c1c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8004c20:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004c24:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8004c28:	9201      	str	r2, [sp, #4]
 8004c2a:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
 8004c2c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004c30:	f042 0201 	orr.w	r2, r2, #1
 8004c34:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8004c38:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8004c3c:	f002 0201 	and.w	r2, r2, #1
 8004c40:	9202      	str	r2, [sp, #8]
 8004c42:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8004c44:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c48:	f042 0208 	orr.w	r2, r2, #8
 8004c4c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004c50:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c54:	f002 0208 	and.w	r2, r2, #8
 8004c58:	9203      	str	r2, [sp, #12]
 8004c5a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8004c5c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c60:	f042 0210 	orr.w	r2, r2, #16
 8004c64:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004c68:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c6c:	f002 0210 	and.w	r2, r2, #16
 8004c70:	9204      	str	r2, [sp, #16]
 8004c72:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8004c74:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c78:	f042 0220 	orr.w	r2, r2, #32
 8004c7c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004c80:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c84:	f002 0220 	and.w	r2, r2, #32
 8004c88:	9205      	str	r2, [sp, #20]
 8004c8a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8004c8c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c90:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004c94:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004c98:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004c9c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004ca0:	9206      	str	r2, [sp, #24]
 8004ca2:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8004ca4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004ca8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004cac:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8004cb0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004cb4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004cb8:	9207      	str	r2, [sp, #28]
 8004cba:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8004cbc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8004cc0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004cc4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8004cc8:	2202      	movs	r2, #2
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8004cca:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004cce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004cd2:	9308      	str	r3, [sp, #32]
 8004cd4:	9b08      	ldr	r3, [sp, #32]
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8004cd6:	2301      	movs	r3, #1
 8004cd8:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004cdc:	230c      	movs	r3, #12
 8004cde:	e9cd 730c 	strd	r7, r3, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8004ce2:	f24c 7303 	movw	r3, #50947	; 0xc703
 8004ce6:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8004ce8:	f000 fc0a 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8004cec:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8004cf0:	a909      	add	r1, sp, #36	; 0x24
 8004cf2:	483b      	ldr	r0, [pc, #236]	; (8004de0 <BSP_SDRAM_Init+0x1e4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8004cf4:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8004cf6:	f000 fc03 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004cfa:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8004cfe:	a909      	add	r1, sp, #36	; 0x24
 8004d00:	4838      	ldr	r0, [pc, #224]	; (8004de4 <BSP_SDRAM_Init+0x1e8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004d02:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8004d04:	f000 fbfc 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 |\
 8004d08:	f248 133f 	movw	r3, #33087	; 0x813f
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004d0c:	a909      	add	r1, sp, #36	; 0x24
 8004d0e:	4836      	ldr	r0, [pc, #216]	; (8004de8 <BSP_SDRAM_Init+0x1ec>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 |\
 8004d10:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004d12:	f000 fbf5 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8004d16:	f64f 73e0 	movw	r3, #65504	; 0xffe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004d1a:	a909      	add	r1, sp, #36	; 0x24
 8004d1c:	4833      	ldr	r0, [pc, #204]	; (8004dec <BSP_SDRAM_Init+0x1f0>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8004d1e:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004d20:	f000 fbee 	bl	8005500 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8004d24:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004d28:	a909      	add	r1, sp, #36	; 0x24
 8004d2a:	4831      	ldr	r0, [pc, #196]	; (8004df0 <BSP_SDRAM_Init+0x1f4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8004d2c:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004d2e:	f000 fbe7 	bl	8005500 <HAL_GPIO_Init>
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 8004d32:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8004d36:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 8004d3a:	f240 2002 	movw	r0, #514	; 0x202
 8004d3e:	f640 0208 	movw	r2, #2056	; 0x808
  __HAL_LINKDMA(hSdram, hmdma, mdma_handle);
 8004d42:	6334      	str	r4, [r6, #48]	; 0x30
 8004d44:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 8004d46:	e9c4 1301 	strd	r1, r3, [r4, #4]
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 8004d4a:	e9c4 0205 	strd	r0, r2, [r4, #20]
  mdma_handle.Init.Priority                 = MDMA_PRIORITY_HIGH;
 8004d4e:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.SourceDataSize           = MDMA_SRC_DATASIZE_WORD;
 8004d50:	2220      	movs	r2, #32
  HAL_MDMA_DeInit(&mdma_handle);
 8004d52:	4620      	mov	r0, r4
  mdma_handle.Init.BufferTransferLength     = 128;
 8004d54:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.DestDataSize             = MDMA_DEST_DATASIZE_WORD;
 8004d56:	e9c4 2307 	strd	r2, r3, [r4, #28]
  mdma_handle.Init.Endianness               = MDMA_LITTLE_ENDIANNESS_PRESERVE;
 8004d5a:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 8004d5e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 8004d62:	4b24      	ldr	r3, [pc, #144]	; (8004df4 <BSP_SDRAM_Init+0x1f8>)
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 8004d64:	6262      	str	r2, [r4, #36]	; 0x24
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 8004d66:	6023      	str	r3, [r4, #0]
  mdma_handle.Init.DestBurst                = MDMA_DEST_BURST_SINGLE;
 8004d68:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DestBlockAddressOffset   = 0;
 8004d6c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
 8004d70:	f001 fb0b 	bl	800638a <HAL_MDMA_DeInit>
  (void)HAL_MDMA_Init(&mdma_handle);
 8004d74:	4620      	mov	r0, r4
 8004d76:	f001 fa99 	bl	80062ac <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, BSP_SDRAM_IT_PRIORITY, 0);
 8004d7a:	462a      	mov	r2, r5
 8004d7c:	210f      	movs	r1, #15
 8004d7e:	207a      	movs	r0, #122	; 0x7a
 8004d80:	f000 f9f8 	bl	8005174 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
 8004d84:	207a      	movs	r0, #122	; 0x7a
 8004d86:	f000 fa27 	bl	80051d8 <HAL_NVIC_EnableIRQ>
      if(MX_SDRAM_BANK2_Init(&hsdram[Instance]) != HAL_OK)
 8004d8a:	4630      	mov	r0, r6
 8004d8c:	f7ff ff0a 	bl	8004ba4 <MX_SDRAM_BANK2_Init>
 8004d90:	b9d0      	cbnz	r0, 8004dc8 <BSP_SDRAM_Init+0x1cc>
        pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
 8004d92:	4919      	ldr	r1, [pc, #100]	; (8004df8 <BSP_SDRAM_Init+0x1fc>)
 8004d94:	2308      	movs	r3, #8
        pRegMode.RefreshMode     = IS42S32800G_AUTOREFRESH_MODE_CMD;
 8004d96:	e9c1 3700 	strd	r3, r7, [r1]
        pRegMode.RefreshRate     = REFRESH_COUNT;
 8004d9a:	f240 6303 	movw	r3, #1539	; 0x603
        pRegMode.BurstType       = IS42S32800G_BURST_TYPE_SEQUENTIAL;
 8004d9e:	6108      	str	r0, [r1, #16]
        pRegMode.BurstLength     = IS42S32800G_BURST_LENGTH_1;
 8004da0:	e9c1 3002 	strd	r3, r0, [r1, #8]
        pRegMode.CASLatency      = IS42S32800G_CAS_LATENCY_3;
 8004da4:	2330      	movs	r3, #48	; 0x30
        pRegMode.OperationMode   = IS42S32800G_OPERATING_MODE_STANDARD;
 8004da6:	e9c1 3005 	strd	r3, r0, [r1, #20]
        pRegMode.WriteBurstMode  = IS42S32800G_WRITEBURST_MODE_SINGLE;
 8004daa:	f44f 7300 	mov.w	r3, #512	; 0x200
        if(IS42S32800G_Init(&hsdram[Instance], &pRegMode) != IS42S32800G_OK)
 8004dae:	4630      	mov	r0, r6
        pRegMode.WriteBurstMode  = IS42S32800G_WRITEBURST_MODE_SINGLE;
 8004db0:	61cb      	str	r3, [r1, #28]
        if(IS42S32800G_Init(&hsdram[Instance], &pRegMode) != IS42S32800G_OK)
 8004db2:	f7fe ff0b 	bl	8003bcc <IS42S32800G_Init>
          ret =  BSP_ERROR_COMPONENT_FAILURE;
 8004db6:	2800      	cmp	r0, #0
 8004db8:	bf18      	it	ne
 8004dba:	f06f 0004 	mvnne.w	r0, #4
}
 8004dbe:	b00f      	add	sp, #60	; 0x3c
 8004dc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8004dc2:	f06f 0001 	mvn.w	r0, #1
 8004dc6:	e7fa      	b.n	8004dbe <BSP_SDRAM_Init+0x1c2>
        ret = BSP_ERROR_NO_INIT;
 8004dc8:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8004dcc:	e7f7      	b.n	8004dbe <BSP_SDRAM_Init+0x1c2>
 8004dce:	bf00      	nop
 8004dd0:	58024400 	.word	0x58024400
 8004dd4:	58020c00 	.word	0x58020c00
 8004dd8:	240055bc 	.word	0x240055bc
 8004ddc:	2400551c 	.word	0x2400551c
 8004de0:	58021000 	.word	0x58021000
 8004de4:	58021400 	.word	0x58021400
 8004de8:	58021800 	.word	0x58021800
 8004dec:	58021c00 	.word	0x58021c00
 8004df0:	58022000 	.word	0x58022000
 8004df4:	52000040 	.word	0x52000040
 8004df8:	24005628 	.word	0x24005628

08004dfc <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 8004dfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e00:	460c      	mov	r4, r1
 8004e02:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8004e04:	2800      	cmp	r0, #0
 8004e06:	f040 8092 	bne.w	8004f2e <BSP_TS_Init+0x132>
 8004e0a:	680b      	ldr	r3, [r1, #0]
 8004e0c:	1e5a      	subs	r2, r3, #1
 8004e0e:	f5b2 7f20 	cmp.w	r2, #640	; 0x280
 8004e12:	f080 808c 	bcs.w	8004f2e <BSP_TS_Init+0x132>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8004e16:	684a      	ldr	r2, [r1, #4]
  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8004e18:	1e51      	subs	r1, r2, #1
 8004e1a:	f5b1 7ff0 	cmp.w	r1, #480	; 0x1e0
 8004e1e:	f080 8086 	bcs.w	8004f2e <BSP_TS_Init+0x132>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
 8004e22:	4293      	cmp	r3, r2
 8004e24:	bf28      	it	cs
 8004e26:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8004e28:	68e2      	ldr	r2, [r4, #12]
 8004e2a:	429a      	cmp	r2, r3
 8004e2c:	d87f      	bhi.n	8004f2e <BSP_TS_Init+0x132>
  EXC7200_IO_t              IOCtx;
  static EXC7200_Object_t   EXC7200Obj;
  uint32_t exc7200_id       = 0U;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_EXC7200_I2C_ADDRESS;
 8004e2e:	2308      	movs	r3, #8
  IOCtx.DeInit      = BSP_I2C1_DeInit;
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004e30:	4d40      	ldr	r5, [pc, #256]	; (8004f34 <BSP_TS_Init+0x138>)
  IOCtx.Init        = BSP_I2C1_Init;
 8004e32:	4e41      	ldr	r6, [pc, #260]	; (8004f38 <BSP_TS_Init+0x13c>)
  IOCtx.DeInit      = BSP_I2C1_DeInit;
 8004e34:	4f41      	ldr	r7, [pc, #260]	; (8004f3c <BSP_TS_Init+0x140>)
  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004e36:	eb0d 0103 	add.w	r1, sp, r3
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
 8004e3a:	f8df 811c 	ldr.w	r8, [pc, #284]	; 8004f58 <BSP_TS_Init+0x15c>
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
 8004e3e:	f8df 911c 	ldr.w	r9, [pc, #284]	; 8004f5c <BSP_TS_Init+0x160>
  IOCtx.GetTick     = BSP_GetTick;
 8004e42:	f8df a11c 	ldr.w	sl, [pc, #284]	; 8004f60 <BSP_TS_Init+0x164>
  uint32_t exc7200_id       = 0U;
 8004e46:	9001      	str	r0, [sp, #4]
  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004e48:	4628      	mov	r0, r5
  IOCtx.Address     = TS_EXC7200_I2C_ADDRESS;
 8004e4a:	f8ad 3010 	strh.w	r3, [sp, #16]
  IOCtx.Init        = BSP_I2C1_Init;
 8004e4e:	9602      	str	r6, [sp, #8]
  IOCtx.DeInit      = BSP_I2C1_DeInit;
 8004e50:	9703      	str	r7, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
 8004e52:	f8cd 8018 	str.w	r8, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
 8004e56:	f8cd 9014 	str.w	r9, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
 8004e5a:	f8cd a01c 	str.w	sl, [sp, #28]
  if(EXC7200_RegisterBusIO(&EXC7200Obj, &IOCtx) != EXC7200_OK)
 8004e5e:	f7fe fe2d 	bl	8003abc <EXC7200_RegisterBusIO>
 8004e62:	b1b0      	cbz	r0, 8004e92 <BSP_TS_Init+0x96>
static int32_t TS3510_Probe(uint32_t Instance)
{
  int32_t ret              = BSP_ERROR_NONE;
  TS3510_IO_t              IOCtx;
  static TS3510_Object_t   TS3510Obj;
  uint32_t ts3510_id       = 0U;
 8004e64:	2300      	movs	r3, #0
  IOCtx.DeInit      = BSP_I2C1_DeInit;
  IOCtx.ReadReg     = BSP_I2C1_ReadReg;
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(TS3510_RegisterBusIO(&TS3510Obj, &IOCtx) != TS3510_OK)
 8004e66:	4d36      	ldr	r5, [pc, #216]	; (8004f40 <BSP_TS_Init+0x144>)
 8004e68:	a902      	add	r1, sp, #8
  IOCtx.GetTick     = BSP_GetTick;
 8004e6a:	f8cd a01c 	str.w	sl, [sp, #28]
  uint32_t ts3510_id       = 0U;
 8004e6e:	9301      	str	r3, [sp, #4]
  IOCtx.Address     = TS_TS3510_I2C_ADDRESS;
 8004e70:	2380      	movs	r3, #128	; 0x80
  if(TS3510_RegisterBusIO(&TS3510Obj, &IOCtx) != TS3510_OK)
 8004e72:	4628      	mov	r0, r5
  IOCtx.Address     = TS_TS3510_I2C_ADDRESS;
 8004e74:	f8ad 3010 	strh.w	r3, [sp, #16]
  IOCtx.DeInit      = BSP_I2C1_DeInit;
 8004e78:	e9cd 6702 	strd	r6, r7, [sp, #8]
  IOCtx.WriteReg    = BSP_I2C1_WriteReg;
 8004e7c:	e9cd 9805 	strd	r9, r8, [sp, #20]
  if(TS3510_RegisterBusIO(&TS3510Obj, &IOCtx) != TS3510_OK)
 8004e80:	f7ff f99e 	bl	80041c0 <TS3510_RegisterBusIO>
 8004e84:	2800      	cmp	r0, #0
 8004e86:	d039      	beq.n	8004efc <BSP_TS_Init+0x100>
      ret = BSP_ERROR_UNKNOWN_COMPONENT;
 8004e88:	f06f 0006 	mvn.w	r0, #6
}
 8004e8c:	b008      	add	sp, #32
 8004e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  else if(EXC7200_ReadID(&EXC7200Obj, &exc7200_id) != EXC7200_OK)
 8004e92:	a901      	add	r1, sp, #4
 8004e94:	4628      	mov	r0, r5
 8004e96:	f7fe fd9c 	bl	80039d2 <EXC7200_ReadID>
 8004e9a:	2800      	cmp	r0, #0
 8004e9c:	d1e2      	bne.n	8004e64 <BSP_TS_Init+0x68>
  else if(exc7200_id != EXC7200_ID)
 8004e9e:	9b01      	ldr	r3, [sp, #4]
 8004ea0:	f5b3 4fe4 	cmp.w	r3, #29184	; 0x7200
 8004ea4:	d1de      	bne.n	8004e64 <BSP_TS_Init+0x68>
    Ts_CompObj[Instance] = &EXC7200Obj;
 8004ea6:	4b27      	ldr	r3, [pc, #156]	; (8004f44 <BSP_TS_Init+0x148>)
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != EXC7200_OK)
 8004ea8:	4628      	mov	r0, r5
    Ts_Drv = (TS_Drv_t *) &EXC7200_TS_Driver;
 8004eaa:	4a27      	ldr	r2, [pc, #156]	; (8004f48 <BSP_TS_Init+0x14c>)
    Ts_CompObj[Instance] = &EXC7200Obj;
 8004eac:	601d      	str	r5, [r3, #0]
    Ts_Drv = (TS_Drv_t *) &EXC7200_TS_Driver;
 8004eae:	4b27      	ldr	r3, [pc, #156]	; (8004f4c <BSP_TS_Init+0x150>)
 8004eb0:	6013      	str	r3, [r2, #0]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != EXC7200_OK)
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	4798      	blx	r3
 8004eb6:	2800      	cmp	r0, #0
 8004eb8:	d1d4      	bne.n	8004e64 <BSP_TS_Init+0x68>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8004eba:	6823      	ldr	r3, [r4, #0]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004ebc:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8004ebe:	4d24      	ldr	r5, [pc, #144]	; (8004f50 <BSP_TS_Init+0x154>)
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004ec0:	4a20      	ldr	r2, [pc, #128]	; (8004f44 <BSP_TS_Init+0x148>)
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8004ec2:	602b      	str	r3, [r5, #0]
      Ts_Ctx[Instance].Height            = TS_Init->Height;
 8004ec4:	6863      	ldr	r3, [r4, #4]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004ec6:	6810      	ldr	r0, [r2, #0]
      Ts_Ctx[Instance].Height            = TS_Init->Height;
 8004ec8:	606b      	str	r3, [r5, #4]
      Ts_Ctx[Instance].Orientation       = TS_Init->Orientation;
 8004eca:	68a3      	ldr	r3, [r4, #8]
 8004ecc:	60ab      	str	r3, [r5, #8]
      Ts_Ctx[Instance].Accuracy          = TS_Init->Accuracy;
 8004ece:	68e3      	ldr	r3, [r4, #12]
 8004ed0:	60eb      	str	r3, [r5, #12]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004ed2:	4b1d      	ldr	r3, [pc, #116]	; (8004f48 <BSP_TS_Init+0x14c>)
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	69db      	ldr	r3, [r3, #28]
 8004ed8:	4798      	blx	r3
 8004eda:	2800      	cmp	r0, #0
 8004edc:	db24      	blt.n	8004f28 <BSP_TS_Init+0x12c>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8004ede:	9b03      	ldr	r3, [sp, #12]
        Ts_Ctx[Instance].PreviousY[0] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004ee0:	2000      	movs	r0, #0
        Ts_Ctx[Instance].PreviousX[0] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004ee2:	6822      	ldr	r2, [r4, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8004ee4:	612b      	str	r3, [r5, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8004ee6:	9b04      	ldr	r3, [sp, #16]
 8004ee8:	616b      	str	r3, [r5, #20]
        Ts_Ctx[Instance].PreviousX[0] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004eea:	68e3      	ldr	r3, [r4, #12]
 8004eec:	441a      	add	r2, r3
 8004eee:	3201      	adds	r2, #1
 8004ef0:	61aa      	str	r2, [r5, #24]
        Ts_Ctx[Instance].PreviousY[0] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004ef2:	6862      	ldr	r2, [r4, #4]
 8004ef4:	4413      	add	r3, r2
 8004ef6:	3301      	adds	r3, #1
 8004ef8:	61eb      	str	r3, [r5, #28]
 8004efa:	e7c7      	b.n	8004e8c <BSP_TS_Init+0x90>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(TS3510_ReadID(&TS3510Obj, &ts3510_id) != TS3510_OK)
 8004efc:	a901      	add	r1, sp, #4
 8004efe:	4628      	mov	r0, r5
 8004f00:	f7ff f8b5 	bl	800406e <TS3510_ReadID>
 8004f04:	2800      	cmp	r0, #0
 8004f06:	d1bf      	bne.n	8004e88 <BSP_TS_Init+0x8c>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ts3510_id != TS3510_ID)
 8004f08:	9a01      	ldr	r2, [sp, #4]
 8004f0a:	f243 5310 	movw	r3, #13584	; 0x3510
 8004f0e:	429a      	cmp	r2, r3
 8004f10:	d1ba      	bne.n	8004e88 <BSP_TS_Init+0x8c>
  {
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &TS3510Obj;
 8004f12:	4b0c      	ldr	r3, [pc, #48]	; (8004f44 <BSP_TS_Init+0x148>)
    Ts_Drv = (TS_Drv_t *) &TS3510_TS_Driver;

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != TS3510_OK)
 8004f14:	4628      	mov	r0, r5
    Ts_Drv = (TS_Drv_t *) &TS3510_TS_Driver;
 8004f16:	4a0c      	ldr	r2, [pc, #48]	; (8004f48 <BSP_TS_Init+0x14c>)
    Ts_CompObj[Instance] = &TS3510Obj;
 8004f18:	601d      	str	r5, [r3, #0]
    Ts_Drv = (TS_Drv_t *) &TS3510_TS_Driver;
 8004f1a:	4b0e      	ldr	r3, [pc, #56]	; (8004f54 <BSP_TS_Init+0x158>)
 8004f1c:	6013      	str	r3, [r2, #0]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != TS3510_OK)
 8004f1e:	681b      	ldr	r3, [r3, #0]
 8004f20:	4798      	blx	r3
 8004f22:	2800      	cmp	r0, #0
 8004f24:	d0c9      	beq.n	8004eba <BSP_TS_Init+0xbe>
 8004f26:	e7af      	b.n	8004e88 <BSP_TS_Init+0x8c>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004f28:	f06f 0004 	mvn.w	r0, #4
 8004f2c:	e7ae      	b.n	8004e8c <BSP_TS_Init+0x90>
    ret = BSP_ERROR_WRONG_PARAM;
 8004f2e:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8004f32:	e7ab      	b.n	8004e8c <BSP_TS_Init+0x90>
 8004f34:	24005648 	.word	0x24005648
 8004f38:	080042a5 	.word	0x080042a5
 8004f3c:	08004215 	.word	0x08004215
 8004f40:	24005670 	.word	0x24005670
 8004f44:	24005698 	.word	0x24005698
 8004f48:	240056bc 	.word	0x240056bc
 8004f4c:	2400000c 	.word	0x2400000c
 8004f50:	2400569c 	.word	0x2400569c
 8004f54:	2400003c 	.word	0x2400003c
 8004f58:	08004589 	.word	0x08004589
 8004f5c:	08004555 	.word	0x08004555
 8004f60:	080045bd 	.word	0x080045bd

08004f64 <BSP_TS_GetState>:
{
 8004f64:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004f68:	460c      	mov	r4, r1
  if(Instance >= TS_INSTANCES_NBR)
 8004f6a:	2800      	cmp	r0, #0
 8004f6c:	d153      	bne.n	8005016 <BSP_TS_GetState+0xb2>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
 8004f6e:	4b2b      	ldr	r3, [pc, #172]	; (800501c <BSP_TS_GetState+0xb8>)
 8004f70:	a901      	add	r1, sp, #4
 8004f72:	4a2b      	ldr	r2, [pc, #172]	; (8005020 <BSP_TS_GetState+0xbc>)
 8004f74:	681b      	ldr	r3, [r3, #0]
 8004f76:	6810      	ldr	r0, [r2, #0]
 8004f78:	691b      	ldr	r3, [r3, #16]
 8004f7a:	4798      	blx	r3
 8004f7c:	2800      	cmp	r0, #0
 8004f7e:	db47      	blt.n	8005010 <BSP_TS_GetState+0xac>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 8004f80:	4928      	ldr	r1, [pc, #160]	; (8005024 <BSP_TS_GetState+0xc0>)
    else if(state.TouchDetected != 0U)
 8004f82:	9801      	ldr	r0, [sp, #4]
      y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
 8004f84:	e9d1 6506 	ldrd	r6, r5, [r1, #24]
    else if(state.TouchDetected != 0U)
 8004f88:	2800      	cmp	r0, #0
 8004f8a:	d03d      	beq.n	8005008 <BSP_TS_GetState+0xa4>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8004f8c:	f8d1 e008 	ldr.w	lr, [r1, #8]
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 8004f90:	f8d1 8010 	ldr.w	r8, [r1, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8004f94:	f01e 0f08 	tst.w	lr, #8
      y_oriented = state.TouchY;
 8004f98:	e9dd c702 	ldrd	ip, r7, [sp, #8]
        x_oriented = state.TouchY;
 8004f9c:	bf19      	ittee	ne
 8004f9e:	463b      	movne	r3, r7
        y_oriented = state.TouchX;
 8004fa0:	4662      	movne	r2, ip
      y_oriented = state.TouchY;
 8004fa2:	463a      	moveq	r2, r7
      x_oriented = state.TouchX;
 8004fa4:	4663      	moveq	r3, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
 8004fa6:	f01e 0f02 	tst.w	lr, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 8004faa:	bf1c      	itt	ne
 8004fac:	f108 33ff 	addne.w	r3, r8, #4294967295
 8004fb0:	eba3 030c 	subne.w	r3, r3, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004fb4:	f8d1 c014 	ldr.w	ip, [r1, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
 8004fb8:	f01e 0f04 	tst.w	lr, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004fbc:	bf18      	it	ne
 8004fbe:	ebac 0207 	subne.w	r2, ip, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004fc2:	680f      	ldr	r7, [r1, #0]
 8004fc4:	437b      	muls	r3, r7
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004fc6:	684f      	ldr	r7, [r1, #4]
      TS_State->TouchDetected = state.TouchDetected;
 8004fc8:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004fca:	437a      	muls	r2, r7
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004fcc:	68cf      	ldr	r7, [r1, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004fce:	fbb3 f3f8 	udiv	r3, r3, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004fd2:	fbb2 f2fc 	udiv	r2, r2, ip
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004fd6:	42b3      	cmp	r3, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004fd8:	6063      	str	r3, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004fda:	60a2      	str	r2, [r4, #8]
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004fdc:	bf8c      	ite	hi
 8004fde:	eba3 0c06 	subhi.w	ip, r3, r6
 8004fe2:	eba6 0c03 	subls.w	ip, r6, r3
               (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
 8004fe6:	42aa      	cmp	r2, r5
 8004fe8:	bf8c      	ite	hi
 8004fea:	1b50      	subhi	r0, r2, r5
 8004fec:	1aa8      	subls	r0, r5, r2
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004fee:	4567      	cmp	r7, ip
 8004ff0:	d301      	bcc.n	8004ff6 <BSP_TS_GetState+0x92>
 8004ff2:	4287      	cmp	r7, r0
 8004ff4:	d205      	bcs.n	8005002 <BSP_TS_GetState+0x9e>
        Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 8004ff6:	e9c1 3206 	strd	r3, r2, [r1, #24]
  int32_t ret = BSP_ERROR_NONE;
 8004ffa:	2000      	movs	r0, #0
}
 8004ffc:	b004      	add	sp, #16
 8004ffe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8005002:	e9c4 6501 	strd	r6, r5, [r4, #4]
 8005006:	e7f8      	b.n	8004ffa <BSP_TS_GetState+0x96>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
 8005008:	e9c4 0600 	strd	r0, r6, [r4]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 800500c:	60a5      	str	r5, [r4, #8]
 800500e:	e7f5      	b.n	8004ffc <BSP_TS_GetState+0x98>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 8005010:	f06f 0004 	mvn.w	r0, #4
 8005014:	e7f2      	b.n	8004ffc <BSP_TS_GetState+0x98>
    ret = BSP_ERROR_WRONG_PARAM;
 8005016:	f06f 0001 	mvn.w	r0, #1
  return ret;
 800501a:	e7ef      	b.n	8004ffc <BSP_TS_GetState+0x98>
 800501c:	240056bc 	.word	0x240056bc
 8005020:	24005698 	.word	0x24005698
 8005024:	2400569c 	.word	0x2400569c

08005028 <SystemInit>:
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8005028:	4918      	ldr	r1, [pc, #96]	; (800508c <SystemInit+0x64>)

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 800502a:	4819      	ldr	r0, [pc, #100]	; (8005090 <SystemInit+0x68>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 800502c:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8005030:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
{
 8005034:	b510      	push	{r4, lr}
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8005036:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
 800503a:	4b16      	ldr	r3, [pc, #88]	; (8005094 <SystemInit+0x6c>)
 800503c:	681a      	ldr	r2, [r3, #0]
 800503e:	f042 0201 	orr.w	r2, r2, #1
 8005042:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
 8005044:	2200      	movs	r2, #0
 8005046:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
 8005048:	681c      	ldr	r4, [r3, #0]
 800504a:	4020      	ands	r0, r4
 800504c:	6018      	str	r0, [r3, #0]

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 800504e:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 8005050:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8005052:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x00000000;
 8005054:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00000000;
 8005056:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x00000000;
 8005058:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 800505a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x00000000;
 800505c:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 800505e:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x00000000;
 8005060:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8005062:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8005064:	6818      	ldr	r0, [r3, #0]
 8005066:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
 800506a:	6018      	str	r0, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 800506c:	661a      	str	r2, [r3, #96]	; 0x60
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 800506e:	4b0a      	ldr	r3, [pc, #40]	; (8005098 <SystemInit+0x70>)
 8005070:	681b      	ldr	r3, [r3, #0]
 8005072:	0c1b      	lsrs	r3, r3, #16
 8005074:	041b      	lsls	r3, r3, #16
 8005076:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800507a:	d203      	bcs.n	8005084 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 800507c:	4b07      	ldr	r3, [pc, #28]	; (800509c <SystemInit+0x74>)
 800507e:	2201      	movs	r2, #1
 8005080:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005084:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8005088:	608b      	str	r3, [r1, #8]
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
 800508a:	bd10      	pop	{r4, pc}
 800508c:	e000ed00 	.word	0xe000ed00
 8005090:	eaf6ed7f 	.word	0xeaf6ed7f
 8005094:	58024400 	.word	0x58024400
 8005098:	5c001000 	.word	0x5c001000
 800509c:	51008000 	.word	0x51008000

080050a0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80050a0:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80050a2:	2003      	movs	r0, #3
 80050a4:	f000 f854 	bl	8005150 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 80050a8:	f001 ffac 	bl	8007004 <HAL_RCC_GetSysClockFreq>
 80050ac:	490f      	ldr	r1, [pc, #60]	; (80050ec <HAL_Init+0x4c>)
 80050ae:	4a10      	ldr	r2, [pc, #64]	; (80050f0 <HAL_Init+0x50>)
 80050b0:	698b      	ldr	r3, [r1, #24]
 80050b2:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80050b6:	5cd3      	ldrb	r3, [r2, r3]
 80050b8:	f003 031f 	and.w	r3, r3, #31
 80050bc:	40d8      	lsrs	r0, r3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80050be:	698b      	ldr	r3, [r1, #24]
 80050c0:	f003 030f 	and.w	r3, r3, #15
 80050c4:	5cd3      	ldrb	r3, [r2, r3]
 80050c6:	4a0b      	ldr	r2, [pc, #44]	; (80050f4 <HAL_Init+0x54>)
 80050c8:	f003 031f 	and.w	r3, r3, #31
 80050cc:	fa20 f303 	lsr.w	r3, r0, r3
 80050d0:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80050d2:	4b09      	ldr	r3, [pc, #36]	; (80050f8 <HAL_Init+0x58>)
 80050d4:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80050d6:	2000      	movs	r0, #0
 80050d8:	f7fc fe5e 	bl	8001d98 <HAL_InitTick>
 80050dc:	4604      	mov	r4, r0
 80050de:	b918      	cbnz	r0, 80050e8 <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80050e0:	f7fc fb90 	bl	8001804 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80050e4:	4620      	mov	r0, r4
 80050e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80050e8:	2401      	movs	r4, #1
 80050ea:	e7fb      	b.n	80050e4 <HAL_Init+0x44>
 80050ec:	58024400 	.word	0x58024400
 80050f0:	080232b0 	.word	0x080232b0
 80050f4:	24000070 	.word	0x24000070
 80050f8:	2400006c 	.word	0x2400006c

080050fc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 80050fc:	4a03      	ldr	r2, [pc, #12]	; (800510c <HAL_IncTick+0x10>)
 80050fe:	4b04      	ldr	r3, [pc, #16]	; (8005110 <HAL_IncTick+0x14>)
 8005100:	6811      	ldr	r1, [r2, #0]
 8005102:	781b      	ldrb	r3, [r3, #0]
 8005104:	440b      	add	r3, r1
 8005106:	6013      	str	r3, [r2, #0]
}
 8005108:	4770      	bx	lr
 800510a:	bf00      	nop
 800510c:	240056c0 	.word	0x240056c0
 8005110:	24000074 	.word	0x24000074

08005114 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005114:	4b01      	ldr	r3, [pc, #4]	; (800511c <HAL_GetTick+0x8>)
 8005116:	6818      	ldr	r0, [r3, #0]
}
 8005118:	4770      	bx	lr
 800511a:	bf00      	nop
 800511c:	240056c0 	.word	0x240056c0

08005120 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005120:	b538      	push	{r3, r4, r5, lr}
 8005122:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005124:	f7ff fff6 	bl	8005114 <HAL_GetTick>
 8005128:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800512a:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800512c:	bf1e      	ittt	ne
 800512e:	4b04      	ldrne	r3, [pc, #16]	; (8005140 <HAL_Delay+0x20>)
 8005130:	781b      	ldrbne	r3, [r3, #0]
 8005132:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8005134:	f7ff ffee 	bl	8005114 <HAL_GetTick>
 8005138:	1b43      	subs	r3, r0, r5
 800513a:	42a3      	cmp	r3, r4
 800513c:	d3fa      	bcc.n	8005134 <HAL_Delay+0x14>
  {
  }
}
 800513e:	bd38      	pop	{r3, r4, r5, pc}
 8005140:	24000074 	.word	0x24000074

08005144 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
 8005144:	4b01      	ldr	r3, [pc, #4]	; (800514c <HAL_GetREVID+0x8>)
 8005146:	6818      	ldr	r0, [r3, #0]
}
 8005148:	0c00      	lsrs	r0, r0, #16
 800514a:	4770      	bx	lr
 800514c:	5c001000 	.word	0x5c001000

08005150 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005150:	4907      	ldr	r1, [pc, #28]	; (8005170 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005152:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005154:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005156:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800515a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800515e:	0412      	lsls	r2, r2, #16
 8005160:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8005162:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8005164:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005168:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800516c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800516e:	4770      	bx	lr
 8005170:	e000ed00 	.word	0xe000ed00

08005174 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005174:	4b16      	ldr	r3, [pc, #88]	; (80051d0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8005176:	b530      	push	{r4, r5, lr}
 8005178:	68dc      	ldr	r4, [r3, #12]
 800517a:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800517e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005182:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005184:	2b04      	cmp	r3, #4
 8005186:	bf28      	it	cs
 8005188:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800518a:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800518c:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005190:	bf8c      	ite	hi
 8005192:	3c03      	subhi	r4, #3
 8005194:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005196:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 800519a:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800519c:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80051a0:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80051a4:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80051a8:	fa03 f304 	lsl.w	r3, r3, r4
 80051ac:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80051b0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80051b4:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 80051b6:	db06      	blt.n	80051c6 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80051b8:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80051bc:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 80051c0:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80051c4:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80051c6:	f000 000f 	and.w	r0, r0, #15
 80051ca:	4a02      	ldr	r2, [pc, #8]	; (80051d4 <HAL_NVIC_SetPriority+0x60>)
 80051cc:	5413      	strb	r3, [r2, r0]
 80051ce:	e7f9      	b.n	80051c4 <HAL_NVIC_SetPriority+0x50>
 80051d0:	e000ed00 	.word	0xe000ed00
 80051d4:	e000ed14 	.word	0xe000ed14

080051d8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80051d8:	2800      	cmp	r0, #0
 80051da:	db07      	blt.n	80051ec <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80051dc:	2301      	movs	r3, #1
 80051de:	0941      	lsrs	r1, r0, #5
 80051e0:	f000 001f 	and.w	r0, r0, #31
 80051e4:	4a02      	ldr	r2, [pc, #8]	; (80051f0 <HAL_NVIC_EnableIRQ+0x18>)
 80051e6:	4083      	lsls	r3, r0
 80051e8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80051ec:	4770      	bx	lr
 80051ee:	bf00      	nop
 80051f0:	e000e100 	.word	0xe000e100

080051f4 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80051f4:	2800      	cmp	r0, #0
 80051f6:	db0c      	blt.n	8005212 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80051f8:	0943      	lsrs	r3, r0, #5
 80051fa:	2201      	movs	r2, #1
 80051fc:	f000 001f 	and.w	r0, r0, #31
 8005200:	4904      	ldr	r1, [pc, #16]	; (8005214 <HAL_NVIC_DisableIRQ+0x20>)
 8005202:	3320      	adds	r3, #32
 8005204:	4082      	lsls	r2, r0
 8005206:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800520a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800520e:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8005212:	4770      	bx	lr
 8005214:	e000e100 	.word	0xe000e100

08005218 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8005218:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 800521c:	4b04      	ldr	r3, [pc, #16]	; (8005230 <HAL_MPU_Disable+0x18>)
 800521e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005220:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8005224:	625a      	str	r2, [r3, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8005226:	2200      	movs	r2, #0
 8005228:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
 800522c:	4770      	bx	lr
 800522e:	bf00      	nop
 8005230:	e000ed00 	.word	0xe000ed00

08005234 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8005234:	4b06      	ldr	r3, [pc, #24]	; (8005250 <HAL_MPU_Enable+0x1c>)
 8005236:	f040 0001 	orr.w	r0, r0, #1
 800523a:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 800523e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005240:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8005244:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8005246:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800524a:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 800524e:	4770      	bx	lr
 8005250:	e000ed00 	.word	0xe000ed00

08005254 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8005254:	7843      	ldrb	r3, [r0, #1]
 8005256:	4a14      	ldr	r2, [pc, #80]	; (80052a8 <HAL_MPU_ConfigRegion+0x54>)
{
 8005258:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 800525a:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
 800525e:	7801      	ldrb	r1, [r0, #0]
 8005260:	b1e9      	cbz	r1, 800529e <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 8005262:	6843      	ldr	r3, [r0, #4]
 8005264:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8005268:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 800526a:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 800526c:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 800526e:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005272:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8005274:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005276:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 800527a:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 800527c:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8005280:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005282:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8005286:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005288:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 800528c:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 800528e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005292:	7a01      	ldrb	r1, [r0, #8]
 8005294:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005298:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 800529c:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 800529e:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
 80052a2:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
 80052a6:	e7f9      	b.n	800529c <HAL_MPU_ConfigRegion+0x48>
 80052a8:	e000ed00 	.word	0xe000ed00

080052ac <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80052ac:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80052ae:	4604      	mov	r4, r0
 80052b0:	b908      	cbnz	r0, 80052b6 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 80052b2:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 80052b4:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 80052b6:	7f43      	ldrb	r3, [r0, #29]
 80052b8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80052bc:	b913      	cbnz	r3, 80052c4 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 80052be:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 80052c0:	f7fc fab8 	bl	8001834 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 80052c4:	2302      	movs	r3, #2
 80052c6:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80052c8:	7923      	ldrb	r3, [r4, #4]
 80052ca:	b9e3      	cbnz	r3, 8005306 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80052cc:	6823      	ldr	r3, [r4, #0]
 80052ce:	4a13      	ldr	r2, [pc, #76]	; (800531c <HAL_CRC_Init+0x70>)
 80052d0:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80052d2:	689a      	ldr	r2, [r3, #8]
 80052d4:	f022 0218 	bic.w	r2, r2, #24
 80052d8:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80052da:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80052dc:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80052de:	b9d2      	cbnz	r2, 8005316 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80052e0:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80052e4:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 80052e6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80052e8:	689a      	ldr	r2, [r3, #8]
 80052ea:	6961      	ldr	r1, [r4, #20]
 80052ec:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80052f0:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80052f2:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80052f4:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80052f6:	689a      	ldr	r2, [r3, #8]
 80052f8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80052fc:	430a      	orrs	r2, r1
 80052fe:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8005300:	2301      	movs	r3, #1
 8005302:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8005304:	e7d6      	b.n	80052b4 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8005306:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 800530a:	4620      	mov	r0, r4
 800530c:	f000 f808 	bl	8005320 <HAL_CRCEx_Polynomial_Set>
 8005310:	2800      	cmp	r0, #0
 8005312:	d0e2      	beq.n	80052da <HAL_CRC_Init+0x2e>
 8005314:	e7cd      	b.n	80052b2 <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005316:	6922      	ldr	r2, [r4, #16]
 8005318:	e7e4      	b.n	80052e4 <HAL_CRC_Init+0x38>
 800531a:	bf00      	nop
 800531c:	04c11db7 	.word	0x04c11db7

08005320 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8005320:	07cb      	lsls	r3, r1, #31
{
 8005322:	b510      	push	{r4, lr}
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8005324:	d50c      	bpl.n	8005340 <HAL_CRCEx_Polynomial_Set+0x20>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8005326:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8005328:	3b01      	subs	r3, #1
 800532a:	d31c      	bcc.n	8005366 <HAL_CRCEx_Polynomial_Set+0x46>
 800532c:	fa21 f403 	lsr.w	r4, r1, r3
 8005330:	07e4      	lsls	r4, r4, #31
 8005332:	d5f9      	bpl.n	8005328 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
 8005334:	2a10      	cmp	r2, #16
 8005336:	d012      	beq.n	800535e <HAL_CRCEx_Polynomial_Set+0x3e>
 8005338:	d804      	bhi.n	8005344 <HAL_CRCEx_Polynomial_Set+0x24>
 800533a:	b13a      	cbz	r2, 800534c <HAL_CRCEx_Polynomial_Set+0x2c>
 800533c:	2a08      	cmp	r2, #8
 800533e:	d010      	beq.n	8005362 <HAL_CRCEx_Polynomial_Set+0x42>
        }
        break;
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
        {
          status =   HAL_ERROR;
 8005340:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8005342:	e00b      	b.n	800535c <HAL_CRCEx_Polynomial_Set+0x3c>
    switch (PolyLength)
 8005344:	2a18      	cmp	r2, #24
 8005346:	d1fb      	bne.n	8005340 <HAL_CRCEx_Polynomial_Set+0x20>
        if (msb >= HAL_CRC_LENGTH_7B)
 8005348:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 800534a:	d8f9      	bhi.n	8005340 <HAL_CRCEx_Polynomial_Set+0x20>
    WRITE_REG(hcrc->Instance->POL, Pol);
 800534c:	6800      	ldr	r0, [r0, #0]
 800534e:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8005350:	6883      	ldr	r3, [r0, #8]
 8005352:	f023 0318 	bic.w	r3, r3, #24
 8005356:	4313      	orrs	r3, r2
 8005358:	6083      	str	r3, [r0, #8]
 800535a:	2000      	movs	r0, #0
}
 800535c:	bd10      	pop	{r4, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 800535e:	2b07      	cmp	r3, #7
 8005360:	e7f3      	b.n	800534a <HAL_CRCEx_Polynomial_Set+0x2a>
        if (msb >= HAL_CRC_LENGTH_16B)
 8005362:	2b0f      	cmp	r3, #15
 8005364:	e7f1      	b.n	800534a <HAL_CRCEx_Polynomial_Set+0x2a>
    switch (PolyLength)
 8005366:	2a00      	cmp	r2, #0
 8005368:	d1ea      	bne.n	8005340 <HAL_CRCEx_Polynomial_Set+0x20>
 800536a:	e7ef      	b.n	800534c <HAL_CRCEx_Polynomial_Set+0x2c>

0800536c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800536c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800536e:	4604      	mov	r4, r0
 8005370:	2800      	cmp	r0, #0
 8005372:	d036      	beq.n	80053e2 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005374:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
 8005378:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800537c:	b91b      	cbnz	r3, 8005386 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800537e:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005382:	f7fc fa6f 	bl	8001864 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005386:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005388:	69e0      	ldr	r0, [r4, #28]
 800538a:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800538c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005390:	6823      	ldr	r3, [r4, #0]
 8005392:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8005394:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005396:	6819      	ldr	r1, [r3, #0]
 8005398:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 800539c:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 80053a0:	430a      	orrs	r2, r1
 80053a2:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 80053a4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80053a6:	68a2      	ldr	r2, [r4, #8]
 80053a8:	f421 7183 	bic.w	r1, r1, #262	; 0x106
 80053ac:	4302      	orrs	r2, r0
 80053ae:	f021 0101 	bic.w	r1, r1, #1
 80053b2:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80053b4:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 80053b6:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80053b8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80053ba:	0c12      	lsrs	r2, r2, #16
 80053bc:	0412      	lsls	r2, r2, #16
 80053be:	430a      	orrs	r2, r1
 80053c0:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 80053c2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80053c4:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 80053c8:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 80053cc:	0552      	lsls	r2, r2, #21
 80053ce:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80053d2:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 80053d4:	430a      	orrs	r2, r1
 80053d6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80053d8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80053da:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80053dc:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
 80053e0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80053e2:	2001      	movs	r0, #1
 80053e4:	e7fc      	b.n	80053e0 <HAL_DMA2D_Init+0x74>

080053e6 <HAL_DMA2D_LineEventCallback>:
 80053e6:	4770      	bx	lr

080053e8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80053e8:	4770      	bx	lr

080053ea <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80053ea:	6803      	ldr	r3, [r0, #0]
{
 80053ec:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80053ee:	685e      	ldr	r6, [r3, #4]
{
 80053f0:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80053f2:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80053f4:	07f2      	lsls	r2, r6, #31
 80053f6:	d514      	bpl.n	8005422 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80053f8:	05e9      	lsls	r1, r5, #23
 80053fa:	d512      	bpl.n	8005422 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80053fc:	681a      	ldr	r2, [r3, #0]
 80053fe:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005402:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005404:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8005406:	f042 0201 	orr.w	r2, r2, #1
 800540a:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800540c:	2201      	movs	r2, #1
 800540e:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005410:	2304      	movs	r3, #4
 8005412:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005416:	2300      	movs	r3, #0
 8005418:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 800541c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800541e:	b103      	cbz	r3, 8005422 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005420:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005422:	06b2      	lsls	r2, r6, #26
 8005424:	d516      	bpl.n	8005454 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005426:	04ab      	lsls	r3, r5, #18
 8005428:	d514      	bpl.n	8005454 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800542a:	6823      	ldr	r3, [r4, #0]
 800542c:	681a      	ldr	r2, [r3, #0]
 800542e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005432:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005434:	2220      	movs	r2, #32
 8005436:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005438:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800543a:	f043 0302 	orr.w	r3, r3, #2
 800543e:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005440:	2304      	movs	r3, #4
 8005442:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005446:	2300      	movs	r3, #0
 8005448:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 800544c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800544e:	b10b      	cbz	r3, 8005454 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005450:	4620      	mov	r0, r4
 8005452:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005454:	0730      	lsls	r0, r6, #28
 8005456:	d516      	bpl.n	8005486 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005458:	0529      	lsls	r1, r5, #20
 800545a:	d514      	bpl.n	8005486 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800545c:	6823      	ldr	r3, [r4, #0]
 800545e:	681a      	ldr	r2, [r3, #0]
 8005460:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005464:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005466:	2208      	movs	r2, #8
 8005468:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800546a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800546c:	f043 0304 	orr.w	r3, r3, #4
 8005470:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005472:	2304      	movs	r3, #4
 8005474:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005478:	2300      	movs	r3, #0
 800547a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 800547e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005480:	b10b      	cbz	r3, 8005486 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005482:	4620      	mov	r0, r4
 8005484:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005486:	0772      	lsls	r2, r6, #29
 8005488:	d50b      	bpl.n	80054a2 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800548a:	056b      	lsls	r3, r5, #21
 800548c:	d509      	bpl.n	80054a2 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800548e:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005490:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005492:	681a      	ldr	r2, [r3, #0]
 8005494:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005498:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800549a:	2204      	movs	r2, #4
 800549c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800549e:	f7ff ffa2 	bl	80053e6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80054a2:	07b0      	lsls	r0, r6, #30
 80054a4:	d514      	bpl.n	80054d0 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80054a6:	05a9      	lsls	r1, r5, #22
 80054a8:	d512      	bpl.n	80054d0 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80054aa:	6823      	ldr	r3, [r4, #0]
 80054ac:	681a      	ldr	r2, [r3, #0]
 80054ae:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80054b2:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80054b4:	2202      	movs	r2, #2
 80054b6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80054b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80054ba:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80054bc:	2301      	movs	r3, #1
 80054be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80054c2:	2300      	movs	r3, #0
 80054c4:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 80054c8:	6a23      	ldr	r3, [r4, #32]
 80054ca:	b10b      	cbz	r3, 80054d0 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80054cc:	4620      	mov	r0, r4
 80054ce:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80054d0:	06f2      	lsls	r2, r6, #27
 80054d2:	d513      	bpl.n	80054fc <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80054d4:	04eb      	lsls	r3, r5, #19
 80054d6:	d511      	bpl.n	80054fc <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80054d8:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80054da:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80054dc:	681a      	ldr	r2, [r3, #0]
 80054de:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80054e2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80054e4:	2210      	movs	r2, #16
 80054e6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80054e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80054ea:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80054ec:	2301      	movs	r3, #1
 80054ee:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
 80054f2:	2300      	movs	r3, #0
 80054f4:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80054f8:	f7ff ff76 	bl	80053e8 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80054fc:	bd70      	pop	{r4, r5, r6, pc}
	...

08005500 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005500:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8005504:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005506:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 80056d0 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 800550a:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 800550e:	680a      	ldr	r2, [r1, #0]
 8005510:	fa32 f503 	lsrs.w	r5, r2, r3
 8005514:	d102      	bne.n	800551c <HAL_GPIO_Init+0x1c>
      }
    }

    position++;
  }
}
 8005516:	b003      	add	sp, #12
 8005518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 800551c:	f04f 0e01 	mov.w	lr, #1
 8005520:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00U)
 8005524:	ea1e 0202 	ands.w	r2, lr, r2
 8005528:	f000 80bc 	beq.w	80056a4 <HAL_GPIO_Init+0x1a4>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800552c:	684e      	ldr	r6, [r1, #4]
 800552e:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8005532:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005536:	f006 0503 	and.w	r5, r6, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 800553a:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800553e:	1e6f      	subs	r7, r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8005540:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005544:	2f01      	cmp	r7, #1
 8005546:	d834      	bhi.n	80055b2 <HAL_GPIO_Init+0xb2>
        temp = GPIOx->OSPEEDR;
 8005548:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 800554a:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 800554e:	68cf      	ldr	r7, [r1, #12]
 8005550:	fa07 f708 	lsl.w	r7, r7, r8
 8005554:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8005558:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800555a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 800555c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005560:	f3c6 1700 	ubfx	r7, r6, #4, #1
 8005564:	409f      	lsls	r7, r3
 8005566:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800556a:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 800556c:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800556e:	2d02      	cmp	r5, #2
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8005570:	ea07 0e0c 	and.w	lr, r7, ip
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005574:	688f      	ldr	r7, [r1, #8]
 8005576:	fa07 f708 	lsl.w	r7, r7, r8
 800557a:	ea47 070e 	orr.w	r7, r7, lr
      GPIOx->PUPDR = temp;
 800557e:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005580:	d119      	bne.n	80055b6 <HAL_GPIO_Init+0xb6>
        temp = GPIOx->AFR[position >> 3U];
 8005582:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8005586:	f003 0b07 	and.w	fp, r3, #7
 800558a:	f04f 0e0f 	mov.w	lr, #15
 800558e:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 8005592:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
 8005596:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 800559a:	fa0e fe0b 	lsl.w	lr, lr, fp
 800559e:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 80055a2:	690f      	ldr	r7, [r1, #16]
 80055a4:	fa07 f70b 	lsl.w	r7, r7, fp
 80055a8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80055ac:	f8ca 7020 	str.w	r7, [sl, #32]
 80055b0:	e001      	b.n	80055b6 <HAL_GPIO_Init+0xb6>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80055b2:	2d03      	cmp	r5, #3
 80055b4:	d1da      	bne.n	800556c <HAL_GPIO_Init+0x6c>
      temp = GPIOx->MODER;
 80055b6:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80055b8:	fa05 f508 	lsl.w	r5, r5, r8
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80055bc:	f416 3f40 	tst.w	r6, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 80055c0:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80055c4:	ea45 0507 	orr.w	r5, r5, r7
      GPIOx->MODER = temp;
 80055c8:	6005      	str	r5, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80055ca:	d06b      	beq.n	80056a4 <HAL_GPIO_Init+0x1a4>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80055cc:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 80055d0:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80055d4:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80055d8:	f045 0502 	orr.w	r5, r5, #2
 80055dc:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80055e0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80055e4:	f8c9 50f4 	str.w	r5, [r9, #244]	; 0xf4
 80055e8:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80055ec:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 80055f0:	f005 0502 	and.w	r5, r5, #2
 80055f4:	9501      	str	r5, [sp, #4]
 80055f6:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80055f8:	250f      	movs	r5, #15
        temp = SYSCFG->EXTICR[position >> 2U];
 80055fa:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80055fe:	fa05 f50c 	lsl.w	r5, r5, ip
 8005602:	ea2e 0e05 	bic.w	lr, lr, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005606:	4d31      	ldr	r5, [pc, #196]	; (80056cc <HAL_GPIO_Init+0x1cc>)
 8005608:	42a8      	cmp	r0, r5
 800560a:	d04d      	beq.n	80056a8 <HAL_GPIO_Init+0x1a8>
 800560c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005610:	42a8      	cmp	r0, r5
 8005612:	d04b      	beq.n	80056ac <HAL_GPIO_Init+0x1ac>
 8005614:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005618:	42a8      	cmp	r0, r5
 800561a:	d049      	beq.n	80056b0 <HAL_GPIO_Init+0x1b0>
 800561c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005620:	42a8      	cmp	r0, r5
 8005622:	d047      	beq.n	80056b4 <HAL_GPIO_Init+0x1b4>
 8005624:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005628:	42a8      	cmp	r0, r5
 800562a:	d045      	beq.n	80056b8 <HAL_GPIO_Init+0x1b8>
 800562c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005630:	42a8      	cmp	r0, r5
 8005632:	d043      	beq.n	80056bc <HAL_GPIO_Init+0x1bc>
 8005634:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005638:	42a8      	cmp	r0, r5
 800563a:	d041      	beq.n	80056c0 <HAL_GPIO_Init+0x1c0>
 800563c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005640:	42a8      	cmp	r0, r5
 8005642:	d03f      	beq.n	80056c4 <HAL_GPIO_Init+0x1c4>
 8005644:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005648:	42a8      	cmp	r0, r5
 800564a:	d03d      	beq.n	80056c8 <HAL_GPIO_Init+0x1c8>
 800564c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005650:	42a8      	cmp	r0, r5
 8005652:	bf0c      	ite	eq
 8005654:	2509      	moveq	r5, #9
 8005656:	250a      	movne	r5, #10
 8005658:	fa05 f50c 	lsl.w	r5, r5, ip
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800565c:	f416 1f80 	tst.w	r6, #1048576	; 0x100000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005660:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005664:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
 8005666:	ea6f 0702 	mvn.w	r7, r2
        temp = EXTI->RTSR1;
 800566a:	6825      	ldr	r5, [r4, #0]
        temp &= ~(iocurrent);
 800566c:	bf0c      	ite	eq
 800566e:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8005670:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005672:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
 8005676:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 8005678:	6865      	ldr	r5, [r4, #4]
        temp &= ~(iocurrent);
 800567a:	bf0c      	ite	eq
 800567c:	403d      	andeq	r5, r7
          temp |= iocurrent;
 800567e:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005680:	f416 3f00 	tst.w	r6, #131072	; 0x20000
        EXTI->FTSR1 = temp;
 8005684:	6065      	str	r5, [r4, #4]
        temp = EXTI_CurrentCPU->EMR1;
 8005686:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
        temp &= ~(iocurrent);
 800568a:	bf0c      	ite	eq
 800568c:	403d      	andeq	r5, r7
          temp |= iocurrent;
 800568e:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005690:	03f6      	lsls	r6, r6, #15
        EXTI_CurrentCPU->EMR1 = temp;
 8005692:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
 8005696:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
        temp &= ~(iocurrent);
 800569a:	bf54      	ite	pl
 800569c:	403d      	andpl	r5, r7
          temp |= iocurrent;
 800569e:	4315      	orrmi	r5, r2
        EXTI_CurrentCPU->IMR1 = temp;
 80056a0:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    position++;
 80056a4:	3301      	adds	r3, #1
 80056a6:	e732      	b.n	800550e <HAL_GPIO_Init+0xe>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80056a8:	2500      	movs	r5, #0
 80056aa:	e7d5      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056ac:	2501      	movs	r5, #1
 80056ae:	e7d3      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056b0:	2502      	movs	r5, #2
 80056b2:	e7d1      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056b4:	2503      	movs	r5, #3
 80056b6:	e7cf      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056b8:	2504      	movs	r5, #4
 80056ba:	e7cd      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056bc:	2505      	movs	r5, #5
 80056be:	e7cb      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056c0:	2506      	movs	r5, #6
 80056c2:	e7c9      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056c4:	2507      	movs	r5, #7
 80056c6:	e7c7      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056c8:	2508      	movs	r5, #8
 80056ca:	e7c5      	b.n	8005658 <HAL_GPIO_Init+0x158>
 80056cc:	58020000 	.word	0x58020000
 80056d0:	58024400 	.word	0x58024400

080056d4 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 80056d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 80056d8:	2200      	movs	r2, #0
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80056da:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8005804 <HAL_GPIO_DeInit+0x130>
 80056de:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8005808 <HAL_GPIO_DeInit+0x134>
 80056e2:	f8df a128 	ldr.w	sl, [pc, #296]	; 800580c <HAL_GPIO_DeInit+0x138>
 80056e6:	f8df b128 	ldr.w	fp, [pc, #296]	; 8005810 <HAL_GPIO_DeInit+0x13c>
  while ((GPIO_Pin >> position) != 0x00U)
 80056ea:	fa31 f302 	lsrs.w	r3, r1, r2
 80056ee:	d101      	bne.n	80056f4 <HAL_GPIO_DeInit+0x20>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
 80056f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
 80056f4:	2301      	movs	r3, #1
 80056f6:	fa03 fc02 	lsl.w	ip, r3, r2
    if (iocurrent != 0x00U)
 80056fa:	ea1c 0601 	ands.w	r6, ip, r1
 80056fe:	d06b      	beq.n	80057d8 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005700:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8005704:	f002 0703 	and.w	r7, r2, #3
 8005708:	250f      	movs	r5, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 800570a:	4b3d      	ldr	r3, [pc, #244]	; (8005800 <HAL_GPIO_DeInit+0x12c>)
 800570c:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8005710:	00bf      	lsls	r7, r7, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8005712:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8005714:	fa05 f507 	lsl.w	r5, r5, r7
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005718:	f8d4 e408 	ldr.w	lr, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 800571c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005720:	ea05 0e0e 	and.w	lr, r5, lr
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8005724:	d05a      	beq.n	80057dc <HAL_GPIO_DeInit+0x108>
 8005726:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800572a:	4298      	cmp	r0, r3
 800572c:	d058      	beq.n	80057e0 <HAL_GPIO_DeInit+0x10c>
 800572e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005732:	4298      	cmp	r0, r3
 8005734:	d056      	beq.n	80057e4 <HAL_GPIO_DeInit+0x110>
 8005736:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800573a:	4298      	cmp	r0, r3
 800573c:	d054      	beq.n	80057e8 <HAL_GPIO_DeInit+0x114>
 800573e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005742:	4298      	cmp	r0, r3
 8005744:	d052      	beq.n	80057ec <HAL_GPIO_DeInit+0x118>
 8005746:	4540      	cmp	r0, r8
 8005748:	d052      	beq.n	80057f0 <HAL_GPIO_DeInit+0x11c>
 800574a:	4548      	cmp	r0, r9
 800574c:	d052      	beq.n	80057f4 <HAL_GPIO_DeInit+0x120>
 800574e:	4550      	cmp	r0, sl
 8005750:	d052      	beq.n	80057f8 <HAL_GPIO_DeInit+0x124>
 8005752:	4558      	cmp	r0, fp
 8005754:	d052      	beq.n	80057fc <HAL_GPIO_DeInit+0x128>
 8005756:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 800575a:	4298      	cmp	r0, r3
 800575c:	bf0c      	ite	eq
 800575e:	2309      	moveq	r3, #9
 8005760:	230a      	movne	r3, #10
 8005762:	40bb      	lsls	r3, r7
 8005764:	4573      	cmp	r3, lr
 8005766:	d119      	bne.n	800579c <HAL_GPIO_DeInit+0xc8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 8005768:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800576c:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
 8005770:	ea27 0706 	bic.w	r7, r7, r6
 8005774:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 8005778:	f8d3 7084 	ldr.w	r7, [r3, #132]	; 0x84
 800577c:	ea27 0706 	bic.w	r7, r7, r6
 8005780:	f8c3 7084 	str.w	r7, [r3, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 8005784:	685f      	ldr	r7, [r3, #4]
 8005786:	ea27 0706 	bic.w	r7, r7, r6
 800578a:	605f      	str	r7, [r3, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 800578c:	681f      	ldr	r7, [r3, #0]
 800578e:	ea27 0706 	bic.w	r7, r7, r6
 8005792:	601f      	str	r7, [r3, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8005794:	68a3      	ldr	r3, [r4, #8]
 8005796:	ea23 0305 	bic.w	r3, r3, r5
 800579a:	60a3      	str	r3, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 800579c:	0055      	lsls	r5, r2, #1
 800579e:	2303      	movs	r3, #3
 80057a0:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 80057a2:	f002 0707 	and.w	r7, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 80057a6:	40ab      	lsls	r3, r5
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 80057a8:	260f      	movs	r6, #15
 80057aa:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 80057ac:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 80057ae:	40be      	lsls	r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 80057b0:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 80057b2:	08d4      	lsrs	r4, r2, #3
 80057b4:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 80057b8:	6a25      	ldr	r5, [r4, #32]
 80057ba:	ea25 0506 	bic.w	r5, r5, r6
 80057be:	6225      	str	r5, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80057c0:	68c4      	ldr	r4, [r0, #12]
 80057c2:	ea24 0403 	bic.w	r4, r4, r3
 80057c6:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 80057c8:	6844      	ldr	r4, [r0, #4]
 80057ca:	ea24 040c 	bic.w	r4, r4, ip
 80057ce:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80057d0:	6884      	ldr	r4, [r0, #8]
 80057d2:	ea24 0303 	bic.w	r3, r4, r3
 80057d6:	6083      	str	r3, [r0, #8]
    position++;
 80057d8:	3201      	adds	r2, #1
 80057da:	e786      	b.n	80056ea <HAL_GPIO_DeInit+0x16>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80057dc:	2300      	movs	r3, #0
 80057de:	e7c0      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057e0:	2301      	movs	r3, #1
 80057e2:	e7be      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057e4:	2302      	movs	r3, #2
 80057e6:	e7bc      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057e8:	2303      	movs	r3, #3
 80057ea:	e7ba      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057ec:	2304      	movs	r3, #4
 80057ee:	e7b8      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057f0:	2305      	movs	r3, #5
 80057f2:	e7b6      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057f4:	2306      	movs	r3, #6
 80057f6:	e7b4      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057f8:	2307      	movs	r3, #7
 80057fa:	e7b2      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 80057fc:	2308      	movs	r3, #8
 80057fe:	e7b0      	b.n	8005762 <HAL_GPIO_DeInit+0x8e>
 8005800:	58020000 	.word	0x58020000
 8005804:	58021400 	.word	0x58021400
 8005808:	58021800 	.word	0x58021800
 800580c:	58021c00 	.word	0x58021c00
 8005810:	58022000 	.word	0x58022000

08005814 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 8005814:	6903      	ldr	r3, [r0, #16]
 8005816:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005818:	bf14      	ite	ne
 800581a:	2001      	movne	r0, #1
 800581c:	2000      	moveq	r0, #0
 800581e:	4770      	bx	lr

08005820 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005820:	b10a      	cbz	r2, 8005826 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005822:	6181      	str	r1, [r0, #24]
  }
}
 8005824:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005826:	0409      	lsls	r1, r1, #16
 8005828:	e7fb      	b.n	8005822 <HAL_GPIO_WritePin+0x2>

0800582a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800582a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800582c:	ea01 0203 	and.w	r2, r1, r3
 8005830:	ea21 0103 	bic.w	r1, r1, r3
 8005834:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005838:	6181      	str	r1, [r0, #24]
}
 800583a:	4770      	bx	lr

0800583c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 800583c:	6803      	ldr	r3, [r0, #0]
 800583e:	699a      	ldr	r2, [r3, #24]
 8005840:	0791      	lsls	r1, r2, #30
 8005842:	d501      	bpl.n	8005848 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8005844:	2200      	movs	r2, #0
 8005846:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005848:	699a      	ldr	r2, [r3, #24]
 800584a:	07d2      	lsls	r2, r2, #31
 800584c:	d403      	bmi.n	8005856 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 800584e:	699a      	ldr	r2, [r3, #24]
 8005850:	f042 0201 	orr.w	r2, r2, #1
 8005854:	619a      	str	r2, [r3, #24]
  }
}
 8005856:	4770      	bx	lr

08005858 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8005858:	b530      	push	{r4, r5, lr}
 800585a:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800585c:	f3c1 0109 	ubfx	r1, r1, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8005860:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005862:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8005864:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005866:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 800586a:	4a05      	ldr	r2, [pc, #20]	; (8005880 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800586c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 800586e:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005872:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8005876:	ea20 0002 	bic.w	r0, r0, r2
 800587a:	4303      	orrs	r3, r0
 800587c:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 800587e:	bd30      	pop	{r4, r5, pc}
 8005880:	03ff63ff 	.word	0x03ff63ff

08005884 <I2C_IsErrorOccurred>:
  uint32_t itflag   = hi2c->Instance->ISR;
 8005884:	6803      	ldr	r3, [r0, #0]
{
 8005886:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 800588a:	699c      	ldr	r4, [r3, #24]
{
 800588c:	4605      	mov	r5, r0
 800588e:	460f      	mov	r7, r1
 8005890:	4616      	mov	r6, r2
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8005892:	f014 0410 	ands.w	r4, r4, #16
 8005896:	d06f      	beq.n	8005978 <I2C_IsErrorOccurred+0xf4>
  uint32_t error_code = 0;
 8005898:	2400      	movs	r4, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800589a:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 800589c:	46a0      	mov	r8, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800589e:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80058a0:	682b      	ldr	r3, [r5, #0]
 80058a2:	699a      	ldr	r2, [r3, #24]
 80058a4:	0690      	lsls	r0, r2, #26
 80058a6:	d461      	bmi.n	800596c <I2C_IsErrorOccurred+0xe8>
 80058a8:	f1b8 0f00 	cmp.w	r8, #0
 80058ac:	d035      	beq.n	800591a <I2C_IsErrorOccurred+0x96>
    error_code |= HAL_I2C_ERROR_AF;
 80058ae:	f044 0404 	orr.w	r4, r4, #4
    status = HAL_ERROR;
 80058b2:	2001      	movs	r0, #1
  itflag = hi2c->Instance->ISR;
 80058b4:	682e      	ldr	r6, [r5, #0]
 80058b6:	69b3      	ldr	r3, [r6, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80058b8:	05d9      	lsls	r1, r3, #23
 80058ba:	d505      	bpl.n	80058c8 <I2C_IsErrorOccurred+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80058bc:	f44f 7280 	mov.w	r2, #256	; 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 80058c0:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 80058c4:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80058c6:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80058c8:	055a      	lsls	r2, r3, #21
 80058ca:	d505      	bpl.n	80058d8 <I2C_IsErrorOccurred+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80058cc:	f44f 6280 	mov.w	r2, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 80058d0:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 80058d4:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80058d6:	61f2      	str	r2, [r6, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80058d8:	059b      	lsls	r3, r3, #22
 80058da:	d54f      	bpl.n	800597c <I2C_IsErrorOccurred+0xf8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80058dc:	f44f 7300 	mov.w	r3, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 80058e0:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80058e4:	61f3      	str	r3, [r6, #28]
    I2C_Flush_TXDR(hi2c);
 80058e6:	4628      	mov	r0, r5
 80058e8:	f7ff ffa8 	bl	800583c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 80058ec:	6873      	ldr	r3, [r6, #4]
    __HAL_UNLOCK(hi2c);
 80058ee:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 80058f0:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 80058f4:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 80058f8:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 80058fc:	f023 0301 	bic.w	r3, r3, #1
 8005900:	6073      	str	r3, [r6, #4]
    hi2c->ErrorCode |= error_code;
 8005902:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8005904:	4323      	orrs	r3, r4
 8005906:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8005908:	2320      	movs	r3, #32
 800590a:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800590e:	2300      	movs	r3, #0
 8005910:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8005914:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 8005918:	e032      	b.n	8005980 <I2C_IsErrorOccurred+0xfc>
      if (Timeout != HAL_MAX_DELAY)
 800591a:	1c7a      	adds	r2, r7, #1
 800591c:	d0c1      	beq.n	80058a2 <I2C_IsErrorOccurred+0x1e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800591e:	f7ff fbf9 	bl	8005114 <HAL_GetTick>
 8005922:	1b80      	subs	r0, r0, r6
 8005924:	42b8      	cmp	r0, r7
 8005926:	d801      	bhi.n	800592c <I2C_IsErrorOccurred+0xa8>
 8005928:	2f00      	cmp	r7, #0
 800592a:	d1b9      	bne.n	80058a0 <I2C_IsErrorOccurred+0x1c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 800592c:	682b      	ldr	r3, [r5, #0]
 800592e:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8005930:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005934:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8005936:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005938:	0400      	lsls	r0, r0, #16
 800593a:	d50a      	bpl.n	8005952 <I2C_IsErrorOccurred+0xce>
 800593c:	0449      	lsls	r1, r1, #17
 800593e:	d408      	bmi.n	8005952 <I2C_IsErrorOccurred+0xce>
              (tmp1 != I2C_CR2_STOP) && \
 8005940:	2a20      	cmp	r2, #32
 8005942:	d006      	beq.n	8005952 <I2C_IsErrorOccurred+0xce>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8005944:	685a      	ldr	r2, [r3, #4]
 8005946:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800594a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 800594c:	f7ff fbe2 	bl	8005114 <HAL_GetTick>
 8005950:	4606      	mov	r6, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005952:	682b      	ldr	r3, [r5, #0]
 8005954:	699b      	ldr	r3, [r3, #24]
 8005956:	069b      	lsls	r3, r3, #26
 8005958:	d4a2      	bmi.n	80058a0 <I2C_IsErrorOccurred+0x1c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 800595a:	f7ff fbdb 	bl	8005114 <HAL_GetTick>
 800595e:	1b80      	subs	r0, r0, r6
 8005960:	2819      	cmp	r0, #25
 8005962:	d9f6      	bls.n	8005952 <I2C_IsErrorOccurred+0xce>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8005964:	2420      	movs	r4, #32
              status = HAL_ERROR;
 8005966:	f04f 0801 	mov.w	r8, #1
 800596a:	e799      	b.n	80058a0 <I2C_IsErrorOccurred+0x1c>
    if (status == HAL_OK)
 800596c:	f1b8 0f00 	cmp.w	r8, #0
 8005970:	d19d      	bne.n	80058ae <I2C_IsErrorOccurred+0x2a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005972:	2220      	movs	r2, #32
 8005974:	61da      	str	r2, [r3, #28]
 8005976:	e79a      	b.n	80058ae <I2C_IsErrorOccurred+0x2a>
  HAL_StatusTypeDef status = HAL_OK;
 8005978:	4620      	mov	r0, r4
 800597a:	e79b      	b.n	80058b4 <I2C_IsErrorOccurred+0x30>
  if (status != HAL_OK)
 800597c:	2800      	cmp	r0, #0
 800597e:	d1b2      	bne.n	80058e6 <I2C_IsErrorOccurred+0x62>
}
 8005980:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005984 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8005984:	b570      	push	{r4, r5, r6, lr}
 8005986:	4604      	mov	r4, r0
 8005988:	460d      	mov	r5, r1
 800598a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 800598c:	6823      	ldr	r3, [r4, #0]
 800598e:	699b      	ldr	r3, [r3, #24]
 8005990:	079b      	lsls	r3, r3, #30
 8005992:	d501      	bpl.n	8005998 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8005994:	2000      	movs	r0, #0
}
 8005996:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005998:	4632      	mov	r2, r6
 800599a:	4629      	mov	r1, r5
 800599c:	4620      	mov	r0, r4
 800599e:	f7ff ff71 	bl	8005884 <I2C_IsErrorOccurred>
 80059a2:	b9c0      	cbnz	r0, 80059d6 <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 80059a4:	1c6a      	adds	r2, r5, #1
 80059a6:	d0f1      	beq.n	800598c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80059a8:	f7ff fbb4 	bl	8005114 <HAL_GetTick>
 80059ac:	1b80      	subs	r0, r0, r6
 80059ae:	42a8      	cmp	r0, r5
 80059b0:	d801      	bhi.n	80059b6 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 80059b2:	2d00      	cmp	r5, #0
 80059b4:	d1ea      	bne.n	800598c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 80059b6:	6823      	ldr	r3, [r4, #0]
 80059b8:	699b      	ldr	r3, [r3, #24]
 80059ba:	f013 0302 	ands.w	r3, r3, #2
 80059be:	d1e5      	bne.n	800598c <I2C_WaitOnTXISFlagUntilTimeout+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80059c0:	6c62      	ldr	r2, [r4, #68]	; 0x44
          __HAL_UNLOCK(hi2c);
 80059c2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80059c6:	f042 0220 	orr.w	r2, r2, #32
 80059ca:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80059cc:	2220      	movs	r2, #32
 80059ce:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80059d2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 80059d6:	2001      	movs	r0, #1
 80059d8:	e7dd      	b.n	8005996 <I2C_WaitOnTXISFlagUntilTimeout+0x12>

080059da <I2C_WaitOnFlagUntilTimeout>:
{
 80059da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80059de:	9f06      	ldr	r7, [sp, #24]
 80059e0:	4604      	mov	r4, r0
 80059e2:	4688      	mov	r8, r1
 80059e4:	4616      	mov	r6, r2
 80059e6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80059e8:	6822      	ldr	r2, [r4, #0]
 80059ea:	6993      	ldr	r3, [r2, #24]
 80059ec:	ea38 0303 	bics.w	r3, r8, r3
 80059f0:	bf0c      	ite	eq
 80059f2:	2301      	moveq	r3, #1
 80059f4:	2300      	movne	r3, #0
 80059f6:	42b3      	cmp	r3, r6
 80059f8:	d001      	beq.n	80059fe <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 80059fa:	2000      	movs	r0, #0
 80059fc:	e01e      	b.n	8005a3c <I2C_WaitOnFlagUntilTimeout+0x62>
    if (Timeout != HAL_MAX_DELAY)
 80059fe:	1c6b      	adds	r3, r5, #1
 8005a00:	d0f3      	beq.n	80059ea <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005a02:	f7ff fb87 	bl	8005114 <HAL_GetTick>
 8005a06:	1bc0      	subs	r0, r0, r7
 8005a08:	42a8      	cmp	r0, r5
 8005a0a:	d801      	bhi.n	8005a10 <I2C_WaitOnFlagUntilTimeout+0x36>
 8005a0c:	2d00      	cmp	r5, #0
 8005a0e:	d1eb      	bne.n	80059e8 <I2C_WaitOnFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8005a10:	6823      	ldr	r3, [r4, #0]
 8005a12:	699b      	ldr	r3, [r3, #24]
 8005a14:	ea38 0303 	bics.w	r3, r8, r3
 8005a18:	bf0c      	ite	eq
 8005a1a:	2301      	moveq	r3, #1
 8005a1c:	2300      	movne	r3, #0
 8005a1e:	42b3      	cmp	r3, r6
 8005a20:	d1e2      	bne.n	80059e8 <I2C_WaitOnFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005a22:	6c63      	ldr	r3, [r4, #68]	; 0x44
          return HAL_ERROR;
 8005a24:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005a26:	f043 0320 	orr.w	r3, r3, #32
 8005a2a:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8005a2c:	2320      	movs	r3, #32
 8005a2e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a32:	2300      	movs	r3, #0
 8005a34:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          __HAL_UNLOCK(hi2c);
 8005a38:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005a40 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8005a40:	b570      	push	{r4, r5, r6, lr}
 8005a42:	4604      	mov	r4, r0
 8005a44:	460d      	mov	r5, r1
 8005a46:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005a48:	6823      	ldr	r3, [r4, #0]
 8005a4a:	699b      	ldr	r3, [r3, #24]
 8005a4c:	069b      	lsls	r3, r3, #26
 8005a4e:	d501      	bpl.n	8005a54 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8005a50:	2000      	movs	r0, #0
}
 8005a52:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a54:	4632      	mov	r2, r6
 8005a56:	4629      	mov	r1, r5
 8005a58:	4620      	mov	r0, r4
 8005a5a:	f7ff ff13 	bl	8005884 <I2C_IsErrorOccurred>
 8005a5e:	b9b0      	cbnz	r0, 8005a8e <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005a60:	f7ff fb58 	bl	8005114 <HAL_GetTick>
 8005a64:	1b80      	subs	r0, r0, r6
 8005a66:	42a8      	cmp	r0, r5
 8005a68:	d801      	bhi.n	8005a6e <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8005a6a:	2d00      	cmp	r5, #0
 8005a6c:	d1ec      	bne.n	8005a48 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8005a6e:	6823      	ldr	r3, [r4, #0]
 8005a70:	699b      	ldr	r3, [r3, #24]
 8005a72:	f013 0320 	ands.w	r3, r3, #32
 8005a76:	d1e7      	bne.n	8005a48 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005a78:	6c62      	ldr	r2, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 8005a7a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005a7e:	f042 0220 	orr.w	r2, r2, #32
 8005a82:	6462      	str	r2, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8005a84:	2220      	movs	r2, #32
 8005a86:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a8a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      return HAL_ERROR;
 8005a8e:	2001      	movs	r0, #1
 8005a90:	e7df      	b.n	8005a52 <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

08005a92 <HAL_I2C_MspInit>:
}
 8005a92:	4770      	bx	lr

08005a94 <HAL_I2C_Init>:
{
 8005a94:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005a96:	4604      	mov	r4, r0
 8005a98:	2800      	cmp	r0, #0
 8005a9a:	d04a      	beq.n	8005b32 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005a9c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005aa0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005aa4:	b91b      	cbnz	r3, 8005aae <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8005aa6:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8005aaa:	f7ff fff2 	bl	8005a92 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005aae:	2324      	movs	r3, #36	; 0x24
 8005ab0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005ab4:	6823      	ldr	r3, [r4, #0]
 8005ab6:	681a      	ldr	r2, [r3, #0]
 8005ab8:	f022 0201 	bic.w	r2, r2, #1
 8005abc:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8005abe:	6862      	ldr	r2, [r4, #4]
 8005ac0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005ac4:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005ac6:	689a      	ldr	r2, [r3, #8]
 8005ac8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005acc:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005ace:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005ad2:	2901      	cmp	r1, #1
 8005ad4:	d124      	bne.n	8005b20 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005ad6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005ada:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005adc:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005ade:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005ae0:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8005ae4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005ae8:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8005aea:	68da      	ldr	r2, [r3, #12]
 8005aec:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005af0:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005af2:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8005af6:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005af8:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005afa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005afe:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005b00:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8005b04:	430a      	orrs	r2, r1
 8005b06:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8005b08:	681a      	ldr	r2, [r3, #0]
 8005b0a:	f042 0201 	orr.w	r2, r2, #1
 8005b0e:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8005b10:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b12:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005b14:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005b18:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005b1a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8005b1e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005b20:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005b24:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005b26:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005b28:	d1d8      	bne.n	8005adc <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8005b2a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8005b2e:	605a      	str	r2, [r3, #4]
 8005b30:	e7d4      	b.n	8005adc <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8005b32:	2001      	movs	r0, #1
 8005b34:	e7f3      	b.n	8005b1e <HAL_I2C_Init+0x8a>

08005b36 <HAL_I2C_MspDeInit>:
 8005b36:	4770      	bx	lr

08005b38 <HAL_I2C_DeInit>:
{
 8005b38:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005b3a:	4604      	mov	r4, r0
 8005b3c:	b198      	cbz	r0, 8005b66 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005b3e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005b40:	2324      	movs	r3, #36	; 0x24
 8005b42:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005b46:	6813      	ldr	r3, [r2, #0]
 8005b48:	f023 0301 	bic.w	r3, r3, #1
 8005b4c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005b4e:	f7ff fff2 	bl	8005b36 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b52:	2000      	movs	r0, #0
 8005b54:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 8005b56:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8005b5a:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005b5e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005b60:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8005b64:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005b66:	2001      	movs	r0, #1
 8005b68:	e7fc      	b.n	8005b64 <HAL_I2C_DeInit+0x2c>
	...

08005b6c <HAL_I2C_Mem_Write>:
{
 8005b6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b70:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b72:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 8005b76:	4604      	mov	r4, r0
 8005b78:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b7a:	2b20      	cmp	r3, #32
{
 8005b7c:	4616      	mov	r6, r2
 8005b7e:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8005b82:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b86:	f040 80c6 	bne.w	8005d16 <HAL_I2C_Mem_Write+0x1aa>
    if ((pData == NULL) || (Size == 0U))
 8005b8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b8c:	b113      	cbz	r3, 8005b94 <HAL_I2C_Mem_Write+0x28>
 8005b8e:	f1ba 0f00 	cmp.w	sl, #0
 8005b92:	d106      	bne.n	8005ba2 <HAL_I2C_Mem_Write+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005b94:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005b98:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8005b9a:	2001      	movs	r0, #1
}
 8005b9c:	b003      	add	sp, #12
 8005b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005ba2:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005ba6:	2b01      	cmp	r3, #1
 8005ba8:	f000 80b5 	beq.w	8005d16 <HAL_I2C_Mem_Write+0x1aa>
 8005bac:	f04f 0b01 	mov.w	fp, #1
 8005bb0:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8005bb4:	f7ff faae 	bl	8005114 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005bb8:	2319      	movs	r3, #25
    tickstart = HAL_GetTick();
 8005bba:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005bbc:	9000      	str	r0, [sp, #0]
 8005bbe:	465a      	mov	r2, fp
 8005bc0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005bc4:	4620      	mov	r0, r4
 8005bc6:	f7ff ff08 	bl	80059da <I2C_WaitOnFlagUntilTimeout>
 8005bca:	2800      	cmp	r0, #0
 8005bcc:	d1e5      	bne.n	8005b9a <HAL_I2C_Mem_Write+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005bce:	2321      	movs	r3, #33	; 0x21
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005bd0:	fa5f f289 	uxtb.w	r2, r9
 8005bd4:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 8005bd6:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005bd8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005bdc:	2340      	movs	r3, #64	; 0x40
 8005bde:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8005be2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005be4:	6460      	str	r0, [r4, #68]	; 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005be6:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005be8:	6263      	str	r3, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005bea:	4b4c      	ldr	r3, [pc, #304]	; (8005d1c <HAL_I2C_Mem_Write+0x1b0>)
    hi2c->XferCount = Size;
 8005bec:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005bf0:	9300      	str	r3, [sp, #0]
 8005bf2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005bf6:	f7ff fe2f 	bl	8005858 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005bfa:	462a      	mov	r2, r5
 8005bfc:	4641      	mov	r1, r8
 8005bfe:	4620      	mov	r0, r4
 8005c00:	f7ff fec0 	bl	8005984 <I2C_WaitOnTXISFlagUntilTimeout>
 8005c04:	bb18      	cbnz	r0, 8005c4e <HAL_I2C_Mem_Write+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005c06:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005c0a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005c0c:	d115      	bne.n	8005c3a <HAL_I2C_Mem_Write+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005c0e:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005c10:	2200      	movs	r2, #0
 8005c12:	2180      	movs	r1, #128	; 0x80
 8005c14:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005c16:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005c18:	4643      	mov	r3, r8
 8005c1a:	9500      	str	r5, [sp, #0]
 8005c1c:	f7ff fedd 	bl	80059da <I2C_WaitOnFlagUntilTimeout>
 8005c20:	b9a8      	cbnz	r0, 8005c4e <HAL_I2C_Mem_Write+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005c22:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c24:	b29b      	uxth	r3, r3
 8005c26:	2bff      	cmp	r3, #255	; 0xff
 8005c28:	d815      	bhi.n	8005c56 <HAL_I2C_Mem_Write+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005c2a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005c2c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005c30:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 8005c32:	b292      	uxth	r2, r2
 8005c34:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005c36:	b2d2      	uxtb	r2, r2
 8005c38:	e012      	b.n	8005c60 <HAL_I2C_Mem_Write+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005c3a:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005c3c:	4641      	mov	r1, r8
 8005c3e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005c40:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005c42:	462a      	mov	r2, r5
 8005c44:	f7ff fe9e 	bl	8005984 <I2C_WaitOnTXISFlagUntilTimeout>
 8005c48:	b908      	cbnz	r0, 8005c4e <HAL_I2C_Mem_Write+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005c4a:	6823      	ldr	r3, [r4, #0]
 8005c4c:	e7df      	b.n	8005c0e <HAL_I2C_Mem_Write+0xa2>
      __HAL_UNLOCK(hi2c);
 8005c4e:	2300      	movs	r3, #0
 8005c50:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8005c54:	e7a1      	b.n	8005b9a <HAL_I2C_Mem_Write+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005c56:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005c58:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005c5c:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005c5e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005c60:	4639      	mov	r1, r7
 8005c62:	4620      	mov	r0, r4
 8005c64:	f7ff fdf8 	bl	8005858 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c68:	462a      	mov	r2, r5
 8005c6a:	4641      	mov	r1, r8
 8005c6c:	4620      	mov	r0, r4
 8005c6e:	f7ff fe89 	bl	8005984 <I2C_WaitOnTXISFlagUntilTimeout>
 8005c72:	2800      	cmp	r0, #0
 8005c74:	d191      	bne.n	8005b9a <HAL_I2C_Mem_Write+0x2e>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8005c76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c78:	6822      	ldr	r2, [r4, #0]
 8005c7a:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005c7e:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 8005c80:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005c82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005c84:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005c86:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005c88:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8005c8a:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8005c8c:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005c8e:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005c90:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005c92:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005c94:	b29b      	uxth	r3, r3
 8005c96:	b1b3      	cbz	r3, 8005cc6 <HAL_I2C_Mem_Write+0x15a>
 8005c98:	b9aa      	cbnz	r2, 8005cc6 <HAL_I2C_Mem_Write+0x15a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005c9a:	4643      	mov	r3, r8
 8005c9c:	2180      	movs	r1, #128	; 0x80
 8005c9e:	4620      	mov	r0, r4
 8005ca0:	9500      	str	r5, [sp, #0]
 8005ca2:	f7ff fe9a 	bl	80059da <I2C_WaitOnFlagUntilTimeout>
 8005ca6:	2800      	cmp	r0, #0
 8005ca8:	f47f af77 	bne.w	8005b9a <HAL_I2C_Mem_Write+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005cac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005cae:	b29b      	uxth	r3, r3
 8005cb0:	2bff      	cmp	r3, #255	; 0xff
 8005cb2:	d928      	bls.n	8005d06 <HAL_I2C_Mem_Write+0x19a>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005cb4:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005cb6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005cba:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005cbc:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005cbe:	4639      	mov	r1, r7
 8005cc0:	4620      	mov	r0, r4
 8005cc2:	f7ff fdc9 	bl	8005858 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005cc6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005cc8:	b29b      	uxth	r3, r3
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	d1cc      	bne.n	8005c68 <HAL_I2C_Mem_Write+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005cce:	462a      	mov	r2, r5
 8005cd0:	4641      	mov	r1, r8
 8005cd2:	4620      	mov	r0, r4
 8005cd4:	f7ff feb4 	bl	8005a40 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005cd8:	2800      	cmp	r0, #0
 8005cda:	f47f af5e 	bne.w	8005b9a <HAL_I2C_Mem_Write+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005cde:	6823      	ldr	r3, [r4, #0]
 8005ce0:	2120      	movs	r1, #32
 8005ce2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005ce4:	685a      	ldr	r2, [r3, #4]
 8005ce6:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8005cea:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005cee:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8005cf2:	f022 0201 	bic.w	r2, r2, #1
 8005cf6:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005cf8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005cfc:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005d00:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8005d04:	e74a      	b.n	8005b9c <HAL_I2C_Mem_Write+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005d06:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005d08:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005d0c:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8005d0e:	b292      	uxth	r2, r2
 8005d10:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005d12:	b2d2      	uxtb	r2, r2
 8005d14:	e7d3      	b.n	8005cbe <HAL_I2C_Mem_Write+0x152>
    return HAL_BUSY;
 8005d16:	2002      	movs	r0, #2
 8005d18:	e740      	b.n	8005b9c <HAL_I2C_Mem_Write+0x30>
 8005d1a:	bf00      	nop
 8005d1c:	80002000 	.word	0x80002000

08005d20 <HAL_I2C_Mem_Read>:
{
 8005d20:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d24:	4699      	mov	r9, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d26:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
 8005d2a:	4604      	mov	r4, r0
 8005d2c:	460f      	mov	r7, r1
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d2e:	2b20      	cmp	r3, #32
{
 8005d30:	4616      	mov	r6, r2
 8005d32:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8005d36:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d3a:	f040 80c9 	bne.w	8005ed0 <HAL_I2C_Mem_Read+0x1b0>
    if ((pData == NULL) || (Size == 0U))
 8005d3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005d40:	b113      	cbz	r3, 8005d48 <HAL_I2C_Mem_Read+0x28>
 8005d42:	f1ba 0f00 	cmp.w	sl, #0
 8005d46:	d106      	bne.n	8005d56 <HAL_I2C_Mem_Read+0x36>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005d48:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005d4c:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8005d4e:	2001      	movs	r0, #1
}
 8005d50:	b003      	add	sp, #12
 8005d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8005d56:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005d5a:	2b01      	cmp	r3, #1
 8005d5c:	f000 80b8 	beq.w	8005ed0 <HAL_I2C_Mem_Read+0x1b0>
 8005d60:	f04f 0b01 	mov.w	fp, #1
 8005d64:	f880 b040 	strb.w	fp, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8005d68:	f7ff f9d4 	bl	8005114 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005d6c:	2319      	movs	r3, #25
 8005d6e:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005d70:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005d72:	465a      	mov	r2, fp
 8005d74:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005d78:	4620      	mov	r0, r4
 8005d7a:	f7ff fe2e 	bl	80059da <I2C_WaitOnFlagUntilTimeout>
 8005d7e:	4603      	mov	r3, r0
 8005d80:	2800      	cmp	r0, #0
 8005d82:	d1e4      	bne.n	8005d4e <HAL_I2C_Mem_Read+0x2e>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005d84:	2222      	movs	r2, #34	; 0x22
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005d86:	4639      	mov	r1, r7
    hi2c->XferISR   = NULL;
 8005d88:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005d8a:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005d8e:	2240      	movs	r2, #64	; 0x40
 8005d90:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8005d94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005d96:	6460      	str	r0, [r4, #68]	; 0x44
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005d98:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005d9a:	6262      	str	r2, [r4, #36]	; 0x24
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005d9c:	4a4d      	ldr	r2, [pc, #308]	; (8005ed4 <HAL_I2C_Mem_Read+0x1b4>)
    hi2c->XferCount = Size;
 8005d9e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005da2:	9200      	str	r2, [sp, #0]
 8005da4:	fa5f f289 	uxtb.w	r2, r9
 8005da8:	f7ff fd56 	bl	8005858 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005dac:	462a      	mov	r2, r5
 8005dae:	4641      	mov	r1, r8
 8005db0:	4620      	mov	r0, r4
 8005db2:	f7ff fde7 	bl	8005984 <I2C_WaitOnTXISFlagUntilTimeout>
 8005db6:	bb20      	cbnz	r0, 8005e02 <HAL_I2C_Mem_Read+0xe2>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005db8:	f1b9 0f01 	cmp.w	r9, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005dbc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005dbe:	d116      	bne.n	8005dee <HAL_I2C_Mem_Read+0xce>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005dc0:	b2f6      	uxtb	r6, r6
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005dc2:	2200      	movs	r2, #0
 8005dc4:	2140      	movs	r1, #64	; 0x40
 8005dc6:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005dc8:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8005dca:	4643      	mov	r3, r8
 8005dcc:	9500      	str	r5, [sp, #0]
 8005dce:	f7ff fe04 	bl	80059da <I2C_WaitOnFlagUntilTimeout>
 8005dd2:	b9b0      	cbnz	r0, 8005e02 <HAL_I2C_Mem_Read+0xe2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005dd4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005dd6:	b29b      	uxth	r3, r3
 8005dd8:	2bff      	cmp	r3, #255	; 0xff
 8005dda:	4b3f      	ldr	r3, [pc, #252]	; (8005ed8 <HAL_I2C_Mem_Read+0x1b8>)
 8005ddc:	d815      	bhi.n	8005e0a <HAL_I2C_Mem_Read+0xea>
      hi2c->XferSize = hi2c->XferCount;
 8005dde:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005de0:	9300      	str	r3, [sp, #0]
 8005de2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8005de6:	b292      	uxth	r2, r2
 8005de8:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005dea:	b2d2      	uxtb	r2, r2
 8005dec:	e012      	b.n	8005e14 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005dee:	0a32      	lsrs	r2, r6, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005df0:	4641      	mov	r1, r8
 8005df2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005df4:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005df6:	462a      	mov	r2, r5
 8005df8:	f7ff fdc4 	bl	8005984 <I2C_WaitOnTXISFlagUntilTimeout>
 8005dfc:	b908      	cbnz	r0, 8005e02 <HAL_I2C_Mem_Read+0xe2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005dfe:	6823      	ldr	r3, [r4, #0]
 8005e00:	e7de      	b.n	8005dc0 <HAL_I2C_Mem_Read+0xa0>
      __HAL_UNLOCK(hi2c);
 8005e02:	2300      	movs	r3, #0
 8005e04:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8005e08:	e7a1      	b.n	8005d4e <HAL_I2C_Mem_Read+0x2e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005e0a:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005e0c:	9300      	str	r3, [sp, #0]
 8005e0e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005e12:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005e14:	4639      	mov	r1, r7
 8005e16:	4620      	mov	r0, r4
 8005e18:	f7ff fd1e 	bl	8005858 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8005e1c:	4643      	mov	r3, r8
 8005e1e:	2200      	movs	r2, #0
 8005e20:	2104      	movs	r1, #4
 8005e22:	4620      	mov	r0, r4
 8005e24:	9500      	str	r5, [sp, #0]
 8005e26:	f7ff fdd8 	bl	80059da <I2C_WaitOnFlagUntilTimeout>
 8005e2a:	2800      	cmp	r0, #0
 8005e2c:	d18f      	bne.n	8005d4e <HAL_I2C_Mem_Read+0x2e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005e2e:	6823      	ldr	r3, [r4, #0]
 8005e30:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005e32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005e34:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8005e36:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8005e38:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 8005e3a:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8005e3c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8005e3e:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005e40:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005e42:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8005e44:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8005e46:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005e48:	b29b      	uxth	r3, r3
 8005e4a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005e4c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e4e:	b29b      	uxth	r3, r3
 8005e50:	b1b3      	cbz	r3, 8005e80 <HAL_I2C_Mem_Read+0x160>
 8005e52:	b9aa      	cbnz	r2, 8005e80 <HAL_I2C_Mem_Read+0x160>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005e54:	4643      	mov	r3, r8
 8005e56:	2180      	movs	r1, #128	; 0x80
 8005e58:	4620      	mov	r0, r4
 8005e5a:	9500      	str	r5, [sp, #0]
 8005e5c:	f7ff fdbd 	bl	80059da <I2C_WaitOnFlagUntilTimeout>
 8005e60:	2800      	cmp	r0, #0
 8005e62:	f47f af74 	bne.w	8005d4e <HAL_I2C_Mem_Read+0x2e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005e66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e68:	b29b      	uxth	r3, r3
 8005e6a:	2bff      	cmp	r3, #255	; 0xff
 8005e6c:	d928      	bls.n	8005ec0 <HAL_I2C_Mem_Read+0x1a0>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005e6e:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005e70:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005e74:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005e76:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005e78:	4639      	mov	r1, r7
 8005e7a:	4620      	mov	r0, r4
 8005e7c:	f7ff fcec 	bl	8005858 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005e80:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e82:	b29b      	uxth	r3, r3
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d1c9      	bne.n	8005e1c <HAL_I2C_Mem_Read+0xfc>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005e88:	462a      	mov	r2, r5
 8005e8a:	4641      	mov	r1, r8
 8005e8c:	4620      	mov	r0, r4
 8005e8e:	f7ff fdd7 	bl	8005a40 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005e92:	2800      	cmp	r0, #0
 8005e94:	f47f af5b 	bne.w	8005d4e <HAL_I2C_Mem_Read+0x2e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005e98:	6823      	ldr	r3, [r4, #0]
 8005e9a:	2120      	movs	r1, #32
 8005e9c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8005e9e:	685a      	ldr	r2, [r3, #4]
 8005ea0:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8005ea4:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005ea8:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8005eac:	f022 0201 	bic.w	r2, r2, #1
 8005eb0:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005eb2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005eb6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005eba:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8005ebe:	e747      	b.n	8005d50 <HAL_I2C_Mem_Read+0x30>
          hi2c->XferSize = hi2c->XferCount;
 8005ec0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005ec2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005ec6:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8005ec8:	b292      	uxth	r2, r2
 8005eca:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005ecc:	b2d2      	uxtb	r2, r2
 8005ece:	e7d3      	b.n	8005e78 <HAL_I2C_Mem_Read+0x158>
    return HAL_BUSY;
 8005ed0:	2002      	movs	r0, #2
 8005ed2:	e73d      	b.n	8005d50 <HAL_I2C_Mem_Read+0x30>
 8005ed4:	80002000 	.word	0x80002000
 8005ed8:	80002400 	.word	0x80002400

08005edc <HAL_I2C_GetState>:
  return hi2c->State;
 8005edc:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 8005ee0:	4770      	bx	lr

08005ee2 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 8005ee2:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
 8005ee4:	4770      	bx	lr

08005ee6 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005ee6:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005ee8:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005eec:	2b20      	cmp	r3, #32
 8005eee:	b2dc      	uxtb	r4, r3
 8005ef0:	d11d      	bne.n	8005f2e <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005ef2:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005ef6:	2b01      	cmp	r3, #1
 8005ef8:	d019      	beq.n	8005f2e <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005efa:	2324      	movs	r3, #36	; 0x24
 8005efc:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005f00:	6803      	ldr	r3, [r0, #0]
 8005f02:	681a      	ldr	r2, [r3, #0]
 8005f04:	f022 0201 	bic.w	r2, r2, #1
 8005f08:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005f0a:	681a      	ldr	r2, [r3, #0]
 8005f0c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005f10:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005f12:	681a      	ldr	r2, [r3, #0]
 8005f14:	4311      	orrs	r1, r2
 8005f16:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005f18:	681a      	ldr	r2, [r3, #0]
 8005f1a:	f042 0201 	orr.w	r2, r2, #1
 8005f1e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005f20:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005f22:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005f26:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8005f2a:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005f2c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005f2e:	2002      	movs	r0, #2
 8005f30:	e7fc      	b.n	8005f2c <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005f32 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005f32:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005f34:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005f38:	2b20      	cmp	r3, #32
 8005f3a:	b2dc      	uxtb	r4, r3
 8005f3c:	d11c      	bne.n	8005f78 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005f3e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005f42:	2b01      	cmp	r3, #1
 8005f44:	d018      	beq.n	8005f78 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005f46:	2324      	movs	r3, #36	; 0x24
 8005f48:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005f4c:	6803      	ldr	r3, [r0, #0]
 8005f4e:	681a      	ldr	r2, [r3, #0]
 8005f50:	f022 0201 	bic.w	r2, r2, #1
 8005f54:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005f56:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005f58:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005f5c:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8005f60:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005f62:	681a      	ldr	r2, [r3, #0]
 8005f64:	f042 0201 	orr.w	r2, r2, #1
 8005f68:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005f6a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005f6c:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005f70:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8005f74:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005f76:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005f78:	2002      	movs	r0, #2
 8005f7a:	e7fc      	b.n	8005f76 <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005f7c <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f7c:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f7e:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005f80:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f84:	3284      	adds	r2, #132	; 0x84
 8005f86:	1883      	adds	r3, r0, r2
{
 8005f88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f8c:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005f8e:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f92:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005f94:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f98:	684c      	ldr	r4, [r1, #4]
 8005f9a:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f9e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005fa2:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005fa6:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005fa8:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005faa:	68c5      	ldr	r5, [r0, #12]
 8005fac:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8005fb0:	443d      	add	r5, r7
 8005fb2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005fb6:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005fb8:	68c6      	ldr	r6, [r0, #12]
 8005fba:	68cd      	ldr	r5, [r1, #12]
 8005fbc:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005fc0:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005fc2:	689d      	ldr	r5, [r3, #8]
 8005fc4:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005fc8:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005fca:	688d      	ldr	r5, [r1, #8]
 8005fcc:	68c7      	ldr	r7, [r0, #12]
 8005fce:	3501      	adds	r5, #1
 8005fd0:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005fd4:	443d      	add	r5, r7
 8005fd6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005fda:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005fdc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005fde:	691d      	ldr	r5, [r3, #16]
 8005fe0:	f025 0507 	bic.w	r5, r5, #7
 8005fe4:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005fe6:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005fe8:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005fea:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005fee:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005ff2:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005ff6:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005ffa:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005ffe:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006002:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006006:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006008:	695d      	ldr	r5, [r3, #20]
 800600a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800600e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006010:	694d      	ldr	r5, [r1, #20]
 8006012:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006014:	69dd      	ldr	r5, [r3, #28]
 8006016:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800601a:	f025 0507 	bic.w	r5, r5, #7
 800601e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006020:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006024:	433d      	orrs	r5, r7
 8006026:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006028:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800602a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800602c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006030:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006032:	b1fe      	cbz	r6, 8006074 <LTDC_SetConfig+0xf8>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006034:	3e01      	subs	r6, #1
 8006036:	2e06      	cmp	r6, #6
 8006038:	d81e      	bhi.n	8006078 <LTDC_SetConfig+0xfc>
 800603a:	4d10      	ldr	r5, [pc, #64]	; (800607c <LTDC_SetConfig+0x100>)
 800603c:	5dad      	ldrb	r5, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800603e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8006040:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006044:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8006048:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800604a:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 800604c:	3407      	adds	r4, #7
 800604e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006050:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8006052:	436e      	muls	r6, r5
 8006054:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006058:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800605a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800605c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006060:	f024 0407 	bic.w	r4, r4, #7
 8006064:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006066:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006068:	5883      	ldr	r3, [r0, r2]
 800606a:	f043 0301 	orr.w	r3, r3, #1
 800606e:	5083      	str	r3, [r0, r2]
}
 8006070:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006074:	2504      	movs	r5, #4
 8006076:	e7e2      	b.n	800603e <LTDC_SetConfig+0xc2>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006078:	2501      	movs	r5, #1
 800607a:	e7e0      	b.n	800603e <LTDC_SetConfig+0xc2>
 800607c:	080232c0 	.word	0x080232c0

08006080 <HAL_LTDC_Init>:
{
 8006080:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006082:	4604      	mov	r4, r0
 8006084:	2800      	cmp	r0, #0
 8006086:	d063      	beq.n	8006150 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006088:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800608c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006090:	b91b      	cbnz	r3, 800609a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006092:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006096:	f7fb fc09 	bl	80018ac <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800609a:	2302      	movs	r3, #2
 800609c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80060a0:	6823      	ldr	r3, [r4, #0]
 80060a2:	699a      	ldr	r2, [r3, #24]
 80060a4:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80060a8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80060aa:	6999      	ldr	r1, [r3, #24]
 80060ac:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80060b0:	4302      	orrs	r2, r0
 80060b2:	68e0      	ldr	r0, [r4, #12]
 80060b4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80060b6:	6920      	ldr	r0, [r4, #16]
 80060b8:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80060ba:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80060bc:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80060be:	4925      	ldr	r1, [pc, #148]	; (8006154 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80060c0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80060c2:	689a      	ldr	r2, [r3, #8]
 80060c4:	400a      	ands	r2, r1
 80060c6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80060c8:	689a      	ldr	r2, [r3, #8]
 80060ca:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80060ce:	69a0      	ldr	r0, [r4, #24]
 80060d0:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80060d2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80060d4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80060d6:	68da      	ldr	r2, [r3, #12]
 80060d8:	400a      	ands	r2, r1
 80060da:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80060dc:	68da      	ldr	r2, [r3, #12]
 80060de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80060e2:	6a20      	ldr	r0, [r4, #32]
 80060e4:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80060e6:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80060e8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80060ea:	691a      	ldr	r2, [r3, #16]
 80060ec:	400a      	ands	r2, r1
 80060ee:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80060f0:	691a      	ldr	r2, [r3, #16]
 80060f2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80060f6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80060f8:	4302      	orrs	r2, r0
 80060fa:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80060fc:	695a      	ldr	r2, [r3, #20]
 80060fe:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006100:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006102:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006104:	695a      	ldr	r2, [r3, #20]
 8006106:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800610a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800610c:	430a      	orrs	r2, r1
 800610e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006110:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006112:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006116:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800611a:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800611e:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006120:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8006122:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006126:	432a      	orrs	r2, r5
 8006128:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800612c:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800612e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006132:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006134:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006136:	f042 0206 	orr.w	r2, r2, #6
 800613a:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800613c:	699a      	ldr	r2, [r3, #24]
 800613e:	f042 0201 	orr.w	r2, r2, #1
 8006142:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8006144:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006146:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800614a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800614e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006150:	2001      	movs	r0, #1
 8006152:	e7fc      	b.n	800614e <HAL_LTDC_Init+0xce>
 8006154:	f000f800 	.word	0xf000f800

08006158 <HAL_LTDC_ErrorCallback>:
 8006158:	4770      	bx	lr

0800615a <HAL_LTDC_ReloadEventCallback>:
 800615a:	4770      	bx	lr

0800615c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800615c:	6803      	ldr	r3, [r0, #0]
{
 800615e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006160:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 8006162:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006164:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006166:	0772      	lsls	r2, r6, #29
 8006168:	d514      	bpl.n	8006194 <HAL_LTDC_IRQHandler+0x38>
 800616a:	0769      	lsls	r1, r5, #29
 800616c:	d512      	bpl.n	8006194 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800616e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006170:	f022 0204 	bic.w	r2, r2, #4
 8006174:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006176:	2204      	movs	r2, #4
 8006178:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800617a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800617e:	f043 0301 	orr.w	r3, r3, #1
 8006182:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8006186:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006188:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800618c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006190:	f7ff ffe2 	bl	8006158 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006194:	07b2      	lsls	r2, r6, #30
 8006196:	d516      	bpl.n	80061c6 <HAL_LTDC_IRQHandler+0x6a>
 8006198:	07ab      	lsls	r3, r5, #30
 800619a:	d514      	bpl.n	80061c6 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800619c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 800619e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80061a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80061a2:	f022 0202 	bic.w	r2, r2, #2
 80061a6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80061a8:	2202      	movs	r2, #2
 80061aa:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80061ac:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80061b0:	4313      	orrs	r3, r2
 80061b2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80061b6:	2304      	movs	r3, #4
 80061b8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80061bc:	2300      	movs	r3, #0
 80061be:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80061c2:	f7ff ffc9 	bl	8006158 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80061c6:	07f0      	lsls	r0, r6, #31
 80061c8:	d510      	bpl.n	80061ec <HAL_LTDC_IRQHandler+0x90>
 80061ca:	07e9      	lsls	r1, r5, #31
 80061cc:	d50e      	bpl.n	80061ec <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80061ce:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 80061d0:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80061d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80061d4:	f022 0201 	bic.w	r2, r2, #1
 80061d8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80061da:	2201      	movs	r2, #1
 80061dc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80061de:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80061e0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80061e4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80061e8:	f7fb f820 	bl	800122c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80061ec:	0732      	lsls	r2, r6, #28
 80061ee:	d511      	bpl.n	8006214 <HAL_LTDC_IRQHandler+0xb8>
 80061f0:	072b      	lsls	r3, r5, #28
 80061f2:	d50f      	bpl.n	8006214 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80061f4:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 80061f6:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80061f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80061fa:	f022 0208 	bic.w	r2, r2, #8
 80061fe:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006200:	2208      	movs	r2, #8
 8006202:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006204:	2301      	movs	r3, #1
 8006206:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800620a:	2300      	movs	r3, #0
 800620c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006210:	f7ff ffa3 	bl	800615a <HAL_LTDC_ReloadEventCallback>
}
 8006214:	bd70      	pop	{r4, r5, r6, pc}

08006216 <HAL_LTDC_ConfigLayer>:
{
 8006216:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800621a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 800621e:	4606      	mov	r6, r0
 8006220:	460f      	mov	r7, r1
 8006222:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8006224:	2b01      	cmp	r3, #1
 8006226:	f04f 0002 	mov.w	r0, #2
 800622a:	d01f      	beq.n	800626c <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800622c:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 800622e:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006232:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006234:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006238:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 800623c:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006240:	3438      	adds	r4, #56	; 0x38
 8006242:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006244:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006246:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006248:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800624a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800624c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800624e:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006250:	4630      	mov	r0, r6
 8006252:	4662      	mov	r2, ip
 8006254:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006256:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006258:	f7ff fe90 	bl	8005f7c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800625c:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800625e:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006260:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006264:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006268:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800626c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006270 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006270:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006274:	2b01      	cmp	r3, #1
 8006276:	f04f 0302 	mov.w	r3, #2
 800627a:	d012      	beq.n	80062a2 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800627c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006280:	6803      	ldr	r3, [r0, #0]
 8006282:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006284:	f022 0201 	bic.w	r2, r2, #1
 8006288:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800628a:	4a07      	ldr	r2, [pc, #28]	; (80062a8 <HAL_LTDC_ProgramLineEvent+0x38>)
 800628c:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800628e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006290:	f042 0201 	orr.w	r2, r2, #1
 8006294:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006296:	2301      	movs	r3, #1
 8006298:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800629c:	2300      	movs	r3, #0
 800629e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80062a2:	4618      	mov	r0, r3
}
 80062a4:	4770      	bx	lr
 80062a6:	bf00      	nop
 80062a8:	50001000 	.word	0x50001000

080062ac <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
 80062ac:	b538      	push	{r3, r4, r5, lr}
 80062ae:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80062b0:	f7fe ff30 	bl	8005114 <HAL_GetTick>
 80062b4:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 80062b6:	2c00      	cmp	r4, #0
 80062b8:	d061      	beq.n	800637e <HAL_MDMA_Init+0xd2>
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset));


  /* Allocate lock resource */
  __HAL_UNLOCK(hmdma);
 80062ba:	2300      	movs	r3, #0

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
 80062bc:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hmdma);
 80062be:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_BUSY;
 80062c2:	2302      	movs	r3, #2
 80062c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_MDMA_DISABLE(hmdma);
 80062c8:	68d3      	ldr	r3, [r2, #12]
 80062ca:	f023 0301 	bic.w	r3, r3, #1
 80062ce:	60d3      	str	r3, [r2, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 80062d0:	6823      	ldr	r3, [r4, #0]
 80062d2:	68da      	ldr	r2, [r3, #12]
 80062d4:	07d2      	lsls	r2, r2, #31
 80062d6:	d448      	bmi.n	800636a <HAL_MDMA_Init+0xbe>
static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
  uint32_t blockoffset;

  /* Prepare the MDMA Channel configuration */
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 80062d8:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 80062dc:	430a      	orrs	r2, r1
 80062de:	60da      	str	r2, [r3, #12]
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 80062e0:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 80062e4:	430a      	orrs	r2, r1
 80062e6:	69e1      	ldr	r1, [r4, #28]
 80062e8:	430a      	orrs	r2, r1
 80062ea:	6a21      	ldr	r1, [r4, #32]
 80062ec:	430a      	orrs	r2, r1
 80062ee:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80062f0:	430a      	orrs	r2, r1
 80062f2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80062f4:	430a      	orrs	r2, r1
 80062f6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80062f8:	430a      	orrs	r2, r1
 80062fa:	68a1      	ldr	r1, [r4, #8]
 80062fc:	430a      	orrs	r2, r1
 80062fe:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8006300:	3901      	subs	r1, #1
 8006302:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 8006306:	6861      	ldr	r1, [r4, #4]
 8006308:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 800630c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 800630e:	d103      	bne.n	8006318 <HAL_MDMA_Init+0x6c>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
 8006310:	691a      	ldr	r2, [r3, #16]
 8006312:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
 8006316:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
 8006318:	2200      	movs	r2, #0
 800631a:	615a      	str	r2, [r3, #20]

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
 800631c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800631e:	2a00      	cmp	r2, #0
 8006320:	da04      	bge.n	800632c <HAL_MDMA_Init+0x80>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 8006322:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : source repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
 8006324:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 8006326:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 800632a:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
 800632c:	b292      	uxth	r2, r2
 800632e:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
 8006330:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006332:	2a00      	cmp	r2, #0
 8006334:	da25      	bge.n	8006382 <HAL_MDMA_Init+0xd6>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 8006336:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : destination repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
 8006338:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 800633a:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
 800633e:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8006340:	6a18      	ldr	r0, [r3, #32]
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8006342:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 8006346:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 800634a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 800634c:	f04f 0200 	mov.w	r2, #0
 8006350:	d019      	beq.n	8006386 <HAL_MDMA_Init+0xda>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
 8006352:	b2c9      	uxtb	r1, r1
 8006354:	6299      	str	r1, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
 8006356:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
 8006358:	2000      	movs	r0, #0
  hmdma->State = HAL_MDMA_STATE_READY;
 800635a:	2301      	movs	r3, #1
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 800635c:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 800635e:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
 8006360:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
 8006364:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
 8006368:	bd38      	pop	{r3, r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 800636a:	f7fe fed3 	bl	8005114 <HAL_GetTick>
 800636e:	1b40      	subs	r0, r0, r5
 8006370:	2805      	cmp	r0, #5
 8006372:	d9ad      	bls.n	80062d0 <HAL_MDMA_Init+0x24>
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
 8006374:	2340      	movs	r3, #64	; 0x40
 8006376:	66a3      	str	r3, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
 8006378:	2303      	movs	r3, #3
 800637a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_ERROR;
 800637e:	2001      	movs	r0, #1
 8006380:	e7f2      	b.n	8006368 <HAL_MDMA_Init+0xbc>
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8006382:	6a18      	ldr	r0, [r3, #32]
 8006384:	e7dd      	b.n	8006342 <HAL_MDMA_Init+0x96>
    hmdma->Instance->CTBR = 0;
 8006386:	629a      	str	r2, [r3, #40]	; 0x28
 8006388:	e7e5      	b.n	8006356 <HAL_MDMA_Init+0xaa>

0800638a <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
 800638a:	b1d8      	cbz	r0, 80063c4 <HAL_MDMA_DeInit+0x3a>
  __HAL_MDMA_DISABLE(hmdma);
 800638c:	6802      	ldr	r2, [r0, #0]
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 800638e:	211f      	movs	r1, #31
  __HAL_MDMA_DISABLE(hmdma);
 8006390:	68d3      	ldr	r3, [r2, #12]
 8006392:	f023 0301 	bic.w	r3, r3, #1
 8006396:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CCR  = 0;
 8006398:	2300      	movs	r3, #0
 800639a:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
 800639c:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
 800639e:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
 80063a0:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
 80063a2:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
 80063a4:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
 80063a6:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
 80063a8:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
 80063aa:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
 80063ac:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 80063ae:	6051      	str	r1, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 80063b0:	6683      	str	r3, [r0, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 80063b2:	6643      	str	r3, [r0, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_RESET;
 80063b4:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
 80063b8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  hmdma->LastLinkedListNodeAddress   = 0;
 80063bc:	e9c0 3317 	strd	r3, r3, [r0, #92]	; 0x5c
  return HAL_OK;
 80063c0:	4618      	mov	r0, r3
 80063c2:	4770      	bx	lr
    return HAL_ERROR;
 80063c4:	2001      	movs	r0, #1
}
 80063c6:	4770      	bx	lr

080063c8 <HAL_MDMA_Abort>:
{
 80063c8:	b538      	push	{r3, r4, r5, lr}
 80063ca:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 80063cc:	f7fe fea2 	bl	8005114 <HAL_GetTick>
 80063d0:	4605      	mov	r5, r0
  if(hmdma == NULL)
 80063d2:	b144      	cbz	r4, 80063e6 <HAL_MDMA_Abort+0x1e>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
 80063d4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80063d8:	2b02      	cmp	r3, #2
 80063da:	d006      	beq.n	80063ea <HAL_MDMA_Abort+0x22>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 80063dc:	2380      	movs	r3, #128	; 0x80
 80063de:	66a3      	str	r3, [r4, #104]	; 0x68
    __HAL_UNLOCK(hmdma);
 80063e0:	2300      	movs	r3, #0
 80063e2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_ERROR;
 80063e6:	2001      	movs	r0, #1
 80063e8:	e015      	b.n	8006416 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
 80063ea:	6823      	ldr	r3, [r4, #0]
 80063ec:	68da      	ldr	r2, [r3, #12]
 80063ee:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
 80063f2:	60da      	str	r2, [r3, #12]
    __HAL_MDMA_DISABLE(hmdma);
 80063f4:	68da      	ldr	r2, [r3, #12]
 80063f6:	f022 0201 	bic.w	r2, r2, #1
 80063fa:	60da      	str	r2, [r3, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 80063fc:	6822      	ldr	r2, [r4, #0]
 80063fe:	68d3      	ldr	r3, [r2, #12]
 8006400:	f013 0301 	ands.w	r3, r3, #1
 8006404:	d108      	bne.n	8006418 <HAL_MDMA_Abort+0x50>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8006406:	211f      	movs	r1, #31
  return HAL_OK;
 8006408:	4618      	mov	r0, r3
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 800640a:	6051      	str	r1, [r2, #4]
    hmdma->State = HAL_MDMA_STATE_READY;
 800640c:	2201      	movs	r2, #1
    __HAL_UNLOCK(hmdma);
 800640e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
 8006412:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
}
 8006416:	bd38      	pop	{r3, r4, r5, pc}
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 8006418:	f7fe fe7c 	bl	8005114 <HAL_GetTick>
 800641c:	1b40      	subs	r0, r0, r5
 800641e:	2805      	cmp	r0, #5
 8006420:	d9ec      	bls.n	80063fc <HAL_MDMA_Abort+0x34>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
 8006422:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8006424:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006428:	66a3      	str	r3, [r4, #104]	; 0x68
        __HAL_UNLOCK(hmdma);
 800642a:	2300      	movs	r3, #0
 800642c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_ERROR;
 8006430:	2303      	movs	r3, #3
 8006432:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        return HAL_ERROR;
 8006436:	e7d6      	b.n	80063e6 <HAL_MDMA_Abort+0x1e>

08006438 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8006438:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 800643a:	4c10      	ldr	r4, [pc, #64]	; (800647c <HAL_PWREx_ConfigSupply+0x44>)
 800643c:	68e3      	ldr	r3, [r4, #12]
 800643e:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006442:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 8006444:	d105      	bne.n	8006452 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006446:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 800644a:	1a18      	subs	r0, r3, r0
 800644c:	bf18      	it	ne
 800644e:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
 8006450:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8006452:	f023 0307 	bic.w	r3, r3, #7
 8006456:	4318      	orrs	r0, r3
 8006458:	60e0      	str	r0, [r4, #12]
  tickstart = HAL_GetTick ();
 800645a:	f7fe fe5b 	bl	8005114 <HAL_GetTick>
 800645e:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006460:	6863      	ldr	r3, [r4, #4]
 8006462:	049b      	lsls	r3, r3, #18
 8006464:	d501      	bpl.n	800646a <HAL_PWREx_ConfigSupply+0x32>
  return HAL_OK;
 8006466:	2000      	movs	r0, #0
 8006468:	e7f2      	b.n	8006450 <HAL_PWREx_ConfigSupply+0x18>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 800646a:	f7fe fe53 	bl	8005114 <HAL_GetTick>
 800646e:	1b40      	subs	r0, r0, r5
 8006470:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006474:	d9f4      	bls.n	8006460 <HAL_PWREx_ConfigSupply+0x28>
      return HAL_ERROR;
 8006476:	2001      	movs	r0, #1
 8006478:	e7ea      	b.n	8006450 <HAL_PWREx_ConfigSupply+0x18>
 800647a:	bf00      	nop
 800647c:	58024800 	.word	0x58024800

08006480 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8006480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8006484:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8006486:	b136      	cbz	r6, 8006496 <QSPI_Config+0x16>
 8006488:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
 800648c:	d003      	beq.n	8006496 <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800648e:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8006490:	6804      	ldr	r4, [r0, #0]
 8006492:	3b01      	subs	r3, #1
 8006494:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006496:	f8d1 a018 	ldr.w	sl, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800649a:	e9d1 7e07 	ldrd	r7, lr, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800649e:	f1ba 0f00 	cmp.w	sl, #0
 80064a2:	d04c      	beq.n	800653e <QSPI_Config+0xbe>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064a4:	694c      	ldr	r4, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80064a6:	6805      	ldr	r5, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064a8:	ea4f 4c84 	mov.w	ip, r4, lsl #18
 80064ac:	ea4a 0406 	orr.w	r4, sl, r6
 80064b0:	680b      	ldr	r3, [r1, #0]
 80064b2:	f8d1 8034 	ldr.w	r8, [r1, #52]	; 0x34
 80064b6:	ea44 0a02 	orr.w	sl, r4, r2
 80064ba:	e9d1 090b 	ldrd	r0, r9, [r1, #44]	; 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80064be:	f1be 0f00 	cmp.w	lr, #0
 80064c2:	d024      	beq.n	800650e <QSPI_Config+0x8e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80064c4:	688e      	ldr	r6, [r1, #8]
 80064c6:	ea4a 040e 	orr.w	r4, sl, lr
 80064ca:	61ee      	str	r6, [r5, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064cc:	690e      	ldr	r6, [r1, #16]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80064ce:	b19f      	cbz	r7, 80064f8 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064d0:	433b      	orrs	r3, r7
 80064d2:	4303      	orrs	r3, r0
 80064d4:	68c8      	ldr	r0, [r1, #12]
 80064d6:	ea43 0309 	orr.w	r3, r3, r9
 80064da:	ea43 0308 	orr.w	r3, r3, r8
 80064de:	4333      	orrs	r3, r6
 80064e0:	4303      	orrs	r3, r0
 80064e2:	ea43 030c 	orr.w	r3, r3, ip
 80064e6:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80064e8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064ec:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80064ee:	d001      	beq.n	80064f4 <QSPI_Config+0x74>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80064f0:	684b      	ldr	r3, [r1, #4]
 80064f2:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80064f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064f8:	4303      	orrs	r3, r0
 80064fa:	ea43 0309 	orr.w	r3, r3, r9
 80064fe:	ea43 0308 	orr.w	r3, r3, r8
 8006502:	4333      	orrs	r3, r6
 8006504:	ea43 030c 	orr.w	r3, r3, ip
 8006508:	4323      	orrs	r3, r4
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800650a:	616b      	str	r3, [r5, #20]
 800650c:	e7f2      	b.n	80064f4 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800650e:	b167      	cbz	r7, 800652a <QSPI_Config+0xaa>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006510:	433b      	orrs	r3, r7
 8006512:	4303      	orrs	r3, r0
 8006514:	68c8      	ldr	r0, [r1, #12]
 8006516:	ea43 0309 	orr.w	r3, r3, r9
 800651a:	ea43 0308 	orr.w	r3, r3, r8
 800651e:	4303      	orrs	r3, r0
 8006520:	ea43 030c 	orr.w	r3, r3, ip
 8006524:	ea43 030a 	orr.w	r3, r3, sl
 8006528:	e7de      	b.n	80064e8 <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800652a:	4303      	orrs	r3, r0
 800652c:	ea43 0309 	orr.w	r3, r3, r9
 8006530:	ea43 0408 	orr.w	r4, r3, r8
 8006534:	ea44 030c 	orr.w	r3, r4, ip
 8006538:	ea43 030a 	orr.w	r3, r3, sl
 800653c:	e7e5      	b.n	800650a <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800653e:	f1be 0f00 	cmp.w	lr, #0
 8006542:	d02c      	beq.n	800659e <QSPI_Config+0x11e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006544:	ea46 050e 	orr.w	r5, r6, lr
 8006548:	688b      	ldr	r3, [r1, #8]
 800654a:	6804      	ldr	r4, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800654c:	694e      	ldr	r6, [r1, #20]
 800654e:	4315      	orrs	r5, r2
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006550:	61e3      	str	r3, [r4, #28]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006552:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8006556:	04b6      	lsls	r6, r6, #18
 8006558:	690b      	ldr	r3, [r1, #16]
 800655a:	e9d1 8e0b 	ldrd	r8, lr, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800655e:	b1a7      	cbz	r7, 800658a <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006560:	433b      	orrs	r3, r7
 8006562:	68c8      	ldr	r0, [r1, #12]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006564:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006568:	ea43 0308 	orr.w	r3, r3, r8
 800656c:	ea43 030e 	orr.w	r3, r3, lr
 8006570:	ea43 030c 	orr.w	r3, r3, ip
 8006574:	ea43 0300 	orr.w	r3, r3, r0
 8006578:	ea43 0306 	orr.w	r3, r3, r6
 800657c:	ea43 0305 	orr.w	r3, r3, r5
 8006580:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006582:	d0b7      	beq.n	80064f4 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006584:	684b      	ldr	r3, [r1, #4]
 8006586:	61a3      	str	r3, [r4, #24]
 8006588:	e7b4      	b.n	80064f4 <QSPI_Config+0x74>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800658a:	ea43 0308 	orr.w	r3, r3, r8
 800658e:	ea43 030e 	orr.w	r3, r3, lr
 8006592:	ea43 030c 	orr.w	r3, r3, ip
 8006596:	4333      	orrs	r3, r6
 8006598:	432b      	orrs	r3, r5
 800659a:	6163      	str	r3, [r4, #20]
 800659c:	e7aa      	b.n	80064f4 <QSPI_Config+0x74>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800659e:	b1d7      	cbz	r7, 80065d6 <QSPI_Config+0x156>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80065a0:	ea46 0307 	orr.w	r3, r6, r7
 80065a4:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 80065a6:	6800      	ldr	r0, [r0, #0]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80065a8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80065ac:	ea43 0302 	orr.w	r3, r3, r2
 80065b0:	ea43 0304 	orr.w	r3, r3, r4
 80065b4:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 80065b6:	ea43 0304 	orr.w	r3, r3, r4
 80065ba:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 80065bc:	ea43 0304 	orr.w	r3, r3, r4
 80065c0:	68cc      	ldr	r4, [r1, #12]
 80065c2:	ea43 0304 	orr.w	r3, r3, r4
 80065c6:	694c      	ldr	r4, [r1, #20]
 80065c8:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 80065cc:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80065ce:	d091      	beq.n	80064f4 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80065d0:	684b      	ldr	r3, [r1, #4]
 80065d2:	6183      	str	r3, [r0, #24]
 80065d4:	e78e      	b.n	80064f4 <QSPI_Config+0x74>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80065d6:	2e00      	cmp	r6, #0
 80065d8:	d08c      	beq.n	80064f4 <QSPI_Config+0x74>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80065da:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80065dc:	6800      	ldr	r0, [r0, #0]
 80065de:	4333      	orrs	r3, r6
 80065e0:	4313      	orrs	r3, r2
 80065e2:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 80065e4:	4313      	orrs	r3, r2
 80065e6:	6b4a      	ldr	r2, [r1, #52]	; 0x34
 80065e8:	4313      	orrs	r3, r2
 80065ea:	694a      	ldr	r2, [r1, #20]
 80065ec:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 80065f0:	6143      	str	r3, [r0, #20]
}
 80065f2:	e77f      	b.n	80064f4 <QSPI_Config+0x74>

080065f4 <QSPI_WaitFlagStateUntilTimeout>:
{
 80065f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065f8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80065fc:	4604      	mov	r4, r0
 80065fe:	460e      	mov	r6, r1
 8006600:	4615      	mov	r5, r2
 8006602:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006604:	6822      	ldr	r2, [r4, #0]
 8006606:	6893      	ldr	r3, [r2, #8]
 8006608:	4233      	tst	r3, r6
 800660a:	bf14      	ite	ne
 800660c:	2301      	movne	r3, #1
 800660e:	2300      	moveq	r3, #0
 8006610:	42ab      	cmp	r3, r5
 8006612:	d101      	bne.n	8006618 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8006614:	2000      	movs	r0, #0
 8006616:	e012      	b.n	800663e <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8006618:	f1b8 3fff 	cmp.w	r8, #4294967295
 800661c:	d0f3      	beq.n	8006606 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800661e:	f7fe fd79 	bl	8005114 <HAL_GetTick>
 8006622:	1bc0      	subs	r0, r0, r7
 8006624:	4540      	cmp	r0, r8
 8006626:	d802      	bhi.n	800662e <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8006628:	f1b8 0f00 	cmp.w	r8, #0
 800662c:	d1ea      	bne.n	8006604 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800662e:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006630:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006632:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006636:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006638:	f043 0301 	orr.w	r3, r3, #1
 800663c:	6463      	str	r3, [r4, #68]	; 0x44
}
 800663e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006644 <HAL_QSPI_Init>:
{
 8006644:	b530      	push	{r4, r5, lr}
 8006646:	4604      	mov	r4, r0
 8006648:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 800664a:	f7fe fd63 	bl	8005114 <HAL_GetTick>
 800664e:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8006650:	2c00      	cmp	r4, #0
 8006652:	d040      	beq.n	80066d6 <HAL_QSPI_Init+0x92>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8006654:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006658:	b93a      	cbnz	r2, 800666a <HAL_QSPI_Init+0x26>
 800665a:	9003      	str	r0, [sp, #12]
    HAL_QSPI_MspInit(hqspi);
 800665c:	4620      	mov	r0, r4
 800665e:	f7fb f9b7 	bl	80019d0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8006662:	f241 3288 	movw	r2, #5000	; 0x1388
 8006666:	9b03      	ldr	r3, [sp, #12]
 8006668:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800666a:	6820      	ldr	r0, [r4, #0]
 800666c:	68a1      	ldr	r1, [r4, #8]
 800666e:	6802      	ldr	r2, [r0, #0]
 8006670:	3901      	subs	r1, #1
 8006672:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8006676:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800667a:	2120      	movs	r1, #32
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800667c:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800667e:	4620      	mov	r0, r4
 8006680:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006682:	9200      	str	r2, [sp, #0]
 8006684:	2200      	movs	r2, #0
 8006686:	f7ff ffb5 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800668a:	bb10      	cbnz	r0, 80066d2 <HAL_QSPI_Init+0x8e>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800668c:	6822      	ldr	r2, [r4, #0]
 800668e:	69e5      	ldr	r5, [r4, #28]
 8006690:	68e3      	ldr	r3, [r4, #12]
 8006692:	6811      	ldr	r1, [r2, #0]
 8006694:	432b      	orrs	r3, r5
 8006696:	6a25      	ldr	r5, [r4, #32]
 8006698:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800669c:	432b      	orrs	r3, r5
 800669e:	6865      	ldr	r5, [r4, #4]
 80066a0:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 80066a4:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 80066a8:	430b      	orrs	r3, r1
 80066aa:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 80066ac:	6855      	ldr	r5, [r2, #4]
 80066ae:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80066b2:	430b      	orrs	r3, r1
 80066b4:	6921      	ldr	r1, [r4, #16]
 80066b6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80066ba:	4908      	ldr	r1, [pc, #32]	; (80066dc <HAL_QSPI_Init+0x98>)
 80066bc:	4029      	ands	r1, r5
 80066be:	430b      	orrs	r3, r1
 80066c0:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 80066c2:	6813      	ldr	r3, [r2, #0]
 80066c4:	f043 0301 	orr.w	r3, r3, #1
 80066c8:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 80066ca:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80066cc:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 80066ce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 80066d2:	b005      	add	sp, #20
 80066d4:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 80066d6:	2001      	movs	r0, #1
 80066d8:	e7fb      	b.n	80066d2 <HAL_QSPI_Init+0x8e>
 80066da:	bf00      	nop
 80066dc:	ffe0f8fe 	.word	0xffe0f8fe

080066e0 <HAL_QSPI_DeInit>:
{
 80066e0:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 80066e2:	4604      	mov	r4, r0
 80066e4:	b158      	cbz	r0, 80066fe <HAL_QSPI_DeInit+0x1e>
  __HAL_QSPI_DISABLE(hqspi);
 80066e6:	6802      	ldr	r2, [r0, #0]
 80066e8:	6813      	ldr	r3, [r2, #0]
 80066ea:	f023 0301 	bic.w	r3, r3, #1
 80066ee:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 80066f0:	f7fb fa3a 	bl	8001b68 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80066f4:	2000      	movs	r0, #0
 80066f6:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 80066f8:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
}
 80066fc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80066fe:	2001      	movs	r0, #1
 8006700:	e7fc      	b.n	80066fc <HAL_QSPI_DeInit+0x1c>

08006702 <HAL_QSPI_Command>:
{
 8006702:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006706:	4604      	mov	r4, r0
 8006708:	b085      	sub	sp, #20
 800670a:	4617      	mov	r7, r2
 800670c:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800670e:	f7fe fd01 	bl	8005114 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006712:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8006716:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006718:	2a01      	cmp	r2, #1
 800671a:	d033      	beq.n	8006784 <HAL_QSPI_Command+0x82>
 800671c:	2201      	movs	r2, #1
 800671e:	2602      	movs	r6, #2
 8006720:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006724:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006728:	2a01      	cmp	r2, #1
 800672a:	fa5f f882 	uxtb.w	r8, r2
 800672e:	d127      	bne.n	8006780 <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006730:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006732:	9003      	str	r0, [sp, #12]
 8006734:	2120      	movs	r1, #32
 8006736:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006738:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800673a:	9700      	str	r7, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800673c:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006740:	f7ff ff58 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006744:	4605      	mov	r5, r0
 8006746:	b9a0      	cbnz	r0, 8006772 <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006748:	4602      	mov	r2, r0
 800674a:	4649      	mov	r1, r9
 800674c:	4620      	mov	r0, r4
 800674e:	f7ff fe97 	bl	8006480 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8006752:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8006756:	9b03      	ldr	r3, [sp, #12]
 8006758:	b94a      	cbnz	r2, 800676e <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800675a:	4642      	mov	r2, r8
 800675c:	4631      	mov	r1, r6
 800675e:	4620      	mov	r0, r4
 8006760:	9700      	str	r7, [sp, #0]
 8006762:	f7ff ff47 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006766:	4605      	mov	r5, r0
 8006768:	b918      	cbnz	r0, 8006772 <HAL_QSPI_Command+0x70>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800676a:	6823      	ldr	r3, [r4, #0]
 800676c:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800676e:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006772:	2300      	movs	r3, #0
 8006774:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006778:	4628      	mov	r0, r5
 800677a:	b005      	add	sp, #20
 800677c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8006780:	4635      	mov	r5, r6
 8006782:	e7f6      	b.n	8006772 <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8006784:	2502      	movs	r5, #2
 8006786:	e7f7      	b.n	8006778 <HAL_QSPI_Command+0x76>

08006788 <HAL_QSPI_Transmit>:
{
 8006788:	b5f0      	push	{r4, r5, r6, r7, lr}
 800678a:	4604      	mov	r4, r0
 800678c:	b085      	sub	sp, #20
 800678e:	4616      	mov	r6, r2
 8006790:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006792:	f7fe fcbf 	bl	8005114 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006796:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 800679a:	4603      	mov	r3, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800679c:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800679e:	2a01      	cmp	r2, #1
 80067a0:	d049      	beq.n	8006836 <HAL_QSPI_Transmit+0xae>
 80067a2:	2201      	movs	r2, #1
 80067a4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80067a8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80067ac:	2a01      	cmp	r2, #1
 80067ae:	b2d0      	uxtb	r0, r2
 80067b0:	d13f      	bne.n	8006832 <HAL_QSPI_Transmit+0xaa>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80067b2:	2200      	movs	r2, #0
 80067b4:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80067b6:	2f00      	cmp	r7, #0
 80067b8:	d036      	beq.n	8006828 <HAL_QSPI_Transmit+0xa0>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80067ba:	2212      	movs	r2, #18
 80067bc:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80067c0:	692a      	ldr	r2, [r5, #16]
 80067c2:	3201      	adds	r2, #1
 80067c4:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80067c6:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 80067c8:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80067ca:	3201      	adds	r2, #1
 80067cc:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80067ce:	696a      	ldr	r2, [r5, #20]
 80067d0:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 80067d4:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 80067d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80067d8:	b98a      	cbnz	r2, 80067fe <HAL_QSPI_Transmit+0x76>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80067da:	2201      	movs	r2, #1
 80067dc:	2102      	movs	r1, #2
 80067de:	4620      	mov	r0, r4
 80067e0:	9600      	str	r6, [sp, #0]
 80067e2:	f7ff ff07 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80067e6:	b910      	cbnz	r0, 80067ee <HAL_QSPI_Transmit+0x66>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80067e8:	6823      	ldr	r3, [r4, #0]
 80067ea:	2202      	movs	r2, #2
 80067ec:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 80067ee:	2301      	movs	r3, #1
 80067f0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80067f4:	2300      	movs	r3, #0
 80067f6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80067fa:	b005      	add	sp, #20
 80067fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 80067fe:	2201      	movs	r2, #1
 8006800:	2104      	movs	r1, #4
 8006802:	4620      	mov	r0, r4
 8006804:	9600      	str	r6, [sp, #0]
 8006806:	9303      	str	r3, [sp, #12]
 8006808:	f7ff fef4 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800680c:	2800      	cmp	r0, #0
 800680e:	d1ee      	bne.n	80067ee <HAL_QSPI_Transmit+0x66>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006810:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006812:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006814:	7812      	ldrb	r2, [r2, #0]
 8006816:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800681a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800681c:	3201      	adds	r2, #1
 800681e:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006820:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006822:	3a01      	subs	r2, #1
 8006824:	62e2      	str	r2, [r4, #44]	; 0x2c
 8006826:	e7d6      	b.n	80067d6 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006828:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800682a:	f043 0308 	orr.w	r3, r3, #8
 800682e:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006830:	e7e0      	b.n	80067f4 <HAL_QSPI_Transmit+0x6c>
    status = HAL_BUSY;
 8006832:	2002      	movs	r0, #2
 8006834:	e7de      	b.n	80067f4 <HAL_QSPI_Transmit+0x6c>
  __HAL_LOCK(hqspi);
 8006836:	2002      	movs	r0, #2
 8006838:	e7df      	b.n	80067fa <HAL_QSPI_Transmit+0x72>

0800683a <HAL_QSPI_Receive>:
{
 800683a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800683c:	4604      	mov	r4, r0
 800683e:	b085      	sub	sp, #20
 8006840:	4616      	mov	r6, r2
 8006842:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006844:	f7fe fc66 	bl	8005114 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006848:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 800684a:	4603      	mov	r3, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800684c:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8006850:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006854:	2a01      	cmp	r2, #1
 8006856:	d04d      	beq.n	80068f4 <HAL_QSPI_Receive+0xba>
 8006858:	2201      	movs	r2, #1
 800685a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800685e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006862:	2a01      	cmp	r2, #1
 8006864:	b2d0      	uxtb	r0, r2
 8006866:	d143      	bne.n	80068f0 <HAL_QSPI_Receive+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006868:	2200      	movs	r2, #0
 800686a:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800686c:	2f00      	cmp	r7, #0
 800686e:	d03a      	beq.n	80068e6 <HAL_QSPI_Receive+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8006870:	2222      	movs	r2, #34	; 0x22
 8006872:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006876:	692a      	ldr	r2, [r5, #16]
 8006878:	3201      	adds	r2, #1
 800687a:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800687c:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800687e:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006880:	3201      	adds	r2, #1
 8006882:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006884:	6969      	ldr	r1, [r5, #20]
 8006886:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800688a:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800688e:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8006890:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8006894:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006896:	b98a      	cbnz	r2, 80068bc <HAL_QSPI_Receive+0x82>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006898:	2201      	movs	r2, #1
 800689a:	2102      	movs	r1, #2
 800689c:	4620      	mov	r0, r4
 800689e:	9600      	str	r6, [sp, #0]
 80068a0:	f7ff fea8 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80068a4:	b910      	cbnz	r0, 80068ac <HAL_QSPI_Receive+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80068a6:	6823      	ldr	r3, [r4, #0]
 80068a8:	2202      	movs	r2, #2
 80068aa:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 80068ac:	2301      	movs	r3, #1
 80068ae:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80068b2:	2300      	movs	r3, #0
 80068b4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80068b8:	b005      	add	sp, #20
 80068ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80068bc:	2201      	movs	r2, #1
 80068be:	2106      	movs	r1, #6
 80068c0:	4620      	mov	r0, r4
 80068c2:	9600      	str	r6, [sp, #0]
 80068c4:	9303      	str	r3, [sp, #12]
 80068c6:	f7ff fe95 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 80068ca:	2800      	cmp	r0, #0
 80068cc:	d1ee      	bne.n	80068ac <HAL_QSPI_Receive+0x72>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80068ce:	f895 1020 	ldrb.w	r1, [r5, #32]
 80068d2:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80068d4:	9b03      	ldr	r3, [sp, #12]
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80068d6:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 80068d8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80068da:	3201      	adds	r2, #1
 80068dc:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80068de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80068e0:	3a01      	subs	r2, #1
 80068e2:	63a2      	str	r2, [r4, #56]	; 0x38
 80068e4:	e7d6      	b.n	8006894 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80068e6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80068e8:	f043 0308 	orr.w	r3, r3, #8
 80068ec:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 80068ee:	e7e0      	b.n	80068b2 <HAL_QSPI_Receive+0x78>
    status = HAL_BUSY;
 80068f0:	2002      	movs	r0, #2
 80068f2:	e7de      	b.n	80068b2 <HAL_QSPI_Receive+0x78>
  __HAL_LOCK(hqspi);
 80068f4:	2002      	movs	r0, #2
 80068f6:	e7df      	b.n	80068b8 <HAL_QSPI_Receive+0x7e>

080068f8 <HAL_QSPI_AutoPolling>:
{
 80068f8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80068fc:	4604      	mov	r4, r0
 80068fe:	4615      	mov	r5, r2
 8006900:	461e      	mov	r6, r3
 8006902:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8006904:	f7fe fc06 	bl	8005114 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006908:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 800690c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800690e:	2a01      	cmp	r2, #1
 8006910:	d040      	beq.n	8006994 <HAL_QSPI_AutoPolling+0x9c>
 8006912:	2201      	movs	r2, #1
 8006914:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006918:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800691c:	2a01      	cmp	r2, #1
 800691e:	b2d7      	uxtb	r7, r2
 8006920:	d136      	bne.n	8006990 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006922:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006924:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006926:	9003      	str	r0, [sp, #12]
 8006928:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800692a:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800692c:	9600      	str	r6, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800692e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006932:	2120      	movs	r1, #32
 8006934:	f7ff fe5e 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006938:	bb20      	cbnz	r0, 8006984 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800693a:	6821      	ldr	r1, [r4, #0]
 800693c:	682a      	ldr	r2, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800693e:	6928      	ldr	r0, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006940:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8006942:	686a      	ldr	r2, [r5, #4]
 8006944:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8006946:	68aa      	ldr	r2, [r5, #8]
 8006948:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800694a:	680a      	ldr	r2, [r1, #0]
 800694c:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8006950:	4302      	orrs	r2, r0
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006952:	4620      	mov	r0, r4
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006954:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006958:	600a      	str	r2, [r1, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800695a:	4641      	mov	r1, r8
      cmd->NbData = cfg->StatusBytesSize;
 800695c:	68ea      	ldr	r2, [r5, #12]
 800695e:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006962:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006966:	f7ff fd8b 	bl	8006480 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800696a:	9b03      	ldr	r3, [sp, #12]
 800696c:	463a      	mov	r2, r7
 800696e:	2108      	movs	r1, #8
 8006970:	4620      	mov	r0, r4
 8006972:	9600      	str	r6, [sp, #0]
 8006974:	f7ff fe3e 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006978:	b920      	cbnz	r0, 8006984 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800697a:	6823      	ldr	r3, [r4, #0]
 800697c:	2208      	movs	r2, #8
 800697e:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006980:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006984:	2300      	movs	r3, #0
 8006986:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800698a:	b004      	add	sp, #16
 800698c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8006990:	2002      	movs	r0, #2
 8006992:	e7f7      	b.n	8006984 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8006994:	2002      	movs	r0, #2
 8006996:	e7f8      	b.n	800698a <HAL_QSPI_AutoPolling+0x92>

08006998 <HAL_QSPI_MemoryMapped>:
{
 8006998:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800699a:	4604      	mov	r4, r0
 800699c:	4616      	mov	r6, r2
 800699e:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80069a0:	f7fe fbb8 	bl	8005114 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80069a4:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 80069a8:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80069aa:	2a01      	cmp	r2, #1
 80069ac:	d033      	beq.n	8006a16 <HAL_QSPI_MemoryMapped+0x7e>
 80069ae:	2201      	movs	r2, #1
 80069b0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80069b4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80069b8:	2a01      	cmp	r2, #1
 80069ba:	d12a      	bne.n	8006a12 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80069bc:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80069be:	2182      	movs	r1, #130	; 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80069c0:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80069c2:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80069c4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80069c8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80069ca:	9100      	str	r1, [sp, #0]
 80069cc:	2120      	movs	r1, #32
 80069ce:	f7ff fe11 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80069d2:	4605      	mov	r5, r0
 80069d4:	b9b8      	cbnz	r0, 8006a06 <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80069d6:	6823      	ldr	r3, [r4, #0]
 80069d8:	6872      	ldr	r2, [r6, #4]
 80069da:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80069dc:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80069de:	f020 0008 	bic.w	r0, r0, #8
 80069e2:	ea40 0002 	orr.w	r0, r0, r2
 80069e6:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80069e8:	d107      	bne.n	80069fa <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80069ea:	6832      	ldr	r2, [r6, #0]
 80069ec:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80069ee:	2210      	movs	r2, #16
 80069f0:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80069f2:	681a      	ldr	r2, [r3, #0]
 80069f4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80069f8:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 80069fa:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 80069fe:	4639      	mov	r1, r7
 8006a00:	4620      	mov	r0, r4
 8006a02:	f7ff fd3d 	bl	8006480 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8006a06:	2300      	movs	r3, #0
 8006a08:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006a0c:	4628      	mov	r0, r5
 8006a0e:	b003      	add	sp, #12
 8006a10:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8006a12:	2502      	movs	r5, #2
 8006a14:	e7f7      	b.n	8006a06 <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 8006a16:	2502      	movs	r5, #2
 8006a18:	e7f8      	b.n	8006a0c <HAL_QSPI_MemoryMapped+0x74>

08006a1a <HAL_QSPI_Abort>:
{
 8006a1a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006a1c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006a1e:	f7fe fb79 	bl	8005114 <HAL_GetTick>
 8006a22:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8006a24:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8006a28:	f010 0002 	ands.w	r0, r0, #2
 8006a2c:	d03a      	beq.n	8006aa4 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 8006a2e:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006a30:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 8006a32:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006a36:	680a      	ldr	r2, [r1, #0]
 8006a38:	f012 0204 	ands.w	r2, r2, #4
 8006a3c:	d034      	beq.n	8006aa8 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006a3e:	680a      	ldr	r2, [r1, #0]
      status = HAL_MDMA_Abort(hqspi->hmdma);
 8006a40:	6be0      	ldr	r0, [r4, #60]	; 0x3c
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006a42:	f022 0204 	bic.w	r2, r2, #4
 8006a46:	9303      	str	r3, [sp, #12]
 8006a48:	600a      	str	r2, [r1, #0]
      status = HAL_MDMA_Abort(hqspi->hmdma);
 8006a4a:	f7ff fcbd 	bl	80063c8 <HAL_MDMA_Abort>
      if(status != HAL_OK)
 8006a4e:	9b03      	ldr	r3, [sp, #12]
 8006a50:	b118      	cbz	r0, 8006a5a <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8006a52:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006a54:	f042 0204 	orr.w	r2, r2, #4
 8006a58:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8006a5a:	6822      	ldr	r2, [r4, #0]
 8006a5c:	6891      	ldr	r1, [r2, #8]
 8006a5e:	0689      	lsls	r1, r1, #26
 8006a60:	d51d      	bpl.n	8006a9e <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006a62:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006a64:	4620      	mov	r0, r4
 8006a66:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006a68:	f041 0102 	orr.w	r1, r1, #2
 8006a6c:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006a6e:	2102      	movs	r1, #2
 8006a70:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006a72:	9200      	str	r2, [sp, #0]
 8006a74:	2201      	movs	r2, #1
 8006a76:	f7ff fdbd 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006a7a:	9b03      	ldr	r3, [sp, #12]
 8006a7c:	b990      	cbnz	r0, 8006aa4 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006a7e:	6822      	ldr	r2, [r4, #0]
 8006a80:	2102      	movs	r1, #2
 8006a82:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006a84:	2120      	movs	r1, #32
 8006a86:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006a88:	9200      	str	r2, [sp, #0]
 8006a8a:	4602      	mov	r2, r0
 8006a8c:	4620      	mov	r0, r4
 8006a8e:	f7ff fdb1 	bl	80065f4 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006a92:	b938      	cbnz	r0, 8006aa4 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8006a94:	6822      	ldr	r2, [r4, #0]
 8006a96:	6953      	ldr	r3, [r2, #20]
 8006a98:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006a9c:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006a9e:	2301      	movs	r3, #1
 8006aa0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8006aa4:	b004      	add	sp, #16
 8006aa6:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8006aa8:	4610      	mov	r0, r2
 8006aaa:	e7d6      	b.n	8006a5a <HAL_QSPI_Abort+0x40>

08006aac <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006aae:	4604      	mov	r4, r0
 8006ab0:	b908      	cbnz	r0, 8006ab6 <HAL_RCC_OscConfig+0xa>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
      {
        return HAL_ERROR;
 8006ab2:	2001      	movs	r0, #1
 8006ab4:	e08c      	b.n	8006bd0 <HAL_RCC_OscConfig+0x124>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006ab6:	6803      	ldr	r3, [r0, #0]
 8006ab8:	07d8      	lsls	r0, r3, #31
 8006aba:	d45e      	bmi.n	8006b7a <HAL_RCC_OscConfig+0xce>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006abc:	6823      	ldr	r3, [r4, #0]
 8006abe:	0799      	lsls	r1, r3, #30
 8006ac0:	f100 80ac 	bmi.w	8006c1c <HAL_RCC_OscConfig+0x170>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006ac4:	6823      	ldr	r3, [r4, #0]
 8006ac6:	06da      	lsls	r2, r3, #27
 8006ac8:	d527      	bpl.n	8006b1a <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006aca:	4a9c      	ldr	r2, [pc, #624]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006acc:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006ace:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006ad0:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8006ad4:	2b08      	cmp	r3, #8
 8006ad6:	d007      	beq.n	8006ae8 <HAL_RCC_OscConfig+0x3c>
 8006ad8:	2b18      	cmp	r3, #24
 8006ada:	f040 8103 	bne.w	8006ce4 <HAL_RCC_OscConfig+0x238>
 8006ade:	f001 0303 	and.w	r3, r1, #3
 8006ae2:	2b01      	cmp	r3, #1
 8006ae4:	f040 80fe 	bne.w	8006ce4 <HAL_RCC_OscConfig+0x238>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006ae8:	6813      	ldr	r3, [r2, #0]
 8006aea:	05db      	lsls	r3, r3, #23
 8006aec:	d502      	bpl.n	8006af4 <HAL_RCC_OscConfig+0x48>
 8006aee:	69e3      	ldr	r3, [r4, #28]
 8006af0:	2b80      	cmp	r3, #128	; 0x80
 8006af2:	d1de      	bne.n	8006ab2 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006af4:	f7fe fb26 	bl	8005144 <HAL_GetREVID>
 8006af8:	f241 0303 	movw	r3, #4099	; 0x1003
 8006afc:	6a21      	ldr	r1, [r4, #32]
 8006afe:	4298      	cmp	r0, r3
 8006b00:	4b8e      	ldr	r3, [pc, #568]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006b02:	f200 80e8 	bhi.w	8006cd6 <HAL_RCC_OscConfig+0x22a>
 8006b06:	685a      	ldr	r2, [r3, #4]
 8006b08:	2920      	cmp	r1, #32
 8006b0a:	f022 42f8 	bic.w	r2, r2, #2080374784	; 0x7c000000
 8006b0e:	bf0c      	ite	eq
 8006b10:	f042 4280 	orreq.w	r2, r2, #1073741824	; 0x40000000
 8006b14:	ea42 6281 	orrne.w	r2, r2, r1, lsl #26
 8006b18:	605a      	str	r2, [r3, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006b1a:	6823      	ldr	r3, [r4, #0]
 8006b1c:	0719      	lsls	r1, r3, #28
 8006b1e:	f100 8122 	bmi.w	8006d66 <HAL_RCC_OscConfig+0x2ba>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8006b22:	6823      	ldr	r3, [r4, #0]
 8006b24:	069a      	lsls	r2, r3, #26
 8006b26:	f100 8143 	bmi.w	8006db0 <HAL_RCC_OscConfig+0x304>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006b2a:	6823      	ldr	r3, [r4, #0]
 8006b2c:	075d      	lsls	r5, r3, #29
 8006b2e:	d51e      	bpl.n	8006b6e <HAL_RCC_OscConfig+0xc2>
    PWR->CR1 |= PWR_CR1_DBP;
 8006b30:	4d83      	ldr	r5, [pc, #524]	; (8006d40 <HAL_RCC_OscConfig+0x294>)
 8006b32:	682b      	ldr	r3, [r5, #0]
 8006b34:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006b38:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006b3a:	f7fe faeb 	bl	8005114 <HAL_GetTick>
 8006b3e:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8006b40:	682b      	ldr	r3, [r5, #0]
 8006b42:	05da      	lsls	r2, r3, #23
 8006b44:	f140 8159 	bpl.w	8006dfa <HAL_RCC_OscConfig+0x34e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006b48:	68a3      	ldr	r3, [r4, #8]
 8006b4a:	4d7c      	ldr	r5, [pc, #496]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006b4c:	2b01      	cmp	r3, #1
 8006b4e:	f040 815b 	bne.w	8006e08 <HAL_RCC_OscConfig+0x35c>
 8006b52:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006b54:	f043 0301 	orr.w	r3, r3, #1
 8006b58:	672b      	str	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006b5a:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006b5e:	f7fe fad9 	bl	8005114 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006b62:	4e76      	ldr	r6, [pc, #472]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 8006b64:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006b66:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006b68:	079b      	lsls	r3, r3, #30
 8006b6a:	f140 8173 	bpl.w	8006e54 <HAL_RCC_OscConfig+0x3a8>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006b6e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006b70:	2800      	cmp	r0, #0
 8006b72:	f040 8176 	bne.w	8006e62 <HAL_RCC_OscConfig+0x3b6>
          __HAL_RCC_PLLFRACN_ENABLE();
        }
      }
    }
  }
  return HAL_OK;
 8006b76:	2000      	movs	r0, #0
 8006b78:	e02a      	b.n	8006bd0 <HAL_RCC_OscConfig+0x124>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006b7a:	4a70      	ldr	r2, [pc, #448]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006b7c:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006b7e:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006b80:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8006b84:	2b10      	cmp	r3, #16
 8006b86:	d005      	beq.n	8006b94 <HAL_RCC_OscConfig+0xe8>
 8006b88:	2b18      	cmp	r3, #24
 8006b8a:	d10a      	bne.n	8006ba2 <HAL_RCC_OscConfig+0xf6>
 8006b8c:	f001 0303 	and.w	r3, r1, #3
 8006b90:	2b02      	cmp	r3, #2
 8006b92:	d106      	bne.n	8006ba2 <HAL_RCC_OscConfig+0xf6>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006b94:	6813      	ldr	r3, [r2, #0]
 8006b96:	039a      	lsls	r2, r3, #14
 8006b98:	d590      	bpl.n	8006abc <HAL_RCC_OscConfig+0x10>
 8006b9a:	6863      	ldr	r3, [r4, #4]
 8006b9c:	2b00      	cmp	r3, #0
 8006b9e:	d18d      	bne.n	8006abc <HAL_RCC_OscConfig+0x10>
 8006ba0:	e787      	b.n	8006ab2 <HAL_RCC_OscConfig+0x6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006ba2:	6863      	ldr	r3, [r4, #4]
 8006ba4:	4d65      	ldr	r5, [pc, #404]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006ba6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006baa:	d112      	bne.n	8006bd2 <HAL_RCC_OscConfig+0x126>
 8006bac:	682b      	ldr	r3, [r5, #0]
 8006bae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006bb2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006bb4:	f7fe faae 	bl	8005114 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006bb8:	4e60      	ldr	r6, [pc, #384]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 8006bba:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006bbc:	6833      	ldr	r3, [r6, #0]
 8006bbe:	039b      	lsls	r3, r3, #14
 8006bc0:	f53f af7c 	bmi.w	8006abc <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006bc4:	f7fe faa6 	bl	8005114 <HAL_GetTick>
 8006bc8:	1b40      	subs	r0, r0, r5
 8006bca:	2864      	cmp	r0, #100	; 0x64
 8006bcc:	d9f6      	bls.n	8006bbc <HAL_RCC_OscConfig+0x110>
            return HAL_TIMEOUT;
 8006bce:	2003      	movs	r0, #3
}
 8006bd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006bd2:	b9a3      	cbnz	r3, 8006bfe <HAL_RCC_OscConfig+0x152>
 8006bd4:	682b      	ldr	r3, [r5, #0]
 8006bd6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006bda:	602b      	str	r3, [r5, #0]
 8006bdc:	682b      	ldr	r3, [r5, #0]
 8006bde:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006be2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006be4:	f7fe fa96 	bl	8005114 <HAL_GetTick>
 8006be8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006bea:	682b      	ldr	r3, [r5, #0]
 8006bec:	039f      	lsls	r7, r3, #14
 8006bee:	f57f af65 	bpl.w	8006abc <HAL_RCC_OscConfig+0x10>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006bf2:	f7fe fa8f 	bl	8005114 <HAL_GetTick>
 8006bf6:	1b80      	subs	r0, r0, r6
 8006bf8:	2864      	cmp	r0, #100	; 0x64
 8006bfa:	d9f6      	bls.n	8006bea <HAL_RCC_OscConfig+0x13e>
 8006bfc:	e7e7      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006bfe:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006c02:	682b      	ldr	r3, [r5, #0]
 8006c04:	d103      	bne.n	8006c0e <HAL_RCC_OscConfig+0x162>
 8006c06:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006c0a:	602b      	str	r3, [r5, #0]
 8006c0c:	e7ce      	b.n	8006bac <HAL_RCC_OscConfig+0x100>
 8006c0e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006c12:	602b      	str	r3, [r5, #0]
 8006c14:	682b      	ldr	r3, [r5, #0]
 8006c16:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006c1a:	e7ca      	b.n	8006bb2 <HAL_RCC_OscConfig+0x106>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006c1c:	4947      	ldr	r1, [pc, #284]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006c1e:	68e2      	ldr	r2, [r4, #12]
 8006c20:	690b      	ldr	r3, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006c22:	6a88      	ldr	r0, [r1, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8006c24:	f013 0338 	ands.w	r3, r3, #56	; 0x38
 8006c28:	d003      	beq.n	8006c32 <HAL_RCC_OscConfig+0x186>
 8006c2a:	2b18      	cmp	r3, #24
 8006c2c:	d12b      	bne.n	8006c86 <HAL_RCC_OscConfig+0x1da>
 8006c2e:	0780      	lsls	r0, r0, #30
 8006c30:	d129      	bne.n	8006c86 <HAL_RCC_OscConfig+0x1da>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006c32:	680b      	ldr	r3, [r1, #0]
 8006c34:	075b      	lsls	r3, r3, #29
 8006c36:	d502      	bpl.n	8006c3e <HAL_RCC_OscConfig+0x192>
 8006c38:	2a00      	cmp	r2, #0
 8006c3a:	f43f af3a 	beq.w	8006ab2 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006c3e:	4d3f      	ldr	r5, [pc, #252]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006c40:	682b      	ldr	r3, [r5, #0]
 8006c42:	f023 0319 	bic.w	r3, r3, #25
 8006c46:	4313      	orrs	r3, r2
 8006c48:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c4a:	f7fe fa63 	bl	8005114 <HAL_GetTick>
 8006c4e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006c50:	682b      	ldr	r3, [r5, #0]
 8006c52:	075f      	lsls	r7, r3, #29
 8006c54:	d511      	bpl.n	8006c7a <HAL_RCC_OscConfig+0x1ce>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006c56:	f7fe fa75 	bl	8005144 <HAL_GetREVID>
 8006c5a:	f241 0303 	movw	r3, #4099	; 0x1003
 8006c5e:	6922      	ldr	r2, [r4, #16]
 8006c60:	4298      	cmp	r0, r3
 8006c62:	686b      	ldr	r3, [r5, #4]
 8006c64:	d822      	bhi.n	8006cac <HAL_RCC_OscConfig+0x200>
 8006c66:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8006c6a:	2a40      	cmp	r2, #64	; 0x40
 8006c6c:	bf0c      	ite	eq
 8006c6e:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
 8006c72:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
 8006c76:	606b      	str	r3, [r5, #4]
 8006c78:	e724      	b.n	8006ac4 <HAL_RCC_OscConfig+0x18>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006c7a:	f7fe fa4b 	bl	8005114 <HAL_GetTick>
 8006c7e:	1b80      	subs	r0, r0, r6
 8006c80:	2802      	cmp	r0, #2
 8006c82:	d9e5      	bls.n	8006c50 <HAL_RCC_OscConfig+0x1a4>
 8006c84:	e7a3      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006c86:	4d2d      	ldr	r5, [pc, #180]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006c88:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006c8a:	b1a2      	cbz	r2, 8006cb6 <HAL_RCC_OscConfig+0x20a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006c8c:	f023 0319 	bic.w	r3, r3, #25
 8006c90:	4313      	orrs	r3, r2
 8006c92:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006c94:	f7fe fa3e 	bl	8005114 <HAL_GetTick>
 8006c98:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006c9a:	682b      	ldr	r3, [r5, #0]
 8006c9c:	0758      	lsls	r0, r3, #29
 8006c9e:	d4da      	bmi.n	8006c56 <HAL_RCC_OscConfig+0x1aa>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006ca0:	f7fe fa38 	bl	8005114 <HAL_GetTick>
 8006ca4:	1b80      	subs	r0, r0, r6
 8006ca6:	2802      	cmp	r0, #2
 8006ca8:	d9f7      	bls.n	8006c9a <HAL_RCC_OscConfig+0x1ee>
 8006caa:	e790      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006cac:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8006cb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006cb4:	e7df      	b.n	8006c76 <HAL_RCC_OscConfig+0x1ca>
        __HAL_RCC_HSI_DISABLE();
 8006cb6:	f023 0301 	bic.w	r3, r3, #1
 8006cba:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006cbc:	f7fe fa2a 	bl	8005114 <HAL_GetTick>
 8006cc0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006cc2:	682b      	ldr	r3, [r5, #0]
 8006cc4:	0759      	lsls	r1, r3, #29
 8006cc6:	f57f aefd 	bpl.w	8006ac4 <HAL_RCC_OscConfig+0x18>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006cca:	f7fe fa23 	bl	8005114 <HAL_GetTick>
 8006cce:	1b80      	subs	r0, r0, r6
 8006cd0:	2802      	cmp	r0, #2
 8006cd2:	d9f6      	bls.n	8006cc2 <HAL_RCC_OscConfig+0x216>
 8006cd4:	e77b      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006cd6:	68da      	ldr	r2, [r3, #12]
 8006cd8:	f022 527c 	bic.w	r2, r2, #1056964608	; 0x3f000000
 8006cdc:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8006ce0:	60da      	str	r2, [r3, #12]
 8006ce2:	e71a      	b.n	8006b1a <HAL_RCC_OscConfig+0x6e>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8006ce4:	69e3      	ldr	r3, [r4, #28]
 8006ce6:	4d15      	ldr	r5, [pc, #84]	; (8006d3c <HAL_RCC_OscConfig+0x290>)
 8006ce8:	b363      	cbz	r3, 8006d44 <HAL_RCC_OscConfig+0x298>
        __HAL_RCC_CSI_ENABLE();
 8006cea:	682b      	ldr	r3, [r5, #0]
 8006cec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006cf0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006cf2:	f7fe fa0f 	bl	8005114 <HAL_GetTick>
 8006cf6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006cf8:	682b      	ldr	r3, [r5, #0]
 8006cfa:	05df      	lsls	r7, r3, #23
 8006cfc:	d511      	bpl.n	8006d22 <HAL_RCC_OscConfig+0x276>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006cfe:	f7fe fa21 	bl	8005144 <HAL_GetREVID>
 8006d02:	f241 0303 	movw	r3, #4099	; 0x1003
 8006d06:	6a22      	ldr	r2, [r4, #32]
 8006d08:	4298      	cmp	r0, r3
 8006d0a:	d810      	bhi.n	8006d2e <HAL_RCC_OscConfig+0x282>
 8006d0c:	686b      	ldr	r3, [r5, #4]
 8006d0e:	2a20      	cmp	r2, #32
 8006d10:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8006d14:	bf0c      	ite	eq
 8006d16:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
 8006d1a:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
 8006d1e:	606b      	str	r3, [r5, #4]
 8006d20:	e6fb      	b.n	8006b1a <HAL_RCC_OscConfig+0x6e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006d22:	f7fe f9f7 	bl	8005114 <HAL_GetTick>
 8006d26:	1b80      	subs	r0, r0, r6
 8006d28:	2802      	cmp	r0, #2
 8006d2a:	d9e5      	bls.n	8006cf8 <HAL_RCC_OscConfig+0x24c>
 8006d2c:	e74f      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006d2e:	68eb      	ldr	r3, [r5, #12]
 8006d30:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8006d34:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006d38:	60eb      	str	r3, [r5, #12]
 8006d3a:	e6ee      	b.n	8006b1a <HAL_RCC_OscConfig+0x6e>
 8006d3c:	58024400 	.word	0x58024400
 8006d40:	58024800 	.word	0x58024800
        __HAL_RCC_CSI_DISABLE();
 8006d44:	682b      	ldr	r3, [r5, #0]
 8006d46:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006d4a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006d4c:	f7fe f9e2 	bl	8005114 <HAL_GetTick>
 8006d50:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8006d52:	682b      	ldr	r3, [r5, #0]
 8006d54:	05d8      	lsls	r0, r3, #23
 8006d56:	f57f aee0 	bpl.w	8006b1a <HAL_RCC_OscConfig+0x6e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006d5a:	f7fe f9db 	bl	8005114 <HAL_GetTick>
 8006d5e:	1b80      	subs	r0, r0, r6
 8006d60:	2802      	cmp	r0, #2
 8006d62:	d9f6      	bls.n	8006d52 <HAL_RCC_OscConfig+0x2a6>
 8006d64:	e733      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8006d66:	6963      	ldr	r3, [r4, #20]
 8006d68:	4da5      	ldr	r5, [pc, #660]	; (8007000 <HAL_RCC_OscConfig+0x554>)
 8006d6a:	b183      	cbz	r3, 8006d8e <HAL_RCC_OscConfig+0x2e2>
      __HAL_RCC_LSI_ENABLE();
 8006d6c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006d6e:	f043 0301 	orr.w	r3, r3, #1
 8006d72:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006d74:	f7fe f9ce 	bl	8005114 <HAL_GetTick>
 8006d78:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8006d7a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006d7c:	079b      	lsls	r3, r3, #30
 8006d7e:	f53f aed0 	bmi.w	8006b22 <HAL_RCC_OscConfig+0x76>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006d82:	f7fe f9c7 	bl	8005114 <HAL_GetTick>
 8006d86:	1b80      	subs	r0, r0, r6
 8006d88:	2802      	cmp	r0, #2
 8006d8a:	d9f6      	bls.n	8006d7a <HAL_RCC_OscConfig+0x2ce>
 8006d8c:	e71f      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_LSI_DISABLE();
 8006d8e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006d90:	f023 0301 	bic.w	r3, r3, #1
 8006d94:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006d96:	f7fe f9bd 	bl	8005114 <HAL_GetTick>
 8006d9a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006d9c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006d9e:	079f      	lsls	r7, r3, #30
 8006da0:	f57f aebf 	bpl.w	8006b22 <HAL_RCC_OscConfig+0x76>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006da4:	f7fe f9b6 	bl	8005114 <HAL_GetTick>
 8006da8:	1b80      	subs	r0, r0, r6
 8006daa:	2802      	cmp	r0, #2
 8006dac:	d9f6      	bls.n	8006d9c <HAL_RCC_OscConfig+0x2f0>
 8006dae:	e70e      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 8006db0:	69a3      	ldr	r3, [r4, #24]
 8006db2:	4d93      	ldr	r5, [pc, #588]	; (8007000 <HAL_RCC_OscConfig+0x554>)
 8006db4:	b183      	cbz	r3, 8006dd8 <HAL_RCC_OscConfig+0x32c>
      __HAL_RCC_HSI48_ENABLE();
 8006db6:	682b      	ldr	r3, [r5, #0]
 8006db8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006dbc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006dbe:	f7fe f9a9 	bl	8005114 <HAL_GetTick>
 8006dc2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8006dc4:	682b      	ldr	r3, [r5, #0]
 8006dc6:	0498      	lsls	r0, r3, #18
 8006dc8:	f53f aeaf 	bmi.w	8006b2a <HAL_RCC_OscConfig+0x7e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006dcc:	f7fe f9a2 	bl	8005114 <HAL_GetTick>
 8006dd0:	1b80      	subs	r0, r0, r6
 8006dd2:	2802      	cmp	r0, #2
 8006dd4:	d9f6      	bls.n	8006dc4 <HAL_RCC_OscConfig+0x318>
 8006dd6:	e6fa      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
      __HAL_RCC_HSI48_DISABLE();
 8006dd8:	682b      	ldr	r3, [r5, #0]
 8006dda:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006dde:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006de0:	f7fe f998 	bl	8005114 <HAL_GetTick>
 8006de4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8006de6:	682b      	ldr	r3, [r5, #0]
 8006de8:	0499      	lsls	r1, r3, #18
 8006dea:	f57f ae9e 	bpl.w	8006b2a <HAL_RCC_OscConfig+0x7e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006dee:	f7fe f991 	bl	8005114 <HAL_GetTick>
 8006df2:	1b80      	subs	r0, r0, r6
 8006df4:	2802      	cmp	r0, #2
 8006df6:	d9f6      	bls.n	8006de6 <HAL_RCC_OscConfig+0x33a>
 8006df8:	e6e9      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006dfa:	f7fe f98b 	bl	8005114 <HAL_GetTick>
 8006dfe:	1b80      	subs	r0, r0, r6
 8006e00:	2864      	cmp	r0, #100	; 0x64
 8006e02:	f67f ae9d 	bls.w	8006b40 <HAL_RCC_OscConfig+0x94>
 8006e06:	e6e2      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006e08:	b9b3      	cbnz	r3, 8006e38 <HAL_RCC_OscConfig+0x38c>
 8006e0a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006e0c:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006e10:	f023 0301 	bic.w	r3, r3, #1
 8006e14:	672b      	str	r3, [r5, #112]	; 0x70
 8006e16:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e18:	f023 0304 	bic.w	r3, r3, #4
 8006e1c:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006e1e:	f7fe f979 	bl	8005114 <HAL_GetTick>
 8006e22:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8006e24:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e26:	0798      	lsls	r0, r3, #30
 8006e28:	f57f aea1 	bpl.w	8006b6e <HAL_RCC_OscConfig+0xc2>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006e2c:	f7fe f972 	bl	8005114 <HAL_GetTick>
 8006e30:	1b80      	subs	r0, r0, r6
 8006e32:	42b8      	cmp	r0, r7
 8006e34:	d9f6      	bls.n	8006e24 <HAL_RCC_OscConfig+0x378>
 8006e36:	e6ca      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006e38:	2b05      	cmp	r3, #5
 8006e3a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e3c:	d103      	bne.n	8006e46 <HAL_RCC_OscConfig+0x39a>
 8006e3e:	f043 0304 	orr.w	r3, r3, #4
 8006e42:	672b      	str	r3, [r5, #112]	; 0x70
 8006e44:	e685      	b.n	8006b52 <HAL_RCC_OscConfig+0xa6>
 8006e46:	f023 0301 	bic.w	r3, r3, #1
 8006e4a:	672b      	str	r3, [r5, #112]	; 0x70
 8006e4c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e4e:	f023 0304 	bic.w	r3, r3, #4
 8006e52:	e681      	b.n	8006b58 <HAL_RCC_OscConfig+0xac>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006e54:	f7fe f95e 	bl	8005114 <HAL_GetTick>
 8006e58:	1b40      	subs	r0, r0, r5
 8006e5a:	42b8      	cmp	r0, r7
 8006e5c:	f67f ae83 	bls.w	8006b66 <HAL_RCC_OscConfig+0xba>
 8006e60:	e6b5      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 8006e62:	4d67      	ldr	r5, [pc, #412]	; (8007000 <HAL_RCC_OscConfig+0x554>)
 8006e64:	692b      	ldr	r3, [r5, #16]
 8006e66:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006e6a:	2b18      	cmp	r3, #24
 8006e6c:	d07a      	beq.n	8006f64 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
 8006e6e:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006e70:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006e72:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006e76:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006e78:	d167      	bne.n	8006f4a <HAL_RCC_OscConfig+0x49e>
        tickstart = HAL_GetTick();
 8006e7a:	f7fe f94b 	bl	8005114 <HAL_GetTick>
 8006e7e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006e80:	682b      	ldr	r3, [r5, #0]
 8006e82:	0199      	lsls	r1, r3, #6
 8006e84:	d45b      	bmi.n	8006f3e <HAL_RCC_OscConfig+0x492>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8006e86:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8006e88:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006e8a:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
 8006e8e:	f023 0303 	bic.w	r3, r3, #3
 8006e92:	4313      	orrs	r3, r2
 8006e94:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006e96:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8006e9a:	62ab      	str	r3, [r5, #40]	; 0x28
 8006e9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006e9e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006ea0:	3b01      	subs	r3, #1
 8006ea2:	3a01      	subs	r2, #1
 8006ea4:	025b      	lsls	r3, r3, #9
 8006ea6:	0412      	lsls	r2, r2, #16
 8006ea8:	b29b      	uxth	r3, r3
 8006eaa:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8006eae:	4313      	orrs	r3, r2
 8006eb0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006eb2:	3a01      	subs	r2, #1
 8006eb4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006eb8:	4313      	orrs	r3, r2
 8006eba:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006ebc:	3a01      	subs	r2, #1
 8006ebe:	0612      	lsls	r2, r2, #24
 8006ec0:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8006ec4:	4313      	orrs	r3, r2
 8006ec6:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
 8006ec8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006eca:	f023 0301 	bic.w	r3, r3, #1
 8006ece:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8006ed0:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8006ed2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006ed4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006ed8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006edc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006ee0:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8006ee2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006ee4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006ee6:	f023 030c 	bic.w	r3, r3, #12
 8006eea:	4313      	orrs	r3, r2
 8006eec:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8006eee:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006ef0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006ef2:	f023 0302 	bic.w	r3, r3, #2
 8006ef6:	4313      	orrs	r3, r2
 8006ef8:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8006efa:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006efc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006f00:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006f02:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006f04:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006f08:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8006f0a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006f0c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006f10:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
 8006f12:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006f14:	f043 0301 	orr.w	r3, r3, #1
 8006f18:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
 8006f1a:	682b      	ldr	r3, [r5, #0]
 8006f1c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8006f20:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006f22:	f7fe f8f7 	bl	8005114 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006f26:	4d36      	ldr	r5, [pc, #216]	; (8007000 <HAL_RCC_OscConfig+0x554>)
        tickstart = HAL_GetTick();
 8006f28:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8006f2a:	682b      	ldr	r3, [r5, #0]
 8006f2c:	019a      	lsls	r2, r3, #6
 8006f2e:	f53f ae22 	bmi.w	8006b76 <HAL_RCC_OscConfig+0xca>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006f32:	f7fe f8ef 	bl	8005114 <HAL_GetTick>
 8006f36:	1b00      	subs	r0, r0, r4
 8006f38:	2802      	cmp	r0, #2
 8006f3a:	d9f6      	bls.n	8006f2a <HAL_RCC_OscConfig+0x47e>
 8006f3c:	e647      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006f3e:	f7fe f8e9 	bl	8005114 <HAL_GetTick>
 8006f42:	1b80      	subs	r0, r0, r6
 8006f44:	2802      	cmp	r0, #2
 8006f46:	d99b      	bls.n	8006e80 <HAL_RCC_OscConfig+0x3d4>
 8006f48:	e641      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
        tickstart = HAL_GetTick();
 8006f4a:	f7fe f8e3 	bl	8005114 <HAL_GetTick>
 8006f4e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006f50:	682b      	ldr	r3, [r5, #0]
 8006f52:	019b      	lsls	r3, r3, #6
 8006f54:	f57f ae0f 	bpl.w	8006b76 <HAL_RCC_OscConfig+0xca>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006f58:	f7fe f8dc 	bl	8005114 <HAL_GetTick>
 8006f5c:	1b00      	subs	r0, r0, r4
 8006f5e:	2802      	cmp	r0, #2
 8006f60:	d9f6      	bls.n	8006f50 <HAL_RCC_OscConfig+0x4a4>
 8006f62:	e634      	b.n	8006bce <HAL_RCC_OscConfig+0x122>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006f64:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
 8006f66:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 8006f68:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006f6a:	f43f ae31 	beq.w	8006bd0 <HAL_RCC_OscConfig+0x124>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006f6e:	f002 0103 	and.w	r1, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006f72:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006f74:	4281      	cmp	r1, r0
 8006f76:	f47f ad9c 	bne.w	8006ab2 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8006f7a:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006f7e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006f80:	428a      	cmp	r2, r1
 8006f82:	f47f ad96 	bne.w	8006ab2 <HAL_RCC_OscConfig+0x6>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006f86:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006f88:	f3c3 0108 	ubfx	r1, r3, #0, #9
 8006f8c:	3a01      	subs	r2, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8006f8e:	4291      	cmp	r1, r2
 8006f90:	f47f ad8f 	bne.w	8006ab2 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006f94:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8006f96:	f3c3 2146 	ubfx	r1, r3, #9, #7
 8006f9a:	3a01      	subs	r2, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006f9c:	4291      	cmp	r1, r2
 8006f9e:	f47f ad88 	bne.w	8006ab2 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006fa2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006fa4:	f3c3 4106 	ubfx	r1, r3, #16, #7
 8006fa8:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006faa:	4291      	cmp	r1, r2
 8006fac:	f47f ad81 	bne.w	8006ab2 <HAL_RCC_OscConfig+0x6>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 8006fb0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8006fb2:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8006fb6:	3a01      	subs	r2, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006fb8:	4293      	cmp	r3, r2
 8006fba:	f47f ad7a 	bne.w	8006ab2 <HAL_RCC_OscConfig+0x6>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8006fbe:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8006fc0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8006fc2:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8006fc6:	429a      	cmp	r2, r3
 8006fc8:	f43f add5 	beq.w	8006b76 <HAL_RCC_OscConfig+0xca>
          __HAL_RCC_PLLFRACN_DISABLE();
 8006fcc:	4d0c      	ldr	r5, [pc, #48]	; (8007000 <HAL_RCC_OscConfig+0x554>)
 8006fce:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006fd0:	f023 0301 	bic.w	r3, r3, #1
 8006fd4:	62eb      	str	r3, [r5, #44]	; 0x2c
          tickstart = HAL_GetTick();
 8006fd6:	f7fe f89d 	bl	8005114 <HAL_GetTick>
 8006fda:	4606      	mov	r6, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 8006fdc:	f7fe f89a 	bl	8005114 <HAL_GetTick>
 8006fe0:	42b0      	cmp	r0, r6
 8006fe2:	d0fb      	beq.n	8006fdc <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8006fe4:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8006fe6:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006fe8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006fec:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006ff0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006ff4:	636b      	str	r3, [r5, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
 8006ff6:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8006ff8:	f043 0301 	orr.w	r3, r3, #1
 8006ffc:	62eb      	str	r3, [r5, #44]	; 0x2c
 8006ffe:	e5ba      	b.n	8006b76 <HAL_RCC_OscConfig+0xca>
 8007000:	58024400 	.word	0x58024400

08007004 <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007004:	4b49      	ldr	r3, [pc, #292]	; (800712c <HAL_RCC_GetSysClockFreq+0x128>)
 8007006:	691a      	ldr	r2, [r3, #16]
 8007008:	f002 0238 	and.w	r2, r2, #56	; 0x38
 800700c:	2a10      	cmp	r2, #16
{
 800700e:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007010:	f000 8088 	beq.w	8007124 <HAL_RCC_GetSysClockFreq+0x120>
 8007014:	2a18      	cmp	r2, #24
 8007016:	d00c      	beq.n	8007032 <HAL_RCC_GetSysClockFreq+0x2e>
 8007018:	2a00      	cmp	r2, #0
 800701a:	f040 8085 	bne.w	8007128 <HAL_RCC_GetSysClockFreq+0x124>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800701e:	681a      	ldr	r2, [r3, #0]
 8007020:	4843      	ldr	r0, [pc, #268]	; (8007130 <HAL_RCC_GetSysClockFreq+0x12c>)
 8007022:	f012 0f20 	tst.w	r2, #32
 8007026:	d003      	beq.n	8007030 <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	f3c3 03c1 	ubfx	r3, r3, #3, #2
 800702e:	40d8      	lsrs	r0, r3
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
 8007030:	bd30      	pop	{r4, r5, pc}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8007032:	6a99      	ldr	r1, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8007034:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8007036:	6adc      	ldr	r4, [r3, #44]	; 0x2c
      if (pllm != 0U)
 8007038:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 800703c:	f3c5 1005 	ubfx	r0, r5, #4, #6
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8007040:	6b5a      	ldr	r2, [r3, #52]	; 0x34
      if (pllm != 0U)
 8007042:	d0f5      	beq.n	8007030 <HAL_RCC_GetSysClockFreq+0x2c>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8007044:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8007048:	f004 0401 	and.w	r4, r4, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800704c:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007050:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8007054:	4362      	muls	r2, r4
 8007056:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 800705a:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800705c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8007060:	ee06 2a90 	vmov	s13, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007064:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
 8007068:	d04e      	beq.n	8007108 <HAL_RCC_GetSysClockFreq+0x104>
 800706a:	2902      	cmp	r1, #2
 800706c:	d03e      	beq.n	80070ec <HAL_RCC_GetSysClockFreq+0xe8>
 800706e:	2900      	cmp	r1, #0
 8007070:	d14a      	bne.n	8007108 <HAL_RCC_GetSysClockFreq+0x104>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8007072:	681a      	ldr	r2, [r3, #0]
 8007074:	0692      	lsls	r2, r2, #26
 8007076:	d527      	bpl.n	80070c8 <HAL_RCC_GetSysClockFreq+0xc4>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007078:	6819      	ldr	r1, [r3, #0]
 800707a:	4a2d      	ldr	r2, [pc, #180]	; (8007130 <HAL_RCC_GetSysClockFreq+0x12c>)
 800707c:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007080:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007082:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007084:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007088:	ee07 2a90 	vmov	s15, r2
 800708c:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 8007090:	eec5 7a87 	vdiv.f32	s15, s11, s14
 8007094:	ee07 3a10 	vmov	s14, r3
 8007098:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800709c:	ee37 7a26 	vadd.f32	s14, s14, s13
 80070a0:	ee37 7a06 	vadd.f32	s14, s14, s12
 80070a4:	ee67 7a87 	vmul.f32	s15, s15, s14
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 80070a8:	4b20      	ldr	r3, [pc, #128]	; (800712c <HAL_RCC_GetSysClockFreq+0x128>)
 80070aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070ac:	f3c3 2346 	ubfx	r3, r3, #9, #7
 80070b0:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 80070b2:	ee07 3a10 	vmov	s14, r3
 80070b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80070ba:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80070be:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 80070c2:	ee17 0a90 	vmov	r0, s15
 80070c6:	e7b3      	b.n	8007030 <HAL_RCC_GetSysClockFreq+0x2c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80070c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070ca:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80070ce:	ee07 3a90 	vmov	s15, r3
 80070d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80070d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80070da:	ee77 7a86 	vadd.f32	s15, s15, s12
 80070de:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8007134 <HAL_RCC_GetSysClockFreq+0x130>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80070e2:	eec6 6a07 	vdiv.f32	s13, s12, s14
 80070e6:	ee67 7aa6 	vmul.f32	s15, s15, s13
            break;
 80070ea:	e7dd      	b.n	80070a8 <HAL_RCC_GetSysClockFreq+0xa4>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80070ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070ee:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80070f2:	ee07 3a90 	vmov	s15, r3
 80070f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80070fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80070fe:	ee77 7a86 	vadd.f32	s15, s15, s12
 8007102:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 8007138 <HAL_RCC_GetSysClockFreq+0x134>
 8007106:	e7ec      	b.n	80070e2 <HAL_RCC_GetSysClockFreq+0xde>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007108:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800710a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800710e:	ee07 3a90 	vmov	s15, r3
 8007112:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007116:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800711a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800711e:	ed9f 6a07 	vldr	s12, [pc, #28]	; 800713c <HAL_RCC_GetSysClockFreq+0x138>
 8007122:	e7de      	b.n	80070e2 <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007124:	4806      	ldr	r0, [pc, #24]	; (8007140 <HAL_RCC_GetSysClockFreq+0x13c>)
 8007126:	e783      	b.n	8007030 <HAL_RCC_GetSysClockFreq+0x2c>
      sysclockfreq = CSI_VALUE;
 8007128:	4806      	ldr	r0, [pc, #24]	; (8007144 <HAL_RCC_GetSysClockFreq+0x140>)
 800712a:	e781      	b.n	8007030 <HAL_RCC_GetSysClockFreq+0x2c>
 800712c:	58024400 	.word	0x58024400
 8007130:	03d09000 	.word	0x03d09000
 8007134:	4c742400 	.word	0x4c742400
 8007138:	4bbebc20 	.word	0x4bbebc20
 800713c:	4a742400 	.word	0x4a742400
 8007140:	017d7840 	.word	0x017d7840
 8007144:	003d0900 	.word	0x003d0900

08007148 <HAL_RCC_ClockConfig>:
{
 8007148:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800714c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800714e:	4604      	mov	r4, r0
 8007150:	b910      	cbnz	r0, 8007158 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007152:	2001      	movs	r0, #1
}
 8007154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8007158:	4a88      	ldr	r2, [pc, #544]	; (800737c <HAL_RCC_ClockConfig+0x234>)
 800715a:	6813      	ldr	r3, [r2, #0]
 800715c:	f003 030f 	and.w	r3, r3, #15
 8007160:	428b      	cmp	r3, r1
 8007162:	f0c0 8093 	bcc.w	800728c <HAL_RCC_ClockConfig+0x144>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007166:	6823      	ldr	r3, [r4, #0]
 8007168:	075f      	lsls	r7, r3, #29
 800716a:	f100 809b 	bmi.w	80072a4 <HAL_RCC_ClockConfig+0x15c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800716e:	071e      	lsls	r6, r3, #28
 8007170:	d50b      	bpl.n	800718a <HAL_RCC_ClockConfig+0x42>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8007172:	4983      	ldr	r1, [pc, #524]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 8007174:	6960      	ldr	r0, [r4, #20]
 8007176:	69ca      	ldr	r2, [r1, #28]
 8007178:	f002 0270 	and.w	r2, r2, #112	; 0x70
 800717c:	4290      	cmp	r0, r2
 800717e:	d904      	bls.n	800718a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8007180:	69ca      	ldr	r2, [r1, #28]
 8007182:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007186:	4302      	orrs	r2, r0
 8007188:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800718a:	06d8      	lsls	r0, r3, #27
 800718c:	d50b      	bpl.n	80071a6 <HAL_RCC_ClockConfig+0x5e>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 800718e:	497c      	ldr	r1, [pc, #496]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 8007190:	69a0      	ldr	r0, [r4, #24]
 8007192:	69ca      	ldr	r2, [r1, #28]
 8007194:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8007198:	4290      	cmp	r0, r2
 800719a:	d904      	bls.n	80071a6 <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 800719c:	69ca      	ldr	r2, [r1, #28]
 800719e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80071a2:	4302      	orrs	r2, r0
 80071a4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80071a6:	0699      	lsls	r1, r3, #26
 80071a8:	d50b      	bpl.n	80071c2 <HAL_RCC_ClockConfig+0x7a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80071aa:	4975      	ldr	r1, [pc, #468]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 80071ac:	69e0      	ldr	r0, [r4, #28]
 80071ae:	6a0a      	ldr	r2, [r1, #32]
 80071b0:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80071b4:	4290      	cmp	r0, r2
 80071b6:	d904      	bls.n	80071c2 <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 80071b8:	6a0a      	ldr	r2, [r1, #32]
 80071ba:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80071be:	4302      	orrs	r2, r0
 80071c0:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80071c2:	079a      	lsls	r2, r3, #30
 80071c4:	d50b      	bpl.n	80071de <HAL_RCC_ClockConfig+0x96>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 80071c6:	496e      	ldr	r1, [pc, #440]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 80071c8:	68e0      	ldr	r0, [r4, #12]
 80071ca:	698a      	ldr	r2, [r1, #24]
 80071cc:	f002 020f 	and.w	r2, r2, #15
 80071d0:	4290      	cmp	r0, r2
 80071d2:	d904      	bls.n	80071de <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80071d4:	698a      	ldr	r2, [r1, #24]
 80071d6:	f022 020f 	bic.w	r2, r2, #15
 80071da:	4302      	orrs	r2, r0
 80071dc:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80071de:	07df      	lsls	r7, r3, #31
 80071e0:	d46e      	bmi.n	80072c0 <HAL_RCC_ClockConfig+0x178>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80071e2:	6823      	ldr	r3, [r4, #0]
 80071e4:	079e      	lsls	r6, r3, #30
 80071e6:	f100 80a1 	bmi.w	800732c <HAL_RCC_ClockConfig+0x1e4>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80071ea:	4964      	ldr	r1, [pc, #400]	; (800737c <HAL_RCC_ClockConfig+0x234>)
 80071ec:	680a      	ldr	r2, [r1, #0]
 80071ee:	f002 020f 	and.w	r2, r2, #15
 80071f2:	42aa      	cmp	r2, r5
 80071f4:	f200 80a8 	bhi.w	8007348 <HAL_RCC_ClockConfig+0x200>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80071f8:	0758      	lsls	r0, r3, #29
 80071fa:	f100 80b1 	bmi.w	8007360 <HAL_RCC_ClockConfig+0x218>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80071fe:	0719      	lsls	r1, r3, #28
 8007200:	d50b      	bpl.n	800721a <HAL_RCC_ClockConfig+0xd2>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8007202:	495f      	ldr	r1, [pc, #380]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 8007204:	6960      	ldr	r0, [r4, #20]
 8007206:	69ca      	ldr	r2, [r1, #28]
 8007208:	f002 0270 	and.w	r2, r2, #112	; 0x70
 800720c:	4290      	cmp	r0, r2
 800720e:	d204      	bcs.n	800721a <HAL_RCC_ClockConfig+0xd2>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8007210:	69ca      	ldr	r2, [r1, #28]
 8007212:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007216:	4302      	orrs	r2, r0
 8007218:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800721a:	06da      	lsls	r2, r3, #27
 800721c:	d50b      	bpl.n	8007236 <HAL_RCC_ClockConfig+0xee>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 800721e:	4958      	ldr	r1, [pc, #352]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 8007220:	69a0      	ldr	r0, [r4, #24]
 8007222:	69ca      	ldr	r2, [r1, #28]
 8007224:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8007228:	4290      	cmp	r0, r2
 800722a:	d204      	bcs.n	8007236 <HAL_RCC_ClockConfig+0xee>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 800722c:	69ca      	ldr	r2, [r1, #28]
 800722e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007232:	4302      	orrs	r2, r0
 8007234:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8007236:	069b      	lsls	r3, r3, #26
 8007238:	d50b      	bpl.n	8007252 <HAL_RCC_ClockConfig+0x10a>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 800723a:	4a51      	ldr	r2, [pc, #324]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 800723c:	69e1      	ldr	r1, [r4, #28]
 800723e:	6a13      	ldr	r3, [r2, #32]
 8007240:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007244:	4299      	cmp	r1, r3
 8007246:	d204      	bcs.n	8007252 <HAL_RCC_ClockConfig+0x10a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8007248:	6a13      	ldr	r3, [r2, #32]
 800724a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800724e:	430b      	orrs	r3, r1
 8007250:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8007252:	f7ff fed7 	bl	8007004 <HAL_RCC_GetSysClockFreq>
 8007256:	494a      	ldr	r1, [pc, #296]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 8007258:	4a4a      	ldr	r2, [pc, #296]	; (8007384 <HAL_RCC_ClockConfig+0x23c>)
 800725a:	698b      	ldr	r3, [r1, #24]
 800725c:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8007260:	5cd3      	ldrb	r3, [r2, r3]
 8007262:	f003 031f 	and.w	r3, r3, #31
 8007266:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007268:	698b      	ldr	r3, [r1, #24]
 800726a:	f003 030f 	and.w	r3, r3, #15
 800726e:	5cd3      	ldrb	r3, [r2, r3]
 8007270:	4a45      	ldr	r2, [pc, #276]	; (8007388 <HAL_RCC_ClockConfig+0x240>)
 8007272:	f003 031f 	and.w	r3, r3, #31
 8007276:	fa20 f303 	lsr.w	r3, r0, r3
 800727a:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
 800727c:	4b43      	ldr	r3, [pc, #268]	; (800738c <HAL_RCC_ClockConfig+0x244>)
 800727e:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick(uwTickPrio);
 8007280:	4b43      	ldr	r3, [pc, #268]	; (8007390 <HAL_RCC_ClockConfig+0x248>)
}
 8007282:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
 8007286:	6818      	ldr	r0, [r3, #0]
 8007288:	f7fa bd86 	b.w	8001d98 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800728c:	6813      	ldr	r3, [r2, #0]
 800728e:	f023 030f 	bic.w	r3, r3, #15
 8007292:	430b      	orrs	r3, r1
 8007294:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007296:	6813      	ldr	r3, [r2, #0]
 8007298:	f003 030f 	and.w	r3, r3, #15
 800729c:	428b      	cmp	r3, r1
 800729e:	f47f af58 	bne.w	8007152 <HAL_RCC_ClockConfig+0xa>
 80072a2:	e760      	b.n	8007166 <HAL_RCC_ClockConfig+0x1e>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 80072a4:	4936      	ldr	r1, [pc, #216]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 80072a6:	6920      	ldr	r0, [r4, #16]
 80072a8:	698a      	ldr	r2, [r1, #24]
 80072aa:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80072ae:	4290      	cmp	r0, r2
 80072b0:	f67f af5d 	bls.w	800716e <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 80072b4:	698a      	ldr	r2, [r1, #24]
 80072b6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80072ba:	4302      	orrs	r2, r0
 80072bc:	618a      	str	r2, [r1, #24]
 80072be:	e756      	b.n	800716e <HAL_RCC_ClockConfig+0x26>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 80072c0:	4b2f      	ldr	r3, [pc, #188]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 80072c2:	68a1      	ldr	r1, [r4, #8]
 80072c4:	699a      	ldr	r2, [r3, #24]
 80072c6:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 80072ca:	430a      	orrs	r2, r1
 80072cc:	619a      	str	r2, [r3, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80072ce:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80072d0:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80072d2:	2902      	cmp	r1, #2
 80072d4:	d11d      	bne.n	8007312 <HAL_RCC_ClockConfig+0x1ca>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80072d6:	f412 3f00 	tst.w	r2, #131072	; 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80072da:	f43f af3a 	beq.w	8007152 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80072de:	691a      	ldr	r2, [r3, #16]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80072e0:	f241 3888 	movw	r8, #5000	; 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80072e4:	4f26      	ldr	r7, [pc, #152]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80072e6:	f022 0207 	bic.w	r2, r2, #7
 80072ea:	430a      	orrs	r2, r1
 80072ec:	611a      	str	r2, [r3, #16]
    tickstart = HAL_GetTick();
 80072ee:	f7fd ff11 	bl	8005114 <HAL_GetTick>
 80072f2:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80072f4:	693b      	ldr	r3, [r7, #16]
 80072f6:	6862      	ldr	r2, [r4, #4]
 80072f8:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80072fc:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 8007300:	f43f af6f 	beq.w	80071e2 <HAL_RCC_ClockConfig+0x9a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007304:	f7fd ff06 	bl	8005114 <HAL_GetTick>
 8007308:	1b80      	subs	r0, r0, r6
 800730a:	4540      	cmp	r0, r8
 800730c:	d9f2      	bls.n	80072f4 <HAL_RCC_ClockConfig+0x1ac>
        return HAL_TIMEOUT;
 800730e:	2003      	movs	r0, #3
 8007310:	e720      	b.n	8007154 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007312:	2903      	cmp	r1, #3
 8007314:	d102      	bne.n	800731c <HAL_RCC_ClockConfig+0x1d4>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007316:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 800731a:	e7de      	b.n	80072da <HAL_RCC_ClockConfig+0x192>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 800731c:	2901      	cmp	r1, #1
 800731e:	d102      	bne.n	8007326 <HAL_RCC_ClockConfig+0x1de>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007320:	f412 7f80 	tst.w	r2, #256	; 0x100
 8007324:	e7d9      	b.n	80072da <HAL_RCC_ClockConfig+0x192>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007326:	f012 0f04 	tst.w	r2, #4
 800732a:	e7d6      	b.n	80072da <HAL_RCC_ClockConfig+0x192>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 800732c:	4914      	ldr	r1, [pc, #80]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 800732e:	68e0      	ldr	r0, [r4, #12]
 8007330:	698a      	ldr	r2, [r1, #24]
 8007332:	f002 020f 	and.w	r2, r2, #15
 8007336:	4290      	cmp	r0, r2
 8007338:	f4bf af57 	bcs.w	80071ea <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800733c:	698a      	ldr	r2, [r1, #24]
 800733e:	f022 020f 	bic.w	r2, r2, #15
 8007342:	4302      	orrs	r2, r0
 8007344:	618a      	str	r2, [r1, #24]
 8007346:	e750      	b.n	80071ea <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007348:	680a      	ldr	r2, [r1, #0]
 800734a:	f022 020f 	bic.w	r2, r2, #15
 800734e:	432a      	orrs	r2, r5
 8007350:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007352:	680a      	ldr	r2, [r1, #0]
 8007354:	f002 020f 	and.w	r2, r2, #15
 8007358:	42aa      	cmp	r2, r5
 800735a:	f47f aefa 	bne.w	8007152 <HAL_RCC_ClockConfig+0xa>
 800735e:	e74b      	b.n	80071f8 <HAL_RCC_ClockConfig+0xb0>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007360:	4907      	ldr	r1, [pc, #28]	; (8007380 <HAL_RCC_ClockConfig+0x238>)
 8007362:	6920      	ldr	r0, [r4, #16]
 8007364:	698a      	ldr	r2, [r1, #24]
 8007366:	f002 0270 	and.w	r2, r2, #112	; 0x70
 800736a:	4290      	cmp	r0, r2
 800736c:	f4bf af47 	bcs.w	80071fe <HAL_RCC_ClockConfig+0xb6>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007370:	698a      	ldr	r2, [r1, #24]
 8007372:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007376:	4302      	orrs	r2, r0
 8007378:	618a      	str	r2, [r1, #24]
 800737a:	e740      	b.n	80071fe <HAL_RCC_ClockConfig+0xb6>
 800737c:	52002000 	.word	0x52002000
 8007380:	58024400 	.word	0x58024400
 8007384:	080232b0 	.word	0x080232b0
 8007388:	24000070 	.word	0x24000070
 800738c:	2400006c 	.word	0x2400006c
 8007390:	24000078 	.word	0x24000078

08007394 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8007394:	b510      	push	{r4, lr}
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8007396:	4c0c      	ldr	r4, [pc, #48]	; (80073c8 <HAL_RCC_GetHCLKFreq+0x34>)
 8007398:	f7ff fe34 	bl	8007004 <HAL_RCC_GetSysClockFreq>
 800739c:	490b      	ldr	r1, [pc, #44]	; (80073cc <HAL_RCC_GetHCLKFreq+0x38>)
 800739e:	69a3      	ldr	r3, [r4, #24]
 80073a0:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80073a4:	5ccb      	ldrb	r3, [r1, r3]
 80073a6:	f003 031f 	and.w	r3, r3, #31
 80073aa:	fa20 f203 	lsr.w	r2, r0, r3
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80073ae:	69a3      	ldr	r3, [r4, #24]
 80073b0:	f003 030f 	and.w	r3, r3, #15
 80073b4:	5ccb      	ldrb	r3, [r1, r3]
 80073b6:	f003 031f 	and.w	r3, r3, #31
 80073ba:	fa22 f003 	lsr.w	r0, r2, r3
 80073be:	4b04      	ldr	r3, [pc, #16]	; (80073d0 <HAL_RCC_GetHCLKFreq+0x3c>)
 80073c0:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80073c2:	4b04      	ldr	r3, [pc, #16]	; (80073d4 <HAL_RCC_GetHCLKFreq+0x40>)
 80073c4:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
 80073c6:	bd10      	pop	{r4, pc}
 80073c8:	58024400 	.word	0x58024400
 80073cc:	080232b0 	.word	0x080232b0
 80073d0:	24000070 	.word	0x24000070
 80073d4:	2400006c 	.word	0x2400006c

080073d8 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80073d8:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 80073da:	f7ff ffdb 	bl	8007394 <HAL_RCC_GetHCLKFreq>
 80073de:	4b05      	ldr	r3, [pc, #20]	; (80073f4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80073e0:	4a05      	ldr	r2, [pc, #20]	; (80073f8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80073e2:	69db      	ldr	r3, [r3, #28]
 80073e4:	f3c3 1302 	ubfx	r3, r3, #4, #3
 80073e8:	5cd3      	ldrb	r3, [r2, r3]
 80073ea:	f003 031f 	and.w	r3, r3, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 80073ee:	40d8      	lsrs	r0, r3
 80073f0:	bd08      	pop	{r3, pc}
 80073f2:	bf00      	nop
 80073f4:	58024400 	.word	0x58024400
 80073f8:	080232b0 	.word	0x080232b0

080073fc <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
 80073fc:	233f      	movs	r3, #63	; 0x3f
 80073fe:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007400:	4b11      	ldr	r3, [pc, #68]	; (8007448 <HAL_RCC_GetClockConfig+0x4c>)
 8007402:	691a      	ldr	r2, [r3, #16]
 8007404:	f002 0207 	and.w	r2, r2, #7
 8007408:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 800740a:	699a      	ldr	r2, [r3, #24]
 800740c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 8007410:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 8007412:	699a      	ldr	r2, [r3, #24]
 8007414:	f002 020f 	and.w	r2, r2, #15
 8007418:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 800741a:	699a      	ldr	r2, [r3, #24]
 800741c:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007420:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 8007422:	69da      	ldr	r2, [r3, #28]
 8007424:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007428:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 800742a:	69da      	ldr	r2, [r3, #28]
 800742c:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8007430:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 8007432:	6a1b      	ldr	r3, [r3, #32]
 8007434:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007438:	61c3      	str	r3, [r0, #28]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800743a:	4b04      	ldr	r3, [pc, #16]	; (800744c <HAL_RCC_GetClockConfig+0x50>)
 800743c:	681b      	ldr	r3, [r3, #0]
 800743e:	f003 030f 	and.w	r3, r3, #15
 8007442:	600b      	str	r3, [r1, #0]
}
 8007444:	4770      	bx	lr
 8007446:	bf00      	nop
 8007448:	58024400 	.word	0x58024400
 800744c:	52002000 	.word	0x52002000

08007450 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 8007450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8007452:	4c3a      	ldr	r4, [pc, #232]	; (800753c <RCCEx_PLL2_Config+0xec>)
{
 8007454:	4606      	mov	r6, r0
 8007456:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8007458:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800745a:	f003 0303 	and.w	r3, r3, #3
 800745e:	2b03      	cmp	r3, #3
 8007460:	d069      	beq.n	8007536 <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 8007462:	6823      	ldr	r3, [r4, #0]
 8007464:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8007468:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800746a:	f7fd fe53 	bl	8005114 <HAL_GetTick>
 800746e:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8007470:	6823      	ldr	r3, [r4, #0]
 8007472:	011a      	lsls	r2, r3, #4
 8007474:	d44b      	bmi.n	800750e <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 8007476:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007478:	6832      	ldr	r2, [r6, #0]
 800747a:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 800747e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 8007482:	62a3      	str	r3, [r4, #40]	; 0x28
 8007484:	68b3      	ldr	r3, [r6, #8]
 8007486:	68f2      	ldr	r2, [r6, #12]
 8007488:	3b01      	subs	r3, #1
 800748a:	3a01      	subs	r2, #1
 800748c:	025b      	lsls	r3, r3, #9
 800748e:	0412      	lsls	r2, r2, #16
 8007490:	b29b      	uxth	r3, r3
 8007492:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8007496:	4313      	orrs	r3, r2
 8007498:	6872      	ldr	r2, [r6, #4]
 800749a:	3a01      	subs	r2, #1
 800749c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80074a0:	4313      	orrs	r3, r2
 80074a2:	6932      	ldr	r2, [r6, #16]
 80074a4:	3a01      	subs	r2, #1
 80074a6:	0612      	lsls	r2, r2, #24
 80074a8:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 80074ac:	4313      	orrs	r3, r2
 80074ae:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 80074b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80074b2:	6972      	ldr	r2, [r6, #20]
 80074b4:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80074b8:	4313      	orrs	r3, r2
 80074ba:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 80074bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80074be:	69b2      	ldr	r2, [r6, #24]
 80074c0:	f023 0320 	bic.w	r3, r3, #32
 80074c4:	4313      	orrs	r3, r2
 80074c6:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 80074c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80074ca:	f023 0310 	bic.w	r3, r3, #16
 80074ce:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 80074d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80074d2:	69f2      	ldr	r2, [r6, #28]
 80074d4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80074d8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80074dc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80074e0:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 80074e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80074e4:	f043 0310 	orr.w	r3, r3, #16
 80074e8:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 80074ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 80074ec:	b9b5      	cbnz	r5, 800751c <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 80074ee:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 80074f2:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 80074f4:	4c11      	ldr	r4, [pc, #68]	; (800753c <RCCEx_PLL2_Config+0xec>)
 80074f6:	6823      	ldr	r3, [r4, #0]
 80074f8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80074fc:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80074fe:	f7fd fe09 	bl	8005114 <HAL_GetTick>
 8007502:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8007504:	6823      	ldr	r3, [r4, #0]
 8007506:	011b      	lsls	r3, r3, #4
 8007508:	d50f      	bpl.n	800752a <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
 800750a:	2000      	movs	r0, #0
 800750c:	e005      	b.n	800751a <RCCEx_PLL2_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800750e:	f7fd fe01 	bl	8005114 <HAL_GetTick>
 8007512:	1bc0      	subs	r0, r0, r7
 8007514:	2802      	cmp	r0, #2
 8007516:	d9ab      	bls.n	8007470 <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
 8007518:	2003      	movs	r0, #3
}
 800751a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 800751c:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 800751e:	bf0c      	ite	eq
 8007520:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8007524:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
 8007528:	e7e3      	b.n	80074f2 <RCCEx_PLL2_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800752a:	f7fd fdf3 	bl	8005114 <HAL_GetTick>
 800752e:	1b40      	subs	r0, r0, r5
 8007530:	2802      	cmp	r0, #2
 8007532:	d9e7      	bls.n	8007504 <RCCEx_PLL2_Config+0xb4>
 8007534:	e7f0      	b.n	8007518 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
 8007536:	2001      	movs	r0, #1
 8007538:	e7ef      	b.n	800751a <RCCEx_PLL2_Config+0xca>
 800753a:	bf00      	nop
 800753c:	58024400 	.word	0x58024400

08007540 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 8007540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8007542:	4c3a      	ldr	r4, [pc, #232]	; (800762c <RCCEx_PLL3_Config+0xec>)
{
 8007544:	4606      	mov	r6, r0
 8007546:	460d      	mov	r5, r1
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8007548:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800754a:	f003 0303 	and.w	r3, r3, #3
 800754e:	2b03      	cmp	r3, #3
 8007550:	d069      	beq.n	8007626 <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 8007552:	6823      	ldr	r3, [r4, #0]
 8007554:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007558:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800755a:	f7fd fddb 	bl	8005114 <HAL_GetTick>
 800755e:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8007560:	6823      	ldr	r3, [r4, #0]
 8007562:	009a      	lsls	r2, r3, #2
 8007564:	d44b      	bmi.n	80075fe <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 8007566:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007568:	6832      	ldr	r2, [r6, #0]
 800756a:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
 800756e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8007572:	62a3      	str	r3, [r4, #40]	; 0x28
 8007574:	68b3      	ldr	r3, [r6, #8]
 8007576:	68f2      	ldr	r2, [r6, #12]
 8007578:	3b01      	subs	r3, #1
 800757a:	3a01      	subs	r2, #1
 800757c:	025b      	lsls	r3, r3, #9
 800757e:	0412      	lsls	r2, r2, #16
 8007580:	b29b      	uxth	r3, r3
 8007582:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8007586:	4313      	orrs	r3, r2
 8007588:	6872      	ldr	r2, [r6, #4]
 800758a:	3a01      	subs	r2, #1
 800758c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007590:	4313      	orrs	r3, r2
 8007592:	6932      	ldr	r2, [r6, #16]
 8007594:	3a01      	subs	r2, #1
 8007596:	0612      	lsls	r2, r2, #24
 8007598:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 800759c:	4313      	orrs	r3, r2
 800759e:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 80075a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80075a2:	6972      	ldr	r2, [r6, #20]
 80075a4:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80075a8:	4313      	orrs	r3, r2
 80075aa:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 80075ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80075ae:	69b2      	ldr	r2, [r6, #24]
 80075b0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80075b4:	4313      	orrs	r3, r2
 80075b6:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 80075b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80075ba:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80075be:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 80075c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80075c2:	69f2      	ldr	r2, [r6, #28]
 80075c4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80075c8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80075cc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80075d0:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 80075d2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80075d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80075d8:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 80075da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
 80075dc:	b9b5      	cbnz	r5, 800760c <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 80075de:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 80075e2:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 80075e4:	4c11      	ldr	r4, [pc, #68]	; (800762c <RCCEx_PLL3_Config+0xec>)
 80075e6:	6823      	ldr	r3, [r4, #0]
 80075e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80075ec:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80075ee:	f7fd fd91 	bl	8005114 <HAL_GetTick>
 80075f2:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80075f4:	6823      	ldr	r3, [r4, #0]
 80075f6:	009b      	lsls	r3, r3, #2
 80075f8:	d50f      	bpl.n	800761a <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
 80075fa:	2000      	movs	r0, #0
 80075fc:	e005      	b.n	800760a <RCCEx_PLL3_Config+0xca>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80075fe:	f7fd fd89 	bl	8005114 <HAL_GetTick>
 8007602:	1bc0      	subs	r0, r0, r7
 8007604:	2802      	cmp	r0, #2
 8007606:	d9ab      	bls.n	8007560 <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
 8007608:	2003      	movs	r0, #3
}
 800760a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if (Divider == DIVIDER_Q_UPDATE)
 800760c:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 800760e:	bf0c      	ite	eq
 8007610:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8007614:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
 8007618:	e7e3      	b.n	80075e2 <RCCEx_PLL3_Config+0xa2>
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800761a:	f7fd fd7b 	bl	8005114 <HAL_GetTick>
 800761e:	1b40      	subs	r0, r0, r5
 8007620:	2802      	cmp	r0, #2
 8007622:	d9e7      	bls.n	80075f4 <RCCEx_PLL3_Config+0xb4>
 8007624:	e7f0      	b.n	8007608 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
 8007626:	2001      	movs	r0, #1
 8007628:	e7ef      	b.n	800760a <RCCEx_PLL3_Config+0xca>
 800762a:	bf00      	nop
 800762c:	58024400 	.word	0x58024400

08007630 <HAL_RCCEx_PeriphCLKConfig>:
{
 8007630:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007634:	6803      	ldr	r3, [r0, #0]
{
 8007636:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007638:	0118      	lsls	r0, r3, #4
 800763a:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
 800763e:	d509      	bpl.n	8007654 <HAL_RCCEx_PeriphCLKConfig+0x24>
    switch (PeriphClkInit->SpdifrxClockSelection)
 8007640:	6eab      	ldr	r3, [r5, #104]	; 0x68
 8007642:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007646:	d02f      	beq.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0x78>
 8007648:	d813      	bhi.n	8007672 <HAL_RCCEx_PeriphCLKConfig+0x42>
 800764a:	b1f3      	cbz	r3, 800768a <HAL_RCCEx_PeriphCLKConfig+0x5a>
 800764c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007650:	d021      	beq.n	8007696 <HAL_RCCEx_PeriphCLKConfig+0x66>
 8007652:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8007654:	682b      	ldr	r3, [r5, #0]
 8007656:	05d9      	lsls	r1, r3, #23
 8007658:	f140 80ed 	bpl.w	8007836 <HAL_RCCEx_PeriphCLKConfig+0x206>
    switch (PeriphClkInit->Sai1ClockSelection)
 800765c:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800765e:	2b04      	cmp	r3, #4
 8007660:	f200 80e8 	bhi.w	8007834 <HAL_RCCEx_PeriphCLKConfig+0x204>
 8007664:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007668:	002d0026 	.word	0x002d0026
 800766c:	002b00e0 	.word	0x002b00e0
 8007670:	002b      	.short	0x002b
    switch (PeriphClkInit->SpdifrxClockSelection)
 8007672:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007676:	d1ec      	bne.n	8007652 <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8007678:	4aa9      	ldr	r2, [pc, #676]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800767a:	2600      	movs	r6, #0
 800767c:	6ea9      	ldr	r1, [r5, #104]	; 0x68
 800767e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007680:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8007684:	430b      	orrs	r3, r1
 8007686:	6513      	str	r3, [r2, #80]	; 0x50
 8007688:	e7e4      	b.n	8007654 <HAL_RCCEx_PeriphCLKConfig+0x24>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800768a:	4aa5      	ldr	r2, [pc, #660]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800768c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800768e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007692:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007694:	e7f0      	b.n	8007678 <HAL_RCCEx_PeriphCLKConfig+0x48>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007696:	2102      	movs	r1, #2
 8007698:	f105 0008 	add.w	r0, r5, #8
 800769c:	f7ff fed8 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80076a0:	4606      	mov	r6, r0
    if (ret == HAL_OK)
 80076a2:	2800      	cmp	r0, #0
 80076a4:	d1d6      	bne.n	8007654 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80076a6:	e7e7      	b.n	8007678 <HAL_RCCEx_PeriphCLKConfig+0x48>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80076a8:	2102      	movs	r1, #2
 80076aa:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80076ae:	f7ff ff47 	bl	8007540 <RCCEx_PLL3_Config>
 80076b2:	e7f5      	b.n	80076a0 <HAL_RCCEx_PeriphCLKConfig+0x70>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80076b4:	4a9a      	ldr	r2, [pc, #616]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80076b6:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80076b8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80076bc:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch (PeriphClkInit->Sai1ClockSelection)
 80076be:	4634      	mov	r4, r6
 80076c0:	e005      	b.n	80076ce <HAL_RCCEx_PeriphCLKConfig+0x9e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80076c2:	2100      	movs	r1, #0
 80076c4:	f105 0008 	add.w	r0, r5, #8
 80076c8:	f7ff fec2 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80076cc:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 80076ce:	2c00      	cmp	r4, #0
 80076d0:	f040 80b3 	bne.w	800783a <HAL_RCCEx_PeriphCLKConfig+0x20a>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80076d4:	4a92      	ldr	r2, [pc, #584]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80076d6:	6da9      	ldr	r1, [r5, #88]	; 0x58
 80076d8:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80076da:	f023 0307 	bic.w	r3, r3, #7
 80076de:	430b      	orrs	r3, r1
 80076e0:	6513      	str	r3, [r2, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
 80076e2:	682b      	ldr	r3, [r5, #0]
 80076e4:	059a      	lsls	r2, r3, #22
 80076e6:	d50d      	bpl.n	8007704 <HAL_RCCEx_PeriphCLKConfig+0xd4>
    switch (PeriphClkInit->Sai23ClockSelection)
 80076e8:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 80076ea:	2b80      	cmp	r3, #128	; 0x80
 80076ec:	f000 80c3 	beq.w	8007876 <HAL_RCCEx_PeriphCLKConfig+0x246>
 80076f0:	f200 80a5 	bhi.w	800783e <HAL_RCCEx_PeriphCLKConfig+0x20e>
 80076f4:	2b00      	cmp	r3, #0
 80076f6:	f000 80b1 	beq.w	800785c <HAL_RCCEx_PeriphCLKConfig+0x22c>
 80076fa:	2b40      	cmp	r3, #64	; 0x40
 80076fc:	f000 80b4 	beq.w	8007868 <HAL_RCCEx_PeriphCLKConfig+0x238>
 8007700:	2601      	movs	r6, #1
 8007702:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8007704:	682b      	ldr	r3, [r5, #0]
 8007706:	055b      	lsls	r3, r3, #21
 8007708:	d510      	bpl.n	800772c <HAL_RCCEx_PeriphCLKConfig+0xfc>
    switch (PeriphClkInit->Sai4AClockSelection)
 800770a:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
 800770e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007712:	f000 80d6 	beq.w	80078c2 <HAL_RCCEx_PeriphCLKConfig+0x292>
 8007716:	f200 80b6 	bhi.w	8007886 <HAL_RCCEx_PeriphCLKConfig+0x256>
 800771a:	2b00      	cmp	r3, #0
 800771c:	f000 80c4 	beq.w	80078a8 <HAL_RCCEx_PeriphCLKConfig+0x278>
 8007720:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007724:	f000 80c6 	beq.w	80078b4 <HAL_RCCEx_PeriphCLKConfig+0x284>
 8007728:	2601      	movs	r6, #1
 800772a:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 800772c:	682b      	ldr	r3, [r5, #0]
 800772e:	051f      	lsls	r7, r3, #20
 8007730:	d510      	bpl.n	8007754 <HAL_RCCEx_PeriphCLKConfig+0x124>
    switch (PeriphClkInit->Sai4BClockSelection)
 8007732:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
 8007736:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800773a:	f000 80e8 	beq.w	800790e <HAL_RCCEx_PeriphCLKConfig+0x2de>
 800773e:	f200 80c8 	bhi.w	80078d2 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 8007742:	2b00      	cmp	r3, #0
 8007744:	f000 80d6 	beq.w	80078f4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 8007748:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800774c:	f000 80d8 	beq.w	8007900 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
 8007750:	2601      	movs	r6, #1
 8007752:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
 8007754:	682b      	ldr	r3, [r5, #0]
 8007756:	0198      	lsls	r0, r3, #6
 8007758:	d50d      	bpl.n	8007776 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
 800775a:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800775c:	2b20      	cmp	r3, #32
 800775e:	f000 80f3 	beq.w	8007948 <HAL_RCCEx_PeriphCLKConfig+0x318>
 8007762:	f200 80df 	bhi.w	8007924 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8007766:	2b00      	cmp	r3, #0
 8007768:	f000 80df 	beq.w	800792a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 800776c:	2b10      	cmp	r3, #16
 800776e:	f000 80e5 	beq.w	800793c <HAL_RCCEx_PeriphCLKConfig+0x30c>
 8007772:	2601      	movs	r6, #1
 8007774:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8007776:	682b      	ldr	r3, [r5, #0]
 8007778:	04d9      	lsls	r1, r3, #19
 800777a:	d50f      	bpl.n	800779c <HAL_RCCEx_PeriphCLKConfig+0x16c>
    switch (PeriphClkInit->Spi123ClockSelection)
 800777c:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 800777e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007782:	f000 8107 	beq.w	8007994 <HAL_RCCEx_PeriphCLKConfig+0x364>
 8007786:	f200 80e8 	bhi.w	800795a <HAL_RCCEx_PeriphCLKConfig+0x32a>
 800778a:	2b00      	cmp	r3, #0
 800778c:	f000 80f5 	beq.w	800797a <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8007790:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007794:	f000 80f7 	beq.w	8007986 <HAL_RCCEx_PeriphCLKConfig+0x356>
 8007798:	2601      	movs	r6, #1
 800779a:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 800779c:	682b      	ldr	r3, [r5, #0]
 800779e:	049a      	lsls	r2, r3, #18
 80077a0:	d50f      	bpl.n	80077c2 <HAL_RCCEx_PeriphCLKConfig+0x192>
    switch (PeriphClkInit->Spi45ClockSelection)
 80077a2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80077a4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80077a8:	f000 8115 	beq.w	80079d6 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 80077ac:	f200 80fa 	bhi.w	80079a4 <HAL_RCCEx_PeriphCLKConfig+0x374>
 80077b0:	2b00      	cmp	r3, #0
 80077b2:	f000 8100 	beq.w	80079b6 <HAL_RCCEx_PeriphCLKConfig+0x386>
 80077b6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80077ba:	f000 8105 	beq.w	80079c8 <HAL_RCCEx_PeriphCLKConfig+0x398>
 80077be:	2601      	movs	r6, #1
 80077c0:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 80077c2:	682b      	ldr	r3, [r5, #0]
 80077c4:	045b      	lsls	r3, r3, #17
 80077c6:	d510      	bpl.n	80077ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    switch (PeriphClkInit->Spi6ClockSelection)
 80077c8:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
 80077cc:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80077d0:	f000 8123 	beq.w	8007a1a <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 80077d4:	f200 8107 	bhi.w	80079e6 <HAL_RCCEx_PeriphCLKConfig+0x3b6>
 80077d8:	2b00      	cmp	r3, #0
 80077da:	f000 810d 	beq.w	80079f8 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 80077de:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80077e2:	f000 8113 	beq.w	8007a0c <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 80077e6:	2601      	movs	r6, #1
 80077e8:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 80077ea:	682b      	ldr	r3, [r5, #0]
 80077ec:	041f      	lsls	r7, r3, #16
 80077ee:	d50d      	bpl.n	800780c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    switch (PeriphClkInit->FdcanClockSelection)
 80077f0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80077f2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80077f6:	f000 8118 	beq.w	8007a2a <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 80077fa:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80077fe:	f000 8122 	beq.w	8007a46 <HAL_RCCEx_PeriphCLKConfig+0x416>
 8007802:	2b00      	cmp	r3, #0
 8007804:	f000 8116 	beq.w	8007a34 <HAL_RCCEx_PeriphCLKConfig+0x404>
 8007808:	2601      	movs	r6, #1
 800780a:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 800780c:	682b      	ldr	r3, [r5, #0]
 800780e:	01d8      	lsls	r0, r3, #7
 8007810:	f140 8130 	bpl.w	8007a74 <HAL_RCCEx_PeriphCLKConfig+0x444>
    switch (PeriphClkInit->FmcClockSelection)
 8007814:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8007816:	2b03      	cmp	r3, #3
 8007818:	f200 8171 	bhi.w	8007afe <HAL_RCCEx_PeriphCLKConfig+0x4ce>
 800781c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007820:	011c0121 	.word	0x011c0121
 8007824:	01210168 	.word	0x01210168
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007828:	2100      	movs	r1, #0
 800782a:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800782e:	f7ff fe87 	bl	8007540 <RCCEx_PLL3_Config>
 8007832:	e74b      	b.n	80076cc <HAL_RCCEx_PeriphCLKConfig+0x9c>
    switch (PeriphClkInit->Sai1ClockSelection)
 8007834:	2601      	movs	r6, #1
 8007836:	4634      	mov	r4, r6
 8007838:	e753      	b.n	80076e2 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 800783a:	4626      	mov	r6, r4
 800783c:	e751      	b.n	80076e2 <HAL_RCCEx_PeriphCLKConfig+0xb2>
    switch (PeriphClkInit->Sai23ClockSelection)
 800783e:	2bc0      	cmp	r3, #192	; 0xc0
 8007840:	d003      	beq.n	800784a <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8007842:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007846:	f47f af5b 	bne.w	8007700 <HAL_RCCEx_PeriphCLKConfig+0xd0>
    if (ret == HAL_OK)
 800784a:	b9d4      	cbnz	r4, 8007882 <HAL_RCCEx_PeriphCLKConfig+0x252>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
 800784c:	4a34      	ldr	r2, [pc, #208]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800784e:	6de9      	ldr	r1, [r5, #92]	; 0x5c
 8007850:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007852:	f423 73e0 	bic.w	r3, r3, #448	; 0x1c0
 8007856:	430b      	orrs	r3, r1
 8007858:	6513      	str	r3, [r2, #80]	; 0x50
 800785a:	e753      	b.n	8007704 <HAL_RCCEx_PeriphCLKConfig+0xd4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800785c:	4a30      	ldr	r2, [pc, #192]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800785e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007860:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007864:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 8007866:	e7f0      	b.n	800784a <HAL_RCCEx_PeriphCLKConfig+0x21a>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007868:	2100      	movs	r1, #0
 800786a:	f105 0008 	add.w	r0, r5, #8
 800786e:	f7ff fdef 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007872:	4604      	mov	r4, r0
        break;
 8007874:	e7e9      	b.n	800784a <HAL_RCCEx_PeriphCLKConfig+0x21a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007876:	2100      	movs	r1, #0
 8007878:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800787c:	f7ff fe60 	bl	8007540 <RCCEx_PLL3_Config>
 8007880:	e7f7      	b.n	8007872 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8007882:	4626      	mov	r6, r4
 8007884:	e73e      	b.n	8007704 <HAL_RCCEx_PeriphCLKConfig+0xd4>
    switch (PeriphClkInit->Sai4AClockSelection)
 8007886:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 800788a:	d003      	beq.n	8007894 <HAL_RCCEx_PeriphCLKConfig+0x264>
 800788c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8007890:	f47f af4a 	bne.w	8007728 <HAL_RCCEx_PeriphCLKConfig+0xf8>
    if (ret == HAL_OK)
 8007894:	b9dc      	cbnz	r4, 80078ce <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8007896:	4a22      	ldr	r2, [pc, #136]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8007898:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 800789c:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800789e:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 80078a2:	430b      	orrs	r3, r1
 80078a4:	6593      	str	r3, [r2, #88]	; 0x58
 80078a6:	e741      	b.n	800772c <HAL_RCCEx_PeriphCLKConfig+0xfc>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80078a8:	4a1d      	ldr	r2, [pc, #116]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80078aa:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80078ac:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80078b0:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 80078b2:	e7ef      	b.n	8007894 <HAL_RCCEx_PeriphCLKConfig+0x264>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80078b4:	2100      	movs	r1, #0
 80078b6:	f105 0008 	add.w	r0, r5, #8
 80078ba:	f7ff fdc9 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80078be:	4604      	mov	r4, r0
        break;
 80078c0:	e7e8      	b.n	8007894 <HAL_RCCEx_PeriphCLKConfig+0x264>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80078c2:	2100      	movs	r1, #0
 80078c4:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80078c8:	f7ff fe3a 	bl	8007540 <RCCEx_PLL3_Config>
 80078cc:	e7f7      	b.n	80078be <HAL_RCCEx_PeriphCLKConfig+0x28e>
 80078ce:	4626      	mov	r6, r4
 80078d0:	e72c      	b.n	800772c <HAL_RCCEx_PeriphCLKConfig+0xfc>
    switch (PeriphClkInit->Sai4BClockSelection)
 80078d2:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80078d6:	d003      	beq.n	80078e0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 80078d8:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80078dc:	f47f af38 	bne.w	8007750 <HAL_RCCEx_PeriphCLKConfig+0x120>
    if (ret == HAL_OK)
 80078e0:	b9dc      	cbnz	r4, 800791a <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 80078e2:	4a0f      	ldr	r2, [pc, #60]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80078e4:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
 80078e8:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80078ea:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80078ee:	430b      	orrs	r3, r1
 80078f0:	6593      	str	r3, [r2, #88]	; 0x58
 80078f2:	e72f      	b.n	8007754 <HAL_RCCEx_PeriphCLKConfig+0x124>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80078f4:	4a0a      	ldr	r2, [pc, #40]	; (8007920 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80078f6:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80078f8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80078fc:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 80078fe:	e7ef      	b.n	80078e0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007900:	2100      	movs	r1, #0
 8007902:	f105 0008 	add.w	r0, r5, #8
 8007906:	f7ff fda3 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800790a:	4604      	mov	r4, r0
        break;
 800790c:	e7e8      	b.n	80078e0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800790e:	2100      	movs	r1, #0
 8007910:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007914:	f7ff fe14 	bl	8007540 <RCCEx_PLL3_Config>
 8007918:	e7f7      	b.n	800790a <HAL_RCCEx_PeriphCLKConfig+0x2da>
 800791a:	4626      	mov	r6, r4
 800791c:	e71a      	b.n	8007754 <HAL_RCCEx_PeriphCLKConfig+0x124>
 800791e:	bf00      	nop
 8007920:	58024400 	.word	0x58024400
    switch (PeriphClkInit->QspiClockSelection)
 8007924:	2b30      	cmp	r3, #48	; 0x30
 8007926:	f47f af24 	bne.w	8007772 <HAL_RCCEx_PeriphCLKConfig+0x142>
    if (ret == HAL_OK)
 800792a:	b9a4      	cbnz	r4, 8007956 <HAL_RCCEx_PeriphCLKConfig+0x326>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
 800792c:	4aa0      	ldr	r2, [pc, #640]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 800792e:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
 8007930:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007932:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8007936:	430b      	orrs	r3, r1
 8007938:	64d3      	str	r3, [r2, #76]	; 0x4c
 800793a:	e71c      	b.n	8007776 <HAL_RCCEx_PeriphCLKConfig+0x146>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800793c:	4a9c      	ldr	r2, [pc, #624]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 800793e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007940:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007944:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 8007946:	e7f0      	b.n	800792a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007948:	2102      	movs	r1, #2
 800794a:	f105 0008 	add.w	r0, r5, #8
 800794e:	f7ff fd7f 	bl	8007450 <RCCEx_PLL2_Config>
 8007952:	4604      	mov	r4, r0
        break;
 8007954:	e7e9      	b.n	800792a <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 8007956:	4626      	mov	r6, r4
 8007958:	e70d      	b.n	8007776 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Spi123ClockSelection)
 800795a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800795e:	d003      	beq.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x338>
 8007960:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007964:	f47f af18 	bne.w	8007798 <HAL_RCCEx_PeriphCLKConfig+0x168>
    if (ret == HAL_OK)
 8007968:	b9d4      	cbnz	r4, 80079a0 <HAL_RCCEx_PeriphCLKConfig+0x370>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 800796a:	4a91      	ldr	r2, [pc, #580]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 800796c:	6e29      	ldr	r1, [r5, #96]	; 0x60
 800796e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007970:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007974:	430b      	orrs	r3, r1
 8007976:	6513      	str	r3, [r2, #80]	; 0x50
 8007978:	e710      	b.n	800779c <HAL_RCCEx_PeriphCLKConfig+0x16c>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800797a:	4a8d      	ldr	r2, [pc, #564]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 800797c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800797e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007982:	62d3      	str	r3, [r2, #44]	; 0x2c
        break;
 8007984:	e7f0      	b.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x338>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007986:	2100      	movs	r1, #0
 8007988:	f105 0008 	add.w	r0, r5, #8
 800798c:	f7ff fd60 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007990:	4604      	mov	r4, r0
        break;
 8007992:	e7e9      	b.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x338>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007994:	2100      	movs	r1, #0
 8007996:	f105 0028 	add.w	r0, r5, #40	; 0x28
 800799a:	f7ff fdd1 	bl	8007540 <RCCEx_PLL3_Config>
 800799e:	e7f7      	b.n	8007990 <HAL_RCCEx_PeriphCLKConfig+0x360>
 80079a0:	4626      	mov	r6, r4
 80079a2:	e6fb      	b.n	800779c <HAL_RCCEx_PeriphCLKConfig+0x16c>
    switch (PeriphClkInit->Spi45ClockSelection)
 80079a4:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80079a8:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 80079ac:	d003      	beq.n	80079b6 <HAL_RCCEx_PeriphCLKConfig+0x386>
 80079ae:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80079b2:	f47f af04 	bne.w	80077be <HAL_RCCEx_PeriphCLKConfig+0x18e>
    if (ret == HAL_OK)
 80079b6:	b9a4      	cbnz	r4, 80079e2 <HAL_RCCEx_PeriphCLKConfig+0x3b2>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 80079b8:	4a7d      	ldr	r2, [pc, #500]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80079ba:	6e69      	ldr	r1, [r5, #100]	; 0x64
 80079bc:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80079be:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 80079c2:	430b      	orrs	r3, r1
 80079c4:	6513      	str	r3, [r2, #80]	; 0x50
 80079c6:	e6fc      	b.n	80077c2 <HAL_RCCEx_PeriphCLKConfig+0x192>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80079c8:	2101      	movs	r1, #1
 80079ca:	f105 0008 	add.w	r0, r5, #8
 80079ce:	f7ff fd3f 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80079d2:	4604      	mov	r4, r0
        break;
 80079d4:	e7ef      	b.n	80079b6 <HAL_RCCEx_PeriphCLKConfig+0x386>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80079d6:	2101      	movs	r1, #1
 80079d8:	f105 0028 	add.w	r0, r5, #40	; 0x28
 80079dc:	f7ff fdb0 	bl	8007540 <RCCEx_PLL3_Config>
 80079e0:	e7f7      	b.n	80079d2 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 80079e2:	4626      	mov	r6, r4
 80079e4:	e6ed      	b.n	80077c2 <HAL_RCCEx_PeriphCLKConfig+0x192>
    switch (PeriphClkInit->Spi6ClockSelection)
 80079e6:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80079ea:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80079ee:	d003      	beq.n	80079f8 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
 80079f0:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80079f4:	f47f aef7 	bne.w	80077e6 <HAL_RCCEx_PeriphCLKConfig+0x1b6>
    if (ret == HAL_OK)
 80079f8:	b9ac      	cbnz	r4, 8007a26 <HAL_RCCEx_PeriphCLKConfig+0x3f6>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 80079fa:	4a6d      	ldr	r2, [pc, #436]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 80079fc:	f8d5 10b0 	ldr.w	r1, [r5, #176]	; 0xb0
 8007a00:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007a02:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007a06:	430b      	orrs	r3, r1
 8007a08:	6593      	str	r3, [r2, #88]	; 0x58
 8007a0a:	e6ee      	b.n	80077ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007a0c:	2101      	movs	r1, #1
 8007a0e:	f105 0008 	add.w	r0, r5, #8
 8007a12:	f7ff fd1d 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007a16:	4604      	mov	r4, r0
        break;
 8007a18:	e7ee      	b.n	80079f8 <HAL_RCCEx_PeriphCLKConfig+0x3c8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007a1a:	2101      	movs	r1, #1
 8007a1c:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007a20:	f7ff fd8e 	bl	8007540 <RCCEx_PLL3_Config>
 8007a24:	e7f7      	b.n	8007a16 <HAL_RCCEx_PeriphCLKConfig+0x3e6>
 8007a26:	4626      	mov	r6, r4
 8007a28:	e6df      	b.n	80077ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007a2a:	4a61      	ldr	r2, [pc, #388]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a2c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007a2e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007a32:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007a34:	b974      	cbnz	r4, 8007a54 <HAL_RCCEx_PeriphCLKConfig+0x424>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8007a36:	4a5e      	ldr	r2, [pc, #376]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a38:	6f29      	ldr	r1, [r5, #112]	; 0x70
 8007a3a:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007a3c:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8007a40:	430b      	orrs	r3, r1
 8007a42:	6513      	str	r3, [r2, #80]	; 0x50
 8007a44:	e6e2      	b.n	800780c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007a46:	2101      	movs	r1, #1
 8007a48:	f105 0008 	add.w	r0, r5, #8
 8007a4c:	f7ff fd00 	bl	8007450 <RCCEx_PLL2_Config>
 8007a50:	4604      	mov	r4, r0
        break;
 8007a52:	e7ef      	b.n	8007a34 <HAL_RCCEx_PeriphCLKConfig+0x404>
 8007a54:	4626      	mov	r6, r4
 8007a56:	e6d9      	b.n	800780c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007a58:	4a55      	ldr	r2, [pc, #340]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a5a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007a5c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007a60:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007a62:	2c00      	cmp	r4, #0
 8007a64:	d14e      	bne.n	8007b04 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8007a66:	4a52      	ldr	r2, [pc, #328]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a68:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 8007a6a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007a6c:	f023 0303 	bic.w	r3, r3, #3
 8007a70:	430b      	orrs	r3, r1
 8007a72:	64d3      	str	r3, [r2, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8007a74:	682b      	ldr	r3, [r5, #0]
 8007a76:	0259      	lsls	r1, r3, #9
 8007a78:	d54e      	bpl.n	8007b18 <HAL_RCCEx_PeriphCLKConfig+0x4e8>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8007a7a:	4f4e      	ldr	r7, [pc, #312]	; (8007bb4 <HAL_RCCEx_PeriphCLKConfig+0x584>)
 8007a7c:	683b      	ldr	r3, [r7, #0]
 8007a7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007a82:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 8007a84:	f7fd fb46 	bl	8005114 <HAL_GetTick>
 8007a88:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007a8a:	683b      	ldr	r3, [r7, #0]
 8007a8c:	05da      	lsls	r2, r3, #23
 8007a8e:	d53b      	bpl.n	8007b08 <HAL_RCCEx_PeriphCLKConfig+0x4d8>
    if (ret == HAL_OK)
 8007a90:	2c00      	cmp	r4, #0
 8007a92:	d16d      	bne.n	8007b70 <HAL_RCCEx_PeriphCLKConfig+0x540>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8007a94:	4b46      	ldr	r3, [pc, #280]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007a96:	f8d5 00b4 	ldr.w	r0, [r5, #180]	; 0xb4
 8007a9a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8007a9c:	4042      	eors	r2, r0
 8007a9e:	f412 7f40 	tst.w	r2, #768	; 0x300
 8007aa2:	d00b      	beq.n	8007abc <HAL_RCCEx_PeriphCLKConfig+0x48c>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007aa4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
 8007aa6:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007aa8:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8007aac:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8007ab0:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 8007ab2:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8007ab4:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8007ab8:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
 8007aba:	671a      	str	r2, [r3, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 8007abc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8007ac0:	d041      	beq.n	8007b46 <HAL_RCCEx_PeriphCLKConfig+0x516>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007ac2:	f8d5 30b4 	ldr.w	r3, [r5, #180]	; 0xb4
 8007ac6:	493a      	ldr	r1, [pc, #232]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007ac8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007acc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007ad0:	d14a      	bne.n	8007b68 <HAL_RCCEx_PeriphCLKConfig+0x538>
 8007ad2:	6908      	ldr	r0, [r1, #16]
 8007ad4:	4a38      	ldr	r2, [pc, #224]	; (8007bb8 <HAL_RCCEx_PeriphCLKConfig+0x588>)
 8007ad6:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8007ada:	ea02 1213 	and.w	r2, r2, r3, lsr #4
 8007ade:	4302      	orrs	r2, r0
 8007ae0:	610a      	str	r2, [r1, #16]
 8007ae2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007ae6:	4a32      	ldr	r2, [pc, #200]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007ae8:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007aea:	430b      	orrs	r3, r1
 8007aec:	6713      	str	r3, [r2, #112]	; 0x70
 8007aee:	e013      	b.n	8007b18 <HAL_RCCEx_PeriphCLKConfig+0x4e8>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007af0:	2102      	movs	r1, #2
 8007af2:	f105 0008 	add.w	r0, r5, #8
 8007af6:	f7ff fcab 	bl	8007450 <RCCEx_PLL2_Config>
 8007afa:	4604      	mov	r4, r0
        break;
 8007afc:	e7b1      	b.n	8007a62 <HAL_RCCEx_PeriphCLKConfig+0x432>
    switch (PeriphClkInit->FmcClockSelection)
 8007afe:	2601      	movs	r6, #1
 8007b00:	4634      	mov	r4, r6
 8007b02:	e7b7      	b.n	8007a74 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8007b04:	4626      	mov	r6, r4
 8007b06:	e7b5      	b.n	8007a74 <HAL_RCCEx_PeriphCLKConfig+0x444>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007b08:	f7fd fb04 	bl	8005114 <HAL_GetTick>
 8007b0c:	eba0 0008 	sub.w	r0, r0, r8
 8007b10:	2864      	cmp	r0, #100	; 0x64
 8007b12:	d9ba      	bls.n	8007a8a <HAL_RCCEx_PeriphCLKConfig+0x45a>
        ret = HAL_TIMEOUT;
 8007b14:	2603      	movs	r6, #3
 8007b16:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8007b18:	682b      	ldr	r3, [r5, #0]
 8007b1a:	07d8      	lsls	r0, r3, #31
 8007b1c:	d508      	bpl.n	8007b30 <HAL_RCCEx_PeriphCLKConfig+0x500>
    switch (PeriphClkInit->Usart16ClockSelection)
 8007b1e:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 8007b20:	2b10      	cmp	r3, #16
 8007b22:	d03d      	beq.n	8007ba0 <HAL_RCCEx_PeriphCLKConfig+0x570>
 8007b24:	d826      	bhi.n	8007b74 <HAL_RCCEx_PeriphCLKConfig+0x544>
 8007b26:	b35b      	cbz	r3, 8007b80 <HAL_RCCEx_PeriphCLKConfig+0x550>
 8007b28:	2b08      	cmp	r3, #8
 8007b2a:	d032      	beq.n	8007b92 <HAL_RCCEx_PeriphCLKConfig+0x562>
 8007b2c:	2601      	movs	r6, #1
 8007b2e:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8007b30:	682b      	ldr	r3, [r5, #0]
 8007b32:	0799      	lsls	r1, r3, #30
 8007b34:	d550      	bpl.n	8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
    switch (PeriphClkInit->Usart234578ClockSelection)
 8007b36:	6fab      	ldr	r3, [r5, #120]	; 0x78
 8007b38:	2b05      	cmp	r3, #5
 8007b3a:	d863      	bhi.n	8007c04 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 8007b3c:	e8df f003 	tbb	[pc, r3]
 8007b40:	445c3e44 	.word	0x445c3e44
 8007b44:	4444      	.short	0x4444
        tickstart = HAL_GetTick();
 8007b46:	f7fd fae5 	bl	8005114 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007b4a:	f8df 8064 	ldr.w	r8, [pc, #100]	; 8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>
        tickstart = HAL_GetTick();
 8007b4e:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007b50:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007b54:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
 8007b58:	079b      	lsls	r3, r3, #30
 8007b5a:	d4b2      	bmi.n	8007ac2 <HAL_RCCEx_PeriphCLKConfig+0x492>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007b5c:	f7fd fada 	bl	8005114 <HAL_GetTick>
 8007b60:	1bc0      	subs	r0, r0, r7
 8007b62:	4548      	cmp	r0, r9
 8007b64:	d9f6      	bls.n	8007b54 <HAL_RCCEx_PeriphCLKConfig+0x524>
 8007b66:	e7d5      	b.n	8007b14 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007b68:	690a      	ldr	r2, [r1, #16]
 8007b6a:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8007b6e:	e7b7      	b.n	8007ae0 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8007b70:	4626      	mov	r6, r4
 8007b72:	e7d1      	b.n	8007b18 <HAL_RCCEx_PeriphCLKConfig+0x4e8>
    switch (PeriphClkInit->Usart16ClockSelection)
 8007b74:	f023 0208 	bic.w	r2, r3, #8
 8007b78:	2a20      	cmp	r2, #32
 8007b7a:	d001      	beq.n	8007b80 <HAL_RCCEx_PeriphCLKConfig+0x550>
 8007b7c:	2b18      	cmp	r3, #24
 8007b7e:	d1d5      	bne.n	8007b2c <HAL_RCCEx_PeriphCLKConfig+0x4fc>
    if (ret == HAL_OK)
 8007b80:	b9a4      	cbnz	r4, 8007bac <HAL_RCCEx_PeriphCLKConfig+0x57c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 8007b82:	4a0b      	ldr	r2, [pc, #44]	; (8007bb0 <HAL_RCCEx_PeriphCLKConfig+0x580>)
 8007b84:	6fe9      	ldr	r1, [r5, #124]	; 0x7c
 8007b86:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007b88:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8007b8c:	430b      	orrs	r3, r1
 8007b8e:	6553      	str	r3, [r2, #84]	; 0x54
 8007b90:	e7ce      	b.n	8007b30 <HAL_RCCEx_PeriphCLKConfig+0x500>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007b92:	2101      	movs	r1, #1
 8007b94:	f105 0008 	add.w	r0, r5, #8
 8007b98:	f7ff fc5a 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007b9c:	4604      	mov	r4, r0
        break;
 8007b9e:	e7ef      	b.n	8007b80 <HAL_RCCEx_PeriphCLKConfig+0x550>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007ba0:	2101      	movs	r1, #1
 8007ba2:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007ba6:	f7ff fccb 	bl	8007540 <RCCEx_PLL3_Config>
 8007baa:	e7f7      	b.n	8007b9c <HAL_RCCEx_PeriphCLKConfig+0x56c>
 8007bac:	4626      	mov	r6, r4
 8007bae:	e7bf      	b.n	8007b30 <HAL_RCCEx_PeriphCLKConfig+0x500>
 8007bb0:	58024400 	.word	0x58024400
 8007bb4:	58024800 	.word	0x58024800
 8007bb8:	00ffffcf 	.word	0x00ffffcf
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007bbc:	2101      	movs	r1, #1
 8007bbe:	f105 0008 	add.w	r0, r5, #8
 8007bc2:	f7ff fc45 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007bc6:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007bc8:	b9fc      	cbnz	r4, 8007c0a <HAL_RCCEx_PeriphCLKConfig+0x5da>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8007bca:	4a11      	ldr	r2, [pc, #68]	; (8007c10 <HAL_RCCEx_PeriphCLKConfig+0x5e0>)
 8007bcc:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 8007bce:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007bd0:	f023 0307 	bic.w	r3, r3, #7
 8007bd4:	430b      	orrs	r3, r1
 8007bd6:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8007bd8:	682b      	ldr	r3, [r5, #0]
 8007bda:	075a      	lsls	r2, r3, #29
 8007bdc:	d52b      	bpl.n	8007c36 <HAL_RCCEx_PeriphCLKConfig+0x606>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8007bde:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
 8007be2:	2b05      	cmp	r3, #5
 8007be4:	f200 817c 	bhi.w	8007ee0 <HAL_RCCEx_PeriphCLKConfig+0x8b0>
 8007be8:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007bec:	0014001a 	.word	0x0014001a
 8007bf0:	001a0174 	.word	0x001a0174
 8007bf4:	001a001a 	.word	0x001a001a
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007bf8:	2101      	movs	r1, #1
 8007bfa:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007bfe:	f7ff fc9f 	bl	8007540 <RCCEx_PLL3_Config>
 8007c02:	e7e0      	b.n	8007bc6 <HAL_RCCEx_PeriphCLKConfig+0x596>
    switch (PeriphClkInit->Usart234578ClockSelection)
 8007c04:	2601      	movs	r6, #1
 8007c06:	4634      	mov	r4, r6
 8007c08:	e7e6      	b.n	8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8007c0a:	4626      	mov	r6, r4
 8007c0c:	e7e4      	b.n	8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8007c0e:	bf00      	nop
 8007c10:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007c14:	2101      	movs	r1, #1
 8007c16:	f105 0008 	add.w	r0, r5, #8
 8007c1a:	f7ff fc19 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007c1e:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007c20:	2c00      	cmp	r4, #0
 8007c22:	f040 8160 	bne.w	8007ee6 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8007c26:	4aaa      	ldr	r2, [pc, #680]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007c28:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
 8007c2c:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007c2e:	f023 0307 	bic.w	r3, r3, #7
 8007c32:	430b      	orrs	r3, r1
 8007c34:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8007c36:	682b      	ldr	r3, [r5, #0]
 8007c38:	069b      	lsls	r3, r3, #26
 8007c3a:	d510      	bpl.n	8007c5e <HAL_RCCEx_PeriphCLKConfig+0x62e>
    switch (PeriphClkInit->Lptim1ClockSelection)
 8007c3c:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8007c40:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007c44:	f000 816b 	beq.w	8007f1e <HAL_RCCEx_PeriphCLKConfig+0x8ee>
 8007c48:	f200 814f 	bhi.w	8007eea <HAL_RCCEx_PeriphCLKConfig+0x8ba>
 8007c4c:	2b00      	cmp	r3, #0
 8007c4e:	f000 8155 	beq.w	8007efc <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 8007c52:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007c56:	f000 815b 	beq.w	8007f10 <HAL_RCCEx_PeriphCLKConfig+0x8e0>
 8007c5a:	2601      	movs	r6, #1
 8007c5c:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8007c5e:	682b      	ldr	r3, [r5, #0]
 8007c60:	065f      	lsls	r7, r3, #25
 8007c62:	d510      	bpl.n	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x656>
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007c64:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8007c68:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007c6c:	f000 8179 	beq.w	8007f62 <HAL_RCCEx_PeriphCLKConfig+0x932>
 8007c70:	f200 815d 	bhi.w	8007f2e <HAL_RCCEx_PeriphCLKConfig+0x8fe>
 8007c74:	2b00      	cmp	r3, #0
 8007c76:	f000 8163 	beq.w	8007f40 <HAL_RCCEx_PeriphCLKConfig+0x910>
 8007c7a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007c7e:	f000 8169 	beq.w	8007f54 <HAL_RCCEx_PeriphCLKConfig+0x924>
 8007c82:	2601      	movs	r6, #1
 8007c84:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8007c86:	682b      	ldr	r3, [r5, #0]
 8007c88:	0618      	lsls	r0, r3, #24
 8007c8a:	d510      	bpl.n	8007cae <HAL_RCCEx_PeriphCLKConfig+0x67e>
    switch (PeriphClkInit->Lptim345ClockSelection)
 8007c8c:	f8d5 30a0 	ldr.w	r3, [r5, #160]	; 0xa0
 8007c90:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007c94:	f000 8187 	beq.w	8007fa6 <HAL_RCCEx_PeriphCLKConfig+0x976>
 8007c98:	f200 816b 	bhi.w	8007f72 <HAL_RCCEx_PeriphCLKConfig+0x942>
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	f000 8171 	beq.w	8007f84 <HAL_RCCEx_PeriphCLKConfig+0x954>
 8007ca2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ca6:	f000 8177 	beq.w	8007f98 <HAL_RCCEx_PeriphCLKConfig+0x968>
 8007caa:	2601      	movs	r6, #1
 8007cac:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
 8007cae:	682b      	ldr	r3, [r5, #0]
 8007cb0:	0719      	lsls	r1, r3, #28
 8007cb2:	d514      	bpl.n	8007cde <HAL_RCCEx_PeriphCLKConfig+0x6ae>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
 8007cb4:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 8007cb8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007cbc:	d107      	bne.n	8007cce <HAL_RCCEx_PeriphCLKConfig+0x69e>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007cbe:	2102      	movs	r1, #2
 8007cc0:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007cc4:	f7ff fc3c 	bl	8007540 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8007cc8:	2800      	cmp	r0, #0
 8007cca:	bf18      	it	ne
 8007ccc:	2601      	movne	r6, #1
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
 8007cce:	4a80      	ldr	r2, [pc, #512]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007cd0:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
 8007cd4:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007cd6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8007cda:	430b      	orrs	r3, r1
 8007cdc:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8007cde:	682b      	ldr	r3, [r5, #0]
 8007ce0:	06da      	lsls	r2, r3, #27
 8007ce2:	d514      	bpl.n	8007d0e <HAL_RCCEx_PeriphCLKConfig+0x6de>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 8007ce4:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
 8007ce8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007cec:	d107      	bne.n	8007cfe <HAL_RCCEx_PeriphCLKConfig+0x6ce>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007cee:	2102      	movs	r1, #2
 8007cf0:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007cf4:	f7ff fc24 	bl	8007540 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8007cf8:	2800      	cmp	r0, #0
 8007cfa:	bf18      	it	ne
 8007cfc:	2601      	movne	r6, #1
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8007cfe:	4a74      	ldr	r2, [pc, #464]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d00:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
 8007d04:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007d06:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007d0a:	430b      	orrs	r3, r1
 8007d0c:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8007d0e:	682b      	ldr	r3, [r5, #0]
 8007d10:	031b      	lsls	r3, r3, #12
 8007d12:	d51b      	bpl.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x71c>
    switch (PeriphClkInit->AdcClockSelection)
 8007d14:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 8007d18:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8007d1c:	f000 814b 	beq.w	8007fb6 <HAL_RCCEx_PeriphCLKConfig+0x986>
 8007d20:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
 8007d24:	d007      	beq.n	8007d36 <HAL_RCCEx_PeriphCLKConfig+0x706>
 8007d26:	2900      	cmp	r1, #0
 8007d28:	f040 814b 	bne.w	8007fc2 <HAL_RCCEx_PeriphCLKConfig+0x992>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007d2c:	f105 0008 	add.w	r0, r5, #8
 8007d30:	f7ff fb8e 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007d34:	4604      	mov	r4, r0
    if (ret == HAL_OK)
 8007d36:	2c00      	cmp	r4, #0
 8007d38:	f040 8146 	bne.w	8007fc8 <HAL_RCCEx_PeriphCLKConfig+0x998>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8007d3c:	4a64      	ldr	r2, [pc, #400]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d3e:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 8007d42:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007d44:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007d48:	430b      	orrs	r3, r1
 8007d4a:	6593      	str	r3, [r2, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8007d4c:	682b      	ldr	r3, [r5, #0]
 8007d4e:	035f      	lsls	r7, r3, #13
 8007d50:	d51c      	bpl.n	8007d8c <HAL_RCCEx_PeriphCLKConfig+0x75c>
    switch (PeriphClkInit->UsbClockSelection)
 8007d52:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 8007d56:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007d5a:	f000 8137 	beq.w	8007fcc <HAL_RCCEx_PeriphCLKConfig+0x99c>
 8007d5e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007d62:	d008      	beq.n	8007d76 <HAL_RCCEx_PeriphCLKConfig+0x746>
 8007d64:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007d68:	f040 8137 	bne.w	8007fda <HAL_RCCEx_PeriphCLKConfig+0x9aa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007d6c:	4a58      	ldr	r2, [pc, #352]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d6e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007d70:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007d74:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007d76:	2c00      	cmp	r4, #0
 8007d78:	f040 8132 	bne.w	8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x9b0>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8007d7c:	4a54      	ldr	r2, [pc, #336]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007d7e:	f8d5 1088 	ldr.w	r1, [r5, #136]	; 0x88
 8007d82:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007d84:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8007d88:	430b      	orrs	r3, r1
 8007d8a:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8007d8c:	682b      	ldr	r3, [r5, #0]
 8007d8e:	03d8      	lsls	r0, r3, #15
 8007d90:	d509      	bpl.n	8007da6 <HAL_RCCEx_PeriphCLKConfig+0x776>
    switch (PeriphClkInit->SdmmcClockSelection)
 8007d92:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8007d94:	2b00      	cmp	r3, #0
 8007d96:	f000 8125 	beq.w	8007fe4 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
 8007d9a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007d9e:	f000 812f 	beq.w	8008000 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 8007da2:	2601      	movs	r6, #1
 8007da4:	4634      	mov	r4, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007da6:	682b      	ldr	r3, [r5, #0]
 8007da8:	0099      	lsls	r1, r3, #2
 8007daa:	d507      	bpl.n	8007dbc <HAL_RCCEx_PeriphCLKConfig+0x78c>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007dac:	2102      	movs	r1, #2
 8007dae:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007db2:	f7ff fbc5 	bl	8007540 <RCCEx_PLL3_Config>
      status = HAL_ERROR;
 8007db6:	2800      	cmp	r0, #0
 8007db8:	bf18      	it	ne
 8007dba:	2601      	movne	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007dbc:	e9d5 3100 	ldrd	r3, r1, [r5]
 8007dc0:	039a      	lsls	r2, r3, #14
 8007dc2:	d50b      	bpl.n	8007ddc <HAL_RCCEx_PeriphCLKConfig+0x7ac>
    switch (PeriphClkInit->RngClockSelection)
 8007dc4:	f8d5 0080 	ldr.w	r0, [r5, #128]	; 0x80
 8007dc8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8007dcc:	f000 812f 	beq.w	800802e <HAL_RCCEx_PeriphCLKConfig+0x9fe>
 8007dd0:	f200 811f 	bhi.w	8008012 <HAL_RCCEx_PeriphCLKConfig+0x9e2>
 8007dd4:	2800      	cmp	r0, #0
 8007dd6:	f000 8122 	beq.w	800801e <HAL_RCCEx_PeriphCLKConfig+0x9ee>
 8007dda:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8007ddc:	02df      	lsls	r7, r3, #11
 8007dde:	d506      	bpl.n	8007dee <HAL_RCCEx_PeriphCLKConfig+0x7be>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8007de0:	483b      	ldr	r0, [pc, #236]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007de2:	6f6c      	ldr	r4, [r5, #116]	; 0x74
 8007de4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007de6:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8007dea:	4322      	orrs	r2, r4
 8007dec:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
 8007dee:	00dc      	lsls	r4, r3, #3
 8007df0:	d507      	bpl.n	8007e02 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
 8007df2:	4837      	ldr	r0, [pc, #220]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007df4:	f8d5 40b8 	ldr.w	r4, [r5, #184]	; 0xb8
 8007df8:	6902      	ldr	r2, [r0, #16]
 8007dfa:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8007dfe:	4322      	orrs	r2, r4
 8007e00:	6102      	str	r2, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8007e02:	0298      	lsls	r0, r3, #10
 8007e04:	d506      	bpl.n	8007e14 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8007e06:	4832      	ldr	r0, [pc, #200]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007e08:	6eec      	ldr	r4, [r5, #108]	; 0x6c
 8007e0a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007e0c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8007e10:	4322      	orrs	r2, r4
 8007e12:	6502      	str	r2, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8007e14:	005a      	lsls	r2, r3, #1
 8007e16:	d509      	bpl.n	8007e2c <HAL_RCCEx_PeriphCLKConfig+0x7fc>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007e18:	4a2d      	ldr	r2, [pc, #180]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007e1a:	6910      	ldr	r0, [r2, #16]
 8007e1c:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 8007e20:	6110      	str	r0, [r2, #16]
 8007e22:	6910      	ldr	r0, [r2, #16]
 8007e24:	f8d5 40bc 	ldr.w	r4, [r5, #188]	; 0xbc
 8007e28:	4320      	orrs	r0, r4
 8007e2a:	6110      	str	r0, [r2, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8007e2c:	2b00      	cmp	r3, #0
 8007e2e:	da06      	bge.n	8007e3e <HAL_RCCEx_PeriphCLKConfig+0x80e>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8007e30:	4827      	ldr	r0, [pc, #156]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007e32:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8007e34:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8007e36:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007e3a:	4322      	orrs	r2, r4
 8007e3c:	64c2      	str	r2, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8007e3e:	021b      	lsls	r3, r3, #8
 8007e40:	d507      	bpl.n	8007e52 <HAL_RCCEx_PeriphCLKConfig+0x822>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8007e42:	4a23      	ldr	r2, [pc, #140]	; (8007ed0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>)
 8007e44:	f8d5 008c 	ldr.w	r0, [r5, #140]	; 0x8c
 8007e48:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007e4a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8007e4e:	4303      	orrs	r3, r0
 8007e50:	6553      	str	r3, [r2, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8007e52:	07cf      	lsls	r7, r1, #31
 8007e54:	d507      	bpl.n	8007e66 <HAL_RCCEx_PeriphCLKConfig+0x836>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007e56:	2100      	movs	r1, #0
 8007e58:	f105 0008 	add.w	r0, r5, #8
 8007e5c:	f7ff faf8 	bl	8007450 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007e60:	2800      	cmp	r0, #0
 8007e62:	bf18      	it	ne
 8007e64:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8007e66:	686b      	ldr	r3, [r5, #4]
 8007e68:	079c      	lsls	r4, r3, #30
 8007e6a:	d507      	bpl.n	8007e7c <HAL_RCCEx_PeriphCLKConfig+0x84c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007e6c:	2101      	movs	r1, #1
 8007e6e:	f105 0008 	add.w	r0, r5, #8
 8007e72:	f7ff faed 	bl	8007450 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007e76:	2800      	cmp	r0, #0
 8007e78:	bf18      	it	ne
 8007e7a:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8007e7c:	686b      	ldr	r3, [r5, #4]
 8007e7e:	0758      	lsls	r0, r3, #29
 8007e80:	d507      	bpl.n	8007e92 <HAL_RCCEx_PeriphCLKConfig+0x862>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007e82:	2102      	movs	r1, #2
 8007e84:	f105 0008 	add.w	r0, r5, #8
 8007e88:	f7ff fae2 	bl	8007450 <RCCEx_PLL2_Config>
    if (ret == HAL_OK)
 8007e8c:	2800      	cmp	r0, #0
 8007e8e:	bf18      	it	ne
 8007e90:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8007e92:	686b      	ldr	r3, [r5, #4]
 8007e94:	0719      	lsls	r1, r3, #28
 8007e96:	d507      	bpl.n	8007ea8 <HAL_RCCEx_PeriphCLKConfig+0x878>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007e98:	2100      	movs	r1, #0
 8007e9a:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007e9e:	f7ff fb4f 	bl	8007540 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007ea2:	2800      	cmp	r0, #0
 8007ea4:	bf18      	it	ne
 8007ea6:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8007ea8:	686b      	ldr	r3, [r5, #4]
 8007eaa:	06da      	lsls	r2, r3, #27
 8007eac:	d507      	bpl.n	8007ebe <HAL_RCCEx_PeriphCLKConfig+0x88e>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007eae:	2101      	movs	r1, #1
 8007eb0:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007eb4:	f7ff fb44 	bl	8007540 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8007eb8:	2800      	cmp	r0, #0
 8007eba:	bf18      	it	ne
 8007ebc:	4606      	movne	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8007ebe:	686b      	ldr	r3, [r5, #4]
 8007ec0:	069b      	lsls	r3, r3, #26
 8007ec2:	f100 80bc 	bmi.w	800803e <HAL_RCCEx_PeriphCLKConfig+0xa0e>
    return HAL_OK;
 8007ec6:	1e30      	subs	r0, r6, #0
 8007ec8:	bf18      	it	ne
 8007eca:	2001      	movne	r0, #1
}
 8007ecc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007ed0:	58024400 	.word	0x58024400
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007ed4:	2101      	movs	r1, #1
 8007ed6:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007eda:	f7ff fb31 	bl	8007540 <RCCEx_PLL3_Config>
 8007ede:	e69e      	b.n	8007c1e <HAL_RCCEx_PeriphCLKConfig+0x5ee>
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8007ee0:	2601      	movs	r6, #1
 8007ee2:	4634      	mov	r4, r6
 8007ee4:	e6a7      	b.n	8007c36 <HAL_RCCEx_PeriphCLKConfig+0x606>
 8007ee6:	4626      	mov	r6, r4
 8007ee8:	e6a5      	b.n	8007c36 <HAL_RCCEx_PeriphCLKConfig+0x606>
    switch (PeriphClkInit->Lptim1ClockSelection)
 8007eea:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8007eee:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8007ef2:	d003      	beq.n	8007efc <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 8007ef4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007ef8:	f47f aeaf 	bne.w	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x62a>
    if (ret == HAL_OK)
 8007efc:	b9ac      	cbnz	r4, 8007f2a <HAL_RCCEx_PeriphCLKConfig+0x8fa>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8007efe:	4a55      	ldr	r2, [pc, #340]	; (8008054 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007f00:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
 8007f04:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007f06:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007f0a:	430b      	orrs	r3, r1
 8007f0c:	6553      	str	r3, [r2, #84]	; 0x54
 8007f0e:	e6a6      	b.n	8007c5e <HAL_RCCEx_PeriphCLKConfig+0x62e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007f10:	2100      	movs	r1, #0
 8007f12:	f105 0008 	add.w	r0, r5, #8
 8007f16:	f7ff fa9b 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007f1a:	4604      	mov	r4, r0
        break;
 8007f1c:	e7ee      	b.n	8007efc <HAL_RCCEx_PeriphCLKConfig+0x8cc>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007f1e:	2102      	movs	r1, #2
 8007f20:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007f24:	f7ff fb0c 	bl	8007540 <RCCEx_PLL3_Config>
 8007f28:	e7f7      	b.n	8007f1a <HAL_RCCEx_PeriphCLKConfig+0x8ea>
 8007f2a:	4626      	mov	r6, r4
 8007f2c:	e697      	b.n	8007c5e <HAL_RCCEx_PeriphCLKConfig+0x62e>
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007f2e:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8007f32:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8007f36:	d003      	beq.n	8007f40 <HAL_RCCEx_PeriphCLKConfig+0x910>
 8007f38:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8007f3c:	f47f aea1 	bne.w	8007c82 <HAL_RCCEx_PeriphCLKConfig+0x652>
    if (ret == HAL_OK)
 8007f40:	b9ac      	cbnz	r4, 8007f6e <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8007f42:	4a44      	ldr	r2, [pc, #272]	; (8008054 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007f44:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
 8007f48:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007f4a:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007f4e:	430b      	orrs	r3, r1
 8007f50:	6593      	str	r3, [r2, #88]	; 0x58
 8007f52:	e698      	b.n	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x656>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007f54:	2100      	movs	r1, #0
 8007f56:	f105 0008 	add.w	r0, r5, #8
 8007f5a:	f7ff fa79 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007f5e:	4604      	mov	r4, r0
        break;
 8007f60:	e7ee      	b.n	8007f40 <HAL_RCCEx_PeriphCLKConfig+0x910>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007f62:	2102      	movs	r1, #2
 8007f64:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007f68:	f7ff faea 	bl	8007540 <RCCEx_PLL3_Config>
 8007f6c:	e7f7      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x92e>
 8007f6e:	4626      	mov	r6, r4
 8007f70:	e689      	b.n	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x656>
    switch (PeriphClkInit->Lptim345ClockSelection)
 8007f72:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007f76:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007f7a:	d003      	beq.n	8007f84 <HAL_RCCEx_PeriphCLKConfig+0x954>
 8007f7c:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8007f80:	f47f ae93 	bne.w	8007caa <HAL_RCCEx_PeriphCLKConfig+0x67a>
    if (ret == HAL_OK)
 8007f84:	b9ac      	cbnz	r4, 8007fb2 <HAL_RCCEx_PeriphCLKConfig+0x982>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8007f86:	4a33      	ldr	r2, [pc, #204]	; (8008054 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007f88:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 8007f8c:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007f8e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007f92:	430b      	orrs	r3, r1
 8007f94:	6593      	str	r3, [r2, #88]	; 0x58
 8007f96:	e68a      	b.n	8007cae <HAL_RCCEx_PeriphCLKConfig+0x67e>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007f98:	2100      	movs	r1, #0
 8007f9a:	f105 0008 	add.w	r0, r5, #8
 8007f9e:	f7ff fa57 	bl	8007450 <RCCEx_PLL2_Config>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007fa2:	4604      	mov	r4, r0
        break;
 8007fa4:	e7ee      	b.n	8007f84 <HAL_RCCEx_PeriphCLKConfig+0x954>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007fa6:	2102      	movs	r1, #2
 8007fa8:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007fac:	f7ff fac8 	bl	8007540 <RCCEx_PLL3_Config>
 8007fb0:	e7f7      	b.n	8007fa2 <HAL_RCCEx_PeriphCLKConfig+0x972>
 8007fb2:	4626      	mov	r6, r4
 8007fb4:	e67b      	b.n	8007cae <HAL_RCCEx_PeriphCLKConfig+0x67e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007fb6:	2102      	movs	r1, #2
 8007fb8:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007fbc:	f7ff fac0 	bl	8007540 <RCCEx_PLL3_Config>
 8007fc0:	e6b8      	b.n	8007d34 <HAL_RCCEx_PeriphCLKConfig+0x704>
    switch (PeriphClkInit->AdcClockSelection)
 8007fc2:	2601      	movs	r6, #1
 8007fc4:	4634      	mov	r4, r6
 8007fc6:	e6c1      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x71c>
 8007fc8:	4626      	mov	r6, r4
 8007fca:	e6bf      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x71c>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007fcc:	2101      	movs	r1, #1
 8007fce:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8007fd2:	f7ff fab5 	bl	8007540 <RCCEx_PLL3_Config>
 8007fd6:	4604      	mov	r4, r0
        break;
 8007fd8:	e6cd      	b.n	8007d76 <HAL_RCCEx_PeriphCLKConfig+0x746>
    switch (PeriphClkInit->UsbClockSelection)
 8007fda:	2601      	movs	r6, #1
 8007fdc:	4634      	mov	r4, r6
 8007fde:	e6d5      	b.n	8007d8c <HAL_RCCEx_PeriphCLKConfig+0x75c>
 8007fe0:	4626      	mov	r6, r4
 8007fe2:	e6d3      	b.n	8007d8c <HAL_RCCEx_PeriphCLKConfig+0x75c>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007fe4:	4a1b      	ldr	r2, [pc, #108]	; (8008054 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007fe6:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007fe8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007fec:	62d3      	str	r3, [r2, #44]	; 0x2c
    if (ret == HAL_OK)
 8007fee:	b974      	cbnz	r4, 800800e <HAL_RCCEx_PeriphCLKConfig+0x9de>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8007ff0:	4a18      	ldr	r2, [pc, #96]	; (8008054 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8007ff2:	6d29      	ldr	r1, [r5, #80]	; 0x50
 8007ff4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007ff6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007ffa:	430b      	orrs	r3, r1
 8007ffc:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007ffe:	e6d2      	b.n	8007da6 <HAL_RCCEx_PeriphCLKConfig+0x776>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008000:	2102      	movs	r1, #2
 8008002:	f105 0008 	add.w	r0, r5, #8
 8008006:	f7ff fa23 	bl	8007450 <RCCEx_PLL2_Config>
 800800a:	4604      	mov	r4, r0
        break;
 800800c:	e7ef      	b.n	8007fee <HAL_RCCEx_PeriphCLKConfig+0x9be>
 800800e:	4626      	mov	r6, r4
 8008010:	e6c9      	b.n	8007da6 <HAL_RCCEx_PeriphCLKConfig+0x776>
    switch (PeriphClkInit->RngClockSelection)
 8008012:	f420 7280 	bic.w	r2, r0, #256	; 0x100
 8008016:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800801a:	f47f aede 	bne.w	8007dda <HAL_RCCEx_PeriphCLKConfig+0x7aa>
    if (ret == HAL_OK)
 800801e:	b964      	cbnz	r4, 800803a <HAL_RCCEx_PeriphCLKConfig+0xa0a>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8008020:	4c0c      	ldr	r4, [pc, #48]	; (8008054 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8008022:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8008024:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8008028:	4302      	orrs	r2, r0
 800802a:	6562      	str	r2, [r4, #84]	; 0x54
 800802c:	e6d6      	b.n	8007ddc <HAL_RCCEx_PeriphCLKConfig+0x7ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800802e:	4f09      	ldr	r7, [pc, #36]	; (8008054 <HAL_RCCEx_PeriphCLKConfig+0xa24>)
 8008030:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008032:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8008036:	62fa      	str	r2, [r7, #44]	; 0x2c
        break;
 8008038:	e7f1      	b.n	800801e <HAL_RCCEx_PeriphCLKConfig+0x9ee>
 800803a:	4626      	mov	r6, r4
 800803c:	e6ce      	b.n	8007ddc <HAL_RCCEx_PeriphCLKConfig+0x7ac>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800803e:	2102      	movs	r1, #2
 8008040:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8008044:	f7ff fa7c 	bl	8007540 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
 8008048:	2800      	cmp	r0, #0
 800804a:	f43f af3c 	beq.w	8007ec6 <HAL_RCCEx_PeriphCLKConfig+0x896>
  return HAL_ERROR;
 800804e:	2001      	movs	r0, #1
 8008050:	e73c      	b.n	8007ecc <HAL_RCCEx_PeriphCLKConfig+0x89c>
 8008052:	bf00      	nop
 8008054:	58024400 	.word	0x58024400

08008058 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8008058:	b538      	push	{r3, r4, r5, lr}
 800805a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800805c:	4604      	mov	r4, r0
 800805e:	b1f0      	cbz	r0, 800809e <HAL_SDRAM_Init+0x46>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8008060:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008064:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008068:	b91b      	cbnz	r3, 8008072 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800806a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800806e:	f7f9 fdaf 	bl	8001bd0 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008072:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8008074:	1d21      	adds	r1, r4, #4
 8008076:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008078:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800807c:	f000 f9e5 	bl	800844a <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8008080:	6862      	ldr	r2, [r4, #4]
 8008082:	4629      	mov	r1, r5
 8008084:	6820      	ldr	r0, [r4, #0]
 8008086:	f000 fa18 	bl	80084ba <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
 800808a:	4a06      	ldr	r2, [pc, #24]	; (80080a4 <HAL_SDRAM_Init+0x4c>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;

  return HAL_OK;
 800808c:	2000      	movs	r0, #0
  __FMC_ENABLE();
 800808e:	6813      	ldr	r3, [r2, #0]
 8008090:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008094:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
 8008096:	2301      	movs	r3, #1
 8008098:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 800809c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800809e:	2001      	movs	r0, #1
 80080a0:	e7fc      	b.n	800809c <HAL_SDRAM_Init+0x44>
 80080a2:	bf00      	nop
 80080a4:	52004000 	.word	0x52004000

080080a8 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80080a8:	b510      	push	{r4, lr}
 80080aa:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80080ac:	f7f9 fe2a 	bl	8001d04 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80080b0:	e9d4 0100 	ldrd	r0, r1, [r4]
 80080b4:	f000 fa37 	bl	8008526 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 80080b8:	2000      	movs	r0, #0
 80080ba:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 80080be:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 80080c2:	bd10      	pop	{r4, pc}

080080c4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80080c4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80080c6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 80080ca:	4605      	mov	r5, r0
 80080cc:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80080ce:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80080d0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80080d2:	d010      	beq.n	80080f6 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80080d4:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 80080d8:	2c01      	cmp	r4, #1
 80080da:	d110      	bne.n	80080fe <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80080dc:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80080de:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80080e0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80080e4:	f000 fa2e 	bl	8008544 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80080e8:	6833      	ldr	r3, [r6, #0]
 80080ea:	2b02      	cmp	r3, #2
 80080ec:	d104      	bne.n	80080f8 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80080ee:	2305      	movs	r3, #5
 80080f0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80080f4:	2000      	movs	r0, #0
}
 80080f6:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 80080f8:	f885 402c 	strb.w	r4, [r5, #44]	; 0x2c
 80080fc:	e7fa      	b.n	80080f4 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 80080fe:	2001      	movs	r0, #1
 8008100:	e7f9      	b.n	80080f6 <HAL_SDRAM_SendCommand+0x32>

08008102 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8008102:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008104:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 8008108:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800810a:	2b02      	cmp	r3, #2
 800810c:	b2d8      	uxtb	r0, r3
 800810e:	d00d      	beq.n	800812c <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8008110:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8008114:	2b01      	cmp	r3, #1
 8008116:	b2dd      	uxtb	r5, r3
 8008118:	d109      	bne.n	800812e <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800811a:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800811c:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800811e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008122:	f000 fa21 	bl	8008568 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008126:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 8008128:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
 800812c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800812e:	2001      	movs	r0, #1
 8008130:	e7fc      	b.n	800812c <HAL_SDRAM_ProgramRefreshRate+0x2a>

08008132 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8008132:	4770      	bx	lr

08008134 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8008134:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008138:	2b01      	cmp	r3, #1
 800813a:	d133      	bne.n	80081a4 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800813c:	2302      	movs	r3, #2
 800813e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008142:	6803      	ldr	r3, [r0, #0]
 8008144:	68da      	ldr	r2, [r3, #12]
 8008146:	f042 0201 	orr.w	r2, r2, #1
 800814a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800814c:	4a16      	ldr	r2, [pc, #88]	; (80081a8 <HAL_TIM_Base_Start_IT+0x74>)
 800814e:	4293      	cmp	r3, r2
 8008150:	d01a      	beq.n	8008188 <HAL_TIM_Base_Start_IT+0x54>
 8008152:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008156:	d017      	beq.n	8008188 <HAL_TIM_Base_Start_IT+0x54>
 8008158:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800815c:	4293      	cmp	r3, r2
 800815e:	d013      	beq.n	8008188 <HAL_TIM_Base_Start_IT+0x54>
 8008160:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008164:	4293      	cmp	r3, r2
 8008166:	d00f      	beq.n	8008188 <HAL_TIM_Base_Start_IT+0x54>
 8008168:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800816c:	4293      	cmp	r3, r2
 800816e:	d00b      	beq.n	8008188 <HAL_TIM_Base_Start_IT+0x54>
 8008170:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008174:	4293      	cmp	r3, r2
 8008176:	d007      	beq.n	8008188 <HAL_TIM_Base_Start_IT+0x54>
 8008178:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 800817c:	4293      	cmp	r3, r2
 800817e:	d003      	beq.n	8008188 <HAL_TIM_Base_Start_IT+0x54>
 8008180:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 8008184:	4293      	cmp	r3, r2
 8008186:	d107      	bne.n	8008198 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008188:	6899      	ldr	r1, [r3, #8]
 800818a:	4a08      	ldr	r2, [pc, #32]	; (80081ac <HAL_TIM_Base_Start_IT+0x78>)
 800818c:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800818e:	2a06      	cmp	r2, #6
 8008190:	d006      	beq.n	80081a0 <HAL_TIM_Base_Start_IT+0x6c>
 8008192:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8008196:	d003      	beq.n	80081a0 <HAL_TIM_Base_Start_IT+0x6c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8008198:	681a      	ldr	r2, [r3, #0]
 800819a:	f042 0201 	orr.w	r2, r2, #1
 800819e:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80081a0:	2000      	movs	r0, #0
}
 80081a2:	4770      	bx	lr
    return HAL_ERROR;
 80081a4:	2001      	movs	r0, #1
 80081a6:	4770      	bx	lr
 80081a8:	40010000 	.word	0x40010000
 80081ac:	00010007 	.word	0x00010007

080081b0 <HAL_TIM_OC_DelayElapsedCallback>:
 80081b0:	4770      	bx	lr

080081b2 <HAL_TIM_IC_CaptureCallback>:
 80081b2:	4770      	bx	lr

080081b4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80081b4:	4770      	bx	lr

080081b6 <HAL_TIM_TriggerCallback>:
 80081b6:	4770      	bx	lr

080081b8 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80081b8:	6803      	ldr	r3, [r0, #0]
 80081ba:	691a      	ldr	r2, [r3, #16]
 80081bc:	0791      	lsls	r1, r2, #30
{
 80081be:	b510      	push	{r4, lr}
 80081c0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80081c2:	d50f      	bpl.n	80081e4 <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80081c4:	68da      	ldr	r2, [r3, #12]
 80081c6:	0792      	lsls	r2, r2, #30
 80081c8:	d50c      	bpl.n	80081e4 <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80081ca:	f06f 0202 	mvn.w	r2, #2
 80081ce:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80081d0:	2201      	movs	r2, #1
 80081d2:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80081d4:	699b      	ldr	r3, [r3, #24]
 80081d6:	0799      	lsls	r1, r3, #30
 80081d8:	f000 8085 	beq.w	80082e6 <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80081dc:	f7ff ffe9 	bl	80081b2 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081e0:	2300      	movs	r3, #0
 80081e2:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80081e4:	6823      	ldr	r3, [r4, #0]
 80081e6:	691a      	ldr	r2, [r3, #16]
 80081e8:	0752      	lsls	r2, r2, #29
 80081ea:	d510      	bpl.n	800820e <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80081ec:	68da      	ldr	r2, [r3, #12]
 80081ee:	0750      	lsls	r0, r2, #29
 80081f0:	d50d      	bpl.n	800820e <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80081f2:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80081f6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80081f8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80081fa:	2202      	movs	r2, #2
 80081fc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80081fe:	699b      	ldr	r3, [r3, #24]
 8008200:	f413 7f40 	tst.w	r3, #768	; 0x300
 8008204:	d075      	beq.n	80082f2 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008206:	f7ff ffd4 	bl	80081b2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800820a:	2300      	movs	r3, #0
 800820c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800820e:	6823      	ldr	r3, [r4, #0]
 8008210:	691a      	ldr	r2, [r3, #16]
 8008212:	0711      	lsls	r1, r2, #28
 8008214:	d50f      	bpl.n	8008236 <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8008216:	68da      	ldr	r2, [r3, #12]
 8008218:	0712      	lsls	r2, r2, #28
 800821a:	d50c      	bpl.n	8008236 <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800821c:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008220:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008222:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008224:	2204      	movs	r2, #4
 8008226:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008228:	69db      	ldr	r3, [r3, #28]
 800822a:	079b      	lsls	r3, r3, #30
 800822c:	d067      	beq.n	80082fe <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800822e:	f7ff ffc0 	bl	80081b2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008232:	2300      	movs	r3, #0
 8008234:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008236:	6823      	ldr	r3, [r4, #0]
 8008238:	691a      	ldr	r2, [r3, #16]
 800823a:	06d0      	lsls	r0, r2, #27
 800823c:	d510      	bpl.n	8008260 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800823e:	68da      	ldr	r2, [r3, #12]
 8008240:	06d1      	lsls	r1, r2, #27
 8008242:	d50d      	bpl.n	8008260 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008244:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008248:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800824a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800824c:	2208      	movs	r2, #8
 800824e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008250:	69db      	ldr	r3, [r3, #28]
 8008252:	f413 7f40 	tst.w	r3, #768	; 0x300
 8008256:	d058      	beq.n	800830a <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8008258:	f7ff ffab 	bl	80081b2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800825c:	2300      	movs	r3, #0
 800825e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008260:	6823      	ldr	r3, [r4, #0]
 8008262:	691a      	ldr	r2, [r3, #16]
 8008264:	07d2      	lsls	r2, r2, #31
 8008266:	d508      	bpl.n	800827a <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008268:	68da      	ldr	r2, [r3, #12]
 800826a:	07d0      	lsls	r0, r2, #31
 800826c:	d505      	bpl.n	800827a <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800826e:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008272:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008274:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8008276:	f7f9 fab9 	bl	80017ec <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800827a:	6823      	ldr	r3, [r4, #0]
 800827c:	691a      	ldr	r2, [r3, #16]
 800827e:	0611      	lsls	r1, r2, #24
 8008280:	d508      	bpl.n	8008294 <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008282:	68da      	ldr	r2, [r3, #12]
 8008284:	0612      	lsls	r2, r2, #24
 8008286:	d505      	bpl.n	8008294 <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008288:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800828c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800828e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8008290:	f000 f8d9 	bl	8008446 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8008294:	6823      	ldr	r3, [r4, #0]
 8008296:	691a      	ldr	r2, [r3, #16]
 8008298:	05d0      	lsls	r0, r2, #23
 800829a:	d508      	bpl.n	80082ae <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800829c:	68da      	ldr	r2, [r3, #12]
 800829e:	0611      	lsls	r1, r2, #24
 80082a0:	d505      	bpl.n	80082ae <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 80082a2:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 80082a6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 80082a8:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 80082aa:	f000 f8cd 	bl	8008448 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80082ae:	6823      	ldr	r3, [r4, #0]
 80082b0:	691a      	ldr	r2, [r3, #16]
 80082b2:	0652      	lsls	r2, r2, #25
 80082b4:	d508      	bpl.n	80082c8 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80082b6:	68da      	ldr	r2, [r3, #12]
 80082b8:	0650      	lsls	r0, r2, #25
 80082ba:	d505      	bpl.n	80082c8 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80082bc:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80082c0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80082c2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80082c4:	f7ff ff77 	bl	80081b6 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80082c8:	6823      	ldr	r3, [r4, #0]
 80082ca:	691a      	ldr	r2, [r3, #16]
 80082cc:	0691      	lsls	r1, r2, #26
 80082ce:	d522      	bpl.n	8008316 <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80082d0:	68da      	ldr	r2, [r3, #12]
 80082d2:	0692      	lsls	r2, r2, #26
 80082d4:	d51f      	bpl.n	8008316 <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80082d6:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80082da:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80082dc:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80082de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80082e2:	f000 b8af 	b.w	8008444 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80082e6:	f7ff ff63 	bl	80081b0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082ea:	4620      	mov	r0, r4
 80082ec:	f7ff ff62 	bl	80081b4 <HAL_TIM_PWM_PulseFinishedCallback>
 80082f0:	e776      	b.n	80081e0 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082f2:	f7ff ff5d 	bl	80081b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082f6:	4620      	mov	r0, r4
 80082f8:	f7ff ff5c 	bl	80081b4 <HAL_TIM_PWM_PulseFinishedCallback>
 80082fc:	e785      	b.n	800820a <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082fe:	f7ff ff57 	bl	80081b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008302:	4620      	mov	r0, r4
 8008304:	f7ff ff56 	bl	80081b4 <HAL_TIM_PWM_PulseFinishedCallback>
 8008308:	e793      	b.n	8008232 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800830a:	f7ff ff51 	bl	80081b0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800830e:	4620      	mov	r0, r4
 8008310:	f7ff ff50 	bl	80081b4 <HAL_TIM_PWM_PulseFinishedCallback>
 8008314:	e7a2      	b.n	800825c <HAL_TIM_IRQHandler+0xa4>
}
 8008316:	bd10      	pop	{r4, pc}

08008318 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008318:	4a30      	ldr	r2, [pc, #192]	; (80083dc <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800831a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800831c:	4290      	cmp	r0, r2
 800831e:	d012      	beq.n	8008346 <TIM_Base_SetConfig+0x2e>
 8008320:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008324:	d00f      	beq.n	8008346 <TIM_Base_SetConfig+0x2e>
 8008326:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800832a:	4290      	cmp	r0, r2
 800832c:	d00b      	beq.n	8008346 <TIM_Base_SetConfig+0x2e>
 800832e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008332:	4290      	cmp	r0, r2
 8008334:	d007      	beq.n	8008346 <TIM_Base_SetConfig+0x2e>
 8008336:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800833a:	4290      	cmp	r0, r2
 800833c:	d003      	beq.n	8008346 <TIM_Base_SetConfig+0x2e>
 800833e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008342:	4290      	cmp	r0, r2
 8008344:	d119      	bne.n	800837a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8008346:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008348:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800834c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800834e:	4a23      	ldr	r2, [pc, #140]	; (80083dc <TIM_Base_SetConfig+0xc4>)
 8008350:	4290      	cmp	r0, r2
 8008352:	d01d      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 8008354:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008358:	d01a      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 800835a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800835e:	4290      	cmp	r0, r2
 8008360:	d016      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 8008362:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008366:	4290      	cmp	r0, r2
 8008368:	d012      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 800836a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800836e:	4290      	cmp	r0, r2
 8008370:	d00e      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 8008372:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008376:	4290      	cmp	r0, r2
 8008378:	d00a      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 800837a:	4a19      	ldr	r2, [pc, #100]	; (80083e0 <TIM_Base_SetConfig+0xc8>)
 800837c:	4290      	cmp	r0, r2
 800837e:	d007      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 8008380:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008384:	4290      	cmp	r0, r2
 8008386:	d003      	beq.n	8008390 <TIM_Base_SetConfig+0x78>
 8008388:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800838c:	4290      	cmp	r0, r2
 800838e:	d103      	bne.n	8008398 <TIM_Base_SetConfig+0x80>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8008390:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008394:	68ca      	ldr	r2, [r1, #12]
 8008396:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008398:	694a      	ldr	r2, [r1, #20]
 800839a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800839e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80083a0:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80083a2:	688b      	ldr	r3, [r1, #8]
 80083a4:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80083a6:	680b      	ldr	r3, [r1, #0]
 80083a8:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80083aa:	4b0c      	ldr	r3, [pc, #48]	; (80083dc <TIM_Base_SetConfig+0xc4>)
 80083ac:	4298      	cmp	r0, r3
 80083ae:	d00f      	beq.n	80083d0 <TIM_Base_SetConfig+0xb8>
 80083b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80083b4:	4298      	cmp	r0, r3
 80083b6:	d00b      	beq.n	80083d0 <TIM_Base_SetConfig+0xb8>
 80083b8:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
 80083bc:	4298      	cmp	r0, r3
 80083be:	d007      	beq.n	80083d0 <TIM_Base_SetConfig+0xb8>
 80083c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80083c4:	4298      	cmp	r0, r3
 80083c6:	d003      	beq.n	80083d0 <TIM_Base_SetConfig+0xb8>
 80083c8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80083cc:	4298      	cmp	r0, r3
 80083ce:	d101      	bne.n	80083d4 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80083d0:	690b      	ldr	r3, [r1, #16]
 80083d2:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80083d4:	2301      	movs	r3, #1
 80083d6:	6143      	str	r3, [r0, #20]
}
 80083d8:	4770      	bx	lr
 80083da:	bf00      	nop
 80083dc:	40010000 	.word	0x40010000
 80083e0:	40014000 	.word	0x40014000

080083e4 <HAL_TIM_Base_Init>:
{
 80083e4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80083e6:	4604      	mov	r4, r0
 80083e8:	b350      	cbz	r0, 8008440 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 80083ea:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80083ee:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80083f2:	b91b      	cbnz	r3, 80083fc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80083f4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80083f8:	f7ff fe9b 	bl	8008132 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80083fc:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80083fe:	6820      	ldr	r0, [r4, #0]
 8008400:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 8008402:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008406:	f7ff ff87 	bl	8008318 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800840a:	2301      	movs	r3, #1
  return HAL_OK;
 800840c:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800840e:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008412:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8008416:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800841a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800841e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8008422:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8008426:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800842a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800842e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008432:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8008436:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 800843a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800843e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008440:	2001      	movs	r0, #1
 8008442:	e7fc      	b.n	800843e <HAL_TIM_Base_Init+0x5a>

08008444 <HAL_TIMEx_CommutCallback>:
 8008444:	4770      	bx	lr

08008446 <HAL_TIMEx_BreakCallback>:
 8008446:	4770      	bx	lr

08008448 <HAL_TIMEx_Break2Callback>:
 8008448:	4770      	bx	lr

0800844a <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800844a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800844e:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8008452:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8008456:	f8d1 e024 	ldr.w	lr, [r1, #36]	; 0x24
 800845a:	ea43 0308 	orr.w	r3, r3, r8
 800845e:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8008462:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8008466:	6809      	ldr	r1, [r1, #0]
 8008468:	b991      	cbnz	r1, 8008490 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800846a:	ea43 030e 	orr.w	r3, r3, lr
 800846e:	6801      	ldr	r1, [r0, #0]
 8008470:	4313      	orrs	r3, r2
 8008472:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8008476:	ea43 030c 	orr.w	r3, r3, ip
 800847a:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800847e:	433b      	orrs	r3, r7
 8008480:	4333      	orrs	r3, r6
 8008482:	432b      	orrs	r3, r5
 8008484:	4323      	orrs	r3, r4
 8008486:	430b      	orrs	r3, r1
 8008488:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800848a:	2000      	movs	r0, #0
 800848c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008490:	6801      	ldr	r1, [r0, #0]
 8008492:	ea43 030e 	orr.w	r3, r3, lr
 8008496:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 800849a:	430b      	orrs	r3, r1
 800849c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800849e:	ea42 030c 	orr.w	r3, r2, ip
 80084a2:	6841      	ldr	r1, [r0, #4]
 80084a4:	433b      	orrs	r3, r7
 80084a6:	f421 42ff 	bic.w	r2, r1, #32640	; 0x7f80
 80084aa:	4333      	orrs	r3, r6
 80084ac:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 80084b0:	432b      	orrs	r3, r5
 80084b2:	4323      	orrs	r3, r4
 80084b4:	4313      	orrs	r3, r2
 80084b6:	6043      	str	r3, [r0, #4]
 80084b8:	e7e7      	b.n	800848a <FMC_SDRAM_Init+0x40>

080084ba <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80084ba:	68cb      	ldr	r3, [r1, #12]
 80084bc:	f103 3cff 	add.w	ip, r3, #4294967295
 80084c0:	694b      	ldr	r3, [r1, #20]
{
 80084c2:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80084c4:	3b01      	subs	r3, #1
 80084c6:	680f      	ldr	r7, [r1, #0]
 80084c8:	684c      	ldr	r4, [r1, #4]
 80084ca:	688e      	ldr	r6, [r1, #8]
 80084cc:	051b      	lsls	r3, r3, #20
 80084ce:	690d      	ldr	r5, [r1, #16]
 80084d0:	3c01      	subs	r4, #1
 80084d2:	6989      	ldr	r1, [r1, #24]
 80084d4:	3e01      	subs	r6, #1
 80084d6:	3d01      	subs	r5, #1
 80084d8:	3f01      	subs	r7, #1
 80084da:	3901      	subs	r1, #1
 80084dc:	0124      	lsls	r4, r4, #4
 80084de:	0236      	lsls	r6, r6, #8
 80084e0:	042d      	lsls	r5, r5, #16
 80084e2:	0609      	lsls	r1, r1, #24
 80084e4:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 80084e8:	b95a      	cbnz	r2, 8008502 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80084ea:	433b      	orrs	r3, r7
 80084ec:	6882      	ldr	r2, [r0, #8]
 80084ee:	4323      	orrs	r3, r4
 80084f0:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80084f4:	4333      	orrs	r3, r6
 80084f6:	432b      	orrs	r3, r5
 80084f8:	430b      	orrs	r3, r1
 80084fa:	4313      	orrs	r3, r2
 80084fc:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
 80084fe:	2000      	movs	r0, #0
 8008500:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008502:	6882      	ldr	r2, [r0, #8]
 8008504:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8008508:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800850c:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800850e:	ea44 0306 	orr.w	r3, r4, r6
 8008512:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008514:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8008516:	68c2      	ldr	r2, [r0, #12]
 8008518:	432b      	orrs	r3, r5
 800851a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800851e:	430b      	orrs	r3, r1
 8008520:	4313      	orrs	r3, r2
 8008522:	60c3      	str	r3, [r0, #12]
 8008524:	e7eb      	b.n	80084fe <FMC_SDRAM_Timing_Init+0x44>

08008526 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8008526:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800852a:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800852e:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 8008532:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8008536:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8008538:	2300      	movs	r3, #0
 800853a:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800853c:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800853e:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8008540:	4618      	mov	r0, r3
 8008542:	4770      	bx	lr

08008544 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8008544:	6902      	ldr	r2, [r0, #16]
{
 8008546:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8008548:	e9d1 3400 	ldrd	r3, r4, [r1]
 800854c:	0d92      	lsrs	r2, r2, #22
 800854e:	4323      	orrs	r3, r4
 8008550:	68cc      	ldr	r4, [r1, #12]
 8008552:	0592      	lsls	r2, r2, #22
 8008554:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 8008558:	4313      	orrs	r3, r2
 800855a:	688a      	ldr	r2, [r1, #8]
 800855c:	3a01      	subs	r2, #1
 800855e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008562:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 8008564:	2000      	movs	r0, #0
 8008566:	bd10      	pop	{r4, pc}

08008568 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8008568:	6943      	ldr	r3, [r0, #20]
 800856a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800856e:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8008572:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008576:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8008578:	2000      	movs	r0, #0
 800857a:	4770      	bx	lr

0800857c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800857c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800857e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008582:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008584:	f001 fe34 	bl	800a1f0 <xTaskGetSchedulerState>
 8008588:	2801      	cmp	r0, #1
 800858a:	d003      	beq.n	8008594 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800858c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008590:	f000 bbd8 	b.w	8008d44 <xPortSysTickHandler>
}
 8008594:	bd08      	pop	{r3, pc}
	...

08008598 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008598:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800859c:	b92b      	cbnz	r3, 80085aa <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800859e:	4b06      	ldr	r3, [pc, #24]	; (80085b8 <osKernelInitialize+0x20>)
 80085a0:	6818      	ldr	r0, [r3, #0]
 80085a2:	b928      	cbnz	r0, 80085b0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80085a4:	2201      	movs	r2, #1
 80085a6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80085a8:	4770      	bx	lr
    stat = osErrorISR;
 80085aa:	f06f 0005 	mvn.w	r0, #5
 80085ae:	4770      	bx	lr
    } else {
      stat = osError;
 80085b0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80085b4:	4770      	bx	lr
 80085b6:	bf00      	nop
 80085b8:	24005924 	.word	0x24005924

080085bc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80085bc:	b510      	push	{r4, lr}
 80085be:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80085c2:	b95c      	cbnz	r4, 80085dc <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80085c4:	4b08      	ldr	r3, [pc, #32]	; (80085e8 <osKernelStart+0x2c>)
 80085c6:	681a      	ldr	r2, [r3, #0]
 80085c8:	2a01      	cmp	r2, #1
 80085ca:	d10a      	bne.n	80085e2 <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80085cc:	4a07      	ldr	r2, [pc, #28]	; (80085ec <osKernelStart+0x30>)
 80085ce:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80085d0:	2202      	movs	r2, #2
 80085d2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80085d4:	f001 fcb0 	bl	8009f38 <vTaskStartScheduler>
      stat = osOK;
 80085d8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80085da:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80085dc:	f06f 0005 	mvn.w	r0, #5
 80085e0:	e7fb      	b.n	80085da <osKernelStart+0x1e>
      stat = osError;
 80085e2:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80085e6:	e7f8      	b.n	80085da <osKernelStart+0x1e>
 80085e8:	24005924 	.word	0x24005924
 80085ec:	e000ed00 	.word	0xe000ed00

080085f0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80085f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80085f2:	460b      	mov	r3, r1
 80085f4:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80085f6:	2100      	movs	r1, #0
 80085f8:	9105      	str	r1, [sp, #20]
 80085fa:	f3ef 8405 	mrs	r4, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80085fe:	b9cc      	cbnz	r4, 8008634 <osThreadNew+0x44>
 8008600:	b1c0      	cbz	r0, 8008634 <osThreadNew+0x44>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008602:	b36a      	cbz	r2, 8008660 <osThreadNew+0x70>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008604:	6995      	ldr	r5, [r2, #24]
 8008606:	428d      	cmp	r5, r1
 8008608:	bf08      	it	eq
 800860a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800860c:	1e69      	subs	r1, r5, #1
 800860e:	46ac      	mov	ip, r5
 8008610:	2937      	cmp	r1, #55	; 0x37
 8008612:	d82a      	bhi.n	800866a <osThreadNew+0x7a>
 8008614:	6851      	ldr	r1, [r2, #4]
 8008616:	07c9      	lsls	r1, r1, #31
 8008618:	d427      	bmi.n	800866a <osThreadNew+0x7a>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800861a:	6956      	ldr	r6, [r2, #20]
 800861c:	b16e      	cbz	r6, 800863a <osThreadNew+0x4a>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800861e:	08b4      	lsrs	r4, r6, #2
      if (attr->name != NULL) {
 8008620:	6811      	ldr	r1, [r2, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008622:	e9d2 7e02 	ldrd	r7, lr, [r2, #8]
 8008626:	b157      	cbz	r7, 800863e <osThreadNew+0x4e>
 8008628:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800862c:	d902      	bls.n	8008634 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800862e:	6912      	ldr	r2, [r2, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008630:	b102      	cbz	r2, 8008634 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008632:	b9e6      	cbnz	r6, 800866e <osThreadNew+0x7e>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008634:	9805      	ldr	r0, [sp, #20]
}
 8008636:	b007      	add	sp, #28
 8008638:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800863a:	2480      	movs	r4, #128	; 0x80
 800863c:	e7f0      	b.n	8008620 <osThreadNew+0x30>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800863e:	f1be 0f00 	cmp.w	lr, #0
 8008642:	d1f7      	bne.n	8008634 <osThreadNew+0x44>
      if (mem == 0) {
 8008644:	6912      	ldr	r2, [r2, #16]
 8008646:	2a00      	cmp	r2, #0
 8008648:	d1f4      	bne.n	8008634 <osThreadNew+0x44>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800864a:	aa05      	add	r2, sp, #20
 800864c:	e9cd c200 	strd	ip, r2, [sp]
 8008650:	b2a2      	uxth	r2, r4
 8008652:	f001 faec 	bl	8009c2e <xTaskCreate>
 8008656:	2801      	cmp	r0, #1
            hTask = NULL;
 8008658:	bf1c      	itt	ne
 800865a:	2300      	movne	r3, #0
 800865c:	9305      	strne	r3, [sp, #20]
 800865e:	e7e9      	b.n	8008634 <osThreadNew+0x44>
    name = NULL;
 8008660:	4611      	mov	r1, r2
    prio  = (UBaseType_t)osPriorityNormal;
 8008662:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008666:	2480      	movs	r4, #128	; 0x80
 8008668:	e7ef      	b.n	800864a <osThreadNew+0x5a>
        return (NULL);
 800866a:	4620      	mov	r0, r4
 800866c:	e7e3      	b.n	8008636 <osThreadNew+0x46>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800866e:	e9cd 2701 	strd	r2, r7, [sp, #4]
 8008672:	9500      	str	r5, [sp, #0]
 8008674:	4622      	mov	r2, r4
 8008676:	f001 faa2 	bl	8009bbe <xTaskCreateStatic>
 800867a:	9005      	str	r0, [sp, #20]
 800867c:	e7da      	b.n	8008634 <osThreadNew+0x44>

0800867e <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800867e:	b510      	push	{r4, lr}
 8008680:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008684:	b924      	cbnz	r4, 8008690 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008686:	b110      	cbz	r0, 800868e <osDelay+0x10>
      vTaskDelay(ticks);
 8008688:	f001 fc16 	bl	8009eb8 <vTaskDelay>
    stat = osOK;
 800868c:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800868e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008690:	f06f 0005 	mvn.w	r0, #5
 8008694:	e7fb      	b.n	800868e <osDelay+0x10>

08008696 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008696:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008698:	4604      	mov	r4, r0
 800869a:	460e      	mov	r6, r1
 800869c:	4615      	mov	r5, r2
 800869e:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80086a2:	b11a      	cbz	r2, 80086ac <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80086a4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80086a6:	4620      	mov	r0, r4
 80086a8:	b003      	add	sp, #12
 80086aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80086ac:	2800      	cmp	r0, #0
 80086ae:	d0f9      	beq.n	80086a4 <osSemaphoreNew+0xe>
 80086b0:	4288      	cmp	r0, r1
 80086b2:	d3f7      	bcc.n	80086a4 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 80086b4:	b1e5      	cbz	r5, 80086f0 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80086b6:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80086ba:	b1bb      	cbz	r3, 80086ec <osSemaphoreNew+0x56>
 80086bc:	2f4f      	cmp	r7, #79	; 0x4f
 80086be:	d9f1      	bls.n	80086a4 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80086c0:	2801      	cmp	r0, #1
 80086c2:	d12a      	bne.n	800871a <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80086c4:	2103      	movs	r1, #3
 80086c6:	9100      	str	r1, [sp, #0]
 80086c8:	4611      	mov	r1, r2
 80086ca:	f000 fce3 	bl	8009094 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80086ce:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80086d0:	2800      	cmp	r0, #0
 80086d2:	d0e7      	beq.n	80086a4 <osSemaphoreNew+0xe>
 80086d4:	b1de      	cbz	r6, 800870e <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80086d6:	2300      	movs	r3, #0
 80086d8:	461a      	mov	r2, r3
 80086da:	4619      	mov	r1, r3
 80086dc:	f000 fd8f 	bl	80091fe <xQueueGenericSend>
 80086e0:	2801      	cmp	r0, #1
 80086e2:	d014      	beq.n	800870e <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 80086e4:	4620      	mov	r0, r4
 80086e6:	f001 f8cb 	bl	8009880 <vQueueDelete>
 80086ea:	e7db      	b.n	80086a4 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80086ec:	2f00      	cmp	r7, #0
 80086ee:	d1d9      	bne.n	80086a4 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80086f0:	2c01      	cmp	r4, #1
 80086f2:	d105      	bne.n	8008700 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80086f4:	2203      	movs	r2, #3
 80086f6:	2100      	movs	r1, #0
 80086f8:	4620      	mov	r0, r4
 80086fa:	f000 fd19 	bl	8009130 <xQueueGenericCreate>
 80086fe:	e7e6      	b.n	80086ce <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008700:	4620      	mov	r0, r4
 8008702:	4631      	mov	r1, r6
 8008704:	f000 fd5d 	bl	80091c2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008708:	4604      	mov	r4, r0
 800870a:	2800      	cmp	r0, #0
 800870c:	d0ca      	beq.n	80086a4 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800870e:	b955      	cbnz	r5, 8008726 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8008710:	4629      	mov	r1, r5
 8008712:	4620      	mov	r0, r4
 8008714:	f001 f88e 	bl	8009834 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008718:	e7c5      	b.n	80086a6 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800871a:	461a      	mov	r2, r3
 800871c:	f000 fd2f 	bl	800917e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008720:	4604      	mov	r4, r0
 8008722:	2800      	cmp	r0, #0
 8008724:	d0be      	beq.n	80086a4 <osSemaphoreNew+0xe>
          name = attr->name;
 8008726:	682d      	ldr	r5, [r5, #0]
 8008728:	e7f2      	b.n	8008710 <osSemaphoreNew+0x7a>

0800872a <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800872a:	b513      	push	{r0, r1, r4, lr}
 800872c:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800872e:	b308      	cbz	r0, 8008774 <osSemaphoreAcquire+0x4a>
 8008730:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008734:	b1b3      	cbz	r3, 8008764 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8008736:	b9e9      	cbnz	r1, 8008774 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008738:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800873a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800873c:	f001 f82a 	bl	8009794 <xQueueReceiveFromISR>
 8008740:	2801      	cmp	r0, #1
 8008742:	d114      	bne.n	800876e <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008744:	9b01      	ldr	r3, [sp, #4]
 8008746:	b913      	cbnz	r3, 800874e <osSemaphoreAcquire+0x24>
  stat = osOK;
 8008748:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800874a:	b002      	add	sp, #8
 800874c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800874e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008752:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008756:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800875a:	f3bf 8f4f 	dsb	sy
 800875e:	f3bf 8f6f 	isb	sy
 8008762:	e7f1      	b.n	8008748 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008764:	f000 ff53 	bl	800960e <xQueueSemaphoreTake>
 8008768:	2801      	cmp	r0, #1
 800876a:	d0ed      	beq.n	8008748 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800876c:	b92c      	cbnz	r4, 800877a <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800876e:	f06f 0002 	mvn.w	r0, #2
 8008772:	e7ea      	b.n	800874a <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8008774:	f06f 0003 	mvn.w	r0, #3
 8008778:	e7e7      	b.n	800874a <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800877a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800877e:	e7e4      	b.n	800874a <osSemaphoreAcquire+0x20>

08008780 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008780:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008782:	b310      	cbz	r0, 80087ca <osSemaphoreRelease+0x4a>
 8008784:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008788:	b1b3      	cbz	r3, 80087b8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800878a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800878c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800878e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008790:	f000 fe4a 	bl	8009428 <xQueueGiveFromISR>
 8008794:	2801      	cmp	r0, #1
 8008796:	d115      	bne.n	80087c4 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8008798:	9b01      	ldr	r3, [sp, #4]
 800879a:	b913      	cbnz	r3, 80087a2 <osSemaphoreRelease+0x22>
  stat = osOK;
 800879c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800879e:	b002      	add	sp, #8
 80087a0:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80087a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80087a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80087aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80087ae:	f3bf 8f4f 	dsb	sy
 80087b2:	f3bf 8f6f 	isb	sy
 80087b6:	e7f1      	b.n	800879c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80087b8:	461a      	mov	r2, r3
 80087ba:	4619      	mov	r1, r3
 80087bc:	f000 fd1f 	bl	80091fe <xQueueGenericSend>
 80087c0:	2801      	cmp	r0, #1
 80087c2:	d0eb      	beq.n	800879c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 80087c4:	f06f 0002 	mvn.w	r0, #2
 80087c8:	e7e9      	b.n	800879e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 80087ca:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80087ce:	e7e6      	b.n	800879e <osSemaphoreRelease+0x1e>

080087d0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80087d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80087d2:	4605      	mov	r5, r0
 80087d4:	460e      	mov	r6, r1
 80087d6:	4614      	mov	r4, r2
 80087d8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80087dc:	b11f      	cbz	r7, 80087e6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 80087de:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80087e0:	4628      	mov	r0, r5
 80087e2:	b003      	add	sp, #12
 80087e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80087e6:	2800      	cmp	r0, #0
 80087e8:	d0f9      	beq.n	80087de <osMessageQueueNew+0xe>
 80087ea:	2900      	cmp	r1, #0
 80087ec:	d0f7      	beq.n	80087de <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80087ee:	b1da      	cbz	r2, 8008828 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087f0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80087f4:	b183      	cbz	r3, 8008818 <osMessageQueueNew+0x48>
 80087f6:	2a4f      	cmp	r2, #79	; 0x4f
 80087f8:	d9f1      	bls.n	80087de <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087fa:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087fc:	2a00      	cmp	r2, #0
 80087fe:	d0ee      	beq.n	80087de <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008800:	434d      	muls	r5, r1
 8008802:	6966      	ldr	r6, [r4, #20]
 8008804:	42ae      	cmp	r6, r5
 8008806:	d3ea      	bcc.n	80087de <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008808:	9700      	str	r7, [sp, #0]
 800880a:	f000 fc43 	bl	8009094 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800880e:	4605      	mov	r5, r0
 8008810:	2800      	cmp	r0, #0
 8008812:	d0e4      	beq.n	80087de <osMessageQueueNew+0xe>
        name = attr->name;
 8008814:	6824      	ldr	r4, [r4, #0]
 8008816:	e011      	b.n	800883c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008818:	2a00      	cmp	r2, #0
 800881a:	d1e0      	bne.n	80087de <osMessageQueueNew+0xe>
 800881c:	6923      	ldr	r3, [r4, #16]
 800881e:	2b00      	cmp	r3, #0
 8008820:	d1dd      	bne.n	80087de <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008822:	6963      	ldr	r3, [r4, #20]
 8008824:	2b00      	cmp	r3, #0
 8008826:	d1da      	bne.n	80087de <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008828:	4628      	mov	r0, r5
 800882a:	2200      	movs	r2, #0
 800882c:	4631      	mov	r1, r6
 800882e:	f000 fc7f 	bl	8009130 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008832:	4605      	mov	r5, r0
 8008834:	2800      	cmp	r0, #0
 8008836:	d0d2      	beq.n	80087de <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8008838:	2c00      	cmp	r4, #0
 800883a:	d1eb      	bne.n	8008814 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800883c:	4621      	mov	r1, r4
 800883e:	4628      	mov	r0, r5
 8008840:	f000 fff8 	bl	8009834 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008844:	e7cc      	b.n	80087e0 <osMessageQueueNew+0x10>

08008846 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008846:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008848:	461c      	mov	r4, r3
 800884a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800884e:	b1c6      	cbz	r6, 8008882 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008850:	b318      	cbz	r0, 800889a <osMessageQueuePut+0x54>
 8008852:	b311      	cbz	r1, 800889a <osMessageQueuePut+0x54>
 8008854:	bb0b      	cbnz	r3, 800889a <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008856:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008858:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800885a:	f000 fd83 	bl	8009364 <xQueueGenericSendFromISR>
 800885e:	2801      	cmp	r0, #1
 8008860:	d118      	bne.n	8008894 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008862:	9b01      	ldr	r3, [sp, #4]
 8008864:	b913      	cbnz	r3, 800886c <osMessageQueuePut+0x26>
  stat = osOK;
 8008866:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008868:	b002      	add	sp, #8
 800886a:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800886c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008870:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008874:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008878:	f3bf 8f4f 	dsb	sy
 800887c:	f3bf 8f6f 	isb	sy
 8008880:	e7f1      	b.n	8008866 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008882:	b150      	cbz	r0, 800889a <osMessageQueuePut+0x54>
 8008884:	b149      	cbz	r1, 800889a <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008886:	4633      	mov	r3, r6
 8008888:	4622      	mov	r2, r4
 800888a:	f000 fcb8 	bl	80091fe <xQueueGenericSend>
 800888e:	2801      	cmp	r0, #1
 8008890:	d0e9      	beq.n	8008866 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8008892:	b92c      	cbnz	r4, 80088a0 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8008894:	f06f 0002 	mvn.w	r0, #2
 8008898:	e7e6      	b.n	8008868 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800889a:	f06f 0003 	mvn.w	r0, #3
 800889e:	e7e3      	b.n	8008868 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 80088a0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80088a4:	e7e0      	b.n	8008868 <osMessageQueuePut+0x22>

080088a6 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80088a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80088a8:	461c      	mov	r4, r3
 80088aa:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80088ae:	b1c3      	cbz	r3, 80088e2 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088b0:	b310      	cbz	r0, 80088f8 <osMessageQueueGet+0x52>
 80088b2:	b309      	cbz	r1, 80088f8 <osMessageQueueGet+0x52>
 80088b4:	bb04      	cbnz	r4, 80088f8 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088b6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80088b8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088ba:	f000 ff6b 	bl	8009794 <xQueueReceiveFromISR>
 80088be:	2801      	cmp	r0, #1
 80088c0:	d117      	bne.n	80088f2 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80088c2:	9b01      	ldr	r3, [sp, #4]
 80088c4:	b913      	cbnz	r3, 80088cc <osMessageQueueGet+0x26>
  stat = osOK;
 80088c6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80088c8:	b003      	add	sp, #12
 80088ca:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 80088cc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088d8:	f3bf 8f4f 	dsb	sy
 80088dc:	f3bf 8f6f 	isb	sy
 80088e0:	e7f1      	b.n	80088c6 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80088e2:	b148      	cbz	r0, 80088f8 <osMessageQueueGet+0x52>
 80088e4:	b141      	cbz	r1, 80088f8 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80088e6:	4622      	mov	r2, r4
 80088e8:	f000 fdf2 	bl	80094d0 <xQueueReceive>
 80088ec:	2801      	cmp	r0, #1
 80088ee:	d0ea      	beq.n	80088c6 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 80088f0:	b92c      	cbnz	r4, 80088fe <osMessageQueueGet+0x58>
          stat = osErrorResource;
 80088f2:	f06f 0002 	mvn.w	r0, #2
 80088f6:	e7e7      	b.n	80088c8 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 80088f8:	f06f 0003 	mvn.w	r0, #3
 80088fc:	e7e4      	b.n	80088c8 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 80088fe:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008902:	e7e1      	b.n	80088c8 <osMessageQueueGet+0x22>

08008904 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008904:	4b03      	ldr	r3, [pc, #12]	; (8008914 <vApplicationGetIdleTaskMemory+0x10>)
 8008906:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008908:	4b03      	ldr	r3, [pc, #12]	; (8008918 <vApplicationGetIdleTaskMemory+0x14>)
 800890a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800890c:	2380      	movs	r3, #128	; 0x80
 800890e:	6013      	str	r3, [r2, #0]
}
 8008910:	4770      	bx	lr
 8008912:	bf00      	nop
 8008914:	240058c4 	.word	0x240058c4
 8008918:	240056c4 	.word	0x240056c4

0800891c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800891c:	4b03      	ldr	r3, [pc, #12]	; (800892c <vApplicationGetTimerTaskMemory+0x10>)
 800891e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008920:	4b03      	ldr	r3, [pc, #12]	; (8008930 <vApplicationGetTimerTaskMemory+0x14>)
 8008922:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008924:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008928:	6013      	str	r3, [r2, #0]
}
 800892a:	4770      	bx	lr
 800892c:	24005d28 	.word	0x24005d28
 8008930:	24005928 	.word	0x24005928

08008934 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008934:	4b10      	ldr	r3, [pc, #64]	; (8008978 <prvInsertBlockIntoFreeList+0x44>)
{
 8008936:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008938:	461a      	mov	r2, r3
 800893a:	681b      	ldr	r3, [r3, #0]
 800893c:	4283      	cmp	r3, r0
 800893e:	d3fb      	bcc.n	8008938 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008940:	6854      	ldr	r4, [r2, #4]
 8008942:	1911      	adds	r1, r2, r4
 8008944:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008946:	bf01      	itttt	eq
 8008948:	6841      	ldreq	r1, [r0, #4]
 800894a:	4610      	moveq	r0, r2
 800894c:	1909      	addeq	r1, r1, r4
 800894e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008950:	6844      	ldr	r4, [r0, #4]
 8008952:	1901      	adds	r1, r0, r4
 8008954:	428b      	cmp	r3, r1
 8008956:	d10c      	bne.n	8008972 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008958:	4908      	ldr	r1, [pc, #32]	; (800897c <prvInsertBlockIntoFreeList+0x48>)
 800895a:	6809      	ldr	r1, [r1, #0]
 800895c:	428b      	cmp	r3, r1
 800895e:	d003      	beq.n	8008968 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008960:	6859      	ldr	r1, [r3, #4]
 8008962:	4421      	add	r1, r4
 8008964:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008966:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008968:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800896a:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800896c:	bf18      	it	ne
 800896e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008970:	bd10      	pop	{r4, pc}
 8008972:	4619      	mov	r1, r3
 8008974:	e7f8      	b.n	8008968 <prvInsertBlockIntoFreeList+0x34>
 8008976:	bf00      	nop
 8008978:	2400dda0 	.word	0x2400dda0
 800897c:	24005d88 	.word	0x24005d88

08008980 <pvPortMalloc>:
{
 8008980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008984:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008986:	f001 f97f 	bl	8009c88 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800898a:	4942      	ldr	r1, [pc, #264]	; (8008a94 <pvPortMalloc+0x114>)
 800898c:	4d42      	ldr	r5, [pc, #264]	; (8008a98 <pvPortMalloc+0x118>)
 800898e:	680b      	ldr	r3, [r1, #0]
 8008990:	bb0b      	cbnz	r3, 80089d6 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008992:	4a42      	ldr	r2, [pc, #264]	; (8008a9c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008994:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008996:	4e42      	ldr	r6, [pc, #264]	; (8008aa0 <pvPortMalloc+0x120>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008998:	bf1b      	ittet	ne
 800899a:	1dd0      	addne	r0, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800899c:	f502 4200 	addne.w	r2, r2, #32768	; 0x8000
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80089a0:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089a4:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80089a8:	bf1c      	itt	ne
 80089aa:	1a13      	subne	r3, r2, r0
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089ac:	4602      	movne	r2, r0
	xStart.xBlockSize = ( size_t ) 0;
 80089ae:	2000      	movs	r0, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80089b0:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089b2:	6032      	str	r2, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
 80089b4:	6070      	str	r0, [r6, #4]
	uxAddress -= xHeapStructSize;
 80089b6:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089b8:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 80089bc:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80089c0:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 80089c2:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80089c4:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089c8:	4b36      	ldr	r3, [pc, #216]	; (8008aa4 <pvPortMalloc+0x124>)
 80089ca:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089cc:	4b36      	ldr	r3, [pc, #216]	; (8008aa8 <pvPortMalloc+0x128>)
 80089ce:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80089d0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80089d4:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80089d6:	682e      	ldr	r6, [r5, #0]
 80089d8:	4226      	tst	r6, r4
 80089da:	d155      	bne.n	8008a88 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80089dc:	2c00      	cmp	r4, #0
 80089de:	d046      	beq.n	8008a6e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80089e0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80089e4:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80089e6:	bf1c      	itt	ne
 80089e8:	f023 0307 	bicne.w	r3, r3, #7
 80089ec:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80089ee:	2b00      	cmp	r3, #0
 80089f0:	d04a      	beq.n	8008a88 <pvPortMalloc+0x108>
 80089f2:	4f2d      	ldr	r7, [pc, #180]	; (8008aa8 <pvPortMalloc+0x128>)
 80089f4:	683c      	ldr	r4, [r7, #0]
 80089f6:	429c      	cmp	r4, r3
 80089f8:	d346      	bcc.n	8008a88 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80089fa:	4a29      	ldr	r2, [pc, #164]	; (8008aa0 <pvPortMalloc+0x120>)
 80089fc:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80089fe:	6868      	ldr	r0, [r5, #4]
 8008a00:	4298      	cmp	r0, r3
 8008a02:	d204      	bcs.n	8008a0e <pvPortMalloc+0x8e>
 8008a04:	f8d5 c000 	ldr.w	ip, [r5]
 8008a08:	f1bc 0f00 	cmp.w	ip, #0
 8008a0c:	d115      	bne.n	8008a3a <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008a0e:	6809      	ldr	r1, [r1, #0]
 8008a10:	42a9      	cmp	r1, r5
 8008a12:	d039      	beq.n	8008a88 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a14:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a16:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a1a:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a1c:	1ac2      	subs	r2, r0, r3
 8008a1e:	2a10      	cmp	r2, #16
 8008a20:	d912      	bls.n	8008a48 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008a22:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a24:	0741      	lsls	r1, r0, #29
 8008a26:	d00b      	beq.n	8008a40 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008a28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a2c:	f383 8811 	msr	BASEPRI, r3
 8008a30:	f3bf 8f6f 	isb	sy
 8008a34:	f3bf 8f4f 	dsb	sy
 8008a38:	e7fe      	b.n	8008a38 <pvPortMalloc+0xb8>
 8008a3a:	462a      	mov	r2, r5
 8008a3c:	4665      	mov	r5, ip
 8008a3e:	e7de      	b.n	80089fe <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008a40:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008a42:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008a44:	f7ff ff76 	bl	8008934 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a48:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008a4a:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a4c:	4915      	ldr	r1, [pc, #84]	; (8008aa4 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a4e:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a50:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a52:	6808      	ldr	r0, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8008a54:	4a15      	ldr	r2, [pc, #84]	; (8008aac <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a56:	4284      	cmp	r4, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008a58:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8008a5a:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a5c:	603c      	str	r4, [r7, #0]
					xNumberOfSuccessfulAllocations++;
 8008a5e:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008a62:	bf38      	it	cc
 8008a64:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a66:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a6a:	606e      	str	r6, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8008a6c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8008a6e:	f001 f9af 	bl	8009dd0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a72:	0763      	lsls	r3, r4, #29
 8008a74:	d00a      	beq.n	8008a8c <pvPortMalloc+0x10c>
 8008a76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a7a:	f383 8811 	msr	BASEPRI, r3
 8008a7e:	f3bf 8f6f 	isb	sy
 8008a82:	f3bf 8f4f 	dsb	sy
 8008a86:	e7fe      	b.n	8008a86 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008a88:	2400      	movs	r4, #0
 8008a8a:	e7f0      	b.n	8008a6e <pvPortMalloc+0xee>
}
 8008a8c:	4620      	mov	r0, r4
 8008a8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a92:	bf00      	nop
 8008a94:	24005d88 	.word	0x24005d88
 8008a98:	2400dd8c 	.word	0x2400dd8c
 8008a9c:	24005d8c 	.word	0x24005d8c
 8008aa0:	2400dda0 	.word	0x2400dda0
 8008aa4:	2400dd94 	.word	0x2400dd94
 8008aa8:	2400dd90 	.word	0x2400dd90
 8008aac:	2400dd98 	.word	0x2400dd98

08008ab0 <vPortFree>:
{
 8008ab0:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008ab2:	4604      	mov	r4, r0
 8008ab4:	b390      	cbz	r0, 8008b1c <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008ab6:	4a1a      	ldr	r2, [pc, #104]	; (8008b20 <vPortFree+0x70>)
 8008ab8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008abc:	6812      	ldr	r2, [r2, #0]
 8008abe:	4213      	tst	r3, r2
 8008ac0:	d108      	bne.n	8008ad4 <vPortFree+0x24>
 8008ac2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ac6:	f383 8811 	msr	BASEPRI, r3
 8008aca:	f3bf 8f6f 	isb	sy
 8008ace:	f3bf 8f4f 	dsb	sy
 8008ad2:	e7fe      	b.n	8008ad2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008ad4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008ad8:	b141      	cbz	r1, 8008aec <vPortFree+0x3c>
 8008ada:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ade:	f383 8811 	msr	BASEPRI, r3
 8008ae2:	f3bf 8f6f 	isb	sy
 8008ae6:	f3bf 8f4f 	dsb	sy
 8008aea:	e7fe      	b.n	8008aea <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008aec:	ea23 0302 	bic.w	r3, r3, r2
 8008af0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008af4:	f001 f8c8 	bl	8009c88 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008af8:	4a0a      	ldr	r2, [pc, #40]	; (8008b24 <vPortFree+0x74>)
 8008afa:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008afe:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008b02:	6811      	ldr	r1, [r2, #0]
 8008b04:	440b      	add	r3, r1
 8008b06:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008b08:	f7ff ff14 	bl	8008934 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008b0c:	4a06      	ldr	r2, [pc, #24]	; (8008b28 <vPortFree+0x78>)
 8008b0e:	6813      	ldr	r3, [r2, #0]
 8008b10:	3301      	adds	r3, #1
}
 8008b12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8008b16:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008b18:	f001 b95a 	b.w	8009dd0 <xTaskResumeAll>
}
 8008b1c:	bd10      	pop	{r4, pc}
 8008b1e:	bf00      	nop
 8008b20:	2400dd8c 	.word	0x2400dd8c
 8008b24:	2400dd90 	.word	0x2400dd90
 8008b28:	2400dd9c 	.word	0x2400dd9c

08008b2c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b2c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008b30:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b34:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b36:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b38:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008b3c:	2300      	movs	r3, #0
 8008b3e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008b40:	4770      	bx	lr

08008b42 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008b42:	2300      	movs	r3, #0
 8008b44:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008b46:	4770      	bx	lr

08008b48 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008b48:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b4a:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8008b4c:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b4e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008b50:	689a      	ldr	r2, [r3, #8]
 8008b52:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008b54:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b56:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b58:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b5a:	3301      	adds	r3, #1
 8008b5c:	6003      	str	r3, [r0, #0]
}
 8008b5e:	4770      	bx	lr

08008b60 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008b60:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008b62:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008b64:	1c63      	adds	r3, r4, #1
 8008b66:	d10a      	bne.n	8008b7e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008b68:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008b6a:	685a      	ldr	r2, [r3, #4]
 8008b6c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008b6e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008b70:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008b72:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b74:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b76:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b78:	3301      	adds	r3, #1
 8008b7a:	6003      	str	r3, [r0, #0]
}
 8008b7c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008b7e:	f100 0208 	add.w	r2, r0, #8
 8008b82:	4613      	mov	r3, r2
 8008b84:	6852      	ldr	r2, [r2, #4]
 8008b86:	6815      	ldr	r5, [r2, #0]
 8008b88:	42a5      	cmp	r5, r4
 8008b8a:	d9fa      	bls.n	8008b82 <vListInsert+0x22>
 8008b8c:	e7ed      	b.n	8008b6a <vListInsert+0xa>

08008b8e <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8008b8e:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b90:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008b94:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008b96:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008b98:	6859      	ldr	r1, [r3, #4]
 8008b9a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008b9c:	bf08      	it	eq
 8008b9e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008ba0:	2200      	movs	r2, #0
 8008ba2:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008ba4:	681a      	ldr	r2, [r3, #0]
 8008ba6:	3a01      	subs	r2, #1
 8008ba8:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008baa:	6818      	ldr	r0, [r3, #0]
}
 8008bac:	4770      	bx	lr
	...

08008bb0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008bb0:	4808      	ldr	r0, [pc, #32]	; (8008bd4 <prvPortStartFirstTask+0x24>)
 8008bb2:	6800      	ldr	r0, [r0, #0]
 8008bb4:	6800      	ldr	r0, [r0, #0]
 8008bb6:	f380 8808 	msr	MSP, r0
 8008bba:	f04f 0000 	mov.w	r0, #0
 8008bbe:	f380 8814 	msr	CONTROL, r0
 8008bc2:	b662      	cpsie	i
 8008bc4:	b661      	cpsie	f
 8008bc6:	f3bf 8f4f 	dsb	sy
 8008bca:	f3bf 8f6f 	isb	sy
 8008bce:	df00      	svc	0
 8008bd0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008bd2:	0000      	.short	0x0000
 8008bd4:	e000ed08 	.word	0xe000ed08

08008bd8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008bd8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008be8 <vPortEnableVFP+0x10>
 8008bdc:	6801      	ldr	r1, [r0, #0]
 8008bde:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008be2:	6001      	str	r1, [r0, #0]
 8008be4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008be6:	0000      	.short	0x0000
 8008be8:	e000ed88 	.word	0xe000ed88

08008bec <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8008bec:	2300      	movs	r3, #0
{
 8008bee:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008bf0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008bf2:	4b0d      	ldr	r3, [pc, #52]	; (8008c28 <prvTaskExitError+0x3c>)
 8008bf4:	681b      	ldr	r3, [r3, #0]
 8008bf6:	3301      	adds	r3, #1
 8008bf8:	d008      	beq.n	8008c0c <prvTaskExitError+0x20>
 8008bfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bfe:	f383 8811 	msr	BASEPRI, r3
 8008c02:	f3bf 8f6f 	isb	sy
 8008c06:	f3bf 8f4f 	dsb	sy
 8008c0a:	e7fe      	b.n	8008c0a <prvTaskExitError+0x1e>
 8008c0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c10:	f383 8811 	msr	BASEPRI, r3
 8008c14:	f3bf 8f6f 	isb	sy
 8008c18:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008c1c:	9b01      	ldr	r3, [sp, #4]
 8008c1e:	2b00      	cmp	r3, #0
 8008c20:	d0fc      	beq.n	8008c1c <prvTaskExitError+0x30>
}
 8008c22:	b002      	add	sp, #8
 8008c24:	4770      	bx	lr
 8008c26:	bf00      	nop
 8008c28:	2400007c 	.word	0x2400007c

08008c2c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008c2c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c30:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008c34:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8008c38:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008c3a:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008c3c:	4b03      	ldr	r3, [pc, #12]	; (8008c4c <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c3e:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008c40:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c42:	f06f 0302 	mvn.w	r3, #2
 8008c46:	6203      	str	r3, [r0, #32]
}
 8008c48:	4770      	bx	lr
 8008c4a:	bf00      	nop
 8008c4c:	08008bed 	.word	0x08008bed

08008c50 <SVC_Handler>:
	__asm volatile (
 8008c50:	4b07      	ldr	r3, [pc, #28]	; (8008c70 <pxCurrentTCBConst2>)
 8008c52:	6819      	ldr	r1, [r3, #0]
 8008c54:	6808      	ldr	r0, [r1, #0]
 8008c56:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c5a:	f380 8809 	msr	PSP, r0
 8008c5e:	f3bf 8f6f 	isb	sy
 8008c62:	f04f 0000 	mov.w	r0, #0
 8008c66:	f380 8811 	msr	BASEPRI, r0
 8008c6a:	4770      	bx	lr
 8008c6c:	f3af 8000 	nop.w

08008c70 <pxCurrentTCBConst2>:
 8008c70:	2400ddf0 	.word	0x2400ddf0

08008c74 <vPortEnterCritical>:
 8008c74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c78:	f383 8811 	msr	BASEPRI, r3
 8008c7c:	f3bf 8f6f 	isb	sy
 8008c80:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008c84:	4a0a      	ldr	r2, [pc, #40]	; (8008cb0 <vPortEnterCritical+0x3c>)
 8008c86:	6813      	ldr	r3, [r2, #0]
 8008c88:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008c8a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008c8c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008c8e:	d10e      	bne.n	8008cae <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008c90:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c94:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008c98:	b2db      	uxtb	r3, r3
 8008c9a:	b143      	cbz	r3, 8008cae <vPortEnterCritical+0x3a>
 8008c9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ca0:	f383 8811 	msr	BASEPRI, r3
 8008ca4:	f3bf 8f6f 	isb	sy
 8008ca8:	f3bf 8f4f 	dsb	sy
 8008cac:	e7fe      	b.n	8008cac <vPortEnterCritical+0x38>
}
 8008cae:	4770      	bx	lr
 8008cb0:	2400007c 	.word	0x2400007c

08008cb4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008cb4:	4a08      	ldr	r2, [pc, #32]	; (8008cd8 <vPortExitCritical+0x24>)
 8008cb6:	6813      	ldr	r3, [r2, #0]
 8008cb8:	b943      	cbnz	r3, 8008ccc <vPortExitCritical+0x18>
 8008cba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cbe:	f383 8811 	msr	BASEPRI, r3
 8008cc2:	f3bf 8f6f 	isb	sy
 8008cc6:	f3bf 8f4f 	dsb	sy
 8008cca:	e7fe      	b.n	8008cca <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008ccc:	3b01      	subs	r3, #1
 8008cce:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008cd0:	b90b      	cbnz	r3, 8008cd6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008cd2:	f383 8811 	msr	BASEPRI, r3
}
 8008cd6:	4770      	bx	lr
 8008cd8:	2400007c 	.word	0x2400007c
 8008cdc:	00000000 	.word	0x00000000

08008ce0 <PendSV_Handler>:
	__asm volatile
 8008ce0:	f3ef 8009 	mrs	r0, PSP
 8008ce4:	f3bf 8f6f 	isb	sy
 8008ce8:	4b15      	ldr	r3, [pc, #84]	; (8008d40 <pxCurrentTCBConst>)
 8008cea:	681a      	ldr	r2, [r3, #0]
 8008cec:	f01e 0f10 	tst.w	lr, #16
 8008cf0:	bf08      	it	eq
 8008cf2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008cf6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cfa:	6010      	str	r0, [r2, #0]
 8008cfc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008d00:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008d04:	f380 8811 	msr	BASEPRI, r0
 8008d08:	f3bf 8f4f 	dsb	sy
 8008d0c:	f3bf 8f6f 	isb	sy
 8008d10:	f001 f960 	bl	8009fd4 <vTaskSwitchContext>
 8008d14:	f04f 0000 	mov.w	r0, #0
 8008d18:	f380 8811 	msr	BASEPRI, r0
 8008d1c:	bc09      	pop	{r0, r3}
 8008d1e:	6819      	ldr	r1, [r3, #0]
 8008d20:	6808      	ldr	r0, [r1, #0]
 8008d22:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d26:	f01e 0f10 	tst.w	lr, #16
 8008d2a:	bf08      	it	eq
 8008d2c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008d30:	f380 8809 	msr	PSP, r0
 8008d34:	f3bf 8f6f 	isb	sy
 8008d38:	4770      	bx	lr
 8008d3a:	bf00      	nop
 8008d3c:	f3af 8000 	nop.w

08008d40 <pxCurrentTCBConst>:
 8008d40:	2400ddf0 	.word	0x2400ddf0

08008d44 <xPortSysTickHandler>:
{
 8008d44:	b508      	push	{r3, lr}
	__asm volatile
 8008d46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d4a:	f383 8811 	msr	BASEPRI, r3
 8008d4e:	f3bf 8f6f 	isb	sy
 8008d52:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008d56:	f000 ffa5 	bl	8009ca4 <xTaskIncrementTick>
 8008d5a:	b128      	cbz	r0, 8008d68 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008d5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008d68:	2300      	movs	r3, #0
 8008d6a:	f383 8811 	msr	BASEPRI, r3
}
 8008d6e:	bd08      	pop	{r3, pc}

08008d70 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008d70:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008d74:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008d76:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008d7a:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008d7c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008d7e:	4b04      	ldr	r3, [pc, #16]	; (8008d90 <vPortSetupTimerInterrupt+0x20>)
 8008d80:	681b      	ldr	r3, [r3, #0]
 8008d82:	fbb3 f3f1 	udiv	r3, r3, r1
 8008d86:	3b01      	subs	r3, #1
 8008d88:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008d8a:	2307      	movs	r3, #7
 8008d8c:	6113      	str	r3, [r2, #16]
}
 8008d8e:	4770      	bx	lr
 8008d90:	2400006c 	.word	0x2400006c

08008d94 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008d98:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d9a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008d9e:	4a3a      	ldr	r2, [pc, #232]	; (8008e88 <xPortStartScheduler+0xf4>)
 8008da0:	4291      	cmp	r1, r2
 8008da2:	d108      	bne.n	8008db6 <xPortStartScheduler+0x22>
	__asm volatile
 8008da4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008da8:	f383 8811 	msr	BASEPRI, r3
 8008dac:	f3bf 8f6f 	isb	sy
 8008db0:	f3bf 8f4f 	dsb	sy
 8008db4:	e7fe      	b.n	8008db4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008db6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008dba:	4b34      	ldr	r3, [pc, #208]	; (8008e8c <xPortStartScheduler+0xf8>)
 8008dbc:	429a      	cmp	r2, r3
 8008dbe:	d108      	bne.n	8008dd2 <xPortStartScheduler+0x3e>
 8008dc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dc4:	f383 8811 	msr	BASEPRI, r3
 8008dc8:	f3bf 8f6f 	isb	sy
 8008dcc:	f3bf 8f4f 	dsb	sy
 8008dd0:	e7fe      	b.n	8008dd0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008dd2:	4b2f      	ldr	r3, [pc, #188]	; (8008e90 <xPortStartScheduler+0xfc>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008dd4:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008dd6:	781a      	ldrb	r2, [r3, #0]
 8008dd8:	b2d2      	uxtb	r2, r2
 8008dda:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008ddc:	22ff      	movs	r2, #255	; 0xff
 8008dde:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008de0:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008de2:	4a2c      	ldr	r2, [pc, #176]	; (8008e94 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008de4:	b2db      	uxtb	r3, r3
 8008de6:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008dea:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008dee:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008df2:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008df4:	2307      	movs	r3, #7
 8008df6:	4a28      	ldr	r2, [pc, #160]	; (8008e98 <xPortStartScheduler+0x104>)
 8008df8:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008dfa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008dfe:	1e5c      	subs	r4, r3, #1
 8008e00:	0600      	lsls	r0, r0, #24
 8008e02:	d40c      	bmi.n	8008e1e <xPortStartScheduler+0x8a>
 8008e04:	b111      	cbz	r1, 8008e0c <xPortStartScheduler+0x78>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008e06:	2b03      	cmp	r3, #3
 8008e08:	6013      	str	r3, [r2, #0]
 8008e0a:	d011      	beq.n	8008e30 <xPortStartScheduler+0x9c>
 8008e0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e10:	f383 8811 	msr	BASEPRI, r3
 8008e14:	f3bf 8f6f 	isb	sy
 8008e18:	f3bf 8f4f 	dsb	sy
 8008e1c:	e7fe      	b.n	8008e1c <xPortStartScheduler+0x88>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008e1e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008e22:	2101      	movs	r1, #1
 8008e24:	005b      	lsls	r3, r3, #1
 8008e26:	b2db      	uxtb	r3, r3
 8008e28:	f88d 3003 	strb.w	r3, [sp, #3]
 8008e2c:	4623      	mov	r3, r4
 8008e2e:	e7e4      	b.n	8008dfa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e30:	f44f 7340 	mov.w	r3, #768	; 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e34:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
	uxCriticalNesting = 0;
 8008e38:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e3a:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e3c:	9b01      	ldr	r3, [sp, #4]
 8008e3e:	4a14      	ldr	r2, [pc, #80]	; (8008e90 <xPortStartScheduler+0xfc>)
 8008e40:	b2db      	uxtb	r3, r3
 8008e42:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e44:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e48:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008e4c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008e50:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e54:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008e58:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008e5c:	f7ff ff88 	bl	8008d70 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008e60:	4b0e      	ldr	r3, [pc, #56]	; (8008e9c <xPortStartScheduler+0x108>)
 8008e62:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008e64:	f7ff feb8 	bl	8008bd8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008e68:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008e6c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008e70:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008e74:	f7ff fe9c 	bl	8008bb0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008e78:	f001 f8ac 	bl	8009fd4 <vTaskSwitchContext>
}
 8008e7c:	4628      	mov	r0, r5
	prvTaskExitError();
 8008e7e:	f7ff feb5 	bl	8008bec <prvTaskExitError>
}
 8008e82:	b003      	add	sp, #12
 8008e84:	bd30      	pop	{r4, r5, pc}
 8008e86:	bf00      	nop
 8008e88:	410fc271 	.word	0x410fc271
 8008e8c:	410fc270 	.word	0x410fc270
 8008e90:	e000e400 	.word	0xe000e400
 8008e94:	2400dda8 	.word	0x2400dda8
 8008e98:	2400ddac 	.word	0x2400ddac
 8008e9c:	2400007c 	.word	0x2400007c

08008ea0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008ea0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008ea4:	2b0f      	cmp	r3, #15
 8008ea6:	d90e      	bls.n	8008ec6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008ea8:	4a11      	ldr	r2, [pc, #68]	; (8008ef0 <vPortValidateInterruptPriority+0x50>)
 8008eaa:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008eac:	4a11      	ldr	r2, [pc, #68]	; (8008ef4 <vPortValidateInterruptPriority+0x54>)
 8008eae:	7812      	ldrb	r2, [r2, #0]
 8008eb0:	429a      	cmp	r2, r3
 8008eb2:	d908      	bls.n	8008ec6 <vPortValidateInterruptPriority+0x26>
 8008eb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eb8:	f383 8811 	msr	BASEPRI, r3
 8008ebc:	f3bf 8f6f 	isb	sy
 8008ec0:	f3bf 8f4f 	dsb	sy
 8008ec4:	e7fe      	b.n	8008ec4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008ec6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008eca:	4a0b      	ldr	r2, [pc, #44]	; (8008ef8 <vPortValidateInterruptPriority+0x58>)
 8008ecc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008ed0:	6812      	ldr	r2, [r2, #0]
 8008ed2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008ed6:	4293      	cmp	r3, r2
 8008ed8:	d908      	bls.n	8008eec <vPortValidateInterruptPriority+0x4c>
 8008eda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ede:	f383 8811 	msr	BASEPRI, r3
 8008ee2:	f3bf 8f6f 	isb	sy
 8008ee6:	f3bf 8f4f 	dsb	sy
 8008eea:	e7fe      	b.n	8008eea <vPortValidateInterruptPriority+0x4a>
	}
 8008eec:	4770      	bx	lr
 8008eee:	bf00      	nop
 8008ef0:	e000e3f0 	.word	0xe000e3f0
 8008ef4:	2400dda8 	.word	0x2400dda8
 8008ef8:	2400ddac 	.word	0x2400ddac

08008efc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008efc:	b510      	push	{r4, lr}
 8008efe:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008f00:	f7ff feb8 	bl	8008c74 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008f04:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008f06:	f7ff fed5 	bl	8008cb4 <vPortExitCritical>

	return xReturn;
}
 8008f0a:	fab4 f084 	clz	r0, r4
 8008f0e:	0940      	lsrs	r0, r0, #5
 8008f10:	bd10      	pop	{r4, pc}

08008f12 <prvCopyDataToQueue>:
{
 8008f12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f14:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f16:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 8008f18:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f1a:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f1c:	b952      	cbnz	r2, 8008f34 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008f1e:	6807      	ldr	r7, [r0, #0]
 8008f20:	bb47      	cbnz	r7, 8008f74 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f22:	6880      	ldr	r0, [r0, #8]
 8008f24:	f001 f9b4 	bl	800a290 <xTaskPriorityDisinherit>
 8008f28:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f2a:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f2c:	3601      	adds	r6, #1
}
 8008f2e:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f30:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008f32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008f34:	b965      	cbnz	r5, 8008f50 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f36:	6840      	ldr	r0, [r0, #4]
 8008f38:	f018 fa73 	bl	8021422 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f3c:	6863      	ldr	r3, [r4, #4]
 8008f3e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f40:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f42:	68a2      	ldr	r2, [r4, #8]
 8008f44:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f46:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f48:	d3f0      	bcc.n	8008f2c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f4a:	6823      	ldr	r3, [r4, #0]
 8008f4c:	6063      	str	r3, [r4, #4]
 8008f4e:	e7ed      	b.n	8008f2c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008f50:	68c0      	ldr	r0, [r0, #12]
 8008f52:	f018 fa66 	bl	8021422 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f56:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f58:	68e3      	ldr	r3, [r4, #12]
 8008f5a:	4251      	negs	r1, r2
 8008f5c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f5e:	6822      	ldr	r2, [r4, #0]
 8008f60:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f62:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008f64:	bf3e      	ittt	cc
 8008f66:	68a3      	ldrcc	r3, [r4, #8]
 8008f68:	185b      	addcc	r3, r3, r1
 8008f6a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008f6c:	2d02      	cmp	r5, #2
 8008f6e:	d101      	bne.n	8008f74 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f70:	b116      	cbz	r6, 8008f78 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008f72:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008f74:	2500      	movs	r5, #0
 8008f76:	e7d9      	b.n	8008f2c <prvCopyDataToQueue+0x1a>
 8008f78:	4635      	mov	r5, r6
 8008f7a:	e7d7      	b.n	8008f2c <prvCopyDataToQueue+0x1a>

08008f7c <prvCopyDataFromQueue>:
{
 8008f7c:	4603      	mov	r3, r0
 8008f7e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f80:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008f82:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f84:	b162      	cbz	r2, 8008fa0 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f86:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f88:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f8a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f8c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f8e:	60dc      	str	r4, [r3, #12]
}
 8008f90:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f94:	bf24      	itt	cs
 8008f96:	6819      	ldrcs	r1, [r3, #0]
 8008f98:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f9a:	68d9      	ldr	r1, [r3, #12]
 8008f9c:	f018 ba41 	b.w	8021422 <memcpy>
}
 8008fa0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008fa4:	4770      	bx	lr

08008fa6 <prvUnlockQueue>:
{
 8008fa6:	b570      	push	{r4, r5, r6, lr}
 8008fa8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008faa:	f7ff fe63 	bl	8008c74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008fae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fb2:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008fb6:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008fb8:	2d00      	cmp	r5, #0
 8008fba:	dc14      	bgt.n	8008fe6 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008fbc:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fbe:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8008fc2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008fc6:	f7ff fe75 	bl	8008cb4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008fca:	f7ff fe53 	bl	8008c74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008fce:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 8008fd2:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008fd4:	2d00      	cmp	r5, #0
 8008fd6:	dc12      	bgt.n	8008ffe <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008fd8:	23ff      	movs	r3, #255	; 0xff
 8008fda:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008fde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008fe2:	f7ff be67 	b.w	8008cb4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008fe6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008fe8:	2b00      	cmp	r3, #0
 8008fea:	d0e7      	beq.n	8008fbc <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fec:	4630      	mov	r0, r6
 8008fee:	f001 f86d 	bl	800a0cc <xTaskRemoveFromEventList>
 8008ff2:	b108      	cbz	r0, 8008ff8 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008ff4:	f001 f8f6 	bl	800a1e4 <vTaskMissedYield>
			--cTxLock;
 8008ff8:	3d01      	subs	r5, #1
 8008ffa:	b26d      	sxtb	r5, r5
 8008ffc:	e7dc      	b.n	8008fb8 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008ffe:	6923      	ldr	r3, [r4, #16]
 8009000:	2b00      	cmp	r3, #0
 8009002:	d0e9      	beq.n	8008fd8 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009004:	4630      	mov	r0, r6
 8009006:	f001 f861 	bl	800a0cc <xTaskRemoveFromEventList>
 800900a:	b108      	cbz	r0, 8009010 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800900c:	f001 f8ea 	bl	800a1e4 <vTaskMissedYield>
				--cRxLock;
 8009010:	3d01      	subs	r5, #1
 8009012:	b26d      	sxtb	r5, r5
 8009014:	e7de      	b.n	8008fd4 <prvUnlockQueue+0x2e>

08009016 <xQueueGenericReset>:
{
 8009016:	b538      	push	{r3, r4, r5, lr}
 8009018:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800901a:	4604      	mov	r4, r0
 800901c:	b940      	cbnz	r0, 8009030 <xQueueGenericReset+0x1a>
 800901e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009022:	f383 8811 	msr	BASEPRI, r3
 8009026:	f3bf 8f6f 	isb	sy
 800902a:	f3bf 8f4f 	dsb	sy
 800902e:	e7fe      	b.n	800902e <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009030:	f7ff fe20 	bl	8008c74 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009034:	6822      	ldr	r2, [r4, #0]
 8009036:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800903a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800903c:	434b      	muls	r3, r1
 800903e:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009040:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009042:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009044:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8009046:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8009048:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800904a:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800904c:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800904e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009052:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009056:	b9a5      	cbnz	r5, 8009082 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009058:	6923      	ldr	r3, [r4, #16]
 800905a:	b173      	cbz	r3, 800907a <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800905c:	f104 0010 	add.w	r0, r4, #16
 8009060:	f001 f834 	bl	800a0cc <xTaskRemoveFromEventList>
 8009064:	b148      	cbz	r0, 800907a <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009066:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800906a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800906e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009072:	f3bf 8f4f 	dsb	sy
 8009076:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800907a:	f7ff fe1b 	bl	8008cb4 <vPortExitCritical>
}
 800907e:	2001      	movs	r0, #1
 8009080:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009082:	f104 0010 	add.w	r0, r4, #16
 8009086:	f7ff fd51 	bl	8008b2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800908a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800908e:	f7ff fd4d 	bl	8008b2c <vListInitialise>
 8009092:	e7f2      	b.n	800907a <xQueueGenericReset+0x64>

08009094 <xQueueGenericCreateStatic>:
	{
 8009094:	b513      	push	{r0, r1, r4, lr}
 8009096:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009098:	b940      	cbnz	r0, 80090ac <xQueueGenericCreateStatic+0x18>
 800909a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800909e:	f383 8811 	msr	BASEPRI, r3
 80090a2:	f3bf 8f6f 	isb	sy
 80090a6:	f3bf 8f4f 	dsb	sy
 80090aa:	e7fe      	b.n	80090aa <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80090ac:	b943      	cbnz	r3, 80090c0 <xQueueGenericCreateStatic+0x2c>
 80090ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090b2:	f383 8811 	msr	BASEPRI, r3
 80090b6:	f3bf 8f6f 	isb	sy
 80090ba:	f3bf 8f4f 	dsb	sy
 80090be:	e7fe      	b.n	80090be <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80090c0:	b14a      	cbz	r2, 80090d6 <xQueueGenericCreateStatic+0x42>
 80090c2:	b991      	cbnz	r1, 80090ea <xQueueGenericCreateStatic+0x56>
 80090c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090c8:	f383 8811 	msr	BASEPRI, r3
 80090cc:	f3bf 8f6f 	isb	sy
 80090d0:	f3bf 8f4f 	dsb	sy
 80090d4:	e7fe      	b.n	80090d4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80090d6:	b141      	cbz	r1, 80090ea <xQueueGenericCreateStatic+0x56>
 80090d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090dc:	f383 8811 	msr	BASEPRI, r3
 80090e0:	f3bf 8f6f 	isb	sy
 80090e4:	f3bf 8f4f 	dsb	sy
 80090e8:	e7fe      	b.n	80090e8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80090ea:	2350      	movs	r3, #80	; 0x50
 80090ec:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80090ee:	9b01      	ldr	r3, [sp, #4]
 80090f0:	2b50      	cmp	r3, #80	; 0x50
 80090f2:	d008      	beq.n	8009106 <xQueueGenericCreateStatic+0x72>
 80090f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090f8:	f383 8811 	msr	BASEPRI, r3
 80090fc:	f3bf 8f6f 	isb	sy
 8009100:	f3bf 8f4f 	dsb	sy
 8009104:	e7fe      	b.n	8009104 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009106:	2900      	cmp	r1, #0
 8009108:	bf08      	it	eq
 800910a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800910c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800910e:	2301      	movs	r3, #1
 8009110:	6022      	str	r2, [r4, #0]
 8009112:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 8009116:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800911a:	4619      	mov	r1, r3
 800911c:	4620      	mov	r0, r4
 800911e:	f7ff ff7a 	bl	8009016 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009122:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 8009126:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 8009128:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800912c:	b002      	add	sp, #8
 800912e:	bd10      	pop	{r4, pc}

08009130 <xQueueGenericCreate>:
	{
 8009130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009132:	460d      	mov	r5, r1
 8009134:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009136:	4606      	mov	r6, r0
 8009138:	b940      	cbnz	r0, 800914c <xQueueGenericCreate+0x1c>
 800913a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800913e:	f383 8811 	msr	BASEPRI, r3
 8009142:	f3bf 8f6f 	isb	sy
 8009146:	f3bf 8f4f 	dsb	sy
 800914a:	e7fe      	b.n	800914a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800914c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800914e:	3050      	adds	r0, #80	; 0x50
 8009150:	f7ff fc16 	bl	8008980 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009154:	4604      	mov	r4, r0
 8009156:	b170      	cbz	r0, 8009176 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8009158:	2300      	movs	r3, #0
 800915a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800915e:	b165      	cbz	r5, 800917a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009160:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009164:	2101      	movs	r1, #1
 8009166:	4620      	mov	r0, r4
 8009168:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800916a:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800916e:	f7ff ff52 	bl	8009016 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009172:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009176:	4620      	mov	r0, r4
 8009178:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800917a:	4603      	mov	r3, r0
 800917c:	e7f2      	b.n	8009164 <xQueueGenericCreate+0x34>

0800917e <xQueueCreateCountingSemaphoreStatic>:
	{
 800917e:	b513      	push	{r0, r1, r4, lr}
 8009180:	4613      	mov	r3, r2
 8009182:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009184:	b940      	cbnz	r0, 8009198 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009186:	f04f 0350 	mov.w	r3, #80	; 0x50
 800918a:	f383 8811 	msr	BASEPRI, r3
 800918e:	f3bf 8f6f 	isb	sy
 8009192:	f3bf 8f4f 	dsb	sy
 8009196:	e7fe      	b.n	8009196 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8009198:	4288      	cmp	r0, r1
 800919a:	d208      	bcs.n	80091ae <xQueueCreateCountingSemaphoreStatic+0x30>
 800919c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091a0:	f383 8811 	msr	BASEPRI, r3
 80091a4:	f3bf 8f6f 	isb	sy
 80091a8:	f3bf 8f4f 	dsb	sy
 80091ac:	e7fe      	b.n	80091ac <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091ae:	2202      	movs	r2, #2
 80091b0:	9200      	str	r2, [sp, #0]
 80091b2:	2200      	movs	r2, #0
 80091b4:	4611      	mov	r1, r2
 80091b6:	f7ff ff6d 	bl	8009094 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80091ba:	b100      	cbz	r0, 80091be <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091bc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091be:	b002      	add	sp, #8
 80091c0:	bd10      	pop	{r4, pc}

080091c2 <xQueueCreateCountingSemaphore>:
	{
 80091c2:	b510      	push	{r4, lr}
 80091c4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80091c6:	b940      	cbnz	r0, 80091da <xQueueCreateCountingSemaphore+0x18>
 80091c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091cc:	f383 8811 	msr	BASEPRI, r3
 80091d0:	f3bf 8f6f 	isb	sy
 80091d4:	f3bf 8f4f 	dsb	sy
 80091d8:	e7fe      	b.n	80091d8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091da:	4288      	cmp	r0, r1
 80091dc:	d208      	bcs.n	80091f0 <xQueueCreateCountingSemaphore+0x2e>
 80091de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091e2:	f383 8811 	msr	BASEPRI, r3
 80091e6:	f3bf 8f6f 	isb	sy
 80091ea:	f3bf 8f4f 	dsb	sy
 80091ee:	e7fe      	b.n	80091ee <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091f0:	2202      	movs	r2, #2
 80091f2:	2100      	movs	r1, #0
 80091f4:	f7ff ff9c 	bl	8009130 <xQueueGenericCreate>
		if( xHandle != NULL )
 80091f8:	b100      	cbz	r0, 80091fc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091fa:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091fc:	bd10      	pop	{r4, pc}

080091fe <xQueueGenericSend>:
{
 80091fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009202:	b085      	sub	sp, #20
 8009204:	4688      	mov	r8, r1
 8009206:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009208:	4604      	mov	r4, r0
{
 800920a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800920c:	b940      	cbnz	r0, 8009220 <xQueueGenericSend+0x22>
 800920e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009212:	f383 8811 	msr	BASEPRI, r3
 8009216:	f3bf 8f6f 	isb	sy
 800921a:	f3bf 8f4f 	dsb	sy
 800921e:	e7fe      	b.n	800921e <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009220:	b951      	cbnz	r1, 8009238 <xQueueGenericSend+0x3a>
 8009222:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009224:	b143      	cbz	r3, 8009238 <xQueueGenericSend+0x3a>
 8009226:	f04f 0350 	mov.w	r3, #80	; 0x50
 800922a:	f383 8811 	msr	BASEPRI, r3
 800922e:	f3bf 8f6f 	isb	sy
 8009232:	f3bf 8f4f 	dsb	sy
 8009236:	e7fe      	b.n	8009236 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009238:	2f02      	cmp	r7, #2
 800923a:	d10b      	bne.n	8009254 <xQueueGenericSend+0x56>
 800923c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800923e:	2b01      	cmp	r3, #1
 8009240:	d008      	beq.n	8009254 <xQueueGenericSend+0x56>
 8009242:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009246:	f383 8811 	msr	BASEPRI, r3
 800924a:	f3bf 8f6f 	isb	sy
 800924e:	f3bf 8f4f 	dsb	sy
 8009252:	e7fe      	b.n	8009252 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009254:	f000 ffcc 	bl	800a1f0 <xTaskGetSchedulerState>
 8009258:	4606      	mov	r6, r0
 800925a:	b950      	cbnz	r0, 8009272 <xQueueGenericSend+0x74>
 800925c:	9b01      	ldr	r3, [sp, #4]
 800925e:	b14b      	cbz	r3, 8009274 <xQueueGenericSend+0x76>
 8009260:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009264:	f383 8811 	msr	BASEPRI, r3
 8009268:	f3bf 8f6f 	isb	sy
 800926c:	f3bf 8f4f 	dsb	sy
 8009270:	e7fe      	b.n	8009270 <xQueueGenericSend+0x72>
 8009272:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009274:	f04f 0900 	mov.w	r9, #0
 8009278:	e037      	b.n	80092ea <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800927a:	9d01      	ldr	r5, [sp, #4]
 800927c:	b91d      	cbnz	r5, 8009286 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800927e:	f7ff fd19 	bl	8008cb4 <vPortExitCritical>
			return errQUEUE_FULL;
 8009282:	2000      	movs	r0, #0
 8009284:	e052      	b.n	800932c <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009286:	b916      	cbnz	r6, 800928e <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009288:	a802      	add	r0, sp, #8
 800928a:	f000 ff63 	bl	800a154 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800928e:	f7ff fd11 	bl	8008cb4 <vPortExitCritical>
		vTaskSuspendAll();
 8009292:	f000 fcf9 	bl	8009c88 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009296:	f7ff fced 	bl	8008c74 <vPortEnterCritical>
 800929a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800929e:	2bff      	cmp	r3, #255	; 0xff
 80092a0:	d101      	bne.n	80092a6 <xQueueGenericSend+0xa8>
 80092a2:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 80092a6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80092aa:	2bff      	cmp	r3, #255	; 0xff
 80092ac:	d101      	bne.n	80092b2 <xQueueGenericSend+0xb4>
 80092ae:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 80092b2:	f7ff fcff 	bl	8008cb4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80092b6:	a901      	add	r1, sp, #4
 80092b8:	a802      	add	r0, sp, #8
 80092ba:	f000 ff57 	bl	800a16c <xTaskCheckForTimeOut>
 80092be:	2800      	cmp	r0, #0
 80092c0:	d14a      	bne.n	8009358 <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80092c2:	f7ff fcd7 	bl	8008c74 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80092c6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092ca:	429a      	cmp	r2, r3
 80092cc:	d131      	bne.n	8009332 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80092ce:	f7ff fcf1 	bl	8008cb4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80092d2:	9901      	ldr	r1, [sp, #4]
 80092d4:	f104 0010 	add.w	r0, r4, #16
 80092d8:	f000 fec0 	bl	800a05c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80092dc:	4620      	mov	r0, r4
 80092de:	f7ff fe62 	bl	8008fa6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80092e2:	f000 fd75 	bl	8009dd0 <xTaskResumeAll>
 80092e6:	b360      	cbz	r0, 8009342 <xQueueGenericSend+0x144>
 80092e8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80092ea:	f7ff fcc3 	bl	8008c74 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80092ee:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092f2:	429a      	cmp	r2, r3
 80092f4:	d301      	bcc.n	80092fa <xQueueGenericSend+0xfc>
 80092f6:	2f02      	cmp	r7, #2
 80092f8:	d1bf      	bne.n	800927a <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80092fa:	463a      	mov	r2, r7
 80092fc:	4641      	mov	r1, r8
 80092fe:	4620      	mov	r0, r4
 8009300:	f7ff fe07 	bl	8008f12 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009304:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009306:	b11b      	cbz	r3, 8009310 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009308:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800930c:	f000 fede 	bl	800a0cc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009310:	b148      	cbz	r0, 8009326 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009312:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009316:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800931a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800931e:	f3bf 8f4f 	dsb	sy
 8009322:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009326:	f7ff fcc5 	bl	8008cb4 <vPortExitCritical>
				return pdPASS;
 800932a:	2001      	movs	r0, #1
}
 800932c:	b005      	add	sp, #20
 800932e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009332:	f7ff fcbf 	bl	8008cb4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009336:	4620      	mov	r0, r4
 8009338:	f7ff fe35 	bl	8008fa6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800933c:	f000 fd48 	bl	8009dd0 <xTaskResumeAll>
 8009340:	e7d2      	b.n	80092e8 <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009342:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009346:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800934a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800934e:	f3bf 8f4f 	dsb	sy
 8009352:	f3bf 8f6f 	isb	sy
 8009356:	e7c7      	b.n	80092e8 <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8009358:	4620      	mov	r0, r4
 800935a:	f7ff fe24 	bl	8008fa6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800935e:	f000 fd37 	bl	8009dd0 <xTaskResumeAll>
 8009362:	e78e      	b.n	8009282 <xQueueGenericSend+0x84>

08009364 <xQueueGenericSendFromISR>:
{
 8009364:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009368:	4689      	mov	r9, r1
 800936a:	4690      	mov	r8, r2
 800936c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800936e:	4604      	mov	r4, r0
 8009370:	b940      	cbnz	r0, 8009384 <xQueueGenericSendFromISR+0x20>
 8009372:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009376:	f383 8811 	msr	BASEPRI, r3
 800937a:	f3bf 8f6f 	isb	sy
 800937e:	f3bf 8f4f 	dsb	sy
 8009382:	e7fe      	b.n	8009382 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009384:	b951      	cbnz	r1, 800939c <xQueueGenericSendFromISR+0x38>
 8009386:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009388:	b143      	cbz	r3, 800939c <xQueueGenericSendFromISR+0x38>
 800938a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800938e:	f383 8811 	msr	BASEPRI, r3
 8009392:	f3bf 8f6f 	isb	sy
 8009396:	f3bf 8f4f 	dsb	sy
 800939a:	e7fe      	b.n	800939a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800939c:	2f02      	cmp	r7, #2
 800939e:	d10b      	bne.n	80093b8 <xQueueGenericSendFromISR+0x54>
 80093a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093a2:	2b01      	cmp	r3, #1
 80093a4:	d008      	beq.n	80093b8 <xQueueGenericSendFromISR+0x54>
 80093a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093aa:	f383 8811 	msr	BASEPRI, r3
 80093ae:	f3bf 8f6f 	isb	sy
 80093b2:	f3bf 8f4f 	dsb	sy
 80093b6:	e7fe      	b.n	80093b6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80093b8:	f7ff fd72 	bl	8008ea0 <vPortValidateInterruptPriority>
	__asm volatile
 80093bc:	f3ef 8611 	mrs	r6, BASEPRI
 80093c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093c4:	f383 8811 	msr	BASEPRI, r3
 80093c8:	f3bf 8f6f 	isb	sy
 80093cc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093d4:	429a      	cmp	r2, r3
 80093d6:	d301      	bcc.n	80093dc <xQueueGenericSendFromISR+0x78>
 80093d8:	2f02      	cmp	r7, #2
 80093da:	d123      	bne.n	8009424 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 80093dc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093e0:	463a      	mov	r2, r7
 80093e2:	4649      	mov	r1, r9
 80093e4:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 80093e6:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80093e8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093ea:	f7ff fd92 	bl	8008f12 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80093ee:	1c6b      	adds	r3, r5, #1
 80093f0:	d113      	bne.n	800941a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80093f4:	b90b      	cbnz	r3, 80093fa <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 80093f6:	2001      	movs	r0, #1
 80093f8:	e00b      	b.n	8009412 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093fa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80093fe:	f000 fe65 	bl	800a0cc <xTaskRemoveFromEventList>
 8009402:	2800      	cmp	r0, #0
 8009404:	d0f7      	beq.n	80093f6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8009406:	f1b8 0f00 	cmp.w	r8, #0
 800940a:	d0f4      	beq.n	80093f6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800940c:	2001      	movs	r0, #1
 800940e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009412:	f386 8811 	msr	BASEPRI, r6
}
 8009416:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800941a:	3501      	adds	r5, #1
 800941c:	b26d      	sxtb	r5, r5
 800941e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009422:	e7e8      	b.n	80093f6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8009424:	2000      	movs	r0, #0
 8009426:	e7f4      	b.n	8009412 <xQueueGenericSendFromISR+0xae>

08009428 <xQueueGiveFromISR>:
{
 8009428:	b570      	push	{r4, r5, r6, lr}
 800942a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800942c:	4604      	mov	r4, r0
 800942e:	b940      	cbnz	r0, 8009442 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009430:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009434:	f383 8811 	msr	BASEPRI, r3
 8009438:	f3bf 8f6f 	isb	sy
 800943c:	f3bf 8f4f 	dsb	sy
 8009440:	e7fe      	b.n	8009440 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009442:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009444:	b143      	cbz	r3, 8009458 <xQueueGiveFromISR+0x30>
 8009446:	f04f 0350 	mov.w	r3, #80	; 0x50
 800944a:	f383 8811 	msr	BASEPRI, r3
 800944e:	f3bf 8f6f 	isb	sy
 8009452:	f3bf 8f4f 	dsb	sy
 8009456:	e7fe      	b.n	8009456 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009458:	6803      	ldr	r3, [r0, #0]
 800945a:	b953      	cbnz	r3, 8009472 <xQueueGiveFromISR+0x4a>
 800945c:	6883      	ldr	r3, [r0, #8]
 800945e:	b143      	cbz	r3, 8009472 <xQueueGiveFromISR+0x4a>
 8009460:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009464:	f383 8811 	msr	BASEPRI, r3
 8009468:	f3bf 8f6f 	isb	sy
 800946c:	f3bf 8f4f 	dsb	sy
 8009470:	e7fe      	b.n	8009470 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009472:	f7ff fd15 	bl	8008ea0 <vPortValidateInterruptPriority>
	__asm volatile
 8009476:	f3ef 8611 	mrs	r6, BASEPRI
 800947a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800947e:	f383 8811 	msr	BASEPRI, r3
 8009482:	f3bf 8f6f 	isb	sy
 8009486:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800948a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800948c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800948e:	4293      	cmp	r3, r2
 8009490:	d91c      	bls.n	80094cc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009492:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009496:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009498:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800949a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800949c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800949e:	d110      	bne.n	80094c2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094a2:	b90b      	cbnz	r3, 80094a8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80094a4:	2001      	movs	r0, #1
 80094a6:	e009      	b.n	80094bc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80094ac:	f000 fe0e 	bl	800a0cc <xTaskRemoveFromEventList>
 80094b0:	2800      	cmp	r0, #0
 80094b2:	d0f7      	beq.n	80094a4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80094b4:	2d00      	cmp	r5, #0
 80094b6:	d0f5      	beq.n	80094a4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80094b8:	2001      	movs	r0, #1
 80094ba:	6028      	str	r0, [r5, #0]
	__asm volatile
 80094bc:	f386 8811 	msr	BASEPRI, r6
}
 80094c0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80094c2:	3301      	adds	r3, #1
 80094c4:	b25b      	sxtb	r3, r3
 80094c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80094ca:	e7eb      	b.n	80094a4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80094cc:	2000      	movs	r0, #0
 80094ce:	e7f5      	b.n	80094bc <xQueueGiveFromISR+0x94>

080094d0 <xQueueReceive>:
{
 80094d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094d4:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 80094d6:	4604      	mov	r4, r0
{
 80094d8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80094da:	b940      	cbnz	r0, 80094ee <xQueueReceive+0x1e>
	__asm volatile
 80094dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094e0:	f383 8811 	msr	BASEPRI, r3
 80094e4:	f3bf 8f6f 	isb	sy
 80094e8:	f3bf 8f4f 	dsb	sy
 80094ec:	e7fe      	b.n	80094ec <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094ee:	b951      	cbnz	r1, 8009506 <xQueueReceive+0x36>
 80094f0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80094f2:	b143      	cbz	r3, 8009506 <xQueueReceive+0x36>
 80094f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094f8:	f383 8811 	msr	BASEPRI, r3
 80094fc:	f3bf 8f6f 	isb	sy
 8009500:	f3bf 8f4f 	dsb	sy
 8009504:	e7fe      	b.n	8009504 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009506:	f000 fe73 	bl	800a1f0 <xTaskGetSchedulerState>
 800950a:	4606      	mov	r6, r0
 800950c:	b950      	cbnz	r0, 8009524 <xQueueReceive+0x54>
 800950e:	9b01      	ldr	r3, [sp, #4]
 8009510:	b14b      	cbz	r3, 8009526 <xQueueReceive+0x56>
 8009512:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009516:	f383 8811 	msr	BASEPRI, r3
 800951a:	f3bf 8f6f 	isb	sy
 800951e:	f3bf 8f4f 	dsb	sy
 8009522:	e7fe      	b.n	8009522 <xQueueReceive+0x52>
 8009524:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009526:	f04f 0800 	mov.w	r8, #0
 800952a:	e03d      	b.n	80095a8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800952c:	9d01      	ldr	r5, [sp, #4]
 800952e:	b91d      	cbnz	r5, 8009538 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009530:	f7ff fbc0 	bl	8008cb4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009534:	2000      	movs	r0, #0
 8009536:	e056      	b.n	80095e6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009538:	b916      	cbnz	r6, 8009540 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800953a:	a802      	add	r0, sp, #8
 800953c:	f000 fe0a 	bl	800a154 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009540:	f7ff fbb8 	bl	8008cb4 <vPortExitCritical>
		vTaskSuspendAll();
 8009544:	f000 fba0 	bl	8009c88 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009548:	f7ff fb94 	bl	8008c74 <vPortEnterCritical>
 800954c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009550:	2bff      	cmp	r3, #255	; 0xff
 8009552:	d101      	bne.n	8009558 <xQueueReceive+0x88>
 8009554:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 8009558:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800955c:	2bff      	cmp	r3, #255	; 0xff
 800955e:	d101      	bne.n	8009564 <xQueueReceive+0x94>
 8009560:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 8009564:	f7ff fba6 	bl	8008cb4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009568:	a901      	add	r1, sp, #4
 800956a:	a802      	add	r0, sp, #8
 800956c:	f000 fdfe 	bl	800a16c <xTaskCheckForTimeOut>
 8009570:	2800      	cmp	r0, #0
 8009572:	d141      	bne.n	80095f8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009574:	4620      	mov	r0, r4
 8009576:	f7ff fcc1 	bl	8008efc <prvIsQueueEmpty>
 800957a:	b3b8      	cbz	r0, 80095ec <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800957c:	9901      	ldr	r1, [sp, #4]
 800957e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009582:	f000 fd6b 	bl	800a05c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009586:	4620      	mov	r0, r4
 8009588:	f7ff fd0d 	bl	8008fa6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800958c:	f000 fc20 	bl	8009dd0 <xTaskResumeAll>
 8009590:	b948      	cbnz	r0, 80095a6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009592:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009596:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800959a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800959e:	f3bf 8f4f 	dsb	sy
 80095a2:	f3bf 8f6f 	isb	sy
 80095a6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80095a8:	f7ff fb64 	bl	8008c74 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80095ac:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80095ae:	2d00      	cmp	r5, #0
 80095b0:	d0bc      	beq.n	800952c <xQueueReceive+0x5c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095b2:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095b4:	4639      	mov	r1, r7
 80095b6:	4620      	mov	r0, r4
 80095b8:	f7ff fce0 	bl	8008f7c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095bc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095be:	6923      	ldr	r3, [r4, #16]
 80095c0:	b173      	cbz	r3, 80095e0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095c2:	f104 0010 	add.w	r0, r4, #16
 80095c6:	f000 fd81 	bl	800a0cc <xTaskRemoveFromEventList>
 80095ca:	b148      	cbz	r0, 80095e0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80095cc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095d8:	f3bf 8f4f 	dsb	sy
 80095dc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80095e0:	f7ff fb68 	bl	8008cb4 <vPortExitCritical>
				return pdPASS;
 80095e4:	2001      	movs	r0, #1
}
 80095e6:	b004      	add	sp, #16
 80095e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80095ec:	4620      	mov	r0, r4
 80095ee:	f7ff fcda 	bl	8008fa6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80095f2:	f000 fbed 	bl	8009dd0 <xTaskResumeAll>
 80095f6:	e7d6      	b.n	80095a6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80095f8:	4620      	mov	r0, r4
 80095fa:	f7ff fcd4 	bl	8008fa6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80095fe:	f000 fbe7 	bl	8009dd0 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009602:	4620      	mov	r0, r4
 8009604:	f7ff fc7a 	bl	8008efc <prvIsQueueEmpty>
 8009608:	2800      	cmp	r0, #0
 800960a:	d0cc      	beq.n	80095a6 <xQueueReceive+0xd6>
 800960c:	e792      	b.n	8009534 <xQueueReceive+0x64>

0800960e <xQueueSemaphoreTake>:
{
 800960e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009610:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009612:	4604      	mov	r4, r0
{
 8009614:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009616:	b940      	cbnz	r0, 800962a <xQueueSemaphoreTake+0x1c>
 8009618:	f04f 0350 	mov.w	r3, #80	; 0x50
 800961c:	f383 8811 	msr	BASEPRI, r3
 8009620:	f3bf 8f6f 	isb	sy
 8009624:	f3bf 8f4f 	dsb	sy
 8009628:	e7fe      	b.n	8009628 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800962a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800962c:	b145      	cbz	r5, 8009640 <xQueueSemaphoreTake+0x32>
 800962e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009632:	f383 8811 	msr	BASEPRI, r3
 8009636:	f3bf 8f6f 	isb	sy
 800963a:	f3bf 8f4f 	dsb	sy
 800963e:	e7fe      	b.n	800963e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009640:	f000 fdd6 	bl	800a1f0 <xTaskGetSchedulerState>
 8009644:	4606      	mov	r6, r0
 8009646:	b950      	cbnz	r0, 800965e <xQueueSemaphoreTake+0x50>
 8009648:	9b01      	ldr	r3, [sp, #4]
 800964a:	b15b      	cbz	r3, 8009664 <xQueueSemaphoreTake+0x56>
 800964c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009650:	f383 8811 	msr	BASEPRI, r3
 8009654:	f3bf 8f6f 	isb	sy
 8009658:	f3bf 8f4f 	dsb	sy
 800965c:	e7fe      	b.n	800965c <xQueueSemaphoreTake+0x4e>
 800965e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009660:	2700      	movs	r7, #0
 8009662:	e053      	b.n	800970c <xQueueSemaphoreTake+0xfe>
 8009664:	4605      	mov	r5, r0
 8009666:	e7fb      	b.n	8009660 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009668:	9b01      	ldr	r3, [sp, #4]
 800966a:	b963      	cbnz	r3, 8009686 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800966c:	b145      	cbz	r5, 8009680 <xQueueSemaphoreTake+0x72>
 800966e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009672:	f383 8811 	msr	BASEPRI, r3
 8009676:	f3bf 8f6f 	isb	sy
 800967a:	f3bf 8f4f 	dsb	sy
 800967e:	e7fe      	b.n	800967e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009680:	f7ff fb18 	bl	8008cb4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009684:	e062      	b.n	800974c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009686:	b916      	cbnz	r6, 800968e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009688:	a802      	add	r0, sp, #8
 800968a:	f000 fd63 	bl	800a154 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800968e:	f7ff fb11 	bl	8008cb4 <vPortExitCritical>
		vTaskSuspendAll();
 8009692:	f000 faf9 	bl	8009c88 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009696:	f7ff faed 	bl	8008c74 <vPortEnterCritical>
 800969a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800969e:	2bff      	cmp	r3, #255	; 0xff
 80096a0:	d101      	bne.n	80096a6 <xQueueSemaphoreTake+0x98>
 80096a2:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 80096a6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80096aa:	2bff      	cmp	r3, #255	; 0xff
 80096ac:	d101      	bne.n	80096b2 <xQueueSemaphoreTake+0xa4>
 80096ae:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80096b2:	f7ff faff 	bl	8008cb4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80096b6:	a901      	add	r1, sp, #4
 80096b8:	a802      	add	r0, sp, #8
 80096ba:	f000 fd57 	bl	800a16c <xTaskCheckForTimeOut>
 80096be:	2800      	cmp	r0, #0
 80096c0:	d14d      	bne.n	800975e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096c2:	4620      	mov	r0, r4
 80096c4:	f7ff fc1a 	bl	8008efc <prvIsQueueEmpty>
 80096c8:	2800      	cmp	r0, #0
 80096ca:	d042      	beq.n	8009752 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096cc:	6823      	ldr	r3, [r4, #0]
 80096ce:	b93b      	cbnz	r3, 80096e0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80096d0:	f7ff fad0 	bl	8008c74 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80096d4:	68a0      	ldr	r0, [r4, #8]
 80096d6:	f000 fd9b 	bl	800a210 <xTaskPriorityInherit>
 80096da:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80096dc:	f7ff faea 	bl	8008cb4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80096e0:	9901      	ldr	r1, [sp, #4]
 80096e2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80096e6:	f000 fcb9 	bl	800a05c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80096ea:	4620      	mov	r0, r4
 80096ec:	f7ff fc5b 	bl	8008fa6 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80096f0:	f000 fb6e 	bl	8009dd0 <xTaskResumeAll>
 80096f4:	b948      	cbnz	r0, 800970a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80096f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009702:	f3bf 8f4f 	dsb	sy
 8009706:	f3bf 8f6f 	isb	sy
 800970a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800970c:	f7ff fab2 	bl	8008c74 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009710:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009712:	2b00      	cmp	r3, #0
 8009714:	d0a8      	beq.n	8009668 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009716:	3b01      	subs	r3, #1
 8009718:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800971a:	6823      	ldr	r3, [r4, #0]
 800971c:	b913      	cbnz	r3, 8009724 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800971e:	f000 fe4d 	bl	800a3bc <pvTaskIncrementMutexHeldCount>
 8009722:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009724:	6923      	ldr	r3, [r4, #16]
 8009726:	b173      	cbz	r3, 8009746 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009728:	f104 0010 	add.w	r0, r4, #16
 800972c:	f000 fcce 	bl	800a0cc <xTaskRemoveFromEventList>
 8009730:	b148      	cbz	r0, 8009746 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009732:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009736:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800973a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800973e:	f3bf 8f4f 	dsb	sy
 8009742:	f3bf 8f6f 	isb	sy
				return pdPASS;
 8009746:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 8009748:	f7ff fab4 	bl	8008cb4 <vPortExitCritical>
}
 800974c:	4628      	mov	r0, r5
 800974e:	b005      	add	sp, #20
 8009750:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009752:	4620      	mov	r0, r4
 8009754:	f7ff fc27 	bl	8008fa6 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009758:	f000 fb3a 	bl	8009dd0 <xTaskResumeAll>
 800975c:	e7d5      	b.n	800970a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800975e:	4620      	mov	r0, r4
 8009760:	f7ff fc21 	bl	8008fa6 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009764:	f000 fb34 	bl	8009dd0 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009768:	4620      	mov	r0, r4
 800976a:	f7ff fbc7 	bl	8008efc <prvIsQueueEmpty>
 800976e:	2800      	cmp	r0, #0
 8009770:	d0cb      	beq.n	800970a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009772:	2d00      	cmp	r5, #0
 8009774:	d0ea      	beq.n	800974c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009776:	f7ff fa7d 	bl	8008c74 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800977a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800977c:	b119      	cbz	r1, 8009786 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800977e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009780:	6819      	ldr	r1, [r3, #0]
 8009782:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009786:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 8009788:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800978a:	f000 fdc5 	bl	800a318 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800978e:	f7ff fa91 	bl	8008cb4 <vPortExitCritical>
 8009792:	e7db      	b.n	800974c <xQueueSemaphoreTake+0x13e>

08009794 <xQueueReceiveFromISR>:
{
 8009794:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009798:	4689      	mov	r9, r1
 800979a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800979c:	4605      	mov	r5, r0
 800979e:	b940      	cbnz	r0, 80097b2 <xQueueReceiveFromISR+0x1e>
 80097a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097a4:	f383 8811 	msr	BASEPRI, r3
 80097a8:	f3bf 8f6f 	isb	sy
 80097ac:	f3bf 8f4f 	dsb	sy
 80097b0:	e7fe      	b.n	80097b0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80097b2:	b951      	cbnz	r1, 80097ca <xQueueReceiveFromISR+0x36>
 80097b4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80097b6:	b143      	cbz	r3, 80097ca <xQueueReceiveFromISR+0x36>
 80097b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097bc:	f383 8811 	msr	BASEPRI, r3
 80097c0:	f3bf 8f6f 	isb	sy
 80097c4:	f3bf 8f4f 	dsb	sy
 80097c8:	e7fe      	b.n	80097c8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80097ca:	f7ff fb69 	bl	8008ea0 <vPortValidateInterruptPriority>
	__asm volatile
 80097ce:	f3ef 8711 	mrs	r7, BASEPRI
 80097d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097d6:	f383 8811 	msr	BASEPRI, r3
 80097da:	f3bf 8f6f 	isb	sy
 80097de:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097e2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097e4:	b31c      	cbz	r4, 800982e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80097e6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097ea:	4649      	mov	r1, r9
 80097ec:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097ee:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 80097f0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097f2:	f7ff fbc3 	bl	8008f7c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097f6:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80097f8:	1c73      	adds	r3, r6, #1
 80097fa:	d113      	bne.n	8009824 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80097fc:	692b      	ldr	r3, [r5, #16]
 80097fe:	b90b      	cbnz	r3, 8009804 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009800:	2001      	movs	r0, #1
 8009802:	e00b      	b.n	800981c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009804:	f105 0010 	add.w	r0, r5, #16
 8009808:	f000 fc60 	bl	800a0cc <xTaskRemoveFromEventList>
 800980c:	2800      	cmp	r0, #0
 800980e:	d0f7      	beq.n	8009800 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009810:	f1b8 0f00 	cmp.w	r8, #0
 8009814:	d0f4      	beq.n	8009800 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009816:	2001      	movs	r0, #1
 8009818:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800981c:	f387 8811 	msr	BASEPRI, r7
}
 8009820:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009824:	3601      	adds	r6, #1
 8009826:	b276      	sxtb	r6, r6
 8009828:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800982c:	e7e8      	b.n	8009800 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800982e:	4620      	mov	r0, r4
 8009830:	e7f4      	b.n	800981c <xQueueReceiveFromISR+0x88>
	...

08009834 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009834:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009836:	4a07      	ldr	r2, [pc, #28]	; (8009854 <vQueueAddToRegistry+0x20>)
	{
 8009838:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800983a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800983e:	b92c      	cbnz	r4, 800984c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009840:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009844:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8009848:	6050      	str	r0, [r2, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800984a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800984c:	3301      	adds	r3, #1
 800984e:	2b08      	cmp	r3, #8
 8009850:	d1f3      	bne.n	800983a <vQueueAddToRegistry+0x6>
 8009852:	e7fa      	b.n	800984a <vQueueAddToRegistry+0x16>
 8009854:	2400ddb0 	.word	0x2400ddb0

08009858 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009858:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800985a:	4a08      	ldr	r2, [pc, #32]	; (800987c <vQueueUnregisterQueue+0x24>)
	{
 800985c:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800985e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009862:	684c      	ldr	r4, [r1, #4]
 8009864:	4284      	cmp	r4, r0
 8009866:	d104      	bne.n	8009872 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009868:	2000      	movs	r0, #0
 800986a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800986e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009870:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009872:	3301      	adds	r3, #1
 8009874:	2b08      	cmp	r3, #8
 8009876:	d1f2      	bne.n	800985e <vQueueUnregisterQueue+0x6>
 8009878:	e7fa      	b.n	8009870 <vQueueUnregisterQueue+0x18>
 800987a:	bf00      	nop
 800987c:	2400ddb0 	.word	0x2400ddb0

08009880 <vQueueDelete>:
{
 8009880:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009882:	4604      	mov	r4, r0
 8009884:	b940      	cbnz	r0, 8009898 <vQueueDelete+0x18>
	__asm volatile
 8009886:	f04f 0350 	mov.w	r3, #80	; 0x50
 800988a:	f383 8811 	msr	BASEPRI, r3
 800988e:	f3bf 8f6f 	isb	sy
 8009892:	f3bf 8f4f 	dsb	sy
 8009896:	e7fe      	b.n	8009896 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009898:	f7ff ffde 	bl	8009858 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800989c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80098a0:	b923      	cbnz	r3, 80098ac <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80098a2:	4620      	mov	r0, r4
}
 80098a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80098a8:	f7ff b902 	b.w	8008ab0 <vPortFree>
}
 80098ac:	bd10      	pop	{r4, pc}

080098ae <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80098ae:	b570      	push	{r4, r5, r6, lr}
 80098b0:	4604      	mov	r4, r0
 80098b2:	460d      	mov	r5, r1
 80098b4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80098b6:	f7ff f9dd 	bl	8008c74 <vPortEnterCritical>
 80098ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80098be:	2bff      	cmp	r3, #255	; 0xff
 80098c0:	d102      	bne.n	80098c8 <vQueueWaitForMessageRestricted+0x1a>
 80098c2:	2300      	movs	r3, #0
 80098c4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80098c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80098cc:	2bff      	cmp	r3, #255	; 0xff
 80098ce:	d102      	bne.n	80098d6 <vQueueWaitForMessageRestricted+0x28>
 80098d0:	2300      	movs	r3, #0
 80098d2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80098d6:	f7ff f9ed 	bl	8008cb4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80098dc:	b92b      	cbnz	r3, 80098ea <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098de:	4632      	mov	r2, r6
 80098e0:	4629      	mov	r1, r5
 80098e2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80098e6:	f000 fbd3 	bl	800a090 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80098ea:	4620      	mov	r0, r4
	}
 80098ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80098f0:	f7ff bb59 	b.w	8008fa6 <prvUnlockQueue>

080098f4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80098f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098f8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80098fa:	f7ff f9bb 	bl	8008c74 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80098fe:	4b2f      	ldr	r3, [pc, #188]	; (80099bc <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009900:	4e2f      	ldr	r6, [pc, #188]	; (80099c0 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009902:	681a      	ldr	r2, [r3, #0]
 8009904:	4f2f      	ldr	r7, [pc, #188]	; (80099c4 <prvAddNewTaskToReadyList+0xd0>)
 8009906:	3201      	adds	r2, #1
 8009908:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800990a:	6835      	ldr	r5, [r6, #0]
 800990c:	2d00      	cmp	r5, #0
 800990e:	d14a      	bne.n	80099a6 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009910:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009912:	681b      	ldr	r3, [r3, #0]
 8009914:	2b01      	cmp	r3, #1
 8009916:	d11f      	bne.n	8009958 <prvAddNewTaskToReadyList+0x64>
 8009918:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800991a:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800991c:	4640      	mov	r0, r8
 800991e:	f7ff f905 	bl	8008b2c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009922:	f108 0814 	add.w	r8, r8, #20
 8009926:	2d38      	cmp	r5, #56	; 0x38
 8009928:	d1f7      	bne.n	800991a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800992a:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 80099ec <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 800992e:	4d26      	ldr	r5, [pc, #152]	; (80099c8 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8009930:	4640      	mov	r0, r8
 8009932:	f7ff f8fb 	bl	8008b2c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009936:	4628      	mov	r0, r5
 8009938:	f7ff f8f8 	bl	8008b2c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800993c:	4823      	ldr	r0, [pc, #140]	; (80099cc <prvAddNewTaskToReadyList+0xd8>)
 800993e:	f7ff f8f5 	bl	8008b2c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009942:	4823      	ldr	r0, [pc, #140]	; (80099d0 <prvAddNewTaskToReadyList+0xdc>)
 8009944:	f7ff f8f2 	bl	8008b2c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009948:	4822      	ldr	r0, [pc, #136]	; (80099d4 <prvAddNewTaskToReadyList+0xe0>)
 800994a:	f7ff f8ef 	bl	8008b2c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800994e:	4b22      	ldr	r3, [pc, #136]	; (80099d8 <prvAddNewTaskToReadyList+0xe4>)
 8009950:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009954:	4b21      	ldr	r3, [pc, #132]	; (80099dc <prvAddNewTaskToReadyList+0xe8>)
 8009956:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009958:	4a21      	ldr	r2, [pc, #132]	; (80099e0 <prvAddNewTaskToReadyList+0xec>)
 800995a:	6813      	ldr	r3, [r2, #0]
 800995c:	3301      	adds	r3, #1
 800995e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009960:	4a20      	ldr	r2, [pc, #128]	; (80099e4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009962:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009964:	6811      	ldr	r1, [r2, #0]
 8009966:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009968:	428b      	cmp	r3, r1
 800996a:	d900      	bls.n	800996e <prvAddNewTaskToReadyList+0x7a>
 800996c:	6013      	str	r3, [r2, #0]
 800996e:	2014      	movs	r0, #20
 8009970:	1d21      	adds	r1, r4, #4
 8009972:	fb00 7003 	mla	r0, r0, r3, r7
 8009976:	f7ff f8e7 	bl	8008b48 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800997a:	f7ff f99b 	bl	8008cb4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800997e:	4b1a      	ldr	r3, [pc, #104]	; (80099e8 <prvAddNewTaskToReadyList+0xf4>)
 8009980:	681b      	ldr	r3, [r3, #0]
 8009982:	b173      	cbz	r3, 80099a2 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009984:	6833      	ldr	r3, [r6, #0]
 8009986:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009988:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800998a:	429a      	cmp	r2, r3
 800998c:	d209      	bcs.n	80099a2 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800998e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009992:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009996:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800999a:	f3bf 8f4f 	dsb	sy
 800999e:	f3bf 8f6f 	isb	sy
}
 80099a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80099a6:	4b10      	ldr	r3, [pc, #64]	; (80099e8 <prvAddNewTaskToReadyList+0xf4>)
 80099a8:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099aa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			if( xSchedulerRunning == pdFALSE )
 80099ac:	2a00      	cmp	r2, #0
 80099ae:	d1d3      	bne.n	8009958 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099b0:	6832      	ldr	r2, [r6, #0]
 80099b2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80099b4:	429a      	cmp	r2, r3
 80099b6:	d8cf      	bhi.n	8009958 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 80099b8:	6034      	str	r4, [r6, #0]
 80099ba:	e7cd      	b.n	8009958 <prvAddNewTaskToReadyList+0x64>
 80099bc:	2400e25c 	.word	0x2400e25c
 80099c0:	2400ddf0 	.word	0x2400ddf0
 80099c4:	2400ddfc 	.word	0x2400ddfc
 80099c8:	2400e284 	.word	0x2400e284
 80099cc:	2400e2a4 	.word	0x2400e2a4
 80099d0:	2400e2d0 	.word	0x2400e2d0
 80099d4:	2400e2bc 	.word	0x2400e2bc
 80099d8:	2400ddf4 	.word	0x2400ddf4
 80099dc:	2400ddf8 	.word	0x2400ddf8
 80099e0:	2400e268 	.word	0x2400e268
 80099e4:	2400e26c 	.word	0x2400e26c
 80099e8:	2400e2b8 	.word	0x2400e2b8
 80099ec:	2400e270 	.word	0x2400e270

080099f0 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80099f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80099f2:	4b15      	ldr	r3, [pc, #84]	; (8009a48 <prvAddCurrentTaskToDelayedList+0x58>)
{
 80099f4:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099f6:	4d15      	ldr	r5, [pc, #84]	; (8009a4c <prvAddCurrentTaskToDelayedList+0x5c>)
{
 80099f8:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 80099fa:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099fc:	6828      	ldr	r0, [r5, #0]
 80099fe:	3004      	adds	r0, #4
 8009a00:	f7ff f8c5 	bl	8008b8e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009a04:	1c73      	adds	r3, r6, #1
 8009a06:	d107      	bne.n	8009a18 <prvAddCurrentTaskToDelayedList+0x28>
 8009a08:	b137      	cbz	r7, 8009a18 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a0a:	6829      	ldr	r1, [r5, #0]
 8009a0c:	4810      	ldr	r0, [pc, #64]	; (8009a50 <prvAddCurrentTaskToDelayedList+0x60>)
 8009a0e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009a10:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a14:	f7ff b898 	b.w	8008b48 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8009a18:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009a1a:	682b      	ldr	r3, [r5, #0]
 8009a1c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009a1e:	d307      	bcc.n	8009a30 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a20:	4b0c      	ldr	r3, [pc, #48]	; (8009a54 <prvAddCurrentTaskToDelayedList+0x64>)
 8009a22:	6818      	ldr	r0, [r3, #0]
 8009a24:	6829      	ldr	r1, [r5, #0]
}
 8009a26:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a2a:	3104      	adds	r1, #4
 8009a2c:	f7ff b898 	b.w	8008b60 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a30:	4b09      	ldr	r3, [pc, #36]	; (8009a58 <prvAddCurrentTaskToDelayedList+0x68>)
 8009a32:	6818      	ldr	r0, [r3, #0]
 8009a34:	6829      	ldr	r1, [r5, #0]
 8009a36:	3104      	adds	r1, #4
 8009a38:	f7ff f892 	bl	8008b60 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009a3c:	4b07      	ldr	r3, [pc, #28]	; (8009a5c <prvAddCurrentTaskToDelayedList+0x6c>)
 8009a3e:	681a      	ldr	r2, [r3, #0]
 8009a40:	42a2      	cmp	r2, r4
 8009a42:	d900      	bls.n	8009a46 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 8009a44:	601c      	str	r4, [r3, #0]
}
 8009a46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a48:	2400e2e4 	.word	0x2400e2e4
 8009a4c:	2400ddf0 	.word	0x2400ddf0
 8009a50:	2400e2bc 	.word	0x2400e2bc
 8009a54:	2400ddf8 	.word	0x2400ddf8
 8009a58:	2400ddf4 	.word	0x2400ddf4
 8009a5c:	2400e298 	.word	0x2400e298

08009a60 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a60:	4a06      	ldr	r2, [pc, #24]	; (8009a7c <prvResetNextTaskUnblockTime+0x1c>)
 8009a62:	6813      	ldr	r3, [r2, #0]
 8009a64:	6819      	ldr	r1, [r3, #0]
 8009a66:	4b06      	ldr	r3, [pc, #24]	; (8009a80 <prvResetNextTaskUnblockTime+0x20>)
 8009a68:	b919      	cbnz	r1, 8009a72 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a6a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a6e:	601a      	str	r2, [r3, #0]
}
 8009a70:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a72:	6812      	ldr	r2, [r2, #0]
 8009a74:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a76:	68d2      	ldr	r2, [r2, #12]
 8009a78:	6852      	ldr	r2, [r2, #4]
 8009a7a:	e7f8      	b.n	8009a6e <prvResetNextTaskUnblockTime+0xe>
 8009a7c:	2400ddf4 	.word	0x2400ddf4
 8009a80:	2400e298 	.word	0x2400e298

08009a84 <prvDeleteTCB>:
	{
 8009a84:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a86:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8009a8a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a8c:	b93b      	cbnz	r3, 8009a9e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009a8e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009a90:	f7ff f80e 	bl	8008ab0 <vPortFree>
				vPortFree( pxTCB );
 8009a94:	4620      	mov	r0, r4
	}
 8009a96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009a9a:	f7ff b809 	b.w	8008ab0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009a9e:	2b01      	cmp	r3, #1
 8009aa0:	d0f9      	beq.n	8009a96 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009aa2:	2b02      	cmp	r3, #2
 8009aa4:	d008      	beq.n	8009ab8 <prvDeleteTCB+0x34>
 8009aa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aaa:	f383 8811 	msr	BASEPRI, r3
 8009aae:	f3bf 8f6f 	isb	sy
 8009ab2:	f3bf 8f4f 	dsb	sy
 8009ab6:	e7fe      	b.n	8009ab6 <prvDeleteTCB+0x32>
	}
 8009ab8:	bd10      	pop	{r4, pc}
	...

08009abc <prvIdleTask>:
{
 8009abc:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009abe:	4c14      	ldr	r4, [pc, #80]	; (8009b10 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ac0:	4f14      	ldr	r7, [pc, #80]	; (8009b14 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009ac2:	4d15      	ldr	r5, [pc, #84]	; (8009b18 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009ac4:	6823      	ldr	r3, [r4, #0]
 8009ac6:	b983      	cbnz	r3, 8009aea <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009ac8:	4b14      	ldr	r3, [pc, #80]	; (8009b1c <prvIdleTask+0x60>)
 8009aca:	681b      	ldr	r3, [r3, #0]
 8009acc:	2b01      	cmp	r3, #1
 8009ace:	d909      	bls.n	8009ae4 <prvIdleTask+0x28>
				taskYIELD();
 8009ad0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009ad4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ad8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009adc:	f3bf 8f4f 	dsb	sy
 8009ae0:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009ae4:	f7f7 fbd4 	bl	8001290 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8009ae8:	e7eb      	b.n	8009ac2 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009aea:	f7ff f8c3 	bl	8008c74 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009aee:	68fb      	ldr	r3, [r7, #12]
 8009af0:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009af2:	1d30      	adds	r0, r6, #4
 8009af4:	f7ff f84b 	bl	8008b8e <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009af8:	682b      	ldr	r3, [r5, #0]
 8009afa:	3b01      	subs	r3, #1
 8009afc:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009afe:	6823      	ldr	r3, [r4, #0]
 8009b00:	3b01      	subs	r3, #1
 8009b02:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009b04:	f7ff f8d6 	bl	8008cb4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009b08:	4630      	mov	r0, r6
 8009b0a:	f7ff ffbb 	bl	8009a84 <prvDeleteTCB>
 8009b0e:	e7d9      	b.n	8009ac4 <prvIdleTask+0x8>
 8009b10:	2400e260 	.word	0x2400e260
 8009b14:	2400e2d0 	.word	0x2400e2d0
 8009b18:	2400e25c 	.word	0x2400e25c
 8009b1c:	2400ddfc 	.word	0x2400ddfc

08009b20 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b24:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b28:	4606      	mov	r6, r0
 8009b2a:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b2c:	21a5      	movs	r1, #165	; 0xa5
 8009b2e:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b30:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b32:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b36:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b3a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b3c:	f017 fba1 	bl	8021282 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b40:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009b42:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009b44:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8009b48:	b3b5      	cbz	r5, 8009bb8 <prvInitialiseNewTask.constprop.0+0x98>
 8009b4a:	1e6b      	subs	r3, r5, #1
 8009b4c:	f104 0233 	add.w	r2, r4, #51	; 0x33
 8009b50:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b52:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009b56:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8009b5a:	b109      	cbz	r1, 8009b60 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b5c:	42ab      	cmp	r3, r5
 8009b5e:	d1f8      	bne.n	8009b52 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b60:	2300      	movs	r3, #0
 8009b62:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009b66:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 8009b68:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b6c:	1d20      	adds	r0, r4, #4
 8009b6e:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009b70:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 8009b74:	bf28      	it	cs
 8009b76:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 8009b78:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009b7a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b7c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b80:	f7fe ffdf 	bl	8008b42 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b84:	f104 0018 	add.w	r0, r4, #24
 8009b88:	f7fe ffdb 	bl	8008b42 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009b8c:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009b90:	463a      	mov	r2, r7
 8009b92:	4631      	mov	r1, r6
 8009b94:	4648      	mov	r0, r9
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b96:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b98:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b9a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009b9c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009ba0:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009ba4:	f7ff f842 	bl	8008c2c <pxPortInitialiseStack>
 8009ba8:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009baa:	f1b8 0f00 	cmp.w	r8, #0
 8009bae:	d001      	beq.n	8009bb4 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009bb0:	f8c8 4000 	str.w	r4, [r8]
}
 8009bb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009bb8:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009bbc:	e7d3      	b.n	8009b66 <prvInitialiseNewTask.constprop.0+0x46>

08009bbe <xTaskCreateStatic>:
	{
 8009bbe:	b570      	push	{r4, r5, r6, lr}
 8009bc0:	b086      	sub	sp, #24
 8009bc2:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009bc6:	b945      	cbnz	r5, 8009bda <xTaskCreateStatic+0x1c>
 8009bc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bcc:	f383 8811 	msr	BASEPRI, r3
 8009bd0:	f3bf 8f6f 	isb	sy
 8009bd4:	f3bf 8f4f 	dsb	sy
 8009bd8:	e7fe      	b.n	8009bd8 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009bda:	b944      	cbnz	r4, 8009bee <xTaskCreateStatic+0x30>
 8009bdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009be0:	f383 8811 	msr	BASEPRI, r3
 8009be4:	f3bf 8f6f 	isb	sy
 8009be8:	f3bf 8f4f 	dsb	sy
 8009bec:	e7fe      	b.n	8009bec <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009bee:	2660      	movs	r6, #96	; 0x60
 8009bf0:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009bf2:	9e05      	ldr	r6, [sp, #20]
 8009bf4:	2e60      	cmp	r6, #96	; 0x60
 8009bf6:	d008      	beq.n	8009c0a <xTaskCreateStatic+0x4c>
 8009bf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bfc:	f383 8811 	msr	BASEPRI, r3
 8009c00:	f3bf 8f6f 	isb	sy
 8009c04:	f3bf 8f4f 	dsb	sy
 8009c08:	e7fe      	b.n	8009c08 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c0a:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c0c:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c0e:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c10:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c14:	ad04      	add	r5, sp, #16
 8009c16:	9402      	str	r4, [sp, #8]
 8009c18:	9501      	str	r5, [sp, #4]
 8009c1a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009c1c:	9500      	str	r5, [sp, #0]
 8009c1e:	f7ff ff7f 	bl	8009b20 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c22:	4620      	mov	r0, r4
 8009c24:	f7ff fe66 	bl	80098f4 <prvAddNewTaskToReadyList>
	}
 8009c28:	9804      	ldr	r0, [sp, #16]
 8009c2a:	b006      	add	sp, #24
 8009c2c:	bd70      	pop	{r4, r5, r6, pc}

08009c2e <xTaskCreate>:
	{
 8009c2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c32:	4607      	mov	r7, r0
 8009c34:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c36:	0090      	lsls	r0, r2, #2
	{
 8009c38:	4688      	mov	r8, r1
 8009c3a:	4616      	mov	r6, r2
 8009c3c:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c3e:	f7fe fe9f 	bl	8008980 <pvPortMalloc>
			if( pxStack != NULL )
 8009c42:	4605      	mov	r5, r0
 8009c44:	b1e8      	cbz	r0, 8009c82 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c46:	2060      	movs	r0, #96	; 0x60
 8009c48:	f7fe fe9a 	bl	8008980 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009c4c:	4604      	mov	r4, r0
 8009c4e:	b1a8      	cbz	r0, 8009c7c <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c50:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 8009c52:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c54:	4632      	mov	r2, r6
 8009c56:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c58:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009c5e:	9002      	str	r0, [sp, #8]
 8009c60:	4638      	mov	r0, r7
 8009c62:	9301      	str	r3, [sp, #4]
 8009c64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c66:	9300      	str	r3, [sp, #0]
 8009c68:	464b      	mov	r3, r9
 8009c6a:	f7ff ff59 	bl	8009b20 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c6e:	4620      	mov	r0, r4
 8009c70:	f7ff fe40 	bl	80098f4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009c74:	2001      	movs	r0, #1
	}
 8009c76:	b005      	add	sp, #20
 8009c78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009c7c:	4628      	mov	r0, r5
 8009c7e:	f7fe ff17 	bl	8008ab0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c82:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009c86:	e7f6      	b.n	8009c76 <xTaskCreate+0x48>

08009c88 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009c88:	4a02      	ldr	r2, [pc, #8]	; (8009c94 <vTaskSuspendAll+0xc>)
 8009c8a:	6813      	ldr	r3, [r2, #0]
 8009c8c:	3301      	adds	r3, #1
 8009c8e:	6013      	str	r3, [r2, #0]
}
 8009c90:	4770      	bx	lr
 8009c92:	bf00      	nop
 8009c94:	2400e264 	.word	0x2400e264

08009c98 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009c98:	4b01      	ldr	r3, [pc, #4]	; (8009ca0 <xTaskGetTickCount+0x8>)
 8009c9a:	6818      	ldr	r0, [r3, #0]
}
 8009c9c:	4770      	bx	lr
 8009c9e:	bf00      	nop
 8009ca0:	2400e2e4 	.word	0x2400e2e4

08009ca4 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ca4:	4b3f      	ldr	r3, [pc, #252]	; (8009da4 <xTaskIncrementTick+0x100>)
 8009ca6:	681b      	ldr	r3, [r3, #0]
{
 8009ca8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009cac:	2b00      	cmp	r3, #0
 8009cae:	d172      	bne.n	8009d96 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009cb0:	4b3d      	ldr	r3, [pc, #244]	; (8009da8 <xTaskIncrementTick+0x104>)
 8009cb2:	681d      	ldr	r5, [r3, #0]
 8009cb4:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009cb6:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009cb8:	b9bd      	cbnz	r5, 8009cea <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009cba:	4b3c      	ldr	r3, [pc, #240]	; (8009dac <xTaskIncrementTick+0x108>)
 8009cbc:	681a      	ldr	r2, [r3, #0]
 8009cbe:	6812      	ldr	r2, [r2, #0]
 8009cc0:	b142      	cbz	r2, 8009cd4 <xTaskIncrementTick+0x30>
 8009cc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cc6:	f383 8811 	msr	BASEPRI, r3
 8009cca:	f3bf 8f6f 	isb	sy
 8009cce:	f3bf 8f4f 	dsb	sy
 8009cd2:	e7fe      	b.n	8009cd2 <xTaskIncrementTick+0x2e>
 8009cd4:	4a36      	ldr	r2, [pc, #216]	; (8009db0 <xTaskIncrementTick+0x10c>)
 8009cd6:	6819      	ldr	r1, [r3, #0]
 8009cd8:	6810      	ldr	r0, [r2, #0]
 8009cda:	6018      	str	r0, [r3, #0]
 8009cdc:	6011      	str	r1, [r2, #0]
 8009cde:	4a35      	ldr	r2, [pc, #212]	; (8009db4 <xTaskIncrementTick+0x110>)
 8009ce0:	6813      	ldr	r3, [r2, #0]
 8009ce2:	3301      	adds	r3, #1
 8009ce4:	6013      	str	r3, [r2, #0]
 8009ce6:	f7ff febb 	bl	8009a60 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009cea:	4e33      	ldr	r6, [pc, #204]	; (8009db8 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
 8009cec:	2400      	movs	r4, #0
 8009cee:	4f33      	ldr	r7, [pc, #204]	; (8009dbc <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009cf0:	6833      	ldr	r3, [r6, #0]
 8009cf2:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009dc8 <xTaskIncrementTick+0x124>
 8009cf6:	429d      	cmp	r5, r3
 8009cf8:	d211      	bcs.n	8009d1e <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009cfa:	f8d8 3000 	ldr.w	r3, [r8]
 8009cfe:	2214      	movs	r2, #20
 8009d00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d02:	4353      	muls	r3, r2
 8009d04:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009d06:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8009d08:	4b2d      	ldr	r3, [pc, #180]	; (8009dc0 <xTaskIncrementTick+0x11c>)
 8009d0a:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8009d0c:	bf28      	it	cs
 8009d0e:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8009d10:	2b00      	cmp	r3, #0
 8009d12:	bf18      	it	ne
 8009d14:	2401      	movne	r4, #1
}
 8009d16:	4620      	mov	r0, r4
 8009d18:	b003      	add	sp, #12
 8009d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d1e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8009dac <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009d22:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 8009dcc <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009d26:	f8d9 3000 	ldr.w	r3, [r9]
 8009d2a:	681b      	ldr	r3, [r3, #0]
 8009d2c:	b91b      	cbnz	r3, 8009d36 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d2e:	f04f 33ff 	mov.w	r3, #4294967295
 8009d32:	6033      	str	r3, [r6, #0]
					break;
 8009d34:	e7e1      	b.n	8009cfa <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d36:	f8d9 3000 	ldr.w	r3, [r9]
 8009d3a:	68db      	ldr	r3, [r3, #12]
 8009d3c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009d40:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009d44:	4295      	cmp	r5, r2
 8009d46:	d201      	bcs.n	8009d4c <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
 8009d48:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009d4a:	e7d6      	b.n	8009cfa <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009d4c:	f10b 0104 	add.w	r1, fp, #4
 8009d50:	4608      	mov	r0, r1
 8009d52:	9101      	str	r1, [sp, #4]
 8009d54:	f7fe ff1b 	bl	8008b8e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009d58:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009d5c:	9901      	ldr	r1, [sp, #4]
 8009d5e:	b122      	cbz	r2, 8009d6a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009d60:	f10b 0018 	add.w	r0, fp, #24
 8009d64:	f7fe ff13 	bl	8008b8e <uxListRemove>
 8009d68:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009d6a:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009d6e:	f8da 2000 	ldr.w	r2, [sl]
 8009d72:	4290      	cmp	r0, r2
 8009d74:	d901      	bls.n	8009d7a <xTaskIncrementTick+0xd6>
 8009d76:	f8ca 0000 	str.w	r0, [sl]
 8009d7a:	2314      	movs	r3, #20
 8009d7c:	fb03 7000 	mla	r0, r3, r0, r7
 8009d80:	f7fe fee2 	bl	8008b48 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009d84:	f8d8 1000 	ldr.w	r1, [r8]
 8009d88:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009d8c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009d8e:	429a      	cmp	r2, r3
 8009d90:	bf28      	it	cs
 8009d92:	2401      	movcs	r4, #1
 8009d94:	e7c7      	b.n	8009d26 <xTaskIncrementTick+0x82>
		++xPendedTicks;
 8009d96:	4a0b      	ldr	r2, [pc, #44]	; (8009dc4 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
 8009d98:	2400      	movs	r4, #0
		++xPendedTicks;
 8009d9a:	6813      	ldr	r3, [r2, #0]
 8009d9c:	3301      	adds	r3, #1
 8009d9e:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
 8009da0:	e7b9      	b.n	8009d16 <xTaskIncrementTick+0x72>
 8009da2:	bf00      	nop
 8009da4:	2400e264 	.word	0x2400e264
 8009da8:	2400e2e4 	.word	0x2400e2e4
 8009dac:	2400ddf4 	.word	0x2400ddf4
 8009db0:	2400ddf8 	.word	0x2400ddf8
 8009db4:	2400e29c 	.word	0x2400e29c
 8009db8:	2400e298 	.word	0x2400e298
 8009dbc:	2400ddfc 	.word	0x2400ddfc
 8009dc0:	2400e2e8 	.word	0x2400e2e8
 8009dc4:	2400e2a0 	.word	0x2400e2a0
 8009dc8:	2400ddf0 	.word	0x2400ddf0
 8009dcc:	2400e26c 	.word	0x2400e26c

08009dd0 <xTaskResumeAll>:
{
 8009dd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009dd2:	4c31      	ldr	r4, [pc, #196]	; (8009e98 <xTaskResumeAll+0xc8>)
 8009dd4:	6823      	ldr	r3, [r4, #0]
 8009dd6:	b943      	cbnz	r3, 8009dea <xTaskResumeAll+0x1a>
 8009dd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ddc:	f383 8811 	msr	BASEPRI, r3
 8009de0:	f3bf 8f6f 	isb	sy
 8009de4:	f3bf 8f4f 	dsb	sy
 8009de8:	e7fe      	b.n	8009de8 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009dea:	f7fe ff43 	bl	8008c74 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009dee:	6823      	ldr	r3, [r4, #0]
 8009df0:	3b01      	subs	r3, #1
 8009df2:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009df4:	6824      	ldr	r4, [r4, #0]
 8009df6:	b12c      	cbz	r4, 8009e04 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009df8:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009dfa:	f7fe ff5b 	bl	8008cb4 <vPortExitCritical>
}
 8009dfe:	4620      	mov	r0, r4
 8009e00:	b003      	add	sp, #12
 8009e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009e04:	4b25      	ldr	r3, [pc, #148]	; (8009e9c <xTaskResumeAll+0xcc>)
 8009e06:	681b      	ldr	r3, [r3, #0]
 8009e08:	2b00      	cmp	r3, #0
 8009e0a:	d0f5      	beq.n	8009df8 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009e0c:	4d24      	ldr	r5, [pc, #144]	; (8009ea0 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009e0e:	4e25      	ldr	r6, [pc, #148]	; (8009ea4 <xTaskResumeAll+0xd4>)
 8009e10:	4f25      	ldr	r7, [pc, #148]	; (8009ea8 <xTaskResumeAll+0xd8>)
 8009e12:	e01e      	b.n	8009e52 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e14:	68eb      	ldr	r3, [r5, #12]
 8009e16:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009e18:	f104 0018 	add.w	r0, r4, #24
 8009e1c:	f7fe feb7 	bl	8008b8e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009e20:	1d21      	adds	r1, r4, #4
 8009e22:	4608      	mov	r0, r1
 8009e24:	9101      	str	r1, [sp, #4]
 8009e26:	f7fe feb2 	bl	8008b8e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009e2a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009e2c:	6832      	ldr	r2, [r6, #0]
 8009e2e:	9901      	ldr	r1, [sp, #4]
 8009e30:	4293      	cmp	r3, r2
 8009e32:	d900      	bls.n	8009e36 <xTaskResumeAll+0x66>
 8009e34:	6033      	str	r3, [r6, #0]
 8009e36:	2014      	movs	r0, #20
 8009e38:	fb00 7003 	mla	r0, r0, r3, r7
 8009e3c:	f7fe fe84 	bl	8008b48 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e40:	4b1a      	ldr	r3, [pc, #104]	; (8009eac <xTaskResumeAll+0xdc>)
 8009e42:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009e44:	681b      	ldr	r3, [r3, #0]
 8009e46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e48:	429a      	cmp	r2, r3
 8009e4a:	d302      	bcc.n	8009e52 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009e4c:	4b18      	ldr	r3, [pc, #96]	; (8009eb0 <xTaskResumeAll+0xe0>)
 8009e4e:	2201      	movs	r2, #1
 8009e50:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009e52:	682b      	ldr	r3, [r5, #0]
 8009e54:	2b00      	cmp	r3, #0
 8009e56:	d1dd      	bne.n	8009e14 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009e58:	b10c      	cbz	r4, 8009e5e <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009e5a:	f7ff fe01 	bl	8009a60 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009e5e:	4d15      	ldr	r5, [pc, #84]	; (8009eb4 <xTaskResumeAll+0xe4>)
 8009e60:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8009e62:	b144      	cbz	r4, 8009e76 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009e64:	4e12      	ldr	r6, [pc, #72]	; (8009eb0 <xTaskResumeAll+0xe0>)
 8009e66:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009e68:	f7ff ff1c 	bl	8009ca4 <xTaskIncrementTick>
 8009e6c:	b100      	cbz	r0, 8009e70 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009e6e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8009e70:	3c01      	subs	r4, #1
 8009e72:	d1f9      	bne.n	8009e68 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8009e74:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009e76:	4b0e      	ldr	r3, [pc, #56]	; (8009eb0 <xTaskResumeAll+0xe0>)
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	2b00      	cmp	r3, #0
 8009e7c:	d0bc      	beq.n	8009df8 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009e7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e8a:	f3bf 8f4f 	dsb	sy
 8009e8e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009e92:	2401      	movs	r4, #1
 8009e94:	e7b1      	b.n	8009dfa <xTaskResumeAll+0x2a>
 8009e96:	bf00      	nop
 8009e98:	2400e264 	.word	0x2400e264
 8009e9c:	2400e25c 	.word	0x2400e25c
 8009ea0:	2400e2a4 	.word	0x2400e2a4
 8009ea4:	2400e26c 	.word	0x2400e26c
 8009ea8:	2400ddfc 	.word	0x2400ddfc
 8009eac:	2400ddf0 	.word	0x2400ddf0
 8009eb0:	2400e2e8 	.word	0x2400e2e8
 8009eb4:	2400e2a0 	.word	0x2400e2a0

08009eb8 <vTaskDelay>:
	{
 8009eb8:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009eba:	b950      	cbnz	r0, 8009ed2 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009ebc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009ec0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ec4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009ec8:	f3bf 8f4f 	dsb	sy
 8009ecc:	f3bf 8f6f 	isb	sy
	}
 8009ed0:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009ed2:	4b0a      	ldr	r3, [pc, #40]	; (8009efc <vTaskDelay+0x44>)
 8009ed4:	6819      	ldr	r1, [r3, #0]
 8009ed6:	b141      	cbz	r1, 8009eea <vTaskDelay+0x32>
 8009ed8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009edc:	f383 8811 	msr	BASEPRI, r3
 8009ee0:	f3bf 8f6f 	isb	sy
 8009ee4:	f3bf 8f4f 	dsb	sy
 8009ee8:	e7fe      	b.n	8009ee8 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009eea:	f7ff fecd 	bl	8009c88 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009eee:	f7ff fd7f 	bl	80099f0 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009ef2:	f7ff ff6d 	bl	8009dd0 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009ef6:	2800      	cmp	r0, #0
 8009ef8:	d0e0      	beq.n	8009ebc <vTaskDelay+0x4>
 8009efa:	e7e9      	b.n	8009ed0 <vTaskDelay+0x18>
 8009efc:	2400e264 	.word	0x2400e264

08009f00 <vTaskSetApplicationTaskTag>:
	{
 8009f00:	b538      	push	{r3, r4, r5, lr}
 8009f02:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009f04:	4604      	mov	r4, r0
 8009f06:	b908      	cbnz	r0, 8009f0c <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009f08:	4b04      	ldr	r3, [pc, #16]	; (8009f1c <vTaskSetApplicationTaskTag+0x1c>)
 8009f0a:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009f0c:	f7fe feb2 	bl	8008c74 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009f10:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8009f12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009f16:	f7fe becd 	b.w	8008cb4 <vPortExitCritical>
 8009f1a:	bf00      	nop
 8009f1c:	2400ddf0 	.word	0x2400ddf0

08009f20 <xTaskCallApplicationTaskHook>:
	{
 8009f20:	4603      	mov	r3, r0
 8009f22:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009f24:	b90b      	cbnz	r3, 8009f2a <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009f26:	4b03      	ldr	r3, [pc, #12]	; (8009f34 <xTaskCallApplicationTaskHook+0x14>)
 8009f28:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009f2a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009f2c:	b103      	cbz	r3, 8009f30 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8009f2e:	4718      	bx	r3
	}
 8009f30:	4618      	mov	r0, r3
 8009f32:	4770      	bx	lr
 8009f34:	2400ddf0 	.word	0x2400ddf0

08009f38 <vTaskStartScheduler>:
{
 8009f38:	b510      	push	{r4, lr}
 8009f3a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009f3c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009f3e:	aa07      	add	r2, sp, #28
 8009f40:	a906      	add	r1, sp, #24
 8009f42:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009f44:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009f48:	f7fe fcdc 	bl	8008904 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009f4c:	9b05      	ldr	r3, [sp, #20]
 8009f4e:	9a07      	ldr	r2, [sp, #28]
 8009f50:	9302      	str	r3, [sp, #8]
 8009f52:	9b06      	ldr	r3, [sp, #24]
 8009f54:	4919      	ldr	r1, [pc, #100]	; (8009fbc <vTaskStartScheduler+0x84>)
 8009f56:	481a      	ldr	r0, [pc, #104]	; (8009fc0 <vTaskStartScheduler+0x88>)
 8009f58:	e9cd 4300 	strd	r4, r3, [sp]
 8009f5c:	4623      	mov	r3, r4
 8009f5e:	f7ff fe2e 	bl	8009bbe <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009f62:	b340      	cbz	r0, 8009fb6 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009f64:	f000 fa88 	bl	800a478 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009f68:	2801      	cmp	r0, #1
 8009f6a:	d119      	bne.n	8009fa0 <vTaskStartScheduler+0x68>
 8009f6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f70:	f383 8811 	msr	BASEPRI, r3
 8009f74:	f3bf 8f6f 	isb	sy
 8009f78:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009f7c:	f04f 32ff 	mov.w	r2, #4294967295
 8009f80:	4b10      	ldr	r3, [pc, #64]	; (8009fc4 <vTaskStartScheduler+0x8c>)
		traceTASK_SWITCHED_IN();
 8009f82:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 8009f84:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009f86:	4b10      	ldr	r3, [pc, #64]	; (8009fc8 <vTaskStartScheduler+0x90>)
 8009f88:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009f8a:	4b10      	ldr	r3, [pc, #64]	; (8009fcc <vTaskStartScheduler+0x94>)
 8009f8c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009f8e:	4b10      	ldr	r3, [pc, #64]	; (8009fd0 <vTaskStartScheduler+0x98>)
 8009f90:	6818      	ldr	r0, [r3, #0]
 8009f92:	f7ff ffc5 	bl	8009f20 <xTaskCallApplicationTaskHook>
}
 8009f96:	b008      	add	sp, #32
 8009f98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009f9c:	f7fe befa 	b.w	8008d94 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009fa0:	3001      	adds	r0, #1
 8009fa2:	d108      	bne.n	8009fb6 <vTaskStartScheduler+0x7e>
 8009fa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fa8:	f383 8811 	msr	BASEPRI, r3
 8009fac:	f3bf 8f6f 	isb	sy
 8009fb0:	f3bf 8f4f 	dsb	sy
 8009fb4:	e7fe      	b.n	8009fb4 <vTaskStartScheduler+0x7c>
}
 8009fb6:	b008      	add	sp, #32
 8009fb8:	bd10      	pop	{r4, pc}
 8009fba:	bf00      	nop
 8009fbc:	080232c7 	.word	0x080232c7
 8009fc0:	08009abd 	.word	0x08009abd
 8009fc4:	2400e298 	.word	0x2400e298
 8009fc8:	2400e2b8 	.word	0x2400e2b8
 8009fcc:	2400e2e4 	.word	0x2400e2e4
 8009fd0:	2400ddf0 	.word	0x2400ddf0

08009fd4 <vTaskSwitchContext>:
{
 8009fd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fd6:	4b1c      	ldr	r3, [pc, #112]	; (800a048 <vTaskSwitchContext+0x74>)
 8009fd8:	681a      	ldr	r2, [r3, #0]
 8009fda:	4b1c      	ldr	r3, [pc, #112]	; (800a04c <vTaskSwitchContext+0x78>)
 8009fdc:	b112      	cbz	r2, 8009fe4 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009fde:	2201      	movs	r2, #1
 8009fe0:	601a      	str	r2, [r3, #0]
}
 8009fe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009fe4:	4c1a      	ldr	r4, [pc, #104]	; (800a050 <vTaskSwitchContext+0x7c>)
 8009fe6:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fe8:	4e1a      	ldr	r6, [pc, #104]	; (800a054 <vTaskSwitchContext+0x80>)
 8009fea:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 8009fec:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8009fee:	6820      	ldr	r0, [r4, #0]
 8009ff0:	f7ff ff96 	bl	8009f20 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ff4:	6832      	ldr	r2, [r6, #0]
 8009ff6:	4918      	ldr	r1, [pc, #96]	; (800a058 <vTaskSwitchContext+0x84>)
 8009ff8:	fb07 f302 	mul.w	r3, r7, r2
 8009ffc:	58cd      	ldr	r5, [r1, r3]
 8009ffe:	18c8      	adds	r0, r1, r3
 800a000:	b1ad      	cbz	r5, 800a02e <vTaskSwitchContext+0x5a>
 800a002:	6845      	ldr	r5, [r0, #4]
 800a004:	3308      	adds	r3, #8
 800a006:	686d      	ldr	r5, [r5, #4]
 800a008:	440b      	add	r3, r1
 800a00a:	429d      	cmp	r5, r3
 800a00c:	6045      	str	r5, [r0, #4]
 800a00e:	bf04      	itt	eq
 800a010:	686b      	ldreq	r3, [r5, #4]
 800a012:	6043      	streq	r3, [r0, #4]
 800a014:	2314      	movs	r3, #20
 800a016:	fb03 1102 	mla	r1, r3, r2, r1
 800a01a:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 800a01c:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a01e:	68db      	ldr	r3, [r3, #12]
 800a020:	6023      	str	r3, [r4, #0]
 800a022:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800a024:	6820      	ldr	r0, [r4, #0]
}
 800a026:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800a02a:	f7ff bf79 	b.w	8009f20 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a02e:	b942      	cbnz	r2, 800a042 <vTaskSwitchContext+0x6e>
 800a030:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a034:	f383 8811 	msr	BASEPRI, r3
 800a038:	f3bf 8f6f 	isb	sy
 800a03c:	f3bf 8f4f 	dsb	sy
 800a040:	e7fe      	b.n	800a040 <vTaskSwitchContext+0x6c>
 800a042:	3a01      	subs	r2, #1
 800a044:	e7d8      	b.n	8009ff8 <vTaskSwitchContext+0x24>
 800a046:	bf00      	nop
 800a048:	2400e264 	.word	0x2400e264
 800a04c:	2400e2e8 	.word	0x2400e2e8
 800a050:	2400ddf0 	.word	0x2400ddf0
 800a054:	2400e26c 	.word	0x2400e26c
 800a058:	2400ddfc 	.word	0x2400ddfc

0800a05c <vTaskPlaceOnEventList>:
{
 800a05c:	b510      	push	{r4, lr}
 800a05e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a060:	b940      	cbnz	r0, 800a074 <vTaskPlaceOnEventList+0x18>
 800a062:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a066:	f383 8811 	msr	BASEPRI, r3
 800a06a:	f3bf 8f6f 	isb	sy
 800a06e:	f3bf 8f4f 	dsb	sy
 800a072:	e7fe      	b.n	800a072 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a074:	4b05      	ldr	r3, [pc, #20]	; (800a08c <vTaskPlaceOnEventList+0x30>)
 800a076:	6819      	ldr	r1, [r3, #0]
 800a078:	3118      	adds	r1, #24
 800a07a:	f7fe fd71 	bl	8008b60 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a07e:	4620      	mov	r0, r4
 800a080:	2101      	movs	r1, #1
}
 800a082:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a086:	f7ff bcb3 	b.w	80099f0 <prvAddCurrentTaskToDelayedList>
 800a08a:	bf00      	nop
 800a08c:	2400ddf0 	.word	0x2400ddf0

0800a090 <vTaskPlaceOnEventListRestricted>:
	{
 800a090:	b538      	push	{r3, r4, r5, lr}
 800a092:	460d      	mov	r5, r1
 800a094:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a096:	b940      	cbnz	r0, 800a0aa <vTaskPlaceOnEventListRestricted+0x1a>
 800a098:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a09c:	f383 8811 	msr	BASEPRI, r3
 800a0a0:	f3bf 8f6f 	isb	sy
 800a0a4:	f3bf 8f4f 	dsb	sy
 800a0a8:	e7fe      	b.n	800a0a8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0aa:	4b07      	ldr	r3, [pc, #28]	; (800a0c8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a0ac:	6819      	ldr	r1, [r3, #0]
 800a0ae:	3118      	adds	r1, #24
 800a0b0:	f7fe fd4a 	bl	8008b48 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a0b4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0b6:	4621      	mov	r1, r4
 800a0b8:	bf0c      	ite	eq
 800a0ba:	4628      	moveq	r0, r5
 800a0bc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a0c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0c4:	f7ff bc94 	b.w	80099f0 <prvAddCurrentTaskToDelayedList>
 800a0c8:	2400ddf0 	.word	0x2400ddf0

0800a0cc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0cc:	68c3      	ldr	r3, [r0, #12]
{
 800a0ce:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0d0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a0d2:	b944      	cbnz	r4, 800a0e6 <xTaskRemoveFromEventList+0x1a>
 800a0d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0d8:	f383 8811 	msr	BASEPRI, r3
 800a0dc:	f3bf 8f6f 	isb	sy
 800a0e0:	f3bf 8f4f 	dsb	sy
 800a0e4:	e7fe      	b.n	800a0e4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a0e6:	f104 0118 	add.w	r1, r4, #24
 800a0ea:	4608      	mov	r0, r1
 800a0ec:	9101      	str	r1, [sp, #4]
 800a0ee:	f7fe fd4e 	bl	8008b8e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0f2:	4b12      	ldr	r3, [pc, #72]	; (800a13c <xTaskRemoveFromEventList+0x70>)
 800a0f4:	9901      	ldr	r1, [sp, #4]
 800a0f6:	681b      	ldr	r3, [r3, #0]
 800a0f8:	b9e3      	cbnz	r3, 800a134 <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a0fa:	1d21      	adds	r1, r4, #4
 800a0fc:	4608      	mov	r0, r1
 800a0fe:	9101      	str	r1, [sp, #4]
 800a100:	f7fe fd45 	bl	8008b8e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a104:	4a0e      	ldr	r2, [pc, #56]	; (800a140 <xTaskRemoveFromEventList+0x74>)
 800a106:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a108:	6810      	ldr	r0, [r2, #0]
 800a10a:	9901      	ldr	r1, [sp, #4]
 800a10c:	4283      	cmp	r3, r0
 800a10e:	d900      	bls.n	800a112 <xTaskRemoveFromEventList+0x46>
 800a110:	6013      	str	r3, [r2, #0]
 800a112:	4a0c      	ldr	r2, [pc, #48]	; (800a144 <xTaskRemoveFromEventList+0x78>)
 800a114:	2014      	movs	r0, #20
 800a116:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a11a:	f7fe fd15 	bl	8008b48 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a11e:	4b0a      	ldr	r3, [pc, #40]	; (800a148 <xTaskRemoveFromEventList+0x7c>)
 800a120:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a122:	681b      	ldr	r3, [r3, #0]
 800a124:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a126:	429a      	cmp	r2, r3
 800a128:	d906      	bls.n	800a138 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
 800a12a:	2001      	movs	r0, #1
 800a12c:	4b07      	ldr	r3, [pc, #28]	; (800a14c <xTaskRemoveFromEventList+0x80>)
 800a12e:	6018      	str	r0, [r3, #0]
}
 800a130:	b002      	add	sp, #8
 800a132:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a134:	4806      	ldr	r0, [pc, #24]	; (800a150 <xTaskRemoveFromEventList+0x84>)
 800a136:	e7f0      	b.n	800a11a <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
 800a138:	2000      	movs	r0, #0
	return xReturn;
 800a13a:	e7f9      	b.n	800a130 <xTaskRemoveFromEventList+0x64>
 800a13c:	2400e264 	.word	0x2400e264
 800a140:	2400e26c 	.word	0x2400e26c
 800a144:	2400ddfc 	.word	0x2400ddfc
 800a148:	2400ddf0 	.word	0x2400ddf0
 800a14c:	2400e2e8 	.word	0x2400e2e8
 800a150:	2400e2a4 	.word	0x2400e2a4

0800a154 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a154:	4b03      	ldr	r3, [pc, #12]	; (800a164 <vTaskInternalSetTimeOutState+0x10>)
 800a156:	681b      	ldr	r3, [r3, #0]
 800a158:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a15a:	4b03      	ldr	r3, [pc, #12]	; (800a168 <vTaskInternalSetTimeOutState+0x14>)
 800a15c:	681b      	ldr	r3, [r3, #0]
 800a15e:	6043      	str	r3, [r0, #4]
}
 800a160:	4770      	bx	lr
 800a162:	bf00      	nop
 800a164:	2400e29c 	.word	0x2400e29c
 800a168:	2400e2e4 	.word	0x2400e2e4

0800a16c <xTaskCheckForTimeOut>:
{
 800a16c:	b570      	push	{r4, r5, r6, lr}
 800a16e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a170:	4605      	mov	r5, r0
 800a172:	b940      	cbnz	r0, 800a186 <xTaskCheckForTimeOut+0x1a>
 800a174:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a178:	f383 8811 	msr	BASEPRI, r3
 800a17c:	f3bf 8f6f 	isb	sy
 800a180:	f3bf 8f4f 	dsb	sy
 800a184:	e7fe      	b.n	800a184 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a186:	b941      	cbnz	r1, 800a19a <xTaskCheckForTimeOut+0x2e>
 800a188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a18c:	f383 8811 	msr	BASEPRI, r3
 800a190:	f3bf 8f6f 	isb	sy
 800a194:	f3bf 8f4f 	dsb	sy
 800a198:	e7fe      	b.n	800a198 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a19a:	f7fe fd6b 	bl	8008c74 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a19e:	4b0f      	ldr	r3, [pc, #60]	; (800a1dc <xTaskCheckForTimeOut+0x70>)
 800a1a0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a1a2:	6823      	ldr	r3, [r4, #0]
 800a1a4:	1c5a      	adds	r2, r3, #1
 800a1a6:	d010      	beq.n	800a1ca <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1a8:	480d      	ldr	r0, [pc, #52]	; (800a1e0 <xTaskCheckForTimeOut+0x74>)
 800a1aa:	682e      	ldr	r6, [r5, #0]
 800a1ac:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1ae:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1b0:	4286      	cmp	r6, r0
 800a1b2:	d001      	beq.n	800a1b8 <xTaskCheckForTimeOut+0x4c>
 800a1b4:	428a      	cmp	r2, r1
 800a1b6:	d90f      	bls.n	800a1d8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1b8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a1ba:	4283      	cmp	r3, r0
 800a1bc:	d90a      	bls.n	800a1d4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a1be:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a1c0:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 800a1c2:	4413      	add	r3, r2
 800a1c4:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a1c6:	f7ff ffc5 	bl	800a154 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a1ca:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a1cc:	f7fe fd72 	bl	8008cb4 <vPortExitCritical>
}
 800a1d0:	4620      	mov	r0, r4
 800a1d2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a1d4:	2300      	movs	r3, #0
 800a1d6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a1d8:	2401      	movs	r4, #1
 800a1da:	e7f7      	b.n	800a1cc <xTaskCheckForTimeOut+0x60>
 800a1dc:	2400e2e4 	.word	0x2400e2e4
 800a1e0:	2400e29c 	.word	0x2400e29c

0800a1e4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a1e4:	4b01      	ldr	r3, [pc, #4]	; (800a1ec <vTaskMissedYield+0x8>)
 800a1e6:	2201      	movs	r2, #1
 800a1e8:	601a      	str	r2, [r3, #0]
}
 800a1ea:	4770      	bx	lr
 800a1ec:	2400e2e8 	.word	0x2400e2e8

0800a1f0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a1f0:	4b05      	ldr	r3, [pc, #20]	; (800a208 <xTaskGetSchedulerState+0x18>)
 800a1f2:	681b      	ldr	r3, [r3, #0]
 800a1f4:	b133      	cbz	r3, 800a204 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1f6:	4b05      	ldr	r3, [pc, #20]	; (800a20c <xTaskGetSchedulerState+0x1c>)
 800a1f8:	6818      	ldr	r0, [r3, #0]
 800a1fa:	fab0 f080 	clz	r0, r0
 800a1fe:	0940      	lsrs	r0, r0, #5
 800a200:	0040      	lsls	r0, r0, #1
 800a202:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a204:	2001      	movs	r0, #1
	}
 800a206:	4770      	bx	lr
 800a208:	2400e2b8 	.word	0x2400e2b8
 800a20c:	2400e264 	.word	0x2400e264

0800a210 <xTaskPriorityInherit>:
	{
 800a210:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a212:	4604      	mov	r4, r0
 800a214:	b340      	cbz	r0, 800a268 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a216:	4d1b      	ldr	r5, [pc, #108]	; (800a284 <xTaskPriorityInherit+0x74>)
 800a218:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a21a:	682a      	ldr	r2, [r5, #0]
 800a21c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a21e:	4293      	cmp	r3, r2
 800a220:	d228      	bcs.n	800a274 <xTaskPriorityInherit+0x64>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a222:	6982      	ldr	r2, [r0, #24]
 800a224:	2a00      	cmp	r2, #0
 800a226:	db04      	blt.n	800a232 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a228:	682a      	ldr	r2, [r5, #0]
 800a22a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a22c:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800a230:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a232:	2214      	movs	r2, #20
 800a234:	4e14      	ldr	r6, [pc, #80]	; (800a288 <xTaskPriorityInherit+0x78>)
 800a236:	fb02 6303 	mla	r3, r2, r3, r6
 800a23a:	6962      	ldr	r2, [r4, #20]
 800a23c:	429a      	cmp	r2, r3
 800a23e:	d115      	bne.n	800a26c <xTaskPriorityInherit+0x5c>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a240:	1d21      	adds	r1, r4, #4
 800a242:	4608      	mov	r0, r1
 800a244:	9101      	str	r1, [sp, #4]
 800a246:	f7fe fca2 	bl	8008b8e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a24a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a24c:	4a0f      	ldr	r2, [pc, #60]	; (800a28c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a24e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a250:	6810      	ldr	r0, [r2, #0]
 800a252:	9901      	ldr	r1, [sp, #4]
 800a254:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a256:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a258:	d900      	bls.n	800a25c <xTaskPriorityInherit+0x4c>
 800a25a:	6013      	str	r3, [r2, #0]
 800a25c:	2014      	movs	r0, #20
 800a25e:	fb00 6003 	mla	r0, r0, r3, r6
 800a262:	f7fe fc71 	bl	8008b48 <vListInsertEnd>
				xReturn = pdTRUE;
 800a266:	2001      	movs	r0, #1
	}
 800a268:	b002      	add	sp, #8
 800a26a:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a26c:	682b      	ldr	r3, [r5, #0]
 800a26e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a270:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a272:	e7f8      	b.n	800a266 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a274:	682b      	ldr	r3, [r5, #0]
 800a276:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a27a:	4298      	cmp	r0, r3
 800a27c:	bf2c      	ite	cs
 800a27e:	2000      	movcs	r0, #0
 800a280:	2001      	movcc	r0, #1
 800a282:	e7f1      	b.n	800a268 <xTaskPriorityInherit+0x58>
 800a284:	2400ddf0 	.word	0x2400ddf0
 800a288:	2400ddfc 	.word	0x2400ddfc
 800a28c:	2400e26c 	.word	0x2400e26c

0800a290 <xTaskPriorityDisinherit>:
	{
 800a290:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a292:	b910      	cbnz	r0, 800a29a <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a294:	2000      	movs	r0, #0
	}
 800a296:	b002      	add	sp, #8
 800a298:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a29a:	4b1c      	ldr	r3, [pc, #112]	; (800a30c <xTaskPriorityDisinherit+0x7c>)
 800a29c:	681c      	ldr	r4, [r3, #0]
 800a29e:	4284      	cmp	r4, r0
 800a2a0:	d008      	beq.n	800a2b4 <xTaskPriorityDisinherit+0x24>
 800a2a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2a6:	f383 8811 	msr	BASEPRI, r3
 800a2aa:	f3bf 8f6f 	isb	sy
 800a2ae:	f3bf 8f4f 	dsb	sy
 800a2b2:	e7fe      	b.n	800a2b2 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2b4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a2b6:	b943      	cbnz	r3, 800a2ca <xTaskPriorityDisinherit+0x3a>
 800a2b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2bc:	f383 8811 	msr	BASEPRI, r3
 800a2c0:	f3bf 8f6f 	isb	sy
 800a2c4:	f3bf 8f4f 	dsb	sy
 800a2c8:	e7fe      	b.n	800a2c8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2ca:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 800a2cc:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2ce:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a2d0:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2d2:	4291      	cmp	r1, r2
 800a2d4:	d0de      	beq.n	800a294 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a2d6:	2b00      	cmp	r3, #0
 800a2d8:	d1dc      	bne.n	800a294 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2da:	1d21      	adds	r1, r4, #4
 800a2dc:	4608      	mov	r0, r1
 800a2de:	9101      	str	r1, [sp, #4]
 800a2e0:	f7fe fc55 	bl	8008b8e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2e4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a2e6:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2e8:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2ec:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2ee:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a2f0:	4a07      	ldr	r2, [pc, #28]	; (800a310 <xTaskPriorityDisinherit+0x80>)
 800a2f2:	6810      	ldr	r0, [r2, #0]
 800a2f4:	4283      	cmp	r3, r0
 800a2f6:	d900      	bls.n	800a2fa <xTaskPriorityDisinherit+0x6a>
 800a2f8:	6013      	str	r3, [r2, #0]
 800a2fa:	4a06      	ldr	r2, [pc, #24]	; (800a314 <xTaskPriorityDisinherit+0x84>)
 800a2fc:	2014      	movs	r0, #20
 800a2fe:	fb00 2003 	mla	r0, r0, r3, r2
 800a302:	f7fe fc21 	bl	8008b48 <vListInsertEnd>
					xReturn = pdTRUE;
 800a306:	2001      	movs	r0, #1
		return xReturn;
 800a308:	e7c5      	b.n	800a296 <xTaskPriorityDisinherit+0x6>
 800a30a:	bf00      	nop
 800a30c:	2400ddf0 	.word	0x2400ddf0
 800a310:	2400e26c 	.word	0x2400e26c
 800a314:	2400ddfc 	.word	0x2400ddfc

0800a318 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a318:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a31a:	4604      	mov	r4, r0
 800a31c:	2800      	cmp	r0, #0
 800a31e:	d044      	beq.n	800a3aa <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a320:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a322:	b942      	cbnz	r2, 800a336 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a324:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a328:	f383 8811 	msr	BASEPRI, r3
 800a32c:	f3bf 8f6f 	isb	sy
 800a330:	f3bf 8f4f 	dsb	sy
 800a334:	e7fe      	b.n	800a334 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a336:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a338:	4299      	cmp	r1, r3
 800a33a:	bf38      	it	cc
 800a33c:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a33e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a340:	428b      	cmp	r3, r1
 800a342:	d032      	beq.n	800a3aa <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a344:	2a01      	cmp	r2, #1
 800a346:	d130      	bne.n	800a3aa <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a348:	4a19      	ldr	r2, [pc, #100]	; (800a3b0 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a34a:	6812      	ldr	r2, [r2, #0]
 800a34c:	4282      	cmp	r2, r0
 800a34e:	d108      	bne.n	800a362 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a350:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a354:	f383 8811 	msr	BASEPRI, r3
 800a358:	f3bf 8f6f 	isb	sy
 800a35c:	f3bf 8f4f 	dsb	sy
 800a360:	e7fe      	b.n	800a360 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a362:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a364:	4d13      	ldr	r5, [pc, #76]	; (800a3b4 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a366:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a368:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800a36c:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a36e:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a372:	bfa8      	it	ge
 800a374:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a378:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a37a:	bfa8      	it	ge
 800a37c:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a37e:	429a      	cmp	r2, r3
 800a380:	d113      	bne.n	800a3aa <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a382:	1d01      	adds	r1, r0, #4
 800a384:	4608      	mov	r0, r1
 800a386:	9101      	str	r1, [sp, #4]
 800a388:	f7fe fc01 	bl	8008b8e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a38c:	4a0a      	ldr	r2, [pc, #40]	; (800a3b8 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a38e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a390:	6810      	ldr	r0, [r2, #0]
 800a392:	9901      	ldr	r1, [sp, #4]
 800a394:	4283      	cmp	r3, r0
 800a396:	d900      	bls.n	800a39a <vTaskPriorityDisinheritAfterTimeout+0x82>
 800a398:	6013      	str	r3, [r2, #0]
 800a39a:	2014      	movs	r0, #20
 800a39c:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800a3a0:	b003      	add	sp, #12
 800a3a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a3a6:	f7fe bbcf 	b.w	8008b48 <vListInsertEnd>
	}
 800a3aa:	b003      	add	sp, #12
 800a3ac:	bd30      	pop	{r4, r5, pc}
 800a3ae:	bf00      	nop
 800a3b0:	2400ddf0 	.word	0x2400ddf0
 800a3b4:	2400ddfc 	.word	0x2400ddfc
 800a3b8:	2400e26c 	.word	0x2400e26c

0800a3bc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a3bc:	4b04      	ldr	r3, [pc, #16]	; (800a3d0 <pvTaskIncrementMutexHeldCount+0x14>)
 800a3be:	681a      	ldr	r2, [r3, #0]
 800a3c0:	b11a      	cbz	r2, 800a3ca <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a3c2:	6819      	ldr	r1, [r3, #0]
 800a3c4:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a3c6:	3201      	adds	r2, #1
 800a3c8:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a3ca:	6818      	ldr	r0, [r3, #0]
	}
 800a3cc:	4770      	bx	lr
 800a3ce:	bf00      	nop
 800a3d0:	2400ddf0 	.word	0x2400ddf0

0800a3d4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a3d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a3d6:	4c11      	ldr	r4, [pc, #68]	; (800a41c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a3d8:	f7fe fc4c 	bl	8008c74 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a3dc:	6825      	ldr	r5, [r4, #0]
 800a3de:	b9bd      	cbnz	r5, 800a410 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a3e0:	4f0f      	ldr	r7, [pc, #60]	; (800a420 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a3e2:	4e10      	ldr	r6, [pc, #64]	; (800a424 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a3e4:	4638      	mov	r0, r7
 800a3e6:	f7fe fba1 	bl	8008b2c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a3ea:	4630      	mov	r0, r6
 800a3ec:	f7fe fb9e 	bl	8008b2c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a3f0:	4b0d      	ldr	r3, [pc, #52]	; (800a428 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3f2:	4a0e      	ldr	r2, [pc, #56]	; (800a42c <prvCheckForValidListAndQueue+0x58>)
 800a3f4:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800a3f6:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3f8:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800a3fa:	4b0d      	ldr	r3, [pc, #52]	; (800a430 <prvCheckForValidListAndQueue+0x5c>)
 800a3fc:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3fe:	4b0d      	ldr	r3, [pc, #52]	; (800a434 <prvCheckForValidListAndQueue+0x60>)
 800a400:	9500      	str	r5, [sp, #0]
 800a402:	f7fe fe47 	bl	8009094 <xQueueGenericCreateStatic>
 800a406:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a408:	b110      	cbz	r0, 800a410 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a40a:	490b      	ldr	r1, [pc, #44]	; (800a438 <prvCheckForValidListAndQueue+0x64>)
 800a40c:	f7ff fa12 	bl	8009834 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a410:	b003      	add	sp, #12
 800a412:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a416:	f7fe bc4d 	b.w	8008cb4 <vPortExitCritical>
 800a41a:	bf00      	nop
 800a41c:	2400e410 	.word	0x2400e410
 800a420:	2400e394 	.word	0x2400e394
 800a424:	2400e3a8 	.word	0x2400e3a8
 800a428:	2400e2ec 	.word	0x2400e2ec
 800a42c:	2400e2f4 	.word	0x2400e2f4
 800a430:	2400e2f0 	.word	0x2400e2f0
 800a434:	2400e3c0 	.word	0x2400e3c0
 800a438:	080232cc 	.word	0x080232cc

0800a43c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a43c:	4291      	cmp	r1, r2
{
 800a43e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a440:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a442:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a444:	d80a      	bhi.n	800a45c <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a446:	1ad3      	subs	r3, r2, r3
 800a448:	6982      	ldr	r2, [r0, #24]
 800a44a:	4293      	cmp	r3, r2
 800a44c:	d20d      	bcs.n	800a46a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a44e:	1d01      	adds	r1, r0, #4
 800a450:	4b07      	ldr	r3, [pc, #28]	; (800a470 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a452:	6818      	ldr	r0, [r3, #0]
 800a454:	f7fe fb84 	bl	8008b60 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a458:	2000      	movs	r0, #0
}
 800a45a:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a45c:	429a      	cmp	r2, r3
 800a45e:	d201      	bcs.n	800a464 <prvInsertTimerInActiveList+0x28>
 800a460:	4299      	cmp	r1, r3
 800a462:	d202      	bcs.n	800a46a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a464:	1d01      	adds	r1, r0, #4
 800a466:	4b03      	ldr	r3, [pc, #12]	; (800a474 <prvInsertTimerInActiveList+0x38>)
 800a468:	e7f3      	b.n	800a452 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a46a:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a46c:	e7f5      	b.n	800a45a <prvInsertTimerInActiveList+0x1e>
 800a46e:	bf00      	nop
 800a470:	2400e2f0 	.word	0x2400e2f0
 800a474:	2400e2ec 	.word	0x2400e2ec

0800a478 <xTimerCreateTimerTask>:
{
 800a478:	b510      	push	{r4, lr}
 800a47a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a47c:	f7ff ffaa 	bl	800a3d4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a480:	4b12      	ldr	r3, [pc, #72]	; (800a4cc <xTimerCreateTimerTask+0x54>)
 800a482:	681b      	ldr	r3, [r3, #0]
 800a484:	b1b3      	cbz	r3, 800a4b4 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a486:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a488:	aa07      	add	r2, sp, #28
 800a48a:	a906      	add	r1, sp, #24
 800a48c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a48e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a492:	f7fe fa43 	bl	800891c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a496:	9b05      	ldr	r3, [sp, #20]
 800a498:	9a07      	ldr	r2, [sp, #28]
 800a49a:	9302      	str	r3, [sp, #8]
 800a49c:	9b06      	ldr	r3, [sp, #24]
 800a49e:	490c      	ldr	r1, [pc, #48]	; (800a4d0 <xTimerCreateTimerTask+0x58>)
 800a4a0:	9301      	str	r3, [sp, #4]
 800a4a2:	2302      	movs	r3, #2
 800a4a4:	480b      	ldr	r0, [pc, #44]	; (800a4d4 <xTimerCreateTimerTask+0x5c>)
 800a4a6:	9300      	str	r3, [sp, #0]
 800a4a8:	4623      	mov	r3, r4
 800a4aa:	f7ff fb88 	bl	8009bbe <xTaskCreateStatic>
 800a4ae:	4b0a      	ldr	r3, [pc, #40]	; (800a4d8 <xTimerCreateTimerTask+0x60>)
 800a4b0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a4b2:	b940      	cbnz	r0, 800a4c6 <xTimerCreateTimerTask+0x4e>
 800a4b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4b8:	f383 8811 	msr	BASEPRI, r3
 800a4bc:	f3bf 8f6f 	isb	sy
 800a4c0:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a4c4:	e7fe      	b.n	800a4c4 <xTimerCreateTimerTask+0x4c>
}
 800a4c6:	2001      	movs	r0, #1
 800a4c8:	b008      	add	sp, #32
 800a4ca:	bd10      	pop	{r4, pc}
 800a4cc:	2400e410 	.word	0x2400e410
 800a4d0:	080232d1 	.word	0x080232d1
 800a4d4:	0800a5dd 	.word	0x0800a5dd
 800a4d8:	2400e414 	.word	0x2400e414

0800a4dc <xTimerGenericCommand>:
{
 800a4dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a4de:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a4e0:	4604      	mov	r4, r0
{
 800a4e2:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a4e4:	b940      	cbnz	r0, 800a4f8 <xTimerGenericCommand+0x1c>
 800a4e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4ea:	f383 8811 	msr	BASEPRI, r3
 800a4ee:	f3bf 8f6f 	isb	sy
 800a4f2:	f3bf 8f4f 	dsb	sy
 800a4f6:	e7fe      	b.n	800a4f6 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a4f8:	4d0c      	ldr	r5, [pc, #48]	; (800a52c <xTimerGenericCommand+0x50>)
 800a4fa:	6828      	ldr	r0, [r5, #0]
 800a4fc:	b178      	cbz	r0, 800a51e <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a4fe:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a500:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a502:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a506:	dc0c      	bgt.n	800a522 <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a508:	f7ff fe72 	bl	800a1f0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a50c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a50e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a510:	4669      	mov	r1, sp
 800a512:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a514:	bf0c      	ite	eq
 800a516:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a518:	461a      	movne	r2, r3
 800a51a:	f7fe fe70 	bl	80091fe <xQueueGenericSend>
}
 800a51e:	b004      	add	sp, #16
 800a520:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a522:	2300      	movs	r3, #0
 800a524:	4669      	mov	r1, sp
 800a526:	f7fe ff1d 	bl	8009364 <xQueueGenericSendFromISR>
 800a52a:	e7f8      	b.n	800a51e <xTimerGenericCommand+0x42>
 800a52c:	2400e410 	.word	0x2400e410

0800a530 <prvSampleTimeNow>:
{
 800a530:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a534:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a5d8 <prvSampleTimeNow+0xa8>
{
 800a538:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a53a:	f7ff fbad 	bl	8009c98 <xTaskGetTickCount>
 800a53e:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a540:	f8d8 3000 	ldr.w	r3, [r8]
 800a544:	4283      	cmp	r3, r0
 800a546:	d90b      	bls.n	800a560 <prvSampleTimeNow+0x30>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a548:	4f21      	ldr	r7, [pc, #132]	; (800a5d0 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a54a:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a54e:	683b      	ldr	r3, [r7, #0]
 800a550:	681a      	ldr	r2, [r3, #0]
 800a552:	b96a      	cbnz	r2, 800a570 <prvSampleTimeNow+0x40>
	pxCurrentTimerList = pxOverflowTimerList;
 800a554:	4a1f      	ldr	r2, [pc, #124]	; (800a5d4 <prvSampleTimeNow+0xa4>)
 800a556:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800a558:	6013      	str	r3, [r2, #0]
 800a55a:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800a55c:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a55e:	e000      	b.n	800a562 <prvSampleTimeNow+0x32>
 800a560:	2300      	movs	r3, #0
}
 800a562:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a564:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a566:	f8c8 5000 	str.w	r5, [r8]
}
 800a56a:	b004      	add	sp, #16
 800a56c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a570:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a572:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a574:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a578:	1d21      	adds	r1, r4, #4
 800a57a:	4608      	mov	r0, r1
 800a57c:	9103      	str	r1, [sp, #12]
 800a57e:	f7fe fb06 	bl	8008b8e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a582:	6a23      	ldr	r3, [r4, #32]
 800a584:	4620      	mov	r0, r4
 800a586:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a588:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a58c:	9903      	ldr	r1, [sp, #12]
 800a58e:	f013 0f04 	tst.w	r3, #4
 800a592:	d0dc      	beq.n	800a54e <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a594:	69a3      	ldr	r3, [r4, #24]
 800a596:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a598:	459a      	cmp	sl, r3
 800a59a:	d205      	bcs.n	800a5a8 <prvSampleTimeNow+0x78>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a59c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a59e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a5a0:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5a2:	f7fe fadd 	bl	8008b60 <vListInsert>
 800a5a6:	e7d2      	b.n	800a54e <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a5a8:	2300      	movs	r3, #0
 800a5aa:	4652      	mov	r2, sl
 800a5ac:	4620      	mov	r0, r4
 800a5ae:	f8cd 9000 	str.w	r9, [sp]
 800a5b2:	4619      	mov	r1, r3
 800a5b4:	f7ff ff92 	bl	800a4dc <xTimerGenericCommand>
				configASSERT( xResult );
 800a5b8:	2800      	cmp	r0, #0
 800a5ba:	d1c8      	bne.n	800a54e <prvSampleTimeNow+0x1e>
 800a5bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5c0:	f383 8811 	msr	BASEPRI, r3
 800a5c4:	f3bf 8f6f 	isb	sy
 800a5c8:	f3bf 8f4f 	dsb	sy
 800a5cc:	e7fe      	b.n	800a5cc <prvSampleTimeNow+0x9c>
 800a5ce:	bf00      	nop
 800a5d0:	2400e2ec 	.word	0x2400e2ec
 800a5d4:	2400e2f0 	.word	0x2400e2f0
 800a5d8:	2400e3bc 	.word	0x2400e3bc

0800a5dc <prvTimerTask>:
{
 800a5dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5e0:	4d6e      	ldr	r5, [pc, #440]	; (800a79c <prvTimerTask+0x1c0>)
{
 800a5e2:	b089      	sub	sp, #36	; 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5e4:	4e6e      	ldr	r6, [pc, #440]	; (800a7a0 <prvTimerTask+0x1c4>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5e6:	682b      	ldr	r3, [r5, #0]
 800a5e8:	f8d3 8000 	ldr.w	r8, [r3]
 800a5ec:	f1b8 0f00 	cmp.w	r8, #0
 800a5f0:	d035      	beq.n	800a65e <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a5f2:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5f4:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a5f6:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800a5fa:	f7ff fb45 	bl	8009c88 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5fe:	a804      	add	r0, sp, #16
 800a600:	f7ff ff96 	bl	800a530 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a604:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a606:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a608:	2b00      	cmp	r3, #0
 800a60a:	d169      	bne.n	800a6e0 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a60c:	2c00      	cmp	r4, #0
 800a60e:	d14c      	bne.n	800a6aa <prvTimerTask+0xce>
 800a610:	4540      	cmp	r0, r8
 800a612:	d350      	bcc.n	800a6b6 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a614:	f7ff fbdc 	bl	8009dd0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a618:	682b      	ldr	r3, [r5, #0]
 800a61a:	68db      	ldr	r3, [r3, #12]
 800a61c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a61e:	1d38      	adds	r0, r7, #4
 800a620:	f7fe fab5 	bl	8008b8e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a624:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a628:	0758      	lsls	r0, r3, #29
 800a62a:	d51a      	bpl.n	800a662 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a62c:	69b9      	ldr	r1, [r7, #24]
 800a62e:	4643      	mov	r3, r8
 800a630:	464a      	mov	r2, r9
 800a632:	4638      	mov	r0, r7
 800a634:	4441      	add	r1, r8
 800a636:	f7ff ff01 	bl	800a43c <prvInsertTimerInActiveList>
 800a63a:	b1b0      	cbz	r0, 800a66a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a63c:	4623      	mov	r3, r4
 800a63e:	4642      	mov	r2, r8
 800a640:	4621      	mov	r1, r4
 800a642:	4638      	mov	r0, r7
 800a644:	9400      	str	r4, [sp, #0]
 800a646:	f7ff ff49 	bl	800a4dc <xTimerGenericCommand>
			configASSERT( xResult );
 800a64a:	b970      	cbnz	r0, 800a66a <prvTimerTask+0x8e>
 800a64c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a650:	f383 8811 	msr	BASEPRI, r3
 800a654:	f3bf 8f6f 	isb	sy
 800a658:	f3bf 8f4f 	dsb	sy
 800a65c:	e7fe      	b.n	800a65c <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a65e:	2401      	movs	r4, #1
 800a660:	e7cb      	b.n	800a5fa <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a662:	f023 0301 	bic.w	r3, r3, #1
 800a666:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a66a:	6a3b      	ldr	r3, [r7, #32]
 800a66c:	4638      	mov	r0, r7
 800a66e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a670:	2200      	movs	r2, #0
 800a672:	a904      	add	r1, sp, #16
 800a674:	6830      	ldr	r0, [r6, #0]
 800a676:	f7fe ff2b 	bl	80094d0 <xQueueReceive>
 800a67a:	2800      	cmp	r0, #0
 800a67c:	d0b3      	beq.n	800a5e6 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a67e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a680:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a682:	2b00      	cmp	r3, #0
 800a684:	db2f      	blt.n	800a6e6 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a686:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a688:	6963      	ldr	r3, [r4, #20]
 800a68a:	2b00      	cmp	r3, #0
 800a68c:	d132      	bne.n	800a6f4 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a68e:	a803      	add	r0, sp, #12
 800a690:	f7ff ff4e 	bl	800a530 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a694:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a696:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a698:	2b09      	cmp	r3, #9
 800a69a:	d8e9      	bhi.n	800a670 <prvTimerTask+0x94>
 800a69c:	e8df f003 	tbb	[pc, r3]
 800a6a0:	572e2e2e 	.word	0x572e2e2e
 800a6a4:	2e2e765e 	.word	0x2e2e765e
 800a6a8:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a6aa:	4b3e      	ldr	r3, [pc, #248]	; (800a7a4 <prvTimerTask+0x1c8>)
 800a6ac:	681b      	ldr	r3, [r3, #0]
 800a6ae:	681c      	ldr	r4, [r3, #0]
 800a6b0:	fab4 f484 	clz	r4, r4
 800a6b4:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a6b6:	4622      	mov	r2, r4
 800a6b8:	eba8 0109 	sub.w	r1, r8, r9
 800a6bc:	6830      	ldr	r0, [r6, #0]
 800a6be:	f7ff f8f6 	bl	80098ae <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a6c2:	f7ff fb85 	bl	8009dd0 <xTaskResumeAll>
 800a6c6:	2800      	cmp	r0, #0
 800a6c8:	d1d2      	bne.n	800a670 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a6ca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a6ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a6d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a6d6:	f3bf 8f4f 	dsb	sy
 800a6da:	f3bf 8f6f 	isb	sy
 800a6de:	e7c7      	b.n	800a670 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a6e0:	f7ff fb76 	bl	8009dd0 <xTaskResumeAll>
}
 800a6e4:	e7c4      	b.n	800a670 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a6e6:	9b05      	ldr	r3, [sp, #20]
 800a6e8:	9907      	ldr	r1, [sp, #28]
 800a6ea:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a6ec:	9b04      	ldr	r3, [sp, #16]
 800a6ee:	2b00      	cmp	r3, #0
 800a6f0:	dbbe      	blt.n	800a670 <prvTimerTask+0x94>
 800a6f2:	e7c8      	b.n	800a686 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a6f4:	1d20      	adds	r0, r4, #4
 800a6f6:	f7fe fa4a 	bl	8008b8e <uxListRemove>
 800a6fa:	e7c8      	b.n	800a68e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6fc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a700:	4620      	mov	r0, r4
 800a702:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a704:	f043 0301 	orr.w	r3, r3, #1
 800a708:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a70c:	9b05      	ldr	r3, [sp, #20]
 800a70e:	4419      	add	r1, r3
 800a710:	f7ff fe94 	bl	800a43c <prvInsertTimerInActiveList>
 800a714:	2800      	cmp	r0, #0
 800a716:	d0ab      	beq.n	800a670 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a718:	6a23      	ldr	r3, [r4, #32]
 800a71a:	4620      	mov	r0, r4
 800a71c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a71e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a722:	0759      	lsls	r1, r3, #29
 800a724:	d5a4      	bpl.n	800a670 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a726:	69a2      	ldr	r2, [r4, #24]
 800a728:	2300      	movs	r3, #0
 800a72a:	9905      	ldr	r1, [sp, #20]
 800a72c:	4620      	mov	r0, r4
 800a72e:	9300      	str	r3, [sp, #0]
 800a730:	440a      	add	r2, r1
 800a732:	4619      	mov	r1, r3
 800a734:	f7ff fed2 	bl	800a4dc <xTimerGenericCommand>
							configASSERT( xResult );
 800a738:	2800      	cmp	r0, #0
 800a73a:	d199      	bne.n	800a670 <prvTimerTask+0x94>
 800a73c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a740:	f383 8811 	msr	BASEPRI, r3
 800a744:	f3bf 8f6f 	isb	sy
 800a748:	f3bf 8f4f 	dsb	sy
 800a74c:	e7fe      	b.n	800a74c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a74e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a752:	f023 0301 	bic.w	r3, r3, #1
 800a756:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a75a:	e789      	b.n	800a670 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a75c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a760:	f043 0301 	orr.w	r3, r3, #1
 800a764:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a768:	9905      	ldr	r1, [sp, #20]
 800a76a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a76c:	b941      	cbnz	r1, 800a780 <prvTimerTask+0x1a4>
 800a76e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a772:	f383 8811 	msr	BASEPRI, r3
 800a776:	f3bf 8f6f 	isb	sy
 800a77a:	f3bf 8f4f 	dsb	sy
 800a77e:	e7fe      	b.n	800a77e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a780:	4603      	mov	r3, r0
 800a782:	4401      	add	r1, r0
 800a784:	4620      	mov	r0, r4
 800a786:	f7ff fe59 	bl	800a43c <prvInsertTimerInActiveList>
					break;
 800a78a:	e771      	b.n	800a670 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a78c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a790:	079a      	lsls	r2, r3, #30
 800a792:	d4de      	bmi.n	800a752 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a794:	4620      	mov	r0, r4
 800a796:	f7fe f98b 	bl	8008ab0 <vPortFree>
 800a79a:	e769      	b.n	800a670 <prvTimerTask+0x94>
 800a79c:	2400e2ec 	.word	0x2400e2ec
 800a7a0:	2400e410 	.word	0x2400e410
 800a7a4:	2400e2f0 	.word	0x2400e2f0

0800a7a8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a7a8:	8880      	ldrh	r0, [r0, #4]
 800a7aa:	4770      	bx	lr

0800a7ac <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a7ac:	b570      	push	{r4, r5, r6, lr}
 800a7ae:	6803      	ldr	r3, [r0, #0]
 800a7b0:	460c      	mov	r4, r1
 800a7b2:	2100      	movs	r1, #0
 800a7b4:	4605      	mov	r5, r0
 800a7b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7b8:	4798      	blx	r3
 800a7ba:	4606      	mov	r6, r0
 800a7bc:	682b      	ldr	r3, [r5, #0]
 800a7be:	4628      	mov	r0, r5
 800a7c0:	1ba4      	subs	r4, r4, r6
 800a7c2:	6a1b      	ldr	r3, [r3, #32]
 800a7c4:	b2a4      	uxth	r4, r4
 800a7c6:	4798      	blx	r3
 800a7c8:	fbb4 f0f0 	udiv	r0, r4, r0
 800a7cc:	bd70      	pop	{r4, r5, r6, pc}

0800a7ce <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a7ce:	2300      	movs	r3, #0
 800a7d0:	8083      	strh	r3, [r0, #4]
 800a7d2:	4770      	bx	lr

0800a7d4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a7d4:	b510      	push	{r4, lr}
 800a7d6:	6803      	ldr	r3, [r0, #0]
 800a7d8:	4604      	mov	r4, r0
 800a7da:	8881      	ldrh	r1, [r0, #4]
 800a7dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7de:	4798      	blx	r3
 800a7e0:	88a3      	ldrh	r3, [r4, #4]
 800a7e2:	3301      	adds	r3, #1
 800a7e4:	80a3      	strh	r3, [r4, #4]
 800a7e6:	bd10      	pop	{r4, pc}

0800a7e8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a7e8:	6803      	ldr	r3, [r0, #0]
 800a7ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7ec:	4718      	bx	r3

0800a7ee <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a7ee:	4770      	bx	lr

0800a7f0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a7f0:	4a02      	ldr	r2, [pc, #8]	; (800a7fc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a7f2:	6002      	str	r2, [r0, #0]
 800a7f4:	2200      	movs	r2, #0
 800a7f6:	8082      	strh	r2, [r0, #4]
 800a7f8:	4770      	bx	lr
 800a7fa:	bf00      	nop
 800a7fc:	080232e4 	.word	0x080232e4

0800a800 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a800:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a802:	2000      	movs	r0, #0
 800a804:	b12b      	cbz	r3, 800a812 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a806:	b920      	cbnz	r0, 800a812 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a808:	1a5a      	subs	r2, r3, r1
 800a80a:	699b      	ldr	r3, [r3, #24]
 800a80c:	4250      	negs	r0, r2
 800a80e:	4150      	adcs	r0, r2
 800a810:	e7f8      	b.n	800a804 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a812:	4770      	bx	lr

0800a814 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a814:	2300      	movs	r3, #0
 800a816:	6148      	str	r0, [r1, #20]
 800a818:	618b      	str	r3, [r1, #24]
 800a81a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a81c:	b913      	cbnz	r3, 800a824 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a81e:	6281      	str	r1, [r0, #40]	; 0x28
 800a820:	4770      	bx	lr
 800a822:	4613      	mov	r3, r2
 800a824:	699a      	ldr	r2, [r3, #24]
 800a826:	2a00      	cmp	r2, #0
 800a828:	d1fb      	bne.n	800a822 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a82a:	6199      	str	r1, [r3, #24]
 800a82c:	4770      	bx	lr

0800a82e <_ZN8touchgfx9Container9removeAllEv>:
 800a82e:	2200      	movs	r2, #0
 800a830:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a832:	b123      	cbz	r3, 800a83e <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a834:	6999      	ldr	r1, [r3, #24]
 800a836:	6281      	str	r1, [r0, #40]	; 0x28
 800a838:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a83c:	e7f8      	b.n	800a830 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a83e:	4770      	bx	lr

0800a840 <_ZN8touchgfx9Container6unlinkEv>:
 800a840:	2300      	movs	r3, #0
 800a842:	6283      	str	r3, [r0, #40]	; 0x28
 800a844:	4770      	bx	lr

0800a846 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a846:	2200      	movs	r2, #0
 800a848:	8002      	strh	r2, [r0, #0]
 800a84a:	8042      	strh	r2, [r0, #2]
 800a84c:	8082      	strh	r2, [r0, #4]
 800a84e:	80c2      	strh	r2, [r0, #6]
 800a850:	4770      	bx	lr

0800a852 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a852:	b570      	push	{r4, r5, r6, lr}
 800a854:	460d      	mov	r5, r1
 800a856:	4616      	mov	r6, r2
 800a858:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a85a:	b13c      	cbz	r4, 800a86c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a85c:	6823      	ldr	r3, [r4, #0]
 800a85e:	4620      	mov	r0, r4
 800a860:	4632      	mov	r2, r6
 800a862:	4629      	mov	r1, r5
 800a864:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a866:	4798      	blx	r3
 800a868:	69a4      	ldr	r4, [r4, #24]
 800a86a:	e7f6      	b.n	800a85a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a86c:	bd70      	pop	{r4, r5, r6, pc}

0800a86e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a86e:	b538      	push	{r3, r4, r5, lr}
 800a870:	460d      	mov	r5, r1
 800a872:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a874:	b134      	cbz	r4, 800a884 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a876:	682b      	ldr	r3, [r5, #0]
 800a878:	4621      	mov	r1, r4
 800a87a:	4628      	mov	r0, r5
 800a87c:	689b      	ldr	r3, [r3, #8]
 800a87e:	4798      	blx	r3
 800a880:	69a4      	ldr	r4, [r4, #24]
 800a882:	e7f7      	b.n	800a874 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a884:	bd38      	pop	{r3, r4, r5, pc}

0800a886 <_ZN8touchgfx9ContainerD1Ev>:
 800a886:	4770      	bx	lr

0800a888 <_ZN8touchgfx9ContainerD0Ev>:
 800a888:	b510      	push	{r4, lr}
 800a88a:	4604      	mov	r4, r0
 800a88c:	212c      	movs	r1, #44	; 0x2c
 800a88e:	f016 fac4 	bl	8020e1a <_ZdlPvj>
 800a892:	4620      	mov	r0, r4
 800a894:	bd10      	pop	{r4, pc}

0800a896 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a896:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a898:	b19b      	cbz	r3, 800a8c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a89a:	428b      	cmp	r3, r1
 800a89c:	d109      	bne.n	800a8b2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a89e:	699a      	ldr	r2, [r3, #24]
 800a8a0:	2100      	movs	r1, #0
 800a8a2:	6159      	str	r1, [r3, #20]
 800a8a4:	6282      	str	r2, [r0, #40]	; 0x28
 800a8a6:	b902      	cbnz	r2, 800a8aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a8a8:	4770      	bx	lr
 800a8aa:	6199      	str	r1, [r3, #24]
 800a8ac:	4770      	bx	lr
 800a8ae:	4613      	mov	r3, r2
 800a8b0:	b13a      	cbz	r2, 800a8c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a8b2:	699a      	ldr	r2, [r3, #24]
 800a8b4:	428a      	cmp	r2, r1
 800a8b6:	d1fa      	bne.n	800a8ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a8b8:	698a      	ldr	r2, [r1, #24]
 800a8ba:	619a      	str	r2, [r3, #24]
 800a8bc:	2300      	movs	r3, #0
 800a8be:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a8c2:	4770      	bx	lr

0800a8c4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a8c4:	b410      	push	{r4}
 800a8c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a8c8:	4604      	mov	r4, r0
 800a8ca:	b92b      	cbnz	r3, 800a8d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a8cc:	6803      	ldr	r3, [r0, #0]
 800a8ce:	4611      	mov	r1, r2
 800a8d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a8d4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a8d6:	4718      	bx	r3
 800a8d8:	b941      	cbnz	r1, 800a8ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a8da:	6193      	str	r3, [r2, #24]
 800a8dc:	6282      	str	r2, [r0, #40]	; 0x28
 800a8de:	6154      	str	r4, [r2, #20]
 800a8e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a8e4:	4770      	bx	lr
 800a8e6:	4603      	mov	r3, r0
 800a8e8:	2800      	cmp	r0, #0
 800a8ea:	d0f9      	beq.n	800a8e0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a8ec:	4299      	cmp	r1, r3
 800a8ee:	6998      	ldr	r0, [r3, #24]
 800a8f0:	d1f9      	bne.n	800a8e6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a8f2:	6190      	str	r0, [r2, #24]
 800a8f4:	618a      	str	r2, [r1, #24]
 800a8f6:	e7f2      	b.n	800a8de <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a8f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a8f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8fc:	461f      	mov	r7, r3
 800a8fe:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a902:	460d      	mov	r5, r1
 800a904:	4616      	mov	r6, r2
 800a906:	b103      	cbz	r3, 800a90a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a908:	6038      	str	r0, [r7, #0]
 800a90a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a90c:	b314      	cbz	r4, 800a954 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a90e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a912:	b1eb      	cbz	r3, 800a950 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a914:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a918:	428d      	cmp	r5, r1
 800a91a:	db19      	blt.n	800a950 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a91c:	b289      	uxth	r1, r1
 800a91e:	8923      	ldrh	r3, [r4, #8]
 800a920:	440b      	add	r3, r1
 800a922:	b21b      	sxth	r3, r3
 800a924:	429d      	cmp	r5, r3
 800a926:	da13      	bge.n	800a950 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a928:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a92c:	4296      	cmp	r6, r2
 800a92e:	db0f      	blt.n	800a950 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a930:	b292      	uxth	r2, r2
 800a932:	8963      	ldrh	r3, [r4, #10]
 800a934:	4413      	add	r3, r2
 800a936:	b21b      	sxth	r3, r3
 800a938:	429e      	cmp	r6, r3
 800a93a:	da09      	bge.n	800a950 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a93c:	6823      	ldr	r3, [r4, #0]
 800a93e:	1ab2      	subs	r2, r6, r2
 800a940:	1a69      	subs	r1, r5, r1
 800a942:	4620      	mov	r0, r4
 800a944:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a948:	b212      	sxth	r2, r2
 800a94a:	463b      	mov	r3, r7
 800a94c:	b209      	sxth	r1, r1
 800a94e:	47c0      	blx	r8
 800a950:	69a4      	ldr	r4, [r4, #24]
 800a952:	e7db      	b.n	800a90c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a958 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a95c:	4c6d      	ldr	r4, [pc, #436]	; (800ab14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800a95e:	b0a1      	sub	sp, #132	; 0x84
 800a960:	4606      	mov	r6, r0
 800a962:	6824      	ldr	r4, [r4, #0]
 800a964:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a966:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a96a:	2400      	movs	r4, #0
 800a96c:	9303      	str	r3, [sp, #12]
 800a96e:	802c      	strh	r4, [r5, #0]
 800a970:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a972:	802c      	strh	r4, [r5, #0]
 800a974:	601c      	str	r4, [r3, #0]
 800a976:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a97a:	f7ff ffbd 	bl	800a8f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a97e:	f1b9 0f03 	cmp.w	r9, #3
 800a982:	f340 80c1 	ble.w	800ab08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800a986:	4631      	mov	r1, r6
 800a988:	a80c      	add	r0, sp, #48	; 0x30
 800a98a:	f006 fe0f 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a98e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a992:	9306      	str	r3, [sp, #24]
 800a994:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a998:	9307      	str	r3, [sp, #28]
 800a99a:	9b03      	ldr	r3, [sp, #12]
 800a99c:	f8d3 a000 	ldr.w	sl, [r3]
 800a9a0:	f1ba 0f00 	cmp.w	sl, #0
 800a9a4:	f000 80b3 	beq.w	800ab0e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800a9a8:	4651      	mov	r1, sl
 800a9aa:	a810      	add	r0, sp, #64	; 0x40
 800a9ac:	f006 fdfe 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a9b0:	2002      	movs	r0, #2
 800a9b2:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a9b6:	9b01      	ldr	r3, [sp, #4]
 800a9b8:	9a06      	ldr	r2, [sp, #24]
 800a9ba:	fb91 f1f0 	sdiv	r1, r1, r0
 800a9be:	189d      	adds	r5, r3, r2
 800a9c0:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a9c4:	9a07      	ldr	r2, [sp, #28]
 800a9c6:	4419      	add	r1, r3
 800a9c8:	9b02      	ldr	r3, [sp, #8]
 800a9ca:	4413      	add	r3, r2
 800a9cc:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a9d0:	1a6d      	subs	r5, r5, r1
 800a9d2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a9d6:	fb92 f2f0 	sdiv	r2, r2, r0
 800a9da:	440a      	add	r2, r1
 800a9dc:	1a9b      	subs	r3, r3, r2
 800a9de:	435b      	muls	r3, r3
 800a9e0:	fb05 3505 	mla	r5, r5, r5, r3
 800a9e4:	4f4c      	ldr	r7, [pc, #304]	; (800ab18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a9e6:	ac10      	add	r4, sp, #64	; 0x40
 800a9e8:	f1b9 0f0c 	cmp.w	r9, #12
 800a9ec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a9ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a9f0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a9f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a9f4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a9f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a9f8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a9fc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800aa00:	f04f 0303 	mov.w	r3, #3
 800aa04:	bfd8      	it	le
 800aa06:	f109 32ff 	addle.w	r2, r9, #4294967295
 800aa0a:	f04f 0400 	mov.w	r4, #0
 800aa0e:	f8cd 9000 	str.w	r9, [sp]
 800aa12:	bfcc      	ite	gt
 800aa14:	4698      	movgt	r8, r3
 800aa16:	fb92 f8f3 	sdivle	r8, r2, r3
 800aa1a:	1c63      	adds	r3, r4, #1
 800aa1c:	aa10      	add	r2, sp, #64	; 0x40
 800aa1e:	f004 0401 	and.w	r4, r4, #1
 800aa22:	f04f 0b00 	mov.w	fp, #0
 800aa26:	9308      	str	r3, [sp, #32]
 800aa28:	9b00      	ldr	r3, [sp, #0]
 800aa2a:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800aa2e:	fb93 f3f8 	sdiv	r3, r3, r8
 800aa32:	3404      	adds	r4, #4
 800aa34:	b29b      	uxth	r3, r3
 800aa36:	9304      	str	r3, [sp, #16]
 800aa38:	9a04      	ldr	r2, [sp, #16]
 800aa3a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800aa3e:	fb13 f302 	smulbb	r3, r3, r2
 800aa42:	9a01      	ldr	r2, [sp, #4]
 800aa44:	b29b      	uxth	r3, r3
 800aa46:	1899      	adds	r1, r3, r2
 800aa48:	9305      	str	r3, [sp, #20]
 800aa4a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aa4e:	b209      	sxth	r1, r1
 800aa50:	4299      	cmp	r1, r3
 800aa52:	db4d      	blt.n	800aaf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa54:	8932      	ldrh	r2, [r6, #8]
 800aa56:	4413      	add	r3, r2
 800aa58:	b21b      	sxth	r3, r3
 800aa5a:	4299      	cmp	r1, r3
 800aa5c:	da48      	bge.n	800aaf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa5e:	9b04      	ldr	r3, [sp, #16]
 800aa60:	6827      	ldr	r7, [r4, #0]
 800aa62:	fb17 f703 	smulbb	r7, r7, r3
 800aa66:	9b02      	ldr	r3, [sp, #8]
 800aa68:	b2bf      	uxth	r7, r7
 800aa6a:	18fa      	adds	r2, r7, r3
 800aa6c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800aa70:	b212      	sxth	r2, r2
 800aa72:	429a      	cmp	r2, r3
 800aa74:	db3c      	blt.n	800aaf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa76:	8970      	ldrh	r0, [r6, #10]
 800aa78:	4403      	add	r3, r0
 800aa7a:	b21b      	sxth	r3, r3
 800aa7c:	429a      	cmp	r2, r3
 800aa7e:	da37      	bge.n	800aaf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa80:	2300      	movs	r3, #0
 800aa82:	4630      	mov	r0, r6
 800aa84:	930b      	str	r3, [sp, #44]	; 0x2c
 800aa86:	ab0b      	add	r3, sp, #44	; 0x2c
 800aa88:	f7ff ff36 	bl	800a8f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aa8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aa8e:	b37a      	cbz	r2, 800aaf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa90:	4552      	cmp	r2, sl
 800aa92:	d02d      	beq.n	800aaf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa94:	4611      	mov	r1, r2
 800aa96:	a80e      	add	r0, sp, #56	; 0x38
 800aa98:	9209      	str	r2, [sp, #36]	; 0x24
 800aa9a:	f006 fd87 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aa9e:	f04f 0e02 	mov.w	lr, #2
 800aaa2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800aaa6:	9a06      	ldr	r2, [sp, #24]
 800aaa8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800aaac:	9b01      	ldr	r3, [sp, #4]
 800aaae:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800aab2:	4413      	add	r3, r2
 800aab4:	9a07      	ldr	r2, [sp, #28]
 800aab6:	fb91 f1fe 	sdiv	r1, r1, lr
 800aaba:	fb9c fcfe 	sdiv	ip, ip, lr
 800aabe:	4401      	add	r1, r0
 800aac0:	1a58      	subs	r0, r3, r1
 800aac2:	9b02      	ldr	r3, [sp, #8]
 800aac4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800aac8:	4413      	add	r3, r2
 800aaca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aacc:	448c      	add	ip, r1
 800aace:	eba3 030c 	sub.w	r3, r3, ip
 800aad2:	435b      	muls	r3, r3
 800aad4:	fb00 3300 	mla	r3, r0, r0, r3
 800aad8:	42ab      	cmp	r3, r5
 800aada:	d208      	bcs.n	800aaee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800aadc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aade:	461d      	mov	r5, r3
 800aae0:	9803      	ldr	r0, [sp, #12]
 800aae2:	6001      	str	r1, [r0, #0]
 800aae4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800aae6:	9805      	ldr	r0, [sp, #20]
 800aae8:	8008      	strh	r0, [r1, #0]
 800aaea:	992b      	ldr	r1, [sp, #172]	; 0xac
 800aaec:	800f      	strh	r7, [r1, #0]
 800aaee:	4692      	mov	sl, r2
 800aaf0:	f10b 0b01 	add.w	fp, fp, #1
 800aaf4:	3408      	adds	r4, #8
 800aaf6:	f1bb 0f04 	cmp.w	fp, #4
 800aafa:	d19d      	bne.n	800aa38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800aafc:	9b00      	ldr	r3, [sp, #0]
 800aafe:	9c08      	ldr	r4, [sp, #32]
 800ab00:	444b      	add	r3, r9
 800ab02:	4544      	cmp	r4, r8
 800ab04:	9300      	str	r3, [sp, #0]
 800ab06:	d188      	bne.n	800aa1a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ab08:	b021      	add	sp, #132	; 0x84
 800ab0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab0e:	f04f 35ff 	mov.w	r5, #4294967295
 800ab12:	e767      	b.n	800a9e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ab14:	2400e424 	.word	0x2400e424
 800ab18:	08021ee4 	.word	0x08021ee4

0800ab1c <_ZN8touchgfx4RectaNERKS0_>:
 800ab1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab20:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ab24:	888c      	ldrh	r4, [r1, #4]
 800ab26:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ab2a:	443c      	add	r4, r7
 800ab2c:	b2a4      	uxth	r4, r4
 800ab2e:	fa0f f884 	sxth.w	r8, r4
 800ab32:	45c1      	cmp	r9, r8
 800ab34:	da2f      	bge.n	800ab96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab36:	8882      	ldrh	r2, [r0, #4]
 800ab38:	444a      	add	r2, r9
 800ab3a:	b292      	uxth	r2, r2
 800ab3c:	fa0f fe82 	sxth.w	lr, r2
 800ab40:	4577      	cmp	r7, lr
 800ab42:	da28      	bge.n	800ab96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ab48:	88cb      	ldrh	r3, [r1, #6]
 800ab4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ab4e:	442b      	add	r3, r5
 800ab50:	b21b      	sxth	r3, r3
 800ab52:	429e      	cmp	r6, r3
 800ab54:	da1f      	bge.n	800ab96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab56:	88c3      	ldrh	r3, [r0, #6]
 800ab58:	4433      	add	r3, r6
 800ab5a:	b29b      	uxth	r3, r3
 800ab5c:	fa0f fc83 	sxth.w	ip, r3
 800ab60:	4565      	cmp	r5, ip
 800ab62:	da18      	bge.n	800ab96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab64:	454f      	cmp	r7, r9
 800ab66:	bfb8      	it	lt
 800ab68:	464f      	movlt	r7, r9
 800ab6a:	42b5      	cmp	r5, r6
 800ab6c:	bfb8      	it	lt
 800ab6e:	4635      	movlt	r5, r6
 800ab70:	45f0      	cmp	r8, lr
 800ab72:	bfd8      	it	le
 800ab74:	4622      	movle	r2, r4
 800ab76:	1bd2      	subs	r2, r2, r7
 800ab78:	8082      	strh	r2, [r0, #4]
 800ab7a:	884a      	ldrh	r2, [r1, #2]
 800ab7c:	88c9      	ldrh	r1, [r1, #6]
 800ab7e:	8007      	strh	r7, [r0, #0]
 800ab80:	440a      	add	r2, r1
 800ab82:	8045      	strh	r5, [r0, #2]
 800ab84:	b292      	uxth	r2, r2
 800ab86:	b211      	sxth	r1, r2
 800ab88:	458c      	cmp	ip, r1
 800ab8a:	bfa8      	it	ge
 800ab8c:	4613      	movge	r3, r2
 800ab8e:	1b5b      	subs	r3, r3, r5
 800ab90:	80c3      	strh	r3, [r0, #6]
 800ab92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab96:	2300      	movs	r3, #0
 800ab98:	8003      	strh	r3, [r0, #0]
 800ab9a:	8043      	strh	r3, [r0, #2]
 800ab9c:	8083      	strh	r3, [r0, #4]
 800ab9e:	80c3      	strh	r3, [r0, #6]
 800aba0:	e7f7      	b.n	800ab92 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800aba2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aba6:	2b00      	cmp	r3, #0
 800aba8:	dd06      	ble.n	800abb8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800abaa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800abae:	2800      	cmp	r0, #0
 800abb0:	bfcc      	ite	gt
 800abb2:	2000      	movgt	r0, #0
 800abb4:	2001      	movle	r0, #1
 800abb6:	4770      	bx	lr
 800abb8:	2001      	movs	r0, #1
 800abba:	4770      	bx	lr

0800abbc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800abbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abc0:	2300      	movs	r3, #0
 800abc2:	4604      	mov	r4, r0
 800abc4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800abc6:	8003      	strh	r3, [r0, #0]
 800abc8:	8043      	strh	r3, [r0, #2]
 800abca:	8083      	strh	r3, [r0, #4]
 800abcc:	80c3      	strh	r3, [r0, #6]
 800abce:	2d00      	cmp	r5, #0
 800abd0:	d040      	beq.n	800ac54 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800abd2:	1d28      	adds	r0, r5, #4
 800abd4:	f7ff ffe5 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abd8:	b988      	cbnz	r0, 800abfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800abda:	4620      	mov	r0, r4
 800abdc:	f7ff ffe1 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abe0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800abe4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800abe8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800abec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800abf0:	b138      	cbz	r0, 800ac02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800abf2:	8022      	strh	r2, [r4, #0]
 800abf4:	8063      	strh	r3, [r4, #2]
 800abf6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800abfa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800abfe:	69ad      	ldr	r5, [r5, #24]
 800ac00:	e7e5      	b.n	800abce <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ac02:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ac06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ac0a:	4290      	cmp	r0, r2
 800ac0c:	4607      	mov	r7, r0
 800ac0e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ac12:	460e      	mov	r6, r1
 800ac14:	bfa8      	it	ge
 800ac16:	4617      	movge	r7, r2
 800ac18:	4299      	cmp	r1, r3
 800ac1a:	4472      	add	r2, lr
 800ac1c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ac20:	bfa8      	it	ge
 800ac22:	461e      	movge	r6, r3
 800ac24:	4440      	add	r0, r8
 800ac26:	4471      	add	r1, lr
 800ac28:	4463      	add	r3, ip
 800ac2a:	b200      	sxth	r0, r0
 800ac2c:	8027      	strh	r7, [r4, #0]
 800ac2e:	b212      	sxth	r2, r2
 800ac30:	8066      	strh	r6, [r4, #2]
 800ac32:	b209      	sxth	r1, r1
 800ac34:	b21b      	sxth	r3, r3
 800ac36:	4290      	cmp	r0, r2
 800ac38:	bfac      	ite	ge
 800ac3a:	ebc7 0200 	rsbge	r2, r7, r0
 800ac3e:	ebc7 0202 	rsblt	r2, r7, r2
 800ac42:	4299      	cmp	r1, r3
 800ac44:	bfac      	ite	ge
 800ac46:	ebc6 0301 	rsbge	r3, r6, r1
 800ac4a:	ebc6 0303 	rsblt	r3, r6, r3
 800ac4e:	80a2      	strh	r2, [r4, #4]
 800ac50:	80e3      	strh	r3, [r4, #6]
 800ac52:	e7d4      	b.n	800abfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ac54:	4620      	mov	r0, r4
 800ac56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ac5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ac5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ac62:	b383      	cbz	r3, 800acc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac64:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac66:	b374      	cbz	r4, 800acc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac68:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ac6c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ac70:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ac74:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ac78:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ac7c:	b303      	cbz	r3, 800acc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ac7e:	4668      	mov	r0, sp
 800ac80:	1d21      	adds	r1, r4, #4
 800ac82:	f8ad 5000 	strh.w	r5, [sp]
 800ac86:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ac8a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ac8e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ac92:	f7ff ff43 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800ac96:	4668      	mov	r0, sp
 800ac98:	f7ff ff83 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac9c:	b980      	cbnz	r0, 800acc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ac9e:	f8bd 3000 	ldrh.w	r3, [sp]
 800aca2:	4669      	mov	r1, sp
 800aca4:	88a2      	ldrh	r2, [r4, #4]
 800aca6:	4620      	mov	r0, r4
 800aca8:	1a9b      	subs	r3, r3, r2
 800acaa:	88e2      	ldrh	r2, [r4, #6]
 800acac:	f8ad 3000 	strh.w	r3, [sp]
 800acb0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800acb4:	1a9b      	subs	r3, r3, r2
 800acb6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800acba:	6823      	ldr	r3, [r4, #0]
 800acbc:	689b      	ldr	r3, [r3, #8]
 800acbe:	4798      	blx	r3
 800acc0:	69a4      	ldr	r4, [r4, #24]
 800acc2:	2c00      	cmp	r4, #0
 800acc4:	d1d8      	bne.n	800ac78 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800acc6:	b002      	add	sp, #8
 800acc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800accc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800accc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800acce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800acd2:	460d      	mov	r5, r1
 800acd4:	4616      	mov	r6, r2
 800acd6:	b323      	cbz	r3, 800ad22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800acd8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800acda:	b314      	cbz	r4, 800ad22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800acdc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ace0:	b1eb      	cbz	r3, 800ad1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ace2:	6828      	ldr	r0, [r5, #0]
 800ace4:	466b      	mov	r3, sp
 800ace6:	6869      	ldr	r1, [r5, #4]
 800ace8:	c303      	stmia	r3!, {r0, r1}
 800acea:	4668      	mov	r0, sp
 800acec:	1d21      	adds	r1, r4, #4
 800acee:	f7ff ff15 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800acf2:	4668      	mov	r0, sp
 800acf4:	f7ff ff55 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800acf8:	b988      	cbnz	r0, 800ad1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800acfa:	f8bd 3000 	ldrh.w	r3, [sp]
 800acfe:	4669      	mov	r1, sp
 800ad00:	88a2      	ldrh	r2, [r4, #4]
 800ad02:	4620      	mov	r0, r4
 800ad04:	1a9b      	subs	r3, r3, r2
 800ad06:	88e2      	ldrh	r2, [r4, #6]
 800ad08:	f8ad 3000 	strh.w	r3, [sp]
 800ad0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ad10:	1a9b      	subs	r3, r3, r2
 800ad12:	4632      	mov	r2, r6
 800ad14:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ad18:	6823      	ldr	r3, [r4, #0]
 800ad1a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ad1c:	4798      	blx	r3
 800ad1e:	69a4      	ldr	r4, [r4, #24]
 800ad20:	e7db      	b.n	800acda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ad22:	b002      	add	sp, #8
 800ad24:	bd70      	pop	{r4, r5, r6, pc}

0800ad26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ad26:	6803      	ldr	r3, [r0, #0]
 800ad28:	b513      	push	{r0, r1, r4, lr}
 800ad2a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800ad2e:	2300      	movs	r3, #0
 800ad30:	e9cd 3300 	strd	r3, r3, [sp]
 800ad34:	466b      	mov	r3, sp
 800ad36:	47a0      	blx	r4
 800ad38:	b002      	add	sp, #8
 800ad3a:	bd10      	pop	{r4, pc}

0800ad3c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ad3c:	2301      	movs	r3, #1
 800ad3e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ad42:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ad46:	4770      	bx	lr

0800ad48 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ad48:	2301      	movs	r3, #1
 800ad4a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ad4e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800ad52:	4770      	bx	lr

0800ad54 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ad54:	6843      	ldr	r3, [r0, #4]
 800ad56:	2201      	movs	r2, #1
 800ad58:	725a      	strb	r2, [r3, #9]
 800ad5a:	6840      	ldr	r0, [r0, #4]
 800ad5c:	6803      	ldr	r3, [r0, #0]
 800ad5e:	691b      	ldr	r3, [r3, #16]
 800ad60:	4718      	bx	r3

0800ad62 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ad62:	6840      	ldr	r0, [r0, #4]
 800ad64:	6803      	ldr	r3, [r0, #0]
 800ad66:	689b      	ldr	r3, [r3, #8]
 800ad68:	4718      	bx	r3

0800ad6a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ad6a:	b530      	push	{r4, r5, lr}
 800ad6c:	b08b      	sub	sp, #44	; 0x2c
 800ad6e:	6804      	ldr	r4, [r0, #0]
 800ad70:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ad74:	9509      	str	r5, [sp, #36]	; 0x24
 800ad76:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ad7a:	9508      	str	r5, [sp, #32]
 800ad7c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ad80:	9507      	str	r5, [sp, #28]
 800ad82:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ad86:	9506      	str	r5, [sp, #24]
 800ad88:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ad8c:	9505      	str	r5, [sp, #20]
 800ad8e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ad92:	9504      	str	r5, [sp, #16]
 800ad94:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ad98:	9503      	str	r5, [sp, #12]
 800ad9a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ad9e:	9502      	str	r5, [sp, #8]
 800ada0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ada4:	e9cd 3500 	strd	r3, r5, [sp]
 800ada8:	4613      	mov	r3, r2
 800adaa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800adac:	2200      	movs	r2, #0
 800adae:	47a0      	blx	r4
 800adb0:	b00b      	add	sp, #44	; 0x2c
 800adb2:	bd30      	pop	{r4, r5, pc}

0800adb4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800adb4:	4b04      	ldr	r3, [pc, #16]	; (800adc8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800adb6:	781b      	ldrb	r3, [r3, #0]
 800adb8:	b123      	cbz	r3, 800adc4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800adba:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800adbe:	f080 0001 	eor.w	r0, r0, #1
 800adc2:	4770      	bx	lr
 800adc4:	2001      	movs	r0, #1
 800adc6:	4770      	bx	lr
 800adc8:	2400e422 	.word	0x2400e422

0800adcc <_ZN8touchgfx3HAL8endFrameEv>:
 800adcc:	b510      	push	{r4, lr}
 800adce:	4604      	mov	r4, r0
 800add0:	6840      	ldr	r0, [r0, #4]
 800add2:	6803      	ldr	r3, [r0, #0]
 800add4:	689b      	ldr	r3, [r3, #8]
 800add6:	4798      	blx	r3
 800add8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800addc:	b113      	cbz	r3, 800ade4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800adde:	2301      	movs	r3, #1
 800ade0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800ade4:	bd10      	pop	{r4, pc}

0800ade6 <_ZN8touchgfx3HAL10initializeEv>:
 800ade6:	b510      	push	{r4, lr}
 800ade8:	4604      	mov	r4, r0
 800adea:	f7f5 fd51 	bl	8000890 <_ZN8touchgfx10OSWrappers10initializeEv>
 800adee:	f7f5 fc2f 	bl	8000650 <_ZN8touchgfx4GPIO4initEv>
 800adf2:	6860      	ldr	r0, [r4, #4]
 800adf4:	6803      	ldr	r3, [r0, #0]
 800adf6:	68db      	ldr	r3, [r3, #12]
 800adf8:	4798      	blx	r3
 800adfa:	68e0      	ldr	r0, [r4, #12]
 800adfc:	6803      	ldr	r3, [r0, #0]
 800adfe:	689b      	ldr	r3, [r3, #8]
 800ae00:	4798      	blx	r3
 800ae02:	6823      	ldr	r3, [r4, #0]
 800ae04:	4620      	mov	r0, r4
 800ae06:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ae08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ae0c:	4718      	bx	r3
	...

0800ae10 <_ZN8touchgfx3HAL4tickEv>:
 800ae10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ae12:	6803      	ldr	r3, [r0, #0]
 800ae14:	4604      	mov	r4, r0
 800ae16:	4d5b      	ldr	r5, [pc, #364]	; (800af84 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ae18:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ae1c:	4798      	blx	r3
 800ae1e:	2800      	cmp	r0, #0
 800ae20:	f000 8095 	beq.w	800af4e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ae24:	2001      	movs	r0, #1
 800ae26:	2600      	movs	r6, #0
 800ae28:	f7f5 fb80 	bl	800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ae2c:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800ae30:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ae34:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ae38:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800ae3c:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800ae40:	b133      	cbz	r3, 800ae50 <_ZN8touchgfx3HAL4tickEv+0x40>
 800ae42:	6823      	ldr	r3, [r4, #0]
 800ae44:	4620      	mov	r0, r4
 800ae46:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ae4a:	4798      	blx	r3
 800ae4c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800ae50:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ae54:	2601      	movs	r6, #1
 800ae56:	6862      	ldr	r2, [r4, #4]
 800ae58:	f083 0301 	eor.w	r3, r3, #1
 800ae5c:	702e      	strb	r6, [r5, #0]
 800ae5e:	7253      	strb	r3, [r2, #9]
 800ae60:	f005 fa90 	bl	8010384 <_ZN8touchgfx11Application11getInstanceEv>
 800ae64:	6803      	ldr	r3, [r0, #0]
 800ae66:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ae68:	4798      	blx	r3
 800ae6a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ae6e:	b90b      	cbnz	r3, 800ae74 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ae70:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800ae74:	f005 fa86 	bl	8010384 <_ZN8touchgfx11Application11getInstanceEv>
 800ae78:	6803      	ldr	r3, [r0, #0]
 800ae7a:	695b      	ldr	r3, [r3, #20]
 800ae7c:	4798      	blx	r3
 800ae7e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ae80:	6803      	ldr	r3, [r0, #0]
 800ae82:	691b      	ldr	r3, [r3, #16]
 800ae84:	4798      	blx	r3
 800ae86:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ae8a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800ae8e:	3b01      	subs	r3, #1
 800ae90:	b2db      	uxtb	r3, r3
 800ae92:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ae96:	b10a      	cbz	r2, 800ae9c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ae98:	2b00      	cmp	r3, #0
 800ae9a:	d1eb      	bne.n	800ae74 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ae9c:	4a3a      	ldr	r2, [pc, #232]	; (800af88 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ae9e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800aea2:	7813      	ldrb	r3, [r2, #0]
 800aea4:	3301      	adds	r3, #1
 800aea6:	b25b      	sxtb	r3, r3
 800aea8:	4299      	cmp	r1, r3
 800aeaa:	7013      	strb	r3, [r2, #0]
 800aeac:	dc10      	bgt.n	800aed0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800aeae:	2300      	movs	r3, #0
 800aeb0:	68e0      	ldr	r0, [r4, #12]
 800aeb2:	a902      	add	r1, sp, #8
 800aeb4:	7013      	strb	r3, [r2, #0]
 800aeb6:	aa03      	add	r2, sp, #12
 800aeb8:	6803      	ldr	r3, [r0, #0]
 800aeba:	68db      	ldr	r3, [r3, #12]
 800aebc:	4798      	blx	r3
 800aebe:	6823      	ldr	r3, [r4, #0]
 800aec0:	2800      	cmp	r0, #0
 800aec2:	d050      	beq.n	800af66 <_ZN8touchgfx3HAL4tickEv+0x156>
 800aec4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800aec8:	4620      	mov	r0, r4
 800aeca:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800aece:	4798      	blx	r3
 800aed0:	2300      	movs	r3, #0
 800aed2:	6960      	ldr	r0, [r4, #20]
 800aed4:	f88d 3007 	strb.w	r3, [sp, #7]
 800aed8:	b158      	cbz	r0, 800aef2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aeda:	6803      	ldr	r3, [r0, #0]
 800aedc:	f10d 0107 	add.w	r1, sp, #7
 800aee0:	68db      	ldr	r3, [r3, #12]
 800aee2:	4798      	blx	r3
 800aee4:	b128      	cbz	r0, 800aef2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aee6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800aee8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800aeec:	6803      	ldr	r3, [r0, #0]
 800aeee:	68db      	ldr	r3, [r3, #12]
 800aef0:	4798      	blx	r3
 800aef2:	f104 001c 	add.w	r0, r4, #28
 800aef6:	f015 fbb3 	bl	8020660 <_ZN8touchgfx8Gestures4tickEv>
 800aefa:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800aefe:	b30b      	cbz	r3, 800af44 <_ZN8touchgfx3HAL4tickEv+0x134>
 800af00:	6920      	ldr	r0, [r4, #16]
 800af02:	6803      	ldr	r3, [r0, #0]
 800af04:	691b      	ldr	r3, [r3, #16]
 800af06:	4798      	blx	r3
 800af08:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800af0a:	4606      	mov	r6, r0
 800af0c:	b903      	cbnz	r3, 800af10 <_ZN8touchgfx3HAL4tickEv+0x100>
 800af0e:	6760      	str	r0, [r4, #116]	; 0x74
 800af10:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800af12:	4a1e      	ldr	r2, [pc, #120]	; (800af8c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800af14:	1af3      	subs	r3, r6, r3
 800af16:	4293      	cmp	r3, r2
 800af18:	d914      	bls.n	800af44 <_ZN8touchgfx3HAL4tickEv+0x134>
 800af1a:	6920      	ldr	r0, [r4, #16]
 800af1c:	6803      	ldr	r3, [r0, #0]
 800af1e:	699b      	ldr	r3, [r3, #24]
 800af20:	4798      	blx	r3
 800af22:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800af24:	2264      	movs	r2, #100	; 0x64
 800af26:	1af3      	subs	r3, r6, r3
 800af28:	fbb3 f3f2 	udiv	r3, r3, r2
 800af2c:	fbb0 f0f3 	udiv	r0, r0, r3
 800af30:	2800      	cmp	r0, #0
 800af32:	dc1d      	bgt.n	800af70 <_ZN8touchgfx3HAL4tickEv+0x160>
 800af34:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800af38:	6920      	ldr	r0, [r4, #16]
 800af3a:	2100      	movs	r1, #0
 800af3c:	6803      	ldr	r3, [r0, #0]
 800af3e:	69db      	ldr	r3, [r3, #28]
 800af40:	4798      	blx	r3
 800af42:	6766      	str	r6, [r4, #116]	; 0x74
 800af44:	f005 fa1e 	bl	8010384 <_ZN8touchgfx11Application11getInstanceEv>
 800af48:	6803      	ldr	r3, [r0, #0]
 800af4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af4c:	4798      	blx	r3
 800af4e:	6823      	ldr	r3, [r4, #0]
 800af50:	4620      	mov	r0, r4
 800af52:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800af56:	4798      	blx	r3
 800af58:	2001      	movs	r0, #1
 800af5a:	f7f5 fb15 	bl	8000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800af5e:	2300      	movs	r3, #0
 800af60:	702b      	strb	r3, [r5, #0]
 800af62:	b004      	add	sp, #16
 800af64:	bd70      	pop	{r4, r5, r6, pc}
 800af66:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800af6a:	4620      	mov	r0, r4
 800af6c:	4798      	blx	r3
 800af6e:	e7af      	b.n	800aed0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800af70:	2863      	cmp	r0, #99	; 0x63
 800af72:	bfcb      	itete	gt
 800af74:	2300      	movgt	r3, #0
 800af76:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800af7a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800af7e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800af82:	e7d9      	b.n	800af38 <_ZN8touchgfx3HAL4tickEv+0x128>
 800af84:	2400e428 	.word	0x2400e428
 800af88:	2400e429 	.word	0x2400e429
 800af8c:	05f5e100 	.word	0x05f5e100

0800af90 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800af90:	b510      	push	{r4, lr}
 800af92:	4604      	mov	r4, r0
 800af94:	f7f5 fcac 	bl	80008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800af98:	2200      	movs	r2, #0
 800af9a:	6863      	ldr	r3, [r4, #4]
 800af9c:	729a      	strb	r2, [r3, #10]
 800af9e:	bd10      	pop	{r4, pc}

0800afa0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800afa0:	65c1      	str	r1, [r0, #92]	; 0x5c
 800afa2:	301c      	adds	r0, #28
 800afa4:	f015 bb5a 	b.w	802065c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800afa8 <_ZN8touchgfx3HAL5touchEll>:
 800afa8:	b530      	push	{r4, r5, lr}
 800afaa:	b087      	sub	sp, #28
 800afac:	4604      	mov	r4, r0
 800afae:	a804      	add	r0, sp, #16
 800afb0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800afb4:	f004 ffb2 	bl	800ff1c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800afb8:	9b04      	ldr	r3, [sp, #16]
 800afba:	a906      	add	r1, sp, #24
 800afbc:	a803      	add	r0, sp, #12
 800afbe:	f8ad 300c 	strh.w	r3, [sp, #12]
 800afc2:	9b05      	ldr	r3, [sp, #20]
 800afc4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800afc8:	f004 fffa 	bl	800ffc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800afcc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800afd0:	f104 001c 	add.w	r0, r4, #28
 800afd4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800afd8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800afdc:	b189      	cbz	r1, 800b002 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800afde:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800afe2:	9300      	str	r3, [sp, #0]
 800afe4:	4613      	mov	r3, r2
 800afe6:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800afea:	462a      	mov	r2, r5
 800afec:	f015 fb46 	bl	802067c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800aff0:	b128      	cbz	r0, 800affe <_ZN8touchgfx3HAL5touchEll+0x56>
 800aff2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800aff6:	6623      	str	r3, [r4, #96]	; 0x60
 800aff8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800affc:	6663      	str	r3, [r4, #100]	; 0x64
 800affe:	b007      	add	sp, #28
 800b000:	bd30      	pop	{r4, r5, pc}
 800b002:	f015 fb7b 	bl	80206fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b006:	2301      	movs	r3, #1
 800b008:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800b00c:	e7f1      	b.n	800aff2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b00e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b00e:	b510      	push	{r4, lr}
 800b010:	2b00      	cmp	r3, #0
 800b012:	d046      	beq.n	800b0a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b014:	ea81 0002 	eor.w	r0, r1, r2
 800b018:	07c4      	lsls	r4, r0, #31
 800b01a:	d508      	bpl.n	800b02e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b01c:	440b      	add	r3, r1
 800b01e:	3a01      	subs	r2, #1
 800b020:	428b      	cmp	r3, r1
 800b022:	d93e      	bls.n	800b0a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b024:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b028:	f801 0b01 	strb.w	r0, [r1], #1
 800b02c:	e7f8      	b.n	800b020 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b02e:	07d0      	lsls	r0, r2, #31
 800b030:	bf42      	ittt	mi
 800b032:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b036:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b03a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b03e:	2b01      	cmp	r3, #1
 800b040:	d911      	bls.n	800b066 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b042:	ea81 0402 	eor.w	r4, r1, r2
 800b046:	4610      	mov	r0, r2
 800b048:	07a4      	lsls	r4, r4, #30
 800b04a:	d022      	beq.n	800b092 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b04c:	f023 0401 	bic.w	r4, r3, #1
 800b050:	440c      	add	r4, r1
 800b052:	428c      	cmp	r4, r1
 800b054:	4602      	mov	r2, r0
 800b056:	d904      	bls.n	800b062 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b058:	8812      	ldrh	r2, [r2, #0]
 800b05a:	3002      	adds	r0, #2
 800b05c:	f821 2b02 	strh.w	r2, [r1], #2
 800b060:	e7f7      	b.n	800b052 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b062:	f003 0301 	and.w	r3, r3, #1
 800b066:	f023 0003 	bic.w	r0, r3, #3
 800b06a:	4408      	add	r0, r1
 800b06c:	4288      	cmp	r0, r1
 800b06e:	4614      	mov	r4, r2
 800b070:	d904      	bls.n	800b07c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b072:	6824      	ldr	r4, [r4, #0]
 800b074:	3204      	adds	r2, #4
 800b076:	f841 4b04 	str.w	r4, [r1], #4
 800b07a:	e7f7      	b.n	800b06c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b07c:	f003 0303 	and.w	r3, r3, #3
 800b080:	3a01      	subs	r2, #1
 800b082:	440b      	add	r3, r1
 800b084:	428b      	cmp	r3, r1
 800b086:	d90c      	bls.n	800b0a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b088:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b08c:	f801 0b01 	strb.w	r0, [r1], #1
 800b090:	e7f8      	b.n	800b084 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b092:	0790      	lsls	r0, r2, #30
 800b094:	d0e7      	beq.n	800b066 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b096:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b09a:	3b02      	subs	r3, #2
 800b09c:	f821 0b02 	strh.w	r0, [r1], #2
 800b0a0:	e7e1      	b.n	800b066 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b0a2:	2001      	movs	r0, #1
 800b0a4:	bd10      	pop	{r4, pc}

0800b0a6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b0a6:	b510      	push	{r4, lr}
 800b0a8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800b0ac:	4604      	mov	r4, r0
 800b0ae:	b153      	cbz	r3, 800b0c6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b0b0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800b0b4:	2101      	movs	r1, #1
 800b0b6:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800b0ba:	301c      	adds	r0, #28
 800b0bc:	f015 fb1e 	bl	80206fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b0c0:	2300      	movs	r3, #0
 800b0c2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800b0c6:	bd10      	pop	{r4, pc}

0800b0c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b0c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0cc:	b085      	sub	sp, #20
 800b0ce:	4604      	mov	r4, r0
 800b0d0:	2000      	movs	r0, #0
 800b0d2:	4699      	mov	r9, r3
 800b0d4:	ad04      	add	r5, sp, #16
 800b0d6:	460f      	mov	r7, r1
 800b0d8:	4690      	mov	r8, r2
 800b0da:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b0de:	69a0      	ldr	r0, [r4, #24]
 800b0e0:	6806      	ldr	r6, [r0, #0]
 800b0e2:	9501      	str	r5, [sp, #4]
 800b0e4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b0e8:	9500      	str	r5, [sp, #0]
 800b0ea:	6835      	ldr	r5, [r6, #0]
 800b0ec:	47a8      	blx	r5
 800b0ee:	4d10      	ldr	r5, [pc, #64]	; (800b130 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b0f0:	4606      	mov	r6, r0
 800b0f2:	f8a5 9000 	strh.w	r9, [r5]
 800b0f6:	f7f7 f993 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b0fa:	6803      	ldr	r3, [r0, #0]
 800b0fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0fe:	4798      	blx	r3
 800b100:	b128      	cbz	r0, 800b10e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b102:	2801      	cmp	r0, #1
 800b104:	d00b      	beq.n	800b11e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b106:	4630      	mov	r0, r6
 800b108:	b005      	add	sp, #20
 800b10a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b10e:	882b      	ldrh	r3, [r5, #0]
 800b110:	fb08 7203 	mla	r2, r8, r3, r7
 800b114:	9b03      	ldr	r3, [sp, #12]
 800b116:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b11a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b11c:	e7f3      	b.n	800b106 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b11e:	882a      	ldrh	r2, [r5, #0]
 800b120:	9b03      	ldr	r3, [sp, #12]
 800b122:	fb08 7202 	mla	r2, r8, r2, r7
 800b126:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b12a:	1a9a      	subs	r2, r3, r2
 800b12c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b12e:	e7ea      	b.n	800b106 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b130:	2400e41e 	.word	0x2400e41e

0800b134 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b134:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b136:	b08b      	sub	sp, #44	; 0x2c
 800b138:	4617      	mov	r7, r2
 800b13a:	4604      	mov	r4, r0
 800b13c:	460e      	mov	r6, r1
 800b13e:	461d      	mov	r5, r3
 800b140:	f7f7 f96e 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b144:	6803      	ldr	r3, [r0, #0]
 800b146:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b148:	4798      	blx	r3
 800b14a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b14e:	9007      	str	r0, [sp, #28]
 800b150:	4631      	mov	r1, r6
 800b152:	6822      	ldr	r2, [r4, #0]
 800b154:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b158:	4b0c      	ldr	r3, [pc, #48]	; (800b18c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b15a:	4620      	mov	r0, r4
 800b15c:	881b      	ldrh	r3, [r3, #0]
 800b15e:	9306      	str	r3, [sp, #24]
 800b160:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b164:	9305      	str	r3, [sp, #20]
 800b166:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b16a:	9304      	str	r3, [sp, #16]
 800b16c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b170:	9303      	str	r3, [sp, #12]
 800b172:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b176:	9302      	str	r3, [sp, #8]
 800b178:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b17c:	e9cd 5300 	strd	r5, r3, [sp]
 800b180:	463b      	mov	r3, r7
 800b182:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b184:	2200      	movs	r2, #0
 800b186:	47a8      	blx	r5
 800b188:	b00b      	add	sp, #44	; 0x2c
 800b18a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b18c:	2400e41e 	.word	0x2400e41e

0800b190 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b190:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b194:	4698      	mov	r8, r3
 800b196:	6803      	ldr	r3, [r0, #0]
 800b198:	b08b      	sub	sp, #44	; 0x2c
 800b19a:	4617      	mov	r7, r2
 800b19c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b19e:	460e      	mov	r6, r1
 800b1a0:	4b13      	ldr	r3, [pc, #76]	; (800b1f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b1a2:	4604      	mov	r4, r0
 800b1a4:	f8b3 9000 	ldrh.w	r9, [r3]
 800b1a8:	f7f7 f93a 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b1ac:	6803      	ldr	r3, [r0, #0]
 800b1ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1b0:	4798      	blx	r3
 800b1b2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b1b6:	2200      	movs	r2, #0
 800b1b8:	4631      	mov	r1, r6
 800b1ba:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b1be:	2302      	movs	r3, #2
 800b1c0:	4620      	mov	r0, r4
 800b1c2:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b1c6:	2301      	movs	r3, #1
 800b1c8:	9305      	str	r3, [sp, #20]
 800b1ca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b1ce:	9304      	str	r3, [sp, #16]
 800b1d0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b1d4:	9303      	str	r3, [sp, #12]
 800b1d6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b1da:	9302      	str	r3, [sp, #8]
 800b1dc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b1e0:	e9cd 8300 	strd	r8, r3, [sp]
 800b1e4:	463b      	mov	r3, r7
 800b1e6:	47a8      	blx	r5
 800b1e8:	b00b      	add	sp, #44	; 0x2c
 800b1ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b1ee:	bf00      	nop
 800b1f0:	2400e41e 	.word	0x2400e41e

0800b1f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b1f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1f8:	4698      	mov	r8, r3
 800b1fa:	6803      	ldr	r3, [r0, #0]
 800b1fc:	b087      	sub	sp, #28
 800b1fe:	460e      	mov	r6, r1
 800b200:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b202:	4617      	mov	r7, r2
 800b204:	4b0f      	ldr	r3, [pc, #60]	; (800b244 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b206:	4604      	mov	r4, r0
 800b208:	f8b3 9000 	ldrh.w	r9, [r3]
 800b20c:	f7f7 f908 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b210:	6803      	ldr	r3, [r0, #0]
 800b212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b214:	4798      	blx	r3
 800b216:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b21a:	463a      	mov	r2, r7
 800b21c:	4631      	mov	r1, r6
 800b21e:	f8cd 900c 	str.w	r9, [sp, #12]
 800b222:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b226:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b22a:	4620      	mov	r0, r4
 800b22c:	9302      	str	r3, [sp, #8]
 800b22e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b232:	9301      	str	r3, [sp, #4]
 800b234:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b238:	9300      	str	r3, [sp, #0]
 800b23a:	4643      	mov	r3, r8
 800b23c:	47a8      	blx	r5
 800b23e:	b007      	add	sp, #28
 800b240:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b244:	2400e41e 	.word	0x2400e41e

0800b248 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b24c:	4604      	mov	r4, r0
 800b24e:	b08f      	sub	sp, #60	; 0x3c
 800b250:	4610      	mov	r0, r2
 800b252:	460d      	mov	r5, r1
 800b254:	4691      	mov	r9, r2
 800b256:	461e      	mov	r6, r3
 800b258:	f007 fdd4 	bl	8012e04 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b25c:	2800      	cmp	r0, #0
 800b25e:	f000 809d 	beq.w	800b39c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b262:	6823      	ldr	r3, [r4, #0]
 800b264:	4620      	mov	r0, r4
 800b266:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b400 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b26a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b26e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b270:	4798      	blx	r3
 800b272:	6823      	ldr	r3, [r4, #0]
 800b274:	4620      	mov	r0, r4
 800b276:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800b404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b27a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b27c:	4798      	blx	r3
 800b27e:	f8bb 3000 	ldrh.w	r3, [fp]
 800b282:	4f5c      	ldr	r7, [pc, #368]	; (800b3f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b284:	9301      	str	r3, [sp, #4]
 800b286:	f8ba 3000 	ldrh.w	r3, [sl]
 800b28a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b28e:	4640      	mov	r0, r8
 800b290:	9302      	str	r3, [sp, #8]
 800b292:	883b      	ldrh	r3, [r7, #0]
 800b294:	9303      	str	r3, [sp, #12]
 800b296:	4b58      	ldr	r3, [pc, #352]	; (800b3f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b298:	881a      	ldrh	r2, [r3, #0]
 800b29a:	9305      	str	r3, [sp, #20]
 800b29c:	9204      	str	r2, [sp, #16]
 800b29e:	f007 fe45 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b2a2:	8038      	strh	r0, [r7, #0]
 800b2a4:	4640      	mov	r0, r8
 800b2a6:	f007 fe75 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b2aa:	9b05      	ldr	r3, [sp, #20]
 800b2ac:	b280      	uxth	r0, r0
 800b2ae:	8018      	strh	r0, [r3, #0]
 800b2b0:	4b52      	ldr	r3, [pc, #328]	; (800b3fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b2b2:	781b      	ldrb	r3, [r3, #0]
 800b2b4:	2b00      	cmp	r3, #0
 800b2b6:	d174      	bne.n	800b3a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b2b8:	883b      	ldrh	r3, [r7, #0]
 800b2ba:	f8aa 0000 	strh.w	r0, [sl]
 800b2be:	f8ab 3000 	strh.w	r3, [fp]
 800b2c2:	4648      	mov	r0, r9
 800b2c4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b2c8:	f007 fd9c 	bl	8012e04 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b2cc:	2200      	movs	r2, #0
 800b2ce:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b2d2:	4611      	mov	r1, r2
 800b2d4:	4628      	mov	r0, r5
 800b2d6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b2da:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b2de:	f7f7 fab9 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800b2e2:	2301      	movs	r3, #1
 800b2e4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b2e8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b2ec:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b2f0:	2b00      	cmp	r3, #0
 800b2f2:	dd5c      	ble.n	800b3ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b2f4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b2f8:	2b00      	cmp	r3, #0
 800b2fa:	dd58      	ble.n	800b3ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b2fc:	462a      	mov	r2, r5
 800b2fe:	ab0a      	add	r3, sp, #40	; 0x28
 800b300:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b304:	6851      	ldr	r1, [r2, #4]
 800b306:	c303      	stmia	r3!, {r0, r1}
 800b308:	4631      	mov	r1, r6
 800b30a:	a80a      	add	r0, sp, #40	; 0x28
 800b30c:	f7ff fc06 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800b310:	4b38      	ldr	r3, [pc, #224]	; (800b3f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b312:	2100      	movs	r1, #0
 800b314:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b318:	4b37      	ldr	r3, [pc, #220]	; (800b3f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b31a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b31e:	aa0a      	add	r2, sp, #40	; 0x28
 800b320:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b324:	910c      	str	r1, [sp, #48]	; 0x30
 800b326:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b32a:	ab08      	add	r3, sp, #32
 800b32c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b330:	e883 0003 	stmia.w	r3, {r0, r1}
 800b334:	4618      	mov	r0, r3
 800b336:	a90c      	add	r1, sp, #48	; 0x30
 800b338:	f7ff fbf0 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800b33c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b33e:	2b00      	cmp	r3, #0
 800b340:	d13c      	bne.n	800b3bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b342:	2000      	movs	r0, #0
 800b344:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800b348:	2600      	movs	r6, #0
 800b34a:	696b      	ldr	r3, [r5, #20]
 800b34c:	a908      	add	r1, sp, #32
 800b34e:	682a      	ldr	r2, [r5, #0]
 800b350:	4628      	mov	r0, r5
 800b352:	9305      	str	r3, [sp, #20]
 800b354:	616e      	str	r6, [r5, #20]
 800b356:	6892      	ldr	r2, [r2, #8]
 800b358:	4790      	blx	r2
 800b35a:	9b05      	ldr	r3, [sp, #20]
 800b35c:	4652      	mov	r2, sl
 800b35e:	4649      	mov	r1, r9
 800b360:	616b      	str	r3, [r5, #20]
 800b362:	4628      	mov	r0, r5
 800b364:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800b368:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b36c:	f7f7 fa72 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 800b370:	9a01      	ldr	r2, [sp, #4]
 800b372:	4b23      	ldr	r3, [pc, #140]	; (800b400 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b374:	4620      	mov	r0, r4
 800b376:	801a      	strh	r2, [r3, #0]
 800b378:	9a02      	ldr	r2, [sp, #8]
 800b37a:	4b22      	ldr	r3, [pc, #136]	; (800b404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b37c:	801a      	strh	r2, [r3, #0]
 800b37e:	9a03      	ldr	r2, [sp, #12]
 800b380:	4b1c      	ldr	r3, [pc, #112]	; (800b3f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b382:	801a      	strh	r2, [r3, #0]
 800b384:	4b1c      	ldr	r3, [pc, #112]	; (800b3f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b386:	9a04      	ldr	r2, [sp, #16]
 800b388:	801a      	strh	r2, [r3, #0]
 800b38a:	6823      	ldr	r3, [r4, #0]
 800b38c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b390:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b392:	4798      	blx	r3
 800b394:	6823      	ldr	r3, [r4, #0]
 800b396:	4620      	mov	r0, r4
 800b398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b39a:	4798      	blx	r3
 800b39c:	b00f      	add	sp, #60	; 0x3c
 800b39e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3a2:	883b      	ldrh	r3, [r7, #0]
 800b3a4:	f8ab 0000 	strh.w	r0, [fp]
 800b3a8:	f8aa 3000 	strh.w	r3, [sl]
 800b3ac:	e789      	b.n	800b2c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b3ae:	462a      	mov	r2, r5
 800b3b0:	ab0a      	add	r3, sp, #40	; 0x28
 800b3b2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b3b6:	6851      	ldr	r1, [r2, #4]
 800b3b8:	c303      	stmia	r3!, {r0, r1}
 800b3ba:	e7a9      	b.n	800b310 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b3bc:	a807      	add	r0, sp, #28
 800b3be:	f007 ff25 	bl	801320c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b3c2:	4606      	mov	r6, r0
 800b3c4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b3c6:	6803      	ldr	r3, [r0, #0]
 800b3c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3ca:	4798      	blx	r3
 800b3cc:	4286      	cmp	r6, r0
 800b3ce:	d1b8      	bne.n	800b342 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b3d0:	f7f7 f826 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b3d4:	6803      	ldr	r3, [r0, #0]
 800b3d6:	4606      	mov	r6, r0
 800b3d8:	a807      	add	r0, sp, #28
 800b3da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b3dc:	9305      	str	r3, [sp, #20]
 800b3de:	f007 ff15 	bl	801320c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b3e2:	9b05      	ldr	r3, [sp, #20]
 800b3e4:	4601      	mov	r1, r0
 800b3e6:	4630      	mov	r0, r6
 800b3e8:	4798      	blx	r3
 800b3ea:	f080 0001 	eor.w	r0, r0, #1
 800b3ee:	b2c0      	uxtb	r0, r0
 800b3f0:	e7a8      	b.n	800b344 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b3f2:	bf00      	nop
 800b3f4:	2400e418 	.word	0x2400e418
 800b3f8:	2400e41a 	.word	0x2400e41a
 800b3fc:	2400e41c 	.word	0x2400e41c
 800b400:	2400e41e 	.word	0x2400e41e
 800b404:	2400e420 	.word	0x2400e420

0800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b408:	4b07      	ldr	r3, [pc, #28]	; (800b428 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b40a:	b510      	push	{r4, lr}
 800b40c:	781b      	ldrb	r3, [r3, #0]
 800b40e:	4604      	mov	r4, r0
 800b410:	b13b      	cbz	r3, 800b422 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b412:	6803      	ldr	r3, [r0, #0]
 800b414:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b416:	4798      	blx	r3
 800b418:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b41a:	4283      	cmp	r3, r0
 800b41c:	d101      	bne.n	800b422 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b41e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b420:	bd10      	pop	{r4, pc}
 800b422:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b424:	e7fc      	b.n	800b420 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b426:	bf00      	nop
 800b428:	2400e422 	.word	0x2400e422

0800b42c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b42c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b430:	461d      	mov	r5, r3
 800b432:	b08a      	sub	sp, #40	; 0x28
 800b434:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b438:	4690      	mov	r8, r2
 800b43a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b43e:	2400      	movs	r4, #0
 800b440:	4607      	mov	r7, r0
 800b442:	fb06 8505 	mla	r5, r6, r5, r8
 800b446:	9404      	str	r4, [sp, #16]
 800b448:	f88d 4020 	strb.w	r4, [sp, #32]
 800b44c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b450:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b454:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b458:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b45c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b460:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b464:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b468:	f7ff ffce 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b46c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b470:	6878      	ldr	r0, [r7, #4]
 800b472:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b476:	a901      	add	r1, sp, #4
 800b478:	9505      	str	r5, [sp, #20]
 800b47a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b47e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b482:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b486:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b48a:	6803      	ldr	r3, [r0, #0]
 800b48c:	685b      	ldr	r3, [r3, #4]
 800b48e:	4798      	blx	r3
 800b490:	b00a      	add	sp, #40	; 0x28
 800b492:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b496 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b496:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b49a:	b08b      	sub	sp, #44	; 0x2c
 800b49c:	2400      	movs	r4, #0
 800b49e:	4691      	mov	r9, r2
 800b4a0:	461d      	mov	r5, r3
 800b4a2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b4a6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b4aa:	4688      	mov	r8, r1
 800b4ac:	4607      	mov	r7, r0
 800b4ae:	9404      	str	r4, [sp, #16]
 800b4b0:	fb06 9505 	mla	r5, r6, r5, r9
 800b4b4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b4b8:	f7ff ffa6 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b4bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b4c0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b4c4:	6878      	ldr	r0, [r7, #4]
 800b4c6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b4ca:	a901      	add	r1, sp, #4
 800b4cc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b4d0:	9505      	str	r5, [sp, #20]
 800b4d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b4d6:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b4da:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b4de:	f8cd 8010 	str.w	r8, [sp, #16]
 800b4e2:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b4e6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b4ea:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b4ee:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b4f2:	6803      	ldr	r3, [r0, #0]
 800b4f4:	685b      	ldr	r3, [r3, #4]
 800b4f6:	4798      	blx	r3
 800b4f8:	b00b      	add	sp, #44	; 0x2c
 800b4fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b500 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b504:	b08a      	sub	sp, #40	; 0x28
 800b506:	4698      	mov	r8, r3
 800b508:	2300      	movs	r3, #0
 800b50a:	4606      	mov	r6, r0
 800b50c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b510:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b514:	2d0b      	cmp	r5, #11
 800b516:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b51a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b51e:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b522:	9304      	str	r3, [sp, #16]
 800b524:	d137      	bne.n	800b596 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b526:	2380      	movs	r3, #128	; 0x80
 800b528:	f88d 0020 	strb.w	r0, [sp, #32]
 800b52c:	4630      	mov	r0, r6
 800b52e:	9203      	str	r2, [sp, #12]
 800b530:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b534:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b538:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b53c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b540:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b544:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b548:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b54c:	f7ff ff5c 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b550:	2c0b      	cmp	r4, #11
 800b552:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b556:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b55a:	bf94      	ite	ls
 800b55c:	4b19      	ldrls	r3, [pc, #100]	; (800b5c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b55e:	2100      	movhi	r1, #0
 800b560:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b564:	bf98      	it	ls
 800b566:	5d19      	ldrbls	r1, [r3, r4]
 800b568:	fb02 8307 	mla	r3, r2, r7, r8
 800b56c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b570:	10c9      	asrs	r1, r1, #3
 800b572:	fb01 0003 	mla	r0, r1, r3, r0
 800b576:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b57a:	a901      	add	r1, sp, #4
 800b57c:	9005      	str	r0, [sp, #20]
 800b57e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b582:	2300      	movs	r3, #0
 800b584:	6870      	ldr	r0, [r6, #4]
 800b586:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b58a:	6803      	ldr	r3, [r0, #0]
 800b58c:	685b      	ldr	r3, [r3, #4]
 800b58e:	4798      	blx	r3
 800b590:	b00a      	add	sp, #40	; 0x28
 800b592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b596:	2d02      	cmp	r5, #2
 800b598:	d109      	bne.n	800b5ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b59a:	28ff      	cmp	r0, #255	; 0xff
 800b59c:	d105      	bne.n	800b5aa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b59e:	f1bc 0f00 	cmp.w	ip, #0
 800b5a2:	bf14      	ite	ne
 800b5a4:	2340      	movne	r3, #64	; 0x40
 800b5a6:	2320      	moveq	r3, #32
 800b5a8:	e7be      	b.n	800b528 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5aa:	2340      	movs	r3, #64	; 0x40
 800b5ac:	e7bc      	b.n	800b528 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5ae:	28ff      	cmp	r0, #255	; 0xff
 800b5b0:	d105      	bne.n	800b5be <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b5b2:	f1bc 0f00 	cmp.w	ip, #0
 800b5b6:	bf14      	ite	ne
 800b5b8:	2304      	movne	r3, #4
 800b5ba:	2301      	moveq	r3, #1
 800b5bc:	e7b4      	b.n	800b528 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5be:	2304      	movs	r3, #4
 800b5c0:	e7b2      	b.n	800b528 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5c2:	bf00      	nop
 800b5c4:	080233a0 	.word	0x080233a0

0800b5c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b5c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5cc:	b08b      	sub	sp, #44	; 0x2c
 800b5ce:	461d      	mov	r5, r3
 800b5d0:	2400      	movs	r4, #0
 800b5d2:	4688      	mov	r8, r1
 800b5d4:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b5d8:	4693      	mov	fp, r2
 800b5da:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b5de:	4607      	mov	r7, r0
 800b5e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b5e4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b5e8:	9404      	str	r4, [sp, #16]
 800b5ea:	bf14      	ite	ne
 800b5ec:	2308      	movne	r3, #8
 800b5ee:	2302      	moveq	r3, #2
 800b5f0:	fb05 b50a 	mla	r5, r5, sl, fp
 800b5f4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b5f8:	f7ff ff06 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b5fc:	2e0b      	cmp	r6, #11
 800b5fe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b602:	a901      	add	r1, sp, #4
 800b604:	bf98      	it	ls
 800b606:	4b13      	ldrls	r3, [pc, #76]	; (800b654 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b608:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b60c:	bf98      	it	ls
 800b60e:	5d9c      	ldrbls	r4, [r3, r6]
 800b610:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b614:	10e4      	asrs	r4, r4, #3
 800b616:	f8cd 8010 	str.w	r8, [sp, #16]
 800b61a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b61e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b622:	fb04 0405 	mla	r4, r4, r5, r0
 800b626:	6878      	ldr	r0, [r7, #4]
 800b628:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b62c:	2300      	movs	r3, #0
 800b62e:	9405      	str	r4, [sp, #20]
 800b630:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b634:	f88d 9020 	strb.w	r9, [sp, #32]
 800b638:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b63c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b640:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b644:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b648:	6803      	ldr	r3, [r0, #0]
 800b64a:	685b      	ldr	r3, [r3, #4]
 800b64c:	4798      	blx	r3
 800b64e:	b00b      	add	sp, #44	; 0x2c
 800b650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b654:	080233a0 	.word	0x080233a0

0800b658 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b65c:	461e      	mov	r6, r3
 800b65e:	4b0a      	ldr	r3, [pc, #40]	; (800b688 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b660:	460f      	mov	r7, r1
 800b662:	4690      	mov	r8, r2
 800b664:	881d      	ldrh	r5, [r3, #0]
 800b666:	f7f6 fedb 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b66a:	6803      	ldr	r3, [r0, #0]
 800b66c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b66e:	4798      	blx	r3
 800b670:	280b      	cmp	r0, #11
 800b672:	bf96      	itet	ls
 800b674:	4b05      	ldrls	r3, [pc, #20]	; (800b68c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b676:	2400      	movhi	r4, #0
 800b678:	5c1c      	ldrbls	r4, [r3, r0]
 800b67a:	fb08 7005 	mla	r0, r8, r5, r7
 800b67e:	10e4      	asrs	r4, r4, #3
 800b680:	fb04 6000 	mla	r0, r4, r0, r6
 800b684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b688:	2400e41e 	.word	0x2400e41e
 800b68c:	080233a0 	.word	0x080233a0

0800b690 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b690:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b692:	b08b      	sub	sp, #44	; 0x2c
 800b694:	461f      	mov	r7, r3
 800b696:	4604      	mov	r4, r0
 800b698:	4616      	mov	r6, r2
 800b69a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b69e:	2500      	movs	r5, #0
 800b6a0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b6a8:	9504      	str	r5, [sp, #16]
 800b6aa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b6b2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6b6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b6ba:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b6be:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b6c2:	f88d 3020 	strb.w	r3, [sp, #32]
 800b6c6:	f7ff fe9f 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6ca:	463a      	mov	r2, r7
 800b6cc:	4631      	mov	r1, r6
 800b6ce:	4603      	mov	r3, r0
 800b6d0:	4620      	mov	r0, r4
 800b6d2:	f7ff ffc1 	bl	800b658 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b6d6:	4b0e      	ldr	r3, [pc, #56]	; (800b710 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b6d8:	9005      	str	r0, [sp, #20]
 800b6da:	881b      	ldrh	r3, [r3, #0]
 800b6dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b6e0:	f7f6 fe9e 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b6e4:	6803      	ldr	r3, [r0, #0]
 800b6e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6e8:	4798      	blx	r3
 800b6ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b6ec:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b6f0:	a901      	add	r1, sp, #4
 800b6f2:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b6f6:	9304      	str	r3, [sp, #16]
 800b6f8:	6860      	ldr	r0, [r4, #4]
 800b6fa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b6fe:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b702:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b706:	6803      	ldr	r3, [r0, #0]
 800b708:	685b      	ldr	r3, [r3, #4]
 800b70a:	4798      	blx	r3
 800b70c:	b00b      	add	sp, #44	; 0x2c
 800b70e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b710:	2400e41e 	.word	0x2400e41e

0800b714 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b714:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b716:	b08d      	sub	sp, #52	; 0x34
 800b718:	2501      	movs	r5, #1
 800b71a:	4604      	mov	r4, r0
 800b71c:	466b      	mov	r3, sp
 800b71e:	9503      	str	r5, [sp, #12]
 800b720:	e883 0006 	stmia.w	r3, {r1, r2}
 800b724:	2300      	movs	r3, #0
 800b726:	f8bd 6000 	ldrh.w	r6, [sp]
 800b72a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b72e:	9306      	str	r3, [sp, #24]
 800b730:	6803      	ldr	r3, [r0, #0]
 800b732:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b734:	4798      	blx	r3
 800b736:	463a      	mov	r2, r7
 800b738:	4631      	mov	r1, r6
 800b73a:	4603      	mov	r3, r0
 800b73c:	4620      	mov	r0, r4
 800b73e:	f7ff ff8b 	bl	800b658 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b742:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b744:	9004      	str	r0, [sp, #16]
 800b746:	9307      	str	r3, [sp, #28]
 800b748:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b74c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b750:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b754:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b758:	4b0e      	ldr	r3, [pc, #56]	; (800b794 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b75a:	881b      	ldrh	r3, [r3, #0]
 800b75c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b760:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b764:	f7f6 fe5c 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b768:	6803      	ldr	r3, [r0, #0]
 800b76a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b76c:	4798      	blx	r3
 800b76e:	23ff      	movs	r3, #255	; 0xff
 800b770:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b774:	a903      	add	r1, sp, #12
 800b776:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b77a:	6860      	ldr	r0, [r4, #4]
 800b77c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b780:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b784:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b788:	6803      	ldr	r3, [r0, #0]
 800b78a:	685b      	ldr	r3, [r3, #4]
 800b78c:	4798      	blx	r3
 800b78e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b790:	b00d      	add	sp, #52	; 0x34
 800b792:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b794:	2400e41e 	.word	0x2400e41e

0800b798 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b79c:	b08c      	sub	sp, #48	; 0x30
 800b79e:	461e      	mov	r6, r3
 800b7a0:	2300      	movs	r3, #0
 800b7a2:	4604      	mov	r4, r0
 800b7a4:	466d      	mov	r5, sp
 800b7a6:	9306      	str	r3, [sp, #24]
 800b7a8:	6803      	ldr	r3, [r0, #0]
 800b7aa:	e885 0006 	stmia.w	r5, {r1, r2}
 800b7ae:	2501      	movs	r5, #1
 800b7b0:	f8bd 7000 	ldrh.w	r7, [sp]
 800b7b4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b7b8:	9503      	str	r5, [sp, #12]
 800b7ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b7bc:	4798      	blx	r3
 800b7be:	4642      	mov	r2, r8
 800b7c0:	4639      	mov	r1, r7
 800b7c2:	4603      	mov	r3, r0
 800b7c4:	4620      	mov	r0, r4
 800b7c6:	f7ff ff47 	bl	800b658 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b7ca:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b7ce:	9004      	str	r0, [sp, #16]
 800b7d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b7d4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b7d8:	9607      	str	r6, [sp, #28]
 800b7da:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b7de:	4b10      	ldr	r3, [pc, #64]	; (800b820 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b7e0:	881b      	ldrh	r3, [r3, #0]
 800b7e2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b7e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b7e8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b7ec:	f7f6 fe18 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800b7f0:	6803      	ldr	r3, [r0, #0]
 800b7f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b7f4:	4798      	blx	r3
 800b7f6:	23ff      	movs	r3, #255	; 0xff
 800b7f8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b7fc:	a903      	add	r1, sp, #12
 800b7fe:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b802:	6860      	ldr	r0, [r4, #4]
 800b804:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b808:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b80c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b810:	6803      	ldr	r3, [r0, #0]
 800b812:	685b      	ldr	r3, [r3, #4]
 800b814:	4798      	blx	r3
 800b816:	4630      	mov	r0, r6
 800b818:	b00c      	add	sp, #48	; 0x30
 800b81a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b81e:	bf00      	nop
 800b820:	2400e41e 	.word	0x2400e41e

0800b824 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b824:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b826:	b085      	sub	sp, #20
 800b828:	4605      	mov	r5, r0
 800b82a:	ac02      	add	r4, sp, #8
 800b82c:	e884 0006 	stmia.w	r4, {r1, r2}
 800b830:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b834:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b838:	f7ff fde6 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b83c:	4631      	mov	r1, r6
 800b83e:	4603      	mov	r3, r0
 800b840:	463a      	mov	r2, r7
 800b842:	4628      	mov	r0, r5
 800b844:	f7ff ff08 	bl	800b658 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b848:	4a05      	ldr	r2, [pc, #20]	; (800b860 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b84a:	682b      	ldr	r3, [r5, #0]
 800b84c:	8812      	ldrh	r2, [r2, #0]
 800b84e:	9200      	str	r2, [sp, #0]
 800b850:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b852:	4603      	mov	r3, r0
 800b854:	4628      	mov	r0, r5
 800b856:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b85a:	47b0      	blx	r6
 800b85c:	b005      	add	sp, #20
 800b85e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b860:	2400e41e 	.word	0x2400e41e

0800b864 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b864:	b570      	push	{r4, r5, r6, lr}
 800b866:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800b86a:	4604      	mov	r4, r0
 800b86c:	b19b      	cbz	r3, 800b896 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b86e:	2002      	movs	r0, #2
 800b870:	f7f4 feb8 	bl	80005e4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b874:	2300      	movs	r3, #0
 800b876:	4620      	mov	r0, r4
 800b878:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800b87c:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800b880:	6823      	ldr	r3, [r4, #0]
 800b882:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b886:	f7ff fdbf 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b88a:	4601      	mov	r1, r0
 800b88c:	4620      	mov	r0, r4
 800b88e:	462b      	mov	r3, r5
 800b890:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b894:	4718      	bx	r3
 800b896:	bd70      	pop	{r4, r5, r6, pc}

0800b898 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b898:	b570      	push	{r4, r5, r6, lr}
 800b89a:	4605      	mov	r5, r0
 800b89c:	460c      	mov	r4, r1
 800b89e:	2003      	movs	r0, #3
 800b8a0:	b149      	cbz	r1, 800b8b6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b8a2:	f7f4 fe43 	bl	800052c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b8a6:	6928      	ldr	r0, [r5, #16]
 800b8a8:	b168      	cbz	r0, 800b8c6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b8aa:	6803      	ldr	r3, [r0, #0]
 800b8ac:	2101      	movs	r1, #1
 800b8ae:	695b      	ldr	r3, [r3, #20]
 800b8b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b8b4:	4718      	bx	r3
 800b8b6:	f7f4 fe67 	bl	8000588 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b8ba:	6928      	ldr	r0, [r5, #16]
 800b8bc:	b118      	cbz	r0, 800b8c6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b8be:	6803      	ldr	r3, [r0, #0]
 800b8c0:	4621      	mov	r1, r4
 800b8c2:	695b      	ldr	r3, [r3, #20]
 800b8c4:	e7f4      	b.n	800b8b0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b8c6:	bd70      	pop	{r4, r5, r6, pc}

0800b8c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b8c8:	b538      	push	{r3, r4, r5, lr}
 800b8ca:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800b8ce:	4604      	mov	r4, r0
 800b8d0:	460d      	mov	r5, r1
 800b8d2:	428b      	cmp	r3, r1
 800b8d4:	d006      	beq.n	800b8e4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b8d6:	6803      	ldr	r3, [r0, #0]
 800b8d8:	b929      	cbnz	r1, 800b8e6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b8da:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b8de:	4798      	blx	r3
 800b8e0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800b8e4:	bd38      	pop	{r3, r4, r5, pc}
 800b8e6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b8ea:	e7f8      	b.n	800b8de <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b8ec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b8ec:	4b0d      	ldr	r3, [pc, #52]	; (800b924 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b8ee:	b510      	push	{r4, lr}
 800b8f0:	781b      	ldrb	r3, [r3, #0]
 800b8f2:	4604      	mov	r4, r0
 800b8f4:	b95b      	cbnz	r3, 800b90e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8f6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b8fa:	2b02      	cmp	r3, #2
 800b8fc:	d007      	beq.n	800b90e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8fe:	6840      	ldr	r0, [r0, #4]
 800b900:	f000 f92c 	bl	800bb5c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b904:	b118      	cbz	r0, 800b90e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b906:	6862      	ldr	r2, [r4, #4]
 800b908:	7a53      	ldrb	r3, [r2, #9]
 800b90a:	2b00      	cmp	r3, #0
 800b90c:	d0fc      	beq.n	800b908 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b90e:	f7f4 ffe7 	bl	80008e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b912:	4620      	mov	r0, r4
 800b914:	2100      	movs	r1, #0
 800b916:	f7ff ffd7 	bl	800b8c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b91a:	4620      	mov	r0, r4
 800b91c:	f7ff fd74 	bl	800b408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b920:	bd10      	pop	{r4, pc}
 800b922:	bf00      	nop
 800b924:	2400e422 	.word	0x2400e422

0800b928 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b928:	b570      	push	{r4, r5, r6, lr}
 800b92a:	4604      	mov	r4, r0
 800b92c:	6803      	ldr	r3, [r0, #0]
 800b92e:	b919      	cbnz	r1, 800b938 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b930:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b932:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b936:	4718      	bx	r3
 800b938:	2200      	movs	r2, #0
 800b93a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 800b93e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 800b942:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b944:	4798      	blx	r3
 800b946:	6863      	ldr	r3, [r4, #4]
 800b948:	2101      	movs	r1, #1
 800b94a:	4605      	mov	r5, r0
 800b94c:	4620      	mov	r0, r4
 800b94e:	7299      	strb	r1, [r3, #10]
 800b950:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 800b954:	f7ff ffb8 	bl	800b8c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b958:	4628      	mov	r0, r5
 800b95a:	bd70      	pop	{r4, r5, r6, pc}

0800b95c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b95c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b960:	1a13      	subs	r3, r2, r0
 800b962:	4258      	negs	r0, r3
 800b964:	4158      	adcs	r0, r3
 800b966:	4770      	bx	lr

0800b968 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b968:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b96c:	1a9b      	subs	r3, r3, r2
 800b96e:	2b00      	cmp	r3, #0
 800b970:	bfdc      	itt	le
 800b972:	6882      	ldrle	r2, [r0, #8]
 800b974:	189b      	addle	r3, r3, r2
 800b976:	2b01      	cmp	r3, #1
 800b978:	bfcc      	ite	gt
 800b97a:	2000      	movgt	r0, #0
 800b97c:	2001      	movle	r0, #1
 800b97e:	4770      	bx	lr

0800b980 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b980:	6902      	ldr	r2, [r0, #16]
 800b982:	6843      	ldr	r3, [r0, #4]
 800b984:	2024      	movs	r0, #36	; 0x24
 800b986:	fb00 3002 	mla	r0, r0, r2, r3
 800b98a:	4770      	bx	lr

0800b98c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b98c:	6803      	ldr	r3, [r0, #0]
 800b98e:	691b      	ldr	r3, [r3, #16]
 800b990:	4718      	bx	r3

0800b992 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b992:	2301      	movs	r3, #1
 800b994:	b570      	push	{r4, r5, r6, lr}
 800b996:	7203      	strb	r3, [r0, #8]
 800b998:	4604      	mov	r4, r0
 800b99a:	6840      	ldr	r0, [r0, #4]
 800b99c:	6803      	ldr	r3, [r0, #0]
 800b99e:	699b      	ldr	r3, [r3, #24]
 800b9a0:	4798      	blx	r3
 800b9a2:	6803      	ldr	r3, [r0, #0]
 800b9a4:	4605      	mov	r5, r0
 800b9a6:	2b40      	cmp	r3, #64	; 0x40
 800b9a8:	d00c      	beq.n	800b9c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9aa:	d810      	bhi.n	800b9ce <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b9ac:	2b04      	cmp	r3, #4
 800b9ae:	d01d      	beq.n	800b9ec <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b9b0:	d804      	bhi.n	800b9bc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b9b2:	2b01      	cmp	r3, #1
 800b9b4:	d006      	beq.n	800b9c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9b6:	2b02      	cmp	r3, #2
 800b9b8:	d02c      	beq.n	800ba14 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b9ba:	bd70      	pop	{r4, r5, r6, pc}
 800b9bc:	2b08      	cmp	r3, #8
 800b9be:	d01d      	beq.n	800b9fc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b9c0:	2b20      	cmp	r3, #32
 800b9c2:	d1fa      	bne.n	800b9ba <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b9c4:	6823      	ldr	r3, [r4, #0]
 800b9c6:	4620      	mov	r0, r4
 800b9c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b9ca:	4798      	blx	r3
 800b9cc:	e013      	b.n	800b9f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b9ce:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b9d2:	d0f7      	beq.n	800b9c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9d4:	d804      	bhi.n	800b9e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b9d6:	2b80      	cmp	r3, #128	; 0x80
 800b9d8:	d0f4      	beq.n	800b9c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b9de:	e7f0      	b.n	800b9c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b9e0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b9e4:	d0ee      	beq.n	800b9c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9e6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b9ea:	e7e5      	b.n	800b9b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b9ec:	6823      	ldr	r3, [r4, #0]
 800b9ee:	7f01      	ldrb	r1, [r0, #28]
 800b9f0:	4620      	mov	r0, r4
 800b9f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b9f4:	4798      	blx	r3
 800b9f6:	6823      	ldr	r3, [r4, #0]
 800b9f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b9fa:	e006      	b.n	800ba0a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b9fc:	6823      	ldr	r3, [r4, #0]
 800b9fe:	7f01      	ldrb	r1, [r0, #28]
 800ba00:	4620      	mov	r0, r4
 800ba02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ba04:	4798      	blx	r3
 800ba06:	6823      	ldr	r3, [r4, #0]
 800ba08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ba0a:	4629      	mov	r1, r5
 800ba0c:	4620      	mov	r0, r4
 800ba0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba12:	4718      	bx	r3
 800ba14:	6823      	ldr	r3, [r4, #0]
 800ba16:	4620      	mov	r0, r4
 800ba18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ba1a:	4798      	blx	r3
 800ba1c:	e7f3      	b.n	800ba06 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800ba1e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800ba1e:	4770      	bx	lr

0800ba20 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800ba20:	4770      	bx	lr

0800ba22 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800ba22:	4770      	bx	lr

0800ba24 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800ba24:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800ba28:	b510      	push	{r4, lr}
 800ba2a:	1ad2      	subs	r2, r2, r3
 800ba2c:	2a00      	cmp	r2, #0
 800ba2e:	bfdc      	itt	le
 800ba30:	6884      	ldrle	r4, [r0, #8]
 800ba32:	1912      	addle	r2, r2, r4
 800ba34:	2a01      	cmp	r2, #1
 800ba36:	dd16      	ble.n	800ba66 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800ba38:	6842      	ldr	r2, [r0, #4]
 800ba3a:	2424      	movs	r4, #36	; 0x24
 800ba3c:	fb04 2303 	mla	r3, r4, r3, r2
 800ba40:	f101 0220 	add.w	r2, r1, #32
 800ba44:	f851 4b04 	ldr.w	r4, [r1], #4
 800ba48:	4291      	cmp	r1, r2
 800ba4a:	f843 4b04 	str.w	r4, [r3], #4
 800ba4e:	d1f9      	bne.n	800ba44 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800ba50:	780a      	ldrb	r2, [r1, #0]
 800ba52:	701a      	strb	r2, [r3, #0]
 800ba54:	68c3      	ldr	r3, [r0, #12]
 800ba56:	6882      	ldr	r2, [r0, #8]
 800ba58:	f3bf 8f5b 	dmb	ish
 800ba5c:	3301      	adds	r3, #1
 800ba5e:	429a      	cmp	r2, r3
 800ba60:	bfd8      	it	le
 800ba62:	1a9b      	suble	r3, r3, r2
 800ba64:	60c3      	str	r3, [r0, #12]
 800ba66:	bd10      	pop	{r4, pc}

0800ba68 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ba68:	6903      	ldr	r3, [r0, #16]
 800ba6a:	6882      	ldr	r2, [r0, #8]
 800ba6c:	f3bf 8f5b 	dmb	ish
 800ba70:	3301      	adds	r3, #1
 800ba72:	429a      	cmp	r2, r3
 800ba74:	bfd8      	it	le
 800ba76:	1a9b      	suble	r3, r3, r2
 800ba78:	6103      	str	r3, [r0, #16]
 800ba7a:	4770      	bx	lr

0800ba7c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ba7c:	b570      	push	{r4, r5, r6, lr}
 800ba7e:	4604      	mov	r4, r0
 800ba80:	460e      	mov	r6, r1
 800ba82:	6860      	ldr	r0, [r4, #4]
 800ba84:	6803      	ldr	r3, [r0, #0]
 800ba86:	685b      	ldr	r3, [r3, #4]
 800ba88:	4798      	blx	r3
 800ba8a:	2800      	cmp	r0, #0
 800ba8c:	d1f9      	bne.n	800ba82 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ba8e:	4d0d      	ldr	r5, [pc, #52]	; (800bac4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ba90:	6828      	ldr	r0, [r5, #0]
 800ba92:	6803      	ldr	r3, [r0, #0]
 800ba94:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ba96:	4798      	blx	r3
 800ba98:	f7f4 ff30 	bl	80008fc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ba9c:	6828      	ldr	r0, [r5, #0]
 800ba9e:	2101      	movs	r1, #1
 800baa0:	f7ff ff12 	bl	800b8c8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800baa4:	6860      	ldr	r0, [r4, #4]
 800baa6:	4631      	mov	r1, r6
 800baa8:	6803      	ldr	r3, [r0, #0]
 800baaa:	689b      	ldr	r3, [r3, #8]
 800baac:	4798      	blx	r3
 800baae:	6823      	ldr	r3, [r4, #0]
 800bab0:	4620      	mov	r0, r4
 800bab2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bab4:	4798      	blx	r3
 800bab6:	6828      	ldr	r0, [r5, #0]
 800bab8:	6803      	ldr	r3, [r0, #0]
 800baba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800babe:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bac0:	4718      	bx	r3
 800bac2:	bf00      	nop
 800bac4:	2400e424 	.word	0x2400e424

0800bac8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bac8:	b508      	push	{r3, lr}
 800baca:	f7f4 ff09 	bl	80008e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bace:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bad2:	f7f4 bf0d 	b.w	80008f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bad6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bad6:	b510      	push	{r4, lr}
 800bad8:	4604      	mov	r4, r0
 800bada:	2114      	movs	r1, #20
 800badc:	f015 f99d 	bl	8020e1a <_ZdlPvj>
 800bae0:	4620      	mov	r0, r4
 800bae2:	bd10      	pop	{r4, pc}

0800bae4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bae4:	b510      	push	{r4, lr}
 800bae6:	4604      	mov	r4, r0
 800bae8:	6840      	ldr	r0, [r0, #4]
 800baea:	6803      	ldr	r3, [r0, #0]
 800baec:	681b      	ldr	r3, [r3, #0]
 800baee:	4798      	blx	r3
 800baf0:	b948      	cbnz	r0, 800bb06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800baf2:	7a63      	ldrb	r3, [r4, #9]
 800baf4:	b13b      	cbz	r3, 800bb06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800baf6:	7a23      	ldrb	r3, [r4, #8]
 800baf8:	b92b      	cbnz	r3, 800bb06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bafa:	6823      	ldr	r3, [r4, #0]
 800bafc:	4620      	mov	r0, r4
 800bafe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bb00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb04:	4718      	bx	r3
 800bb06:	bd10      	pop	{r4, pc}

0800bb08 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bb08:	b570      	push	{r4, r5, r6, lr}
 800bb0a:	4604      	mov	r4, r0
 800bb0c:	6840      	ldr	r0, [r0, #4]
 800bb0e:	6803      	ldr	r3, [r0, #0]
 800bb10:	681b      	ldr	r3, [r3, #0]
 800bb12:	4798      	blx	r3
 800bb14:	4605      	mov	r5, r0
 800bb16:	b930      	cbnz	r0, 800bb26 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bb18:	7a23      	ldrb	r3, [r4, #8]
 800bb1a:	b123      	cbz	r3, 800bb26 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bb1c:	6860      	ldr	r0, [r4, #4]
 800bb1e:	6803      	ldr	r3, [r0, #0]
 800bb20:	695b      	ldr	r3, [r3, #20]
 800bb22:	4798      	blx	r3
 800bb24:	7225      	strb	r5, [r4, #8]
 800bb26:	6860      	ldr	r0, [r4, #4]
 800bb28:	6803      	ldr	r3, [r0, #0]
 800bb2a:	681b      	ldr	r3, [r3, #0]
 800bb2c:	4798      	blx	r3
 800bb2e:	b928      	cbnz	r0, 800bb3c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bb30:	6823      	ldr	r3, [r4, #0]
 800bb32:	4620      	mov	r0, r4
 800bb34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bb36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb3a:	4718      	bx	r3
 800bb3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb40:	f7f4 bee4 	b.w	800090c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bb44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bb44:	b510      	push	{r4, lr}
 800bb46:	6082      	str	r2, [r0, #8]
 800bb48:	2200      	movs	r2, #0
 800bb4a:	4c03      	ldr	r4, [pc, #12]	; (800bb58 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bb4c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bb50:	e9c0 4100 	strd	r4, r1, [r0]
 800bb54:	bd10      	pop	{r4, pc}
 800bb56:	bf00      	nop
 800bb58:	080233b4 	.word	0x080233b4

0800bb5c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bb5c:	6840      	ldr	r0, [r0, #4]
 800bb5e:	6803      	ldr	r3, [r0, #0]
 800bb60:	681b      	ldr	r3, [r3, #0]
 800bb62:	4718      	bx	r3

0800bb64 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bb64:	094a      	lsrs	r2, r1, #5
 800bb66:	4b06      	ldr	r3, [pc, #24]	; (800bb80 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bb68:	60c1      	str	r1, [r0, #12]
 800bb6a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bb6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bb72:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bb76:	4313      	orrs	r3, r2
 800bb78:	4319      	orrs	r1, r3
 800bb7a:	8201      	strh	r1, [r0, #16]
 800bb7c:	4770      	bx	lr
 800bb7e:	bf00      	nop
 800bb80:	fffff800 	.word	0xfffff800

0800bb84 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bb84:	f1a0 0008 	sub.w	r0, r0, #8
 800bb88:	e7ec      	b.n	800bb64 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bb8a:	bf00      	nop

0800bb8c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bb8c:	b508      	push	{r3, lr}
 800bb8e:	4b05      	ldr	r3, [pc, #20]	; (800bba4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bb90:	6818      	ldr	r0, [r3, #0]
 800bb92:	6803      	ldr	r3, [r0, #0]
 800bb94:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bb98:	4798      	blx	r3
 800bb9a:	1e43      	subs	r3, r0, #1
 800bb9c:	4258      	negs	r0, r3
 800bb9e:	4158      	adcs	r0, r3
 800bba0:	bd08      	pop	{r3, pc}
 800bba2:	bf00      	nop
 800bba4:	2400e424 	.word	0x2400e424

0800bba8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bba8:	4770      	bx	lr

0800bbaa <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bbaa:	3808      	subs	r0, #8
 800bbac:	4770      	bx	lr

0800bbae <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bbae:	b430      	push	{r4, r5}
 800bbb0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bbb4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bbb8:	8a02      	ldrh	r2, [r0, #16]
 800bbba:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bbbe:	4629      	mov	r1, r5
 800bbc0:	9202      	str	r2, [sp, #8]
 800bbc2:	68c2      	ldr	r2, [r0, #12]
 800bbc4:	4620      	mov	r0, r4
 800bbc6:	bc30      	pop	{r4, r5}
 800bbc8:	f7f5 b866 	b.w	8000c98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bbcc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bbcc:	f7f5 b85a 	b.w	8000c84 <_ZN8touchgfx5paint8tearDownEv>

0800bbd0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bbd0:	b510      	push	{r4, lr}
 800bbd2:	4604      	mov	r4, r0
 800bbd4:	2114      	movs	r1, #20
 800bbd6:	f015 f920 	bl	8020e1a <_ZdlPvj>
 800bbda:	4620      	mov	r0, r4
 800bbdc:	bd10      	pop	{r4, pc}

0800bbde <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bbde:	f1a0 0008 	sub.w	r0, r0, #8
 800bbe2:	e7f5      	b.n	800bbd0 <_ZN8touchgfx13PainterRGB565D0Ev>

0800bbe4 <_ZN8touchgfx6CircleD1Ev>:
 800bbe4:	4770      	bx	lr

0800bbe6 <_ZN8touchgfx6CircleD0Ev>:
 800bbe6:	b510      	push	{r4, lr}
 800bbe8:	4604      	mov	r4, r0
 800bbea:	2148      	movs	r1, #72	; 0x48
 800bbec:	f015 f915 	bl	8020e1a <_ZdlPvj>
 800bbf0:	4620      	mov	r0, r4
 800bbf2:	bd10      	pop	{r4, pc}

0800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800bbf4:	b507      	push	{r0, r1, r2, lr}
 800bbf6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800bbfa:	ab01      	add	r3, sp, #4
 800bbfc:	6809      	ldr	r1, [r1, #0]
 800bbfe:	6800      	ldr	r0, [r0, #0]
 800bc00:	f005 fe06 	bl	8011810 <_ZN8touchgfx6muldivElllRl>
 800bc04:	b003      	add	sp, #12
 800bc06:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800bc0c <_ZN8touchgfx7CWRUtil4sineEi>:
 800bc0c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800bc10:	fb90 f2f3 	sdiv	r2, r0, r3
 800bc14:	fb02 0013 	mls	r0, r2, r3, r0
 800bc18:	2800      	cmp	r0, #0
 800bc1a:	bfb8      	it	lt
 800bc1c:	18c0      	addlt	r0, r0, r3
 800bc1e:	4b0a      	ldr	r3, [pc, #40]	; (800bc48 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800bc20:	285a      	cmp	r0, #90	; 0x5a
 800bc22:	dc02      	bgt.n	800bc2a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800bc24:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800bc28:	4770      	bx	lr
 800bc2a:	28b4      	cmp	r0, #180	; 0xb4
 800bc2c:	dc02      	bgt.n	800bc34 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800bc2e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800bc32:	e7f7      	b.n	800bc24 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800bc34:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800bc38:	bfd4      	ite	le
 800bc3a:	38b4      	suble	r0, #180	; 0xb4
 800bc3c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800bc40:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800bc44:	4240      	negs	r0, r0
 800bc46:	4770      	bx	lr
 800bc48:	08023408 	.word	0x08023408

0800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800bc4c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 800bc50:	fb90 f2f3 	sdiv	r2, r0, r3
 800bc54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bc56:	fb02 0013 	mls	r0, r2, r3, r0
 800bc5a:	2800      	cmp	r0, #0
 800bc5c:	bfb8      	it	lt
 800bc5e:	18c0      	addlt	r0, r0, r3
 800bc60:	1144      	asrs	r4, r0, #5
 800bc62:	f000 061f 	and.w	r6, r0, #31
 800bc66:	4620      	mov	r0, r4
 800bc68:	f7ff ffd0 	bl	800bc0c <_ZN8touchgfx7CWRUtil4sineEi>
 800bc6c:	4605      	mov	r5, r0
 800bc6e:	b90e      	cbnz	r6, 800bc74 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800bc70:	b002      	add	sp, #8
 800bc72:	bd70      	pop	{r4, r5, r6, pc}
 800bc74:	1c60      	adds	r0, r4, #1
 800bc76:	f7ff ffc9 	bl	800bc0c <_ZN8touchgfx7CWRUtil4sineEi>
 800bc7a:	ab01      	add	r3, sp, #4
 800bc7c:	2220      	movs	r2, #32
 800bc7e:	4631      	mov	r1, r6
 800bc80:	1b40      	subs	r0, r0, r5
 800bc82:	f005 fdc5 	bl	8011810 <_ZN8touchgfx6muldivElllRl>
 800bc86:	4428      	add	r0, r5
 800bc88:	e7f2      	b.n	800bc70 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800bc8a:	b508      	push	{r3, lr}
 800bc8c:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800bc90:	f7ff ffdc 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bc94:	bd08      	pop	{r3, pc}
	...

0800bc98 <_ZN8touchgfx6CircleC1Ev>:
 800bc98:	b510      	push	{r4, lr}
 800bc9a:	4604      	mov	r4, r0
 800bc9c:	f000 fd04 	bl	800c6a8 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800bca0:	4b08      	ldr	r3, [pc, #32]	; (800bcc4 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800bca2:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800bca6:	4620      	mov	r0, r4
 800bca8:	6023      	str	r3, [r4, #0]
 800bcaa:	2300      	movs	r3, #0
 800bcac:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 800bcb0:	f24b 4205 	movw	r2, #46085	; 0xb405
 800bcb4:	60a3      	str	r3, [r4, #8]
 800bcb6:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800bcba:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 800bcbe:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800bcc2:	bd10      	pop	{r4, pc}
 800bcc4:	080234c8 	.word	0x080234c8

0800bcc8 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800bcc8:	29b4      	cmp	r1, #180	; 0xb4
 800bcca:	bfa8      	it	ge
 800bccc:	21b4      	movge	r1, #180	; 0xb4
 800bcce:	2901      	cmp	r1, #1
 800bcd0:	bfb8      	it	lt
 800bcd2:	2101      	movlt	r1, #1
 800bcd4:	f880 1045 	strb.w	r1, [r0, #69]	; 0x45
 800bcd8:	4770      	bx	lr

0800bcda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800bcda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcde:	428a      	cmp	r2, r1
 800bce0:	4680      	mov	r8, r0
 800bce2:	4610      	mov	r0, r2
 800bce4:	4699      	mov	r9, r3
 800bce6:	bfaa      	itet	ge
 800bce8:	460a      	movge	r2, r1
 800bcea:	460b      	movlt	r3, r1
 800bcec:	4603      	movge	r3, r0
 800bcee:	b085      	sub	sp, #20
 800bcf0:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 800bcf4:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 800bcf8:	1a99      	subs	r1, r3, r2
 800bcfa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800bcfc:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 800bd00:	bfa4      	itt	ge
 800bd02:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800bd06:	2200      	movge	r2, #0
 800bd08:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 800bd0c:	9300      	str	r3, [sp, #0]
 800bd0e:	f102 0b01 	add.w	fp, r2, #1
 800bd12:	2c00      	cmp	r4, #0
 800bd14:	f040 80ae 	bne.w	800be74 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
 800bd18:	4610      	mov	r0, r2
 800bd1a:	9201      	str	r2, [sp, #4]
 800bd1c:	f7ff ff96 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bd20:	a903      	add	r1, sp, #12
 800bd22:	9003      	str	r0, [sp, #12]
 800bd24:	4650      	mov	r0, sl
 800bd26:	f7ff ff65 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bd2a:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800bd2e:	9a01      	ldr	r2, [sp, #4]
 800bd30:	4408      	add	r0, r1
 800bd32:	f8d9 1000 	ldr.w	r1, [r9]
 800bd36:	4281      	cmp	r1, r0
 800bd38:	bfc8      	it	gt
 800bd3a:	f8c9 0000 	strgt.w	r0, [r9]
 800bd3e:	6839      	ldr	r1, [r7, #0]
 800bd40:	4288      	cmp	r0, r1
 800bd42:	bfc8      	it	gt
 800bd44:	6038      	strgt	r0, [r7, #0]
 800bd46:	4610      	mov	r0, r2
 800bd48:	f7ff ff9f 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bd4c:	a903      	add	r1, sp, #12
 800bd4e:	9003      	str	r0, [sp, #12]
 800bd50:	4650      	mov	r0, sl
 800bd52:	f7ff ff4f 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bd56:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bd5a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800bd5e:	1a10      	subs	r0, r2, r0
 800bd60:	6832      	ldr	r2, [r6, #0]
 800bd62:	4282      	cmp	r2, r0
 800bd64:	bfc8      	it	gt
 800bd66:	6030      	strgt	r0, [r6, #0]
 800bd68:	682a      	ldr	r2, [r5, #0]
 800bd6a:	4290      	cmp	r0, r2
 800bd6c:	fb9b f2f1 	sdiv	r2, fp, r1
 800bd70:	fb01 b212 	mls	r2, r1, r2, fp
 800bd74:	bfc8      	it	gt
 800bd76:	6028      	strgt	r0, [r5, #0]
 800bd78:	1a8a      	subs	r2, r1, r2
 800bd7a:	fb92 f0f1 	sdiv	r0, r2, r1
 800bd7e:	fb01 2210 	mls	r2, r1, r0, r2
 800bd82:	4493      	add	fp, r2
 800bd84:	9b00      	ldr	r3, [sp, #0]
 800bd86:	455b      	cmp	r3, fp
 800bd88:	db2a      	blt.n	800bde0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
 800bd8a:	4658      	mov	r0, fp
 800bd8c:	f7ff ff5e 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bd90:	a903      	add	r1, sp, #12
 800bd92:	9003      	str	r0, [sp, #12]
 800bd94:	4650      	mov	r0, sl
 800bd96:	f7ff ff2d 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bd9a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bd9e:	4410      	add	r0, r2
 800bda0:	f8d9 2000 	ldr.w	r2, [r9]
 800bda4:	4282      	cmp	r2, r0
 800bda6:	bfc8      	it	gt
 800bda8:	f8c9 0000 	strgt.w	r0, [r9]
 800bdac:	683a      	ldr	r2, [r7, #0]
 800bdae:	4290      	cmp	r0, r2
 800bdb0:	bfc8      	it	gt
 800bdb2:	6038      	strgt	r0, [r7, #0]
 800bdb4:	4658      	mov	r0, fp
 800bdb6:	f7ff ff68 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bdba:	a903      	add	r1, sp, #12
 800bdbc:	9003      	str	r0, [sp, #12]
 800bdbe:	4650      	mov	r0, sl
 800bdc0:	f7ff ff18 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bdc4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bdc8:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800bdcc:	1a10      	subs	r0, r2, r0
 800bdce:	6832      	ldr	r2, [r6, #0]
 800bdd0:	4282      	cmp	r2, r0
 800bdd2:	bfc8      	it	gt
 800bdd4:	6030      	strgt	r0, [r6, #0]
 800bdd6:	682a      	ldr	r2, [r5, #0]
 800bdd8:	4290      	cmp	r0, r2
 800bdda:	bfc8      	it	gt
 800bddc:	6028      	strgt	r0, [r5, #0]
 800bdde:	e7d1      	b.n	800bd84 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
 800bde0:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800bde4:	9b00      	ldr	r3, [sp, #0]
 800bde6:	455b      	cmp	r3, fp
 800bde8:	dd27      	ble.n	800be3a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
 800bdea:	4618      	mov	r0, r3
 800bdec:	f7ff ff2e 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bdf0:	a903      	add	r1, sp, #12
 800bdf2:	9003      	str	r0, [sp, #12]
 800bdf4:	4650      	mov	r0, sl
 800bdf6:	f7ff fefd 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bdfa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bdfe:	4410      	add	r0, r2
 800be00:	f8d9 2000 	ldr.w	r2, [r9]
 800be04:	4282      	cmp	r2, r0
 800be06:	bfc8      	it	gt
 800be08:	f8c9 0000 	strgt.w	r0, [r9]
 800be0c:	683a      	ldr	r2, [r7, #0]
 800be0e:	4290      	cmp	r0, r2
 800be10:	bfc8      	it	gt
 800be12:	6038      	strgt	r0, [r7, #0]
 800be14:	9800      	ldr	r0, [sp, #0]
 800be16:	f7ff ff38 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800be1a:	a903      	add	r1, sp, #12
 800be1c:	9003      	str	r0, [sp, #12]
 800be1e:	4650      	mov	r0, sl
 800be20:	f7ff fee8 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800be24:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800be28:	1a10      	subs	r0, r2, r0
 800be2a:	6832      	ldr	r2, [r6, #0]
 800be2c:	4282      	cmp	r2, r0
 800be2e:	bfc8      	it	gt
 800be30:	6030      	strgt	r0, [r6, #0]
 800be32:	682a      	ldr	r2, [r5, #0]
 800be34:	4290      	cmp	r0, r2
 800be36:	bfc8      	it	gt
 800be38:	6028      	strgt	r0, [r5, #0]
 800be3a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800be3e:	f8d9 1000 	ldr.w	r1, [r9]
 800be42:	4291      	cmp	r1, r2
 800be44:	bfc8      	it	gt
 800be46:	f8c9 2000 	strgt.w	r2, [r9]
 800be4a:	683a      	ldr	r2, [r7, #0]
 800be4c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 800be50:	429a      	cmp	r2, r3
 800be52:	bfb8      	it	lt
 800be54:	603b      	strlt	r3, [r7, #0]
 800be56:	6832      	ldr	r2, [r6, #0]
 800be58:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800be5c:	429a      	cmp	r2, r3
 800be5e:	bfc8      	it	gt
 800be60:	6033      	strgt	r3, [r6, #0]
 800be62:	682a      	ldr	r2, [r5, #0]
 800be64:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800be68:	429a      	cmp	r2, r3
 800be6a:	da00      	bge.n	800be6e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 800be6c:	602b      	str	r3, [r5, #0]
 800be6e:	b005      	add	sp, #20
 800be70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be74:	2002      	movs	r0, #2
 800be76:	3401      	adds	r4, #1
 800be78:	9201      	str	r2, [sp, #4]
 800be7a:	fb94 f4f0 	sdiv	r4, r4, r0
 800be7e:	4610      	mov	r0, r2
 800be80:	f7ff fee4 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800be84:	a903      	add	r1, sp, #12
 800be86:	9003      	str	r0, [sp, #12]
 800be88:	4650      	mov	r0, sl
 800be8a:	f7ff feb3 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800be8e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800be92:	9a01      	ldr	r2, [sp, #4]
 800be94:	4408      	add	r0, r1
 800be96:	f8d9 1000 	ldr.w	r1, [r9]
 800be9a:	1b03      	subs	r3, r0, r4
 800be9c:	4420      	add	r0, r4
 800be9e:	4299      	cmp	r1, r3
 800bea0:	bfc8      	it	gt
 800bea2:	f8c9 3000 	strgt.w	r3, [r9]
 800bea6:	6839      	ldr	r1, [r7, #0]
 800bea8:	428b      	cmp	r3, r1
 800beaa:	bfc8      	it	gt
 800beac:	603b      	strgt	r3, [r7, #0]
 800beae:	f8d9 1000 	ldr.w	r1, [r9]
 800beb2:	4281      	cmp	r1, r0
 800beb4:	bfc8      	it	gt
 800beb6:	f8c9 0000 	strgt.w	r0, [r9]
 800beba:	6839      	ldr	r1, [r7, #0]
 800bebc:	4288      	cmp	r0, r1
 800bebe:	bfc8      	it	gt
 800bec0:	6038      	strgt	r0, [r7, #0]
 800bec2:	4610      	mov	r0, r2
 800bec4:	f7ff fee1 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bec8:	a903      	add	r1, sp, #12
 800beca:	9003      	str	r0, [sp, #12]
 800becc:	4650      	mov	r0, sl
 800bece:	f7ff fe91 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bed2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bed6:	1a10      	subs	r0, r2, r0
 800bed8:	6832      	ldr	r2, [r6, #0]
 800beda:	1b01      	subs	r1, r0, r4
 800bedc:	4420      	add	r0, r4
 800bede:	428a      	cmp	r2, r1
 800bee0:	bfc8      	it	gt
 800bee2:	6031      	strgt	r1, [r6, #0]
 800bee4:	682a      	ldr	r2, [r5, #0]
 800bee6:	4291      	cmp	r1, r2
 800bee8:	bfc8      	it	gt
 800beea:	6029      	strgt	r1, [r5, #0]
 800beec:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800bef0:	6832      	ldr	r2, [r6, #0]
 800bef2:	4282      	cmp	r2, r0
 800bef4:	bfc8      	it	gt
 800bef6:	6030      	strgt	r0, [r6, #0]
 800bef8:	682a      	ldr	r2, [r5, #0]
 800befa:	4290      	cmp	r0, r2
 800befc:	fb9b f2f1 	sdiv	r2, fp, r1
 800bf00:	fb01 b212 	mls	r2, r1, r2, fp
 800bf04:	bfc8      	it	gt
 800bf06:	6028      	strgt	r0, [r5, #0]
 800bf08:	1a8a      	subs	r2, r1, r2
 800bf0a:	fb92 f0f1 	sdiv	r0, r2, r1
 800bf0e:	fb01 2210 	mls	r2, r1, r0, r2
 800bf12:	4493      	add	fp, r2
 800bf14:	9b00      	ldr	r3, [sp, #0]
 800bf16:	455b      	cmp	r3, fp
 800bf18:	db40      	blt.n	800bf9c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
 800bf1a:	4658      	mov	r0, fp
 800bf1c:	f7ff fe96 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bf20:	a903      	add	r1, sp, #12
 800bf22:	9003      	str	r0, [sp, #12]
 800bf24:	4650      	mov	r0, sl
 800bf26:	f7ff fe65 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bf2a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bf2e:	4410      	add	r0, r2
 800bf30:	f8d9 2000 	ldr.w	r2, [r9]
 800bf34:	1b01      	subs	r1, r0, r4
 800bf36:	4420      	add	r0, r4
 800bf38:	428a      	cmp	r2, r1
 800bf3a:	bfc8      	it	gt
 800bf3c:	f8c9 1000 	strgt.w	r1, [r9]
 800bf40:	683a      	ldr	r2, [r7, #0]
 800bf42:	4291      	cmp	r1, r2
 800bf44:	bfc8      	it	gt
 800bf46:	6039      	strgt	r1, [r7, #0]
 800bf48:	f8d9 2000 	ldr.w	r2, [r9]
 800bf4c:	4282      	cmp	r2, r0
 800bf4e:	bfc8      	it	gt
 800bf50:	f8c9 0000 	strgt.w	r0, [r9]
 800bf54:	683a      	ldr	r2, [r7, #0]
 800bf56:	4290      	cmp	r0, r2
 800bf58:	bfc8      	it	gt
 800bf5a:	6038      	strgt	r0, [r7, #0]
 800bf5c:	4658      	mov	r0, fp
 800bf5e:	f7ff fe94 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bf62:	a903      	add	r1, sp, #12
 800bf64:	9003      	str	r0, [sp, #12]
 800bf66:	4650      	mov	r0, sl
 800bf68:	f7ff fe44 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bf6c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800bf70:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800bf74:	1a10      	subs	r0, r2, r0
 800bf76:	6832      	ldr	r2, [r6, #0]
 800bf78:	1b01      	subs	r1, r0, r4
 800bf7a:	4420      	add	r0, r4
 800bf7c:	428a      	cmp	r2, r1
 800bf7e:	bfc8      	it	gt
 800bf80:	6031      	strgt	r1, [r6, #0]
 800bf82:	682a      	ldr	r2, [r5, #0]
 800bf84:	4291      	cmp	r1, r2
 800bf86:	bfc8      	it	gt
 800bf88:	6029      	strgt	r1, [r5, #0]
 800bf8a:	6832      	ldr	r2, [r6, #0]
 800bf8c:	4282      	cmp	r2, r0
 800bf8e:	bfc8      	it	gt
 800bf90:	6030      	strgt	r0, [r6, #0]
 800bf92:	682a      	ldr	r2, [r5, #0]
 800bf94:	4290      	cmp	r0, r2
 800bf96:	bfc8      	it	gt
 800bf98:	6028      	strgt	r0, [r5, #0]
 800bf9a:	e7bb      	b.n	800bf14 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
 800bf9c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800bfa0:	9b00      	ldr	r3, [sp, #0]
 800bfa2:	455b      	cmp	r3, fp
 800bfa4:	f77f af63 	ble.w	800be6e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 800bfa8:	4618      	mov	r0, r3
 800bfaa:	f7ff fe4f 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800bfae:	a903      	add	r1, sp, #12
 800bfb0:	9003      	str	r0, [sp, #12]
 800bfb2:	4650      	mov	r0, sl
 800bfb4:	f7ff fe1e 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bfb8:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800bfbc:	4410      	add	r0, r2
 800bfbe:	f8d9 2000 	ldr.w	r2, [r9]
 800bfc2:	1b01      	subs	r1, r0, r4
 800bfc4:	4420      	add	r0, r4
 800bfc6:	428a      	cmp	r2, r1
 800bfc8:	bfc8      	it	gt
 800bfca:	f8c9 1000 	strgt.w	r1, [r9]
 800bfce:	683a      	ldr	r2, [r7, #0]
 800bfd0:	4291      	cmp	r1, r2
 800bfd2:	bfc8      	it	gt
 800bfd4:	6039      	strgt	r1, [r7, #0]
 800bfd6:	f8d9 2000 	ldr.w	r2, [r9]
 800bfda:	4282      	cmp	r2, r0
 800bfdc:	bfc8      	it	gt
 800bfde:	f8c9 0000 	strgt.w	r0, [r9]
 800bfe2:	683b      	ldr	r3, [r7, #0]
 800bfe4:	4298      	cmp	r0, r3
 800bfe6:	bfc8      	it	gt
 800bfe8:	6038      	strgt	r0, [r7, #0]
 800bfea:	9800      	ldr	r0, [sp, #0]
 800bfec:	f7ff fe4d 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800bff0:	a903      	add	r1, sp, #12
 800bff2:	9003      	str	r0, [sp, #12]
 800bff4:	4650      	mov	r0, sl
 800bff6:	f7ff fdfd 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800bffa:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800bffe:	6832      	ldr	r2, [r6, #0]
 800c000:	1a18      	subs	r0, r3, r0
 800c002:	1b03      	subs	r3, r0, r4
 800c004:	4404      	add	r4, r0
 800c006:	429a      	cmp	r2, r3
 800c008:	bfc8      	it	gt
 800c00a:	6033      	strgt	r3, [r6, #0]
 800c00c:	682a      	ldr	r2, [r5, #0]
 800c00e:	4293      	cmp	r3, r2
 800c010:	bfc8      	it	gt
 800c012:	602b      	strgt	r3, [r5, #0]
 800c014:	6833      	ldr	r3, [r6, #0]
 800c016:	42a3      	cmp	r3, r4
 800c018:	bfc8      	it	gt
 800c01a:	6034      	strgt	r4, [r6, #0]
 800c01c:	682b      	ldr	r3, [r5, #0]
 800c01e:	429c      	cmp	r4, r3
 800c020:	bfc8      	it	gt
 800c022:	602c      	strgt	r4, [r5, #0]
 800c024:	e723      	b.n	800be6e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

0800c026 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800c026:	b530      	push	{r4, r5, lr}
 800c028:	4604      	mov	r4, r0
 800c02a:	4608      	mov	r0, r1
 800c02c:	4611      	mov	r1, r2
 800c02e:	461a      	mov	r2, r3
 800c030:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c034:	b089      	sub	sp, #36	; 0x24
 800c036:	2500      	movs	r5, #0
 800c038:	015b      	lsls	r3, r3, #5
 800c03a:	9505      	str	r5, [sp, #20]
 800c03c:	9304      	str	r3, [sp, #16]
 800c03e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c042:	015b      	lsls	r3, r3, #5
 800c044:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800c048:	ab07      	add	r3, sp, #28
 800c04a:	2520      	movs	r5, #32
 800c04c:	9302      	str	r3, [sp, #8]
 800c04e:	ab06      	add	r3, sp, #24
 800c050:	9301      	str	r3, [sp, #4]
 800c052:	ab05      	add	r3, sp, #20
 800c054:	9300      	str	r3, [sp, #0]
 800c056:	ab04      	add	r3, sp, #16
 800c058:	f7ff fe3f 	bl	800bcda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800c05c:	9a04      	ldr	r2, [sp, #16]
 800c05e:	9805      	ldr	r0, [sp, #20]
 800c060:	9b06      	ldr	r3, [sp, #24]
 800c062:	9907      	ldr	r1, [sp, #28]
 800c064:	fb92 f2f5 	sdiv	r2, r2, r5
 800c068:	fb90 f0f5 	sdiv	r0, r0, r5
 800c06c:	fb93 f3f5 	sdiv	r3, r3, r5
 800c070:	fb91 f1f5 	sdiv	r1, r1, r5
 800c074:	b292      	uxth	r2, r2
 800c076:	3002      	adds	r0, #2
 800c078:	b29b      	uxth	r3, r3
 800c07a:	3102      	adds	r1, #2
 800c07c:	1a80      	subs	r0, r0, r2
 800c07e:	3a01      	subs	r2, #1
 800c080:	1ac9      	subs	r1, r1, r3
 800c082:	3b01      	subs	r3, #1
 800c084:	80a0      	strh	r0, [r4, #4]
 800c086:	4620      	mov	r0, r4
 800c088:	8022      	strh	r2, [r4, #0]
 800c08a:	8063      	strh	r3, [r4, #2]
 800c08c:	80e1      	strh	r1, [r4, #6]
 800c08e:	b009      	add	sp, #36	; 0x24
 800c090:	bd30      	pop	{r4, r5, pc}

0800c092 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800c092:	b510      	push	{r4, lr}
 800c094:	4604      	mov	r4, r0
 800c096:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 800c09a:	f7ff ffc4 	bl	800c026 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800c09e:	4620      	mov	r0, r4
 800c0a0:	bd10      	pop	{r4, pc}
	...

0800c0a4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800c0a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0a8:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 800c0ac:	2220      	movs	r2, #32
 800c0ae:	468b      	mov	fp, r1
 800c0b0:	42ae      	cmp	r6, r5
 800c0b2:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 800c0b6:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 800c0ba:	b0ab      	sub	sp, #172	; 0xac
 800c0bc:	bfa4      	itt	ge
 800c0be:	4633      	movge	r3, r6
 800c0c0:	462e      	movge	r6, r5
 800c0c2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800c0c4:	4604      	mov	r4, r0
 800c0c6:	bfa8      	it	ge
 800c0c8:	461d      	movge	r5, r3
 800c0ca:	1bab      	subs	r3, r5, r6
 800c0cc:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c0d0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800c0d2:	bfa4      	itt	ge
 800c0d4:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 800c0d8:	2600      	movge	r6, #0
 800c0da:	fb99 f9f2 	sdiv	r9, r9, r2
 800c0de:	fb9a faf2 	sdiv	sl, sl, r2
 800c0e2:	2900      	cmp	r1, #0
 800c0e4:	f000 80f1 	beq.w	800c2ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x226>
 800c0e8:	f9bb 0000 	ldrsh.w	r0, [fp]
 800c0ec:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 800c0f0:	eba9 0700 	sub.w	r7, r9, r0
 800c0f4:	ebaa 0802 	sub.w	r8, sl, r2
 800c0f8:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800c0fc:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800c100:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 800c104:	4407      	add	r7, r0
 800c106:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800c10a:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800c10e:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 800c112:	b23f      	sxth	r7, r7
 800c114:	4490      	add	r8, r2
 800c116:	2202      	movs	r2, #2
 800c118:	eba9 0707 	sub.w	r7, r9, r7
 800c11c:	fa0f f888 	sxth.w	r8, r8
 800c120:	9201      	str	r2, [sp, #4]
 800c122:	2f00      	cmp	r7, #0
 800c124:	ebaa 0808 	sub.w	r8, sl, r8
 800c128:	bfb8      	it	lt
 800c12a:	427f      	neglt	r7, r7
 800c12c:	f1b8 0f00 	cmp.w	r8, #0
 800c130:	bfb8      	it	lt
 800c132:	f1c8 0800 	rsblt	r8, r8, #0
 800c136:	45bc      	cmp	ip, r7
 800c138:	bfcc      	ite	gt
 800c13a:	f10c 0701 	addgt.w	r7, ip, #1
 800c13e:	3701      	addle	r7, #1
 800c140:	4540      	cmp	r0, r8
 800c142:	bfc8      	it	gt
 800c144:	f100 0801 	addgt.w	r8, r0, #1
 800c148:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800c14c:	bfd8      	it	le
 800c14e:	f108 0801 	addle.w	r8, r8, #1
 800c152:	3001      	adds	r0, #1
 800c154:	fb08 f808 	mul.w	r8, r8, r8
 800c158:	1040      	asrs	r0, r0, #1
 800c15a:	fb07 8707 	mla	r7, r7, r7, r8
 800c15e:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c162:	fb91 f1f2 	sdiv	r1, r1, r2
 800c166:	1a5b      	subs	r3, r3, r1
 800c168:	930d      	str	r3, [sp, #52]	; 0x34
 800c16a:	f7ff fd4f 	bl	800bc0c <_ZN8touchgfx7CWRUtil4sineEi>
 800c16e:	a92a      	add	r1, sp, #168	; 0xa8
 800c170:	f841 0d70 	str.w	r0, [r1, #-112]!
 800c174:	a80d      	add	r0, sp, #52	; 0x34
 800c176:	f7ff fd3d 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c17a:	f04f 0c20 	mov.w	ip, #32
 800c17e:	9a01      	ldr	r2, [sp, #4]
 800c180:	fb90 f0fc 	sdiv	r0, r0, ip
 800c184:	4340      	muls	r0, r0
 800c186:	4287      	cmp	r7, r0
 800c188:	da04      	bge.n	800c194 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800c18a:	2401      	movs	r4, #1
 800c18c:	4620      	mov	r0, r4
 800c18e:	b02b      	add	sp, #172	; 0xac
 800c190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c194:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800c196:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c198:	fb91 f3f2 	sdiv	r3, r1, r2
 800c19c:	4403      	add	r3, r0
 800c19e:	fb93 f3fc 	sdiv	r3, r3, ip
 800c1a2:	f9bb 1000 	ldrsh.w	r1, [fp]
 800c1a6:	3301      	adds	r3, #1
 800c1a8:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 800c1ac:	435b      	muls	r3, r3
 800c1ae:	440a      	add	r2, r1
 800c1b0:	b212      	sxth	r2, r2
 800c1b2:	454a      	cmp	r2, r9
 800c1b4:	bfa8      	it	ge
 800c1b6:	464a      	movge	r2, r9
 800c1b8:	428a      	cmp	r2, r1
 800c1ba:	bfac      	ite	ge
 800c1bc:	eba9 0902 	subge.w	r9, r9, r2
 800c1c0:	eba9 0901 	sublt.w	r9, r9, r1
 800c1c4:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 800c1c8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c1cc:	440a      	add	r2, r1
 800c1ce:	b212      	sxth	r2, r2
 800c1d0:	4552      	cmp	r2, sl
 800c1d2:	bfa8      	it	ge
 800c1d4:	4652      	movge	r2, sl
 800c1d6:	428a      	cmp	r2, r1
 800c1d8:	bfac      	ite	ge
 800c1da:	ebaa 0a02 	subge.w	sl, sl, r2
 800c1de:	ebaa 0a01 	sublt.w	sl, sl, r1
 800c1e2:	fb0a fa0a 	mul.w	sl, sl, sl
 800c1e6:	fb09 a909 	mla	r9, r9, r9, sl
 800c1ea:	4599      	cmp	r9, r3
 800c1ec:	dccd      	bgt.n	800c18a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe6>
 800c1ee:	465a      	mov	r2, fp
 800c1f0:	4621      	mov	r1, r4
 800c1f2:	a80e      	add	r0, sp, #56	; 0x38
 800c1f4:	f014 fbd0 	bl	8020998 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800c1f8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800c1fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c1fc:	9209      	str	r2, [sp, #36]	; 0x24
 800c1fe:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800c202:	930a      	str	r3, [sp, #40]	; 0x28
 800c204:	dd07      	ble.n	800c216 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
 800c206:	2102      	movs	r1, #2
 800c208:	fb93 f3f1 	sdiv	r3, r3, r1
 800c20c:	4413      	add	r3, r2
 800c20e:	930a      	str	r3, [sp, #40]	; 0x28
 800c210:	fb93 f3f1 	sdiv	r3, r3, r1
 800c214:	9309      	str	r3, [sp, #36]	; 0x24
 800c216:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 800c21a:	f04f 0a02 	mov.w	sl, #2
 800c21e:	4630      	mov	r0, r6
 800c220:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 800c224:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 800c228:	017f      	lsls	r7, r7, #5
 800c22a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c22e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c232:	930b      	str	r3, [sp, #44]	; 0x2c
 800c234:	f7ff fd0a 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c238:	f849 0d74 	str.w	r0, [r9, #-116]!
 800c23c:	a80b      	add	r0, sp, #44	; 0x2c
 800c23e:	4649      	mov	r1, r9
 800c240:	f7ff fcd8 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c244:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c246:	fb90 f0fa 	sdiv	r0, r0, sl
 800c24a:	eb00 0b03 	add.w	fp, r0, r3
 800c24e:	4630      	mov	r0, r6
 800c250:	f7ff fd1b 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c254:	f848 0d78 	str.w	r0, [r8, #-120]!
 800c258:	a80b      	add	r0, sp, #44	; 0x2c
 800c25a:	4641      	mov	r1, r8
 800c25c:	f7ff fcca 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c260:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c262:	4659      	mov	r1, fp
 800c264:	fb90 f0fa 	sdiv	r0, r0, sl
 800c268:	1a12      	subs	r2, r2, r0
 800c26a:	a80e      	add	r0, sp, #56	; 0x38
 800c26c:	f014 fd14 	bl	8020c98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c270:	f106 0a20 	add.w	sl, r6, #32
 800c274:	bb67      	cbnz	r7, 800c2d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
 800c276:	46b3      	mov	fp, r6
 800c278:	45aa      	cmp	sl, r5
 800c27a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c27c:	dc33      	bgt.n	800c2e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800c27e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c280:	4650      	mov	r0, sl
 800c282:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800c286:	920b      	str	r2, [sp, #44]	; 0x2c
 800c288:	f7ff fce0 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c28c:	4641      	mov	r1, r8
 800c28e:	900c      	str	r0, [sp, #48]	; 0x30
 800c290:	a80b      	add	r0, sp, #44	; 0x2c
 800c292:	f7ff fcaf 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c296:	2302      	movs	r3, #2
 800c298:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c29a:	fb90 f0f3 	sdiv	r0, r0, r3
 800c29e:	eb00 0b02 	add.w	fp, r0, r2
 800c2a2:	4650      	mov	r0, sl
 800c2a4:	f7ff fcf1 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c2a8:	4649      	mov	r1, r9
 800c2aa:	900d      	str	r0, [sp, #52]	; 0x34
 800c2ac:	a80b      	add	r0, sp, #44	; 0x2c
 800c2ae:	f7ff fca1 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c2b2:	2302      	movs	r3, #2
 800c2b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c2b6:	4659      	mov	r1, fp
 800c2b8:	46d3      	mov	fp, sl
 800c2ba:	44ba      	add	sl, r7
 800c2bc:	fb90 f0f3 	sdiv	r0, r0, r3
 800c2c0:	1a12      	subs	r2, r2, r0
 800c2c2:	a80e      	add	r0, sp, #56	; 0x38
 800c2c4:	f014 fd35 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c2c8:	e7d6      	b.n	800c278 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d4>
 800c2ca:	fb93 f3f2 	sdiv	r3, r3, r2
 800c2ce:	e768      	b.n	800c1a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xfe>
 800c2d0:	fb9a f2f7 	sdiv	r2, sl, r7
 800c2d4:	fb07 a212 	mls	r2, r7, r2, sl
 800c2d8:	1aba      	subs	r2, r7, r2
 800c2da:	fb92 f1f7 	sdiv	r1, r2, r7
 800c2de:	fb07 2211 	mls	r2, r7, r1, r2
 800c2e2:	4492      	add	sl, r2
 800c2e4:	e7c7      	b.n	800c276 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1d2>
 800c2e6:	45ab      	cmp	fp, r5
 800c2e8:	da23      	bge.n	800c332 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x28e>
 800c2ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2ec:	f04f 0a02 	mov.w	sl, #2
 800c2f0:	4628      	mov	r0, r5
 800c2f2:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800c2f6:	920b      	str	r2, [sp, #44]	; 0x2c
 800c2f8:	f7ff fca8 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c2fc:	4641      	mov	r1, r8
 800c2fe:	900c      	str	r0, [sp, #48]	; 0x30
 800c300:	a80b      	add	r0, sp, #44	; 0x2c
 800c302:	f7ff fc77 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c306:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c308:	fb90 f0fa 	sdiv	r0, r0, sl
 800c30c:	4403      	add	r3, r0
 800c30e:	4628      	mov	r0, r5
 800c310:	9301      	str	r3, [sp, #4]
 800c312:	f7ff fcba 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c316:	4649      	mov	r1, r9
 800c318:	900d      	str	r0, [sp, #52]	; 0x34
 800c31a:	a80b      	add	r0, sp, #44	; 0x2c
 800c31c:	f7ff fc6a 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c320:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c322:	9b01      	ldr	r3, [sp, #4]
 800c324:	fb90 f0fa 	sdiv	r0, r0, sl
 800c328:	4619      	mov	r1, r3
 800c32a:	1a12      	subs	r2, r2, r0
 800c32c:	a80e      	add	r0, sp, #56	; 0x38
 800c32e:	f014 fd00 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c332:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c334:	b99b      	cbnz	r3, 800c35e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
 800c336:	1bad      	subs	r5, r5, r6
 800c338:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 800c33c:	da04      	bge.n	800c348 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c33e:	a80e      	add	r0, sp, #56	; 0x38
 800c340:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 800c344:	f014 fcf5 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c348:	21ff      	movs	r1, #255	; 0xff
 800c34a:	a80e      	add	r0, sp, #56	; 0x38
 800c34c:	f014 fbe0 	bl	8020b10 <_ZN8touchgfx6Canvas6renderEh>
 800c350:	4604      	mov	r4, r0
 800c352:	4b8a      	ldr	r3, [pc, #552]	; (800c57c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d8>)
 800c354:	a816      	add	r0, sp, #88	; 0x58
 800c356:	930e      	str	r3, [sp, #56]	; 0x38
 800c358:	f001 fc8c 	bl	800dc74 <_ZN8touchgfx7OutlineD1Ev>
 800c35c:	e716      	b.n	800c18c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
 800c35e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 800c362:	429a      	cmp	r2, r3
 800c364:	f0c0 8107 	bcc.w	800c576 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4d2>
 800c368:	1bab      	subs	r3, r5, r6
 800c36a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 800c36e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c372:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800c376:	9301      	str	r3, [sp, #4]
 800c378:	da43      	bge.n	800c402 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
 800c37a:	4628      	mov	r0, r5
 800c37c:	f7ff fc66 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c380:	4649      	mov	r1, r9
 800c382:	900d      	str	r0, [sp, #52]	; 0x34
 800c384:	a809      	add	r0, sp, #36	; 0x24
 800c386:	f7ff fc35 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c38a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c38c:	18c3      	adds	r3, r0, r3
 800c38e:	4628      	mov	r0, r5
 800c390:	9303      	str	r3, [sp, #12]
 800c392:	f7ff fc7a 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c396:	4649      	mov	r1, r9
 800c398:	900d      	str	r0, [sp, #52]	; 0x34
 800c39a:	a809      	add	r0, sp, #36	; 0x24
 800c39c:	f7ff fc2a 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c3a2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 800c3a6:	1a1b      	subs	r3, r3, r0
 800c3a8:	9204      	str	r2, [sp, #16]
 800c3aa:	9302      	str	r3, [sp, #8]
 800c3ac:	eb0a 0305 	add.w	r3, sl, r5
 800c3b0:	9a04      	ldr	r2, [sp, #16]
 800c3b2:	4293      	cmp	r3, r2
 800c3b4:	da25      	bge.n	800c402 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x35e>
 800c3b6:	4618      	mov	r0, r3
 800c3b8:	9306      	str	r3, [sp, #24]
 800c3ba:	f7ff fc47 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c3be:	4649      	mov	r1, r9
 800c3c0:	900d      	str	r0, [sp, #52]	; 0x34
 800c3c2:	a80a      	add	r0, sp, #40	; 0x28
 800c3c4:	f7ff fc16 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3c8:	2202      	movs	r2, #2
 800c3ca:	9b03      	ldr	r3, [sp, #12]
 800c3cc:	9207      	str	r2, [sp, #28]
 800c3ce:	fb90 f0f2 	sdiv	r0, r0, r2
 800c3d2:	18c3      	adds	r3, r0, r3
 800c3d4:	9305      	str	r3, [sp, #20]
 800c3d6:	9b06      	ldr	r3, [sp, #24]
 800c3d8:	4618      	mov	r0, r3
 800c3da:	f7ff fc56 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c3de:	a92a      	add	r1, sp, #168	; 0xa8
 800c3e0:	f841 0d78 	str.w	r0, [r1, #-120]!
 800c3e4:	a80a      	add	r0, sp, #40	; 0x28
 800c3e6:	f7ff fc05 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3ea:	9a07      	ldr	r2, [sp, #28]
 800c3ec:	9b02      	ldr	r3, [sp, #8]
 800c3ee:	9905      	ldr	r1, [sp, #20]
 800c3f0:	fb90 f2f2 	sdiv	r2, r0, r2
 800c3f4:	a80e      	add	r0, sp, #56	; 0x38
 800c3f6:	1a9a      	subs	r2, r3, r2
 800c3f8:	f014 fc9b 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c3fc:	9b06      	ldr	r3, [sp, #24]
 800c3fe:	4453      	add	r3, sl
 800c400:	e7d6      	b.n	800c3b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x30c>
 800c402:	45ab      	cmp	fp, r5
 800c404:	da25      	bge.n	800c452 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ae>
 800c406:	4628      	mov	r0, r5
 800c408:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c40c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c410:	930b      	str	r3, [sp, #44]	; 0x2c
 800c412:	f7ff fc1b 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c416:	4641      	mov	r1, r8
 800c418:	900c      	str	r0, [sp, #48]	; 0x30
 800c41a:	a80b      	add	r0, sp, #44	; 0x2c
 800c41c:	f7ff fbea 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c420:	2202      	movs	r2, #2
 800c422:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c424:	9202      	str	r2, [sp, #8]
 800c426:	fb90 f0f2 	sdiv	r0, r0, r2
 800c42a:	eb00 0903 	add.w	r9, r0, r3
 800c42e:	4628      	mov	r0, r5
 800c430:	f7ff fc2b 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c434:	a92a      	add	r1, sp, #168	; 0xa8
 800c436:	f841 0d74 	str.w	r0, [r1, #-116]!
 800c43a:	a80b      	add	r0, sp, #44	; 0x2c
 800c43c:	f7ff fbda 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c440:	9a02      	ldr	r2, [sp, #8]
 800c442:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c444:	4649      	mov	r1, r9
 800c446:	fb90 f2f2 	sdiv	r2, r0, r2
 800c44a:	a80e      	add	r0, sp, #56	; 0x38
 800c44c:	1a9a      	subs	r2, r3, r2
 800c44e:	f014 fc70 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c452:	46d9      	mov	r9, fp
 800c454:	2502      	movs	r5, #2
 800c456:	45b1      	cmp	r9, r6
 800c458:	db25      	blt.n	800c4a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x402>
 800c45a:	4648      	mov	r0, r9
 800c45c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c460:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c464:	930b      	str	r3, [sp, #44]	; 0x2c
 800c466:	f7ff fbf1 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c46a:	4641      	mov	r1, r8
 800c46c:	900c      	str	r0, [sp, #48]	; 0x30
 800c46e:	a80b      	add	r0, sp, #44	; 0x2c
 800c470:	f7ff fbc0 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c474:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c476:	fb90 f0f5 	sdiv	r0, r0, r5
 800c47a:	eb00 0b03 	add.w	fp, r0, r3
 800c47e:	4648      	mov	r0, r9
 800c480:	f7ff fc03 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c484:	a90d      	add	r1, sp, #52	; 0x34
 800c486:	900d      	str	r0, [sp, #52]	; 0x34
 800c488:	a80b      	add	r0, sp, #44	; 0x2c
 800c48a:	f7ff fbb3 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c48e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c490:	4659      	mov	r1, fp
 800c492:	46cb      	mov	fp, r9
 800c494:	eba9 0907 	sub.w	r9, r9, r7
 800c498:	fb90 f0f5 	sdiv	r0, r0, r5
 800c49c:	1a12      	subs	r2, r2, r0
 800c49e:	a80e      	add	r0, sp, #56	; 0x38
 800c4a0:	f014 fc47 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c4a4:	e7d7      	b.n	800c456 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b2>
 800c4a6:	455e      	cmp	r6, fp
 800c4a8:	da22      	bge.n	800c4f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x44c>
 800c4aa:	2502      	movs	r5, #2
 800c4ac:	4630      	mov	r0, r6
 800c4ae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c4b2:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c4b6:	930b      	str	r3, [sp, #44]	; 0x2c
 800c4b8:	f7ff fbc8 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c4bc:	4641      	mov	r1, r8
 800c4be:	900c      	str	r0, [sp, #48]	; 0x30
 800c4c0:	a80b      	add	r0, sp, #44	; 0x2c
 800c4c2:	f7ff fb97 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4c6:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800c4c8:	fb90 f0f5 	sdiv	r0, r0, r5
 800c4cc:	4407      	add	r7, r0
 800c4ce:	4630      	mov	r0, r6
 800c4d0:	f7ff fbdb 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c4d4:	a92a      	add	r1, sp, #168	; 0xa8
 800c4d6:	f841 0d74 	str.w	r0, [r1, #-116]!
 800c4da:	a80b      	add	r0, sp, #44	; 0x2c
 800c4dc:	f7ff fb8a 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c4e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c4e2:	4639      	mov	r1, r7
 800c4e4:	fb90 f0f5 	sdiv	r0, r0, r5
 800c4e8:	1a12      	subs	r2, r2, r0
 800c4ea:	a80e      	add	r0, sp, #56	; 0x38
 800c4ec:	f014 fc21 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c4f0:	9b01      	ldr	r3, [sp, #4]
 800c4f2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c4f6:	f6bf af27 	bge.w	800c348 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c4fa:	ad2a      	add	r5, sp, #168	; 0xa8
 800c4fc:	4630      	mov	r0, r6
 800c4fe:	f7ff fba5 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c502:	f04f 0b02 	mov.w	fp, #2
 800c506:	f845 0d74 	str.w	r0, [r5, #-116]!
 800c50a:	a809      	add	r0, sp, #36	; 0x24
 800c50c:	4629      	mov	r1, r5
 800c50e:	f7ff fb71 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c512:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c514:	eb00 0903 	add.w	r9, r0, r3
 800c518:	4630      	mov	r0, r6
 800c51a:	f7ff fbb6 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c51e:	4629      	mov	r1, r5
 800c520:	900d      	str	r0, [sp, #52]	; 0x34
 800c522:	a809      	add	r0, sp, #36	; 0x24
 800c524:	f7ff fb66 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c528:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c52a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 800c52e:	eba3 0800 	sub.w	r8, r3, r0
 800c532:	4454      	add	r4, sl
 800c534:	42a6      	cmp	r6, r4
 800c536:	f77f af07 	ble.w	800c348 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 800c53a:	4620      	mov	r0, r4
 800c53c:	f7ff fb86 	bl	800bc4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c540:	4629      	mov	r1, r5
 800c542:	900d      	str	r0, [sp, #52]	; 0x34
 800c544:	a80a      	add	r0, sp, #40	; 0x28
 800c546:	f7ff fb55 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c54a:	fb90 f0fb 	sdiv	r0, r0, fp
 800c54e:	eb00 0709 	add.w	r7, r0, r9
 800c552:	4620      	mov	r0, r4
 800c554:	f7ff fb99 	bl	800bc8a <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c558:	a90c      	add	r1, sp, #48	; 0x30
 800c55a:	900c      	str	r0, [sp, #48]	; 0x30
 800c55c:	a80a      	add	r0, sp, #40	; 0x28
 800c55e:	f7ff fb49 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c562:	4639      	mov	r1, r7
 800c564:	4454      	add	r4, sl
 800c566:	fb90 f2fb 	sdiv	r2, r0, fp
 800c56a:	a80e      	add	r0, sp, #56	; 0x38
 800c56c:	eba8 0202 	sub.w	r2, r8, r2
 800c570:	f014 fbdf 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c574:	e7de      	b.n	800c534 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x490>
 800c576:	2400      	movs	r4, #0
 800c578:	e6eb      	b.n	800c352 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ae>
 800c57a:	bf00      	nop
 800c57c:	08023d44 	.word	0x08023d44

0800c580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c580:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c582:	6803      	ldr	r3, [r0, #0]
 800c584:	460d      	mov	r5, r1
 800c586:	4604      	mov	r4, r0
 800c588:	4601      	mov	r1, r0
 800c58a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c58c:	a802      	add	r0, sp, #8
 800c58e:	4798      	blx	r3
 800c590:	6828      	ldr	r0, [r5, #0]
 800c592:	6869      	ldr	r1, [r5, #4]
 800c594:	466b      	mov	r3, sp
 800c596:	c303      	stmia	r3!, {r0, r1}
 800c598:	4668      	mov	r0, sp
 800c59a:	4619      	mov	r1, r3
 800c59c:	f7fe fabe 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800c5a0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c5a2:	b188      	cbz	r0, 800c5c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c5a4:	6803      	ldr	r3, [r0, #0]
 800c5a6:	1d21      	adds	r1, r4, #4
 800c5a8:	68db      	ldr	r3, [r3, #12]
 800c5aa:	4798      	blx	r3
 800c5ac:	b160      	cbz	r0, 800c5c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c5ae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c5b2:	2b00      	cmp	r3, #0
 800c5b4:	dd08      	ble.n	800c5c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c5b6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800c5ba:	2d00      	cmp	r5, #0
 800c5bc:	dd04      	ble.n	800c5c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c5be:	4a2b      	ldr	r2, [pc, #172]	; (800c66c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800c5c0:	7812      	ldrb	r2, [r2, #0]
 800c5c2:	b11a      	cbz	r2, 800c5cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800c5c4:	2a01      	cmp	r2, #1
 800c5c6:	d029      	beq.n	800c61c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800c5c8:	b004      	add	sp, #16
 800c5ca:	bd70      	pop	{r4, r5, r6, pc}
 800c5cc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c5d0:	441d      	add	r5, r3
 800c5d2:	b2ad      	uxth	r5, r5
 800c5d4:	b22e      	sxth	r6, r5
 800c5d6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800c5da:	42b3      	cmp	r3, r6
 800c5dc:	daf4      	bge.n	800c5c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c5de:	6823      	ldr	r3, [r4, #0]
 800c5e0:	4669      	mov	r1, sp
 800c5e2:	4620      	mov	r0, r4
 800c5e4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c5e6:	4798      	blx	r3
 800c5e8:	b940      	cbnz	r0, 800c5fc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800c5ea:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c5ee:	2b01      	cmp	r3, #1
 800c5f0:	d004      	beq.n	800c5fc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800c5f2:	3301      	adds	r3, #1
 800c5f4:	105b      	asrs	r3, r3, #1
 800c5f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c5fa:	e7f0      	b.n	800c5de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c5fc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c600:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c604:	4413      	add	r3, r2
 800c606:	b29b      	uxth	r3, r3
 800c608:	441a      	add	r2, r3
 800c60a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c60e:	b212      	sxth	r2, r2
 800c610:	4296      	cmp	r6, r2
 800c612:	dae0      	bge.n	800c5d6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800c614:	1aeb      	subs	r3, r5, r3
 800c616:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c61a:	e7dc      	b.n	800c5d6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800c61c:	f8bd 5000 	ldrh.w	r5, [sp]
 800c620:	441d      	add	r5, r3
 800c622:	b2ad      	uxth	r5, r5
 800c624:	b22e      	sxth	r6, r5
 800c626:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c62a:	42b3      	cmp	r3, r6
 800c62c:	dacc      	bge.n	800c5c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c62e:	6823      	ldr	r3, [r4, #0]
 800c630:	4669      	mov	r1, sp
 800c632:	4620      	mov	r0, r4
 800c634:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c636:	4798      	blx	r3
 800c638:	b940      	cbnz	r0, 800c64c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800c63a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c63e:	2b01      	cmp	r3, #1
 800c640:	d004      	beq.n	800c64c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800c642:	3301      	adds	r3, #1
 800c644:	105b      	asrs	r3, r3, #1
 800c646:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c64a:	e7f0      	b.n	800c62e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c64c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c650:	f8bd 3000 	ldrh.w	r3, [sp]
 800c654:	4413      	add	r3, r2
 800c656:	b29b      	uxth	r3, r3
 800c658:	441a      	add	r2, r3
 800c65a:	f8ad 3000 	strh.w	r3, [sp]
 800c65e:	b212      	sxth	r2, r2
 800c660:	4296      	cmp	r6, r2
 800c662:	dae0      	bge.n	800c626 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800c664:	1aeb      	subs	r3, r5, r3
 800c666:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c66a:	e7dc      	b.n	800c626 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800c66c:	2400e41c 	.word	0x2400e41c

0800c670 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c670:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c672:	6803      	ldr	r3, [r0, #0]
 800c674:	4604      	mov	r4, r0
 800c676:	4601      	mov	r1, r0
 800c678:	4668      	mov	r0, sp
 800c67a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c67c:	4798      	blx	r3
 800c67e:	2100      	movs	r1, #0
 800c680:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c684:	4668      	mov	r0, sp
 800c686:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c68a:	9102      	str	r1, [sp, #8]
 800c68c:	a902      	add	r1, sp, #8
 800c68e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c692:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c696:	f7fe fa41 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800c69a:	6823      	ldr	r3, [r4, #0]
 800c69c:	4669      	mov	r1, sp
 800c69e:	4620      	mov	r0, r4
 800c6a0:	691b      	ldr	r3, [r3, #16]
 800c6a2:	4798      	blx	r3
 800c6a4:	b004      	add	sp, #16
 800c6a6:	bd10      	pop	{r4, pc}

0800c6a8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c6a8:	2101      	movs	r1, #1
 800c6aa:	2200      	movs	r2, #0
 800c6ac:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c6b0:	490a      	ldr	r1, [pc, #40]	; (800c6dc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c6b2:	8082      	strh	r2, [r0, #4]
 800c6b4:	6001      	str	r1, [r0, #0]
 800c6b6:	21ff      	movs	r1, #255	; 0xff
 800c6b8:	80c2      	strh	r2, [r0, #6]
 800c6ba:	8102      	strh	r2, [r0, #8]
 800c6bc:	8142      	strh	r2, [r0, #10]
 800c6be:	8182      	strh	r2, [r0, #12]
 800c6c0:	81c2      	strh	r2, [r0, #14]
 800c6c2:	8202      	strh	r2, [r0, #16]
 800c6c4:	8242      	strh	r2, [r0, #18]
 800c6c6:	61c2      	str	r2, [r0, #28]
 800c6c8:	8402      	strh	r2, [r0, #32]
 800c6ca:	8442      	strh	r2, [r0, #34]	; 0x22
 800c6cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c6d0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c6d4:	6282      	str	r2, [r0, #40]	; 0x28
 800c6d6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c6da:	4770      	bx	lr
 800c6dc:	08023540 	.word	0x08023540

0800c6e0 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 800c6e0:	f101 0364 	add.w	r3, r1, #100	; 0x64
 800c6e4:	4602      	mov	r2, r0
 800c6e6:	cb03      	ldmia	r3!, {r0, r1}
 800c6e8:	6010      	str	r0, [r2, #0]
 800c6ea:	4610      	mov	r0, r2
 800c6ec:	6051      	str	r1, [r2, #4]
 800c6ee:	4770      	bx	lr

0800c6f0 <_ZN8touchgfx4LineD1Ev>:
 800c6f0:	4770      	bx	lr

0800c6f2 <_ZN8touchgfx4LineD0Ev>:
 800c6f2:	b510      	push	{r4, lr}
 800c6f4:	4604      	mov	r4, r0
 800c6f6:	2170      	movs	r1, #112	; 0x70
 800c6f8:	f014 fb8f 	bl	8020e1a <_ZdlPvj>
 800c6fc:	4620      	mov	r0, r4
 800c6fe:	bd10      	pop	{r4, pc}

0800c700 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c700:	6800      	ldr	r0, [r0, #0]
 800c702:	2800      	cmp	r0, #0
 800c704:	bfb9      	ittee	lt
 800c706:	2320      	movlt	r3, #32
 800c708:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c70c:	301f      	addge	r0, #31
 800c70e:	1140      	asrge	r0, r0, #5
 800c710:	4770      	bx	lr

0800c712 <_ZNK8touchgfx4Line17invalidateContentEv>:
 800c712:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c716:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800c71a:	b089      	sub	sp, #36	; 0x24
 800c71c:	4604      	mov	r4, r0
 800c71e:	b353      	cbz	r3, 800c776 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 800c720:	6803      	ldr	r3, [r0, #0]
 800c722:	4601      	mov	r1, r0
 800c724:	a802      	add	r0, sp, #8
 800c726:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c728:	4798      	blx	r3
 800c72a:	2220      	movs	r2, #32
 800c72c:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 800c730:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c732:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c734:	f8d4 b000 	ldr.w	fp, [r4]
 800c738:	fb9a f0f2 	sdiv	r0, sl, r2
 800c73c:	fb91 f5f2 	sdiv	r5, r1, r2
 800c740:	fb93 f6f2 	sdiv	r6, r3, r2
 800c744:	1b40      	subs	r0, r0, r5
 800c746:	0076      	lsls	r6, r6, #1
 800c748:	2800      	cmp	r0, #0
 800c74a:	bfb8      	it	lt
 800c74c:	4240      	neglt	r0, r0
 800c74e:	4286      	cmp	r6, r0
 800c750:	dc0c      	bgt.n	800c76c <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 800c752:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c754:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 800c758:	fb95 f0f2 	sdiv	r0, r5, r2
 800c75c:	fb98 f7f2 	sdiv	r7, r8, r2
 800c760:	1bc0      	subs	r0, r0, r7
 800c762:	2800      	cmp	r0, #0
 800c764:	bfb8      	it	lt
 800c766:	4240      	neglt	r0, r0
 800c768:	4286      	cmp	r6, r0
 800c76a:	dd07      	ble.n	800c77c <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 800c76c:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c770:	a902      	add	r1, sp, #8
 800c772:	4620      	mov	r0, r4
 800c774:	4798      	blx	r3
 800c776:	b009      	add	sp, #36	; 0x24
 800c778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c77c:	eb01 060a 	add.w	r6, r1, sl
 800c780:	2002      	movs	r0, #2
 800c782:	eb08 0705 	add.w	r7, r8, r5
 800c786:	3301      	adds	r3, #1
 800c788:	f10d 0920 	add.w	r9, sp, #32
 800c78c:	9101      	str	r1, [sp, #4]
 800c78e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800c792:	fb96 f6f0 	sdiv	r6, r6, r0
 800c796:	fb97 f7f0 	sdiv	r7, r7, r0
 800c79a:	4103      	asrs	r3, r0
 800c79c:	b236      	sxth	r6, r6
 800c79e:	b23f      	sxth	r7, r7
 800c7a0:	f849 3d08 	str.w	r3, [r9, #-8]!
 800c7a4:	4648      	mov	r0, r9
 800c7a6:	fb96 f6f2 	sdiv	r6, r6, r2
 800c7aa:	fb97 f7f2 	sdiv	r7, r7, r2
 800c7ae:	f7ff ffa7 	bl	800c700 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800c7b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c7b6:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800c7ba:	fa1f fe87 	uxth.w	lr, r7
 800c7be:	9901      	ldr	r1, [sp, #4]
 800c7c0:	fa1f fc86 	uxth.w	ip, r6
 800c7c4:	4293      	cmp	r3, r2
 800c7c6:	b280      	uxth	r0, r0
 800c7c8:	eba1 0a0a 	sub.w	sl, r1, sl
 800c7cc:	da54      	bge.n	800c878 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 800c7ce:	ebac 0100 	sub.w	r1, ip, r0
 800c7d2:	f1ba 0f00 	cmp.w	sl, #0
 800c7d6:	4460      	add	r0, ip
 800c7d8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800c7dc:	b289      	uxth	r1, r1
 800c7de:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 800c7e2:	b280      	uxth	r0, r0
 800c7e4:	b20e      	sxth	r6, r1
 800c7e6:	da29      	bge.n	800c83c <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 800c7e8:	eba8 0505 	sub.w	r5, r8, r5
 800c7ec:	2d00      	cmp	r5, #0
 800c7ee:	da2a      	bge.n	800c846 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800c7f0:	fa1f f88a 	uxth.w	r8, sl
 800c7f4:	f8ad a010 	strh.w	sl, [sp, #16]
 800c7f8:	fa1f f58c 	uxth.w	r5, ip
 800c7fc:	f8ad c012 	strh.w	ip, [sp, #18]
 800c800:	eba0 0008 	sub.w	r0, r0, r8
 800c804:	4443      	add	r3, r8
 800c806:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c80a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c80e:	1a59      	subs	r1, r3, r1
 800c810:	ebae 0005 	sub.w	r0, lr, r5
 800c814:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c818:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c81c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c820:	442a      	add	r2, r5
 800c822:	eba2 0e0e 	sub.w	lr, r2, lr
 800c826:	f8ad e01e 	strh.w	lr, [sp, #30]
 800c82a:	f8db 3010 	ldr.w	r3, [fp, #16]
 800c82e:	a904      	add	r1, sp, #16
 800c830:	4620      	mov	r0, r4
 800c832:	4798      	blx	r3
 800c834:	6823      	ldr	r3, [r4, #0]
 800c836:	4649      	mov	r1, r9
 800c838:	691b      	ldr	r3, [r3, #16]
 800c83a:	e79a      	b.n	800c772 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 800c83c:	d003      	beq.n	800c846 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800c83e:	eba8 0505 	sub.w	r5, r8, r5
 800c842:	2d00      	cmp	r5, #0
 800c844:	dcd4      	bgt.n	800c7f0 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 800c846:	fa1f f88a 	uxth.w	r8, sl
 800c84a:	f8ad 6010 	strh.w	r6, [sp, #16]
 800c84e:	fa1f f58c 	uxth.w	r5, ip
 800c852:	f8ad c012 	strh.w	ip, [sp, #18]
 800c856:	4443      	add	r3, r8
 800c858:	eba0 0008 	sub.w	r0, r0, r8
 800c85c:	f8ad a018 	strh.w	sl, [sp, #24]
 800c860:	1a59      	subs	r1, r3, r1
 800c862:	ebae 0305 	sub.w	r3, lr, r5
 800c866:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c86a:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c86e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c872:	f8ad 001c 	strh.w	r0, [sp, #28]
 800c876:	e7d3      	b.n	800c820 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 800c878:	ebae 0100 	sub.w	r1, lr, r0
 800c87c:	f1ba 0f00 	cmp.w	sl, #0
 800c880:	4470      	add	r0, lr
 800c882:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 800c886:	b289      	uxth	r1, r1
 800c888:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 800c88c:	b280      	uxth	r0, r0
 800c88e:	b20f      	sxth	r7, r1
 800c890:	da20      	bge.n	800c8d4 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 800c892:	eba8 0505 	sub.w	r5, r8, r5
 800c896:	2d00      	cmp	r5, #0
 800c898:	da21      	bge.n	800c8de <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800c89a:	fa1f f88e 	uxth.w	r8, lr
 800c89e:	f8ad e010 	strh.w	lr, [sp, #16]
 800c8a2:	fa1f f58a 	uxth.w	r5, sl
 800c8a6:	f8ad a012 	strh.w	sl, [sp, #18]
 800c8aa:	4443      	add	r3, r8
 800c8ac:	ebac 0e08 	sub.w	lr, ip, r8
 800c8b0:	442a      	add	r2, r5
 800c8b2:	1b40      	subs	r0, r0, r5
 800c8b4:	eba3 0c0c 	sub.w	ip, r3, ip
 800c8b8:	f8ad e014 	strh.w	lr, [sp, #20]
 800c8bc:	1a51      	subs	r1, r2, r1
 800c8be:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c8c2:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c8c6:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c8ca:	f8ad c01c 	strh.w	ip, [sp, #28]
 800c8ce:	f8ad 101e 	strh.w	r1, [sp, #30]
 800c8d2:	e7aa      	b.n	800c82a <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 800c8d4:	d003      	beq.n	800c8de <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800c8d6:	eba8 0505 	sub.w	r5, r8, r5
 800c8da:	2d00      	cmp	r5, #0
 800c8dc:	dcdd      	bgt.n	800c89a <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 800c8de:	fa1f f58e 	uxth.w	r5, lr
 800c8e2:	f8ad 7012 	strh.w	r7, [sp, #18]
 800c8e6:	fa1f f88a 	uxth.w	r8, sl
 800c8ea:	f8ad e010 	strh.w	lr, [sp, #16]
 800c8ee:	442b      	add	r3, r5
 800c8f0:	ebac 0705 	sub.w	r7, ip, r5
 800c8f4:	4442      	add	r2, r8
 800c8f6:	eba0 0008 	sub.w	r0, r0, r8
 800c8fa:	eba3 0c0c 	sub.w	ip, r3, ip
 800c8fe:	f8ad 7014 	strh.w	r7, [sp, #20]
 800c902:	1a51      	subs	r1, r2, r1
 800c904:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c908:	f8ad a01a 	strh.w	sl, [sp, #26]
 800c90c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800c910:	f8ad c01c 	strh.w	ip, [sp, #28]
 800c914:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c918:	e787      	b.n	800c82a <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0800c91a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 800c91a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800c91e:	f04f 0300 	mov.w	r3, #0
 800c922:	bf2c      	ite	cs
 800c924:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 800c928:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 800c92c:	1899      	adds	r1, r3, r2
 800c92e:	4288      	cmp	r0, r1
 800c930:	bf24      	itt	cs
 800c932:	1853      	addcs	r3, r2, r1
 800c934:	1a40      	subcs	r0, r0, r1
 800c936:	0892      	lsrs	r2, r2, #2
 800c938:	ea4f 0353 	mov.w	r3, r3, lsr #1
 800c93c:	d1f6      	bne.n	800c92c <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
 800c93e:	4618      	mov	r0, r3
 800c940:	4770      	bx	lr

0800c942 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800c942:	b510      	push	{r4, lr}
 800c944:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800c948:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800c94c:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800c950:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800c954:	139b      	asrs	r3, r3, #14
 800c956:	13a4      	asrs	r4, r4, #14
 800c958:	429c      	cmp	r4, r3
 800c95a:	bfb8      	it	lt
 800c95c:	461c      	movlt	r4, r3
 800c95e:	2c01      	cmp	r4, #1
 800c960:	dd07      	ble.n	800c972 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800c962:	fb91 f1f4 	sdiv	r1, r1, r4
 800c966:	fb90 f0f4 	sdiv	r0, r0, r4
 800c96a:	f7ff ffea 	bl	800c942 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c96e:	4360      	muls	r0, r4
 800c970:	bd10      	pop	{r4, pc}
 800c972:	4340      	muls	r0, r0
 800c974:	fb01 0001 	mla	r0, r1, r1, r0
 800c978:	f7ff ffcf 	bl	800c91a <_ZN8touchgfx7CWRUtil5isqrtEm>
 800c97c:	e7f8      	b.n	800c970 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

0800c980 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 800c980:	2800      	cmp	r0, #0
 800c982:	b508      	push	{r3, lr}
 800c984:	da05      	bge.n	800c992 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 800c986:	4240      	negs	r0, r0
 800c988:	f7ff fffa 	bl	800c980 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800c98c:	4240      	negs	r0, r0
 800c98e:	b240      	sxtb	r0, r0
 800c990:	bd08      	pop	{r3, pc}
 800c992:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800c996:	dc11      	bgt.n	800c9bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 800c998:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 800c99c:	dd09      	ble.n	800c9b2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 800c99e:	4340      	muls	r0, r0
 800c9a0:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 800c9a4:	f7ff ffb9 	bl	800c91a <_ZN8touchgfx7CWRUtil5isqrtEm>
 800c9a8:	f7ff ffea 	bl	800c980 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800c9ac:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c9b0:	e7ed      	b.n	800c98e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 800c9b2:	3003      	adds	r0, #3
 800c9b4:	4b02      	ldr	r3, [pc, #8]	; (800c9c0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 800c9b6:	10c0      	asrs	r0, r0, #3
 800c9b8:	5618      	ldrsb	r0, [r3, r0]
 800c9ba:	e7e9      	b.n	800c990 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800c9bc:	2000      	movs	r0, #0
 800c9be:	e7e7      	b.n	800c990 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800c9c0:	080235b0 	.word	0x080235b0

0800c9c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 800c9c4:	4281      	cmp	r1, r0
 800c9c6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c9c8:	460c      	mov	r4, r1
 800c9ca:	4615      	mov	r5, r2
 800c9cc:	dd07      	ble.n	800c9de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 800c9ce:	4601      	mov	r1, r0
 800c9d0:	4620      	mov	r0, r4
 800c9d2:	f7ff fff7 	bl	800c9c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800c9d6:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c9da:	b003      	add	sp, #12
 800c9dc:	bd30      	pop	{r4, r5, pc}
 800c9de:	f7ff ffb0 	bl	800c942 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800c9e2:	6028      	str	r0, [r5, #0]
 800c9e4:	2800      	cmp	r0, #0
 800c9e6:	d0f8      	beq.n	800c9da <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 800c9e8:	4602      	mov	r2, r0
 800c9ea:	ab01      	add	r3, sp, #4
 800c9ec:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800c9f0:	4620      	mov	r0, r4
 800c9f2:	f004 ff0d 	bl	8011810 <_ZN8touchgfx6muldivElllRl>
 800c9f6:	f7ff ffc3 	bl	800c980 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800c9fa:	e7ee      	b.n	800c9da <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

0800c9fc <_ZN8touchgfx4LineC1Ev>:
 800c9fc:	b510      	push	{r4, lr}
 800c9fe:	4604      	mov	r4, r0
 800ca00:	f7ff fe52 	bl	800c6a8 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800ca04:	4b0c      	ldr	r3, [pc, #48]	; (800ca38 <_ZN8touchgfx4LineC1Ev+0x3c>)
 800ca06:	2220      	movs	r2, #32
 800ca08:	4620      	mov	r0, r4
 800ca0a:	6023      	str	r3, [r4, #0]
 800ca0c:	2300      	movs	r3, #0
 800ca0e:	63e2      	str	r2, [r4, #60]	; 0x3c
 800ca10:	2212      	movs	r2, #18
 800ca12:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ca16:	66e2      	str	r2, [r4, #108]	; 0x6c
 800ca18:	60a3      	str	r3, [r4, #8]
 800ca1a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800ca1e:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 800ca22:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 800ca26:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 800ca2a:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 800ca2e:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 800ca32:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 800ca36:	bd10      	pop	{r4, pc}
 800ca38:	08023614 	.word	0x08023614

0800ca3c <_ZN8touchgfx4Line17updateCachedShapeEv>:
 800ca3c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ca40:	6b47      	ldr	r7, [r0, #52]	; 0x34
 800ca42:	4604      	mov	r4, r0
 800ca44:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ca46:	6b85      	ldr	r5, [r0, #56]	; 0x38
 800ca48:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800ca4a:	1aff      	subs	r7, r7, r3
 800ca4c:	eba5 0502 	sub.w	r5, r5, r2
 800ca50:	d142      	bne.n	800cad8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 800ca52:	b955      	cbnz	r5, 800ca6a <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 800ca54:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 800ca58:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 800ca5c:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 800ca60:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 800ca64:	b002      	add	sp, #8
 800ca66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca6a:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 800ca6e:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 800ca72:	4629      	mov	r1, r5
 800ca74:	2502      	movs	r5, #2
 800ca76:	4642      	mov	r2, r8
 800ca78:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ca7a:	f004 fee8 	bl	801184e <_ZN8touchgfx6muldivElll>
 800ca7e:	4642      	mov	r2, r8
 800ca80:	4639      	mov	r1, r7
 800ca82:	fb90 f6f5 	sdiv	r6, r0, r5
 800ca86:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ca88:	f004 fee1 	bl	801184e <_ZN8touchgfx6muldivElll>
 800ca8c:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 800ca90:	fb90 f5f5 	sdiv	r5, r0, r5
 800ca94:	f1b9 0f00 	cmp.w	r9, #0
 800ca98:	d067      	beq.n	800cb6a <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 800ca9a:	f1b9 0f02 	cmp.w	r9, #2
 800ca9e:	d878      	bhi.n	800cb92 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 800caa0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800caa2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800caa4:	1b93      	subs	r3, r2, r6
 800caa6:	4432      	add	r2, r6
 800caa8:	1b5b      	subs	r3, r3, r5
 800caaa:	1b52      	subs	r2, r2, r5
 800caac:	6463      	str	r3, [r4, #68]	; 0x44
 800caae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cab0:	6522      	str	r2, [r4, #80]	; 0x50
 800cab2:	18e9      	adds	r1, r5, r3
 800cab4:	1b5b      	subs	r3, r3, r5
 800cab6:	1b89      	subs	r1, r1, r6
 800cab8:	1b9b      	subs	r3, r3, r6
 800caba:	6561      	str	r1, [r4, #84]	; 0x54
 800cabc:	1b81      	subs	r1, r0, r6
 800cabe:	4430      	add	r0, r6
 800cac0:	4429      	add	r1, r5
 800cac2:	4428      	add	r0, r5
 800cac4:	64a1      	str	r1, [r4, #72]	; 0x48
 800cac6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cac8:	64e0      	str	r0, [r4, #76]	; 0x4c
 800caca:	186f      	adds	r7, r5, r1
 800cacc:	1b49      	subs	r1, r1, r5
 800cace:	4437      	add	r7, r6
 800cad0:	4431      	add	r1, r6
 800cad2:	65a7      	str	r7, [r4, #88]	; 0x58
 800cad4:	65e1      	str	r1, [r4, #92]	; 0x5c
 800cad6:	e05b      	b.n	800cb90 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 800cad8:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 800cadc:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 800cae0:	2d00      	cmp	r5, #0
 800cae2:	d0c6      	beq.n	800ca72 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 800cae4:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 800cae8:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 800caec:	fb93 f2f8 	sdiv	r2, r3, r8
 800caf0:	fb08 3312 	mls	r3, r8, r2, r3
 800caf4:	b353      	cbz	r3, 800cb4c <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 800caf6:	fb98 f2f3 	sdiv	r2, r8, r3
 800cafa:	fb03 8812 	mls	r8, r3, r2, r8
 800cafe:	f1b8 0f00 	cmp.w	r8, #0
 800cb02:	d1f3      	bne.n	800caec <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 800cb04:	2b01      	cmp	r3, #1
 800cb06:	f24b 5104 	movw	r1, #46340	; 0xb504
 800cb0a:	bf1c      	itt	ne
 800cb0c:	fb97 f7f3 	sdivne	r7, r7, r3
 800cb10:	fb95 f5f3 	sdivne	r5, r5, r3
 800cb14:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 800cb18:	4608      	mov	r0, r1
 800cb1a:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 800cb1e:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 800cb22:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 800cb26:	428b      	cmp	r3, r1
 800cb28:	dd01      	ble.n	800cb2e <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 800cb2a:	428a      	cmp	r2, r1
 800cb2c:	dc10      	bgt.n	800cb50 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 800cb2e:	fb90 f3f3 	sdiv	r3, r0, r3
 800cb32:	fb90 f2f2 	sdiv	r2, r0, r2
 800cb36:	4293      	cmp	r3, r2
 800cb38:	bfa8      	it	ge
 800cb3a:	4613      	movge	r3, r2
 800cb3c:	435f      	muls	r7, r3
 800cb3e:	435d      	muls	r5, r3
 800cb40:	4629      	mov	r1, r5
 800cb42:	4638      	mov	r0, r7
 800cb44:	f7ff fefd 	bl	800c942 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cb48:	4680      	mov	r8, r0
 800cb4a:	e792      	b.n	800ca72 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 800cb4c:	4643      	mov	r3, r8
 800cb4e:	e7d9      	b.n	800cb04 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 800cb50:	fb93 f3f1 	sdiv	r3, r3, r1
 800cb54:	fb92 f2f1 	sdiv	r2, r2, r1
 800cb58:	4293      	cmp	r3, r2
 800cb5a:	bfcc      	ite	gt
 800cb5c:	3301      	addgt	r3, #1
 800cb5e:	1c53      	addle	r3, r2, #1
 800cb60:	fb97 f7f3 	sdiv	r7, r7, r3
 800cb64:	fb95 f5f3 	sdiv	r5, r5, r3
 800cb68:	e7ea      	b.n	800cb40 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 800cb6a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cb6c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cb6e:	1b93      	subs	r3, r2, r6
 800cb70:	4432      	add	r2, r6
 800cb72:	6463      	str	r3, [r4, #68]	; 0x44
 800cb74:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb76:	6522      	str	r2, [r4, #80]	; 0x50
 800cb78:	18e9      	adds	r1, r5, r3
 800cb7a:	1b5b      	subs	r3, r3, r5
 800cb7c:	6561      	str	r1, [r4, #84]	; 0x54
 800cb7e:	1b81      	subs	r1, r0, r6
 800cb80:	4430      	add	r0, r6
 800cb82:	64a1      	str	r1, [r4, #72]	; 0x48
 800cb84:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cb86:	64e0      	str	r0, [r4, #76]	; 0x4c
 800cb88:	186f      	adds	r7, r5, r1
 800cb8a:	1b49      	subs	r1, r1, r5
 800cb8c:	65a7      	str	r7, [r4, #88]	; 0x58
 800cb8e:	65e1      	str	r1, [r4, #92]	; 0x5c
 800cb90:	6623      	str	r3, [r4, #96]	; 0x60
 800cb92:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cb94:	f104 0148 	add.w	r1, r4, #72	; 0x48
 800cb98:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800cb9a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 800cb9e:	9200      	str	r2, [sp, #0]
 800cba0:	9301      	str	r3, [sp, #4]
 800cba2:	680f      	ldr	r7, [r1, #0]
 800cba4:	3104      	adds	r1, #4
 800cba6:	9800      	ldr	r0, [sp, #0]
 800cba8:	42ba      	cmp	r2, r7
 800cbaa:	bfa8      	it	ge
 800cbac:	463a      	movge	r2, r7
 800cbae:	4287      	cmp	r7, r0
 800cbb0:	9801      	ldr	r0, [sp, #4]
 800cbb2:	bfc8      	it	gt
 800cbb4:	9700      	strgt	r7, [sp, #0]
 800cbb6:	68cf      	ldr	r7, [r1, #12]
 800cbb8:	42bb      	cmp	r3, r7
 800cbba:	bfa8      	it	ge
 800cbbc:	463b      	movge	r3, r7
 800cbbe:	4287      	cmp	r7, r0
 800cbc0:	bfc8      	it	gt
 800cbc2:	9701      	strgt	r7, [sp, #4]
 800cbc4:	458c      	cmp	ip, r1
 800cbc6:	d1ec      	bne.n	800cba2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 800cbc8:	2720      	movs	r7, #32
 800cbca:	4668      	mov	r0, sp
 800cbcc:	fb92 f8f7 	sdiv	r8, r2, r7
 800cbd0:	fb93 f7f7 	sdiv	r7, r3, r7
 800cbd4:	f7ff fd94 	bl	800c700 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cbd8:	4682      	mov	sl, r0
 800cbda:	a801      	add	r0, sp, #4
 800cbdc:	f7ff fd90 	bl	800c700 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cbe0:	ebaa 0208 	sub.w	r2, sl, r8
 800cbe4:	1bc0      	subs	r0, r0, r7
 800cbe6:	f1b9 0f01 	cmp.w	r9, #1
 800cbea:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 800cbee:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 800cbf2:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 800cbf6:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 800cbfa:	f47f af33 	bne.w	800ca64 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 800cbfe:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800cc00:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cc02:	1b83      	subs	r3, r0, r6
 800cc04:	6463      	str	r3, [r4, #68]	; 0x44
 800cc06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc08:	18ea      	adds	r2, r5, r3
 800cc0a:	6562      	str	r2, [r4, #84]	; 0x54
 800cc0c:	1b8a      	subs	r2, r1, r6
 800cc0e:	4431      	add	r1, r6
 800cc10:	4406      	add	r6, r0
 800cc12:	64a2      	str	r2, [r4, #72]	; 0x48
 800cc14:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cc16:	64e1      	str	r1, [r4, #76]	; 0x4c
 800cc18:	18af      	adds	r7, r5, r2
 800cc1a:	1b52      	subs	r2, r2, r5
 800cc1c:	1b5d      	subs	r5, r3, r5
 800cc1e:	6526      	str	r6, [r4, #80]	; 0x50
 800cc20:	65a7      	str	r7, [r4, #88]	; 0x58
 800cc22:	65e2      	str	r2, [r4, #92]	; 0x5c
 800cc24:	6625      	str	r5, [r4, #96]	; 0x60
 800cc26:	e71d      	b.n	800ca64 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0800cc28 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 800cc28:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800cc2a:	428b      	cmp	r3, r1
 800cc2c:	d102      	bne.n	800cc34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 800cc2e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800cc30:	4293      	cmp	r3, r2
 800cc32:	d003      	beq.n	800cc3c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 800cc34:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 800cc38:	f7ff bf00 	b.w	800ca3c <_ZN8touchgfx4Line17updateCachedShapeEv>
 800cc3c:	4770      	bx	lr

0800cc3e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 800cc3e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800cc40:	428b      	cmp	r3, r1
 800cc42:	d102      	bne.n	800cc4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 800cc44:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800cc46:	4293      	cmp	r3, r2
 800cc48:	d003      	beq.n	800cc52 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 800cc4a:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 800cc4e:	f7ff bef5 	b.w	800ca3c <_ZN8touchgfx4Line17updateCachedShapeEv>
 800cc52:	4770      	bx	lr

0800cc54 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 800cc54:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 800cc58:	f7ff bef0 	b.w	800ca3c <_ZN8touchgfx4Line17updateCachedShapeEv>

0800cc5c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 800cc5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc60:	b0a0      	sub	sp, #128	; 0x80
 800cc62:	4604      	mov	r4, r0
 800cc64:	460a      	mov	r2, r1
 800cc66:	4601      	mov	r1, r0
 800cc68:	a804      	add	r0, sp, #16
 800cc6a:	f013 fe95 	bl	8020998 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800cc6e:	2300      	movs	r3, #0
 800cc70:	9301      	str	r3, [sp, #4]
 800cc72:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800cc76:	2b01      	cmp	r3, #1
 800cc78:	d17c      	bne.n	800cd74 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 800cc7a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800cc7c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800cc7e:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800cc80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc82:	1ac0      	subs	r0, r0, r3
 800cc84:	eba1 0102 	sub.w	r1, r1, r2
 800cc88:	d437      	bmi.n	800ccfa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 800cc8a:	2900      	cmp	r1, #0
 800cc8c:	aa01      	add	r2, sp, #4
 800cc8e:	db2e      	blt.n	800ccee <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 800cc90:	f7ff fe98 	bl	800c9c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800cc94:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 800cc98:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800cc9a:	a804      	add	r0, sp, #16
 800cc9c:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800cc9e:	f013 fffb 	bl	8020c98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cca2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800cca4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800cca6:	a804      	add	r0, sp, #16
 800cca8:	f014 f843 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800ccac:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 800ccae:	2db3      	cmp	r5, #179	; 0xb3
 800ccb0:	dc33      	bgt.n	800cd1a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 800ccb2:	eba6 0805 	sub.w	r8, r6, r5
 800ccb6:	4640      	mov	r0, r8
 800ccb8:	f7fe ffa8 	bl	800bc0c <_ZN8touchgfx7CWRUtil4sineEi>
 800ccbc:	a902      	add	r1, sp, #8
 800ccbe:	9002      	str	r0, [sp, #8]
 800ccc0:	a801      	add	r0, sp, #4
 800ccc2:	f7fe ff97 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ccc6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ccc8:	1847      	adds	r7, r0, r1
 800ccca:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 800ccce:	f7fe ff9d 	bl	800bc0c <_ZN8touchgfx7CWRUtil4sineEi>
 800ccd2:	a903      	add	r1, sp, #12
 800ccd4:	9003      	str	r0, [sp, #12]
 800ccd6:	a801      	add	r0, sp, #4
 800ccd8:	f7fe ff8c 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ccdc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ccde:	4639      	mov	r1, r7
 800cce0:	1a12      	subs	r2, r2, r0
 800cce2:	a804      	add	r0, sp, #16
 800cce4:	f014 f825 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cce8:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 800ccea:	441d      	add	r5, r3
 800ccec:	e7df      	b.n	800ccae <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 800ccee:	4249      	negs	r1, r1
 800ccf0:	f7ff fe68 	bl	800c9c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800ccf4:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 800ccf8:	e7ce      	b.n	800cc98 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 800ccfa:	2900      	cmp	r1, #0
 800ccfc:	f1c0 0000 	rsb	r0, r0, #0
 800cd00:	aa01      	add	r2, sp, #4
 800cd02:	db04      	blt.n	800cd0e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 800cd04:	f7ff fe5e 	bl	800c9c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800cd08:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 800cd0c:	e7c4      	b.n	800cc98 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 800cd0e:	4249      	negs	r1, r1
 800cd10:	f7ff fe58 	bl	800c9c4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800cd14:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 800cd18:	e7be      	b.n	800cc98 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 800cd1a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800cd1c:	a804      	add	r0, sp, #16
 800cd1e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800cd20:	f014 f807 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd24:	6e22      	ldr	r2, [r4, #96]	; 0x60
 800cd26:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800cd28:	a804      	add	r0, sp, #16
 800cd2a:	f014 f802 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd2e:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 800cd30:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 800cd34:	2d00      	cmp	r5, #0
 800cd36:	dd31      	ble.n	800cd9c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 800cd38:	eb05 0806 	add.w	r8, r5, r6
 800cd3c:	4640      	mov	r0, r8
 800cd3e:	f7fe ff65 	bl	800bc0c <_ZN8touchgfx7CWRUtil4sineEi>
 800cd42:	a902      	add	r1, sp, #8
 800cd44:	9002      	str	r0, [sp, #8]
 800cd46:	a801      	add	r0, sp, #4
 800cd48:	f7fe ff54 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd4c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800cd4e:	1847      	adds	r7, r0, r1
 800cd50:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 800cd54:	f7fe ff5a 	bl	800bc0c <_ZN8touchgfx7CWRUtil4sineEi>
 800cd58:	a903      	add	r1, sp, #12
 800cd5a:	9003      	str	r0, [sp, #12]
 800cd5c:	a801      	add	r0, sp, #4
 800cd5e:	f7fe ff49 	bl	800bbf4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd62:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cd64:	4639      	mov	r1, r7
 800cd66:	1a12      	subs	r2, r2, r0
 800cd68:	a804      	add	r0, sp, #16
 800cd6a:	f013 ffe2 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd6e:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 800cd70:	1aed      	subs	r5, r5, r3
 800cd72:	e7df      	b.n	800cd34 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 800cd74:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800cd76:	a804      	add	r0, sp, #16
 800cd78:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800cd7a:	f013 ff8d 	bl	8020c98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cd7e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800cd80:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800cd82:	a804      	add	r0, sp, #16
 800cd84:	f013 ffd5 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd88:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800cd8a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800cd8c:	a804      	add	r0, sp, #16
 800cd8e:	f013 ffd0 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd92:	6e22      	ldr	r2, [r4, #96]	; 0x60
 800cd94:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800cd96:	a804      	add	r0, sp, #16
 800cd98:	f013 ffcb 	bl	8020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd9c:	21ff      	movs	r1, #255	; 0xff
 800cd9e:	a804      	add	r0, sp, #16
 800cda0:	f013 feb6 	bl	8020b10 <_ZN8touchgfx6Canvas6renderEh>
 800cda4:	4b04      	ldr	r3, [pc, #16]	; (800cdb8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 800cda6:	4604      	mov	r4, r0
 800cda8:	a80c      	add	r0, sp, #48	; 0x30
 800cdaa:	9304      	str	r3, [sp, #16]
 800cdac:	f000 ff62 	bl	800dc74 <_ZN8touchgfx7OutlineD1Ev>
 800cdb0:	4620      	mov	r0, r4
 800cdb2:	b020      	add	sp, #128	; 0x80
 800cdb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cdb8:	08023d44 	.word	0x08023d44

0800cdbc <_ZNK8touchgfx5Image17invalidateContentEv>:
 800cdbc:	b508      	push	{r3, lr}
 800cdbe:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800cdc2:	b10b      	cbz	r3, 800cdc8 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 800cdc4:	f7f4 f9b2 	bl	800112c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800cdc8:	bd08      	pop	{r3, pc}

0800cdca <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800cdca:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800cdce:	4770      	bx	lr

0800cdd0 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800cdd0:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800cdd4:	4770      	bx	lr

0800cdd6 <_ZN8touchgfx13ScalableImageD1Ev>:
 800cdd6:	4770      	bx	lr

0800cdd8 <_ZN8touchgfx13ScalableImageD0Ev>:
 800cdd8:	b510      	push	{r4, lr}
 800cdda:	4604      	mov	r4, r0
 800cddc:	212c      	movs	r1, #44	; 0x2c
 800cdde:	f014 f81c 	bl	8020e1a <_ZdlPvj>
 800cde2:	4620      	mov	r0, r4
 800cde4:	bd10      	pop	{r4, pc}

0800cde6 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800cde6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cde8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800cdec:	b085      	sub	sp, #20
 800cdee:	4604      	mov	r4, r0
 800cdf0:	460d      	mov	r5, r1
 800cdf2:	2bff      	cmp	r3, #255	; 0xff
 800cdf4:	d128      	bne.n	800ce48 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800cdf6:	f101 0626 	add.w	r6, r1, #38	; 0x26
 800cdfa:	4668      	mov	r0, sp
 800cdfc:	4631      	mov	r1, r6
 800cdfe:	f006 f8fd 	bl	8012ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ce02:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 800ce06:	4630      	mov	r0, r6
 800ce08:	f006 f890 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ce0c:	4287      	cmp	r7, r0
 800ce0e:	d11b      	bne.n	800ce48 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800ce10:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800ce14:	4630      	mov	r0, r6
 800ce16:	f006 f8bd 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ce1a:	4287      	cmp	r7, r0
 800ce1c:	d114      	bne.n	800ce48 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800ce1e:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 800ce22:	2100      	movs	r1, #0
 800ce24:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800ce28:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ce2c:	466b      	mov	r3, sp
 800ce2e:	9102      	str	r1, [sp, #8]
 800ce30:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ce34:	cb03      	ldmia	r3!, {r0, r1}
 800ce36:	6020      	str	r0, [r4, #0]
 800ce38:	4620      	mov	r0, r4
 800ce3a:	6061      	str	r1, [r4, #4]
 800ce3c:	4619      	mov	r1, r3
 800ce3e:	f7fd fe6d 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800ce42:	4620      	mov	r0, r4
 800ce44:	b005      	add	sp, #20
 800ce46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce48:	2300      	movs	r3, #0
 800ce4a:	8023      	strh	r3, [r4, #0]
 800ce4c:	8063      	strh	r3, [r4, #2]
 800ce4e:	80a3      	strh	r3, [r4, #4]
 800ce50:	80e3      	strh	r3, [r4, #6]
 800ce52:	e7f6      	b.n	800ce42 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

0800ce54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800ce54:	b538      	push	{r3, r4, r5, lr}
 800ce56:	2300      	movs	r3, #0
 800ce58:	2501      	movs	r5, #1
 800ce5a:	4604      	mov	r4, r0
 800ce5c:	8083      	strh	r3, [r0, #4]
 800ce5e:	80c3      	strh	r3, [r0, #6]
 800ce60:	8103      	strh	r3, [r0, #8]
 800ce62:	8143      	strh	r3, [r0, #10]
 800ce64:	8183      	strh	r3, [r0, #12]
 800ce66:	81c3      	strh	r3, [r0, #14]
 800ce68:	8203      	strh	r3, [r0, #16]
 800ce6a:	8243      	strh	r3, [r0, #18]
 800ce6c:	61c3      	str	r3, [r0, #28]
 800ce6e:	8403      	strh	r3, [r0, #32]
 800ce70:	8443      	strh	r3, [r0, #34]	; 0x22
 800ce72:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800ce76:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800ce7a:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ce7e:	4b07      	ldr	r3, [pc, #28]	; (800ce9c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800ce80:	6003      	str	r3, [r0, #0]
 800ce82:	880b      	ldrh	r3, [r1, #0]
 800ce84:	84c3      	strh	r3, [r0, #38]	; 0x26
 800ce86:	23ff      	movs	r3, #255	; 0xff
 800ce88:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800ce8c:	f000 fe7e 	bl	800db8c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ce90:	4b03      	ldr	r3, [pc, #12]	; (800cea0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800ce92:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800ce96:	4620      	mov	r0, r4
 800ce98:	6023      	str	r3, [r4, #0]
 800ce9a:	bd38      	pop	{r3, r4, r5, pc}
 800ce9c:	08023860 	.word	0x08023860
 800cea0:	0802368c 	.word	0x0802368c

0800cea4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800cea4:	4603      	mov	r3, r0
 800cea6:	3026      	adds	r0, #38	; 0x26
 800cea8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800ceac:	b90b      	cbnz	r3, 800ceb2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800ceae:	f004 bc21 	b.w	80116f4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800ceb2:	f004 bc2f 	b.w	8011714 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800ceb8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800ceb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cebc:	4604      	mov	r4, r0
 800cebe:	b0b3      	sub	sp, #204	; 0xcc
 800cec0:	469b      	mov	fp, r3
 800cec2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800cec6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ceca:	2500      	movs	r5, #0
 800cecc:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800ced0:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 800ced4:	ab11      	add	r3, sp, #68	; 0x44
 800ced6:	9206      	str	r2, [sp, #24]
 800ced8:	4618      	mov	r0, r3
 800ceda:	9511      	str	r5, [sp, #68]	; 0x44
 800cedc:	9307      	str	r3, [sp, #28]
 800cede:	ad13      	add	r5, sp, #76	; 0x4c
 800cee0:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800cee4:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800cee8:	f7fd fe18 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800ceec:	9b07      	ldr	r3, [sp, #28]
 800ceee:	e893 0003 	ldmia.w	r3, {r0, r1}
 800cef2:	e885 0003 	stmia.w	r5, {r0, r1}
 800cef6:	6821      	ldr	r1, [r4, #0]
 800cef8:	4620      	mov	r0, r4
 800cefa:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800cefc:	4629      	mov	r1, r5
 800cefe:	47b0      	blx	r6
 800cf00:	4621      	mov	r1, r4
 800cf02:	a815      	add	r0, sp, #84	; 0x54
 800cf04:	1d26      	adds	r6, r4, #4
 800cf06:	f004 fb51 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cf0a:	a815      	add	r0, sp, #84	; 0x54
 800cf0c:	f003 f886 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800cf10:	9b07      	ldr	r3, [sp, #28]
 800cf12:	4631      	mov	r1, r6
 800cf14:	4618      	mov	r0, r3
 800cf16:	f003 f8c5 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800cf1a:	4628      	mov	r0, r5
 800cf1c:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800cf20:	f003 f87c 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800cf24:	4628      	mov	r0, r5
 800cf26:	f006 f8ed 	bl	8013104 <_ZNK8touchgfx6Bitmap7getDataEv>
 800cf2a:	9007      	str	r0, [sp, #28]
 800cf2c:	2800      	cmp	r0, #0
 800cf2e:	f000 80ce 	beq.w	800d0ce <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 800cf32:	f8db 200c 	ldr.w	r2, [fp, #12]
 800cf36:	a809      	add	r0, sp, #36	; 0x24
 800cf38:	f8db 1000 	ldr.w	r1, [fp]
 800cf3c:	920c      	str	r2, [sp, #48]	; 0x30
 800cf3e:	f8da 2000 	ldr.w	r2, [sl]
 800cf42:	9109      	str	r1, [sp, #36]	; 0x24
 800cf44:	920d      	str	r2, [sp, #52]	; 0x34
 800cf46:	f8da 2004 	ldr.w	r2, [sl, #4]
 800cf4a:	f8db 1004 	ldr.w	r1, [fp, #4]
 800cf4e:	920e      	str	r2, [sp, #56]	; 0x38
 800cf50:	f8da 2008 	ldr.w	r2, [sl, #8]
 800cf54:	910a      	str	r1, [sp, #40]	; 0x28
 800cf56:	920f      	str	r2, [sp, #60]	; 0x3c
 800cf58:	f8db 1008 	ldr.w	r1, [fp, #8]
 800cf5c:	f8da 200c 	ldr.w	r2, [sl, #12]
 800cf60:	910b      	str	r1, [sp, #44]	; 0x2c
 800cf62:	a90d      	add	r1, sp, #52	; 0x34
 800cf64:	9210      	str	r2, [sp, #64]	; 0x40
 800cf66:	4632      	mov	r2, r6
 800cf68:	f003 f880 	bl	801006c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cf6c:	4632      	mov	r2, r6
 800cf6e:	a90e      	add	r1, sp, #56	; 0x38
 800cf70:	a80a      	add	r0, sp, #40	; 0x28
 800cf72:	f003 f87b 	bl	801006c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cf76:	4632      	mov	r2, r6
 800cf78:	a90f      	add	r1, sp, #60	; 0x3c
 800cf7a:	a80b      	add	r0, sp, #44	; 0x2c
 800cf7c:	f003 f876 	bl	801006c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cf80:	4632      	mov	r2, r6
 800cf82:	a910      	add	r1, sp, #64	; 0x40
 800cf84:	a80c      	add	r0, sp, #48	; 0x30
 800cf86:	f003 f871 	bl	801006c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cf8a:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800cf8e:	ed97 3a00 	vldr	s6, [r7]
 800cf92:	eef0 6a67 	vmov.f32	s13, s15
 800cf96:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800cf9a:	edd7 4a01 	vldr	s9, [r7, #4]
 800cf9e:	eeb0 7a67 	vmov.f32	s14, s15
 800cfa2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800cfa6:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800cfaa:	ed99 2a00 	vldr	s4, [r9]
 800cfae:	eeb0 6a67 	vmov.f32	s12, s15
 800cfb2:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800cfb6:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800cfba:	edd8 2a00 	vldr	s5, [r8]
 800cfbe:	edd9 3a01 	vldr	s7, [r9, #4]
 800cfc2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800cfc6:	ed98 4a01 	vldr	s8, [r8, #4]
 800cfca:	ed99 5a02 	vldr	s10, [r9, #8]
 800cfce:	edd8 5a02 	vldr	s11, [r8, #8]
 800cfd2:	ee16 6a10 	vmov	r6, s12
 800cfd6:	eeb0 6a67 	vmov.f32	s12, s15
 800cfda:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800cfde:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800cfe2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800cfe6:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800cfea:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800cfee:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 800cff2:	ee16 0a10 	vmov	r0, s12
 800cff6:	eeb0 6a67 	vmov.f32	s12, s15
 800cffa:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800cffe:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 800d002:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d006:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 800d00a:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800d00e:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 800d012:	ee16 1a10 	vmov	r1, s12
 800d016:	eeb0 6a67 	vmov.f32	s12, s15
 800d01a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800d01e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 800d022:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d026:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 800d02a:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800d02e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800d032:	68ff      	ldr	r7, [r7, #12]
 800d034:	ee16 2a10 	vmov	r2, s12
 800d038:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800d03c:	9624      	str	r6, [sp, #144]	; 0x90
 800d03e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d042:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800d046:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800d04a:	4628      	mov	r0, r5
 800d04c:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 800d050:	9b06      	ldr	r3, [sp, #24]
 800d052:	922d      	str	r2, [sp, #180]	; 0xb4
 800d054:	4a1f      	ldr	r2, [pc, #124]	; (800d0d4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 800d056:	9317      	str	r3, [sp, #92]	; 0x5c
 800d058:	8812      	ldrh	r2, [r2, #0]
 800d05a:	9b07      	ldr	r3, [sp, #28]
 800d05c:	9218      	str	r2, [sp, #96]	; 0x60
 800d05e:	9319      	str	r3, [sp, #100]	; 0x64
 800d060:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 800d064:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800d068:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800d06c:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800d070:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800d074:	9731      	str	r7, [sp, #196]	; 0xc4
 800d076:	f006 f875 	bl	8013164 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800d07a:	901a      	str	r0, [sp, #104]	; 0x68
 800d07c:	4628      	mov	r0, r5
 800d07e:	f005 ff55 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d082:	901b      	str	r0, [sp, #108]	; 0x6c
 800d084:	4628      	mov	r0, r5
 800d086:	f005 ff85 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d08a:	901c      	str	r0, [sp, #112]	; 0x70
 800d08c:	4628      	mov	r0, r5
 800d08e:	f005 ff4d 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d092:	4b11      	ldr	r3, [pc, #68]	; (800d0d8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800d094:	901d      	str	r0, [sp, #116]	; 0x74
 800d096:	681b      	ldr	r3, [r3, #0]
 800d098:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800d09c:	b10a      	cbz	r2, 800d0a2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800d09e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800d0a0:	b905      	cbnz	r5, 800d0a4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 800d0a2:	689d      	ldr	r5, [r3, #8]
 800d0a4:	682b      	ldr	r3, [r5, #0]
 800d0a6:	4620      	mov	r0, r4
 800d0a8:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800d0aa:	f7ff fefb 	bl	800cea4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800d0ae:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d0b2:	aa1e      	add	r2, sp, #120	; 0x78
 800d0b4:	a917      	add	r1, sp, #92	; 0x5c
 800d0b6:	9304      	str	r3, [sp, #16]
 800d0b8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800d0bc:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800d0c0:	ab13      	add	r3, sp, #76	; 0x4c
 800d0c2:	4628      	mov	r0, r5
 800d0c4:	9301      	str	r3, [sp, #4]
 800d0c6:	ab15      	add	r3, sp, #84	; 0x54
 800d0c8:	9300      	str	r3, [sp, #0]
 800d0ca:	ab19      	add	r3, sp, #100	; 0x64
 800d0cc:	47b0      	blx	r6
 800d0ce:	b033      	add	sp, #204	; 0xcc
 800d0d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0d4:	2400e41e 	.word	0x2400e41e
 800d0d8:	2400e424 	.word	0x2400e424

0800d0dc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800d0dc:	b570      	push	{r4, r5, r6, lr}
 800d0de:	ed2d 8b04 	vpush	{d8-d9}
 800d0e2:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800d0e6:	b098      	sub	sp, #96	; 0x60
 800d0e8:	4604      	mov	r4, r0
 800d0ea:	460e      	mov	r6, r1
 800d0ec:	2b00      	cmp	r3, #0
 800d0ee:	d065      	beq.n	800d1bc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800d0f0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d0f4:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800d0f8:	ed9f 8a37 	vldr	s16, [pc, #220]	; 800d1d8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800d0fc:	ee09 3a10 	vmov	s18, r3
 800d100:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d104:	4628      	mov	r0, r5
 800d106:	ee08 3a90 	vmov	s17, r3
 800d10a:	4b34      	ldr	r3, [pc, #208]	; (800d1dc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800d10c:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800d110:	930c      	str	r3, [sp, #48]	; 0x30
 800d112:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800d116:	930d      	str	r3, [sp, #52]	; 0x34
 800d118:	930e      	str	r3, [sp, #56]	; 0x38
 800d11a:	ee39 9a08 	vadd.f32	s18, s18, s16
 800d11e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d120:	f005 ff04 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d124:	ee07 0a90 	vmov	s15, r0
 800d128:	4628      	mov	r0, r5
 800d12a:	ee78 8a88 	vadd.f32	s17, s17, s16
 800d12e:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800d132:	f005 ff2f 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d136:	4b2a      	ldr	r3, [pc, #168]	; (800d1e0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800d138:	ee07 0a90 	vmov	s15, r0
 800d13c:	781b      	ldrb	r3, [r3, #0]
 800d13e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800d142:	eef0 7a48 	vmov.f32	s15, s16
 800d146:	2b01      	cmp	r3, #1
 800d148:	d13c      	bne.n	800d1c4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800d14a:	eef0 6a69 	vmov.f32	s13, s19
 800d14e:	ee19 3a90 	vmov	r3, s19
 800d152:	eeb0 6a47 	vmov.f32	s12, s14
 800d156:	eef0 5a47 	vmov.f32	s11, s14
 800d15a:	eef0 9a48 	vmov.f32	s19, s16
 800d15e:	eeb0 7a48 	vmov.f32	s14, s16
 800d162:	9314      	str	r3, [sp, #80]	; 0x50
 800d164:	ab14      	add	r3, sp, #80	; 0x50
 800d166:	2200      	movs	r2, #0
 800d168:	4631      	mov	r1, r6
 800d16a:	9303      	str	r3, [sp, #12]
 800d16c:	ab10      	add	r3, sp, #64	; 0x40
 800d16e:	4620      	mov	r0, r4
 800d170:	edcd 7a04 	vstr	s15, [sp, #16]
 800d174:	9302      	str	r3, [sp, #8]
 800d176:	ab0c      	add	r3, sp, #48	; 0x30
 800d178:	ed8d 9a05 	vstr	s18, [sp, #20]
 800d17c:	9301      	str	r3, [sp, #4]
 800d17e:	ab08      	add	r3, sp, #32
 800d180:	ed8d 9a06 	vstr	s18, [sp, #24]
 800d184:	9300      	str	r3, [sp, #0]
 800d186:	ab04      	add	r3, sp, #16
 800d188:	edcd 7a07 	vstr	s15, [sp, #28]
 800d18c:	edcd 7a08 	vstr	s15, [sp, #32]
 800d190:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800d194:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800d198:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800d19c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800d1a0:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800d1a4:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800d1a8:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800d1ac:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800d1b0:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800d1b4:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800d1b8:	f7ff fe7e 	bl	800ceb8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800d1bc:	b018      	add	sp, #96	; 0x60
 800d1be:	ecbd 8b04 	vpop	{d8-d9}
 800d1c2:	bd70      	pop	{r4, r5, r6, pc}
 800d1c4:	eef0 6a47 	vmov.f32	s13, s14
 800d1c8:	ee18 3a10 	vmov	r3, s16
 800d1cc:	eef0 5a69 	vmov.f32	s11, s19
 800d1d0:	eeb0 6a48 	vmov.f32	s12, s16
 800d1d4:	e7c5      	b.n	800d162 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800d1d6:	bf00      	nop
 800d1d8:	00000000 	.word	0x00000000
 800d1dc:	42c80000 	.word	0x42c80000
 800d1e0:	2400e41c 	.word	0x2400e41c

0800d1e4 <_ZN8touchgfx8TextArea8setWidthEs>:
 800d1e4:	b530      	push	{r4, r5, lr}
 800d1e6:	b085      	sub	sp, #20
 800d1e8:	6803      	ldr	r3, [r0, #0]
 800d1ea:	4604      	mov	r4, r0
 800d1ec:	8101      	strh	r1, [r0, #8]
 800d1ee:	466d      	mov	r5, sp
 800d1f0:	4601      	mov	r1, r0
 800d1f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d1f6:	343c      	adds	r4, #60	; 0x3c
 800d1f8:	4628      	mov	r0, r5
 800d1fa:	4798      	blx	r3
 800d1fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d200:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d204:	b005      	add	sp, #20
 800d206:	bd30      	pop	{r4, r5, pc}

0800d208 <_ZN8touchgfx8TextArea9setHeightEs>:
 800d208:	b530      	push	{r4, r5, lr}
 800d20a:	b085      	sub	sp, #20
 800d20c:	6803      	ldr	r3, [r0, #0]
 800d20e:	4604      	mov	r4, r0
 800d210:	8141      	strh	r1, [r0, #10]
 800d212:	466d      	mov	r5, sp
 800d214:	4601      	mov	r1, r0
 800d216:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d21a:	343c      	adds	r4, #60	; 0x3c
 800d21c:	4628      	mov	r0, r5
 800d21e:	4798      	blx	r3
 800d220:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d224:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d228:	b005      	add	sp, #20
 800d22a:	bd30      	pop	{r4, r5, pc}

0800d22c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800d22c:	2200      	movs	r2, #0
 800d22e:	8002      	strh	r2, [r0, #0]
 800d230:	8042      	strh	r2, [r0, #2]
 800d232:	8082      	strh	r2, [r0, #4]
 800d234:	80c2      	strh	r2, [r0, #6]
 800d236:	4770      	bx	lr

0800d238 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800d238:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800d23c:	4770      	bx	lr
	...

0800d240 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800d240:	b570      	push	{r4, r5, r6, lr}
 800d242:	6803      	ldr	r3, [r0, #0]
 800d244:	4604      	mov	r4, r0
 800d246:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d248:	460d      	mov	r5, r1
 800d24a:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800d24c:	4b08      	ldr	r3, [pc, #32]	; (800d270 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 800d24e:	681b      	ldr	r3, [r3, #0]
 800d250:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d254:	4b07      	ldr	r3, [pc, #28]	; (800d274 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 800d256:	681b      	ldr	r3, [r3, #0]
 800d258:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800d25c:	6803      	ldr	r3, [r0, #0]
 800d25e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d260:	4798      	blx	r3
 800d262:	1a29      	subs	r1, r5, r0
 800d264:	4633      	mov	r3, r6
 800d266:	4620      	mov	r0, r4
 800d268:	b209      	sxth	r1, r1
 800d26a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d26e:	4718      	bx	r3
 800d270:	2400e47c 	.word	0x2400e47c
 800d274:	2400e484 	.word	0x2400e484

0800d278 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800d278:	b570      	push	{r4, r5, r6, lr}
 800d27a:	6803      	ldr	r3, [r0, #0]
 800d27c:	4604      	mov	r4, r0
 800d27e:	4615      	mov	r5, r2
 800d280:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d282:	4798      	blx	r3
 800d284:	6823      	ldr	r3, [r4, #0]
 800d286:	4629      	mov	r1, r5
 800d288:	4620      	mov	r0, r4
 800d28a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d28c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d290:	4718      	bx	r3

0800d292 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d292:	2000      	movs	r0, #0
 800d294:	4770      	bx	lr

0800d296 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800d296:	2000      	movs	r0, #0
 800d298:	4770      	bx	lr
	...

0800d29c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d29c:	4b07      	ldr	r3, [pc, #28]	; (800d2bc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d29e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d2a0:	881b      	ldrh	r3, [r3, #0]
 800d2a2:	4293      	cmp	r3, r2
 800d2a4:	bf81      	itttt	hi
 800d2a6:	4b06      	ldrhi	r3, [pc, #24]	; (800d2c0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d2a8:	681b      	ldrhi	r3, [r3, #0]
 800d2aa:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d2ae:	7858      	ldrbhi	r0, [r3, #1]
 800d2b0:	bf8c      	ite	hi
 800d2b2:	f000 0003 	andhi.w	r0, r0, #3
 800d2b6:	2000      	movls	r0, #0
 800d2b8:	4770      	bx	lr
 800d2ba:	bf00      	nop
 800d2bc:	2400e480 	.word	0x2400e480
 800d2c0:	2400e47c 	.word	0x2400e47c

0800d2c4 <_ZN8touchgfx8TextAreaD1Ev>:
 800d2c4:	4770      	bx	lr
	...

0800d2c8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d2c8:	4b11      	ldr	r3, [pc, #68]	; (800d310 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d2ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2ce:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d2d0:	4604      	mov	r4, r0
 800d2d2:	881b      	ldrh	r3, [r3, #0]
 800d2d4:	428b      	cmp	r3, r1
 800d2d6:	d918      	bls.n	800d30a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d2d8:	6803      	ldr	r3, [r0, #0]
 800d2da:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800d2dc:	4b0d      	ldr	r3, [pc, #52]	; (800d314 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d2de:	6818      	ldr	r0, [r3, #0]
 800d2e0:	f7f6 f96a 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d2e4:	6823      	ldr	r3, [r4, #0]
 800d2e6:	4606      	mov	r6, r0
 800d2e8:	4620      	mov	r0, r4
 800d2ea:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d2ec:	4798      	blx	r3
 800d2ee:	6823      	ldr	r3, [r4, #0]
 800d2f0:	4607      	mov	r7, r0
 800d2f2:	4620      	mov	r0, r4
 800d2f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d2f8:	4798      	blx	r3
 800d2fa:	463a      	mov	r2, r7
 800d2fc:	4603      	mov	r3, r0
 800d2fe:	4631      	mov	r1, r6
 800d300:	4620      	mov	r0, r4
 800d302:	46ac      	mov	ip, r5
 800d304:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d308:	4760      	bx	ip
 800d30a:	2000      	movs	r0, #0
 800d30c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d310:	2400e480 	.word	0x2400e480
 800d314:	2400e488 	.word	0x2400e488

0800d318 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d318:	4b18      	ldr	r3, [pc, #96]	; (800d37c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d31a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d31e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d320:	4604      	mov	r4, r0
 800d322:	881b      	ldrh	r3, [r3, #0]
 800d324:	428b      	cmp	r3, r1
 800d326:	d926      	bls.n	800d376 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d328:	4b15      	ldr	r3, [pc, #84]	; (800d380 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d32a:	681b      	ldr	r3, [r3, #0]
 800d32c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d330:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d334:	4b13      	ldr	r3, [pc, #76]	; (800d384 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d336:	7855      	ldrb	r5, [r2, #1]
 800d338:	681b      	ldr	r3, [r3, #0]
 800d33a:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d33e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d342:	6833      	ldr	r3, [r6, #0]
 800d344:	69df      	ldr	r7, [r3, #28]
 800d346:	4b10      	ldr	r3, [pc, #64]	; (800d388 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d348:	6818      	ldr	r0, [r3, #0]
 800d34a:	f7f6 f935 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d34e:	6823      	ldr	r3, [r4, #0]
 800d350:	4680      	mov	r8, r0
 800d352:	4620      	mov	r0, r4
 800d354:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d356:	4798      	blx	r3
 800d358:	6823      	ldr	r3, [r4, #0]
 800d35a:	4681      	mov	r9, r0
 800d35c:	4620      	mov	r0, r4
 800d35e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d362:	4798      	blx	r3
 800d364:	464b      	mov	r3, r9
 800d366:	9000      	str	r0, [sp, #0]
 800d368:	4642      	mov	r2, r8
 800d36a:	4629      	mov	r1, r5
 800d36c:	4630      	mov	r0, r6
 800d36e:	47b8      	blx	r7
 800d370:	b003      	add	sp, #12
 800d372:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d376:	2000      	movs	r0, #0
 800d378:	e7fa      	b.n	800d370 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d37a:	bf00      	nop
 800d37c:	2400e480 	.word	0x2400e480
 800d380:	2400e47c 	.word	0x2400e47c
 800d384:	2400e484 	.word	0x2400e484
 800d388:	2400e488 	.word	0x2400e488

0800d38c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d38c:	b40e      	push	{r1, r2, r3}
 800d38e:	4b30      	ldr	r3, [pc, #192]	; (800d450 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d390:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d394:	881a      	ldrh	r2, [r3, #0]
 800d396:	b09d      	sub	sp, #116	; 0x74
 800d398:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d39a:	4604      	mov	r4, r0
 800d39c:	429a      	cmp	r2, r3
 800d39e:	d954      	bls.n	800d44a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d3a0:	aa26      	add	r2, sp, #152	; 0x98
 800d3a2:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800d454 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d3a6:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800d458 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d3aa:	9202      	str	r2, [sp, #8]
 800d3ac:	f8d9 2000 	ldr.w	r2, [r9]
 800d3b0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d3b4:	f8d8 3000 	ldr.w	r3, [r8]
 800d3b8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d3bc:	682b      	ldr	r3, [r5, #0]
 800d3be:	4628      	mov	r0, r5
 800d3c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d3c2:	4798      	blx	r3
 800d3c4:	4606      	mov	r6, r0
 800d3c6:	b207      	sxth	r7, r0
 800d3c8:	a803      	add	r0, sp, #12
 800d3ca:	f004 fd9d 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 800d3ce:	682b      	ldr	r3, [r5, #0]
 800d3d0:	4628      	mov	r0, r5
 800d3d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d3d4:	4798      	blx	r3
 800d3d6:	682b      	ldr	r3, [r5, #0]
 800d3d8:	4682      	mov	sl, r0
 800d3da:	4628      	mov	r0, r5
 800d3dc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d3de:	4798      	blx	r3
 800d3e0:	4653      	mov	r3, sl
 800d3e2:	9000      	str	r0, [sp, #0]
 800d3e4:	a803      	add	r0, sp, #12
 800d3e6:	9a02      	ldr	r2, [sp, #8]
 800d3e8:	9925      	ldr	r1, [sp, #148]	; 0x94
 800d3ea:	f004 fde8 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d3ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d3f0:	f8d9 3000 	ldr.w	r3, [r9]
 800d3f4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800d3f8:	8925      	ldrh	r5, [r4, #8]
 800d3fa:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d3fe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d402:	eba5 050c 	sub.w	r5, r5, ip
 800d406:	784a      	ldrb	r2, [r1, #1]
 800d408:	f8d8 3000 	ldr.w	r3, [r8]
 800d40c:	b22d      	sxth	r5, r5
 800d40e:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800d412:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d416:	9500      	str	r5, [sp, #0]
 800d418:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d41c:	a803      	add	r0, sp, #12
 800d41e:	f002 fb03 	bl	800fa28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d422:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800d426:	b203      	sxth	r3, r0
 800d428:	18b9      	adds	r1, r7, r2
 800d42a:	2900      	cmp	r1, #0
 800d42c:	dd0b      	ble.n	800d446 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d42e:	3b01      	subs	r3, #1
 800d430:	fb13 f302 	smulbb	r3, r3, r2
 800d434:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d438:	b21f      	sxth	r7, r3
 800d43a:	4638      	mov	r0, r7
 800d43c:	b01d      	add	sp, #116	; 0x74
 800d43e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d442:	b003      	add	sp, #12
 800d444:	4770      	bx	lr
 800d446:	2b00      	cmp	r3, #0
 800d448:	dcf7      	bgt.n	800d43a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d44a:	2700      	movs	r7, #0
 800d44c:	e7f5      	b.n	800d43a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d44e:	bf00      	nop
 800d450:	2400e480 	.word	0x2400e480
 800d454:	2400e47c 	.word	0x2400e47c
 800d458:	2400e484 	.word	0x2400e484

0800d45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d45c:	4bbd      	ldr	r3, [pc, #756]	; (800d754 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d45e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d462:	460c      	mov	r4, r1
 800d464:	881b      	ldrh	r3, [r3, #0]
 800d466:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800d468:	b0a9      	sub	sp, #164	; 0xa4
 800d46a:	4680      	mov	r8, r0
 800d46c:	428b      	cmp	r3, r1
 800d46e:	d809      	bhi.n	800d484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d470:	2300      	movs	r3, #0
 800d472:	f04f 32ff 	mov.w	r2, #4294967295
 800d476:	6083      	str	r3, [r0, #8]
 800d478:	e9c0 3200 	strd	r3, r2, [r0]
 800d47c:	4640      	mov	r0, r8
 800d47e:	b029      	add	sp, #164	; 0xa4
 800d480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d484:	4eb4      	ldr	r6, [pc, #720]	; (800d758 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800d486:	6833      	ldr	r3, [r6, #0]
 800d488:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d48c:	4bb3      	ldr	r3, [pc, #716]	; (800d75c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800d48e:	681b      	ldr	r3, [r3, #0]
 800d490:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d494:	4bb2      	ldr	r3, [pc, #712]	; (800d760 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d496:	6818      	ldr	r0, [r3, #0]
 800d498:	f7f6 f88e 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d49c:	682b      	ldr	r3, [r5, #0]
 800d49e:	4681      	mov	r9, r0
 800d4a0:	4628      	mov	r0, r5
 800d4a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d4a4:	4798      	blx	r3
 800d4a6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800d4a8:	b203      	sxth	r3, r0
 800d4aa:	4682      	mov	sl, r0
 800d4ac:	4407      	add	r7, r0
 800d4ae:	a80f      	add	r0, sp, #60	; 0x3c
 800d4b0:	9304      	str	r3, [sp, #16]
 800d4b2:	b2bb      	uxth	r3, r7
 800d4b4:	9303      	str	r3, [sp, #12]
 800d4b6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800d4ba:	2b00      	cmp	r3, #0
 800d4bc:	f040 80a5 	bne.w	800d60a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800d4c0:	f004 fd22 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 800d4c4:	682b      	ldr	r3, [r5, #0]
 800d4c6:	4628      	mov	r0, r5
 800d4c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d4ca:	4798      	blx	r3
 800d4cc:	682b      	ldr	r3, [r5, #0]
 800d4ce:	4606      	mov	r6, r0
 800d4d0:	4628      	mov	r0, r5
 800d4d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d4d4:	4798      	blx	r3
 800d4d6:	6823      	ldr	r3, [r4, #0]
 800d4d8:	4607      	mov	r7, r0
 800d4da:	4620      	mov	r0, r4
 800d4dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d4de:	4798      	blx	r3
 800d4e0:	6823      	ldr	r3, [r4, #0]
 800d4e2:	4683      	mov	fp, r0
 800d4e4:	4620      	mov	r0, r4
 800d4e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d4ea:	4798      	blx	r3
 800d4ec:	463b      	mov	r3, r7
 800d4ee:	4649      	mov	r1, r9
 800d4f0:	4632      	mov	r2, r6
 800d4f2:	2600      	movs	r6, #0
 800d4f4:	e9cd b000 	strd	fp, r0, [sp]
 800d4f8:	a80f      	add	r0, sp, #60	; 0x3c
 800d4fa:	4637      	mov	r7, r6
 800d4fc:	f004 fd74 	bl	8011fe8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d500:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d504:	f8df b250 	ldr.w	fp, [pc, #592]	; 800d758 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d508:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d50c:	bf0c      	ite	eq
 800d50e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800d512:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800d516:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d518:	4629      	mov	r1, r5
 800d51a:	f8db 3000 	ldr.w	r3, [fp]
 800d51e:	a80f      	add	r0, sp, #60	; 0x3c
 800d520:	3701      	adds	r7, #1
 800d522:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d526:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d52a:	b2bf      	uxth	r7, r7
 800d52c:	785b      	ldrb	r3, [r3, #1]
 800d52e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d532:	f001 ff94 	bl	800f45e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d536:	9b03      	ldr	r3, [sp, #12]
 800d538:	4286      	cmp	r6, r0
 800d53a:	eba9 0903 	sub.w	r9, r9, r3
 800d53e:	bfb8      	it	lt
 800d540:	4606      	movlt	r6, r0
 800d542:	a80f      	add	r0, sp, #60	; 0x3c
 800d544:	fa0f f989 	sxth.w	r9, r9
 800d548:	b236      	sxth	r6, r6
 800d54a:	f004 fd04 	bl	8011f56 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d54e:	b918      	cbnz	r0, 800d558 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d550:	7a2b      	ldrb	r3, [r5, #8]
 800d552:	444b      	add	r3, r9
 800d554:	2b00      	cmp	r3, #0
 800d556:	dcde      	bgt.n	800d516 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800d558:	9b03      	ldr	r3, [sp, #12]
 800d55a:	4620      	mov	r0, r4
 800d55c:	9a04      	ldr	r2, [sp, #16]
 800d55e:	fb13 f707 	smulbb	r7, r3, r7
 800d562:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d564:	f895 9009 	ldrb.w	r9, [r5, #9]
 800d568:	1aff      	subs	r7, r7, r3
 800d56a:	b2bf      	uxth	r7, r7
 800d56c:	b23b      	sxth	r3, r7
 800d56e:	429a      	cmp	r2, r3
 800d570:	bfa8      	it	ge
 800d572:	4657      	movge	r7, sl
 800d574:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d578:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d57c:	6823      	ldr	r3, [r4, #0]
 800d57e:	444f      	add	r7, r9
 800d580:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d582:	bf08      	it	eq
 800d584:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800d588:	fa1f f987 	uxth.w	r9, r7
 800d58c:	bf18      	it	ne
 800d58e:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800d592:	4798      	blx	r3
 800d594:	2801      	cmp	r0, #1
 800d596:	fa0f f789 	sxth.w	r7, r9
 800d59a:	b2b3      	uxth	r3, r6
 800d59c:	f000 80e2 	beq.w	800d764 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800d5a0:	2802      	cmp	r0, #2
 800d5a2:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800d5a6:	f000 80e3 	beq.w	800d770 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800d5aa:	7aea      	ldrb	r2, [r5, #11]
 800d5ac:	b236      	sxth	r6, r6
 800d5ae:	7b2d      	ldrb	r5, [r5, #12]
 800d5b0:	1ab6      	subs	r6, r6, r2
 800d5b2:	442a      	add	r2, r5
 800d5b4:	fa1f fa86 	uxth.w	sl, r6
 800d5b8:	4413      	add	r3, r2
 800d5ba:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800d5be:	fa0f fb8a 	sxth.w	fp, sl
 800d5c2:	b29b      	uxth	r3, r3
 800d5c4:	2a02      	cmp	r2, #2
 800d5c6:	b21e      	sxth	r6, r3
 800d5c8:	f000 80d6 	beq.w	800d778 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800d5cc:	2a03      	cmp	r2, #3
 800d5ce:	f000 80de 	beq.w	800d78e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800d5d2:	2a01      	cmp	r2, #1
 800d5d4:	f040 80e6 	bne.w	800d7a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800d5d8:	8925      	ldrh	r5, [r4, #8]
 800d5da:	4633      	mov	r3, r6
 800d5dc:	463e      	mov	r6, r7
 800d5de:	eba5 0909 	sub.w	r9, r5, r9
 800d5e2:	461f      	mov	r7, r3
 800d5e4:	465d      	mov	r5, fp
 800d5e6:	fa0f fb89 	sxth.w	fp, r9
 800d5ea:	4b5d      	ldr	r3, [pc, #372]	; (800d760 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d5ec:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d5ee:	6818      	ldr	r0, [r3, #0]
 800d5f0:	f7f5 ffe2 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d5f4:	f8a8 b000 	strh.w	fp, [r8]
 800d5f8:	f8a8 5002 	strh.w	r5, [r8, #2]
 800d5fc:	f8a8 6004 	strh.w	r6, [r8, #4]
 800d600:	f8a8 7006 	strh.w	r7, [r8, #6]
 800d604:	f8c8 0008 	str.w	r0, [r8, #8]
 800d608:	e738      	b.n	800d47c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800d60a:	f004 fc7d 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 800d60e:	682b      	ldr	r3, [r5, #0]
 800d610:	4628      	mov	r0, r5
 800d612:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d614:	4798      	blx	r3
 800d616:	682b      	ldr	r3, [r5, #0]
 800d618:	4607      	mov	r7, r0
 800d61a:	4628      	mov	r0, r5
 800d61c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d61e:	4798      	blx	r3
 800d620:	6823      	ldr	r3, [r4, #0]
 800d622:	4683      	mov	fp, r0
 800d624:	4620      	mov	r0, r4
 800d626:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d628:	4798      	blx	r3
 800d62a:	6822      	ldr	r2, [r4, #0]
 800d62c:	9005      	str	r0, [sp, #20]
 800d62e:	4620      	mov	r0, r4
 800d630:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800d634:	4790      	blx	r2
 800d636:	9b05      	ldr	r3, [sp, #20]
 800d638:	463a      	mov	r2, r7
 800d63a:	4649      	mov	r1, r9
 800d63c:	9001      	str	r0, [sp, #4]
 800d63e:	a80f      	add	r0, sp, #60	; 0x3c
 800d640:	9300      	str	r3, [sp, #0]
 800d642:	465b      	mov	r3, fp
 800d644:	f004 fcd0 	bl	8011fe8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d648:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d64c:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800d650:	af0f      	add	r7, sp, #60	; 0x3c
 800d652:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d656:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d65a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d65c:	bf0a      	itet	eq
 800d65e:	464a      	moveq	r2, r9
 800d660:	461a      	movne	r2, r3
 800d662:	4699      	moveq	r9, r3
 800d664:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800d668:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800d66c:	1ad2      	subs	r2, r2, r3
 800d66e:	6833      	ldr	r3, [r6, #0]
 800d670:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800d674:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d678:	7859      	ldrb	r1, [r3, #1]
 800d67a:	2300      	movs	r3, #0
 800d67c:	9707      	str	r7, [sp, #28]
 800d67e:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800d682:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d686:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d68a:	f88d 1020 	strb.w	r1, [sp, #32]
 800d68e:	9509      	str	r5, [sp, #36]	; 0x24
 800d690:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800d694:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800d698:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800d69c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d6a0:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800d6a4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800d6a8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800d6ac:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d6b0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d6b4:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800d6b8:	b350      	cbz	r0, 800d710 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d6ba:	682b      	ldr	r3, [r5, #0]
 800d6bc:	4628      	mov	r0, r5
 800d6be:	695b      	ldr	r3, [r3, #20]
 800d6c0:	4798      	blx	r3
 800d6c2:	4607      	mov	r7, r0
 800d6c4:	b320      	cbz	r0, 800d710 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d6c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d6c8:	4639      	mov	r1, r7
 800d6ca:	6803      	ldr	r3, [r0, #0]
 800d6cc:	68db      	ldr	r3, [r3, #12]
 800d6ce:	4798      	blx	r3
 800d6d0:	4606      	mov	r6, r0
 800d6d2:	b1e8      	cbz	r0, 800d710 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d6d4:	7b43      	ldrb	r3, [r0, #13]
 800d6d6:	7a82      	ldrb	r2, [r0, #10]
 800d6d8:	005b      	lsls	r3, r3, #1
 800d6da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d6de:	4313      	orrs	r3, r2
 800d6e0:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d6e4:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800d6e8:	2b06      	cmp	r3, #6
 800d6ea:	d111      	bne.n	800d710 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d6ec:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d6ee:	4632      	mov	r2, r6
 800d6f0:	4639      	mov	r1, r7
 800d6f2:	6803      	ldr	r3, [r0, #0]
 800d6f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d6f6:	4798      	blx	r3
 800d6f8:	7b73      	ldrb	r3, [r6, #13]
 800d6fa:	005b      	lsls	r3, r3, #1
 800d6fc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d700:	7ab3      	ldrb	r3, [r6, #10]
 800d702:	4313      	orrs	r3, r2
 800d704:	4418      	add	r0, r3
 800d706:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d70a:	4418      	add	r0, r3
 800d70c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800d710:	2600      	movs	r6, #0
 800d712:	4637      	mov	r7, r6
 800d714:	a806      	add	r0, sp, #24
 800d716:	3701      	adds	r7, #1
 800d718:	f002 f883 	bl	800f822 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d71c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800d720:	9b03      	ldr	r3, [sp, #12]
 800d722:	b2bf      	uxth	r7, r7
 800d724:	4286      	cmp	r6, r0
 800d726:	eba9 0903 	sub.w	r9, r9, r3
 800d72a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d72e:	bfb8      	it	lt
 800d730:	4606      	movlt	r6, r0
 800d732:	fa0f f989 	sxth.w	r9, r9
 800d736:	b236      	sxth	r6, r6
 800d738:	2b00      	cmp	r3, #0
 800d73a:	f43f af0d 	beq.w	800d558 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d73e:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800d742:	2b00      	cmp	r3, #0
 800d744:	f47f af08 	bne.w	800d558 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d748:	7a2b      	ldrb	r3, [r5, #8]
 800d74a:	444b      	add	r3, r9
 800d74c:	2b00      	cmp	r3, #0
 800d74e:	dce1      	bgt.n	800d714 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800d750:	e702      	b.n	800d558 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d752:	bf00      	nop
 800d754:	2400e480 	.word	0x2400e480
 800d758:	2400e47c 	.word	0x2400e47c
 800d75c:	2400e484 	.word	0x2400e484
 800d760:	2400e488 	.word	0x2400e488
 800d764:	ebaa 0606 	sub.w	r6, sl, r6
 800d768:	2002      	movs	r0, #2
 800d76a:	fb96 f6f0 	sdiv	r6, r6, r0
 800d76e:	e71c      	b.n	800d5aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d770:	441e      	add	r6, r3
 800d772:	ebaa 0606 	sub.w	r6, sl, r6
 800d776:	e718      	b.n	800d5aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d778:	8925      	ldrh	r5, [r4, #8]
 800d77a:	1aed      	subs	r5, r5, r3
 800d77c:	eba5 050a 	sub.w	r5, r5, sl
 800d780:	fa0f fb85 	sxth.w	fp, r5
 800d784:	8965      	ldrh	r5, [r4, #10]
 800d786:	eba5 0509 	sub.w	r5, r5, r9
 800d78a:	b22d      	sxth	r5, r5
 800d78c:	e72d      	b.n	800d5ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800d78e:	8965      	ldrh	r5, [r4, #10]
 800d790:	f04f 0b00 	mov.w	fp, #0
 800d794:	1aed      	subs	r5, r5, r3
 800d796:	4633      	mov	r3, r6
 800d798:	463e      	mov	r6, r7
 800d79a:	eba5 050a 	sub.w	r5, r5, sl
 800d79e:	461f      	mov	r7, r3
 800d7a0:	b22d      	sxth	r5, r5
 800d7a2:	e722      	b.n	800d5ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800d7a4:	2500      	movs	r5, #0
 800d7a6:	e720      	b.n	800d5ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800d7a8 <_ZN8touchgfx8TextAreaD0Ev>:
 800d7a8:	b510      	push	{r4, lr}
 800d7aa:	4604      	mov	r4, r0
 800d7ac:	2148      	movs	r1, #72	; 0x48
 800d7ae:	f013 fb34 	bl	8020e1a <_ZdlPvj>
 800d7b2:	4620      	mov	r0, r4
 800d7b4:	bd10      	pop	{r4, pc}
	...

0800d7b8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800d7b8:	b513      	push	{r0, r1, r4, lr}
 800d7ba:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d7be:	4604      	mov	r4, r0
 800d7c0:	b1fb      	cbz	r3, 800d802 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d7c2:	4b16      	ldr	r3, [pc, #88]	; (800d81c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800d7c4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d7c6:	881b      	ldrh	r3, [r3, #0]
 800d7c8:	428b      	cmp	r3, r1
 800d7ca:	d91a      	bls.n	800d802 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d7cc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d7d0:	2b00      	cmp	r3, #0
 800d7d2:	dd16      	ble.n	800d802 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d7d4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d7d8:	2b00      	cmp	r3, #0
 800d7da:	dd12      	ble.n	800d802 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d7dc:	4b10      	ldr	r3, [pc, #64]	; (800d820 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800d7de:	6818      	ldr	r0, [r3, #0]
 800d7e0:	f7f5 feea 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7e4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d7e8:	6822      	ldr	r2, [r4, #0]
 800d7ea:	2b00      	cmp	r3, #0
 800d7ec:	db06      	blt.n	800d7fc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d7ee:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d7f2:	2b00      	cmp	r3, #0
 800d7f4:	db02      	blt.n	800d7fc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d7f6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d7f8:	4298      	cmp	r0, r3
 800d7fa:	d004      	beq.n	800d806 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800d7fc:	6953      	ldr	r3, [r2, #20]
 800d7fe:	4620      	mov	r0, r4
 800d800:	4798      	blx	r3
 800d802:	b002      	add	sp, #8
 800d804:	bd10      	pop	{r4, pc}
 800d806:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800d80a:	466b      	mov	r3, sp
 800d80c:	6912      	ldr	r2, [r2, #16]
 800d80e:	c903      	ldmia	r1, {r0, r1}
 800d810:	e883 0003 	stmia.w	r3, {r0, r1}
 800d814:	4619      	mov	r1, r3
 800d816:	4620      	mov	r0, r4
 800d818:	4790      	blx	r2
 800d81a:	e7f2      	b.n	800d802 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d81c:	2400e480 	.word	0x2400e480
 800d820:	2400e488 	.word	0x2400e488

0800d824 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d824:	4b45      	ldr	r3, [pc, #276]	; (800d93c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800d826:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d82a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d82c:	b08e      	sub	sp, #56	; 0x38
 800d82e:	881b      	ldrh	r3, [r3, #0]
 800d830:	4604      	mov	r4, r0
 800d832:	4293      	cmp	r3, r2
 800d834:	d97e      	bls.n	800d934 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d836:	6808      	ldr	r0, [r1, #0]
 800d838:	ab05      	add	r3, sp, #20
 800d83a:	6849      	ldr	r1, [r1, #4]
 800d83c:	4d40      	ldr	r5, [pc, #256]	; (800d940 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800d83e:	c303      	stmia	r3!, {r0, r1}
 800d840:	4611      	mov	r1, r2
 800d842:	6828      	ldr	r0, [r5, #0]
 800d844:	f7f5 feb8 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d848:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d84c:	2b00      	cmp	r3, #0
 800d84e:	db11      	blt.n	800d874 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d850:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d854:	2b00      	cmp	r3, #0
 800d856:	db0d      	blt.n	800d874 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d858:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d85a:	4298      	cmp	r0, r3
 800d85c:	d10a      	bne.n	800d874 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d85e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800d862:	ab09      	add	r3, sp, #36	; 0x24
 800d864:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d868:	e883 0003 	stmia.w	r3, {r0, r1}
 800d86c:	4619      	mov	r1, r3
 800d86e:	a805      	add	r0, sp, #20
 800d870:	f7fd f954 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800d874:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d878:	2b00      	cmp	r3, #0
 800d87a:	dd5b      	ble.n	800d934 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d87c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d880:	2b00      	cmp	r3, #0
 800d882:	dd57      	ble.n	800d934 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d884:	4f2f      	ldr	r7, [pc, #188]	; (800d944 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800d886:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d888:	683b      	ldr	r3, [r7, #0]
 800d88a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d88e:	4b2e      	ldr	r3, [pc, #184]	; (800d948 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800d890:	681b      	ldr	r3, [r3, #0]
 800d892:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800d896:	2e00      	cmp	r6, #0
 800d898:	d04c      	beq.n	800d934 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d89a:	6823      	ldr	r3, [r4, #0]
 800d89c:	4620      	mov	r0, r4
 800d89e:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800d8a2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d8a4:	4798      	blx	r3
 800d8a6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d8a8:	683b      	ldr	r3, [r7, #0]
 800d8aa:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800d8ae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d8b2:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800d8b6:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800d8ba:	785b      	ldrb	r3, [r3, #1]
 800d8bc:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800d8c0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d8c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d8c6:	9609      	str	r6, [sp, #36]	; 0x24
 800d8c8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d8cc:	4b1f      	ldr	r3, [pc, #124]	; (800d94c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800d8ce:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d8d2:	681b      	ldr	r3, [r3, #0]
 800d8d4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800d8d8:	910b      	str	r1, [sp, #44]	; 0x2c
 800d8da:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800d8de:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800d8e2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800d8e6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800d8ea:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800d8ee:	b10a      	cbz	r2, 800d8f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800d8f0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800d8f2:	b906      	cbnz	r6, 800d8f6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800d8f4:	689e      	ldr	r6, [r3, #8]
 800d8f6:	af07      	add	r7, sp, #28
 800d8f8:	4621      	mov	r1, r4
 800d8fa:	4638      	mov	r0, r7
 800d8fc:	f003 fe56 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d900:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d902:	6828      	ldr	r0, [r5, #0]
 800d904:	f7f5 fe58 	bl	80035b8 <_ZNK8touchgfx5Texts7getTextEt>
 800d908:	6823      	ldr	r3, [r4, #0]
 800d90a:	4605      	mov	r5, r0
 800d90c:	4620      	mov	r0, r4
 800d90e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d910:	4798      	blx	r3
 800d912:	6823      	ldr	r3, [r4, #0]
 800d914:	4680      	mov	r8, r0
 800d916:	4620      	mov	r0, r4
 800d918:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d91c:	4798      	blx	r3
 800d91e:	ab09      	add	r3, sp, #36	; 0x24
 800d920:	9501      	str	r5, [sp, #4]
 800d922:	9300      	str	r3, [sp, #0]
 800d924:	ab05      	add	r3, sp, #20
 800d926:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800d92a:	4630      	mov	r0, r6
 800d92c:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d930:	f7f5 fdf4 	bl	800351c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d934:	b00e      	add	sp, #56	; 0x38
 800d936:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d93a:	bf00      	nop
 800d93c:	2400e480 	.word	0x2400e480
 800d940:	2400e488 	.word	0x2400e488
 800d944:	2400e47c 	.word	0x2400e47c
 800d948:	2400e484 	.word	0x2400e484
 800d94c:	2400e424 	.word	0x2400e424

0800d950 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800d950:	b570      	push	{r4, r5, r6, lr}
 800d952:	6803      	ldr	r3, [r0, #0]
 800d954:	4604      	mov	r4, r0
 800d956:	4615      	mov	r5, r2
 800d958:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d95a:	4798      	blx	r3
 800d95c:	6823      	ldr	r3, [r4, #0]
 800d95e:	4629      	mov	r1, r5
 800d960:	4620      	mov	r0, r4
 800d962:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d964:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d968:	4718      	bx	r3
	...

0800d96c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d96c:	b538      	push	{r3, r4, r5, lr}
 800d96e:	4b0e      	ldr	r3, [pc, #56]	; (800d9a8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800d970:	4604      	mov	r4, r0
 800d972:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d974:	881b      	ldrh	r3, [r3, #0]
 800d976:	429a      	cmp	r2, r3
 800d978:	d214      	bcs.n	800d9a4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800d97a:	6803      	ldr	r3, [r0, #0]
 800d97c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d97e:	4798      	blx	r3
 800d980:	6823      	ldr	r3, [r4, #0]
 800d982:	4605      	mov	r5, r0
 800d984:	4620      	mov	r0, r4
 800d986:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d988:	4798      	blx	r3
 800d98a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d98e:	b22d      	sxth	r5, r5
 800d990:	4601      	mov	r1, r0
 800d992:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d996:	bf06      	itte	eq
 800d998:	4602      	moveq	r2, r0
 800d99a:	4629      	moveq	r1, r5
 800d99c:	462a      	movne	r2, r5
 800d99e:	4620      	mov	r0, r4
 800d9a0:	f7ff ffd6 	bl	800d950 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800d9a4:	bd38      	pop	{r3, r4, r5, pc}
 800d9a6:	bf00      	nop
 800d9a8:	2400e480 	.word	0x2400e480

0800d9ac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800d9ac:	b530      	push	{r4, r5, lr}
 800d9ae:	888b      	ldrh	r3, [r1, #4]
 800d9b0:	b085      	sub	sp, #20
 800d9b2:	4604      	mov	r4, r0
 800d9b4:	8583      	strh	r3, [r0, #44]	; 0x2c
 800d9b6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d9ba:	b923      	cbnz	r3, 800d9c6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d9bc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d9c0:	b90b      	cbnz	r3, 800d9c6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d9c2:	f7ff ffd3 	bl	800d96c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d9c6:	6823      	ldr	r3, [r4, #0]
 800d9c8:	466d      	mov	r5, sp
 800d9ca:	4621      	mov	r1, r4
 800d9cc:	343c      	adds	r4, #60	; 0x3c
 800d9ce:	4628      	mov	r0, r5
 800d9d0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d9d4:	4798      	blx	r3
 800d9d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d9da:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d9de:	b005      	add	sp, #20
 800d9e0:	bd30      	pop	{r4, r5, pc}

0800d9e2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d9e2:	2300      	movs	r3, #0
 800d9e4:	8083      	strh	r3, [r0, #4]
 800d9e6:	80c3      	strh	r3, [r0, #6]
 800d9e8:	8003      	strh	r3, [r0, #0]
 800d9ea:	8043      	strh	r3, [r0, #2]
 800d9ec:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d9f0:	2bff      	cmp	r3, #255	; 0xff
 800d9f2:	bf01      	itttt	eq
 800d9f4:	890b      	ldrheq	r3, [r1, #8]
 800d9f6:	8083      	strheq	r3, [r0, #4]
 800d9f8:	894b      	ldrheq	r3, [r1, #10]
 800d9fa:	80c3      	strheq	r3, [r0, #6]
 800d9fc:	4770      	bx	lr
	...

0800da00 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800da00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800da02:	4604      	mov	r4, r0
 800da04:	466b      	mov	r3, sp
 800da06:	6808      	ldr	r0, [r1, #0]
 800da08:	6849      	ldr	r1, [r1, #4]
 800da0a:	c303      	stmia	r3!, {r0, r1}
 800da0c:	6823      	ldr	r3, [r4, #0]
 800da0e:	4669      	mov	r1, sp
 800da10:	4620      	mov	r0, r4
 800da12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800da14:	4798      	blx	r3
 800da16:	4b08      	ldr	r3, [pc, #32]	; (800da38 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800da18:	681b      	ldr	r3, [r3, #0]
 800da1a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800da1e:	b10a      	cbz	r2, 800da24 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800da20:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800da22:	b900      	cbnz	r0, 800da26 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800da24:	6898      	ldr	r0, [r3, #8]
 800da26:	6803      	ldr	r3, [r0, #0]
 800da28:	4669      	mov	r1, sp
 800da2a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800da2c:	6a1d      	ldr	r5, [r3, #32]
 800da2e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800da32:	47a8      	blx	r5
 800da34:	b003      	add	sp, #12
 800da36:	bd30      	pop	{r4, r5, pc}
 800da38:	2400e424 	.word	0x2400e424

0800da3c <_ZN8touchgfx3BoxD1Ev>:
 800da3c:	4770      	bx	lr

0800da3e <_ZN8touchgfx3BoxD0Ev>:
 800da3e:	b510      	push	{r4, lr}
 800da40:	4604      	mov	r4, r0
 800da42:	212c      	movs	r1, #44	; 0x2c
 800da44:	f013 f9e9 	bl	8020e1a <_ZdlPvj>
 800da48:	4620      	mov	r0, r4
 800da4a:	bd10      	pop	{r4, pc}

0800da4c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800da4c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800da50:	b12a      	cbz	r2, 800da5e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800da52:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800da56:	b112      	cbz	r2, 800da5e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800da58:	6803      	ldr	r3, [r0, #0]
 800da5a:	695b      	ldr	r3, [r3, #20]
 800da5c:	4718      	bx	r3
 800da5e:	4770      	bx	lr

0800da60 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800da60:	4770      	bx	lr

0800da62 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800da62:	b510      	push	{r4, lr}
 800da64:	4604      	mov	r4, r0
 800da66:	2134      	movs	r1, #52	; 0x34
 800da68:	f013 f9d7 	bl	8020e1a <_ZdlPvj>
 800da6c:	4620      	mov	r0, r4
 800da6e:	bd10      	pop	{r4, pc}

0800da70 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800da70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da74:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800da76:	4604      	mov	r4, r0
 800da78:	460e      	mov	r6, r1
 800da7a:	b08e      	sub	sp, #56	; 0x38
 800da7c:	b218      	sxth	r0, r3
 800da7e:	8921      	ldrh	r1, [r4, #8]
 800da80:	005b      	lsls	r3, r3, #1
 800da82:	8962      	ldrh	r2, [r4, #10]
 800da84:	f8ad 0000 	strh.w	r0, [sp]
 800da88:	b29b      	uxth	r3, r3
 800da8a:	f8ad 0002 	strh.w	r0, [sp, #2]
 800da8e:	1ac9      	subs	r1, r1, r3
 800da90:	1ad3      	subs	r3, r2, r3
 800da92:	b209      	sxth	r1, r1
 800da94:	b21b      	sxth	r3, r3
 800da96:	2900      	cmp	r1, #0
 800da98:	f8ad 1004 	strh.w	r1, [sp, #4]
 800da9c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800daa0:	dd5e      	ble.n	800db60 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800daa2:	2b00      	cmp	r3, #0
 800daa4:	dd5c      	ble.n	800db60 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800daa6:	6830      	ldr	r0, [r6, #0]
 800daa8:	ab02      	add	r3, sp, #8
 800daaa:	6871      	ldr	r1, [r6, #4]
 800daac:	c303      	stmia	r3!, {r0, r1}
 800daae:	4669      	mov	r1, sp
 800dab0:	a802      	add	r0, sp, #8
 800dab2:	f7fd f833 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800dab6:	4620      	mov	r0, r4
 800dab8:	a902      	add	r1, sp, #8
 800daba:	f7ff ffa1 	bl	800da00 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800dabe:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800dac0:	2800      	cmp	r0, #0
 800dac2:	d05f      	beq.n	800db84 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800dac4:	8963      	ldrh	r3, [r4, #10]
 800dac6:	b202      	sxth	r2, r0
 800dac8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800dacc:	2500      	movs	r5, #0
 800dace:	1a1f      	subs	r7, r3, r0
 800dad0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800dad4:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dad8:	b21b      	sxth	r3, r3
 800dada:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800dade:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800dae2:	af04      	add	r7, sp, #16
 800dae4:	1a09      	subs	r1, r1, r0
 800dae6:	9506      	str	r5, [sp, #24]
 800dae8:	f8ad 201e 	strh.w	r2, [sp, #30]
 800daec:	f8ad 5020 	strh.w	r5, [sp, #32]
 800daf0:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800daf4:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800daf8:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800dafc:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800db00:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800db04:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800db08:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800db0c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800db10:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800db14:	ab06      	add	r3, sp, #24
 800db16:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800db1a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800db1e:	e887 0003 	stmia.w	r7, {r0, r1}
 800db22:	4631      	mov	r1, r6
 800db24:	4638      	mov	r0, r7
 800db26:	f7fc fff9 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800db2a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800db2e:	2b00      	cmp	r3, #0
 800db30:	dd12      	ble.n	800db58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800db32:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800db36:	2b00      	cmp	r3, #0
 800db38:	dd0e      	ble.n	800db58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800db3a:	6823      	ldr	r3, [r4, #0]
 800db3c:	4639      	mov	r1, r7
 800db3e:	4620      	mov	r0, r4
 800db40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db42:	4798      	blx	r3
 800db44:	f7f4 fc6c 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800db48:	6803      	ldr	r3, [r0, #0]
 800db4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800db4c:	4639      	mov	r1, r7
 800db4e:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800db52:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800db56:	47c0      	blx	r8
 800db58:	3501      	adds	r5, #1
 800db5a:	2d04      	cmp	r5, #4
 800db5c:	d1da      	bne.n	800db14 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800db5e:	e011      	b.n	800db84 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800db60:	6830      	ldr	r0, [r6, #0]
 800db62:	ab06      	add	r3, sp, #24
 800db64:	6871      	ldr	r1, [r6, #4]
 800db66:	c303      	stmia	r3!, {r0, r1}
 800db68:	6823      	ldr	r3, [r4, #0]
 800db6a:	a906      	add	r1, sp, #24
 800db6c:	4620      	mov	r0, r4
 800db6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db70:	4798      	blx	r3
 800db72:	f7f4 fc55 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 800db76:	6803      	ldr	r3, [r0, #0]
 800db78:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800db7a:	a906      	add	r1, sp, #24
 800db7c:	6a1d      	ldr	r5, [r3, #32]
 800db7e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800db82:	47a8      	blx	r5
 800db84:	b00e      	add	sp, #56	; 0x38
 800db86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800db8a <_ZN8touchgfx5ImageD1Ev>:
 800db8a:	4770      	bx	lr

0800db8c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800db8c:	b570      	push	{r4, r5, r6, lr}
 800db8e:	880b      	ldrh	r3, [r1, #0]
 800db90:	460d      	mov	r5, r1
 800db92:	4604      	mov	r4, r0
 800db94:	84c3      	strh	r3, [r0, #38]	; 0x26
 800db96:	4608      	mov	r0, r1
 800db98:	f005 f9c8 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800db9c:	4606      	mov	r6, r0
 800db9e:	4628      	mov	r0, r5
 800dba0:	f005 f9f8 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dba4:	6823      	ldr	r3, [r4, #0]
 800dba6:	4605      	mov	r5, r0
 800dba8:	4631      	mov	r1, r6
 800dbaa:	4620      	mov	r0, r4
 800dbac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dbae:	4798      	blx	r3
 800dbb0:	6823      	ldr	r3, [r4, #0]
 800dbb2:	4629      	mov	r1, r5
 800dbb4:	4620      	mov	r0, r4
 800dbb6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dbb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbbc:	4718      	bx	r3

0800dbbe <_ZN8touchgfx5ImageD0Ev>:
 800dbbe:	b510      	push	{r4, lr}
 800dbc0:	4604      	mov	r4, r0
 800dbc2:	212c      	movs	r1, #44	; 0x2c
 800dbc4:	f013 f929 	bl	8020e1a <_ZdlPvj>
 800dbc8:	4620      	mov	r0, r4
 800dbca:	bd10      	pop	{r4, pc}

0800dbcc <_ZNK8touchgfx5Image12getSolidRectEv>:
 800dbcc:	b510      	push	{r4, lr}
 800dbce:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800dbd2:	4604      	mov	r4, r0
 800dbd4:	2bff      	cmp	r3, #255	; 0xff
 800dbd6:	d006      	beq.n	800dbe6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800dbd8:	2300      	movs	r3, #0
 800dbda:	8003      	strh	r3, [r0, #0]
 800dbdc:	8043      	strh	r3, [r0, #2]
 800dbde:	8083      	strh	r3, [r0, #4]
 800dbe0:	80c3      	strh	r3, [r0, #6]
 800dbe2:	4620      	mov	r0, r4
 800dbe4:	bd10      	pop	{r4, pc}
 800dbe6:	3126      	adds	r1, #38	; 0x26
 800dbe8:	f005 fa08 	bl	8012ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800dbec:	e7f9      	b.n	800dbe2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800dbf0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800dbf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbf4:	4604      	mov	r4, r0
 800dbf6:	b088      	sub	sp, #32
 800dbf8:	2500      	movs	r5, #0
 800dbfa:	460f      	mov	r7, r1
 800dbfc:	f854 3b26 	ldr.w	r3, [r4], #38
 800dc00:	a904      	add	r1, sp, #16
 800dc02:	4606      	mov	r6, r0
 800dc04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dc06:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800dc0a:	4798      	blx	r3
 800dc0c:	4620      	mov	r0, r4
 800dc0e:	f005 f98d 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dc12:	4680      	mov	r8, r0
 800dc14:	4620      	mov	r0, r4
 800dc16:	f005 f9bd 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dc1a:	9506      	str	r5, [sp, #24]
 800dc1c:	ad06      	add	r5, sp, #24
 800dc1e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800dc22:	4639      	mov	r1, r7
 800dc24:	f8ad 801c 	strh.w	r8, [sp, #28]
 800dc28:	4628      	mov	r0, r5
 800dc2a:	f7fc ff77 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 800dc2e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800dc32:	2b00      	cmp	r3, #0
 800dc34:	dd19      	ble.n	800dc6a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800dc36:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800dc3a:	2b00      	cmp	r3, #0
 800dc3c:	dd15      	ble.n	800dc6a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800dc3e:	4b0c      	ldr	r3, [pc, #48]	; (800dc70 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800dc40:	681b      	ldr	r3, [r3, #0]
 800dc42:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800dc46:	b10a      	cbz	r2, 800dc4c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800dc48:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800dc4a:	b900      	cbnz	r0, 800dc4e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800dc4c:	6898      	ldr	r0, [r3, #8]
 800dc4e:	2701      	movs	r7, #1
 800dc50:	6801      	ldr	r1, [r0, #0]
 800dc52:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800dc56:	9702      	str	r7, [sp, #8]
 800dc58:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800dc5c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800dc60:	e9cd 5600 	strd	r5, r6, [sp]
 800dc64:	688d      	ldr	r5, [r1, #8]
 800dc66:	4621      	mov	r1, r4
 800dc68:	47a8      	blx	r5
 800dc6a:	b008      	add	sp, #32
 800dc6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc70:	2400e424 	.word	0x2400e424

0800dc74 <_ZN8touchgfx7OutlineD1Ev>:
 800dc74:	4770      	bx	lr

0800dc76 <_ZN8touchgfx7OutlineD0Ev>:
 800dc76:	b510      	push	{r4, lr}
 800dc78:	4604      	mov	r4, r0
 800dc7a:	2130      	movs	r1, #48	; 0x30
 800dc7c:	f013 f8cd 	bl	8020e1a <_ZdlPvj>
 800dc80:	4620      	mov	r0, r4
 800dc82:	bd10      	pop	{r4, pc}

0800dc84 <_ZN8touchgfx7Outline5resetEv>:
 800dc84:	b510      	push	{r4, lr}
 800dc86:	4604      	mov	r4, r0
 800dc88:	f000 fe86 	bl	800e998 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800dc8c:	60e0      	str	r0, [r4, #12]
 800dc8e:	f000 fe89 	bl	800e9a4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800dc92:	68e3      	ldr	r3, [r4, #12]
 800dc94:	08c0      	lsrs	r0, r0, #3
 800dc96:	2200      	movs	r2, #0
 800dc98:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800dc9c:	6123      	str	r3, [r4, #16]
 800dc9e:	3801      	subs	r0, #1
 800dca0:	60a2      	str	r2, [r4, #8]
 800dca2:	6060      	str	r0, [r4, #4]
 800dca4:	8019      	strh	r1, [r3, #0]
 800dca6:	8059      	strh	r1, [r3, #2]
 800dca8:	809a      	strh	r2, [r3, #4]
 800dcaa:	80da      	strh	r2, [r3, #6]
 800dcac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dcae:	f023 0301 	bic.w	r3, r3, #1
 800dcb2:	f043 0302 	orr.w	r3, r3, #2
 800dcb6:	6263      	str	r3, [r4, #36]	; 0x24
 800dcb8:	bd10      	pop	{r4, pc}
	...

0800dcbc <_ZN8touchgfx7OutlineC1Ev>:
 800dcbc:	4b0a      	ldr	r3, [pc, #40]	; (800dce8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800dcbe:	b510      	push	{r4, lr}
 800dcc0:	6003      	str	r3, [r0, #0]
 800dcc2:	2300      	movs	r3, #0
 800dcc4:	4604      	mov	r4, r0
 800dcc6:	6243      	str	r3, [r0, #36]	; 0x24
 800dcc8:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800dccc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800dcd0:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800dcd4:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800dcd8:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800dcdc:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800dce0:	f7ff ffd0 	bl	800dc84 <_ZN8touchgfx7Outline5resetEv>
 800dce4:	4620      	mov	r0, r4
 800dce6:	bd10      	pop	{r4, pc}
 800dce8:	080238cc 	.word	0x080238cc

0800dcec <_ZN8touchgfx7Outline10renderLineEiiii>:
 800dcec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcf0:	b093      	sub	sp, #76	; 0x4c
 800dcf2:	1156      	asrs	r6, r2, #5
 800dcf4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800dcf6:	9305      	str	r3, [sp, #20]
 800dcf8:	1153      	asrs	r3, r2, #5
 800dcfa:	f004 051f 	and.w	r5, r4, #31
 800dcfe:	9303      	str	r3, [sp, #12]
 800dd00:	1163      	asrs	r3, r4, #5
 800dd02:	9504      	str	r5, [sp, #16]
 800dd04:	1165      	asrs	r5, r4, #5
 800dd06:	9306      	str	r3, [sp, #24]
 800dd08:	f002 031f 	and.w	r3, r2, #31
 800dd0c:	42ae      	cmp	r6, r5
 800dd0e:	f040 80f4 	bne.w	800defa <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
 800dd12:	9c04      	ldr	r4, [sp, #16]
 800dd14:	9a05      	ldr	r2, [sp, #20]
 800dd16:	42a3      	cmp	r3, r4
 800dd18:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800dd1c:	6902      	ldr	r2, [r0, #16]
 800dd1e:	d125      	bne.n	800dd6c <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
 800dd20:	f9b2 3000 	ldrsh.w	r3, [r2]
 800dd24:	459e      	cmp	lr, r3
 800dd26:	d103      	bne.n	800dd30 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
 800dd28:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800dd2c:	429e      	cmp	r6, r3
 800dd2e:	d035      	beq.n	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800dd30:	88d1      	ldrh	r1, [r2, #6]
 800dd32:	8893      	ldrh	r3, [r2, #4]
 800dd34:	430b      	orrs	r3, r1
 800dd36:	d010      	beq.n	800dd5a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800dd38:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800dd3c:	2b00      	cmp	r3, #0
 800dd3e:	db0c      	blt.n	800dd5a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800dd40:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800dd42:	428b      	cmp	r3, r1
 800dd44:	da09      	bge.n	800dd5a <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 800dd46:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dd4a:	428b      	cmp	r3, r1
 800dd4c:	f103 0301 	add.w	r3, r3, #1
 800dd50:	bf38      	it	cc
 800dd52:	3208      	addcc	r2, #8
 800dd54:	6083      	str	r3, [r0, #8]
 800dd56:	bf38      	it	cc
 800dd58:	6102      	strcc	r2, [r0, #16]
 800dd5a:	6903      	ldr	r3, [r0, #16]
 800dd5c:	9a03      	ldr	r2, [sp, #12]
 800dd5e:	f8a3 e000 	strh.w	lr, [r3]
 800dd62:	805a      	strh	r2, [r3, #2]
 800dd64:	2200      	movs	r2, #0
 800dd66:	809a      	strh	r2, [r3, #4]
 800dd68:	80da      	strh	r2, [r3, #6]
 800dd6a:	e017      	b.n	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800dd6c:	9c05      	ldr	r4, [sp, #20]
 800dd6e:	114e      	asrs	r6, r1, #5
 800dd70:	f001 0c1f 	and.w	ip, r1, #31
 800dd74:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800dd78:	f004 041f 	and.w	r4, r4, #31
 800dd7c:	4576      	cmp	r6, lr
 800dd7e:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800dd82:	9402      	str	r4, [sp, #8]
 800dd84:	9c04      	ldr	r4, [sp, #16]
 800dd86:	eba4 0403 	sub.w	r4, r4, r3
 800dd8a:	d10a      	bne.n	800dda2 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
 800dd8c:	9b02      	ldr	r3, [sp, #8]
 800dd8e:	44a0      	add	r8, r4
 800dd90:	449c      	add	ip, r3
 800dd92:	f8a2 8004 	strh.w	r8, [r2, #4]
 800dd96:	fb04 a40c 	mla	r4, r4, ip, sl
 800dd9a:	80d4      	strh	r4, [r2, #6]
 800dd9c:	b013      	add	sp, #76	; 0x4c
 800dd9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dda2:	9d05      	ldr	r5, [sp, #20]
 800dda4:	1a69      	subs	r1, r5, r1
 800dda6:	bf51      	iteee	pl
 800dda8:	f1cc 0520 	rsbpl	r5, ip, #32
 800ddac:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ddb0:	4249      	negmi	r1, r1
 800ddb2:	2500      	movmi	r5, #0
 800ddb4:	bf5d      	ittte	pl
 800ddb6:	436c      	mulpl	r4, r5
 800ddb8:	2520      	movpl	r5, #32
 800ddba:	f04f 0901 	movpl.w	r9, #1
 800ddbe:	f04f 39ff 	movmi.w	r9, #4294967295
 800ddc2:	9501      	str	r5, [sp, #4]
 800ddc4:	9f01      	ldr	r7, [sp, #4]
 800ddc6:	444e      	add	r6, r9
 800ddc8:	fb94 f5f1 	sdiv	r5, r4, r1
 800ddcc:	fb01 4415 	mls	r4, r1, r5, r4
 800ddd0:	44bc      	add	ip, r7
 800ddd2:	2c00      	cmp	r4, #0
 800ddd4:	bfbc      	itt	lt
 800ddd6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ddda:	1864      	addlt	r4, r4, r1
 800dddc:	44a8      	add	r8, r5
 800ddde:	fb05 ac0c 	mla	ip, r5, ip, sl
 800dde2:	f8a2 8004 	strh.w	r8, [r2, #4]
 800dde6:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ddea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ddee:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ddf2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800ddf6:	ea58 0202 	orrs.w	r2, r8, r2
 800ddfa:	d011      	beq.n	800de20 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800ddfc:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800de00:	f1b8 0f00 	cmp.w	r8, #0
 800de04:	db0c      	blt.n	800de20 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800de06:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800de08:	4590      	cmp	r8, r2
 800de0a:	da09      	bge.n	800de20 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 800de0c:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800de10:	4590      	cmp	r8, r2
 800de12:	bf3c      	itt	cc
 800de14:	f10c 0208 	addcc.w	r2, ip, #8
 800de18:	6102      	strcc	r2, [r0, #16]
 800de1a:	f108 0201 	add.w	r2, r8, #1
 800de1e:	6082      	str	r2, [r0, #8]
 800de20:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de24:	2700      	movs	r7, #0
 800de26:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800de2a:	45b6      	cmp	lr, r6
 800de2c:	f8ac 6000 	strh.w	r6, [ip]
 800de30:	442b      	add	r3, r5
 800de32:	f8ac 2002 	strh.w	r2, [ip, #2]
 800de36:	f8ac 7004 	strh.w	r7, [ip, #4]
 800de3a:	f8ac 7006 	strh.w	r7, [ip, #6]
 800de3e:	d04b      	beq.n	800ded8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
 800de40:	9f04      	ldr	r7, [sp, #16]
 800de42:	1a64      	subs	r4, r4, r1
 800de44:	f04f 0a00 	mov.w	sl, #0
 800de48:	1aff      	subs	r7, r7, r3
 800de4a:	443d      	add	r5, r7
 800de4c:	016d      	lsls	r5, r5, #5
 800de4e:	fb95 f8f1 	sdiv	r8, r5, r1
 800de52:	fb01 5518 	mls	r5, r1, r8, r5
 800de56:	2d00      	cmp	r5, #0
 800de58:	bfbc      	itt	lt
 800de5a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800de5e:	186d      	addlt	r5, r5, r1
 800de60:	f108 0701 	add.w	r7, r8, #1
 800de64:	9703      	str	r7, [sp, #12]
 800de66:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de6a:	1964      	adds	r4, r4, r5
 800de6c:	444e      	add	r6, r9
 800de6e:	bf54      	ite	pl
 800de70:	9f03      	ldrpl	r7, [sp, #12]
 800de72:	4647      	movmi	r7, r8
 800de74:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800de78:	bf58      	it	pl
 800de7a:	1a64      	subpl	r4, r4, r1
 800de7c:	443b      	add	r3, r7
 800de7e:	44bb      	add	fp, r7
 800de80:	f8ac b004 	strh.w	fp, [ip, #4]
 800de84:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800de88:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800de8c:	f8ac b006 	strh.w	fp, [ip, #6]
 800de90:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de94:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800de98:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800de9c:	ea5b 0707 	orrs.w	r7, fp, r7
 800dea0:	d011      	beq.n	800dec6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800dea2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800dea6:	f1bb 0f00 	cmp.w	fp, #0
 800deaa:	db0c      	blt.n	800dec6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800deac:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800deae:	45bb      	cmp	fp, r7
 800deb0:	da09      	bge.n	800dec6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 800deb2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800deb6:	45bb      	cmp	fp, r7
 800deb8:	bf3c      	itt	cc
 800deba:	f10c 0708 	addcc.w	r7, ip, #8
 800debe:	6107      	strcc	r7, [r0, #16]
 800dec0:	f10b 0701 	add.w	r7, fp, #1
 800dec4:	6087      	str	r7, [r0, #8]
 800dec6:	6907      	ldr	r7, [r0, #16]
 800dec8:	45b6      	cmp	lr, r6
 800deca:	803e      	strh	r6, [r7, #0]
 800decc:	807a      	strh	r2, [r7, #2]
 800dece:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ded2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ded6:	d1c6      	bne.n	800de66 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
 800ded8:	9a04      	ldr	r2, [sp, #16]
 800deda:	1ad3      	subs	r3, r2, r3
 800dedc:	6902      	ldr	r2, [r0, #16]
 800dede:	8891      	ldrh	r1, [r2, #4]
 800dee0:	88d6      	ldrh	r6, [r2, #6]
 800dee2:	4419      	add	r1, r3
 800dee4:	8091      	strh	r1, [r2, #4]
 800dee6:	9902      	ldr	r1, [sp, #8]
 800dee8:	f101 0c20 	add.w	ip, r1, #32
 800deec:	9901      	ldr	r1, [sp, #4]
 800deee:	ebac 0c01 	sub.w	ip, ip, r1
 800def2:	fb03 630c 	mla	r3, r3, ip, r6
 800def6:	80d3      	strh	r3, [r2, #6]
 800def8:	e750      	b.n	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800defa:	9d05      	ldr	r5, [sp, #20]
 800defc:	1aa2      	subs	r2, r4, r2
 800defe:	eba5 0501 	sub.w	r5, r5, r1
 800df02:	9202      	str	r2, [sp, #8]
 800df04:	9508      	str	r5, [sp, #32]
 800df06:	f140 8128 	bpl.w	800e15a <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
 800df0a:	9a03      	ldr	r2, [sp, #12]
 800df0c:	2a00      	cmp	r2, #0
 800df0e:	f6ff af45 	blt.w	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800df12:	9a02      	ldr	r2, [sp, #8]
 800df14:	f04f 34ff 	mov.w	r4, #4294967295
 800df18:	4252      	negs	r2, r2
 800df1a:	940b      	str	r4, [sp, #44]	; 0x2c
 800df1c:	2400      	movs	r4, #0
 800df1e:	9202      	str	r2, [sp, #8]
 800df20:	9a06      	ldr	r2, [sp, #24]
 800df22:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800df26:	9206      	str	r2, [sp, #24]
 800df28:	462a      	mov	r2, r5
 800df2a:	435a      	muls	r2, r3
 800df2c:	9401      	str	r4, [sp, #4]
 800df2e:	9c02      	ldr	r4, [sp, #8]
 800df30:	9d02      	ldr	r5, [sp, #8]
 800df32:	fb92 f4f4 	sdiv	r4, r2, r4
 800df36:	fb05 2214 	mls	r2, r5, r4, r2
 800df3a:	2a00      	cmp	r2, #0
 800df3c:	9207      	str	r2, [sp, #28]
 800df3e:	bfbc      	itt	lt
 800df40:	1952      	addlt	r2, r2, r5
 800df42:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800df46:	6905      	ldr	r5, [r0, #16]
 800df48:	bfb8      	it	lt
 800df4a:	9207      	strlt	r2, [sp, #28]
 800df4c:	eb04 0901 	add.w	r9, r4, r1
 800df50:	9a01      	ldr	r2, [sp, #4]
 800df52:	ea4f 1669 	mov.w	r6, r9, asr #5
 800df56:	429a      	cmp	r2, r3
 800df58:	f040 8111 	bne.w	800e17e <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
 800df5c:	f9b5 3000 	ldrsh.w	r3, [r5]
 800df60:	429e      	cmp	r6, r3
 800df62:	d104      	bne.n	800df6e <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
 800df64:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800df68:	9a03      	ldr	r2, [sp, #12]
 800df6a:	429a      	cmp	r2, r3
 800df6c:	d01b      	beq.n	800dfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800df6e:	88ea      	ldrh	r2, [r5, #6]
 800df70:	88ab      	ldrh	r3, [r5, #4]
 800df72:	4313      	orrs	r3, r2
 800df74:	d010      	beq.n	800df98 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800df76:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800df7a:	2a00      	cmp	r2, #0
 800df7c:	db0c      	blt.n	800df98 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800df7e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800df80:	429a      	cmp	r2, r3
 800df82:	da09      	bge.n	800df98 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 800df84:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800df88:	429a      	cmp	r2, r3
 800df8a:	f102 0201 	add.w	r2, r2, #1
 800df8e:	bf38      	it	cc
 800df90:	3508      	addcc	r5, #8
 800df92:	6082      	str	r2, [r0, #8]
 800df94:	bf38      	it	cc
 800df96:	6105      	strcc	r5, [r0, #16]
 800df98:	6903      	ldr	r3, [r0, #16]
 800df9a:	9a03      	ldr	r2, [sp, #12]
 800df9c:	801e      	strh	r6, [r3, #0]
 800df9e:	805a      	strh	r2, [r3, #2]
 800dfa0:	2200      	movs	r2, #0
 800dfa2:	809a      	strh	r2, [r3, #4]
 800dfa4:	80da      	strh	r2, [r3, #6]
 800dfa6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dfa8:	9a03      	ldr	r2, [sp, #12]
 800dfaa:	6901      	ldr	r1, [r0, #16]
 800dfac:	441a      	add	r2, r3
 800dfae:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dfb2:	42b3      	cmp	r3, r6
 800dfb4:	d103      	bne.n	800dfbe <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
 800dfb6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800dfba:	429a      	cmp	r2, r3
 800dfbc:	d01a      	beq.n	800dff4 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
 800dfbe:	88cc      	ldrh	r4, [r1, #6]
 800dfc0:	888b      	ldrh	r3, [r1, #4]
 800dfc2:	4323      	orrs	r3, r4
 800dfc4:	d010      	beq.n	800dfe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800dfc6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dfca:	2c00      	cmp	r4, #0
 800dfcc:	db0c      	blt.n	800dfe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800dfce:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800dfd0:	429c      	cmp	r4, r3
 800dfd2:	da09      	bge.n	800dfe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 800dfd4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dfd8:	429c      	cmp	r4, r3
 800dfda:	f104 0401 	add.w	r4, r4, #1
 800dfde:	bf38      	it	cc
 800dfe0:	3108      	addcc	r1, #8
 800dfe2:	6084      	str	r4, [r0, #8]
 800dfe4:	bf38      	it	cc
 800dfe6:	6101      	strcc	r1, [r0, #16]
 800dfe8:	6903      	ldr	r3, [r0, #16]
 800dfea:	2100      	movs	r1, #0
 800dfec:	801e      	strh	r6, [r3, #0]
 800dfee:	805a      	strh	r2, [r3, #2]
 800dff0:	8099      	strh	r1, [r3, #4]
 800dff2:	80d9      	strh	r1, [r3, #6]
 800dff4:	9b06      	ldr	r3, [sp, #24]
 800dff6:	4293      	cmp	r3, r2
 800dff8:	f000 8082 	beq.w	800e100 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
 800dffc:	9b08      	ldr	r3, [sp, #32]
 800dffe:	9902      	ldr	r1, [sp, #8]
 800e000:	015b      	lsls	r3, r3, #5
 800e002:	9c02      	ldr	r4, [sp, #8]
 800e004:	fb93 f1f1 	sdiv	r1, r3, r1
 800e008:	fb04 3311 	mls	r3, r4, r1, r3
 800e00c:	9103      	str	r1, [sp, #12]
 800e00e:	2b00      	cmp	r3, #0
 800e010:	9308      	str	r3, [sp, #32]
 800e012:	da04      	bge.n	800e01e <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
 800e014:	1e4b      	subs	r3, r1, #1
 800e016:	9303      	str	r3, [sp, #12]
 800e018:	9b08      	ldr	r3, [sp, #32]
 800e01a:	4423      	add	r3, r4
 800e01c:	9308      	str	r3, [sp, #32]
 800e01e:	9b07      	ldr	r3, [sp, #28]
 800e020:	464f      	mov	r7, r9
 800e022:	9902      	ldr	r1, [sp, #8]
 800e024:	2600      	movs	r6, #0
 800e026:	1a5b      	subs	r3, r3, r1
 800e028:	9307      	str	r3, [sp, #28]
 800e02a:	9b01      	ldr	r3, [sp, #4]
 800e02c:	f1c3 0320 	rsb	r3, r3, #32
 800e030:	930e      	str	r3, [sp, #56]	; 0x38
 800e032:	990e      	ldr	r1, [sp, #56]	; 0x38
 800e034:	9b01      	ldr	r3, [sp, #4]
 800e036:	1a5b      	subs	r3, r3, r1
 800e038:	930a      	str	r3, [sp, #40]	; 0x28
 800e03a:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800e03e:	185b      	adds	r3, r3, r1
 800e040:	bf58      	it	pl
 800e042:	9902      	ldrpl	r1, [sp, #8]
 800e044:	9307      	str	r3, [sp, #28]
 800e046:	bf57      	itett	pl
 800e048:	1a5b      	subpl	r3, r3, r1
 800e04a:	9903      	ldrmi	r1, [sp, #12]
 800e04c:	9307      	strpl	r3, [sp, #28]
 800e04e:	9b03      	ldrpl	r3, [sp, #12]
 800e050:	bf58      	it	pl
 800e052:	1c59      	addpl	r1, r3, #1
 800e054:	2a00      	cmp	r2, #0
 800e056:	4489      	add	r9, r1
 800e058:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800e05c:	db2e      	blt.n	800e0bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e05e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e060:	4293      	cmp	r3, r2
 800e062:	dd2b      	ble.n	800e0bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e064:	9c01      	ldr	r4, [sp, #4]
 800e066:	6905      	ldr	r5, [r0, #16]
 800e068:	46a0      	mov	r8, r4
 800e06a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800e06c:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800e070:	45a0      	cmp	r8, r4
 800e072:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800e076:	f040 814c 	bne.w	800e312 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
 800e07a:	f9b5 1000 	ldrsh.w	r1, [r5]
 800e07e:	4551      	cmp	r1, sl
 800e080:	d103      	bne.n	800e08a <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
 800e082:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e086:	4291      	cmp	r1, r2
 800e088:	d018      	beq.n	800e0bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e08a:	ea5c 010e 	orrs.w	r1, ip, lr
 800e08e:	d00f      	beq.n	800e0b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e090:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800e094:	2900      	cmp	r1, #0
 800e096:	db0b      	blt.n	800e0b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e098:	428b      	cmp	r3, r1
 800e09a:	dd09      	ble.n	800e0b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 800e09c:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800e0a0:	4299      	cmp	r1, r3
 800e0a2:	f101 0101 	add.w	r1, r1, #1
 800e0a6:	bf38      	it	cc
 800e0a8:	3508      	addcc	r5, #8
 800e0aa:	6081      	str	r1, [r0, #8]
 800e0ac:	bf38      	it	cc
 800e0ae:	6105      	strcc	r5, [r0, #16]
 800e0b0:	6903      	ldr	r3, [r0, #16]
 800e0b2:	f8a3 a000 	strh.w	sl, [r3]
 800e0b6:	805a      	strh	r2, [r3, #2]
 800e0b8:	809e      	strh	r6, [r3, #4]
 800e0ba:	80de      	strh	r6, [r3, #6]
 800e0bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e0be:	6901      	ldr	r1, [r0, #16]
 800e0c0:	441a      	add	r2, r3
 800e0c2:	88cc      	ldrh	r4, [r1, #6]
 800e0c4:	888b      	ldrh	r3, [r1, #4]
 800e0c6:	4323      	orrs	r3, r4
 800e0c8:	d010      	beq.n	800e0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e0ca:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800e0ce:	2c00      	cmp	r4, #0
 800e0d0:	db0c      	blt.n	800e0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e0d2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e0d4:	429c      	cmp	r4, r3
 800e0d6:	da09      	bge.n	800e0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 800e0d8:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800e0dc:	429c      	cmp	r4, r3
 800e0de:	f104 0401 	add.w	r4, r4, #1
 800e0e2:	bf38      	it	cc
 800e0e4:	3108      	addcc	r1, #8
 800e0e6:	6084      	str	r4, [r0, #8]
 800e0e8:	bf38      	it	cc
 800e0ea:	6101      	strcc	r1, [r0, #16]
 800e0ec:	6903      	ldr	r3, [r0, #16]
 800e0ee:	464f      	mov	r7, r9
 800e0f0:	f8a3 a000 	strh.w	sl, [r3]
 800e0f4:	805a      	strh	r2, [r3, #2]
 800e0f6:	809e      	strh	r6, [r3, #4]
 800e0f8:	80de      	strh	r6, [r3, #6]
 800e0fa:	9b06      	ldr	r3, [sp, #24]
 800e0fc:	4293      	cmp	r3, r2
 800e0fe:	d19c      	bne.n	800e03a <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
 800e100:	9b01      	ldr	r3, [sp, #4]
 800e102:	6907      	ldr	r7, [r0, #16]
 800e104:	f1c3 0620 	rsb	r6, r3, #32
 800e108:	9b05      	ldr	r3, [sp, #20]
 800e10a:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800e10e:	9b04      	ldr	r3, [sp, #16]
 800e110:	429e      	cmp	r6, r3
 800e112:	f040 81c7 	bne.w	800e4a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 800e116:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e11a:	459e      	cmp	lr, r3
 800e11c:	d104      	bne.n	800e128 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
 800e11e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e122:	429a      	cmp	r2, r3
 800e124:	f43f ae3a 	beq.w	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e128:	88f9      	ldrh	r1, [r7, #6]
 800e12a:	88bb      	ldrh	r3, [r7, #4]
 800e12c:	430b      	orrs	r3, r1
 800e12e:	d010      	beq.n	800e152 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e130:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e134:	2b00      	cmp	r3, #0
 800e136:	db0c      	blt.n	800e152 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e138:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800e13a:	428b      	cmp	r3, r1
 800e13c:	da09      	bge.n	800e152 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 800e13e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e142:	428b      	cmp	r3, r1
 800e144:	f103 0301 	add.w	r3, r3, #1
 800e148:	bf38      	it	cc
 800e14a:	3708      	addcc	r7, #8
 800e14c:	6083      	str	r3, [r0, #8]
 800e14e:	bf38      	it	cc
 800e150:	6107      	strcc	r7, [r0, #16]
 800e152:	6903      	ldr	r3, [r0, #16]
 800e154:	f8a3 e000 	strh.w	lr, [r3]
 800e158:	e603      	b.n	800dd62 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
 800e15a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800e15c:	9c03      	ldr	r4, [sp, #12]
 800e15e:	42a2      	cmp	r2, r4
 800e160:	f6ff ae1c 	blt.w	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e164:	9c06      	ldr	r4, [sp, #24]
 800e166:	42a2      	cmp	r2, r4
 800e168:	9c08      	ldr	r4, [sp, #32]
 800e16a:	bfbc      	itt	lt
 800e16c:	3201      	addlt	r2, #1
 800e16e:	9206      	strlt	r2, [sp, #24]
 800e170:	f1c3 0220 	rsb	r2, r3, #32
 800e174:	4362      	muls	r2, r4
 800e176:	2401      	movs	r4, #1
 800e178:	940b      	str	r4, [sp, #44]	; 0x2c
 800e17a:	2420      	movs	r4, #32
 800e17c:	e6d6      	b.n	800df2c <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 800e17e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800e182:	f009 021f 	and.w	r2, r9, #31
 800e186:	f001 011f 	and.w	r1, r1, #31
 800e18a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800e18e:	920c      	str	r2, [sp, #48]	; 0x30
 800e190:	45b0      	cmp	r8, r6
 800e192:	9a01      	ldr	r2, [sp, #4]
 800e194:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800e198:	eba2 0203 	sub.w	r2, r2, r3
 800e19c:	d108      	bne.n	800e1b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
 800e19e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e1a0:	4496      	add	lr, r2
 800e1a2:	4419      	add	r1, r3
 800e1a4:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e1a8:	fb02 a101 	mla	r1, r2, r1, sl
 800e1ac:	80e9      	strh	r1, [r5, #6]
 800e1ae:	e6fa      	b.n	800dfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800e1b0:	2c00      	cmp	r4, #0
 800e1b2:	f2c0 80a7 	blt.w	800e304 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
 800e1b6:	2701      	movs	r7, #1
 800e1b8:	f1c1 0c20 	rsb	ip, r1, #32
 800e1bc:	970a      	str	r7, [sp, #40]	; 0x28
 800e1be:	2720      	movs	r7, #32
 800e1c0:	fb02 f20c 	mul.w	r2, r2, ip
 800e1c4:	9709      	str	r7, [sp, #36]	; 0x24
 800e1c6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e1c8:	fb92 fcf4 	sdiv	ip, r2, r4
 800e1cc:	fb04 221c 	mls	r2, r4, ip, r2
 800e1d0:	4439      	add	r1, r7
 800e1d2:	2a00      	cmp	r2, #0
 800e1d4:	bfbc      	itt	lt
 800e1d6:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800e1da:	1912      	addlt	r2, r2, r4
 800e1dc:	fb0c a101 	mla	r1, ip, r1, sl
 800e1e0:	44e6      	add	lr, ip
 800e1e2:	80e9      	strh	r1, [r5, #6]
 800e1e4:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e1e6:	f8a5 e004 	strh.w	lr, [r5, #4]
 800e1ea:	eb08 0501 	add.w	r5, r8, r1
 800e1ee:	6901      	ldr	r1, [r0, #16]
 800e1f0:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800e1f4:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800e1f8:	ea58 070e 	orrs.w	r7, r8, lr
 800e1fc:	d010      	beq.n	800e220 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e1fe:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800e202:	f1be 0f00 	cmp.w	lr, #0
 800e206:	db0b      	blt.n	800e220 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e208:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e20a:	45be      	cmp	lr, r7
 800e20c:	da08      	bge.n	800e220 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 800e20e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e212:	45be      	cmp	lr, r7
 800e214:	bf3c      	itt	cc
 800e216:	3108      	addcc	r1, #8
 800e218:	6101      	strcc	r1, [r0, #16]
 800e21a:	f10e 0101 	add.w	r1, lr, #1
 800e21e:	6081      	str	r1, [r0, #8]
 800e220:	6901      	ldr	r1, [r0, #16]
 800e222:	f04f 0e00 	mov.w	lr, #0
 800e226:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800e22a:	42ae      	cmp	r6, r5
 800e22c:	800d      	strh	r5, [r1, #0]
 800e22e:	4463      	add	r3, ip
 800e230:	f8a1 8002 	strh.w	r8, [r1, #2]
 800e234:	f8a1 e004 	strh.w	lr, [r1, #4]
 800e238:	f8a1 e006 	strh.w	lr, [r1, #6]
 800e23c:	d053      	beq.n	800e2e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
 800e23e:	9901      	ldr	r1, [sp, #4]
 800e240:	1b12      	subs	r2, r2, r4
 800e242:	1ac9      	subs	r1, r1, r3
 800e244:	4461      	add	r1, ip
 800e246:	0149      	lsls	r1, r1, #5
 800e248:	fb91 fef4 	sdiv	lr, r1, r4
 800e24c:	fb04 111e 	mls	r1, r4, lr, r1
 800e250:	2900      	cmp	r1, #0
 800e252:	bfbc      	itt	lt
 800e254:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800e258:	1909      	addlt	r1, r1, r4
 800e25a:	f10e 0701 	add.w	r7, lr, #1
 800e25e:	970d      	str	r7, [sp, #52]	; 0x34
 800e260:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800e264:	1852      	adds	r2, r2, r1
 800e266:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800e268:	bf54      	ite	pl
 800e26a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800e26e:	46f4      	movmi	ip, lr
 800e270:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800e274:	bf58      	it	pl
 800e276:	1b12      	subpl	r2, r2, r4
 800e278:	4463      	add	r3, ip
 800e27a:	443d      	add	r5, r7
 800e27c:	44e3      	add	fp, ip
 800e27e:	f8aa b004 	strh.w	fp, [sl, #4]
 800e282:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800e286:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800e28a:	f8aa b006 	strh.w	fp, [sl, #6]
 800e28e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e292:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e296:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800e29a:	ea5b 070a 	orrs.w	r7, fp, sl
 800e29e:	d014      	beq.n	800e2ca <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e2a0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800e2a4:	f1ba 0f00 	cmp.w	sl, #0
 800e2a8:	db0f      	blt.n	800e2ca <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e2aa:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e2ac:	45ba      	cmp	sl, r7
 800e2ae:	da0c      	bge.n	800e2ca <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 800e2b0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800e2b4:	45ba      	cmp	sl, r7
 800e2b6:	f10a 0a01 	add.w	sl, sl, #1
 800e2ba:	bf38      	it	cc
 800e2bc:	f10c 0c08 	addcc.w	ip, ip, #8
 800e2c0:	f8c0 a008 	str.w	sl, [r0, #8]
 800e2c4:	bf38      	it	cc
 800e2c6:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800e2ca:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e2ce:	f04f 0700 	mov.w	r7, #0
 800e2d2:	42ae      	cmp	r6, r5
 800e2d4:	f8ac 5000 	strh.w	r5, [ip]
 800e2d8:	f8ac 8002 	strh.w	r8, [ip, #2]
 800e2dc:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e2e0:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e2e4:	d1bc      	bne.n	800e260 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
 800e2e6:	6904      	ldr	r4, [r0, #16]
 800e2e8:	9a01      	ldr	r2, [sp, #4]
 800e2ea:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e2ec:	1ad3      	subs	r3, r2, r3
 800e2ee:	88a2      	ldrh	r2, [r4, #4]
 800e2f0:	3120      	adds	r1, #32
 800e2f2:	441a      	add	r2, r3
 800e2f4:	80a2      	strh	r2, [r4, #4]
 800e2f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e2f8:	1a89      	subs	r1, r1, r2
 800e2fa:	88e2      	ldrh	r2, [r4, #6]
 800e2fc:	fb03 2301 	mla	r3, r3, r1, r2
 800e300:	80e3      	strh	r3, [r4, #6]
 800e302:	e650      	b.n	800dfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 800e304:	f04f 37ff 	mov.w	r7, #4294967295
 800e308:	434a      	muls	r2, r1
 800e30a:	4264      	negs	r4, r4
 800e30c:	970a      	str	r7, [sp, #40]	; 0x28
 800e30e:	2700      	movs	r7, #0
 800e310:	e758      	b.n	800e1c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
 800e312:	ea4f 1867 	mov.w	r8, r7, asr #5
 800e316:	f009 031f 	and.w	r3, r9, #31
 800e31a:	f007 071f 	and.w	r7, r7, #31
 800e31e:	fa1f fc8c 	uxth.w	ip, ip
 800e322:	45d0      	cmp	r8, sl
 800e324:	930f      	str	r3, [sp, #60]	; 0x3c
 800e326:	fa1f fe8e 	uxth.w	lr, lr
 800e32a:	d10a      	bne.n	800e342 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
 800e32c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e32e:	449c      	add	ip, r3
 800e330:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e332:	441f      	add	r7, r3
 800e334:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e336:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e33a:	fb03 e707 	mla	r7, r3, r7, lr
 800e33e:	80ef      	strh	r7, [r5, #6]
 800e340:	e6bc      	b.n	800e0bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e342:	2900      	cmp	r1, #0
 800e344:	f2c0 80a6 	blt.w	800e494 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
 800e348:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e34a:	f1c7 0320 	rsb	r3, r7, #32
 800e34e:	4363      	muls	r3, r4
 800e350:	2401      	movs	r4, #1
 800e352:	940d      	str	r4, [sp, #52]	; 0x34
 800e354:	2420      	movs	r4, #32
 800e356:	940c      	str	r4, [sp, #48]	; 0x30
 800e358:	fb93 f4f1 	sdiv	r4, r3, r1
 800e35c:	fb01 3b14 	mls	fp, r1, r4, r3
 800e360:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e362:	f1bb 0f00 	cmp.w	fp, #0
 800e366:	441f      	add	r7, r3
 800e368:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e36a:	bfbc      	itt	lt
 800e36c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800e370:	448b      	addlt	fp, r1
 800e372:	fb04 e707 	mla	r7, r4, r7, lr
 800e376:	44a4      	add	ip, r4
 800e378:	80ef      	strh	r7, [r5, #6]
 800e37a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800e37e:	eb08 0503 	add.w	r5, r8, r3
 800e382:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e386:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800e38a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e38e:	ea5e 0307 	orrs.w	r3, lr, r7
 800e392:	d011      	beq.n	800e3b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e394:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800e398:	f1be 0f00 	cmp.w	lr, #0
 800e39c:	db0c      	blt.n	800e3b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e39e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e3a0:	45be      	cmp	lr, r7
 800e3a2:	da09      	bge.n	800e3b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 800e3a4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800e3a8:	45be      	cmp	lr, r7
 800e3aa:	bf3c      	itt	cc
 800e3ac:	f10c 0708 	addcc.w	r7, ip, #8
 800e3b0:	6107      	strcc	r7, [r0, #16]
 800e3b2:	f10e 0701 	add.w	r7, lr, #1
 800e3b6:	6087      	str	r7, [r0, #8]
 800e3b8:	6907      	ldr	r7, [r0, #16]
 800e3ba:	b213      	sxth	r3, r2
 800e3bc:	4555      	cmp	r5, sl
 800e3be:	9310      	str	r3, [sp, #64]	; 0x40
 800e3c0:	807b      	strh	r3, [r7, #2]
 800e3c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e3c4:	803d      	strh	r5, [r7, #0]
 800e3c6:	80be      	strh	r6, [r7, #4]
 800e3c8:	eb04 0c03 	add.w	ip, r4, r3
 800e3cc:	80fe      	strh	r6, [r7, #6]
 800e3ce:	d050      	beq.n	800e472 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
 800e3d0:	9b01      	ldr	r3, [sp, #4]
 800e3d2:	eba3 070c 	sub.w	r7, r3, ip
 800e3d6:	ebab 0301 	sub.w	r3, fp, r1
 800e3da:	443c      	add	r4, r7
 800e3dc:	9309      	str	r3, [sp, #36]	; 0x24
 800e3de:	0164      	lsls	r4, r4, #5
 800e3e0:	fb94 f8f1 	sdiv	r8, r4, r1
 800e3e4:	fb01 4418 	mls	r4, r1, r8, r4
 800e3e8:	2c00      	cmp	r4, #0
 800e3ea:	bfbc      	itt	lt
 800e3ec:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e3f0:	1864      	addlt	r4, r4, r1
 800e3f2:	f108 0701 	add.w	r7, r8, #1
 800e3f6:	9711      	str	r7, [sp, #68]	; 0x44
 800e3f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e3fa:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e3fe:	191b      	adds	r3, r3, r4
 800e400:	f8be b004 	ldrh.w	fp, [lr, #4]
 800e404:	bf54      	ite	pl
 800e406:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800e408:	4647      	movmi	r7, r8
 800e40a:	9309      	str	r3, [sp, #36]	; 0x24
 800e40c:	bf58      	it	pl
 800e40e:	1a5b      	subpl	r3, r3, r1
 800e410:	44bb      	add	fp, r7
 800e412:	44bc      	add	ip, r7
 800e414:	bf58      	it	pl
 800e416:	9309      	strpl	r3, [sp, #36]	; 0x24
 800e418:	f8ae b004 	strh.w	fp, [lr, #4]
 800e41c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e420:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e424:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800e426:	f8ae b006 	strh.w	fp, [lr, #6]
 800e42a:	443d      	add	r5, r7
 800e42c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800e430:	f8be b006 	ldrh.w	fp, [lr, #6]
 800e434:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800e438:	ea5b 0307 	orrs.w	r3, fp, r7
 800e43c:	d011      	beq.n	800e462 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e43e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800e442:	f1bb 0f00 	cmp.w	fp, #0
 800e446:	db0c      	blt.n	800e462 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e448:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e44a:	45bb      	cmp	fp, r7
 800e44c:	da09      	bge.n	800e462 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 800e44e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e452:	45bb      	cmp	fp, r7
 800e454:	bf3c      	itt	cc
 800e456:	f10e 0708 	addcc.w	r7, lr, #8
 800e45a:	6107      	strcc	r7, [r0, #16]
 800e45c:	f10b 0701 	add.w	r7, fp, #1
 800e460:	6087      	str	r7, [r0, #8]
 800e462:	6907      	ldr	r7, [r0, #16]
 800e464:	4555      	cmp	r5, sl
 800e466:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e468:	803d      	strh	r5, [r7, #0]
 800e46a:	807b      	strh	r3, [r7, #2]
 800e46c:	80be      	strh	r6, [r7, #4]
 800e46e:	80fe      	strh	r6, [r7, #6]
 800e470:	d1c2      	bne.n	800e3f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
 800e472:	9b01      	ldr	r3, [sp, #4]
 800e474:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e476:	eba3 0c0c 	sub.w	ip, r3, ip
 800e47a:	6903      	ldr	r3, [r0, #16]
 800e47c:	3720      	adds	r7, #32
 800e47e:	8899      	ldrh	r1, [r3, #4]
 800e480:	4461      	add	r1, ip
 800e482:	8099      	strh	r1, [r3, #4]
 800e484:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e486:	1a7f      	subs	r7, r7, r1
 800e488:	88d9      	ldrh	r1, [r3, #6]
 800e48a:	fb0c 1c07 	mla	ip, ip, r7, r1
 800e48e:	f8a3 c006 	strh.w	ip, [r3, #6]
 800e492:	e613      	b.n	800e0bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 800e494:	f04f 34ff 	mov.w	r4, #4294967295
 800e498:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e49a:	4249      	negs	r1, r1
 800e49c:	940d      	str	r4, [sp, #52]	; 0x34
 800e49e:	2400      	movs	r4, #0
 800e4a0:	437b      	muls	r3, r7
 800e4a2:	e758      	b.n	800e356 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
 800e4a4:	9905      	ldr	r1, [sp, #20]
 800e4a6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800e4aa:	f009 0c1f 	and.w	ip, r9, #31
 800e4ae:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800e4b2:	f001 011f 	and.w	r1, r1, #31
 800e4b6:	45f3      	cmp	fp, lr
 800e4b8:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800e4bc:	9102      	str	r1, [sp, #8]
 800e4be:	9904      	ldr	r1, [sp, #16]
 800e4c0:	eba1 0406 	sub.w	r4, r1, r6
 800e4c4:	d108      	bne.n	800e4d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
 800e4c6:	9b02      	ldr	r3, [sp, #8]
 800e4c8:	44a0      	add	r8, r4
 800e4ca:	449c      	add	ip, r3
 800e4cc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e4d0:	fb04 a40c 	mla	r4, r4, ip, sl
 800e4d4:	80fc      	strh	r4, [r7, #6]
 800e4d6:	e461      	b.n	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 800e4d8:	9905      	ldr	r1, [sp, #20]
 800e4da:	ebb1 0109 	subs.w	r1, r1, r9
 800e4de:	bf51      	iteee	pl
 800e4e0:	f1cc 0520 	rsbpl	r5, ip, #32
 800e4e4:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e4e8:	4249      	negmi	r1, r1
 800e4ea:	2500      	movmi	r5, #0
 800e4ec:	bf5d      	ittte	pl
 800e4ee:	436c      	mulpl	r4, r5
 800e4f0:	2520      	movpl	r5, #32
 800e4f2:	f04f 0901 	movpl.w	r9, #1
 800e4f6:	f04f 39ff 	movmi.w	r9, #4294967295
 800e4fa:	9501      	str	r5, [sp, #4]
 800e4fc:	9b01      	ldr	r3, [sp, #4]
 800e4fe:	fb94 f5f1 	sdiv	r5, r4, r1
 800e502:	fb01 4415 	mls	r4, r1, r5, r4
 800e506:	449c      	add	ip, r3
 800e508:	eb0b 0309 	add.w	r3, fp, r9
 800e50c:	2c00      	cmp	r4, #0
 800e50e:	bfbc      	itt	lt
 800e510:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e514:	1864      	addlt	r4, r4, r1
 800e516:	44a8      	add	r8, r5
 800e518:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e51c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e520:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e524:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e528:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e52c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e530:	ea58 0707 	orrs.w	r7, r8, r7
 800e534:	d011      	beq.n	800e55a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e536:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e53a:	f1b8 0f00 	cmp.w	r8, #0
 800e53e:	db0c      	blt.n	800e55a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e540:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e542:	45b8      	cmp	r8, r7
 800e544:	da09      	bge.n	800e55a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 800e546:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e54a:	45b8      	cmp	r8, r7
 800e54c:	bf3c      	itt	cc
 800e54e:	f10c 0708 	addcc.w	r7, ip, #8
 800e552:	6107      	strcc	r7, [r0, #16]
 800e554:	f108 0701 	add.w	r7, r8, #1
 800e558:	6087      	str	r7, [r0, #8]
 800e55a:	6907      	ldr	r7, [r0, #16]
 800e55c:	f04f 0c00 	mov.w	ip, #0
 800e560:	b212      	sxth	r2, r2
 800e562:	459e      	cmp	lr, r3
 800e564:	803b      	strh	r3, [r7, #0]
 800e566:	442e      	add	r6, r5
 800e568:	807a      	strh	r2, [r7, #2]
 800e56a:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e56e:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e572:	d04b      	beq.n	800e60c <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 800e574:	9f04      	ldr	r7, [sp, #16]
 800e576:	1a64      	subs	r4, r4, r1
 800e578:	f04f 0a00 	mov.w	sl, #0
 800e57c:	1bbf      	subs	r7, r7, r6
 800e57e:	443d      	add	r5, r7
 800e580:	016d      	lsls	r5, r5, #5
 800e582:	fb95 f8f1 	sdiv	r8, r5, r1
 800e586:	fb01 5518 	mls	r5, r1, r8, r5
 800e58a:	4565      	cmp	r5, ip
 800e58c:	bfbc      	itt	lt
 800e58e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e592:	186d      	addlt	r5, r5, r1
 800e594:	f108 0701 	add.w	r7, r8, #1
 800e598:	9703      	str	r7, [sp, #12]
 800e59a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e59e:	1964      	adds	r4, r4, r5
 800e5a0:	444b      	add	r3, r9
 800e5a2:	bf54      	ite	pl
 800e5a4:	9f03      	ldrpl	r7, [sp, #12]
 800e5a6:	4647      	movmi	r7, r8
 800e5a8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e5ac:	bf58      	it	pl
 800e5ae:	1a64      	subpl	r4, r4, r1
 800e5b0:	443e      	add	r6, r7
 800e5b2:	44bb      	add	fp, r7
 800e5b4:	f8ac b004 	strh.w	fp, [ip, #4]
 800e5b8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e5bc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e5c0:	f8ac b006 	strh.w	fp, [ip, #6]
 800e5c4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e5c8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e5cc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e5d0:	ea5b 0707 	orrs.w	r7, fp, r7
 800e5d4:	d011      	beq.n	800e5fa <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e5d6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e5da:	f1bb 0f00 	cmp.w	fp, #0
 800e5de:	db0c      	blt.n	800e5fa <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e5e0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e5e2:	45bb      	cmp	fp, r7
 800e5e4:	da09      	bge.n	800e5fa <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 800e5e6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e5ea:	45bb      	cmp	fp, r7
 800e5ec:	bf3c      	itt	cc
 800e5ee:	f10c 0708 	addcc.w	r7, ip, #8
 800e5f2:	6107      	strcc	r7, [r0, #16]
 800e5f4:	f10b 0701 	add.w	r7, fp, #1
 800e5f8:	6087      	str	r7, [r0, #8]
 800e5fa:	6907      	ldr	r7, [r0, #16]
 800e5fc:	459e      	cmp	lr, r3
 800e5fe:	803b      	strh	r3, [r7, #0]
 800e600:	807a      	strh	r2, [r7, #2]
 800e602:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e606:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e60a:	d1c6      	bne.n	800e59a <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
 800e60c:	9b04      	ldr	r3, [sp, #16]
 800e60e:	1b9e      	subs	r6, r3, r6
 800e610:	6903      	ldr	r3, [r0, #16]
 800e612:	889a      	ldrh	r2, [r3, #4]
 800e614:	4432      	add	r2, r6
 800e616:	809a      	strh	r2, [r3, #4]
 800e618:	9a02      	ldr	r2, [sp, #8]
 800e61a:	f102 0c20 	add.w	ip, r2, #32
 800e61e:	9a01      	ldr	r2, [sp, #4]
 800e620:	ebac 0c02 	sub.w	ip, ip, r2
 800e624:	88da      	ldrh	r2, [r3, #6]
 800e626:	fb06 260c 	mla	r6, r6, ip, r2
 800e62a:	80de      	strh	r6, [r3, #6]
 800e62c:	f7ff bbb6 	b.w	800dd9c <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

0800e630 <_ZN8touchgfx7Outline6lineToEii>:
 800e630:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e632:	079b      	lsls	r3, r3, #30
 800e634:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e636:	460e      	mov	r6, r1
 800e638:	4615      	mov	r5, r2
 800e63a:	d511      	bpl.n	800e660 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e63c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e640:	ea86 0701 	eor.w	r7, r6, r1
 800e644:	ea85 0302 	eor.w	r3, r5, r2
 800e648:	433b      	orrs	r3, r7
 800e64a:	d009      	beq.n	800e660 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e64c:	4633      	mov	r3, r6
 800e64e:	9500      	str	r5, [sp, #0]
 800e650:	f7ff fb4c 	bl	800dcec <_ZN8touchgfx7Outline10renderLineEiiii>
 800e654:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e656:	f043 0301 	orr.w	r3, r3, #1
 800e65a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e65e:	6243      	str	r3, [r0, #36]	; 0x24
 800e660:	b003      	add	sp, #12
 800e662:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e664 <_ZN8touchgfx7Outline6moveToEii>:
 800e664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e666:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e668:	4615      	mov	r5, r2
 800e66a:	4604      	mov	r4, r0
 800e66c:	460e      	mov	r6, r1
 800e66e:	079a      	lsls	r2, r3, #30
 800e670:	d401      	bmi.n	800e676 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e672:	f7ff fb07 	bl	800dc84 <_ZN8touchgfx7Outline5resetEv>
 800e676:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e678:	07db      	lsls	r3, r3, #31
 800e67a:	d504      	bpl.n	800e686 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e67c:	4620      	mov	r0, r4
 800e67e:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e682:	f7ff ffd5 	bl	800e630 <_ZN8touchgfx7Outline6lineToEii>
 800e686:	6923      	ldr	r3, [r4, #16]
 800e688:	1170      	asrs	r0, r6, #5
 800e68a:	1169      	asrs	r1, r5, #5
 800e68c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e690:	4290      	cmp	r0, r2
 800e692:	d103      	bne.n	800e69c <_ZN8touchgfx7Outline6moveToEii+0x38>
 800e694:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e698:	4291      	cmp	r1, r2
 800e69a:	d01a      	beq.n	800e6d2 <_ZN8touchgfx7Outline6moveToEii+0x6e>
 800e69c:	88df      	ldrh	r7, [r3, #6]
 800e69e:	889a      	ldrh	r2, [r3, #4]
 800e6a0:	433a      	orrs	r2, r7
 800e6a2:	d010      	beq.n	800e6c6 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e6a4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e6a8:	2a00      	cmp	r2, #0
 800e6aa:	db0c      	blt.n	800e6c6 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e6ac:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800e6ae:	42ba      	cmp	r2, r7
 800e6b0:	da09      	bge.n	800e6c6 <_ZN8touchgfx7Outline6moveToEii+0x62>
 800e6b2:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e6b6:	42ba      	cmp	r2, r7
 800e6b8:	f102 0201 	add.w	r2, r2, #1
 800e6bc:	bf38      	it	cc
 800e6be:	3308      	addcc	r3, #8
 800e6c0:	60a2      	str	r2, [r4, #8]
 800e6c2:	bf38      	it	cc
 800e6c4:	6123      	strcc	r3, [r4, #16]
 800e6c6:	6923      	ldr	r3, [r4, #16]
 800e6c8:	2200      	movs	r2, #0
 800e6ca:	8018      	strh	r0, [r3, #0]
 800e6cc:	8059      	strh	r1, [r3, #2]
 800e6ce:	809a      	strh	r2, [r3, #4]
 800e6d0:	80da      	strh	r2, [r3, #6]
 800e6d2:	6166      	str	r6, [r4, #20]
 800e6d4:	6225      	str	r5, [r4, #32]
 800e6d6:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e6da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e6dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e6dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e6e0:	b0d0      	sub	sp, #320	; 0x140
 800e6e2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e6e6:	466c      	mov	r4, sp
 800e6e8:	4627      	mov	r7, r4
 800e6ea:	1a0d      	subs	r5, r1, r0
 800e6ec:	f100 0308 	add.w	r3, r0, #8
 800e6f0:	2d48      	cmp	r5, #72	; 0x48
 800e6f2:	f340 80d5 	ble.w	800e8a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e6f6:	112d      	asrs	r5, r5, #4
 800e6f8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e6fc:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e700:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e704:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e708:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e70c:	6816      	ldr	r6, [r2, #0]
 800e70e:	6006      	str	r6, [r0, #0]
 800e710:	6856      	ldr	r6, [r2, #4]
 800e712:	6046      	str	r6, [r0, #4]
 800e714:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e718:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e71c:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e720:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e724:	f1a1 0208 	sub.w	r2, r1, #8
 800e728:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e72c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e730:	4565      	cmp	r5, ip
 800e732:	db06      	blt.n	800e742 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e734:	d119      	bne.n	800e76a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e736:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e73a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e73e:	42ae      	cmp	r6, r5
 800e740:	dd13      	ble.n	800e76a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e742:	460e      	mov	r6, r1
 800e744:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e748:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e74c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e750:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e754:	601d      	str	r5, [r3, #0]
 800e756:	6875      	ldr	r5, [r6, #4]
 800e758:	605d      	str	r5, [r3, #4]
 800e75a:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e75e:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e762:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e766:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e76a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e76e:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e772:	42ae      	cmp	r6, r5
 800e774:	db06      	blt.n	800e784 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e776:	d116      	bne.n	800e7a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e778:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e77c:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e780:	45ac      	cmp	ip, r5
 800e782:	da10      	bge.n	800e7a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e784:	681d      	ldr	r5, [r3, #0]
 800e786:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e78a:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e78e:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e792:	6005      	str	r5, [r0, #0]
 800e794:	685d      	ldr	r5, [r3, #4]
 800e796:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e79a:	6045      	str	r5, [r0, #4]
 800e79c:	8146      	strh	r6, [r0, #10]
 800e79e:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e7a2:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e7a6:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e7aa:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e7ae:	4565      	cmp	r5, ip
 800e7b0:	db06      	blt.n	800e7c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e7b2:	d119      	bne.n	800e7e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e7b4:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e7b8:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e7bc:	42ae      	cmp	r6, r5
 800e7be:	da13      	bge.n	800e7e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e7c0:	460e      	mov	r6, r1
 800e7c2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e7c6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e7ca:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e7ce:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e7d2:	6005      	str	r5, [r0, #0]
 800e7d4:	6875      	ldr	r5, [r6, #4]
 800e7d6:	6045      	str	r5, [r0, #4]
 800e7d8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e7dc:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e7e0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e7e4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e7e8:	3308      	adds	r3, #8
 800e7ea:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e7ee:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e7f2:	45e6      	cmp	lr, ip
 800e7f4:	dbf8      	blt.n	800e7e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e7f6:	d105      	bne.n	800e804 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e7f8:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e7fc:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e800:	42ae      	cmp	r6, r5
 800e802:	dbf1      	blt.n	800e7e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e804:	4615      	mov	r5, r2
 800e806:	3a08      	subs	r2, #8
 800e808:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e80c:	45b4      	cmp	ip, r6
 800e80e:	dbf9      	blt.n	800e804 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e810:	d105      	bne.n	800e81e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e812:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e816:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e81a:	45b0      	cmp	r8, r6
 800e81c:	dbf2      	blt.n	800e804 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e81e:	4293      	cmp	r3, r2
 800e820:	f1a5 0608 	sub.w	r6, r5, #8
 800e824:	d816      	bhi.n	800e854 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e826:	f8d6 c000 	ldr.w	ip, [r6]
 800e82a:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e82e:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e832:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e836:	f8c3 c000 	str.w	ip, [r3]
 800e83a:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e83e:	f8c3 c004 	str.w	ip, [r3, #4]
 800e842:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e846:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e84a:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e84e:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e852:	e7c9      	b.n	800e7e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e854:	f8d6 e000 	ldr.w	lr, [r6]
 800e858:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e85c:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e860:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e864:	f8c0 e000 	str.w	lr, [r0]
 800e868:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e86c:	1a16      	subs	r6, r2, r0
 800e86e:	f8c0 e004 	str.w	lr, [r0, #4]
 800e872:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e876:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e87a:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e87e:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e882:	1acd      	subs	r5, r1, r3
 800e884:	10ed      	asrs	r5, r5, #3
 800e886:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e88a:	bfb5      	itete	lt
 800e88c:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e890:	e9c4 3100 	strdge	r3, r1, [r4]
 800e894:	460a      	movlt	r2, r1
 800e896:	4603      	movge	r3, r0
 800e898:	3408      	adds	r4, #8
 800e89a:	4618      	mov	r0, r3
 800e89c:	4611      	mov	r1, r2
 800e89e:	e724      	b.n	800e6ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e8a0:	4299      	cmp	r1, r3
 800e8a2:	d927      	bls.n	800e8f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
 800e8a4:	f1a3 0210 	sub.w	r2, r3, #16
 800e8a8:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e8ac:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e8b0:	45ac      	cmp	ip, r5
 800e8b2:	db06      	blt.n	800e8c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e8b4:	d11c      	bne.n	800e8f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800e8b6:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e8ba:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e8be:	42ae      	cmp	r6, r5
 800e8c0:	da16      	bge.n	800e8f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 800e8c2:	4615      	mov	r5, r2
 800e8c4:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e8c8:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e8cc:	3a08      	subs	r2, #8
 800e8ce:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e8d2:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
 800e8d6:	6196      	str	r6, [r2, #24]
 800e8d8:	42a8      	cmp	r0, r5
 800e8da:	686e      	ldr	r6, [r5, #4]
 800e8dc:	f8a2 9010 	strh.w	r9, [r2, #16]
 800e8e0:	61d6      	str	r6, [r2, #28]
 800e8e2:	f8a2 c012 	strh.w	ip, [r2, #18]
 800e8e6:	f8a2 8014 	strh.w	r8, [r2, #20]
 800e8ea:	f8a2 e016 	strh.w	lr, [r2, #22]
 800e8ee:	d1db      	bne.n	800e8a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e8f0:	3308      	adds	r3, #8
 800e8f2:	e7d5      	b.n	800e8a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e8f4:	42bc      	cmp	r4, r7
 800e8f6:	d903      	bls.n	800e900 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
 800e8f8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e8fc:	3c08      	subs	r4, #8
 800e8fe:	e6f4      	b.n	800e6ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e900:	b050      	add	sp, #320	; 0x140
 800e902:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e906 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e906:	b510      	push	{r4, lr}
 800e908:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e90a:	4604      	mov	r4, r0
 800e90c:	07da      	lsls	r2, r3, #31
 800e90e:	d507      	bpl.n	800e920 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e910:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e914:	f7ff fe8c 	bl	800e630 <_ZN8touchgfx7Outline6lineToEii>
 800e918:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e91a:	f023 0301 	bic.w	r3, r3, #1
 800e91e:	6243      	str	r3, [r0, #36]	; 0x24
 800e920:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e922:	079b      	lsls	r3, r3, #30
 800e924:	d521      	bpl.n	800e96a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e926:	6923      	ldr	r3, [r4, #16]
 800e928:	88d9      	ldrh	r1, [r3, #6]
 800e92a:	889a      	ldrh	r2, [r3, #4]
 800e92c:	430a      	orrs	r2, r1
 800e92e:	d010      	beq.n	800e952 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e930:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e934:	2a00      	cmp	r2, #0
 800e936:	db0c      	blt.n	800e952 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e938:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e93a:	428a      	cmp	r2, r1
 800e93c:	da09      	bge.n	800e952 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e93e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e942:	4291      	cmp	r1, r2
 800e944:	f102 0201 	add.w	r2, r2, #1
 800e948:	bf88      	it	hi
 800e94a:	3308      	addhi	r3, #8
 800e94c:	60a2      	str	r2, [r4, #8]
 800e94e:	bf88      	it	hi
 800e950:	6123      	strhi	r3, [r4, #16]
 800e952:	68a1      	ldr	r1, [r4, #8]
 800e954:	b129      	cbz	r1, 800e962 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e956:	6863      	ldr	r3, [r4, #4]
 800e958:	4299      	cmp	r1, r3
 800e95a:	d802      	bhi.n	800e962 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e95c:	68e0      	ldr	r0, [r4, #12]
 800e95e:	f7ff febd 	bl	800e6dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e962:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e964:	f023 0302 	bic.w	r3, r3, #2
 800e968:	6263      	str	r3, [r4, #36]	; 0x24
 800e96a:	68e0      	ldr	r0, [r4, #12]
 800e96c:	bd10      	pop	{r4, pc}
	...

0800e970 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e970:	4b02      	ldr	r3, [pc, #8]	; (800e97c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e972:	6018      	str	r0, [r3, #0]
 800e974:	4b02      	ldr	r3, [pc, #8]	; (800e980 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e976:	6019      	str	r1, [r3, #0]
 800e978:	4770      	bx	lr
 800e97a:	bf00      	nop
 800e97c:	2400e42c 	.word	0x2400e42c
 800e980:	2400e430 	.word	0x2400e430

0800e984 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800e984:	2300      	movs	r3, #0
 800e986:	4a02      	ldr	r2, [pc, #8]	; (800e990 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800e988:	6013      	str	r3, [r2, #0]
 800e98a:	4a02      	ldr	r2, [pc, #8]	; (800e994 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800e98c:	6013      	str	r3, [r2, #0]
 800e98e:	4770      	bx	lr
 800e990:	2400e42c 	.word	0x2400e42c
 800e994:	2400e430 	.word	0x2400e430

0800e998 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e998:	4b01      	ldr	r3, [pc, #4]	; (800e9a0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e99a:	6818      	ldr	r0, [r3, #0]
 800e99c:	4770      	bx	lr
 800e99e:	bf00      	nop
 800e9a0:	2400e42c 	.word	0x2400e42c

0800e9a4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e9a4:	4b01      	ldr	r3, [pc, #4]	; (800e9ac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e9a6:	6818      	ldr	r0, [r3, #0]
 800e9a8:	4770      	bx	lr
 800e9aa:	bf00      	nop
 800e9ac:	2400e430 	.word	0x2400e430

0800e9b0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e9b0:	b510      	push	{r4, lr}
 800e9b2:	6803      	ldr	r3, [r0, #0]
 800e9b4:	460c      	mov	r4, r1
 800e9b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9b8:	4798      	blx	r3
 800e9ba:	1b03      	subs	r3, r0, r4
 800e9bc:	4258      	negs	r0, r3
 800e9be:	4158      	adcs	r0, r3
 800e9c0:	bd10      	pop	{r4, pc}
	...

0800e9c4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e9c4:	4b01      	ldr	r3, [pc, #4]	; (800e9cc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e9c6:	6019      	str	r1, [r3, #0]
 800e9c8:	4770      	bx	lr
 800e9ca:	bf00      	nop
 800e9cc:	2400e434 	.word	0x2400e434

0800e9d0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9d4:	4696      	mov	lr, r2
 800e9d6:	b097      	sub	sp, #92	; 0x5c
 800e9d8:	4605      	mov	r5, r0
 800e9da:	4614      	mov	r4, r2
 800e9dc:	460e      	mov	r6, r1
 800e9de:	461f      	mov	r7, r3
 800e9e0:	f10d 0c1c 	add.w	ip, sp, #28
 800e9e4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800e9e8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800e9ec:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800e9f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e9f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e9f8:	f8de 3000 	ldr.w	r3, [lr]
 800e9fc:	f104 0e14 	add.w	lr, r4, #20
 800ea00:	f8cc 3000 	str.w	r3, [ip]
 800ea04:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ea08:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ea0c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ea10:	f8de 3000 	ldr.w	r3, [lr]
 800ea14:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ea18:	f8cc 3000 	str.w	r3, [ip]
 800ea1c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ea20:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ea24:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ea28:	f8de 3000 	ldr.w	r3, [lr]
 800ea2c:	4631      	mov	r1, r6
 800ea2e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ea30:	4628      	mov	r0, r5
 800ea32:	f8cc 3000 	str.w	r3, [ip]
 800ea36:	682b      	ldr	r3, [r5, #0]
 800ea38:	9201      	str	r2, [sp, #4]
 800ea3a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ea3c:	f8cd 8008 	str.w	r8, [sp, #8]
 800ea40:	9200      	str	r2, [sp, #0]
 800ea42:	aa07      	add	r2, sp, #28
 800ea44:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ea48:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800ea4c:	463b      	mov	r3, r7
 800ea4e:	47d8      	blx	fp
 800ea50:	46a6      	mov	lr, r4
 800ea52:	f10d 0c1c 	add.w	ip, sp, #28
 800ea56:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ea5a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ea5e:	f8de 3000 	ldr.w	r3, [lr]
 800ea62:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ea66:	343c      	adds	r4, #60	; 0x3c
 800ea68:	f8cc 3000 	str.w	r3, [ip]
 800ea6c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ea70:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ea74:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ea78:	f8de 3000 	ldr.w	r3, [lr]
 800ea7c:	f8cc 3000 	str.w	r3, [ip]
 800ea80:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ea84:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ea86:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ea8a:	6823      	ldr	r3, [r4, #0]
 800ea8c:	4631      	mov	r1, r6
 800ea8e:	4628      	mov	r0, r5
 800ea90:	f8cc 3000 	str.w	r3, [ip]
 800ea94:	682b      	ldr	r3, [r5, #0]
 800ea96:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ea9a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ea9c:	f8cd 8008 	str.w	r8, [sp, #8]
 800eaa0:	9201      	str	r2, [sp, #4]
 800eaa2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800eaa4:	9200      	str	r2, [sp, #0]
 800eaa6:	aa07      	add	r2, sp, #28
 800eaa8:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800eaaa:	463b      	mov	r3, r7
 800eaac:	47a0      	blx	r4
 800eaae:	b017      	add	sp, #92	; 0x5c
 800eab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eab4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800eab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eab8:	b08d      	sub	sp, #52	; 0x34
 800eaba:	4688      	mov	r8, r1
 800eabc:	f8d3 c000 	ldr.w	ip, [r3]
 800eac0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800eac2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800eac6:	680f      	ldr	r7, [r1, #0]
 800eac8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800eacc:	eba7 070c 	sub.w	r7, r7, ip
 800ead0:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800ead4:	edd3 6a07 	vldr	s13, [r3, #28]
 800ead8:	42bc      	cmp	r4, r7
 800eada:	9918      	ldr	r1, [sp, #96]	; 0x60
 800eadc:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800eae0:	bfa8      	it	ge
 800eae2:	463c      	movge	r4, r7
 800eae4:	f9b1 9000 	ldrsh.w	r9, [r1]
 800eae8:	f9ba 1000 	ldrsh.w	r1, [sl]
 800eaec:	ee07 4a90 	vmov	s15, r4
 800eaf0:	eb09 0e0c 	add.w	lr, r9, ip
 800eaf4:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800eaf8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800eafc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800eb00:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800eb04:	4571      	cmp	r1, lr
 800eb06:	ee25 4a04 	vmul.f32	s8, s10, s8
 800eb0a:	ee65 4a24 	vmul.f32	s9, s10, s9
 800eb0e:	ee25 5a27 	vmul.f32	s10, s10, s15
 800eb12:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800eb16:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800eb1a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800eb1e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800eb22:	ee36 0a84 	vadd.f32	s0, s13, s8
 800eb26:	ee61 1a87 	vmul.f32	s3, s3, s14
 800eb2a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800eb2e:	f340 808c 	ble.w	800ec4a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800eb32:	eba1 060e 	sub.w	r6, r1, lr
 800eb36:	fb96 f5f4 	sdiv	r5, r6, r4
 800eb3a:	ee07 5a10 	vmov	s14, r5
 800eb3e:	2d00      	cmp	r5, #0
 800eb40:	fb04 6615 	mls	r6, r4, r5, r6
 800eb44:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eb48:	eea7 0a04 	vfma.f32	s0, s14, s8
 800eb4c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800eb50:	eea7 1a05 	vfma.f32	s2, s14, s10
 800eb54:	dd12      	ble.n	800eb7c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800eb56:	ee70 6a44 	vsub.f32	s13, s0, s8
 800eb5a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800eb5e:	ee31 2a45 	vsub.f32	s4, s2, s10
 800eb62:	eef5 6a40 	vcmp.f32	s13, #0.0
 800eb66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eb6a:	bf14      	ite	ne
 800eb6c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800eb70:	eeb0 7a67 	vmoveq.f32	s14, s15
 800eb74:	ee61 1a87 	vmul.f32	s3, s3, s14
 800eb78:	ee22 2a07 	vmul.f32	s4, s4, s14
 800eb7c:	fb05 f204 	mul.w	r2, r5, r4
 800eb80:	1abf      	subs	r7, r7, r2
 800eb82:	4494      	add	ip, r2
 800eb84:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800eb88:	4411      	add	r1, r2
 800eb8a:	eb09 020c 	add.w	r2, r9, ip
 800eb8e:	b209      	sxth	r1, r1
 800eb90:	443a      	add	r2, r7
 800eb92:	428a      	cmp	r2, r1
 800eb94:	bfc4      	itt	gt
 800eb96:	eba1 0209 	subgt.w	r2, r1, r9
 800eb9a:	eba2 070c 	subgt.w	r7, r2, ip
 800eb9e:	2f00      	cmp	r7, #0
 800eba0:	dd50      	ble.n	800ec44 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800eba2:	fb97 f1f4 	sdiv	r1, r7, r4
 800eba6:	fb04 7211 	mls	r2, r4, r1, r7
 800ebaa:	b90a      	cbnz	r2, 800ebb0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800ebac:	3901      	subs	r1, #1
 800ebae:	4622      	mov	r2, r4
 800ebb0:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800ebb4:	6840      	ldr	r0, [r0, #4]
 800ebb6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800ebba:	44b6      	add	lr, r6
 800ebbc:	f8d0 a000 	ldr.w	sl, [r0]
 800ebc0:	2900      	cmp	r1, #0
 800ebc2:	bfcc      	ite	gt
 800ebc4:	46a1      	movgt	r9, r4
 800ebc6:	4691      	movle	r9, r2
 800ebc8:	900b      	str	r0, [sp, #44]	; 0x2c
 800ebca:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800ebcc:	fb04 e505 	mla	r5, r4, r5, lr
 800ebd0:	eef0 6a42 	vmov.f32	s13, s4
 800ebd4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800ebd8:	9008      	str	r0, [sp, #32]
 800ebda:	eeb0 7a61 	vmov.f32	s14, s3
 800ebde:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ebe0:	695b      	ldr	r3, [r3, #20]
 800ebe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ebe6:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800ebea:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800ebee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ebf0:	445b      	add	r3, fp
 800ebf2:	9307      	str	r3, [sp, #28]
 800ebf4:	ee16 3a90 	vmov	r3, s13
 800ebf8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800ebfc:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ec00:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ec04:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ec08:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ec0c:	ee17 7a90 	vmov	r7, s15
 800ec10:	ee73 7a42 	vsub.f32	s15, s6, s4
 800ec14:	fb97 f7f4 	sdiv	r7, r7, r4
 800ec18:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ec1c:	ee17 ca90 	vmov	ip, s15
 800ec20:	fb9c fcf4 	sdiv	ip, ip, r4
 800ec24:	fb0c 3306 	mla	r3, ip, r6, r3
 800ec28:	9302      	str	r3, [sp, #8]
 800ec2a:	ee17 3a10 	vmov	r3, s14
 800ec2e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800ec32:	fb07 3706 	mla	r7, r7, r6, r3
 800ec36:	eba9 0306 	sub.w	r3, r9, r6
 800ec3a:	e9cd 4700 	strd	r4, r7, [sp]
 800ec3e:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ec42:	47a0      	blx	r4
 800ec44:	b00d      	add	sp, #52	; 0x34
 800ec46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec4a:	2500      	movs	r5, #0
 800ec4c:	462e      	mov	r6, r5
 800ec4e:	e799      	b.n	800eb84 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800ec50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ec50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec54:	b0db      	sub	sp, #364	; 0x16c
 800ec56:	461d      	mov	r5, r3
 800ec58:	4614      	mov	r4, r2
 800ec5a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800ec5e:	910f      	str	r1, [sp, #60]	; 0x3c
 800ec60:	4629      	mov	r1, r5
 800ec62:	930a      	str	r3, [sp, #40]	; 0x28
 800ec64:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800ec68:	9009      	str	r0, [sp, #36]	; 0x24
 800ec6a:	930b      	str	r3, [sp, #44]	; 0x2c
 800ec6c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800ec70:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800ec74:	9310      	str	r3, [sp, #64]	; 0x40
 800ec76:	6803      	ldr	r3, [r0, #0]
 800ec78:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800ec7a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800ec7e:	47b8      	blx	r7
 800ec80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ec82:	6058      	str	r0, [r3, #4]
 800ec84:	2800      	cmp	r0, #0
 800ec86:	f000 83a1 	beq.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ec8a:	682b      	ldr	r3, [r5, #0]
 800ec8c:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800ec90:	ed94 7a02 	vldr	s14, [r4, #8]
 800ec94:	9314      	str	r3, [sp, #80]	; 0x50
 800ec96:	686b      	ldr	r3, [r5, #4]
 800ec98:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ec9c:	9315      	str	r3, [sp, #84]	; 0x54
 800ec9e:	4bc1      	ldr	r3, [pc, #772]	; (800efa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800eca0:	7819      	ldrb	r1, [r3, #0]
 800eca2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800eca6:	2900      	cmp	r1, #0
 800eca8:	bf16      	itet	ne
 800ecaa:	4619      	movne	r1, r3
 800ecac:	4611      	moveq	r1, r2
 800ecae:	4613      	movne	r3, r2
 800ecb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecb4:	9116      	str	r1, [sp, #88]	; 0x58
 800ecb6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800ecba:	f240 8387 	bls.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ecbe:	ed94 7a07 	vldr	s14, [r4, #28]
 800ecc2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ecc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecca:	f240 837f 	bls.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ecce:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800ecd2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ecd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecda:	f240 8377 	bls.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ecde:	6822      	ldr	r2, [r4, #0]
 800ece0:	4bb1      	ldr	r3, [pc, #708]	; (800efa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ece2:	429a      	cmp	r2, r3
 800ece4:	f2c0 8372 	blt.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ece8:	49b0      	ldr	r1, [pc, #704]	; (800efac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ecea:	6963      	ldr	r3, [r4, #20]
 800ecec:	428a      	cmp	r2, r1
 800ecee:	f300 836d 	bgt.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ecf2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ecf6:	48ae      	ldr	r0, [pc, #696]	; (800efb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ecf8:	33ff      	adds	r3, #255	; 0xff
 800ecfa:	4283      	cmp	r3, r0
 800ecfc:	f200 8366 	bhi.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ed00:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ed02:	4dac      	ldr	r5, [pc, #688]	; (800efb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ed04:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ed08:	33ff      	adds	r3, #255	; 0xff
 800ed0a:	42ab      	cmp	r3, r5
 800ed0c:	f200 835e 	bhi.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ed10:	6862      	ldr	r2, [r4, #4]
 800ed12:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800ed16:	33ff      	adds	r3, #255	; 0xff
 800ed18:	4283      	cmp	r3, r0
 800ed1a:	f200 8357 	bhi.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ed1e:	69a1      	ldr	r1, [r4, #24]
 800ed20:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800ed24:	33ff      	adds	r3, #255	; 0xff
 800ed26:	4283      	cmp	r3, r0
 800ed28:	f200 8350 	bhi.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ed2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ed2e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800ed32:	30ff      	adds	r0, #255	; 0xff
 800ed34:	42a8      	cmp	r0, r5
 800ed36:	f200 8349 	bhi.w	800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ed3a:	428a      	cmp	r2, r1
 800ed3c:	f280 8110 	bge.w	800ef60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ed40:	429a      	cmp	r2, r3
 800ed42:	f300 8119 	bgt.w	800ef78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ed46:	4299      	cmp	r1, r3
 800ed48:	f280 811d 	bge.w	800ef86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ed4c:	2502      	movs	r5, #2
 800ed4e:	2701      	movs	r7, #1
 800ed50:	46a9      	mov	r9, r5
 800ed52:	46b8      	mov	r8, r7
 800ed54:	f04f 0a00 	mov.w	sl, #0
 800ed58:	4621      	mov	r1, r4
 800ed5a:	a849      	add	r0, sp, #292	; 0x124
 800ed5c:	f003 fe1e 	bl	801299c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ed60:	4622      	mov	r2, r4
 800ed62:	4653      	mov	r3, sl
 800ed64:	a949      	add	r1, sp, #292	; 0x124
 800ed66:	f8cd 9000 	str.w	r9, [sp]
 800ed6a:	a819      	add	r0, sp, #100	; 0x64
 800ed6c:	f003 ff46 	bl	8012bfc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ed70:	4622      	mov	r2, r4
 800ed72:	4653      	mov	r3, sl
 800ed74:	a949      	add	r1, sp, #292	; 0x124
 800ed76:	f8cd 8000 	str.w	r8, [sp]
 800ed7a:	a829      	add	r0, sp, #164	; 0xa4
 800ed7c:	f003 ff3e 	bl	8012bfc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ed80:	4643      	mov	r3, r8
 800ed82:	4622      	mov	r2, r4
 800ed84:	a949      	add	r1, sp, #292	; 0x124
 800ed86:	f8cd 9000 	str.w	r9, [sp]
 800ed8a:	a839      	add	r0, sp, #228	; 0xe4
 800ed8c:	f003 ff36 	bl	8012bfc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ed90:	42af      	cmp	r7, r5
 800ed92:	af12      	add	r7, sp, #72	; 0x48
 800ed94:	bfb7      	itett	lt
 800ed96:	2300      	movlt	r3, #0
 800ed98:	2301      	movge	r3, #1
 800ed9a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800ed9c:	ac19      	addlt	r4, sp, #100	; 0x64
 800ed9e:	bfb1      	iteee	lt
 800eda0:	930e      	strlt	r3, [sp, #56]	; 0x38
 800eda2:	ad19      	addge	r5, sp, #100	; 0x64
 800eda4:	930e      	strge	r3, [sp, #56]	; 0x38
 800eda6:	ac29      	addge	r4, sp, #164	; 0xa4
 800eda8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800edaa:	e893 0003 	ldmia.w	r3, {r0, r1}
 800edae:	e887 0003 	stmia.w	r7, {r0, r1}
 800edb2:	b928      	cbnz	r0, 800edc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800edb4:	4b80      	ldr	r3, [pc, #512]	; (800efb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800edb6:	6818      	ldr	r0, [r3, #0]
 800edb8:	6803      	ldr	r3, [r0, #0]
 800edba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800edbc:	4798      	blx	r3
 800edbe:	6038      	str	r0, [r7, #0]
 800edc0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800edc2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800edc6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800edca:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800edcc:	930c      	str	r3, [sp, #48]	; 0x30
 800edce:	990c      	ldr	r1, [sp, #48]	; 0x30
 800edd0:	6963      	ldr	r3, [r4, #20]
 800edd2:	440b      	add	r3, r1
 800edd4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800edd8:	4408      	add	r0, r1
 800edda:	b200      	sxth	r0, r0
 800eddc:	4283      	cmp	r3, r0
 800edde:	900d      	str	r0, [sp, #52]	; 0x34
 800ede0:	f280 80dd 	bge.w	800ef9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ede4:	428b      	cmp	r3, r1
 800ede6:	da08      	bge.n	800edfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ede8:	2a00      	cmp	r2, #0
 800edea:	dd06      	ble.n	800edfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800edec:	1acb      	subs	r3, r1, r3
 800edee:	429a      	cmp	r2, r3
 800edf0:	f2c0 80e4 	blt.w	800efbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800edf4:	2b00      	cmp	r3, #0
 800edf6:	f300 80e2 	bgt.w	800efbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800edfa:	6967      	ldr	r7, [r4, #20]
 800edfc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ee00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ee02:	443b      	add	r3, r7
 800ee04:	461f      	mov	r7, r3
 800ee06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ee08:	1bdf      	subs	r7, r3, r7
 800ee0a:	4297      	cmp	r7, r2
 800ee0c:	bfa8      	it	ge
 800ee0e:	4617      	movge	r7, r2
 800ee10:	2f00      	cmp	r7, #0
 800ee12:	f340 8166 	ble.w	800f0e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ee16:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ee18:	6829      	ldr	r1, [r5, #0]
 800ee1a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ee1e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ee22:	4411      	add	r1, r2
 800ee24:	6820      	ldr	r0, [r4, #0]
 800ee26:	4299      	cmp	r1, r3
 800ee28:	dd1a      	ble.n	800ee60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ee2a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ee2e:	4402      	add	r2, r0
 800ee30:	440b      	add	r3, r1
 800ee32:	b21b      	sxth	r3, r3
 800ee34:	429a      	cmp	r2, r3
 800ee36:	dc13      	bgt.n	800ee60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ee38:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ee3a:	a912      	add	r1, sp, #72	; 0x48
 800ee3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee3e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ee40:	681b      	ldr	r3, [r3, #0]
 800ee42:	9206      	str	r2, [sp, #24]
 800ee44:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ee46:	9500      	str	r5, [sp, #0]
 800ee48:	9205      	str	r2, [sp, #20]
 800ee4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ee4c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ee50:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ee52:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ee56:	aa49      	add	r2, sp, #292	; 0x124
 800ee58:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ee5c:	4623      	mov	r3, r4
 800ee5e:	47c8      	blx	r9
 800ee60:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ee64:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ee68:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ee6c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ee70:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ee74:	68a1      	ldr	r1, [r4, #8]
 800ee76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee7a:	ed94 6a08 	vldr	s12, [r4, #32]
 800ee7e:	edd4 6a07 	vldr	s13, [r4, #28]
 800ee82:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ee86:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ee8a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ee8e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ee92:	edc4 6a07 	vstr	s13, [r4, #28]
 800ee96:	441a      	add	r2, r3
 800ee98:	6963      	ldr	r3, [r4, #20]
 800ee9a:	3301      	adds	r3, #1
 800ee9c:	6022      	str	r2, [r4, #0]
 800ee9e:	6163      	str	r3, [r4, #20]
 800eea0:	69a3      	ldr	r3, [r4, #24]
 800eea2:	3b01      	subs	r3, #1
 800eea4:	61a3      	str	r3, [r4, #24]
 800eea6:	6923      	ldr	r3, [r4, #16]
 800eea8:	440b      	add	r3, r1
 800eeaa:	68e1      	ldr	r1, [r4, #12]
 800eeac:	428b      	cmp	r3, r1
 800eeae:	6123      	str	r3, [r4, #16]
 800eeb0:	db15      	blt.n	800eede <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800eeb2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800eeb6:	3201      	adds	r2, #1
 800eeb8:	1a5b      	subs	r3, r3, r1
 800eeba:	ee76 6a26 	vadd.f32	s13, s12, s13
 800eebe:	6022      	str	r2, [r4, #0]
 800eec0:	6123      	str	r3, [r4, #16]
 800eec2:	edc4 6a07 	vstr	s13, [r4, #28]
 800eec6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800eeca:	ee36 7a87 	vadd.f32	s14, s13, s14
 800eece:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800eed2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800eed6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eeda:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800eede:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800eee2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800eee6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800eeea:	ee37 7a27 	vadd.f32	s14, s14, s15
 800eeee:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800eef2:	68a9      	ldr	r1, [r5, #8]
 800eef4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eef8:	ed95 6a08 	vldr	s12, [r5, #32]
 800eefc:	edd5 6a07 	vldr	s13, [r5, #28]
 800ef00:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ef04:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ef08:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ef0c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ef10:	edc5 6a07 	vstr	s13, [r5, #28]
 800ef14:	441a      	add	r2, r3
 800ef16:	696b      	ldr	r3, [r5, #20]
 800ef18:	3301      	adds	r3, #1
 800ef1a:	602a      	str	r2, [r5, #0]
 800ef1c:	616b      	str	r3, [r5, #20]
 800ef1e:	69ab      	ldr	r3, [r5, #24]
 800ef20:	3b01      	subs	r3, #1
 800ef22:	61ab      	str	r3, [r5, #24]
 800ef24:	692b      	ldr	r3, [r5, #16]
 800ef26:	440b      	add	r3, r1
 800ef28:	68e9      	ldr	r1, [r5, #12]
 800ef2a:	428b      	cmp	r3, r1
 800ef2c:	612b      	str	r3, [r5, #16]
 800ef2e:	db15      	blt.n	800ef5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ef30:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ef34:	3201      	adds	r2, #1
 800ef36:	1a5b      	subs	r3, r3, r1
 800ef38:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ef3c:	602a      	str	r2, [r5, #0]
 800ef3e:	612b      	str	r3, [r5, #16]
 800ef40:	edc5 6a07 	vstr	s13, [r5, #28]
 800ef44:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ef48:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ef4c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ef50:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ef54:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ef58:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ef5c:	3f01      	subs	r7, #1
 800ef5e:	e757      	b.n	800ee10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ef60:	4299      	cmp	r1, r3
 800ef62:	dc13      	bgt.n	800ef8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ef64:	429a      	cmp	r2, r3
 800ef66:	da14      	bge.n	800ef92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ef68:	2502      	movs	r5, #2
 800ef6a:	2703      	movs	r7, #3
 800ef6c:	f04f 0800 	mov.w	r8, #0
 800ef70:	46a9      	mov	r9, r5
 800ef72:	f04f 0a01 	mov.w	sl, #1
 800ef76:	e6ef      	b.n	800ed58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ef78:	2501      	movs	r5, #1
 800ef7a:	2700      	movs	r7, #0
 800ef7c:	46a9      	mov	r9, r5
 800ef7e:	46b8      	mov	r8, r7
 800ef80:	f04f 0a02 	mov.w	sl, #2
 800ef84:	e6e8      	b.n	800ed58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ef86:	2501      	movs	r5, #1
 800ef88:	2702      	movs	r7, #2
 800ef8a:	e6e1      	b.n	800ed50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ef8c:	2500      	movs	r5, #0
 800ef8e:	2701      	movs	r7, #1
 800ef90:	e7f4      	b.n	800ef7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ef92:	2702      	movs	r7, #2
 800ef94:	2503      	movs	r5, #3
 800ef96:	f04f 0900 	mov.w	r9, #0
 800ef9a:	46b8      	mov	r8, r7
 800ef9c:	e7e9      	b.n	800ef72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ef9e:	4613      	mov	r3, r2
 800efa0:	e728      	b.n	800edf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800efa2:	bf00      	nop
 800efa4:	2400e41c 	.word	0x2400e41c
 800efa8:	fffd8f01 	.word	0xfffd8f01
 800efac:	00027100 	.word	0x00027100
 800efb0:	0004e1ff 	.word	0x0004e1ff
 800efb4:	0004e1fe 	.word	0x0004e1fe
 800efb8:	2400e424 	.word	0x2400e424
 800efbc:	4613      	mov	r3, r2
 800efbe:	992b      	ldr	r1, [sp, #172]	; 0xac
 800efc0:	469e      	mov	lr, r3
 800efc2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800efc4:	469c      	mov	ip, r3
 800efc6:	9111      	str	r1, [sp, #68]	; 0x44
 800efc8:	f04f 0900 	mov.w	r9, #0
 800efcc:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800efd0:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800efd4:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800efd8:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800efdc:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800efe0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800efe4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800efe8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800efec:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800eff0:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800eff4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800eff8:	f1bc 0f00 	cmp.w	ip, #0
 800effc:	d147      	bne.n	800f08e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800effe:	eb03 0c07 	add.w	ip, r3, r7
 800f002:	1ad7      	subs	r7, r2, r3
 800f004:	f1b9 0f00 	cmp.w	r9, #0
 800f008:	d009      	beq.n	800f01e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f00a:	9029      	str	r0, [sp, #164]	; 0xa4
 800f00c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800f010:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800f014:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800f018:	912d      	str	r1, [sp, #180]	; 0xb4
 800f01a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800f01e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f020:	f04f 0800 	mov.w	r8, #0
 800f024:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f028:	9111      	str	r1, [sp, #68]	; 0x44
 800f02a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f02e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f032:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f036:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f03a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f03e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f042:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f046:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f04a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f04e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f052:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f056:	f1be 0f00 	cmp.w	lr, #0
 800f05a:	d031      	beq.n	800f0c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f05c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f05e:	4450      	add	r0, sl
 800f060:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f064:	4431      	add	r1, r6
 800f066:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f06a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f06e:	4549      	cmp	r1, r9
 800f070:	db08      	blt.n	800f084 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f072:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f076:	3001      	adds	r0, #1
 800f078:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f07c:	eba1 0109 	sub.w	r1, r1, r9
 800f080:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f084:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f088:	f04f 0801 	mov.w	r8, #1
 800f08c:	e7e3      	b.n	800f056 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f08e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f090:	4450      	add	r0, sl
 800f092:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f096:	4431      	add	r1, r6
 800f098:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f09c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f0a0:	4541      	cmp	r1, r8
 800f0a2:	db08      	blt.n	800f0b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f0a4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f0a8:	3001      	adds	r0, #1
 800f0aa:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f0ae:	eba1 0108 	sub.w	r1, r1, r8
 800f0b2:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f0b6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f0ba:	f04f 0901 	mov.w	r9, #1
 800f0be:	e79b      	b.n	800eff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f0c0:	449c      	add	ip, r3
 800f0c2:	1aff      	subs	r7, r7, r3
 800f0c4:	f1b8 0f00 	cmp.w	r8, #0
 800f0c8:	d009      	beq.n	800f0de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f0ca:	9019      	str	r0, [sp, #100]	; 0x64
 800f0cc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f0d0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f0d4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f0d8:	911d      	str	r1, [sp, #116]	; 0x74
 800f0da:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f0de:	1ad2      	subs	r2, r2, r3
 800f0e0:	e68b      	b.n	800edfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f0e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f0e4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800f0e6:	2b00      	cmp	r3, #0
 800f0e8:	f000 80d1 	beq.w	800f28e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f0ec:	ad19      	add	r5, sp, #100	; 0x64
 800f0ee:	ac39      	add	r4, sp, #228	; 0xe4
 800f0f0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f0f2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f0f6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f0fa:	930c      	str	r3, [sp, #48]	; 0x30
 800f0fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f0fe:	6963      	ldr	r3, [r4, #20]
 800f100:	440b      	add	r3, r1
 800f102:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f106:	4408      	add	r0, r1
 800f108:	b200      	sxth	r0, r0
 800f10a:	4283      	cmp	r3, r0
 800f10c:	900d      	str	r0, [sp, #52]	; 0x34
 800f10e:	f280 80c1 	bge.w	800f294 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f112:	428b      	cmp	r3, r1
 800f114:	da08      	bge.n	800f128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f116:	2a00      	cmp	r2, #0
 800f118:	dd06      	ble.n	800f128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f11a:	1acb      	subs	r3, r1, r3
 800f11c:	429a      	cmp	r2, r3
 800f11e:	f2c0 80bb 	blt.w	800f298 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f122:	2b00      	cmp	r3, #0
 800f124:	f300 80b9 	bgt.w	800f29a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f128:	6967      	ldr	r7, [r4, #20]
 800f12a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f12e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f130:	443b      	add	r3, r7
 800f132:	461f      	mov	r7, r3
 800f134:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f136:	1bdf      	subs	r7, r3, r7
 800f138:	4297      	cmp	r7, r2
 800f13a:	bfa8      	it	ge
 800f13c:	4617      	movge	r7, r2
 800f13e:	2f00      	cmp	r7, #0
 800f140:	f340 813c 	ble.w	800f3bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f144:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f146:	6829      	ldr	r1, [r5, #0]
 800f148:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f14c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f150:	4411      	add	r1, r2
 800f152:	6820      	ldr	r0, [r4, #0]
 800f154:	4299      	cmp	r1, r3
 800f156:	dd1a      	ble.n	800f18e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f158:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f15c:	4402      	add	r2, r0
 800f15e:	440b      	add	r3, r1
 800f160:	b21b      	sxth	r3, r3
 800f162:	429a      	cmp	r2, r3
 800f164:	dc13      	bgt.n	800f18e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f166:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f168:	a912      	add	r1, sp, #72	; 0x48
 800f16a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f16c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f16e:	681b      	ldr	r3, [r3, #0]
 800f170:	9206      	str	r2, [sp, #24]
 800f172:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f174:	9500      	str	r5, [sp, #0]
 800f176:	9205      	str	r2, [sp, #20]
 800f178:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f17a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f17e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f180:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f184:	aa49      	add	r2, sp, #292	; 0x124
 800f186:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f18a:	4623      	mov	r3, r4
 800f18c:	47c8      	blx	r9
 800f18e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f192:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f196:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f19a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f19e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f1a2:	68a1      	ldr	r1, [r4, #8]
 800f1a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f1a8:	ed94 6a08 	vldr	s12, [r4, #32]
 800f1ac:	edd4 6a07 	vldr	s13, [r4, #28]
 800f1b0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f1b4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f1b8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f1bc:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f1c0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f1c4:	441a      	add	r2, r3
 800f1c6:	6963      	ldr	r3, [r4, #20]
 800f1c8:	3301      	adds	r3, #1
 800f1ca:	6022      	str	r2, [r4, #0]
 800f1cc:	6163      	str	r3, [r4, #20]
 800f1ce:	69a3      	ldr	r3, [r4, #24]
 800f1d0:	3b01      	subs	r3, #1
 800f1d2:	61a3      	str	r3, [r4, #24]
 800f1d4:	6923      	ldr	r3, [r4, #16]
 800f1d6:	440b      	add	r3, r1
 800f1d8:	68e1      	ldr	r1, [r4, #12]
 800f1da:	428b      	cmp	r3, r1
 800f1dc:	6123      	str	r3, [r4, #16]
 800f1de:	db15      	blt.n	800f20c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f1e0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f1e4:	3201      	adds	r2, #1
 800f1e6:	1a5b      	subs	r3, r3, r1
 800f1e8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f1ec:	6022      	str	r2, [r4, #0]
 800f1ee:	6123      	str	r3, [r4, #16]
 800f1f0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f1f4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f1f8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f1fc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f200:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f204:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f208:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f20c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f210:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f214:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f218:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f21c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f220:	68a9      	ldr	r1, [r5, #8]
 800f222:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f226:	ed95 6a08 	vldr	s12, [r5, #32]
 800f22a:	edd5 6a07 	vldr	s13, [r5, #28]
 800f22e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f232:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f236:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f23a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f23e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f242:	441a      	add	r2, r3
 800f244:	696b      	ldr	r3, [r5, #20]
 800f246:	3301      	adds	r3, #1
 800f248:	602a      	str	r2, [r5, #0]
 800f24a:	616b      	str	r3, [r5, #20]
 800f24c:	69ab      	ldr	r3, [r5, #24]
 800f24e:	3b01      	subs	r3, #1
 800f250:	61ab      	str	r3, [r5, #24]
 800f252:	692b      	ldr	r3, [r5, #16]
 800f254:	440b      	add	r3, r1
 800f256:	68e9      	ldr	r1, [r5, #12]
 800f258:	428b      	cmp	r3, r1
 800f25a:	612b      	str	r3, [r5, #16]
 800f25c:	db15      	blt.n	800f28a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f25e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f262:	3201      	adds	r2, #1
 800f264:	1a5b      	subs	r3, r3, r1
 800f266:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f26a:	602a      	str	r2, [r5, #0]
 800f26c:	612b      	str	r3, [r5, #16]
 800f26e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f272:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f276:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f27a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f27e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f282:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f286:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f28a:	3f01      	subs	r7, #1
 800f28c:	e757      	b.n	800f13e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f28e:	ad39      	add	r5, sp, #228	; 0xe4
 800f290:	ac19      	add	r4, sp, #100	; 0x64
 800f292:	e72d      	b.n	800f0f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f294:	4613      	mov	r3, r2
 800f296:	e744      	b.n	800f122 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f298:	4613      	mov	r3, r2
 800f29a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800f29c:	469e      	mov	lr, r3
 800f29e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800f2a2:	461f      	mov	r7, r3
 800f2a4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800f2a8:	f04f 0900 	mov.w	r9, #0
 800f2ac:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800f2b0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800f2b4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800f2b8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800f2bc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800f2c0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800f2c2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800f2c6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800f2ca:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800f2ce:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800f2d2:	960e      	str	r6, [sp, #56]	; 0x38
 800f2d4:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800f2d8:	2f00      	cmp	r7, #0
 800f2da:	d146      	bne.n	800f36a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f2dc:	449c      	add	ip, r3
 800f2de:	1ad7      	subs	r7, r2, r3
 800f2e0:	f1b9 0f00 	cmp.w	r9, #0
 800f2e4:	d009      	beq.n	800f2fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f2e6:	9039      	str	r0, [sp, #228]	; 0xe4
 800f2e8:	913d      	str	r1, [sp, #244]	; 0xf4
 800f2ea:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800f2ee:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800f2f2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800f2f6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800f2fa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f2fc:	f04f 0800 	mov.w	r8, #0
 800f300:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f304:	910e      	str	r1, [sp, #56]	; 0x38
 800f306:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f30a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f30e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f312:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f316:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f31a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f31e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f322:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f326:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f32a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f32e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f332:	f1be 0f00 	cmp.w	lr, #0
 800f336:	d030      	beq.n	800f39a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f338:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f33a:	4450      	add	r0, sl
 800f33c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f340:	4431      	add	r1, r6
 800f342:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f346:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f34a:	4549      	cmp	r1, r9
 800f34c:	db08      	blt.n	800f360 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f34e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f352:	3001      	adds	r0, #1
 800f354:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f358:	eba1 0109 	sub.w	r1, r1, r9
 800f35c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f360:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f364:	f04f 0801 	mov.w	r8, #1
 800f368:	e7e3      	b.n	800f332 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f36a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f36c:	4450      	add	r0, sl
 800f36e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f372:	4431      	add	r1, r6
 800f374:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f378:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f37c:	4541      	cmp	r1, r8
 800f37e:	db08      	blt.n	800f392 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f380:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f384:	3001      	adds	r0, #1
 800f386:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f38a:	eba1 0108 	sub.w	r1, r1, r8
 800f38e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f392:	3f01      	subs	r7, #1
 800f394:	f04f 0901 	mov.w	r9, #1
 800f398:	e79e      	b.n	800f2d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f39a:	449c      	add	ip, r3
 800f39c:	1aff      	subs	r7, r7, r3
 800f39e:	f1b8 0f00 	cmp.w	r8, #0
 800f3a2:	d009      	beq.n	800f3b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f3a4:	9019      	str	r0, [sp, #100]	; 0x64
 800f3a6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f3aa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f3ae:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f3b2:	911d      	str	r1, [sp, #116]	; 0x74
 800f3b4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f3b8:	1ad2      	subs	r2, r2, r3
 800f3ba:	e6b5      	b.n	800f128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f3bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f3be:	681b      	ldr	r3, [r3, #0]
 800f3c0:	b923      	cbnz	r3, 800f3cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3c2:	4b04      	ldr	r3, [pc, #16]	; (800f3d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f3c4:	6818      	ldr	r0, [r3, #0]
 800f3c6:	6803      	ldr	r3, [r0, #0]
 800f3c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3ca:	4798      	blx	r3
 800f3cc:	b05b      	add	sp, #364	; 0x16c
 800f3ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3d2:	bf00      	nop
 800f3d4:	2400e424 	.word	0x2400e424

0800f3d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800f3d8:	b570      	push	{r4, r5, r6, lr}
 800f3da:	4604      	mov	r4, r0
 800f3dc:	2500      	movs	r5, #0
 800f3de:	9805      	ldr	r0, [sp, #20]
 800f3e0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800f3e4:	6061      	str	r1, [r4, #4]
 800f3e6:	8263      	strh	r3, [r4, #18]
 800f3e8:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800f3ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f3f0:	8025      	strh	r5, [r4, #0]
 800f3f2:	7221      	strb	r1, [r4, #8]
 800f3f4:	7266      	strb	r6, [r4, #9]
 800f3f6:	60e0      	str	r0, [r4, #12]
 800f3f8:	8222      	strh	r2, [r4, #16]
 800f3fa:	82a3      	strh	r3, [r4, #20]
 800f3fc:	82e5      	strh	r5, [r4, #22]
 800f3fe:	8325      	strh	r5, [r4, #24]
 800f400:	8365      	strh	r5, [r4, #26]
 800f402:	83a5      	strh	r5, [r4, #28]
 800f404:	83e5      	strh	r5, [r4, #30]
 800f406:	8425      	strh	r5, [r4, #32]
 800f408:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800f40c:	b32e      	cbz	r6, 800f45a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f40e:	6803      	ldr	r3, [r0, #0]
 800f410:	695b      	ldr	r3, [r3, #20]
 800f412:	4798      	blx	r3
 800f414:	4606      	mov	r6, r0
 800f416:	b300      	cbz	r0, 800f45a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f418:	68e0      	ldr	r0, [r4, #12]
 800f41a:	4631      	mov	r1, r6
 800f41c:	6803      	ldr	r3, [r0, #0]
 800f41e:	68db      	ldr	r3, [r3, #12]
 800f420:	4798      	blx	r3
 800f422:	4605      	mov	r5, r0
 800f424:	b1c8      	cbz	r0, 800f45a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f426:	7b43      	ldrb	r3, [r0, #13]
 800f428:	7a82      	ldrb	r2, [r0, #10]
 800f42a:	005b      	lsls	r3, r3, #1
 800f42c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f430:	4313      	orrs	r3, r2
 800f432:	8423      	strh	r3, [r4, #32]
 800f434:	7a63      	ldrb	r3, [r4, #9]
 800f436:	2b06      	cmp	r3, #6
 800f438:	d10f      	bne.n	800f45a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f43a:	68e0      	ldr	r0, [r4, #12]
 800f43c:	462a      	mov	r2, r5
 800f43e:	4631      	mov	r1, r6
 800f440:	6803      	ldr	r3, [r0, #0]
 800f442:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f444:	4798      	blx	r3
 800f446:	7b6b      	ldrb	r3, [r5, #13]
 800f448:	005b      	lsls	r3, r3, #1
 800f44a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f44e:	7aab      	ldrb	r3, [r5, #10]
 800f450:	4313      	orrs	r3, r2
 800f452:	4418      	add	r0, r3
 800f454:	8c23      	ldrh	r3, [r4, #32]
 800f456:	4418      	add	r0, r3
 800f458:	8420      	strh	r0, [r4, #32]
 800f45a:	4620      	mov	r0, r4
 800f45c:	bd70      	pop	{r4, r5, r6, pc}

0800f45e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f45e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f462:	2400      	movs	r4, #0
 800f464:	b085      	sub	sp, #20
 800f466:	4681      	mov	r9, r0
 800f468:	4688      	mov	r8, r1
 800f46a:	4692      	mov	sl, r2
 800f46c:	469b      	mov	fp, r3
 800f46e:	4627      	mov	r7, r4
 800f470:	4625      	mov	r5, r4
 800f472:	4626      	mov	r6, r4
 800f474:	4554      	cmp	r4, sl
 800f476:	da2a      	bge.n	800f4ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f478:	2300      	movs	r3, #0
 800f47a:	9303      	str	r3, [sp, #12]
 800f47c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f480:	429d      	cmp	r5, r3
 800f482:	d004      	beq.n	800f48e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f484:	f242 030b 	movw	r3, #8203	; 0x200b
 800f488:	429d      	cmp	r5, r3
 800f48a:	bf18      	it	ne
 800f48c:	462f      	movne	r7, r5
 800f48e:	ab03      	add	r3, sp, #12
 800f490:	4642      	mov	r2, r8
 800f492:	4659      	mov	r1, fp
 800f494:	4648      	mov	r0, r9
 800f496:	f003 f897 	bl	80125c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f49a:	4605      	mov	r5, r0
 800f49c:	b1b8      	cbz	r0, 800f4ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f49e:	280a      	cmp	r0, #10
 800f4a0:	d015      	beq.n	800f4ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f4a2:	9a03      	ldr	r2, [sp, #12]
 800f4a4:	b18a      	cbz	r2, 800f4ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f4a6:	7b50      	ldrb	r0, [r2, #13]
 800f4a8:	4639      	mov	r1, r7
 800f4aa:	7a93      	ldrb	r3, [r2, #10]
 800f4ac:	0040      	lsls	r0, r0, #1
 800f4ae:	8895      	ldrh	r5, [r2, #4]
 800f4b0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f4b4:	4303      	orrs	r3, r0
 800f4b6:	4640      	mov	r0, r8
 800f4b8:	9301      	str	r3, [sp, #4]
 800f4ba:	f8d8 3000 	ldr.w	r3, [r8]
 800f4be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f4c0:	4798      	blx	r3
 800f4c2:	9b01      	ldr	r3, [sp, #4]
 800f4c4:	4418      	add	r0, r3
 800f4c6:	4406      	add	r6, r0
 800f4c8:	b2b6      	uxth	r6, r6
 800f4ca:	3401      	adds	r4, #1
 800f4cc:	e7d2      	b.n	800f474 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f4ce:	4630      	mov	r0, r6
 800f4d0:	b005      	add	sp, #20
 800f4d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f4d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f4d6:	2a02      	cmp	r2, #2
 800f4d8:	b530      	push	{r4, r5, lr}
 800f4da:	d011      	beq.n	800f500 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f4dc:	2a03      	cmp	r2, #3
 800f4de:	d01c      	beq.n	800f51a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f4e0:	2a01      	cmp	r2, #1
 800f4e2:	d10c      	bne.n	800f4fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f4e4:	888b      	ldrh	r3, [r1, #4]
 800f4e6:	8801      	ldrh	r1, [r0, #0]
 800f4e8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f4ec:	1a5b      	subs	r3, r3, r1
 800f4ee:	8844      	ldrh	r4, [r0, #2]
 800f4f0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f4f4:	1a9b      	subs	r3, r3, r2
 800f4f6:	8004      	strh	r4, [r0, #0]
 800f4f8:	8081      	strh	r1, [r0, #4]
 800f4fa:	8043      	strh	r3, [r0, #2]
 800f4fc:	80c2      	strh	r2, [r0, #6]
 800f4fe:	bd30      	pop	{r4, r5, pc}
 800f500:	88cb      	ldrh	r3, [r1, #6]
 800f502:	8842      	ldrh	r2, [r0, #2]
 800f504:	1a9b      	subs	r3, r3, r2
 800f506:	88c2      	ldrh	r2, [r0, #6]
 800f508:	1a9b      	subs	r3, r3, r2
 800f50a:	888a      	ldrh	r2, [r1, #4]
 800f50c:	8801      	ldrh	r1, [r0, #0]
 800f50e:	8043      	strh	r3, [r0, #2]
 800f510:	1a52      	subs	r2, r2, r1
 800f512:	8881      	ldrh	r1, [r0, #4]
 800f514:	1a52      	subs	r2, r2, r1
 800f516:	8002      	strh	r2, [r0, #0]
 800f518:	e7f1      	b.n	800f4fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f51a:	88cb      	ldrh	r3, [r1, #6]
 800f51c:	8841      	ldrh	r1, [r0, #2]
 800f51e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f522:	1a5b      	subs	r3, r3, r1
 800f524:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f528:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f52c:	1a9b      	subs	r3, r3, r2
 800f52e:	8045      	strh	r5, [r0, #2]
 800f530:	8082      	strh	r2, [r0, #4]
 800f532:	8003      	strh	r3, [r0, #0]
 800f534:	80c4      	strh	r4, [r0, #6]
 800f536:	e7e2      	b.n	800f4fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f53c:	b09f      	sub	sp, #124	; 0x7c
 800f53e:	9116      	str	r1, [sp, #88]	; 0x58
 800f540:	9317      	str	r3, [sp, #92]	; 0x5c
 800f542:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f544:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f546:	8809      	ldrh	r1, [r1, #0]
 800f548:	889b      	ldrh	r3, [r3, #4]
 800f54a:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800f54e:	440b      	add	r3, r1
 800f550:	9212      	str	r2, [sp, #72]	; 0x48
 800f552:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800f556:	b21b      	sxth	r3, r3
 800f558:	9011      	str	r0, [sp, #68]	; 0x44
 800f55a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800f55e:	9310      	str	r3, [sp, #64]	; 0x40
 800f560:	f8d8 3000 	ldr.w	r3, [r8]
 800f564:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800f568:	7b19      	ldrb	r1, [r3, #12]
 800f56a:	7adb      	ldrb	r3, [r3, #11]
 800f56c:	9114      	str	r1, [sp, #80]	; 0x50
 800f56e:	9315      	str	r3, [sp, #84]	; 0x54
 800f570:	2a00      	cmp	r2, #0
 800f572:	d06a      	beq.n	800f64a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f574:	f898 3010 	ldrb.w	r3, [r8, #16]
 800f578:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800f57a:	2b06      	cmp	r3, #6
 800f57c:	bf14      	ite	ne
 800f57e:	2301      	movne	r3, #1
 800f580:	2302      	moveq	r3, #2
 800f582:	4413      	add	r3, r2
 800f584:	f04f 0900 	mov.w	r9, #0
 800f588:	930f      	str	r3, [sp, #60]	; 0x3c
 800f58a:	464c      	mov	r4, r9
 800f58c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800f590:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800f594:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f598:	4293      	cmp	r3, r2
 800f59a:	f280 808f 	bge.w	800f6bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f59e:	2300      	movs	r3, #0
 800f5a0:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800f5a4:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800f5a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f5ac:	429c      	cmp	r4, r3
 800f5ae:	d006      	beq.n	800f5be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800f5b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5b2:	f242 020b 	movw	r2, #8203	; 0x200b
 800f5b6:	4294      	cmp	r4, r2
 800f5b8:	bf18      	it	ne
 800f5ba:	4623      	movne	r3, r4
 800f5bc:	930d      	str	r3, [sp, #52]	; 0x34
 800f5be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f5c0:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800f5c2:	f8d8 2000 	ldr.w	r2, [r8]
 800f5c6:	428b      	cmp	r3, r1
 800f5c8:	db41      	blt.n	800f64e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f5ca:	6813      	ldr	r3, [r2, #0]
 800f5cc:	4610      	mov	r0, r2
 800f5ce:	695b      	ldr	r3, [r3, #20]
 800f5d0:	4798      	blx	r3
 800f5d2:	4604      	mov	r4, r0
 800f5d4:	f8d8 0000 	ldr.w	r0, [r8]
 800f5d8:	aa1d      	add	r2, sp, #116	; 0x74
 800f5da:	4621      	mov	r1, r4
 800f5dc:	6803      	ldr	r3, [r0, #0]
 800f5de:	689d      	ldr	r5, [r3, #8]
 800f5e0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f5e4:	47a8      	blx	r5
 800f5e6:	901c      	str	r0, [sp, #112]	; 0x70
 800f5e8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f5ec:	429c      	cmp	r4, r3
 800f5ee:	f000 80ec 	beq.w	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f5f2:	f242 030b 	movw	r3, #8203	; 0x200b
 800f5f6:	429c      	cmp	r4, r3
 800f5f8:	f000 80e7 	beq.w	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f5fc:	2c00      	cmp	r4, #0
 800f5fe:	f000 80f9 	beq.w	800f7f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800f602:	2c0a      	cmp	r4, #10
 800f604:	d060      	beq.n	800f6c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f606:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f608:	b36a      	cbz	r2, 800f666 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f60a:	8894      	ldrh	r4, [r2, #4]
 800f60c:	f1bb 0f00 	cmp.w	fp, #0
 800f610:	d03b      	beq.n	800f68a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800f612:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f616:	f1bb 0f01 	cmp.w	fp, #1
 800f61a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f61e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800f622:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f626:	ea49 0903 	orr.w	r9, r9, r3
 800f62a:	d134      	bne.n	800f696 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800f62c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f62e:	eba6 0609 	sub.w	r6, r6, r9
 800f632:	2b00      	cmp	r3, #0
 800f634:	d14f      	bne.n	800f6d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f636:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f638:	eb09 0306 	add.w	r3, r9, r6
 800f63c:	4413      	add	r3, r2
 800f63e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f640:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f644:	4293      	cmp	r3, r2
 800f646:	da51      	bge.n	800f6ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f648:	e038      	b.n	800f6bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f64a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f64c:	e79a      	b.n	800f584 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800f64e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f652:	4659      	mov	r1, fp
 800f654:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f656:	9301      	str	r3, [sp, #4]
 800f658:	ab1d      	add	r3, sp, #116	; 0x74
 800f65a:	9300      	str	r3, [sp, #0]
 800f65c:	ab1c      	add	r3, sp, #112	; 0x70
 800f65e:	f002 fffc 	bl	801265a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f662:	4604      	mov	r4, r0
 800f664:	e7c0      	b.n	800f5e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800f666:	f8d8 0000 	ldr.w	r0, [r8]
 800f66a:	6803      	ldr	r3, [r0, #0]
 800f66c:	691b      	ldr	r3, [r3, #16]
 800f66e:	4798      	blx	r3
 800f670:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f674:	4298      	cmp	r0, r3
 800f676:	f000 80a8 	beq.w	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f67a:	f242 030b 	movw	r3, #8203	; 0x200b
 800f67e:	4298      	cmp	r0, r3
 800f680:	f000 80a3 	beq.w	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f684:	f1bb 0f00 	cmp.w	fp, #0
 800f688:	d100      	bne.n	800f68c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800f68a:	444e      	add	r6, r9
 800f68c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f68e:	2a00      	cmp	r2, #0
 800f690:	d1bf      	bne.n	800f612 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800f692:	4691      	mov	r9, r2
 800f694:	e099      	b.n	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f696:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f698:	2b00      	cmp	r3, #0
 800f69a:	f000 80ad 	beq.w	800f7f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 800f69e:	f1bb 0f00 	cmp.w	fp, #0
 800f6a2:	d118      	bne.n	800f6d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f6a4:	f8d8 0000 	ldr.w	r0, [r8]
 800f6a8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f6aa:	6803      	ldr	r3, [r0, #0]
 800f6ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f6ae:	4798      	blx	r3
 800f6b0:	4406      	add	r6, r0
 800f6b2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f6b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f6b6:	1af3      	subs	r3, r6, r3
 800f6b8:	4293      	cmp	r3, r2
 800f6ba:	dd17      	ble.n	800f6ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f6bc:	2c00      	cmp	r4, #0
 800f6be:	f000 8099 	beq.w	800f7f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800f6c2:	2c0a      	cmp	r4, #10
 800f6c4:	f040 8087 	bne.w	800f7d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800f6c8:	240a      	movs	r4, #10
 800f6ca:	fab4 f084 	clz	r0, r4
 800f6ce:	0940      	lsrs	r0, r0, #5
 800f6d0:	b01f      	add	sp, #124	; 0x7c
 800f6d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6d6:	f8d8 0000 	ldr.w	r0, [r8]
 800f6da:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f6dc:	6803      	ldr	r3, [r0, #0]
 800f6de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f6e0:	4798      	blx	r3
 800f6e2:	f1bb 0f01 	cmp.w	fp, #1
 800f6e6:	eba6 0600 	sub.w	r6, r6, r0
 800f6ea:	d0a4      	beq.n	800f636 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800f6ec:	981c      	ldr	r0, [sp, #112]	; 0x70
 800f6ee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f6f0:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800f6f4:	f9b3 7000 	ldrsh.w	r7, [r3]
 800f6f8:	7b43      	ldrb	r3, [r0, #13]
 800f6fa:	4431      	add	r1, r6
 800f6fc:	015b      	lsls	r3, r3, #5
 800f6fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f702:	7983      	ldrb	r3, [r0, #6]
 800f704:	4313      	orrs	r3, r2
 800f706:	440b      	add	r3, r1
 800f708:	42bb      	cmp	r3, r7
 800f70a:	db5e      	blt.n	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f70c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f70e:	4299      	cmp	r1, r3
 800f710:	da5b      	bge.n	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f712:	f8d8 0000 	ldr.w	r0, [r8]
 800f716:	42b7      	cmp	r7, r6
 800f718:	6803      	ldr	r3, [r0, #0]
 800f71a:	bfcc      	ite	gt
 800f71c:	1bbf      	subgt	r7, r7, r6
 800f71e:	2700      	movle	r7, #0
 800f720:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f722:	bfc8      	it	gt
 800f724:	b2bf      	uxthgt	r7, r7
 800f726:	4798      	blx	r3
 800f728:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f72a:	7b5a      	ldrb	r2, [r3, #13]
 800f72c:	00d1      	lsls	r1, r2, #3
 800f72e:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800f732:	7a19      	ldrb	r1, [r3, #8]
 800f734:	4329      	orrs	r1, r5
 800f736:	0655      	lsls	r5, r2, #25
 800f738:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800f73a:	bf48      	it	mi
 800f73c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800f740:	4405      	add	r5, r0
 800f742:	bf48      	it	mi
 800f744:	b209      	sxthmi	r1, r1
 800f746:	1a6d      	subs	r5, r5, r1
 800f748:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f74a:	b2ad      	uxth	r5, r5
 800f74c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f750:	fa0f fa85 	sxth.w	sl, r5
 800f754:	4551      	cmp	r1, sl
 800f756:	dd3c      	ble.n	800f7d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800f758:	0112      	lsls	r2, r2, #4
 800f75a:	79d8      	ldrb	r0, [r3, #7]
 800f75c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f760:	4302      	orrs	r2, r0
 800f762:	4492      	add	sl, r2
 800f764:	4551      	cmp	r1, sl
 800f766:	dc30      	bgt.n	800f7ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800f768:	1b4d      	subs	r5, r1, r5
 800f76a:	468a      	mov	sl, r1
 800f76c:	b22d      	sxth	r5, r5
 800f76e:	9319      	str	r3, [sp, #100]	; 0x64
 800f770:	b2ad      	uxth	r5, r5
 800f772:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f774:	f8d8 0000 	ldr.w	r0, [r8]
 800f778:	681a      	ldr	r2, [r3, #0]
 800f77a:	6801      	ldr	r1, [r0, #0]
 800f77c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800f77e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800f780:	9313      	str	r3, [sp, #76]	; 0x4c
 800f782:	9218      	str	r2, [sp, #96]	; 0x60
 800f784:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800f786:	4788      	blx	r1
 800f788:	f898 1006 	ldrb.w	r1, [r8, #6]
 800f78c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f78e:	910b      	str	r1, [sp, #44]	; 0x2c
 800f790:	f898 100e 	ldrb.w	r1, [r8, #14]
 800f794:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f796:	910a      	str	r1, [sp, #40]	; 0x28
 800f798:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800f79c:	9109      	str	r1, [sp, #36]	; 0x24
 800f79e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f7a2:	9305      	str	r3, [sp, #20]
 800f7a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f7a6:	9206      	str	r2, [sp, #24]
 800f7a8:	9304      	str	r3, [sp, #16]
 800f7aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f7ac:	f8cd a004 	str.w	sl, [sp, #4]
 800f7b0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800f7b4:	4437      	add	r7, r6
 800f7b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f7b8:	b23f      	sxth	r7, r7
 800f7ba:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800f7be:	9700      	str	r7, [sp, #0]
 800f7c0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f7c2:	681a      	ldr	r2, [r3, #0]
 800f7c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f7c6:	685b      	ldr	r3, [r3, #4]
 800f7c8:	47a8      	blx	r5
 800f7ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f7cc:	3301      	adds	r3, #1
 800f7ce:	930e      	str	r3, [sp, #56]	; 0x38
 800f7d0:	e6e0      	b.n	800f594 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800f7d2:	2500      	movs	r5, #0
 800f7d4:	e7cb      	b.n	800f76e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 800f7d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800f7d8:	3501      	adds	r5, #1
 800f7da:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f7dc:	429d      	cmp	r5, r3
 800f7de:	f6bf af74 	bge.w	800f6ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f7e2:	4659      	mov	r1, fp
 800f7e4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f7e6:	f7f3 fe55 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f7ea:	4604      	mov	r4, r0
 800f7ec:	b110      	cbz	r0, 800f7f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800f7ee:	280a      	cmp	r0, #10
 800f7f0:	d1f2      	bne.n	800f7d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 800f7f2:	e769      	b.n	800f6c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f7f4:	2400      	movs	r4, #0
 800f7f6:	e768      	b.n	800f6ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f7f8:	f1bb 0f00 	cmp.w	fp, #0
 800f7fc:	f43f af59 	beq.w	800f6b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800f800:	e774      	b.n	800f6ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800f802 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800f802:	b530      	push	{r4, r5, lr}
 800f804:	8ac4      	ldrh	r4, [r0, #22]
 800f806:	8b45      	ldrh	r5, [r0, #26]
 800f808:	8343      	strh	r3, [r0, #26]
 800f80a:	442c      	add	r4, r5
 800f80c:	1ae4      	subs	r4, r4, r3
 800f80e:	8b83      	ldrh	r3, [r0, #28]
 800f810:	82c4      	strh	r4, [r0, #22]
 800f812:	8b04      	ldrh	r4, [r0, #24]
 800f814:	4422      	add	r2, r4
 800f816:	440c      	add	r4, r1
 800f818:	1a59      	subs	r1, r3, r1
 800f81a:	83c2      	strh	r2, [r0, #30]
 800f81c:	8304      	strh	r4, [r0, #24]
 800f81e:	8381      	strh	r1, [r0, #28]
 800f820:	bd30      	pop	{r4, r5, pc}

0800f822 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800f822:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f826:	4604      	mov	r4, r0
 800f828:	8a47      	ldrh	r7, [r0, #18]
 800f82a:	68c0      	ldr	r0, [r0, #12]
 800f82c:	b085      	sub	sp, #20
 800f82e:	6803      	ldr	r3, [r0, #0]
 800f830:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f832:	4798      	blx	r3
 800f834:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800f838:	7a63      	ldrb	r3, [r4, #9]
 800f83a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800f83e:	3b01      	subs	r3, #1
 800f840:	42b7      	cmp	r7, r6
 800f842:	bfac      	ite	ge
 800f844:	f04f 0900 	movge.w	r9, #0
 800f848:	f04f 0901 	movlt.w	r9, #1
 800f84c:	2b05      	cmp	r3, #5
 800f84e:	d804      	bhi.n	800f85a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 800f850:	e8df f003 	tbb	[pc, r3]
 800f854:	470f0854 	.word	0x470f0854
 800f858:	4c4c      	.short	0x4c4c
 800f85a:	2500      	movs	r5, #0
 800f85c:	46a9      	mov	r9, r5
 800f85e:	462e      	mov	r6, r5
 800f860:	462f      	mov	r7, r5
 800f862:	e00e      	b.n	800f882 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f864:	42b7      	cmp	r7, r6
 800f866:	f04f 0500 	mov.w	r5, #0
 800f86a:	bfb4      	ite	lt
 800f86c:	2600      	movlt	r6, #0
 800f86e:	2601      	movge	r6, #1
 800f870:	e7f6      	b.n	800f860 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800f872:	42b7      	cmp	r7, r6
 800f874:	464d      	mov	r5, r9
 800f876:	f04f 0900 	mov.w	r9, #0
 800f87a:	bfb4      	ite	lt
 800f87c:	2600      	movlt	r6, #0
 800f87e:	2601      	movge	r6, #1
 800f880:	464f      	mov	r7, r9
 800f882:	f04f 0800 	mov.w	r8, #0
 800f886:	f8a4 8016 	strh.w	r8, [r4, #22]
 800f88a:	f8a4 8018 	strh.w	r8, [r4, #24]
 800f88e:	f8cd 8004 	str.w	r8, [sp, #4]
 800f892:	2300      	movs	r3, #0
 800f894:	9303      	str	r3, [sp, #12]
 800f896:	8823      	ldrh	r3, [r4, #0]
 800f898:	2b20      	cmp	r3, #32
 800f89a:	d033      	beq.n	800f904 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 800f89c:	f242 010b 	movw	r1, #8203	; 0x200b
 800f8a0:	1a5a      	subs	r2, r3, r1
 800f8a2:	f1d2 0a00 	rsbs	sl, r2, #0
 800f8a6:	eb4a 0a02 	adc.w	sl, sl, r2
 800f8aa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f8ae:	4293      	cmp	r3, r2
 800f8b0:	d008      	beq.n	800f8c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f8b2:	428b      	cmp	r3, r1
 800f8b4:	9a01      	ldr	r2, [sp, #4]
 800f8b6:	bf0e      	itee	eq
 800f8b8:	f04f 0a01 	moveq.w	sl, #1
 800f8bc:	461a      	movne	r2, r3
 800f8be:	f04f 0a00 	movne.w	sl, #0
 800f8c2:	9201      	str	r2, [sp, #4]
 800f8c4:	ab03      	add	r3, sp, #12
 800f8c6:	68e2      	ldr	r2, [r4, #12]
 800f8c8:	7a21      	ldrb	r1, [r4, #8]
 800f8ca:	6860      	ldr	r0, [r4, #4]
 800f8cc:	f002 fe7c 	bl	80125c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f8d0:	8020      	strh	r0, [r4, #0]
 800f8d2:	b9d8      	cbnz	r0, 800f90c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 800f8d4:	8ba2      	ldrh	r2, [r4, #28]
 800f8d6:	2300      	movs	r3, #0
 800f8d8:	4611      	mov	r1, r2
 800f8da:	4620      	mov	r0, r4
 800f8dc:	f7ff ff91 	bl	800f802 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f8e0:	e06e      	b.n	800f9c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800f8e2:	2500      	movs	r5, #0
 800f8e4:	2701      	movs	r7, #1
 800f8e6:	46a9      	mov	r9, r5
 800f8e8:	462e      	mov	r6, r5
 800f8ea:	e7ca      	b.n	800f882 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f8ec:	42b7      	cmp	r7, r6
 800f8ee:	f04f 0500 	mov.w	r5, #0
 800f8f2:	bfb4      	ite	lt
 800f8f4:	2700      	movlt	r7, #0
 800f8f6:	2701      	movge	r7, #1
 800f8f8:	462e      	mov	r6, r5
 800f8fa:	e7c2      	b.n	800f882 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f8fc:	2500      	movs	r5, #0
 800f8fe:	2601      	movs	r6, #1
 800f900:	46a9      	mov	r9, r5
 800f902:	e7ad      	b.n	800f860 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 800f904:	9301      	str	r3, [sp, #4]
 800f906:	f04f 0a01 	mov.w	sl, #1
 800f90a:	e7db      	b.n	800f8c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f90c:	8b63      	ldrh	r3, [r4, #26]
 800f90e:	280a      	cmp	r0, #10
 800f910:	f103 0301 	add.w	r3, r3, #1
 800f914:	8363      	strh	r3, [r4, #26]
 800f916:	d0dd      	beq.n	800f8d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800f918:	9a03      	ldr	r2, [sp, #12]
 800f91a:	bb62      	cbnz	r2, 800f976 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 800f91c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f920:	4298      	cmp	r0, r3
 800f922:	d003      	beq.n	800f92c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800f924:	f242 030b 	movw	r3, #8203	; 0x200b
 800f928:	4298      	cmp	r0, r3
 800f92a:	d1b2      	bne.n	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f92c:	8823      	ldrh	r3, [r4, #0]
 800f92e:	8ba1      	ldrh	r1, [r4, #28]
 800f930:	2b20      	cmp	r3, #32
 800f932:	d003      	beq.n	800f93c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 800f934:	f242 000b 	movw	r0, #8203	; 0x200b
 800f938:	4283      	cmp	r3, r0
 800f93a:	d131      	bne.n	800f9a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 800f93c:	f1ba 0f00 	cmp.w	sl, #0
 800f940:	bf0a      	itet	eq
 800f942:	4688      	moveq	r8, r1
 800f944:	4650      	movne	r0, sl
 800f946:	2001      	moveq	r0, #1
 800f948:	440a      	add	r2, r1
 800f94a:	8b23      	ldrh	r3, [r4, #24]
 800f94c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f950:	b292      	uxth	r2, r2
 800f952:	83a2      	strh	r2, [r4, #28]
 800f954:	4413      	add	r3, r2
 800f956:	f1b9 0f00 	cmp.w	r9, #0
 800f95a:	d102      	bne.n	800f962 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 800f95c:	2d00      	cmp	r5, #0
 800f95e:	d042      	beq.n	800f9e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 800f960:	b300      	cbz	r0, 800f9a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 800f962:	8c21      	ldrh	r1, [r4, #32]
 800f964:	4419      	add	r1, r3
 800f966:	458c      	cmp	ip, r1
 800f968:	da37      	bge.n	800f9da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f96a:	8ae1      	ldrh	r1, [r4, #22]
 800f96c:	2900      	cmp	r1, #0
 800f96e:	d034      	beq.n	800f9da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 800f970:	4563      	cmp	r3, ip
 800f972:	dd8e      	ble.n	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f974:	e01d      	b.n	800f9b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 800f976:	8893      	ldrh	r3, [r2, #4]
 800f978:	9901      	ldr	r1, [sp, #4]
 800f97a:	8023      	strh	r3, [r4, #0]
 800f97c:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800f980:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800f984:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800f988:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800f98c:	ea4b 0b00 	orr.w	fp, fp, r0
 800f990:	68e0      	ldr	r0, [r4, #12]
 800f992:	6803      	ldr	r3, [r0, #0]
 800f994:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f996:	4798      	blx	r3
 800f998:	eb0b 0200 	add.w	r2, fp, r0
 800f99c:	b292      	uxth	r2, r2
 800f99e:	e7c5      	b.n	800f92c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 800f9a0:	2000      	movs	r0, #0
 800f9a2:	e7d1      	b.n	800f948 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 800f9a4:	4563      	cmp	r3, ip
 800f9a6:	f77f af74 	ble.w	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f9aa:	8ae3      	ldrh	r3, [r4, #22]
 800f9ac:	2b00      	cmp	r3, #0
 800f9ae:	f43f af70 	beq.w	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f9b2:	2301      	movs	r3, #1
 800f9b4:	8c22      	ldrh	r2, [r4, #32]
 800f9b6:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800f9ba:	8be3      	ldrh	r3, [r4, #30]
 800f9bc:	4413      	add	r3, r2
 800f9be:	83e3      	strh	r3, [r4, #30]
 800f9c0:	68e0      	ldr	r0, [r4, #12]
 800f9c2:	6803      	ldr	r3, [r0, #0]
 800f9c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f9c6:	4798      	blx	r3
 800f9c8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800f9cc:	4418      	add	r0, r3
 800f9ce:	8a63      	ldrh	r3, [r4, #18]
 800f9d0:	1a18      	subs	r0, r3, r0
 800f9d2:	8260      	strh	r0, [r4, #18]
 800f9d4:	b005      	add	sp, #20
 800f9d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9da:	2300      	movs	r3, #0
 800f9dc:	4611      	mov	r1, r2
 800f9de:	4620      	mov	r0, r4
 800f9e0:	f7ff ff0f 	bl	800f802 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f9e4:	e755      	b.n	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f9e6:	4563      	cmp	r3, ip
 800f9e8:	dd14      	ble.n	800fa14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 800f9ea:	b117      	cbz	r7, 800f9f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 800f9ec:	2301      	movs	r3, #1
 800f9ee:	460a      	mov	r2, r1
 800f9f0:	e772      	b.n	800f8d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800f9f2:	2e00      	cmp	r6, #0
 800f9f4:	f43f af4d 	beq.w	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f9f8:	2800      	cmp	r0, #0
 800f9fa:	f47f af4a 	bne.w	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f9fe:	f1ba 0f00 	cmp.w	sl, #0
 800fa02:	d002      	beq.n	800fa0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 800fa04:	2301      	movs	r3, #1
 800fa06:	4642      	mov	r2, r8
 800fa08:	e767      	b.n	800f8da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800fa0a:	8ae3      	ldrh	r3, [r4, #22]
 800fa0c:	2b00      	cmp	r3, #0
 800fa0e:	f43f af40 	beq.w	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fa12:	e7d5      	b.n	800f9c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 800fa14:	2800      	cmp	r0, #0
 800fa16:	f47f af3c 	bne.w	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fa1a:	f1ba 0f00 	cmp.w	sl, #0
 800fa1e:	f43f af38 	beq.w	800f892 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fa22:	2301      	movs	r3, #1
 800fa24:	4642      	mov	r2, r8
 800fa26:	e7da      	b.n	800f9de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0800fa28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800fa28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa2a:	4605      	mov	r5, r0
 800fa2c:	b08f      	sub	sp, #60	; 0x3c
 800fa2e:	4617      	mov	r7, r2
 800fa30:	461c      	mov	r4, r3
 800fa32:	460e      	mov	r6, r1
 800fa34:	b1d1      	cbz	r1, 800fa6c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800fa36:	681b      	ldr	r3, [r3, #0]
 800fa38:	4620      	mov	r0, r4
 800fa3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa3c:	4798      	blx	r3
 800fa3e:	4240      	negs	r0, r0
 800fa40:	9603      	str	r6, [sp, #12]
 800fa42:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fa46:	b200      	sxth	r0, r0
 800fa48:	9700      	str	r7, [sp, #0]
 800fa4a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800fa4e:	4629      	mov	r1, r5
 800fa50:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800fa54:	2401      	movs	r4, #1
 800fa56:	a805      	add	r0, sp, #20
 800fa58:	f7ff fcbe 	bl	800f3d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800fa5c:	a805      	add	r0, sp, #20
 800fa5e:	f7ff fee0 	bl	800f822 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fa62:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fa66:	b163      	cbz	r3, 800fa82 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800fa68:	3401      	adds	r4, #1
 800fa6a:	e7f7      	b.n	800fa5c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800fa6c:	2401      	movs	r4, #1
 800fa6e:	f002 fe77 	bl	8012760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fa72:	280a      	cmp	r0, #10
 800fa74:	4628      	mov	r0, r5
 800fa76:	bf08      	it	eq
 800fa78:	3401      	addeq	r4, #1
 800fa7a:	f002 fe71 	bl	8012760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fa7e:	2800      	cmp	r0, #0
 800fa80:	d1f7      	bne.n	800fa72 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800fa82:	b2a0      	uxth	r0, r4
 800fa84:	b00f      	add	sp, #60	; 0x3c
 800fa86:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800fa88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa8c:	b0e3      	sub	sp, #396	; 0x18c
 800fa8e:	461c      	mov	r4, r3
 800fa90:	4683      	mov	fp, r0
 800fa92:	4688      	mov	r8, r1
 800fa94:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800fa96:	2b00      	cmp	r3, #0
 800fa98:	f000 8112 	beq.w	800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fa9c:	6823      	ldr	r3, [r4, #0]
 800fa9e:	2b00      	cmp	r3, #0
 800faa0:	f000 810e 	beq.w	800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800faa4:	7ba3      	ldrb	r3, [r4, #14]
 800faa6:	2b00      	cmp	r3, #0
 800faa8:	f000 810a 	beq.w	800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800faac:	ad0a      	add	r5, sp, #40	; 0x28
 800faae:	6810      	ldr	r0, [r2, #0]
 800fab0:	6851      	ldr	r1, [r2, #4]
 800fab2:	462b      	mov	r3, r5
 800fab4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800fab8:	c303      	stmia	r3!, {r0, r1}
 800faba:	2100      	movs	r1, #0
 800fabc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800fac0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800fac4:	4628      	mov	r0, r5
 800fac6:	910c      	str	r1, [sp, #48]	; 0x30
 800fac8:	a90c      	add	r1, sp, #48	; 0x30
 800faca:	79a2      	ldrb	r2, [r4, #6]
 800facc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fad0:	f7ff fd01 	bl	800f4d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fad4:	a90c      	add	r1, sp, #48	; 0x30
 800fad6:	79a2      	ldrb	r2, [r4, #6]
 800fad8:	4608      	mov	r0, r1
 800fada:	f7ff fcfc 	bl	800f4d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fade:	a817      	add	r0, sp, #92	; 0x5c
 800fae0:	f002 fa12 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 800fae4:	6820      	ldr	r0, [r4, #0]
 800fae6:	6803      	ldr	r3, [r0, #0]
 800fae8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800faea:	4798      	blx	r3
 800faec:	4606      	mov	r6, r0
 800faee:	6820      	ldr	r0, [r4, #0]
 800faf0:	6803      	ldr	r3, [r0, #0]
 800faf2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800faf4:	4798      	blx	r3
 800faf6:	4633      	mov	r3, r6
 800faf8:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800fafa:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800fafc:	9000      	str	r0, [sp, #0]
 800fafe:	a817      	add	r0, sp, #92	; 0x5c
 800fb00:	f002 fa5d 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fb04:	6820      	ldr	r0, [r4, #0]
 800fb06:	f894 a004 	ldrb.w	sl, [r4, #4]
 800fb0a:	6803      	ldr	r3, [r0, #0]
 800fb0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fb0e:	4798      	blx	r3
 800fb10:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800fb14:	6823      	ldr	r3, [r4, #0]
 800fb16:	4607      	mov	r7, r0
 800fb18:	4406      	add	r6, r0
 800fb1a:	a830      	add	r0, sp, #192	; 0xc0
 800fb1c:	f893 9009 	ldrb.w	r9, [r3, #9]
 800fb20:	f002 f9f2 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 800fb24:	7c23      	ldrb	r3, [r4, #16]
 800fb26:	b17b      	cbz	r3, 800fb48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800fb28:	6820      	ldr	r0, [r4, #0]
 800fb2a:	6803      	ldr	r3, [r0, #0]
 800fb2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800fb2e:	4798      	blx	r3
 800fb30:	9009      	str	r0, [sp, #36]	; 0x24
 800fb32:	6820      	ldr	r0, [r4, #0]
 800fb34:	6802      	ldr	r2, [r0, #0]
 800fb36:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800fb38:	4790      	blx	r2
 800fb3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb3c:	9000      	str	r0, [sp, #0]
 800fb3e:	a830      	add	r0, sp, #192	; 0xc0
 800fb40:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800fb42:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800fb44:	f002 fa3b 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fb48:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800fb4c:	a80e      	add	r0, sp, #56	; 0x38
 800fb4e:	7be2      	ldrb	r2, [r4, #15]
 800fb50:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800fb54:	1a8a      	subs	r2, r1, r2
 800fb56:	7c21      	ldrb	r1, [r4, #16]
 800fb58:	9103      	str	r1, [sp, #12]
 800fb5a:	b292      	uxth	r2, r2
 800fb5c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800fb60:	9102      	str	r1, [sp, #8]
 800fb62:	6821      	ldr	r1, [r4, #0]
 800fb64:	9101      	str	r1, [sp, #4]
 800fb66:	7961      	ldrb	r1, [r4, #5]
 800fb68:	9100      	str	r1, [sp, #0]
 800fb6a:	a930      	add	r1, sp, #192	; 0xc0
 800fb6c:	f7ff fc34 	bl	800f3d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800fb70:	2e00      	cmp	r6, #0
 800fb72:	dc5b      	bgt.n	800fc2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800fb74:	af17      	add	r7, sp, #92	; 0x5c
 800fb76:	f04f 0900 	mov.w	r9, #0
 800fb7a:	7c23      	ldrb	r3, [r4, #16]
 800fb7c:	2b00      	cmp	r3, #0
 800fb7e:	f000 80b1 	beq.w	800fce4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800fb82:	a80e      	add	r0, sp, #56	; 0x38
 800fb84:	f7ff fe4d 	bl	800f822 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fb88:	f1ba 0f00 	cmp.w	sl, #0
 800fb8c:	f000 80a5 	beq.w	800fcda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800fb90:	7c23      	ldrb	r3, [r4, #16]
 800fb92:	2264      	movs	r2, #100	; 0x64
 800fb94:	4639      	mov	r1, r7
 800fb96:	a849      	add	r0, sp, #292	; 0x124
 800fb98:	9309      	str	r3, [sp, #36]	; 0x24
 800fb9a:	f011 fc42 	bl	8021422 <memcpy>
 800fb9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fba0:	2b00      	cmp	r3, #0
 800fba2:	f000 80a7 	beq.w	800fcf4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800fba6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800fbaa:	7922      	ldrb	r2, [r4, #4]
 800fbac:	2a01      	cmp	r2, #1
 800fbae:	f040 808a 	bne.w	800fcc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800fbb2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800fbb6:	1ac0      	subs	r0, r0, r3
 800fbb8:	2302      	movs	r3, #2
 800fbba:	fb90 f0f3 	sdiv	r0, r0, r3
 800fbbe:	b200      	sxth	r0, r0
 800fbc0:	7c23      	ldrb	r3, [r4, #16]
 800fbc2:	2b00      	cmp	r3, #0
 800fbc4:	f000 808b 	beq.w	800fcde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800fbc8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800fbcc:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800fbd0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fbd4:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800fbd8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800fbdc:	2100      	movs	r1, #0
 800fbde:	4410      	add	r0, r2
 800fbe0:	4642      	mov	r2, r8
 800fbe2:	b200      	sxth	r0, r0
 800fbe4:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800fbe8:	9000      	str	r0, [sp, #0]
 800fbea:	4658      	mov	r0, fp
 800fbec:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800fbf0:	f7ff fca2 	bl	800f538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800fbf4:	2800      	cmp	r0, #0
 800fbf6:	d163      	bne.n	800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fbf8:	b2b2      	uxth	r2, r6
 800fbfa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800fbfe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800fc02:	4413      	add	r3, r2
 800fc04:	1a8a      	subs	r2, r1, r2
 800fc06:	b21b      	sxth	r3, r3
 800fc08:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800fc0c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800fc10:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800fc14:	2a00      	cmp	r2, #0
 800fc16:	d153      	bne.n	800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fc18:	6822      	ldr	r2, [r4, #0]
 800fc1a:	8869      	ldrh	r1, [r5, #2]
 800fc1c:	7a12      	ldrb	r2, [r2, #8]
 800fc1e:	1a9b      	subs	r3, r3, r2
 800fc20:	88ea      	ldrh	r2, [r5, #6]
 800fc22:	440a      	add	r2, r1
 800fc24:	b212      	sxth	r2, r2
 800fc26:	4293      	cmp	r3, r2
 800fc28:	dda7      	ble.n	800fb7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800fc2a:	e049      	b.n	800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fc2c:	7c23      	ldrb	r3, [r4, #16]
 800fc2e:	444f      	add	r7, r9
 800fc30:	b1c3      	cbz	r3, 800fc64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800fc32:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800fc36:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fc3a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fc3e:	443b      	add	r3, r7
 800fc40:	4293      	cmp	r3, r2
 800fc42:	da97      	bge.n	800fb74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800fc44:	a80e      	add	r0, sp, #56	; 0x38
 800fc46:	f7ff fdec 	bl	800f822 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fc4a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800fc4e:	3b01      	subs	r3, #1
 800fc50:	b29b      	uxth	r3, r3
 800fc52:	454b      	cmp	r3, r9
 800fc54:	9309      	str	r3, [sp, #36]	; 0x24
 800fc56:	d021      	beq.n	800fc9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800fc58:	7961      	ldrb	r1, [r4, #5]
 800fc5a:	a817      	add	r0, sp, #92	; 0x5c
 800fc5c:	f7f3 fc1a 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fc60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fc62:	e7f4      	b.n	800fc4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800fc64:	fa1f f986 	uxth.w	r9, r6
 800fc68:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fc6c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fc70:	443b      	add	r3, r7
 800fc72:	4293      	cmp	r3, r2
 800fc74:	f6bf af7e 	bge.w	800fb74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800fc78:	a817      	add	r0, sp, #92	; 0x5c
 800fc7a:	f002 fd71 	bl	8012760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fc7e:	b1f8      	cbz	r0, 800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fc80:	280a      	cmp	r0, #10
 800fc82:	d1f1      	bne.n	800fc68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800fc84:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800fc88:	444b      	add	r3, r9
 800fc8a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800fc8e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800fc92:	eba3 0309 	sub.w	r3, r3, r9
 800fc96:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fc9a:	e7e5      	b.n	800fc68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800fc9c:	b2b3      	uxth	r3, r6
 800fc9e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800fca2:	441a      	add	r2, r3
 800fca4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800fca8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800fcac:	1ad3      	subs	r3, r2, r3
 800fcae:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fcb2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800fcb6:	b11b      	cbz	r3, 800fcc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fcb8:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 800fcbc:	2b00      	cmp	r3, #0
 800fcbe:	d0ba      	beq.n	800fc36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800fcc0:	b063      	add	sp, #396	; 0x18c
 800fcc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcc6:	2a02      	cmp	r2, #2
 800fcc8:	d105      	bne.n	800fcd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800fcca:	7be2      	ldrb	r2, [r4, #15]
 800fccc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800fcd0:	1a80      	subs	r0, r0, r2
 800fcd2:	1ac0      	subs	r0, r0, r3
 800fcd4:	e773      	b.n	800fbbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800fcd6:	2000      	movs	r0, #0
 800fcd8:	e772      	b.n	800fbc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800fcda:	7be0      	ldrb	r0, [r4, #15]
 800fcdc:	e770      	b.n	800fbc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800fcde:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fce2:	e773      	b.n	800fbcc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800fce4:	f1ba 0f00 	cmp.w	sl, #0
 800fce8:	d0f7      	beq.n	800fcda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800fcea:	2264      	movs	r2, #100	; 0x64
 800fcec:	4639      	mov	r1, r7
 800fcee:	a849      	add	r0, sp, #292	; 0x124
 800fcf0:	f011 fb97 	bl	8021422 <memcpy>
 800fcf4:	2300      	movs	r3, #0
 800fcf6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fcfa:	6821      	ldr	r1, [r4, #0]
 800fcfc:	a849      	add	r0, sp, #292	; 0x124
 800fcfe:	f7ff fbae 	bl	800f45e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800fd02:	b203      	sxth	r3, r0
 800fd04:	e751      	b.n	800fbaa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800fd06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800fd06:	2b03      	cmp	r3, #3
 800fd08:	d818      	bhi.n	800fd3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800fd0a:	e8df f003 	tbb	[pc, r3]
 800fd0e:	0602      	.short	0x0602
 800fd10:	130d      	.short	0x130d
 800fd12:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fd16:	1850      	adds	r0, r2, r1
 800fd18:	4770      	bx	lr
 800fd1a:	8803      	ldrh	r3, [r0, #0]
 800fd1c:	8880      	ldrh	r0, [r0, #4]
 800fd1e:	4418      	add	r0, r3
 800fd20:	b200      	sxth	r0, r0
 800fd22:	1a80      	subs	r0, r0, r2
 800fd24:	3801      	subs	r0, #1
 800fd26:	4770      	bx	lr
 800fd28:	8803      	ldrh	r3, [r0, #0]
 800fd2a:	8880      	ldrh	r0, [r0, #4]
 800fd2c:	4418      	add	r0, r3
 800fd2e:	b200      	sxth	r0, r0
 800fd30:	1a40      	subs	r0, r0, r1
 800fd32:	e7f7      	b.n	800fd24 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800fd34:	f9b0 0000 	ldrsh.w	r0, [r0]
 800fd38:	4410      	add	r0, r2
 800fd3a:	4770      	bx	lr
 800fd3c:	2000      	movs	r0, #0
 800fd3e:	4770      	bx	lr

0800fd40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800fd40:	2b03      	cmp	r3, #3
 800fd42:	d817      	bhi.n	800fd74 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800fd44:	e8df f003 	tbb	[pc, r3]
 800fd48:	10090602 	.word	0x10090602
 800fd4c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fd50:	1850      	adds	r0, r2, r1
 800fd52:	4770      	bx	lr
 800fd54:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fd58:	e7fa      	b.n	800fd50 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800fd5a:	8843      	ldrh	r3, [r0, #2]
 800fd5c:	88c0      	ldrh	r0, [r0, #6]
 800fd5e:	4418      	add	r0, r3
 800fd60:	b200      	sxth	r0, r0
 800fd62:	1a80      	subs	r0, r0, r2
 800fd64:	3801      	subs	r0, #1
 800fd66:	4770      	bx	lr
 800fd68:	8843      	ldrh	r3, [r0, #2]
 800fd6a:	88c0      	ldrh	r0, [r0, #6]
 800fd6c:	4418      	add	r0, r3
 800fd6e:	b200      	sxth	r0, r0
 800fd70:	1a40      	subs	r0, r0, r1
 800fd72:	e7f7      	b.n	800fd64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800fd74:	2000      	movs	r0, #0
 800fd76:	4770      	bx	lr

0800fd78 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800fd78:	4b01      	ldr	r3, [pc, #4]	; (800fd80 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800fd7a:	2200      	movs	r2, #0
 800fd7c:	601a      	str	r2, [r3, #0]
 800fd7e:	4770      	bx	lr
 800fd80:	2400e434 	.word	0x2400e434

0800fd84 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800fd84:	4603      	mov	r3, r0
 800fd86:	b1c8      	cbz	r0, 800fdbc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800fd88:	0c02      	lsrs	r2, r0, #16
 800fd8a:	0412      	lsls	r2, r2, #16
 800fd8c:	b9a2      	cbnz	r2, 800fdb8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800fd8e:	0403      	lsls	r3, r0, #16
 800fd90:	2010      	movs	r0, #16
 800fd92:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800fd96:	bf04      	itt	eq
 800fd98:	021b      	lsleq	r3, r3, #8
 800fd9a:	3008      	addeq	r0, #8
 800fd9c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800fda0:	bf04      	itt	eq
 800fda2:	011b      	lsleq	r3, r3, #4
 800fda4:	3004      	addeq	r0, #4
 800fda6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800fdaa:	bf04      	itt	eq
 800fdac:	009b      	lsleq	r3, r3, #2
 800fdae:	3002      	addeq	r0, #2
 800fdb0:	2b00      	cmp	r3, #0
 800fdb2:	db04      	blt.n	800fdbe <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800fdb4:	3001      	adds	r0, #1
 800fdb6:	4770      	bx	lr
 800fdb8:	2000      	movs	r0, #0
 800fdba:	e7ea      	b.n	800fd92 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800fdbc:	2020      	movs	r0, #32
 800fdbe:	4770      	bx	lr

0800fdc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800fdc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fdc4:	b087      	sub	sp, #28
 800fdc6:	460d      	mov	r5, r1
 800fdc8:	4616      	mov	r6, r2
 800fdca:	4698      	mov	r8, r3
 800fdcc:	4601      	mov	r1, r0
 800fdce:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800fdd2:	b120      	cbz	r0, 800fdde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fdd4:	b11a      	cbz	r2, 800fdde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fdd6:	2d1f      	cmp	r5, #31
 800fdd8:	d801      	bhi.n	800fdde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fdda:	2b1f      	cmp	r3, #31
 800fddc:	d904      	bls.n	800fde8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800fdde:	2000      	movs	r0, #0
 800fde0:	6038      	str	r0, [r7, #0]
 800fde2:	b007      	add	sp, #28
 800fde4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fde8:	b97d      	cbnz	r5, 800fe0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800fdea:	b143      	cbz	r3, 800fdfe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800fdec:	4602      	mov	r2, r0
 800fdee:	462b      	mov	r3, r5
 800fdf0:	4641      	mov	r1, r8
 800fdf2:	4630      	mov	r0, r6
 800fdf4:	e9cd 4700 	strd	r4, r7, [sp]
 800fdf8:	f7ff ffe2 	bl	800fdc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fdfc:	e7f1      	b.n	800fde2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fdfe:	f04f 33ff 	mov.w	r3, #4294967295
 800fe02:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fe06:	603b      	str	r3, [r7, #0]
 800fe08:	e7eb      	b.n	800fde2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fe0a:	fa32 fa05 	lsrs.w	sl, r2, r5
 800fe0e:	d106      	bne.n	800fe1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800fe10:	4346      	muls	r6, r0
 800fe12:	fbb6 f0f4 	udiv	r0, r6, r4
 800fe16:	fb04 6610 	mls	r6, r4, r0, r6
 800fe1a:	603e      	str	r6, [r7, #0]
 800fe1c:	e7e1      	b.n	800fde2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fe1e:	2201      	movs	r2, #1
 800fe20:	fa00 fb05 	lsl.w	fp, r0, r5
 800fe24:	40aa      	lsls	r2, r5
 800fe26:	fbbb f9f4 	udiv	r9, fp, r4
 800fe2a:	3a01      	subs	r2, #1
 800fe2c:	fb0a f309 	mul.w	r3, sl, r9
 800fe30:	fb04 b919 	mls	r9, r4, r9, fp
 800fe34:	4016      	ands	r6, r2
 800fe36:	9303      	str	r3, [sp, #12]
 800fe38:	4630      	mov	r0, r6
 800fe3a:	f7ff ffa3 	bl	800fd84 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fe3e:	462b      	mov	r3, r5
 800fe40:	460a      	mov	r2, r1
 800fe42:	4601      	mov	r1, r0
 800fe44:	4630      	mov	r0, r6
 800fe46:	e9cd 4700 	strd	r4, r7, [sp]
 800fe4a:	f7ff ffb9 	bl	800fdc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fe4e:	4606      	mov	r6, r0
 800fe50:	4648      	mov	r0, r9
 800fe52:	eb05 0108 	add.w	r1, r5, r8
 800fe56:	f7ff ff95 	bl	800fd84 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fe5a:	ab05      	add	r3, sp, #20
 800fe5c:	464a      	mov	r2, r9
 800fe5e:	e9cd 4300 	strd	r4, r3, [sp]
 800fe62:	4603      	mov	r3, r0
 800fe64:	4650      	mov	r0, sl
 800fe66:	f7ff ffab 	bl	800fdc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fe6a:	6839      	ldr	r1, [r7, #0]
 800fe6c:	9a05      	ldr	r2, [sp, #20]
 800fe6e:	9b03      	ldr	r3, [sp, #12]
 800fe70:	4411      	add	r1, r2
 800fe72:	fbb1 f2f4 	udiv	r2, r1, r4
 800fe76:	18d3      	adds	r3, r2, r3
 800fe78:	fb04 1412 	mls	r4, r4, r2, r1
 800fe7c:	441e      	add	r6, r3
 800fe7e:	603c      	str	r4, [r7, #0]
 800fe80:	4430      	add	r0, r6
 800fe82:	e7ae      	b.n	800fde2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800fe84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800fe84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe88:	b085      	sub	sp, #20
 800fe8a:	f1b0 0900 	subs.w	r9, r0, #0
 800fe8e:	461d      	mov	r5, r3
 800fe90:	4617      	mov	r7, r2
 800fe92:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fe94:	bfbb      	ittet	lt
 800fe96:	f1c9 0900 	rsblt	r9, r9, #0
 800fe9a:	f04f 36ff 	movlt.w	r6, #4294967295
 800fe9e:	2601      	movge	r6, #1
 800fea0:	6823      	ldrlt	r3, [r4, #0]
 800fea2:	bfbc      	itt	lt
 800fea4:	425b      	neglt	r3, r3
 800fea6:	6023      	strlt	r3, [r4, #0]
 800fea8:	2a00      	cmp	r2, #0
 800feaa:	da04      	bge.n	800feb6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800feac:	6823      	ldr	r3, [r4, #0]
 800feae:	4257      	negs	r7, r2
 800feb0:	4276      	negs	r6, r6
 800feb2:	425b      	negs	r3, r3
 800feb4:	6023      	str	r3, [r4, #0]
 800feb6:	2d00      	cmp	r5, #0
 800feb8:	4638      	mov	r0, r7
 800feba:	bfba      	itte	lt
 800febc:	426d      	neglt	r5, r5
 800febe:	f04f 38ff 	movlt.w	r8, #4294967295
 800fec2:	f04f 0801 	movge.w	r8, #1
 800fec6:	f7ff ff5d 	bl	800fd84 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800feca:	ab03      	add	r3, sp, #12
 800fecc:	463a      	mov	r2, r7
 800fece:	e9cd 5300 	strd	r5, r3, [sp]
 800fed2:	4603      	mov	r3, r0
 800fed4:	4648      	mov	r0, r9
 800fed6:	f7ff ff73 	bl	800fdc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800feda:	6823      	ldr	r3, [r4, #0]
 800fedc:	9a03      	ldr	r2, [sp, #12]
 800fede:	4546      	cmp	r6, r8
 800fee0:	441a      	add	r2, r3
 800fee2:	fb92 f3f5 	sdiv	r3, r2, r5
 800fee6:	4418      	add	r0, r3
 800fee8:	fb05 2313 	mls	r3, r5, r3, r2
 800feec:	bf18      	it	ne
 800feee:	4240      	negne	r0, r0
 800fef0:	1c72      	adds	r2, r6, #1
 800fef2:	6023      	str	r3, [r4, #0]
 800fef4:	d105      	bne.n	800ff02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800fef6:	2b00      	cmp	r3, #0
 800fef8:	f1c3 0200 	rsb	r2, r3, #0
 800fefc:	db0b      	blt.n	800ff16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800fefe:	6022      	str	r2, [r4, #0]
 800ff00:	e006      	b.n	800ff10 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ff02:	2e01      	cmp	r6, #1
 800ff04:	d104      	bne.n	800ff10 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ff06:	2b00      	cmp	r3, #0
 800ff08:	da02      	bge.n	800ff10 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ff0a:	442b      	add	r3, r5
 800ff0c:	3801      	subs	r0, #1
 800ff0e:	6023      	str	r3, [r4, #0]
 800ff10:	b005      	add	sp, #20
 800ff12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff16:	3801      	subs	r0, #1
 800ff18:	1b52      	subs	r2, r2, r5
 800ff1a:	e7f0      	b.n	800fefe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800ff1c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ff1c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ff20:	4c1c      	ldr	r4, [pc, #112]	; (800ff94 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800ff22:	4605      	mov	r5, r0
 800ff24:	6807      	ldr	r7, [r0, #0]
 800ff26:	69a3      	ldr	r3, [r4, #24]
 800ff28:	b92b      	cbnz	r3, 800ff36 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800ff2a:	6840      	ldr	r0, [r0, #4]
 800ff2c:	e9c5 7000 	strd	r7, r0, [r5]
 800ff30:	b004      	add	sp, #16
 800ff32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ff36:	f04f 0802 	mov.w	r8, #2
 800ff3a:	68a2      	ldr	r2, [r4, #8]
 800ff3c:	ae04      	add	r6, sp, #16
 800ff3e:	6820      	ldr	r0, [r4, #0]
 800ff40:	fb93 f1f8 	sdiv	r1, r3, r8
 800ff44:	440a      	add	r2, r1
 800ff46:	69e1      	ldr	r1, [r4, #28]
 800ff48:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ff4c:	463a      	mov	r2, r7
 800ff4e:	9600      	str	r6, [sp, #0]
 800ff50:	f7ff ff98 	bl	800fe84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ff54:	69a3      	ldr	r3, [r4, #24]
 800ff56:	4607      	mov	r7, r0
 800ff58:	686a      	ldr	r2, [r5, #4]
 800ff5a:	6a21      	ldr	r1, [r4, #32]
 800ff5c:	9600      	str	r6, [sp, #0]
 800ff5e:	6860      	ldr	r0, [r4, #4]
 800ff60:	f7ff ff90 	bl	800fe84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ff64:	69a3      	ldr	r3, [r4, #24]
 800ff66:	6962      	ldr	r2, [r4, #20]
 800ff68:	4407      	add	r7, r0
 800ff6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ff6c:	9600      	str	r6, [sp, #0]
 800ff6e:	68e0      	ldr	r0, [r4, #12]
 800ff70:	fb93 f8f8 	sdiv	r8, r3, r8
 800ff74:	4442      	add	r2, r8
 800ff76:	9203      	str	r2, [sp, #12]
 800ff78:	682a      	ldr	r2, [r5, #0]
 800ff7a:	f7ff ff83 	bl	800fe84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ff7e:	4680      	mov	r8, r0
 800ff80:	9600      	str	r6, [sp, #0]
 800ff82:	69a3      	ldr	r3, [r4, #24]
 800ff84:	686a      	ldr	r2, [r5, #4]
 800ff86:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ff88:	6920      	ldr	r0, [r4, #16]
 800ff8a:	f7ff ff7b 	bl	800fe84 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ff8e:	4440      	add	r0, r8
 800ff90:	e7cc      	b.n	800ff2c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ff92:	bf00      	nop
 800ff94:	2400e438 	.word	0x2400e438

0800ff98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ff98:	4b07      	ldr	r3, [pc, #28]	; (800ffb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ff9a:	781b      	ldrb	r3, [r3, #0]
 800ff9c:	2b01      	cmp	r3, #1
 800ff9e:	d109      	bne.n	800ffb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ffa0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ffa4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ffa8:	8003      	strh	r3, [r0, #0]
 800ffaa:	4b04      	ldr	r3, [pc, #16]	; (800ffbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ffac:	881b      	ldrh	r3, [r3, #0]
 800ffae:	3b01      	subs	r3, #1
 800ffb0:	1a9b      	subs	r3, r3, r2
 800ffb2:	800b      	strh	r3, [r1, #0]
 800ffb4:	4770      	bx	lr
 800ffb6:	bf00      	nop
 800ffb8:	2400e41c 	.word	0x2400e41c
 800ffbc:	2400e418 	.word	0x2400e418

0800ffc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ffc0:	4b07      	ldr	r3, [pc, #28]	; (800ffe0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ffc2:	b510      	push	{r4, lr}
 800ffc4:	781b      	ldrb	r3, [r3, #0]
 800ffc6:	2b01      	cmp	r3, #1
 800ffc8:	d108      	bne.n	800ffdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ffca:	4b06      	ldr	r3, [pc, #24]	; (800ffe4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ffcc:	880c      	ldrh	r4, [r1, #0]
 800ffce:	881b      	ldrh	r3, [r3, #0]
 800ffd0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ffd4:	3b01      	subs	r3, #1
 800ffd6:	1b1b      	subs	r3, r3, r4
 800ffd8:	8003      	strh	r3, [r0, #0]
 800ffda:	800a      	strh	r2, [r1, #0]
 800ffdc:	bd10      	pop	{r4, pc}
 800ffde:	bf00      	nop
 800ffe0:	2400e41c 	.word	0x2400e41c
 800ffe4:	2400e418 	.word	0x2400e418

0800ffe8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ffe8:	4b0a      	ldr	r3, [pc, #40]	; (8010014 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ffea:	b510      	push	{r4, lr}
 800ffec:	781b      	ldrb	r3, [r3, #0]
 800ffee:	2b01      	cmp	r3, #1
 800fff0:	d10e      	bne.n	8010010 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fff2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fff6:	8843      	ldrh	r3, [r0, #2]
 800fff8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fffc:	18ca      	adds	r2, r1, r3
 800fffe:	4b06      	ldr	r3, [pc, #24]	; (8010018 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010000:	8044      	strh	r4, [r0, #2]
 8010002:	881b      	ldrh	r3, [r3, #0]
 8010004:	1a9b      	subs	r3, r3, r2
 8010006:	8003      	strh	r3, [r0, #0]
 8010008:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801000c:	8081      	strh	r1, [r0, #4]
 801000e:	80c3      	strh	r3, [r0, #6]
 8010010:	bd10      	pop	{r4, pc}
 8010012:	bf00      	nop
 8010014:	2400e41c 	.word	0x2400e41c
 8010018:	2400e418 	.word	0x2400e418

0801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801001c:	4b08      	ldr	r3, [pc, #32]	; (8010040 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801001e:	781b      	ldrb	r3, [r3, #0]
 8010020:	2b01      	cmp	r3, #1
 8010022:	d10c      	bne.n	801003e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010024:	8803      	ldrh	r3, [r0, #0]
 8010026:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801002a:	8842      	ldrh	r2, [r0, #2]
 801002c:	8002      	strh	r2, [r0, #0]
 801002e:	185a      	adds	r2, r3, r1
 8010030:	4b04      	ldr	r3, [pc, #16]	; (8010044 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010032:	881b      	ldrh	r3, [r3, #0]
 8010034:	1a9b      	subs	r3, r3, r2
 8010036:	8043      	strh	r3, [r0, #2]
 8010038:	88c3      	ldrh	r3, [r0, #6]
 801003a:	80c1      	strh	r1, [r0, #6]
 801003c:	8083      	strh	r3, [r0, #4]
 801003e:	4770      	bx	lr
 8010040:	2400e41c 	.word	0x2400e41c
 8010044:	2400e418 	.word	0x2400e418

08010048 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010048:	4b07      	ldr	r3, [pc, #28]	; (8010068 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801004a:	b510      	push	{r4, lr}
 801004c:	781b      	ldrb	r3, [r3, #0]
 801004e:	2b01      	cmp	r3, #1
 8010050:	d108      	bne.n	8010064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010052:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010056:	f9b0 4000 	ldrsh.w	r4, [r0]
 801005a:	8003      	strh	r3, [r0, #0]
 801005c:	8893      	ldrh	r3, [r2, #4]
 801005e:	3b01      	subs	r3, #1
 8010060:	1b1b      	subs	r3, r3, r4
 8010062:	800b      	strh	r3, [r1, #0]
 8010064:	bd10      	pop	{r4, pc}
 8010066:	bf00      	nop
 8010068:	2400e41c 	.word	0x2400e41c

0801006c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 801006c:	4b0b      	ldr	r3, [pc, #44]	; (801009c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801006e:	781b      	ldrb	r3, [r3, #0]
 8010070:	2b01      	cmp	r3, #1
 8010072:	d111      	bne.n	8010098 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8010074:	680b      	ldr	r3, [r1, #0]
 8010076:	ed90 7a00 	vldr	s14, [r0]
 801007a:	6003      	str	r3, [r0, #0]
 801007c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8010080:	eddf 6a07 	vldr	s13, [pc, #28]	; 80100a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8010084:	ee07 3a90 	vmov	s15, r3
 8010088:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801008c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010090:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8010094:	edc1 7a00 	vstr	s15, [r1]
 8010098:	4770      	bx	lr
 801009a:	bf00      	nop
 801009c:	2400e41c 	.word	0x2400e41c
 80100a0:	38d1b717 	.word	0x38d1b717

080100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80100a4:	4b0a      	ldr	r3, [pc, #40]	; (80100d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80100a6:	460a      	mov	r2, r1
 80100a8:	b510      	push	{r4, lr}
 80100aa:	781b      	ldrb	r3, [r3, #0]
 80100ac:	2b01      	cmp	r3, #1
 80100ae:	d10d      	bne.n	80100cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80100b0:	8881      	ldrh	r1, [r0, #4]
 80100b2:	8803      	ldrh	r3, [r0, #0]
 80100b4:	440b      	add	r3, r1
 80100b6:	4601      	mov	r1, r0
 80100b8:	3b01      	subs	r3, #1
 80100ba:	f821 3b02 	strh.w	r3, [r1], #2
 80100be:	f7ff ffc3 	bl	8010048 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80100c2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80100c6:	88c2      	ldrh	r2, [r0, #6]
 80100c8:	80c3      	strh	r3, [r0, #6]
 80100ca:	8082      	strh	r2, [r0, #4]
 80100cc:	bd10      	pop	{r4, pc}
 80100ce:	bf00      	nop
 80100d0:	2400e41c 	.word	0x2400e41c

080100d4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80100d4:	4b06      	ldr	r3, [pc, #24]	; (80100f0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80100d6:	2100      	movs	r1, #0
 80100d8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80100dc:	4b05      	ldr	r3, [pc, #20]	; (80100f4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80100de:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80100e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80100e6:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80100ea:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80100ee:	4770      	bx	lr
 80100f0:	2400e418 	.word	0x2400e418
 80100f4:	2400e41a 	.word	0x2400e41a

080100f8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80100f8:	4b03      	ldr	r3, [pc, #12]	; (8010108 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80100fa:	6818      	ldr	r0, [r3, #0]
 80100fc:	b110      	cbz	r0, 8010104 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80100fe:	6803      	ldr	r3, [r0, #0]
 8010100:	699b      	ldr	r3, [r3, #24]
 8010102:	4718      	bx	r3
 8010104:	4770      	bx	lr
 8010106:	bf00      	nop
 8010108:	2400e468 	.word	0x2400e468

0801010c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801010c:	4770      	bx	lr
	...

08010110 <_ZN8touchgfx11Application4drawEv>:
 8010110:	4b09      	ldr	r3, [pc, #36]	; (8010138 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010112:	b507      	push	{r0, r1, r2, lr}
 8010114:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010118:	2100      	movs	r1, #0
 801011a:	4b08      	ldr	r3, [pc, #32]	; (801013c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801011c:	9100      	str	r1, [sp, #0]
 801011e:	4669      	mov	r1, sp
 8010120:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010124:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010128:	f8ad 3006 	strh.w	r3, [sp, #6]
 801012c:	6803      	ldr	r3, [r0, #0]
 801012e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010130:	4798      	blx	r3
 8010132:	b003      	add	sp, #12
 8010134:	f85d fb04 	ldr.w	pc, [sp], #4
 8010138:	2400e418 	.word	0x2400e418
 801013c:	2400e41a 	.word	0x2400e41a

08010140 <_ZN8touchgfx11Application10invalidateEv>:
 8010140:	4b09      	ldr	r3, [pc, #36]	; (8010168 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8010142:	b082      	sub	sp, #8
 8010144:	2100      	movs	r1, #0
 8010146:	f9b3 2000 	ldrsh.w	r2, [r3]
 801014a:	4b08      	ldr	r3, [pc, #32]	; (801016c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801014c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010150:	aa02      	add	r2, sp, #8
 8010152:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010156:	9100      	str	r1, [sp, #0]
 8010158:	f8ad 3006 	strh.w	r3, [sp, #6]
 801015c:	6803      	ldr	r3, [r0, #0]
 801015e:	e912 0006 	ldmdb	r2, {r1, r2}
 8010162:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010164:	b002      	add	sp, #8
 8010166:	4718      	bx	r3
 8010168:	2400e418 	.word	0x2400e418
 801016c:	2400e41a 	.word	0x2400e41a

08010170 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010170:	4b03      	ldr	r3, [pc, #12]	; (8010180 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010172:	6818      	ldr	r0, [r3, #0]
 8010174:	b110      	cbz	r0, 801017c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010176:	6803      	ldr	r3, [r0, #0]
 8010178:	69db      	ldr	r3, [r3, #28]
 801017a:	4718      	bx	r3
 801017c:	4770      	bx	lr
 801017e:	bf00      	nop
 8010180:	2400e468 	.word	0x2400e468

08010184 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010184:	4b03      	ldr	r3, [pc, #12]	; (8010194 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010186:	6818      	ldr	r0, [r3, #0]
 8010188:	b110      	cbz	r0, 8010190 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801018a:	6803      	ldr	r3, [r0, #0]
 801018c:	6a1b      	ldr	r3, [r3, #32]
 801018e:	4718      	bx	r3
 8010190:	4770      	bx	lr
 8010192:	bf00      	nop
 8010194:	2400e468 	.word	0x2400e468

08010198 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010198:	2300      	movs	r3, #0
 801019a:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801019e:	4770      	bx	lr

080101a0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80101a0:	4b03      	ldr	r3, [pc, #12]	; (80101b0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80101a2:	6818      	ldr	r0, [r3, #0]
 80101a4:	b110      	cbz	r0, 80101ac <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80101a6:	6803      	ldr	r3, [r0, #0]
 80101a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80101aa:	4718      	bx	r3
 80101ac:	4770      	bx	lr
 80101ae:	bf00      	nop
 80101b0:	2400e468 	.word	0x2400e468

080101b4 <_ZN8touchgfx11ApplicationD1Ev>:
 80101b4:	4770      	bx	lr

080101b6 <_ZN8touchgfx11ApplicationD0Ev>:
 80101b6:	b510      	push	{r4, lr}
 80101b8:	4604      	mov	r4, r0
 80101ba:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80101be:	f010 fe2c 	bl	8020e1a <_ZdlPvj>
 80101c2:	4620      	mov	r0, r4
 80101c4:	bd10      	pop	{r4, pc}

080101c6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80101c6:	b510      	push	{r4, lr}
 80101c8:	f9b1 4000 	ldrsh.w	r4, [r1]
 80101cc:	888a      	ldrh	r2, [r1, #4]
 80101ce:	f9b0 3000 	ldrsh.w	r3, [r0]
 80101d2:	4422      	add	r2, r4
 80101d4:	b212      	sxth	r2, r2
 80101d6:	4293      	cmp	r3, r2
 80101d8:	da15      	bge.n	8010206 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80101da:	8882      	ldrh	r2, [r0, #4]
 80101dc:	4413      	add	r3, r2
 80101de:	b21b      	sxth	r3, r3
 80101e0:	429c      	cmp	r4, r3
 80101e2:	da10      	bge.n	8010206 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80101e4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80101e8:	88c9      	ldrh	r1, [r1, #6]
 80101ea:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80101ee:	4419      	add	r1, r3
 80101f0:	b209      	sxth	r1, r1
 80101f2:	428a      	cmp	r2, r1
 80101f4:	da07      	bge.n	8010206 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80101f6:	88c0      	ldrh	r0, [r0, #6]
 80101f8:	4410      	add	r0, r2
 80101fa:	b200      	sxth	r0, r0
 80101fc:	4283      	cmp	r3, r0
 80101fe:	bfac      	ite	ge
 8010200:	2000      	movge	r0, #0
 8010202:	2001      	movlt	r0, #1
 8010204:	bd10      	pop	{r4, pc}
 8010206:	2000      	movs	r0, #0
 8010208:	e7fc      	b.n	8010204 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801020a <_ZN8touchgfx4Rect10restrictToEss>:
 801020a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801020e:	2b00      	cmp	r3, #0
 8010210:	b510      	push	{r4, lr}
 8010212:	da04      	bge.n	801021e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010214:	8884      	ldrh	r4, [r0, #4]
 8010216:	4423      	add	r3, r4
 8010218:	8083      	strh	r3, [r0, #4]
 801021a:	2300      	movs	r3, #0
 801021c:	8003      	strh	r3, [r0, #0]
 801021e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010222:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010226:	1b09      	subs	r1, r1, r4
 8010228:	428b      	cmp	r3, r1
 801022a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801022e:	bfc8      	it	gt
 8010230:	8081      	strhgt	r1, [r0, #4]
 8010232:	2b00      	cmp	r3, #0
 8010234:	da04      	bge.n	8010240 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010236:	88c1      	ldrh	r1, [r0, #6]
 8010238:	440b      	add	r3, r1
 801023a:	80c3      	strh	r3, [r0, #6]
 801023c:	2300      	movs	r3, #0
 801023e:	8043      	strh	r3, [r0, #2]
 8010240:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010244:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010248:	1a52      	subs	r2, r2, r1
 801024a:	4293      	cmp	r3, r2
 801024c:	bfc8      	it	gt
 801024e:	80c2      	strhgt	r2, [r0, #6]
 8010250:	bd10      	pop	{r4, pc}
	...

08010254 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010254:	4b10      	ldr	r3, [pc, #64]	; (8010298 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010256:	b510      	push	{r4, lr}
 8010258:	460c      	mov	r4, r1
 801025a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801025e:	4b0f      	ldr	r3, [pc, #60]	; (801029c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8010260:	4620      	mov	r0, r4
 8010262:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010266:	f7ff ffd0 	bl	801020a <_ZN8touchgfx4Rect10restrictToEss>
 801026a:	4b0d      	ldr	r3, [pc, #52]	; (80102a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801026c:	6818      	ldr	r0, [r3, #0]
 801026e:	b190      	cbz	r0, 8010296 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010270:	6803      	ldr	r3, [r0, #0]
 8010272:	4621      	mov	r1, r4
 8010274:	689b      	ldr	r3, [r3, #8]
 8010276:	4798      	blx	r3
 8010278:	4b0a      	ldr	r3, [pc, #40]	; (80102a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801027a:	6818      	ldr	r0, [r3, #0]
 801027c:	b118      	cbz	r0, 8010286 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801027e:	6803      	ldr	r3, [r0, #0]
 8010280:	4621      	mov	r1, r4
 8010282:	689b      	ldr	r3, [r3, #8]
 8010284:	4798      	blx	r3
 8010286:	4b08      	ldr	r3, [pc, #32]	; (80102a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010288:	4621      	mov	r1, r4
 801028a:	6818      	ldr	r0, [r3, #0]
 801028c:	6803      	ldr	r3, [r0, #0]
 801028e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010292:	69db      	ldr	r3, [r3, #28]
 8010294:	4718      	bx	r3
 8010296:	bd10      	pop	{r4, pc}
 8010298:	2400e41a 	.word	0x2400e41a
 801029c:	2400e418 	.word	0x2400e418
 80102a0:	2400e468 	.word	0x2400e468
 80102a4:	2400e464 	.word	0x2400e464
 80102a8:	2400e424 	.word	0x2400e424

080102ac <_ZNK8touchgfx4Rect8includesERKS0_>:
 80102ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80102ae:	4606      	mov	r6, r0
 80102b0:	4608      	mov	r0, r1
 80102b2:	460f      	mov	r7, r1
 80102b4:	f7fa fc75 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80102b8:	b9e8      	cbnz	r0, 80102f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80102ba:	f9b7 5000 	ldrsh.w	r5, [r7]
 80102be:	f9b6 4000 	ldrsh.w	r4, [r6]
 80102c2:	42a5      	cmp	r5, r4
 80102c4:	db17      	blt.n	80102f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80102c6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80102ca:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80102ce:	429a      	cmp	r2, r3
 80102d0:	db11      	blt.n	80102f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80102d2:	88b9      	ldrh	r1, [r7, #4]
 80102d4:	440d      	add	r5, r1
 80102d6:	88b1      	ldrh	r1, [r6, #4]
 80102d8:	440c      	add	r4, r1
 80102da:	b22d      	sxth	r5, r5
 80102dc:	b224      	sxth	r4, r4
 80102de:	42a5      	cmp	r5, r4
 80102e0:	dc09      	bgt.n	80102f6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80102e2:	88f8      	ldrh	r0, [r7, #6]
 80102e4:	4410      	add	r0, r2
 80102e6:	88f2      	ldrh	r2, [r6, #6]
 80102e8:	4413      	add	r3, r2
 80102ea:	b200      	sxth	r0, r0
 80102ec:	b21b      	sxth	r3, r3
 80102ee:	4298      	cmp	r0, r3
 80102f0:	bfcc      	ite	gt
 80102f2:	2000      	movgt	r0, #0
 80102f4:	2001      	movle	r0, #1
 80102f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080102f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80102f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80102fa:	4604      	mov	r4, r0
 80102fc:	4608      	mov	r0, r1
 80102fe:	460d      	mov	r5, r1
 8010300:	f7fa fc4f 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010304:	b978      	cbnz	r0, 8010326 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8010306:	4620      	mov	r0, r4
 8010308:	f7fa fc4b 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801030c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8010310:	b150      	cbz	r0, 8010328 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8010312:	8026      	strh	r6, [r4, #0]
 8010314:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010318:	8063      	strh	r3, [r4, #2]
 801031a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801031e:	80a3      	strh	r3, [r4, #4]
 8010320:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010324:	80e3      	strh	r3, [r4, #6]
 8010326:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010328:	f9b4 1000 	ldrsh.w	r1, [r4]
 801032c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010330:	42b1      	cmp	r1, r6
 8010332:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8010336:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801033a:	460f      	mov	r7, r1
 801033c:	88ed      	ldrh	r5, [r5, #6]
 801033e:	bfa8      	it	ge
 8010340:	4637      	movge	r7, r6
 8010342:	4293      	cmp	r3, r2
 8010344:	4618      	mov	r0, r3
 8010346:	4466      	add	r6, ip
 8010348:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801034c:	bfa8      	it	ge
 801034e:	4610      	movge	r0, r2
 8010350:	442a      	add	r2, r5
 8010352:	88e5      	ldrh	r5, [r4, #6]
 8010354:	4461      	add	r1, ip
 8010356:	b236      	sxth	r6, r6
 8010358:	8027      	strh	r7, [r4, #0]
 801035a:	442b      	add	r3, r5
 801035c:	b209      	sxth	r1, r1
 801035e:	b212      	sxth	r2, r2
 8010360:	8060      	strh	r0, [r4, #2]
 8010362:	b21b      	sxth	r3, r3
 8010364:	428e      	cmp	r6, r1
 8010366:	bfac      	ite	ge
 8010368:	ebc7 0106 	rsbge	r1, r7, r6
 801036c:	ebc7 0101 	rsblt	r1, r7, r1
 8010370:	429a      	cmp	r2, r3
 8010372:	bfac      	ite	ge
 8010374:	ebc0 0202 	rsbge	r2, r0, r2
 8010378:	ebc0 0203 	rsblt	r2, r0, r3
 801037c:	80a1      	strh	r1, [r4, #4]
 801037e:	80e2      	strh	r2, [r4, #6]
 8010380:	e7d1      	b.n	8010326 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08010384 <_ZN8touchgfx11Application11getInstanceEv>:
 8010384:	4b01      	ldr	r3, [pc, #4]	; (801038c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010386:	6818      	ldr	r0, [r3, #0]
 8010388:	4770      	bx	lr
 801038a:	bf00      	nop
 801038c:	2400e478 	.word	0x2400e478

08010390 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8010390:	2300      	movs	r3, #0
 8010392:	b510      	push	{r4, lr}
 8010394:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8010398:	4604      	mov	r4, r0
 801039a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 801039e:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80103a2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80103a6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80103aa:	429a      	cmp	r2, r3
 80103ac:	d90e      	bls.n	80103cc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80103ae:	18e2      	adds	r2, r4, r3
 80103b0:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80103b4:	b122      	cbz	r2, 80103c0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80103b6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80103ba:	6803      	ldr	r3, [r0, #0]
 80103bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80103be:	4798      	blx	r3
 80103c0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80103c4:	3301      	adds	r3, #1
 80103c6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80103ca:	e7ea      	b.n	80103a2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80103cc:	bd10      	pop	{r4, pc}

080103ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80103ce:	2300      	movs	r3, #0
 80103d0:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80103d4:	30a4      	adds	r0, #164	; 0xa4
 80103d6:	f820 3c24 	strh.w	r3, [r0, #-36]
 80103da:	f802 3b01 	strb.w	r3, [r2], #1
 80103de:	4282      	cmp	r2, r0
 80103e0:	d1fb      	bne.n	80103da <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80103e2:	4770      	bx	lr

080103e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80103e4:	b570      	push	{r4, r5, r6, lr}
 80103e6:	4c0b      	ldr	r4, [pc, #44]	; (8010414 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80103e8:	4605      	mov	r5, r0
 80103ea:	460e      	mov	r6, r1
 80103ec:	6820      	ldr	r0, [r4, #0]
 80103ee:	b110      	cbz	r0, 80103f6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80103f0:	6803      	ldr	r3, [r0, #0]
 80103f2:	695b      	ldr	r3, [r3, #20]
 80103f4:	4798      	blx	r3
 80103f6:	1d28      	adds	r0, r5, #4
 80103f8:	f7ff ffe9 	bl	80103ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80103fc:	6026      	str	r6, [r4, #0]
 80103fe:	6833      	ldr	r3, [r6, #0]
 8010400:	4630      	mov	r0, r6
 8010402:	68db      	ldr	r3, [r3, #12]
 8010404:	4798      	blx	r3
 8010406:	682b      	ldr	r3, [r5, #0]
 8010408:	4628      	mov	r0, r5
 801040a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801040c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010410:	4718      	bx	r3
 8010412:	bf00      	nop
 8010414:	2400e468 	.word	0x2400e468

08010418 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8010418:	2300      	movs	r3, #0
 801041a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801041e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8010422:	461a      	mov	r2, r3
 8010424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010426:	461c      	mov	r4, r3
 8010428:	461d      	mov	r5, r3
 801042a:	459c      	cmp	ip, r3
 801042c:	dd1a      	ble.n	8010464 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801042e:	18c6      	adds	r6, r0, r3
 8010430:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8010434:	b16e      	cbz	r6, 8010452 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8010436:	429a      	cmp	r2, r3
 8010438:	d008      	beq.n	801044c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801043a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801043e:	fa1f fe82 	uxth.w	lr, r2
 8010442:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8010446:	1887      	adds	r7, r0, r2
 8010448:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801044c:	3201      	adds	r2, #1
 801044e:	3301      	adds	r3, #1
 8010450:	e7eb      	b.n	801042a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8010452:	4299      	cmp	r1, r3
 8010454:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8010458:	bfa8      	it	ge
 801045a:	3501      	addge	r5, #1
 801045c:	429e      	cmp	r6, r3
 801045e:	bfc8      	it	gt
 8010460:	3401      	addgt	r4, #1
 8010462:	e7f4      	b.n	801044e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8010464:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8010468:	1b49      	subs	r1, r1, r5
 801046a:	1b1b      	subs	r3, r3, r4
 801046c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8010470:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8010474:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8010478:	4293      	cmp	r3, r2
 801047a:	dd03      	ble.n	8010484 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801047c:	3b01      	subs	r3, #1
 801047e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8010482:	e7f7      	b.n	8010474 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010484:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010488 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010488:	b570      	push	{r4, r5, r6, lr}
 801048a:	4d16      	ldr	r5, [pc, #88]	; (80104e4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801048c:	4604      	mov	r4, r0
 801048e:	6828      	ldr	r0, [r5, #0]
 8010490:	b140      	cbz	r0, 80104a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010492:	7a03      	ldrb	r3, [r0, #8]
 8010494:	b933      	cbnz	r3, 80104a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010496:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801049a:	6803      	ldr	r3, [r0, #0]
 801049c:	689b      	ldr	r3, [r3, #8]
 801049e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104a2:	4718      	bx	r3
 80104a4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80104a8:	4e0f      	ldr	r6, [pc, #60]	; (80104e8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80104aa:	b973      	cbnz	r3, 80104ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80104ac:	b168      	cbz	r0, 80104ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80104ae:	7a03      	ldrb	r3, [r0, #8]
 80104b0:	b15b      	cbz	r3, 80104ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80104b2:	6830      	ldr	r0, [r6, #0]
 80104b4:	b110      	cbz	r0, 80104bc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80104b6:	6803      	ldr	r3, [r0, #0]
 80104b8:	691b      	ldr	r3, [r3, #16]
 80104ba:	4798      	blx	r3
 80104bc:	6828      	ldr	r0, [r5, #0]
 80104be:	6803      	ldr	r3, [r0, #0]
 80104c0:	68db      	ldr	r3, [r3, #12]
 80104c2:	4798      	blx	r3
 80104c4:	2301      	movs	r3, #1
 80104c6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80104ca:	3404      	adds	r4, #4
 80104cc:	4620      	mov	r0, r4
 80104ce:	f7ff ff5f 	bl	8010390 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80104d2:	4620      	mov	r0, r4
 80104d4:	f7ff ffa0 	bl	8010418 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80104d8:	6830      	ldr	r0, [r6, #0]
 80104da:	b110      	cbz	r0, 80104e2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80104dc:	6803      	ldr	r3, [r0, #0]
 80104de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80104e0:	e7dd      	b.n	801049e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80104e2:	bd70      	pop	{r4, r5, r6, pc}
 80104e4:	2400e46c 	.word	0x2400e46c
 80104e8:	2400e468 	.word	0x2400e468

080104ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80104ec:	4603      	mov	r3, r0
 80104ee:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80104f2:	2200      	movs	r2, #0
 80104f4:	801a      	strh	r2, [r3, #0]
 80104f6:	3308      	adds	r3, #8
 80104f8:	f823 2c06 	strh.w	r2, [r3, #-6]
 80104fc:	f823 2c04 	strh.w	r2, [r3, #-4]
 8010500:	f823 2c02 	strh.w	r2, [r3, #-2]
 8010504:	428b      	cmp	r3, r1
 8010506:	d1f5      	bne.n	80104f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010508:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801050c:	4770      	bx	lr
	...

08010510 <_ZN8touchgfx11ApplicationC1Ev>:
 8010510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010512:	4b1d      	ldr	r3, [pc, #116]	; (8010588 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010514:	4606      	mov	r6, r0
 8010516:	4604      	mov	r4, r0
 8010518:	2500      	movs	r5, #0
 801051a:	f846 3b04 	str.w	r3, [r6], #4
 801051e:	22a8      	movs	r2, #168	; 0xa8
 8010520:	2100      	movs	r1, #0
 8010522:	4630      	mov	r0, r6
 8010524:	f010 fead 	bl	8021282 <memset>
 8010528:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 801052c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8010530:	4f16      	ldr	r7, [pc, #88]	; (801058c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010532:	f7ff ffdb 	bl	80104ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010536:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 801053a:	f7ff ffd7 	bl	80104ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801053e:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010542:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010546:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 801054a:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 801054e:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8010552:	490f      	ldr	r1, [pc, #60]	; (8010590 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010554:	480f      	ldr	r0, [pc, #60]	; (8010594 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8010556:	f010 f82f 	bl	80205b8 <CRC_Lock>
 801055a:	4b0f      	ldr	r3, [pc, #60]	; (8010598 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801055c:	b158      	cbz	r0, 8010576 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801055e:	801d      	strh	r5, [r3, #0]
 8010560:	2300      	movs	r3, #0
 8010562:	4a0e      	ldr	r2, [pc, #56]	; (801059c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8010564:	4630      	mov	r0, r6
 8010566:	6013      	str	r3, [r2, #0]
 8010568:	4a0d      	ldr	r2, [pc, #52]	; (80105a0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801056a:	603b      	str	r3, [r7, #0]
 801056c:	6013      	str	r3, [r2, #0]
 801056e:	f7ff ff2e 	bl	80103ce <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010572:	4620      	mov	r0, r4
 8010574:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010576:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801057a:	2002      	movs	r0, #2
 801057c:	801a      	strh	r2, [r3, #0]
 801057e:	6038      	str	r0, [r7, #0]
 8010580:	f001 fb48 	bl	8011c14 <_ZN8touchgfx6Screen4drawEv>
 8010584:	e7ec      	b.n	8010560 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8010586:	bf00      	nop
 8010588:	080238dc 	.word	0x080238dc
 801058c:	2400e468 	.word	0x2400e468
 8010590:	b5e8b5cd 	.word	0xb5e8b5cd
 8010594:	f407a5c2 	.word	0xf407a5c2
 8010598:	24000080 	.word	0x24000080
 801059c:	2400e478 	.word	0x2400e478
 80105a0:	2400e46c 	.word	0x2400e46c

080105a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80105a4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80105a8:	3b01      	subs	r3, #1
 80105aa:	b29b      	uxth	r3, r3
 80105ac:	428b      	cmp	r3, r1
 80105ae:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80105b2:	b510      	push	{r4, lr}
 80105b4:	d908      	bls.n	80105c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80105b6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80105ba:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80105be:	681a      	ldr	r2, [r3, #0]
 80105c0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80105c4:	685a      	ldr	r2, [r3, #4]
 80105c6:	6062      	str	r2, [r4, #4]
 80105c8:	bd10      	pop	{r4, pc}
	...

080105cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80105cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105d0:	b08f      	sub	sp, #60	; 0x3c
 80105d2:	4b8f      	ldr	r3, [pc, #572]	; (8010810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80105d4:	4683      	mov	fp, r0
 80105d6:	ac0a      	add	r4, sp, #40	; 0x28
 80105d8:	e884 0006 	stmia.w	r4, {r1, r2}
 80105dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80105e0:	4620      	mov	r0, r4
 80105e2:	4b8c      	ldr	r3, [pc, #560]	; (8010814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80105e4:	f9b3 1000 	ldrsh.w	r1, [r3]
 80105e8:	f7ff fe0f 	bl	801020a <_ZN8touchgfx4Rect10restrictToEss>
 80105ec:	4620      	mov	r0, r4
 80105ee:	f7fa fad8 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80105f2:	2800      	cmp	r0, #0
 80105f4:	d16a      	bne.n	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80105f6:	9403      	str	r4, [sp, #12]
 80105f8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80105fc:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8010600:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010604:	9301      	str	r3, [sp, #4]
 8010606:	35a4      	adds	r5, #164	; 0xa4
 8010608:	b15c      	cbz	r4, 8010622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801060a:	4629      	mov	r1, r5
 801060c:	9803      	ldr	r0, [sp, #12]
 801060e:	f7ff fe4d 	bl	80102ac <_ZNK8touchgfx4Rect8includesERKS0_>
 8010612:	3c01      	subs	r4, #1
 8010614:	b118      	cbz	r0, 801061e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8010616:	b2a1      	uxth	r1, r4
 8010618:	9801      	ldr	r0, [sp, #4]
 801061a:	f7ff ffc3 	bl	80105a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801061e:	3d08      	subs	r5, #8
 8010620:	e7f2      	b.n	8010608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8010622:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8010626:	f10a 33ff 	add.w	r3, sl, #4294967295
 801062a:	f8cd a010 	str.w	sl, [sp, #16]
 801062e:	9302      	str	r3, [sp, #8]
 8010630:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8010634:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8010638:	9306      	str	r3, [sp, #24]
 801063a:	445c      	add	r4, fp
 801063c:	2500      	movs	r5, #0
 801063e:	4626      	mov	r6, r4
 8010640:	f8cd a014 	str.w	sl, [sp, #20]
 8010644:	462f      	mov	r7, r5
 8010646:	9b05      	ldr	r3, [sp, #20]
 8010648:	2b00      	cmp	r3, #0
 801064a:	d073      	beq.n	8010734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801064c:	9903      	ldr	r1, [sp, #12]
 801064e:	4630      	mov	r0, r6
 8010650:	f7ff fdb9 	bl	80101c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010654:	b350      	cbz	r0, 80106ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010656:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801065a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801065e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8010662:	45e6      	cmp	lr, ip
 8010664:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010668:	db33      	blt.n	80106d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801066a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801066e:	88b3      	ldrh	r3, [r6, #4]
 8010670:	4472      	add	r2, lr
 8010672:	4463      	add	r3, ip
 8010674:	b212      	sxth	r2, r2
 8010676:	b21b      	sxth	r3, r3
 8010678:	429a      	cmp	r2, r3
 801067a:	dc2a      	bgt.n	80106d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801067c:	fa1f f289 	uxth.w	r2, r9
 8010680:	88f3      	ldrh	r3, [r6, #6]
 8010682:	45c8      	cmp	r8, r9
 8010684:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010688:	4413      	add	r3, r2
 801068a:	fa1f fc88 	uxth.w	ip, r8
 801068e:	b29b      	uxth	r3, r3
 8010690:	fa0f fe83 	sxth.w	lr, r3
 8010694:	db0f      	blt.n	80106b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010696:	eba3 030c 	sub.w	r3, r3, ip
 801069a:	1ac9      	subs	r1, r1, r3
 801069c:	b209      	sxth	r1, r1
 801069e:	2900      	cmp	r1, #0
 80106a0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80106a4:	dd12      	ble.n	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80106a6:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80106aa:	4605      	mov	r5, r0
 80106ac:	9b05      	ldr	r3, [sp, #20]
 80106ae:	3e08      	subs	r6, #8
 80106b0:	3b01      	subs	r3, #1
 80106b2:	9305      	str	r3, [sp, #20]
 80106b4:	e7c7      	b.n	8010646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80106b6:	4461      	add	r1, ip
 80106b8:	b209      	sxth	r1, r1
 80106ba:	4571      	cmp	r1, lr
 80106bc:	dc38      	bgt.n	8010730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80106be:	eba2 020c 	sub.w	r2, r2, ip
 80106c2:	b212      	sxth	r2, r2
 80106c4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80106c8:	2a00      	cmp	r2, #0
 80106ca:	dcee      	bgt.n	80106aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80106cc:	b00f      	add	sp, #60	; 0x3c
 80106ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106d2:	45c8      	cmp	r8, r9
 80106d4:	db2c      	blt.n	8010730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80106d6:	88f3      	ldrh	r3, [r6, #6]
 80106d8:	4499      	add	r9, r3
 80106da:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80106de:	4498      	add	r8, r3
 80106e0:	fa0f f989 	sxth.w	r9, r9
 80106e4:	fa0f f888 	sxth.w	r8, r8
 80106e8:	45c1      	cmp	r9, r8
 80106ea:	db21      	blt.n	8010730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80106ec:	fa1f f28c 	uxth.w	r2, ip
 80106f0:	88b3      	ldrh	r3, [r6, #4]
 80106f2:	45e6      	cmp	lr, ip
 80106f4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80106f8:	4413      	add	r3, r2
 80106fa:	fa1f f88e 	uxth.w	r8, lr
 80106fe:	b29b      	uxth	r3, r3
 8010700:	fa0f f983 	sxth.w	r9, r3
 8010704:	db0a      	blt.n	801071c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8010706:	eba3 0308 	sub.w	r3, r3, r8
 801070a:	1ac9      	subs	r1, r1, r3
 801070c:	b209      	sxth	r1, r1
 801070e:	2900      	cmp	r1, #0
 8010710:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8010714:	ddda      	ble.n	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010716:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801071a:	e7c6      	b.n	80106aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801071c:	4441      	add	r1, r8
 801071e:	b209      	sxth	r1, r1
 8010720:	4549      	cmp	r1, r9
 8010722:	dc05      	bgt.n	8010730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010724:	eba2 0208 	sub.w	r2, r2, r8
 8010728:	b212      	sxth	r2, r2
 801072a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801072e:	e7cb      	b.n	80106c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010730:	4607      	mov	r7, r0
 8010732:	e7bb      	b.n	80106ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010734:	2d00      	cmp	r5, #0
 8010736:	d181      	bne.n	801063c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8010738:	2f00      	cmp	r7, #0
 801073a:	f000 81dd 	beq.w	8010af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801073e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8010742:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8010746:	b2b3      	uxth	r3, r6
 8010748:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 801074c:	9305      	str	r3, [sp, #20]
 801074e:	9a05      	ldr	r2, [sp, #20]
 8010750:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8010754:	4413      	add	r3, r2
 8010756:	b2ba      	uxth	r2, r7
 8010758:	4492      	add	sl, r2
 801075a:	b29b      	uxth	r3, r3
 801075c:	fa1f fa8a 	uxth.w	sl, sl
 8010760:	fa0f f883 	sxth.w	r8, r3
 8010764:	fa0f f98a 	sxth.w	r9, sl
 8010768:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801076c:	9b04      	ldr	r3, [sp, #16]
 801076e:	2b00      	cmp	r3, #0
 8010770:	d052      	beq.n	8010818 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8010772:	9903      	ldr	r1, [sp, #12]
 8010774:	4620      	mov	r0, r4
 8010776:	f7ff fd26 	bl	80101c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801077a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801077e:	b1c0      	cbz	r0, 80107b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010780:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010784:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010788:	4576      	cmp	r6, lr
 801078a:	dc22      	bgt.n	80107d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801078c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010790:	44f4      	add	ip, lr
 8010792:	fa0f fc8c 	sxth.w	ip, ip
 8010796:	45e0      	cmp	r8, ip
 8010798:	db1b      	blt.n	80107d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801079a:	428f      	cmp	r7, r1
 801079c:	fa1f fc81 	uxth.w	ip, r1
 80107a0:	88e1      	ldrh	r1, [r4, #6]
 80107a2:	dc0d      	bgt.n	80107c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80107a4:	ebaa 0c0c 	sub.w	ip, sl, ip
 80107a8:	f8a4 9002 	strh.w	r9, [r4, #2]
 80107ac:	eba1 010c 	sub.w	r1, r1, ip
 80107b0:	80e1      	strh	r1, [r4, #6]
 80107b2:	4628      	mov	r0, r5
 80107b4:	9904      	ldr	r1, [sp, #16]
 80107b6:	3c08      	subs	r4, #8
 80107b8:	4605      	mov	r5, r0
 80107ba:	3901      	subs	r1, #1
 80107bc:	9104      	str	r1, [sp, #16]
 80107be:	e7d3      	b.n	8010768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80107c0:	4461      	add	r1, ip
 80107c2:	b209      	sxth	r1, r1
 80107c4:	4549      	cmp	r1, r9
 80107c6:	dcf5      	bgt.n	80107b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80107c8:	eba2 0c0c 	sub.w	ip, r2, ip
 80107cc:	f8a4 c006 	strh.w	ip, [r4, #6]
 80107d0:	e7ef      	b.n	80107b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80107d2:	428f      	cmp	r7, r1
 80107d4:	dcee      	bgt.n	80107b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80107d6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80107da:	4461      	add	r1, ip
 80107dc:	b209      	sxth	r1, r1
 80107de:	4589      	cmp	r9, r1
 80107e0:	dbe8      	blt.n	80107b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80107e2:	4576      	cmp	r6, lr
 80107e4:	fa1f fc8e 	uxth.w	ip, lr
 80107e8:	88a1      	ldrh	r1, [r4, #4]
 80107ea:	dc07      	bgt.n	80107fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80107ec:	eba3 0c0c 	sub.w	ip, r3, ip
 80107f0:	f8a4 8000 	strh.w	r8, [r4]
 80107f4:	eba1 010c 	sub.w	r1, r1, ip
 80107f8:	80a1      	strh	r1, [r4, #4]
 80107fa:	e7da      	b.n	80107b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80107fc:	4461      	add	r1, ip
 80107fe:	b209      	sxth	r1, r1
 8010800:	4588      	cmp	r8, r1
 8010802:	dbd7      	blt.n	80107b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010804:	9905      	ldr	r1, [sp, #20]
 8010806:	eba1 0c0c 	sub.w	ip, r1, ip
 801080a:	f8a4 c004 	strh.w	ip, [r4, #4]
 801080e:	e7d0      	b.n	80107b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010810:	2400e41a 	.word	0x2400e41a
 8010814:	2400e418 	.word	0x2400e418
 8010818:	2d00      	cmp	r5, #0
 801081a:	f000 816d 	beq.w	8010af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801081e:	9b06      	ldr	r3, [sp, #24]
 8010820:	445b      	add	r3, fp
 8010822:	461c      	mov	r4, r3
 8010824:	9b02      	ldr	r3, [sp, #8]
 8010826:	3301      	adds	r3, #1
 8010828:	f000 8166 	beq.w	8010af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801082c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8010830:	9803      	ldr	r0, [sp, #12]
 8010832:	4629      	mov	r1, r5
 8010834:	f7ff fd3a 	bl	80102ac <_ZNK8touchgfx4Rect8includesERKS0_>
 8010838:	b120      	cbz	r0, 8010844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801083a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801083e:	9801      	ldr	r0, [sp, #4]
 8010840:	f7ff feb0 	bl	80105a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010844:	9903      	ldr	r1, [sp, #12]
 8010846:	4628      	mov	r0, r5
 8010848:	f7ff fcbd 	bl	80101c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801084c:	2800      	cmp	r0, #0
 801084e:	f000 809c 	beq.w	801098a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010852:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8010856:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801085a:	fa1f f189 	uxth.w	r1, r9
 801085e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8010862:	9309      	str	r3, [sp, #36]	; 0x24
 8010864:	eb01 0c03 	add.w	ip, r1, r3
 8010868:	b283      	uxth	r3, r0
 801086a:	4548      	cmp	r0, r9
 801086c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8010870:	fa1f fa8c 	uxth.w	sl, ip
 8010874:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8010878:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 801087c:	eb03 050c 	add.w	r5, r3, ip
 8010880:	b2ad      	uxth	r5, r5
 8010882:	9505      	str	r5, [sp, #20]
 8010884:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010888:	9504      	str	r5, [sp, #16]
 801088a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 801088e:	f340 8099 	ble.w	80109c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8010892:	1a5b      	subs	r3, r3, r1
 8010894:	4596      	cmp	lr, r2
 8010896:	fa0f f08a 	sxth.w	r0, sl
 801089a:	b29b      	uxth	r3, r3
 801089c:	b21e      	sxth	r6, r3
 801089e:	dd2e      	ble.n	80108fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80108a0:	9f02      	ldr	r7, [sp, #8]
 80108a2:	fa1f fe8e 	uxth.w	lr, lr
 80108a6:	b292      	uxth	r2, r2
 80108a8:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80108ac:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80108b0:	9f04      	ldr	r7, [sp, #16]
 80108b2:	ebae 0102 	sub.w	r1, lr, r2
 80108b6:	44a6      	add	lr, r4
 80108b8:	1a3f      	subs	r7, r7, r0
 80108ba:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80108be:	b289      	uxth	r1, r1
 80108c0:	4402      	add	r2, r0
 80108c2:	fa0f fe8e 	sxth.w	lr, lr
 80108c6:	b20d      	sxth	r5, r1
 80108c8:	b212      	sxth	r2, r2
 80108ca:	436f      	muls	r7, r5
 80108cc:	ebae 0202 	sub.w	r2, lr, r2
 80108d0:	4372      	muls	r2, r6
 80108d2:	4297      	cmp	r7, r2
 80108d4:	db09      	blt.n	80108ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80108d6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80108da:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80108de:	449c      	add	ip, r3
 80108e0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80108e4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80108e8:	e686      	b.n	80105f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80108ea:	4421      	add	r1, r4
 80108ec:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80108f0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80108f4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80108f8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80108fc:	e67c      	b.n	80105f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80108fe:	9f04      	ldr	r7, [sp, #16]
 8010900:	42b8      	cmp	r0, r7
 8010902:	da27      	bge.n	8010954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010904:	9902      	ldr	r1, [sp, #8]
 8010906:	1a3f      	subs	r7, r7, r0
 8010908:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 801090c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8010910:	eb05 010e 	add.w	r1, r5, lr
 8010914:	fa1f f881 	uxth.w	r8, r1
 8010918:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 801091c:	4411      	add	r1, r2
 801091e:	fa0f f988 	sxth.w	r9, r8
 8010922:	eba2 020e 	sub.w	r2, r2, lr
 8010926:	eba1 0108 	sub.w	r1, r1, r8
 801092a:	4372      	muls	r2, r6
 801092c:	b289      	uxth	r1, r1
 801092e:	fa0f f881 	sxth.w	r8, r1
 8010932:	fb08 f707 	mul.w	r7, r8, r7
 8010936:	42ba      	cmp	r2, r7
 8010938:	dc06      	bgt.n	8010948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801093a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801093e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8010942:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8010946:	e7ca      	b.n	80108de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8010948:	4429      	add	r1, r5
 801094a:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801094e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010952:	e651      	b.n	80105f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010954:	9805      	ldr	r0, [sp, #20]
 8010956:	2d06      	cmp	r5, #6
 8010958:	ebaa 0000 	sub.w	r0, sl, r0
 801095c:	b280      	uxth	r0, r0
 801095e:	fa0f fe80 	sxth.w	lr, r0
 8010962:	d817      	bhi.n	8010994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8010964:	9b04      	ldr	r3, [sp, #16]
 8010966:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 801096a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801096e:	1c6b      	adds	r3, r5, #1
 8010970:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8010974:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8010978:	9b01      	ldr	r3, [sp, #4]
 801097a:	9801      	ldr	r0, [sp, #4]
 801097c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010980:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010984:	805a      	strh	r2, [r3, #2]
 8010986:	809e      	strh	r6, [r3, #4]
 8010988:	80d9      	strh	r1, [r3, #6]
 801098a:	9b02      	ldr	r3, [sp, #8]
 801098c:	3c08      	subs	r4, #8
 801098e:	3b01      	subs	r3, #1
 8010990:	9302      	str	r3, [sp, #8]
 8010992:	e747      	b.n	8010824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010994:	9a02      	ldr	r2, [sp, #8]
 8010996:	45b6      	cmp	lr, r6
 8010998:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801099c:	db0d      	blt.n	80109ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801099e:	449c      	add	ip, r3
 80109a0:	445a      	add	r2, fp
 80109a2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80109a6:	fa1f fc8c 	uxth.w	ip, ip
 80109aa:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80109ae:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80109b2:	448c      	add	ip, r1
 80109b4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80109b8:	e61e      	b.n	80105f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80109ba:	445a      	add	r2, fp
 80109bc:	4484      	add	ip, r0
 80109be:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80109c2:	e78f      	b.n	80108e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80109c4:	fa1f f18e 	uxth.w	r1, lr
 80109c8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80109cc:	b293      	uxth	r3, r2
 80109ce:	4596      	cmp	lr, r2
 80109d0:	eb01 0806 	add.w	r8, r1, r6
 80109d4:	9306      	str	r3, [sp, #24]
 80109d6:	fa1f f888 	uxth.w	r8, r8
 80109da:	9f06      	ldr	r7, [sp, #24]
 80109dc:	fa0f f388 	sxth.w	r3, r8
 80109e0:	9307      	str	r3, [sp, #28]
 80109e2:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80109e6:	443b      	add	r3, r7
 80109e8:	b29b      	uxth	r3, r3
 80109ea:	9308      	str	r3, [sp, #32]
 80109ec:	da24      	bge.n	8010a38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80109ee:	9905      	ldr	r1, [sp, #20]
 80109f0:	eba3 0308 	sub.w	r3, r3, r8
 80109f4:	eba2 020e 	sub.w	r2, r2, lr
 80109f8:	eba9 0000 	sub.w	r0, r9, r0
 80109fc:	ebaa 0401 	sub.w	r4, sl, r1
 8010a00:	b29b      	uxth	r3, r3
 8010a02:	b2a4      	uxth	r4, r4
 8010a04:	b219      	sxth	r1, r3
 8010a06:	b225      	sxth	r5, r4
 8010a08:	4348      	muls	r0, r1
 8010a0a:	436a      	muls	r2, r5
 8010a0c:	4282      	cmp	r2, r0
 8010a0e:	9a02      	ldr	r2, [sp, #8]
 8010a10:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010a14:	445a      	add	r2, fp
 8010a16:	dc06      	bgt.n	8010a26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8010a18:	9b07      	ldr	r3, [sp, #28]
 8010a1a:	44a4      	add	ip, r4
 8010a1c:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8010a20:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8010a24:	e75e      	b.n	80108e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010a26:	9904      	ldr	r1, [sp, #16]
 8010a28:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8010a2c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8010a30:	4433      	add	r3, r6
 8010a32:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010a36:	e5df      	b.n	80105f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010a38:	9f06      	ldr	r7, [sp, #24]
 8010a3a:	9b04      	ldr	r3, [sp, #16]
 8010a3c:	1bc9      	subs	r1, r1, r7
 8010a3e:	fa0f f78a 	sxth.w	r7, sl
 8010a42:	b289      	uxth	r1, r1
 8010a44:	429f      	cmp	r7, r3
 8010a46:	fa0f fe81 	sxth.w	lr, r1
 8010a4a:	dd23      	ble.n	8010a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8010a4c:	9a05      	ldr	r2, [sp, #20]
 8010a4e:	eba9 0000 	sub.w	r0, r9, r0
 8010a52:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010a56:	ebaa 0202 	sub.w	r2, sl, r2
 8010a5a:	9d07      	ldr	r5, [sp, #28]
 8010a5c:	fb0e f000 	mul.w	r0, lr, r0
 8010a60:	b292      	uxth	r2, r2
 8010a62:	eba5 0a03 	sub.w	sl, r5, r3
 8010a66:	9b02      	ldr	r3, [sp, #8]
 8010a68:	b214      	sxth	r4, r2
 8010a6a:	00db      	lsls	r3, r3, #3
 8010a6c:	fb04 fa0a 	mul.w	sl, r4, sl
 8010a70:	445b      	add	r3, fp
 8010a72:	4550      	cmp	r0, sl
 8010a74:	db03      	blt.n	8010a7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8010a76:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8010a7a:	4494      	add	ip, r2
 8010a7c:	e732      	b.n	80108e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010a7e:	9a04      	ldr	r2, [sp, #16]
 8010a80:	4431      	add	r1, r6
 8010a82:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8010a86:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8010a8a:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8010a8e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010a92:	e75c      	b.n	801094e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010a94:	9b08      	ldr	r3, [sp, #32]
 8010a96:	2d06      	cmp	r5, #6
 8010a98:	eba3 0308 	sub.w	r3, r3, r8
 8010a9c:	b29b      	uxth	r3, r3
 8010a9e:	b218      	sxth	r0, r3
 8010aa0:	d813      	bhi.n	8010aca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8010aa2:	9b07      	ldr	r3, [sp, #28]
 8010aa4:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8010aa8:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8010aac:	1c6b      	adds	r3, r5, #1
 8010aae:	9901      	ldr	r1, [sp, #4]
 8010ab0:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8010ab4:	9b01      	ldr	r3, [sp, #4]
 8010ab6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010aba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010abe:	805a      	strh	r2, [r3, #2]
 8010ac0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010ac2:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010ac6:	809a      	strh	r2, [r3, #4]
 8010ac8:	e75f      	b.n	801098a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010aca:	9c02      	ldr	r4, [sp, #8]
 8010acc:	4570      	cmp	r0, lr
 8010ace:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010ad2:	db0d      	blt.n	8010af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8010ad4:	4431      	add	r1, r6
 8010ad6:	9b06      	ldr	r3, [sp, #24]
 8010ad8:	445c      	add	r4, fp
 8010ada:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8010ade:	b289      	uxth	r1, r1
 8010ae0:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8010ae4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010ae8:	4419      	add	r1, r3
 8010aea:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8010aee:	e583      	b.n	80105f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010af0:	445c      	add	r4, fp
 8010af2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8010af6:	e79b      	b.n	8010a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010af8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8010afc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8010b00:	1e65      	subs	r5, r4, #1
 8010b02:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8010b06:	b2ad      	uxth	r5, r5
 8010b08:	42b5      	cmp	r5, r6
 8010b0a:	d044      	beq.n	8010b96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8010b0c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8010b10:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8010b14:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8010b18:	4282      	cmp	r2, r0
 8010b1a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8010b1e:	d11f      	bne.n	8010b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010b20:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8010b24:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8010b28:	459c      	cmp	ip, r3
 8010b2a:	d119      	bne.n	8010b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010b2c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8010b30:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010b34:	19d8      	adds	r0, r3, r7
 8010b36:	b200      	sxth	r0, r0
 8010b38:	4288      	cmp	r0, r1
 8010b3a:	d109      	bne.n	8010b50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8010b3c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8010b40:	4413      	add	r3, r2
 8010b42:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8010b46:	4629      	mov	r1, r5
 8010b48:	9801      	ldr	r0, [sp, #4]
 8010b4a:	f7ff fd2b 	bl	80105a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010b4e:	e003      	b.n	8010b58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010b50:	4411      	add	r1, r2
 8010b52:	b209      	sxth	r1, r1
 8010b54:	42b9      	cmp	r1, r7
 8010b56:	d0f3      	beq.n	8010b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8010b58:	3d01      	subs	r5, #1
 8010b5a:	3c08      	subs	r4, #8
 8010b5c:	b2ad      	uxth	r5, r5
 8010b5e:	e7d3      	b.n	8010b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010b60:	42b9      	cmp	r1, r7
 8010b62:	d1f9      	bne.n	8010b58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010b64:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8010b68:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8010b6c:	4299      	cmp	r1, r3
 8010b6e:	d1f3      	bne.n	8010b58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010b70:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8010b74:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010b78:	181f      	adds	r7, r3, r0
 8010b7a:	b23f      	sxth	r7, r7
 8010b7c:	42ba      	cmp	r2, r7
 8010b7e:	d105      	bne.n	8010b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8010b80:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8010b84:	440b      	add	r3, r1
 8010b86:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010b8a:	e7dc      	b.n	8010b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8010b8c:	440a      	add	r2, r1
 8010b8e:	b212      	sxth	r2, r2
 8010b90:	4290      	cmp	r0, r2
 8010b92:	d1e1      	bne.n	8010b58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010b94:	e7f6      	b.n	8010b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8010b96:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8010b9a:	2e07      	cmp	r6, #7
 8010b9c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010ba0:	d812      	bhi.n	8010bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8010ba2:	1c75      	adds	r5, r6, #1
 8010ba4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8010ba8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010bac:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8010bb0:	9d01      	ldr	r5, [sp, #4]
 8010bb2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8010bb6:	442c      	add	r4, r5
 8010bb8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8010bbc:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010bc0:	8061      	strh	r1, [r4, #2]
 8010bc2:	80a2      	strh	r2, [r4, #4]
 8010bc4:	80e3      	strh	r3, [r4, #6]
 8010bc6:	e581      	b.n	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010bc8:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8010bcc:	3e01      	subs	r6, #1
 8010bce:	445c      	add	r4, fp
 8010bd0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010bd4:	f04f 37ff 	mov.w	r7, #4294967295
 8010bd8:	2500      	movs	r5, #0
 8010bda:	9305      	str	r3, [sp, #20]
 8010bdc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8010be0:	1e72      	subs	r2, r6, #1
 8010be2:	9302      	str	r3, [sp, #8]
 8010be4:	4691      	mov	r9, r2
 8010be6:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8010bea:	9304      	str	r3, [sp, #16]
 8010bec:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8010bf0:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010bf4:	6818      	ldr	r0, [r3, #0]
 8010bf6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010bfa:	9207      	str	r2, [sp, #28]
 8010bfc:	bf16      	itet	ne
 8010bfe:	9905      	ldrne	r1, [sp, #20]
 8010c00:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010c04:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8010c08:	9306      	str	r3, [sp, #24]
 8010c0a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010c0e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8010c12:	fb18 f801 	smulbb	r8, r8, r1
 8010c16:	6859      	ldr	r1, [r3, #4]
 8010c18:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010c1c:	4671      	mov	r1, lr
 8010c1e:	a80c      	add	r0, sp, #48	; 0x30
 8010c20:	f7ff fb6a 	bl	80102f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010c24:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8010c28:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8010c2c:	f04f 0c08 	mov.w	ip, #8
 8010c30:	9b04      	ldr	r3, [sp, #16]
 8010c32:	9a02      	ldr	r2, [sp, #8]
 8010c34:	fb10 f001 	smulbb	r0, r0, r1
 8010c38:	fb02 8803 	mla	r8, r2, r3, r8
 8010c3c:	eba0 0108 	sub.w	r1, r0, r8
 8010c40:	fb90 f0fc 	sdiv	r0, r0, ip
 8010c44:	4288      	cmp	r0, r1
 8010c46:	dc20      	bgt.n	8010c8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8010c48:	4551      	cmp	r1, sl
 8010c4a:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010c4e:	da03      	bge.n	8010c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8010c50:	b1d9      	cbz	r1, 8010c8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8010c52:	468a      	mov	sl, r1
 8010c54:	464f      	mov	r7, r9
 8010c56:	4635      	mov	r5, r6
 8010c58:	f109 39ff 	add.w	r9, r9, #4294967295
 8010c5c:	f119 0f02 	cmn.w	r9, #2
 8010c60:	d1c6      	bne.n	8010bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8010c62:	4616      	mov	r6, r2
 8010c64:	3201      	adds	r2, #1
 8010c66:	f1a4 0408 	sub.w	r4, r4, #8
 8010c6a:	d1b7      	bne.n	8010bdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8010c6c:	9b01      	ldr	r3, [sp, #4]
 8010c6e:	b2ac      	uxth	r4, r5
 8010c70:	00ed      	lsls	r5, r5, #3
 8010c72:	1958      	adds	r0, r3, r5
 8010c74:	1c7b      	adds	r3, r7, #1
 8010c76:	d10b      	bne.n	8010c90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8010c78:	4601      	mov	r1, r0
 8010c7a:	9803      	ldr	r0, [sp, #12]
 8010c7c:	f7ff fb3c 	bl	80102f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010c80:	4621      	mov	r1, r4
 8010c82:	9801      	ldr	r0, [sp, #4]
 8010c84:	f7ff fc8e 	bl	80105a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010c88:	e4b6      	b.n	80105f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010c8a:	464f      	mov	r7, r9
 8010c8c:	4635      	mov	r5, r6
 8010c8e:	e7ed      	b.n	8010c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8010c90:	9b01      	ldr	r3, [sp, #4]
 8010c92:	00ff      	lsls	r7, r7, #3
 8010c94:	445d      	add	r5, fp
 8010c96:	19d9      	adds	r1, r3, r7
 8010c98:	445f      	add	r7, fp
 8010c9a:	f7ff fb2d 	bl	80102f8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010c9e:	9b03      	ldr	r3, [sp, #12]
 8010ca0:	cb03      	ldmia	r3!, {r0, r1}
 8010ca2:	9b03      	ldr	r3, [sp, #12]
 8010ca4:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8010ca8:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8010cac:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010cb0:	6869      	ldr	r1, [r5, #4]
 8010cb2:	c303      	stmia	r3!, {r0, r1}
 8010cb4:	e7e4      	b.n	8010c80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8010cb6:	bf00      	nop

08010cb8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cbc:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8010cc0:	b09b      	sub	sp, #108	; 0x6c
 8010cc2:	4604      	mov	r4, r0
 8010cc4:	4630      	mov	r0, r6
 8010cc6:	f7f9 ff6c 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cca:	4605      	mov	r5, r0
 8010ccc:	b948      	cbnz	r0, 8010ce2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010cce:	6823      	ldr	r3, [r4, #0]
 8010cd0:	4620      	mov	r0, r4
 8010cd2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010cd4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010cd8:	4798      	blx	r3
 8010cda:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010cde:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8010ce2:	4bc5      	ldr	r3, [pc, #788]	; (8010ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8010ce4:	681b      	ldr	r3, [r3, #0]
 8010ce6:	2b00      	cmp	r3, #0
 8010ce8:	d03f      	beq.n	8010d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010cea:	4dc4      	ldr	r5, [pc, #784]	; (8010ffc <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8010cec:	4628      	mov	r0, r5
 8010cee:	f7f9 ff58 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cf2:	4606      	mov	r6, r0
 8010cf4:	2800      	cmp	r0, #0
 8010cf6:	d138      	bne.n	8010d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010cf8:	4628      	mov	r0, r5
 8010cfa:	f7ff f975 	bl	800ffe8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010cfe:	6823      	ldr	r3, [r4, #0]
 8010d00:	6829      	ldr	r1, [r5, #0]
 8010d02:	4620      	mov	r0, r4
 8010d04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010d06:	686a      	ldr	r2, [r5, #4]
 8010d08:	4798      	blx	r3
 8010d0a:	802e      	strh	r6, [r5, #0]
 8010d0c:	806e      	strh	r6, [r5, #2]
 8010d0e:	80ae      	strh	r6, [r5, #4]
 8010d10:	80ee      	strh	r6, [r5, #6]
 8010d12:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8010d16:	4dba      	ldr	r5, [pc, #744]	; (8011000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8010d18:	4640      	mov	r0, r8
 8010d1a:	f7ff fbe7 	bl	80104ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010d1e:	882e      	ldrh	r6, [r5, #0]
 8010d20:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8010d24:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8010d28:	4633      	mov	r3, r6
 8010d2a:	42bb      	cmp	r3, r7
 8010d2c:	d224      	bcs.n	8010d78 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010d2e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8010d32:	2907      	cmp	r1, #7
 8010d34:	d816      	bhi.n	8010d64 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8010d36:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010d3a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8010d3e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8010d42:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8010d46:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8010d4a:	1c4a      	adds	r2, r1, #1
 8010d4c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8010d50:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8010d54:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8010d58:	f8a2 a002 	strh.w	sl, [r2, #2]
 8010d5c:	f8a2 e004 	strh.w	lr, [r2, #4]
 8010d60:	f8a2 c006 	strh.w	ip, [r2, #6]
 8010d64:	3301      	adds	r3, #1
 8010d66:	b29b      	uxth	r3, r3
 8010d68:	e7df      	b.n	8010d2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8010d6a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8010d6e:	2b00      	cmp	r3, #0
 8010d70:	d1cf      	bne.n	8010d12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8010d72:	b01b      	add	sp, #108	; 0x6c
 8010d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d78:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8010d7c:	42b3      	cmp	r3, r6
 8010d7e:	d90c      	bls.n	8010d9a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8010d80:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010d84:	6822      	ldr	r2, [r4, #0]
 8010d86:	3601      	adds	r6, #1
 8010d88:	4620      	mov	r0, r4
 8010d8a:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8010d8c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8010d90:	b2b6      	uxth	r6, r6
 8010d92:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8010d96:	47b8      	blx	r7
 8010d98:	e7ee      	b.n	8010d78 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010d9a:	4a9a      	ldr	r2, [pc, #616]	; (8011004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010d9c:	6813      	ldr	r3, [r2, #0]
 8010d9e:	4691      	mov	r9, r2
 8010da0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8010da4:	2b01      	cmp	r3, #1
 8010da6:	f040 80e0 	bne.w	8010f6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8010daa:	8829      	ldrh	r1, [r5, #0]
 8010dac:	2600      	movs	r6, #0
 8010dae:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8010db2:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8010db6:	33ae      	adds	r3, #174	; 0xae
 8010db8:	428f      	cmp	r7, r1
 8010dba:	f103 0308 	add.w	r3, r3, #8
 8010dbe:	dd0a      	ble.n	8010dd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8010dc0:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8010dc4:	3101      	adds	r1, #1
 8010dc6:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8010dca:	4402      	add	r2, r0
 8010dcc:	b212      	sxth	r2, r2
 8010dce:	4296      	cmp	r6, r2
 8010dd0:	bfb8      	it	lt
 8010dd2:	4616      	movlt	r6, r2
 8010dd4:	e7f0      	b.n	8010db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8010dd6:	4b8c      	ldr	r3, [pc, #560]	; (8011008 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010dd8:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8011004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8010ddc:	881b      	ldrh	r3, [r3, #0]
 8010dde:	2b0f      	cmp	r3, #15
 8010de0:	bf8c      	ite	hi
 8010de2:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8010de6:	f04f 0b01 	movls.w	fp, #1
 8010dea:	2300      	movs	r3, #0
 8010dec:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8010df0:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8010df4:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8010df8:	4b82      	ldr	r3, [pc, #520]	; (8011004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010dfa:	4438      	add	r0, r7
 8010dfc:	b207      	sxth	r7, r0
 8010dfe:	6818      	ldr	r0, [r3, #0]
 8010e00:	42b7      	cmp	r7, r6
 8010e02:	6803      	ldr	r3, [r0, #0]
 8010e04:	f280 8083 	bge.w	8010f0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8010e08:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8010e0c:	4798      	blx	r3
 8010e0e:	eb07 030b 	add.w	r3, r7, fp
 8010e12:	4298      	cmp	r0, r3
 8010e14:	da07      	bge.n	8010e26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8010e16:	42b0      	cmp	r0, r6
 8010e18:	da05      	bge.n	8010e26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8010e1a:	4287      	cmp	r7, r0
 8010e1c:	dd6c      	ble.n	8010ef8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010e1e:	2f00      	cmp	r7, #0
 8010e20:	dd6a      	ble.n	8010ef8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8010e22:	4630      	mov	r0, r6
 8010e24:	e004      	b.n	8010e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 8010e26:	4287      	cmp	r7, r0
 8010e28:	dcfb      	bgt.n	8010e22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 8010e2a:	42b0      	cmp	r0, r6
 8010e2c:	bfa8      	it	ge
 8010e2e:	4630      	movge	r0, r6
 8010e30:	4b76      	ldr	r3, [pc, #472]	; (801100c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8010e32:	1bc0      	subs	r0, r0, r7
 8010e34:	2200      	movs	r2, #0
 8010e36:	f8ad 7016 	strh.w	r7, [sp, #22]
 8010e3a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010e3e:	882f      	ldrh	r7, [r5, #0]
 8010e40:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010e44:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010e48:	f8ad 001a 	strh.w	r0, [sp, #26]
 8010e4c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8010e50:	42bb      	cmp	r3, r7
 8010e52:	d9cd      	bls.n	8010df0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8010e54:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8010e58:	ab07      	add	r3, sp, #28
 8010e5a:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010e5e:	6851      	ldr	r1, [r2, #4]
 8010e60:	c303      	stmia	r3!, {r0, r1}
 8010e62:	a905      	add	r1, sp, #20
 8010e64:	a807      	add	r0, sp, #28
 8010e66:	f7ff f9ae 	bl	80101c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010e6a:	2800      	cmp	r0, #0
 8010e6c:	d04c      	beq.n	8010f08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8010e6e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8010e72:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8010e76:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8010e7a:	4686      	mov	lr, r0
 8010e7c:	4290      	cmp	r0, r2
 8010e7e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010e82:	4450      	add	r0, sl
 8010e84:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8010e88:	bfb8      	it	lt
 8010e8a:	4696      	movlt	lr, r2
 8010e8c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010e90:	4452      	add	r2, sl
 8010e92:	b280      	uxth	r0, r0
 8010e94:	4299      	cmp	r1, r3
 8010e96:	468c      	mov	ip, r1
 8010e98:	b292      	uxth	r2, r2
 8010e9a:	9302      	str	r3, [sp, #8]
 8010e9c:	bfb8      	it	lt
 8010e9e:	469c      	movlt	ip, r3
 8010ea0:	b203      	sxth	r3, r0
 8010ea2:	fa0f fa82 	sxth.w	sl, r2
 8010ea6:	f8ad e01c 	strh.w	lr, [sp, #28]
 8010eaa:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010eae:	4553      	cmp	r3, sl
 8010eb0:	bfb8      	it	lt
 8010eb2:	4602      	movlt	r2, r0
 8010eb4:	9b02      	ldr	r3, [sp, #8]
 8010eb6:	eba2 020e 	sub.w	r2, r2, lr
 8010eba:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010ebe:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010ec2:	4411      	add	r1, r2
 8010ec4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010ec8:	4413      	add	r3, r2
 8010eca:	b289      	uxth	r1, r1
 8010ecc:	b29b      	uxth	r3, r3
 8010ece:	b208      	sxth	r0, r1
 8010ed0:	b21a      	sxth	r2, r3
 8010ed2:	4290      	cmp	r0, r2
 8010ed4:	bfb8      	it	lt
 8010ed6:	460b      	movlt	r3, r1
 8010ed8:	eba3 030c 	sub.w	r3, r3, ip
 8010edc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010ee0:	a807      	add	r0, sp, #28
 8010ee2:	f7f9 fe5e 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ee6:	b920      	cbnz	r0, 8010ef2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8010ee8:	6823      	ldr	r3, [r4, #0]
 8010eea:	a907      	add	r1, sp, #28
 8010eec:	4620      	mov	r0, r4
 8010eee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010ef0:	4798      	blx	r3
 8010ef2:	3701      	adds	r7, #1
 8010ef4:	b2bf      	uxth	r7, r7
 8010ef6:	e7a9      	b.n	8010e4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8010ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8010efc:	2101      	movs	r1, #1
 8010efe:	6803      	ldr	r3, [r0, #0]
 8010f00:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8010f04:	4798      	blx	r3
 8010f06:	e773      	b.n	8010df0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8010f08:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8010f0c:	e7e8      	b.n	8010ee0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8010f0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f10:	4798      	blx	r3
 8010f12:	4b3f      	ldr	r3, [pc, #252]	; (8011010 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8010f14:	781b      	ldrb	r3, [r3, #0]
 8010f16:	2b00      	cmp	r3, #0
 8010f18:	f43f af2b 	beq.w	8010d72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8010f1c:	2300      	movs	r3, #0
 8010f1e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8010f22:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8010f26:	882b      	ldrh	r3, [r5, #0]
 8010f28:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8010f2c:	42ab      	cmp	r3, r5
 8010f2e:	f4bf af20 	bcs.w	8010d72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8010f32:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8010f36:	2907      	cmp	r1, #7
 8010f38:	d814      	bhi.n	8010f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 8010f3a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8010f3e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8010f42:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8010f46:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8010f4a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8010f4e:	1c4a      	adds	r2, r1, #1
 8010f50:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8010f54:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8010f58:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8010f5c:	f8a2 c002 	strh.w	ip, [r2, #2]
 8010f60:	8097      	strh	r7, [r2, #4]
 8010f62:	80d6      	strh	r6, [r2, #6]
 8010f64:	3301      	adds	r3, #1
 8010f66:	b29b      	uxth	r3, r3
 8010f68:	e7e0      	b.n	8010f2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 8010f6a:	2b02      	cmp	r3, #2
 8010f6c:	f040 8133 	bne.w	80111d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8010f70:	4b28      	ldr	r3, [pc, #160]	; (8011014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8010f72:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8010f76:	781b      	ldrb	r3, [r3, #0]
 8010f78:	2b01      	cmp	r3, #1
 8010f7a:	f000 8098 	beq.w	80110ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010f7e:	882a      	ldrh	r2, [r5, #0]
 8010f80:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8010f84:	3201      	adds	r2, #1
 8010f86:	b292      	uxth	r2, r2
 8010f88:	2900      	cmp	r1, #0
 8010f8a:	d0c2      	beq.n	8010f12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010f8c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8010f90:	4694      	mov	ip, r2
 8010f92:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8010f96:	f04f 0900 	mov.w	r9, #0
 8010f9a:	441e      	add	r6, r3
 8010f9c:	b236      	sxth	r6, r6
 8010f9e:	fa1f f38c 	uxth.w	r3, ip
 8010fa2:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8010fa6:	4299      	cmp	r1, r3
 8010fa8:	f240 80be 	bls.w	8011128 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8010fac:	4427      	add	r7, r4
 8010fae:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010fb2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8010fb6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8010fba:	4283      	cmp	r3, r0
 8010fbc:	f340 80a0 	ble.w	8011100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8010fc0:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8010fc4:	46e1      	mov	r9, ip
 8010fc6:	4406      	add	r6, r0
 8010fc8:	b236      	sxth	r6, r6
 8010fca:	429e      	cmp	r6, r3
 8010fcc:	bfa8      	it	ge
 8010fce:	461e      	movge	r6, r3
 8010fd0:	f10c 0c01 	add.w	ip, ip, #1
 8010fd4:	e7e3      	b.n	8010f9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 8010fd6:	d10a      	bne.n	8010fee <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8010fd8:	4562      	cmp	r2, ip
 8010fda:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8010fde:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8010fe2:	bfb8      	it	lt
 8010fe4:	4662      	movlt	r2, ip
 8010fe6:	4288      	cmp	r0, r1
 8010fe8:	bfb8      	it	lt
 8010fea:	461f      	movlt	r7, r3
 8010fec:	e086      	b.n	80110fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8010fee:	428a      	cmp	r2, r1
 8010ff0:	bfb8      	it	lt
 8010ff2:	460a      	movlt	r2, r1
 8010ff4:	e082      	b.n	80110fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8010ff6:	bf00      	nop
 8010ff8:	2400e464 	.word	0x2400e464
 8010ffc:	2400e470 	.word	0x2400e470
 8011000:	24000080 	.word	0x24000080
 8011004:	2400e424 	.word	0x2400e424
 8011008:	2400e41a 	.word	0x2400e41a
 801100c:	2400e418 	.word	0x2400e418
 8011010:	2400e422 	.word	0x2400e422
 8011014:	2400e41c 	.word	0x2400e41c
 8011018:	19a1      	adds	r1, r4, r6
 801101a:	ab07      	add	r3, sp, #28
 801101c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8011020:	6849      	ldr	r1, [r1, #4]
 8011022:	c303      	stmia	r3!, {r0, r1}
 8011024:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011028:	a807      	add	r0, sp, #28
 801102a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801102e:	2b13      	cmp	r3, #19
 8011030:	440b      	add	r3, r1
 8011032:	bfd8      	it	le
 8011034:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011038:	1a9b      	subs	r3, r3, r2
 801103a:	f8ad 201c 	strh.w	r2, [sp, #28]
 801103e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011042:	f7fe ffeb 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011046:	a807      	add	r0, sp, #28
 8011048:	f7f9 fdab 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801104c:	bb78      	cbnz	r0, 80110ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 801104e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011052:	4426      	add	r6, r4
 8011054:	f8d9 0000 	ldr.w	r0, [r9]
 8011058:	f1bc 0f14 	cmp.w	ip, #20
 801105c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011060:	f8d0 e000 	ldr.w	lr, [r0]
 8011064:	bfa8      	it	ge
 8011066:	f04f 0c14 	movge.w	ip, #20
 801106a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801106e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011072:	fa1f fc8c 	uxth.w	ip, ip
 8011076:	f8cd c000 	str.w	ip, [sp]
 801107a:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 801107e:	47d8      	blx	fp
 8011080:	4683      	mov	fp, r0
 8011082:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011086:	a807      	add	r0, sp, #28
 8011088:	f7fe ffae 	bl	800ffe8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801108c:	6823      	ldr	r3, [r4, #0]
 801108e:	4620      	mov	r0, r4
 8011090:	a907      	add	r1, sp, #28
 8011092:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011094:	4798      	blx	r3
 8011096:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801109a:	eba0 000b 	sub.w	r0, r0, fp
 801109e:	b200      	sxth	r0, r0
 80110a0:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80110a4:	b918      	cbnz	r0, 80110ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80110a6:	b2b9      	uxth	r1, r7
 80110a8:	4650      	mov	r0, sl
 80110aa:	f7ff fa7b 	bl	80105a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80110ae:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80110b2:	f1bb 0f00 	cmp.w	fp, #0
 80110b6:	f43f af2c 	beq.w	8010f12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80110ba:	882b      	ldrh	r3, [r5, #0]
 80110bc:	2700      	movs	r7, #0
 80110be:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80110c2:	3301      	adds	r3, #1
 80110c4:	b29b      	uxth	r3, r3
 80110c6:	b299      	uxth	r1, r3
 80110c8:	00fe      	lsls	r6, r7, #3
 80110ca:	458b      	cmp	fp, r1
 80110cc:	d9a4      	bls.n	8011018 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 80110ce:	4426      	add	r6, r4
 80110d0:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80110d4:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80110d8:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80110dc:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80110e0:	4408      	add	r0, r1
 80110e2:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80110e6:	4461      	add	r1, ip
 80110e8:	b200      	sxth	r0, r0
 80110ea:	b209      	sxth	r1, r1
 80110ec:	4288      	cmp	r0, r1
 80110ee:	f6bf af72 	bge.w	8010fd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 80110f2:	4584      	cmp	ip, r0
 80110f4:	4662      	mov	r2, ip
 80110f6:	461f      	mov	r7, r3
 80110f8:	bfb8      	it	lt
 80110fa:	4602      	movlt	r2, r0
 80110fc:	3301      	adds	r3, #1
 80110fe:	e7e2      	b.n	80110c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8011100:	d10e      	bne.n	8011120 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8011102:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8011106:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 801110a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801110e:	4473      	add	r3, lr
 8011110:	b21b      	sxth	r3, r3
 8011112:	429e      	cmp	r6, r3
 8011114:	bfa8      	it	ge
 8011116:	461e      	movge	r6, r3
 8011118:	4287      	cmp	r7, r0
 801111a:	bfb8      	it	lt
 801111c:	46e1      	movlt	r9, ip
 801111e:	e757      	b.n	8010fd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8011120:	4286      	cmp	r6, r0
 8011122:	bfa8      	it	ge
 8011124:	4606      	movge	r6, r0
 8011126:	e753      	b.n	8010fd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8011128:	eb0a 0007 	add.w	r0, sl, r7
 801112c:	4427      	add	r7, r4
 801112e:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8011132:	f1bb 0f13 	cmp.w	fp, #19
 8011136:	bfdc      	itt	le
 8011138:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801113c:	445e      	addle	r6, fp
 801113e:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8011142:	bfd8      	it	le
 8011144:	b236      	sxthle	r6, r6
 8011146:	f7f9 fd2c 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801114a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801114e:	2800      	cmp	r0, #0
 8011150:	f47f af1a 	bne.w	8010f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8011154:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8011158:	fa1f fb8b 	uxth.w	fp, fp
 801115c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011160:	1ab6      	subs	r6, r6, r2
 8011162:	4829      	ldr	r0, [pc, #164]	; (8011208 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8011164:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8011168:	2e14      	cmp	r6, #20
 801116a:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 801116e:	6800      	ldr	r0, [r0, #0]
 8011170:	bfa8      	it	ge
 8011172:	2614      	movge	r6, #20
 8011174:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011178:	f8ad 201e 	strh.w	r2, [sp, #30]
 801117c:	b289      	uxth	r1, r1
 801117e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011182:	b2b6      	uxth	r6, r6
 8011184:	f8d0 c000 	ldr.w	ip, [r0]
 8011188:	b292      	uxth	r2, r2
 801118a:	455e      	cmp	r6, fp
 801118c:	bf94      	ite	ls
 801118e:	9600      	strls	r6, [sp, #0]
 8011190:	f8cd b000 	strhi.w	fp, [sp]
 8011194:	b29b      	uxth	r3, r3
 8011196:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801119a:	47b0      	blx	r6
 801119c:	6823      	ldr	r3, [r4, #0]
 801119e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80111a2:	a907      	add	r1, sp, #28
 80111a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80111a6:	4620      	mov	r0, r4
 80111a8:	4798      	blx	r3
 80111aa:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80111ae:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80111b2:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80111b6:	1a5b      	subs	r3, r3, r1
 80111b8:	440a      	add	r2, r1
 80111ba:	b21b      	sxth	r3, r3
 80111bc:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80111c0:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80111c4:	2b00      	cmp	r3, #0
 80111c6:	f47f aeda 	bne.w	8010f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80111ca:	fa1f f189 	uxth.w	r1, r9
 80111ce:	4650      	mov	r0, sl
 80111d0:	f7ff f9e8 	bl	80105a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80111d4:	e6d3      	b.n	8010f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80111d6:	882e      	ldrh	r6, [r5, #0]
 80111d8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80111dc:	42b3      	cmp	r3, r6
 80111de:	f67f ae98 	bls.w	8010f12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80111e2:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80111e6:	ab07      	add	r3, sp, #28
 80111e8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80111ec:	6851      	ldr	r1, [r2, #4]
 80111ee:	c303      	stmia	r3!, {r0, r1}
 80111f0:	a807      	add	r0, sp, #28
 80111f2:	f7f9 fcd6 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80111f6:	b920      	cbnz	r0, 8011202 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 80111f8:	6823      	ldr	r3, [r4, #0]
 80111fa:	a907      	add	r1, sp, #28
 80111fc:	4620      	mov	r0, r4
 80111fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011200:	4798      	blx	r3
 8011202:	3601      	adds	r6, #1
 8011204:	b2b6      	uxth	r6, r6
 8011206:	e7e7      	b.n	80111d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8011208:	2400e424 	.word	0x2400e424

0801120c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801120c:	4b03      	ldr	r3, [pc, #12]	; (801121c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801120e:	2200      	movs	r2, #0
 8011210:	801a      	strh	r2, [r3, #0]
 8011212:	805a      	strh	r2, [r3, #2]
 8011214:	809a      	strh	r2, [r3, #4]
 8011216:	80da      	strh	r2, [r3, #6]
 8011218:	4770      	bx	lr
 801121a:	bf00      	nop
 801121c:	2400e470 	.word	0x2400e470

08011220 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011224:	b09d      	sub	sp, #116	; 0x74
 8011226:	4606      	mov	r6, r0
 8011228:	4614      	mov	r4, r2
 801122a:	468a      	mov	sl, r1
 801122c:	a803      	add	r0, sp, #12
 801122e:	461d      	mov	r5, r3
 8011230:	f000 fe6a 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 8011234:	6833      	ldr	r3, [r6, #0]
 8011236:	4630      	mov	r0, r6
 8011238:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801123c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801123e:	4798      	blx	r3
 8011240:	6833      	ldr	r3, [r6, #0]
 8011242:	4607      	mov	r7, r0
 8011244:	4630      	mov	r0, r6
 8011246:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011248:	4798      	blx	r3
 801124a:	462a      	mov	r2, r5
 801124c:	2500      	movs	r5, #0
 801124e:	4621      	mov	r1, r4
 8011250:	9000      	str	r0, [sp, #0]
 8011252:	463b      	mov	r3, r7
 8011254:	462c      	mov	r4, r5
 8011256:	46a9      	mov	r9, r5
 8011258:	46a8      	mov	r8, r5
 801125a:	a803      	add	r0, sp, #12
 801125c:	f000 feaf 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011260:	2300      	movs	r3, #0
 8011262:	9302      	str	r3, [sp, #8]
 8011264:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011268:	429c      	cmp	r4, r3
 801126a:	d002      	beq.n	8011272 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801126c:	455c      	cmp	r4, fp
 801126e:	bf18      	it	ne
 8011270:	4625      	movne	r5, r4
 8011272:	ab02      	add	r3, sp, #8
 8011274:	4632      	mov	r2, r6
 8011276:	4651      	mov	r1, sl
 8011278:	a803      	add	r0, sp, #12
 801127a:	f001 f9a5 	bl	80125c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801127e:	4604      	mov	r4, r0
 8011280:	b108      	cbz	r0, 8011286 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011282:	280a      	cmp	r0, #10
 8011284:	d10a      	bne.n	801129c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011286:	45c1      	cmp	r9, r8
 8011288:	bf38      	it	cc
 801128a:	46c1      	movcc	r9, r8
 801128c:	f04f 0800 	mov.w	r8, #0
 8011290:	2c00      	cmp	r4, #0
 8011292:	d1e5      	bne.n	8011260 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011294:	4648      	mov	r0, r9
 8011296:	b01d      	add	sp, #116	; 0x74
 8011298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801129c:	9a02      	ldr	r2, [sp, #8]
 801129e:	2a00      	cmp	r2, #0
 80112a0:	d0de      	beq.n	8011260 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80112a2:	7b57      	ldrb	r7, [r2, #13]
 80112a4:	4629      	mov	r1, r5
 80112a6:	6833      	ldr	r3, [r6, #0]
 80112a8:	007f      	lsls	r7, r7, #1
 80112aa:	8894      	ldrh	r4, [r2, #4]
 80112ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80112ae:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80112b2:	7a97      	ldrb	r7, [r2, #10]
 80112b4:	4307      	orrs	r7, r0
 80112b6:	4630      	mov	r0, r6
 80112b8:	4798      	blx	r3
 80112ba:	4438      	add	r0, r7
 80112bc:	4480      	add	r8, r0
 80112be:	fa1f f888 	uxth.w	r8, r8
 80112c2:	e7e5      	b.n	8011290 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080112c4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80112c4:	b508      	push	{r3, lr}
 80112c6:	6803      	ldr	r3, [r0, #0]
 80112c8:	68db      	ldr	r3, [r3, #12]
 80112ca:	4798      	blx	r3
 80112cc:	b128      	cbz	r0, 80112da <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80112ce:	7b43      	ldrb	r3, [r0, #13]
 80112d0:	7a80      	ldrb	r0, [r0, #10]
 80112d2:	005b      	lsls	r3, r3, #1
 80112d4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80112d8:	4318      	orrs	r0, r3
 80112da:	bd08      	pop	{r3, pc}

080112dc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80112dc:	b40e      	push	{r1, r2, r3}
 80112de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112e0:	b09e      	sub	sp, #120	; 0x78
 80112e2:	4605      	mov	r5, r0
 80112e4:	ab23      	add	r3, sp, #140	; 0x8c
 80112e6:	a805      	add	r0, sp, #20
 80112e8:	f853 4b04 	ldr.w	r4, [r3], #4
 80112ec:	9303      	str	r3, [sp, #12]
 80112ee:	f000 fe0b 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 80112f2:	682b      	ldr	r3, [r5, #0]
 80112f4:	4628      	mov	r0, r5
 80112f6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80112f8:	4798      	blx	r3
 80112fa:	682b      	ldr	r3, [r5, #0]
 80112fc:	4606      	mov	r6, r0
 80112fe:	4628      	mov	r0, r5
 8011300:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011302:	4798      	blx	r3
 8011304:	4633      	mov	r3, r6
 8011306:	4621      	mov	r1, r4
 8011308:	ae1e      	add	r6, sp, #120	; 0x78
 801130a:	2400      	movs	r4, #0
 801130c:	9000      	str	r0, [sp, #0]
 801130e:	9a03      	ldr	r2, [sp, #12]
 8011310:	a805      	add	r0, sp, #20
 8011312:	f000 fe54 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011316:	f846 4d68 	str.w	r4, [r6, #-104]!
 801131a:	462a      	mov	r2, r5
 801131c:	4633      	mov	r3, r6
 801131e:	4621      	mov	r1, r4
 8011320:	a805      	add	r0, sp, #20
 8011322:	f001 f951 	bl	80125c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011326:	b300      	cbz	r0, 801136a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8011328:	280a      	cmp	r0, #10
 801132a:	d01a      	beq.n	8011362 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 801132c:	9f04      	ldr	r7, [sp, #16]
 801132e:	b1c7      	cbz	r7, 8011362 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8011330:	7b78      	ldrb	r0, [r7, #13]
 8011332:	7a3b      	ldrb	r3, [r7, #8]
 8011334:	00c1      	lsls	r1, r0, #3
 8011336:	88ea      	ldrh	r2, [r5, #6]
 8011338:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801133c:	4319      	orrs	r1, r3
 801133e:	0643      	lsls	r3, r0, #25
 8011340:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8011344:	bf48      	it	mi
 8011346:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801134a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801134e:	bf48      	it	mi
 8011350:	b219      	sxthmi	r1, r3
 8011352:	79fb      	ldrb	r3, [r7, #7]
 8011354:	4303      	orrs	r3, r0
 8011356:	4413      	add	r3, r2
 8011358:	1a5b      	subs	r3, r3, r1
 801135a:	b21b      	sxth	r3, r3
 801135c:	429c      	cmp	r4, r3
 801135e:	bfb8      	it	lt
 8011360:	461c      	movlt	r4, r3
 8011362:	4633      	mov	r3, r6
 8011364:	462a      	mov	r2, r5
 8011366:	2100      	movs	r1, #0
 8011368:	e7da      	b.n	8011320 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801136a:	b2a0      	uxth	r0, r4
 801136c:	b01e      	add	sp, #120	; 0x78
 801136e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011372:	b003      	add	sp, #12
 8011374:	4770      	bx	lr

08011376 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8011376:	7a43      	ldrb	r3, [r0, #9]
 8011378:	8880      	ldrh	r0, [r0, #4]
 801137a:	4418      	add	r0, r3
 801137c:	b280      	uxth	r0, r0
 801137e:	4770      	bx	lr

08011380 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8011380:	6803      	ldr	r3, [r0, #0]
 8011382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011384:	4718      	bx	r3

08011386 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011386:	b40e      	push	{r1, r2, r3}
 8011388:	b570      	push	{r4, r5, r6, lr}
 801138a:	b09d      	sub	sp, #116	; 0x74
 801138c:	4604      	mov	r4, r0
 801138e:	ab21      	add	r3, sp, #132	; 0x84
 8011390:	a803      	add	r0, sp, #12
 8011392:	f853 5b04 	ldr.w	r5, [r3], #4
 8011396:	9302      	str	r3, [sp, #8]
 8011398:	f000 fdb6 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 801139c:	6823      	ldr	r3, [r4, #0]
 801139e:	4620      	mov	r0, r4
 80113a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80113a2:	4798      	blx	r3
 80113a4:	6823      	ldr	r3, [r4, #0]
 80113a6:	4606      	mov	r6, r0
 80113a8:	4620      	mov	r0, r4
 80113aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80113ac:	2401      	movs	r4, #1
 80113ae:	4798      	blx	r3
 80113b0:	4633      	mov	r3, r6
 80113b2:	9000      	str	r0, [sp, #0]
 80113b4:	4629      	mov	r1, r5
 80113b6:	9a02      	ldr	r2, [sp, #8]
 80113b8:	a803      	add	r0, sp, #12
 80113ba:	f000 fe00 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80113be:	a803      	add	r0, sp, #12
 80113c0:	f001 f9ce 	bl	8012760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80113c4:	b2a3      	uxth	r3, r4
 80113c6:	b138      	cbz	r0, 80113d8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 80113c8:	280a      	cmp	r0, #10
 80113ca:	a803      	add	r0, sp, #12
 80113cc:	bf04      	itt	eq
 80113ce:	3301      	addeq	r3, #1
 80113d0:	b21c      	sxtheq	r4, r3
 80113d2:	f001 f9c5 	bl	8012760 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80113d6:	e7f5      	b.n	80113c4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80113d8:	4618      	mov	r0, r3
 80113da:	b01d      	add	sp, #116	; 0x74
 80113dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113e0:	b003      	add	sp, #12
 80113e2:	4770      	bx	lr

080113e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80113e4:	b40e      	push	{r1, r2, r3}
 80113e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113e8:	b09e      	sub	sp, #120	; 0x78
 80113ea:	4604      	mov	r4, r0
 80113ec:	ab23      	add	r3, sp, #140	; 0x8c
 80113ee:	a805      	add	r0, sp, #20
 80113f0:	f853 5b04 	ldr.w	r5, [r3], #4
 80113f4:	9303      	str	r3, [sp, #12]
 80113f6:	f000 fd87 	bl	8011f08 <_ZN8touchgfx12TextProviderC1Ev>
 80113fa:	6823      	ldr	r3, [r4, #0]
 80113fc:	4620      	mov	r0, r4
 80113fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011400:	4798      	blx	r3
 8011402:	6823      	ldr	r3, [r4, #0]
 8011404:	4606      	mov	r6, r0
 8011406:	4620      	mov	r0, r4
 8011408:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801140a:	4798      	blx	r3
 801140c:	4633      	mov	r3, r6
 801140e:	4629      	mov	r1, r5
 8011410:	9000      	str	r0, [sp, #0]
 8011412:	9a03      	ldr	r2, [sp, #12]
 8011414:	a805      	add	r0, sp, #20
 8011416:	f000 fdd2 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801141a:	ad1e      	add	r5, sp, #120	; 0x78
 801141c:	2100      	movs	r1, #0
 801141e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8011422:	4622      	mov	r2, r4
 8011424:	a805      	add	r0, sp, #20
 8011426:	f845 1d68 	str.w	r1, [r5, #-104]!
 801142a:	462b      	mov	r3, r5
 801142c:	f001 f8cc 	bl	80125c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011430:	b1d8      	cbz	r0, 801146a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8011432:	280a      	cmp	r0, #10
 8011434:	d012      	beq.n	801145c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011436:	9804      	ldr	r0, [sp, #16]
 8011438:	b180      	cbz	r0, 801145c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801143a:	7b47      	ldrb	r7, [r0, #13]
 801143c:	88e2      	ldrh	r2, [r4, #6]
 801143e:	00fb      	lsls	r3, r7, #3
 8011440:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011444:	7a03      	ldrb	r3, [r0, #8]
 8011446:	430b      	orrs	r3, r1
 8011448:	0679      	lsls	r1, r7, #25
 801144a:	bf44      	itt	mi
 801144c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011450:	b21b      	sxthmi	r3, r3
 8011452:	1ad3      	subs	r3, r2, r3
 8011454:	b21b      	sxth	r3, r3
 8011456:	429e      	cmp	r6, r3
 8011458:	bfa8      	it	ge
 801145a:	461e      	movge	r6, r3
 801145c:	462b      	mov	r3, r5
 801145e:	4622      	mov	r2, r4
 8011460:	2100      	movs	r1, #0
 8011462:	a805      	add	r0, sp, #20
 8011464:	f001 f8b0 	bl	80125c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011468:	e7e2      	b.n	8011430 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801146a:	4630      	mov	r0, r6
 801146c:	b01e      	add	sp, #120	; 0x78
 801146e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011472:	b003      	add	sp, #12
 8011474:	4770      	bx	lr

08011476 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011476:	b513      	push	{r0, r1, r4, lr}
 8011478:	6803      	ldr	r3, [r0, #0]
 801147a:	2400      	movs	r4, #0
 801147c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011480:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011484:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011488:	4669      	mov	r1, sp
 801148a:	691b      	ldr	r3, [r3, #16]
 801148c:	9400      	str	r4, [sp, #0]
 801148e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011492:	4798      	blx	r3
 8011494:	b002      	add	sp, #8
 8011496:	bd10      	pop	{r4, pc}

08011498 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011498:	b538      	push	{r3, r4, r5, lr}
 801149a:	680b      	ldr	r3, [r1, #0]
 801149c:	460c      	mov	r4, r1
 801149e:	4605      	mov	r5, r0
 80114a0:	68db      	ldr	r3, [r3, #12]
 80114a2:	4798      	blx	r3
 80114a4:	6823      	ldr	r3, [r4, #0]
 80114a6:	4620      	mov	r0, r4
 80114a8:	4629      	mov	r1, r5
 80114aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114ac:	4798      	blx	r3
 80114ae:	4628      	mov	r0, r5
 80114b0:	bd38      	pop	{r3, r4, r5, pc}

080114b2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80114b2:	b410      	push	{r4}
 80114b4:	880a      	ldrh	r2, [r1, #0]
 80114b6:	8884      	ldrh	r4, [r0, #4]
 80114b8:	4422      	add	r2, r4
 80114ba:	800a      	strh	r2, [r1, #0]
 80114bc:	884a      	ldrh	r2, [r1, #2]
 80114be:	88c4      	ldrh	r4, [r0, #6]
 80114c0:	4422      	add	r2, r4
 80114c2:	804a      	strh	r2, [r1, #2]
 80114c4:	6940      	ldr	r0, [r0, #20]
 80114c6:	b120      	cbz	r0, 80114d2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80114c8:	6803      	ldr	r3, [r0, #0]
 80114ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80114ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114d0:	4718      	bx	r3
 80114d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80114d6:	4770      	bx	lr

080114d8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80114d8:	b570      	push	{r4, r5, r6, lr}
 80114da:	8882      	ldrh	r2, [r0, #4]
 80114dc:	460c      	mov	r4, r1
 80114de:	880b      	ldrh	r3, [r1, #0]
 80114e0:	4605      	mov	r5, r0
 80114e2:	4413      	add	r3, r2
 80114e4:	800b      	strh	r3, [r1, #0]
 80114e6:	884b      	ldrh	r3, [r1, #2]
 80114e8:	88c2      	ldrh	r2, [r0, #6]
 80114ea:	4413      	add	r3, r2
 80114ec:	804b      	strh	r3, [r1, #2]
 80114ee:	1d01      	adds	r1, r0, #4
 80114f0:	4620      	mov	r0, r4
 80114f2:	f7f9 fb13 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 80114f6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80114fa:	2b00      	cmp	r3, #0
 80114fc:	dd0b      	ble.n	8011516 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80114fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011502:	2b00      	cmp	r3, #0
 8011504:	dd07      	ble.n	8011516 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011506:	6968      	ldr	r0, [r5, #20]
 8011508:	b128      	cbz	r0, 8011516 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801150a:	6803      	ldr	r3, [r0, #0]
 801150c:	4621      	mov	r1, r4
 801150e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011510:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011514:	4718      	bx	r3
 8011516:	bd70      	pop	{r4, r5, r6, pc}

08011518 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011518:	b570      	push	{r4, r5, r6, lr}
 801151a:	8882      	ldrh	r2, [r0, #4]
 801151c:	460c      	mov	r4, r1
 801151e:	880b      	ldrh	r3, [r1, #0]
 8011520:	4605      	mov	r5, r0
 8011522:	4413      	add	r3, r2
 8011524:	800b      	strh	r3, [r1, #0]
 8011526:	884b      	ldrh	r3, [r1, #2]
 8011528:	88c2      	ldrh	r2, [r0, #6]
 801152a:	4413      	add	r3, r2
 801152c:	804b      	strh	r3, [r1, #2]
 801152e:	1d01      	adds	r1, r0, #4
 8011530:	4620      	mov	r0, r4
 8011532:	f7f9 faf3 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 8011536:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801153a:	2b00      	cmp	r3, #0
 801153c:	dd19      	ble.n	8011572 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801153e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011542:	2b00      	cmp	r3, #0
 8011544:	dd15      	ble.n	8011572 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011546:	6968      	ldr	r0, [r5, #20]
 8011548:	b128      	cbz	r0, 8011556 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801154a:	6803      	ldr	r3, [r0, #0]
 801154c:	4621      	mov	r1, r4
 801154e:	691b      	ldr	r3, [r3, #16]
 8011550:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011554:	4718      	bx	r3
 8011556:	4b07      	ldr	r3, [pc, #28]	; (8011574 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011558:	681b      	ldr	r3, [r3, #0]
 801155a:	3304      	adds	r3, #4
 801155c:	429d      	cmp	r5, r3
 801155e:	d108      	bne.n	8011572 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011560:	f7fe ff10 	bl	8010384 <_ZN8touchgfx11Application11getInstanceEv>
 8011564:	6803      	ldr	r3, [r0, #0]
 8011566:	6821      	ldr	r1, [r4, #0]
 8011568:	6862      	ldr	r2, [r4, #4]
 801156a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801156c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011570:	4718      	bx	r3
 8011572:	bd70      	pop	{r4, r5, r6, pc}
 8011574:	2400e468 	.word	0x2400e468

08011578 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011578:	b570      	push	{r4, r5, r6, lr}
 801157a:	4604      	mov	r4, r0
 801157c:	4616      	mov	r6, r2
 801157e:	460d      	mov	r5, r1
 8011580:	b901      	cbnz	r1, 8011584 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011582:	b192      	cbz	r2, 80115aa <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011584:	6823      	ldr	r3, [r4, #0]
 8011586:	4620      	mov	r0, r4
 8011588:	699b      	ldr	r3, [r3, #24]
 801158a:	4798      	blx	r3
 801158c:	88e2      	ldrh	r2, [r4, #6]
 801158e:	88a1      	ldrh	r1, [r4, #4]
 8011590:	4620      	mov	r0, r4
 8011592:	4432      	add	r2, r6
 8011594:	4429      	add	r1, r5
 8011596:	b212      	sxth	r2, r2
 8011598:	b209      	sxth	r1, r1
 801159a:	f7f1 f95b 	bl	8002854 <_ZN8touchgfx8Drawable5setXYEss>
 801159e:	6823      	ldr	r3, [r4, #0]
 80115a0:	4620      	mov	r0, r4
 80115a2:	699b      	ldr	r3, [r3, #24]
 80115a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80115a8:	4718      	bx	r3
 80115aa:	bd70      	pop	{r4, r5, r6, pc}

080115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80115ac:	b510      	push	{r4, lr}
 80115ae:	2300      	movs	r3, #0
 80115b0:	4604      	mov	r4, r0
 80115b2:	4608      	mov	r0, r1
 80115b4:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80115b8:	8023      	strh	r3, [r4, #0]
 80115ba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80115be:	8063      	strh	r3, [r4, #2]
 80115c0:	6803      	ldr	r3, [r0, #0]
 80115c2:	80a1      	strh	r1, [r4, #4]
 80115c4:	4621      	mov	r1, r4
 80115c6:	80e2      	strh	r2, [r4, #6]
 80115c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115ca:	4798      	blx	r3
 80115cc:	4620      	mov	r0, r4
 80115ce:	bd10      	pop	{r4, pc}

080115d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80115d0:	b530      	push	{r4, r5, lr}
 80115d2:	8083      	strh	r3, [r0, #4]
 80115d4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80115d8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80115dc:	80c3      	strh	r3, [r0, #6]
 80115de:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80115e2:	6141      	str	r1, [r0, #20]
 80115e4:	7203      	strb	r3, [r0, #8]
 80115e6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80115ea:	8302      	strh	r2, [r0, #24]
 80115ec:	7243      	strb	r3, [r0, #9]
 80115ee:	7a83      	ldrb	r3, [r0, #10]
 80115f0:	f365 0306 	bfi	r3, r5, #0, #7
 80115f4:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80115f8:	f365 13c7 	bfi	r3, r5, #7, #1
 80115fc:	7283      	strb	r3, [r0, #10]
 80115fe:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011602:	72c3      	strb	r3, [r0, #11]
 8011604:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8011608:	7303      	strb	r3, [r0, #12]
 801160a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801160e:	81c3      	strh	r3, [r0, #14]
 8011610:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8011614:	8203      	strh	r3, [r0, #16]
 8011616:	4b01      	ldr	r3, [pc, #4]	; (801161c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011618:	6003      	str	r3, [r0, #0]
 801161a:	bd30      	pop	{r4, r5, pc}
 801161c:	08023998 	.word	0x08023998

08011620 <_ZNK8touchgfx9ConstFont4findEt>:
 8011620:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011622:	6944      	ldr	r4, [r0, #20]
 8011624:	b3bc      	cbz	r4, 8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011626:	88a3      	ldrh	r3, [r4, #4]
 8011628:	8b02      	ldrh	r2, [r0, #24]
 801162a:	1acb      	subs	r3, r1, r3
 801162c:	f102 32ff 	add.w	r2, r2, #4294967295
 8011630:	d431      	bmi.n	8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011632:	4293      	cmp	r3, r2
 8011634:	dd0c      	ble.n	8011650 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011636:	230e      	movs	r3, #14
 8011638:	fb03 4302 	mla	r3, r3, r2, r4
 801163c:	889b      	ldrh	r3, [r3, #4]
 801163e:	1a5b      	subs	r3, r3, r1
 8011640:	1ad3      	subs	r3, r2, r3
 8011642:	429a      	cmp	r2, r3
 8011644:	db27      	blt.n	8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011646:	2b00      	cmp	r3, #0
 8011648:	bfbc      	itt	lt
 801164a:	2302      	movlt	r3, #2
 801164c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011650:	2500      	movs	r5, #0
 8011652:	260e      	movs	r6, #14
 8011654:	4295      	cmp	r5, r2
 8011656:	dc1e      	bgt.n	8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011658:	fb06 4003 	mla	r0, r6, r3, r4
 801165c:	8887      	ldrh	r7, [r0, #4]
 801165e:	42b9      	cmp	r1, r7
 8011660:	d01a      	beq.n	8011698 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011662:	d20d      	bcs.n	8011680 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011664:	1e5a      	subs	r2, r3, #1
 8011666:	4295      	cmp	r5, r2
 8011668:	dc15      	bgt.n	8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801166a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801166e:	1a5b      	subs	r3, r3, r1
 8011670:	1ad3      	subs	r3, r2, r3
 8011672:	429a      	cmp	r2, r3
 8011674:	db0f      	blt.n	8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011676:	429d      	cmp	r5, r3
 8011678:	ddec      	ble.n	8011654 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801167a:	1953      	adds	r3, r2, r5
 801167c:	105b      	asrs	r3, r3, #1
 801167e:	e7e9      	b.n	8011654 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011680:	1c5d      	adds	r5, r3, #1
 8011682:	42aa      	cmp	r2, r5
 8011684:	db07      	blt.n	8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011686:	8a43      	ldrh	r3, [r0, #18]
 8011688:	1acb      	subs	r3, r1, r3
 801168a:	442b      	add	r3, r5
 801168c:	429d      	cmp	r5, r3
 801168e:	dc02      	bgt.n	8011696 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011690:	429a      	cmp	r2, r3
 8011692:	dadf      	bge.n	8011654 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011694:	e7f1      	b.n	801167a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011696:	2000      	movs	r0, #0
 8011698:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801169a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801169a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801169c:	4604      	mov	r4, r0
 801169e:	4617      	mov	r7, r2
 80116a0:	461e      	mov	r6, r3
 80116a2:	b911      	cbnz	r1, 80116aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80116a4:	2500      	movs	r5, #0
 80116a6:	4628      	mov	r0, r5
 80116a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80116aa:	290a      	cmp	r1, #10
 80116ac:	d0fa      	beq.n	80116a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80116ae:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80116b2:	4291      	cmp	r1, r2
 80116b4:	d0f6      	beq.n	80116a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80116b6:	f242 020b 	movw	r2, #8203	; 0x200b
 80116ba:	4291      	cmp	r1, r2
 80116bc:	d0f2      	beq.n	80116a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80116be:	f7ff ffaf 	bl	8011620 <_ZNK8touchgfx9ConstFont4findEt>
 80116c2:	4605      	mov	r5, r0
 80116c4:	b950      	cbnz	r0, 80116dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80116c6:	6823      	ldr	r3, [r4, #0]
 80116c8:	4620      	mov	r0, r4
 80116ca:	691b      	ldr	r3, [r3, #16]
 80116cc:	4798      	blx	r3
 80116ce:	4601      	mov	r1, r0
 80116d0:	4620      	mov	r0, r4
 80116d2:	f7ff ffa5 	bl	8011620 <_ZNK8touchgfx9ConstFont4findEt>
 80116d6:	4605      	mov	r5, r0
 80116d8:	2800      	cmp	r0, #0
 80116da:	d0e3      	beq.n	80116a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80116dc:	6823      	ldr	r3, [r4, #0]
 80116de:	4629      	mov	r1, r5
 80116e0:	4620      	mov	r0, r4
 80116e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80116e4:	4798      	blx	r3
 80116e6:	6038      	str	r0, [r7, #0]
 80116e8:	6823      	ldr	r3, [r4, #0]
 80116ea:	4620      	mov	r0, r4
 80116ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80116ee:	4798      	blx	r3
 80116f0:	7030      	strb	r0, [r6, #0]
 80116f2:	e7d8      	b.n	80116a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080116f4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80116f4:	b538      	push	{r3, r4, r5, lr}
 80116f6:	4605      	mov	r5, r0
 80116f8:	f001 fd88 	bl	801320c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80116fc:	4604      	mov	r4, r0
 80116fe:	4628      	mov	r0, r5
 8011700:	f001 fcc8 	bl	8013094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011704:	2800      	cmp	r0, #0
 8011706:	bf14      	ite	ne
 8011708:	2002      	movne	r0, #2
 801170a:	2000      	moveq	r0, #0
 801170c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8011710:	b280      	uxth	r0, r0
 8011712:	bd38      	pop	{r3, r4, r5, pc}

08011714 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8011714:	b538      	push	{r3, r4, r5, lr}
 8011716:	4605      	mov	r5, r0
 8011718:	f001 fd78 	bl	801320c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801171c:	4604      	mov	r4, r0
 801171e:	4628      	mov	r0, r5
 8011720:	f001 fcb8 	bl	8013094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011724:	2800      	cmp	r0, #0
 8011726:	bf14      	ite	ne
 8011728:	2002      	movne	r0, #2
 801172a:	2000      	moveq	r0, #0
 801172c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8011730:	f040 0001 	orr.w	r0, r0, #1
 8011734:	b280      	uxth	r0, r0
 8011736:	bd38      	pop	{r3, r4, r5, pc}

08011738 <_ZN8touchgfx4clzuEm>:
 8011738:	4603      	mov	r3, r0
 801173a:	b1c8      	cbz	r0, 8011770 <_ZN8touchgfx4clzuEm+0x38>
 801173c:	0c02      	lsrs	r2, r0, #16
 801173e:	0412      	lsls	r2, r2, #16
 8011740:	b9a2      	cbnz	r2, 801176c <_ZN8touchgfx4clzuEm+0x34>
 8011742:	0403      	lsls	r3, r0, #16
 8011744:	2010      	movs	r0, #16
 8011746:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801174a:	bf04      	itt	eq
 801174c:	021b      	lsleq	r3, r3, #8
 801174e:	3008      	addeq	r0, #8
 8011750:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011754:	bf04      	itt	eq
 8011756:	011b      	lsleq	r3, r3, #4
 8011758:	3004      	addeq	r0, #4
 801175a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801175e:	bf04      	itt	eq
 8011760:	009b      	lsleq	r3, r3, #2
 8011762:	3002      	addeq	r0, #2
 8011764:	2b00      	cmp	r3, #0
 8011766:	db04      	blt.n	8011772 <_ZN8touchgfx4clzuEm+0x3a>
 8011768:	3001      	adds	r0, #1
 801176a:	4770      	bx	lr
 801176c:	2000      	movs	r0, #0
 801176e:	e7ea      	b.n	8011746 <_ZN8touchgfx4clzuEm+0xe>
 8011770:	2020      	movs	r0, #32
 8011772:	4770      	bx	lr

08011774 <_ZN8touchgfx7muldivuEmmmRm>:
 8011774:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011778:	460f      	mov	r7, r1
 801177a:	4615      	mov	r5, r2
 801177c:	461e      	mov	r6, r3
 801177e:	4601      	mov	r1, r0
 8011780:	b100      	cbz	r0, 8011784 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8011782:	b927      	cbnz	r7, 801178e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011784:	2000      	movs	r0, #0
 8011786:	6030      	str	r0, [r6, #0]
 8011788:	b002      	add	sp, #8
 801178a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801178e:	f7ff ffd3 	bl	8011738 <_ZN8touchgfx4clzuEm>
 8011792:	b980      	cbnz	r0, 80117b6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8011794:	4638      	mov	r0, r7
 8011796:	f7ff ffcf 	bl	8011738 <_ZN8touchgfx4clzuEm>
 801179a:	2800      	cmp	r0, #0
 801179c:	dd05      	ble.n	80117aa <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801179e:	4633      	mov	r3, r6
 80117a0:	462a      	mov	r2, r5
 80117a2:	4638      	mov	r0, r7
 80117a4:	f7ff ffe6 	bl	8011774 <_ZN8touchgfx7muldivuEmmmRm>
 80117a8:	e7ee      	b.n	8011788 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80117aa:	f04f 33ff 	mov.w	r3, #4294967295
 80117ae:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80117b2:	6033      	str	r3, [r6, #0]
 80117b4:	e7e8      	b.n	8011788 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80117b6:	fa37 f800 	lsrs.w	r8, r7, r0
 80117ba:	fb07 f301 	mul.w	r3, r7, r1
 80117be:	d105      	bne.n	80117cc <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80117c0:	fbb3 f0f5 	udiv	r0, r3, r5
 80117c4:	fb05 3510 	mls	r5, r5, r0, r3
 80117c8:	6035      	str	r5, [r6, #0]
 80117ca:	e7dd      	b.n	8011788 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80117cc:	2301      	movs	r3, #1
 80117ce:	fa01 fa00 	lsl.w	sl, r1, r0
 80117d2:	462a      	mov	r2, r5
 80117d4:	fa03 f000 	lsl.w	r0, r3, r0
 80117d8:	4633      	mov	r3, r6
 80117da:	fbba f9f5 	udiv	r9, sl, r5
 80117de:	3801      	subs	r0, #1
 80117e0:	fb08 f409 	mul.w	r4, r8, r9
 80117e4:	4038      	ands	r0, r7
 80117e6:	f7ff ffc5 	bl	8011774 <_ZN8touchgfx7muldivuEmmmRm>
 80117ea:	462a      	mov	r2, r5
 80117ec:	4607      	mov	r7, r0
 80117ee:	ab01      	add	r3, sp, #4
 80117f0:	fb05 a119 	mls	r1, r5, r9, sl
 80117f4:	4640      	mov	r0, r8
 80117f6:	f7ff ffbd 	bl	8011774 <_ZN8touchgfx7muldivuEmmmRm>
 80117fa:	9b01      	ldr	r3, [sp, #4]
 80117fc:	6832      	ldr	r2, [r6, #0]
 80117fe:	441a      	add	r2, r3
 8011800:	fbb2 f3f5 	udiv	r3, r2, r5
 8011804:	441c      	add	r4, r3
 8011806:	fb05 2513 	mls	r5, r5, r3, r2
 801180a:	443c      	add	r4, r7
 801180c:	4420      	add	r0, r4
 801180e:	e7db      	b.n	80117c8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011810 <_ZN8touchgfx6muldivElllRl>:
 8011810:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011812:	2800      	cmp	r0, #0
 8011814:	461e      	mov	r6, r3
 8011816:	bfba      	itte	lt
 8011818:	4240      	neglt	r0, r0
 801181a:	f04f 34ff 	movlt.w	r4, #4294967295
 801181e:	2401      	movge	r4, #1
 8011820:	2900      	cmp	r1, #0
 8011822:	bfbc      	itt	lt
 8011824:	4249      	neglt	r1, r1
 8011826:	4264      	neglt	r4, r4
 8011828:	2a00      	cmp	r2, #0
 801182a:	bfb6      	itet	lt
 801182c:	4265      	neglt	r5, r4
 801182e:	4625      	movge	r5, r4
 8011830:	4252      	neglt	r2, r2
 8011832:	4288      	cmp	r0, r1
 8011834:	bfc2      	ittt	gt
 8011836:	4603      	movgt	r3, r0
 8011838:	4608      	movgt	r0, r1
 801183a:	4619      	movgt	r1, r3
 801183c:	ab01      	add	r3, sp, #4
 801183e:	f7ff ff99 	bl	8011774 <_ZN8touchgfx7muldivuEmmmRm>
 8011842:	9b01      	ldr	r3, [sp, #4]
 8011844:	4368      	muls	r0, r5
 8011846:	435c      	muls	r4, r3
 8011848:	6034      	str	r4, [r6, #0]
 801184a:	b002      	add	sp, #8
 801184c:	bd70      	pop	{r4, r5, r6, pc}

0801184e <_ZN8touchgfx6muldivElll>:
 801184e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011850:	4606      	mov	r6, r0
 8011852:	ab01      	add	r3, sp, #4
 8011854:	460d      	mov	r5, r1
 8011856:	4614      	mov	r4, r2
 8011858:	f7ff ffda 	bl	8011810 <_ZN8touchgfx6muldivElllRl>
 801185c:	2e00      	cmp	r6, #0
 801185e:	db20      	blt.n	80118a2 <_ZN8touchgfx6muldivElll+0x54>
 8011860:	bf14      	ite	ne
 8011862:	2301      	movne	r3, #1
 8011864:	2300      	moveq	r3, #0
 8011866:	2d00      	cmp	r5, #0
 8011868:	db1e      	blt.n	80118a8 <_ZN8touchgfx6muldivElll+0x5a>
 801186a:	bf14      	ite	ne
 801186c:	2201      	movne	r2, #1
 801186e:	2200      	moveq	r2, #0
 8011870:	2c00      	cmp	r4, #0
 8011872:	fb03 f202 	mul.w	r2, r3, r2
 8011876:	db1a      	blt.n	80118ae <_ZN8touchgfx6muldivElll+0x60>
 8011878:	bf14      	ite	ne
 801187a:	2301      	movne	r3, #1
 801187c:	2300      	moveq	r3, #0
 801187e:	4353      	muls	r3, r2
 8011880:	2b01      	cmp	r3, #1
 8011882:	d117      	bne.n	80118b4 <_ZN8touchgfx6muldivElll+0x66>
 8011884:	2c00      	cmp	r4, #0
 8011886:	9b01      	ldr	r3, [sp, #4]
 8011888:	bfb8      	it	lt
 801188a:	4264      	neglt	r4, r4
 801188c:	2b00      	cmp	r3, #0
 801188e:	f104 0401 	add.w	r4, r4, #1
 8011892:	bfb8      	it	lt
 8011894:	425b      	neglt	r3, r3
 8011896:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801189a:	db00      	blt.n	801189e <_ZN8touchgfx6muldivElll+0x50>
 801189c:	3001      	adds	r0, #1
 801189e:	b002      	add	sp, #8
 80118a0:	bd70      	pop	{r4, r5, r6, pc}
 80118a2:	f04f 33ff 	mov.w	r3, #4294967295
 80118a6:	e7de      	b.n	8011866 <_ZN8touchgfx6muldivElll+0x18>
 80118a8:	f04f 32ff 	mov.w	r2, #4294967295
 80118ac:	e7e0      	b.n	8011870 <_ZN8touchgfx6muldivElll+0x22>
 80118ae:	f04f 33ff 	mov.w	r3, #4294967295
 80118b2:	e7e4      	b.n	801187e <_ZN8touchgfx6muldivElll+0x30>
 80118b4:	3301      	adds	r3, #1
 80118b6:	d1f2      	bne.n	801189e <_ZN8touchgfx6muldivElll+0x50>
 80118b8:	9b01      	ldr	r3, [sp, #4]
 80118ba:	2c00      	cmp	r4, #0
 80118bc:	bfb8      	it	lt
 80118be:	4264      	neglt	r4, r4
 80118c0:	2b00      	cmp	r3, #0
 80118c2:	bfb8      	it	lt
 80118c4:	425b      	neglt	r3, r3
 80118c6:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80118ca:	bfc8      	it	gt
 80118cc:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80118d0:	e7e5      	b.n	801189e <_ZN8touchgfx6muldivElll+0x50>

080118d2 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80118d2:	2000      	movs	r0, #0
 80118d4:	4770      	bx	lr

080118d6 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80118d6:	2001      	movs	r0, #1
 80118d8:	4770      	bx	lr

080118da <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80118da:	2002      	movs	r0, #2
 80118dc:	4770      	bx	lr

080118de <_ZN8touchgfx6ScreenD1Ev>:
 80118de:	4770      	bx	lr

080118e0 <_ZN8touchgfx12GestureEventD1Ev>:
 80118e0:	4770      	bx	lr

080118e2 <_ZN8touchgfx9DragEventD1Ev>:
 80118e2:	4770      	bx	lr

080118e4 <_ZN8touchgfx10ClickEventD1Ev>:
 80118e4:	4770      	bx	lr

080118e6 <_ZN8touchgfx10ClickEventD0Ev>:
 80118e6:	b510      	push	{r4, lr}
 80118e8:	4604      	mov	r4, r0
 80118ea:	210c      	movs	r1, #12
 80118ec:	f00f fa95 	bl	8020e1a <_ZdlPvj>
 80118f0:	4620      	mov	r0, r4
 80118f2:	bd10      	pop	{r4, pc}

080118f4 <_ZN8touchgfx9DragEventD0Ev>:
 80118f4:	b510      	push	{r4, lr}
 80118f6:	4604      	mov	r4, r0
 80118f8:	2110      	movs	r1, #16
 80118fa:	f00f fa8e 	bl	8020e1a <_ZdlPvj>
 80118fe:	4620      	mov	r0, r4
 8011900:	bd10      	pop	{r4, pc}

08011902 <_ZN8touchgfx12GestureEventD0Ev>:
 8011902:	b510      	push	{r4, lr}
 8011904:	4604      	mov	r4, r0
 8011906:	210c      	movs	r1, #12
 8011908:	f00f fa87 	bl	8020e1a <_ZdlPvj>
 801190c:	4620      	mov	r0, r4
 801190e:	bd10      	pop	{r4, pc}

08011910 <_ZN8touchgfx6ScreenD0Ev>:
 8011910:	b510      	push	{r4, lr}
 8011912:	4604      	mov	r4, r0
 8011914:	213c      	movs	r1, #60	; 0x3c
 8011916:	f00f fa80 	bl	8020e1a <_ZdlPvj>
 801191a:	4620      	mov	r0, r4
 801191c:	bd10      	pop	{r4, pc}
	...

08011920 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011920:	b530      	push	{r4, r5, lr}
 8011922:	460d      	mov	r5, r1
 8011924:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011926:	b087      	sub	sp, #28
 8011928:	4604      	mov	r4, r0
 801192a:	b301      	cbz	r1, 801196e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801192c:	a801      	add	r0, sp, #4
 801192e:	f7ff fe3d 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011932:	892a      	ldrh	r2, [r5, #8]
 8011934:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011938:	7928      	ldrb	r0, [r5, #4]
 801193a:	1ad2      	subs	r2, r2, r3
 801193c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801193e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011942:	441a      	add	r2, r3
 8011944:	896b      	ldrh	r3, [r5, #10]
 8011946:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801194a:	f88d 0010 	strb.w	r0, [sp, #16]
 801194e:	1b5b      	subs	r3, r3, r5
 8011950:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8011952:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011954:	442b      	add	r3, r5
 8011956:	4d07      	ldr	r5, [pc, #28]	; (8011974 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011958:	f8ad 1012 	strh.w	r1, [sp, #18]
 801195c:	a903      	add	r1, sp, #12
 801195e:	9503      	str	r5, [sp, #12]
 8011960:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011964:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011968:	6803      	ldr	r3, [r0, #0]
 801196a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801196c:	4798      	blx	r3
 801196e:	b007      	add	sp, #28
 8011970:	bd30      	pop	{r4, r5, pc}
 8011972:	bf00      	nop
 8011974:	08023a20 	.word	0x08023a20

08011978 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801197c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801197e:	b08a      	sub	sp, #40	; 0x28
 8011980:	4604      	mov	r4, r0
 8011982:	460d      	mov	r5, r1
 8011984:	b113      	cbz	r3, 801198c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011986:	790b      	ldrb	r3, [r1, #4]
 8011988:	2b00      	cmp	r3, #0
 801198a:	d044      	beq.n	8011a16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801198c:	f104 0804 	add.w	r8, r4, #4
 8011990:	a803      	add	r0, sp, #12
 8011992:	4641      	mov	r1, r8
 8011994:	f7ff fe0a 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011998:	792b      	ldrb	r3, [r5, #4]
 801199a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801199e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80119a2:	b983      	cbnz	r3, 80119c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80119a4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80119a8:	892a      	ldrh	r2, [r5, #8]
 80119aa:	88e9      	ldrh	r1, [r5, #6]
 80119ac:	4640      	mov	r0, r8
 80119ae:	1b92      	subs	r2, r2, r6
 80119b0:	9301      	str	r3, [sp, #4]
 80119b2:	1bc9      	subs	r1, r1, r7
 80119b4:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80119b8:	b212      	sxth	r2, r2
 80119ba:	9300      	str	r3, [sp, #0]
 80119bc:	b209      	sxth	r1, r1
 80119be:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80119c2:	f7f8 ffc9 	bl	800a958 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80119c6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80119c8:	b329      	cbz	r1, 8011a16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80119ca:	a805      	add	r0, sp, #20
 80119cc:	f7ff fdee 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80119d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80119d4:	792b      	ldrb	r3, [r5, #4]
 80119d6:	a907      	add	r1, sp, #28
 80119d8:	1abf      	subs	r7, r7, r2
 80119da:	88ea      	ldrh	r2, [r5, #6]
 80119dc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80119de:	4417      	add	r7, r2
 80119e0:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80119e2:	f88d 3020 	strb.w	r3, [sp, #32]
 80119e6:	4417      	add	r7, r2
 80119e8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80119ec:	1ab6      	subs	r6, r6, r2
 80119ee:	892a      	ldrh	r2, [r5, #8]
 80119f0:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80119f4:	4416      	add	r6, r2
 80119f6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80119f8:	4416      	add	r6, r2
 80119fa:	4a08      	ldr	r2, [pc, #32]	; (8011a1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80119fc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8011a00:	2600      	movs	r6, #0
 8011a02:	9207      	str	r2, [sp, #28]
 8011a04:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8011a08:	6803      	ldr	r3, [r0, #0]
 8011a0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011a0c:	4798      	blx	r3
 8011a0e:	792b      	ldrb	r3, [r5, #4]
 8011a10:	b10b      	cbz	r3, 8011a16 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011a12:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011a16:	b00a      	add	sp, #40	; 0x28
 8011a18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a1c:	080239f8 	.word	0x080239f8

08011a20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a24:	460c      	mov	r4, r1
 8011a26:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011a28:	b088      	sub	sp, #32
 8011a2a:	4605      	mov	r5, r0
 8011a2c:	2900      	cmp	r1, #0
 8011a2e:	d06d      	beq.n	8011b0c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011a30:	4668      	mov	r0, sp
 8011a32:	f7ff fdbb 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a36:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8011a38:	88e3      	ldrh	r3, [r4, #6]
 8011a3a:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011a3e:	440b      	add	r3, r1
 8011a40:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011a44:	b21b      	sxth	r3, r3
 8011a46:	4543      	cmp	r3, r8
 8011a48:	db31      	blt.n	8011aae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011a4a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011a4e:	44c4      	add	ip, r8
 8011a50:	fa0f fc8c 	sxth.w	ip, ip
 8011a54:	4563      	cmp	r3, ip
 8011a56:	da2a      	bge.n	8011aae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011a58:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8011a5a:	8926      	ldrh	r6, [r4, #8]
 8011a5c:	4416      	add	r6, r2
 8011a5e:	b236      	sxth	r6, r6
 8011a60:	42be      	cmp	r6, r7
 8011a62:	db24      	blt.n	8011aae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011a64:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011a68:	4438      	add	r0, r7
 8011a6a:	b200      	sxth	r0, r0
 8011a6c:	4286      	cmp	r6, r0
 8011a6e:	da1e      	bge.n	8011aae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011a70:	8963      	ldrh	r3, [r4, #10]
 8011a72:	4419      	add	r1, r3
 8011a74:	b209      	sxth	r1, r1
 8011a76:	4541      	cmp	r1, r8
 8011a78:	db08      	blt.n	8011a8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011a7a:	4561      	cmp	r1, ip
 8011a7c:	da06      	bge.n	8011a8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011a7e:	89a3      	ldrh	r3, [r4, #12]
 8011a80:	441a      	add	r2, r3
 8011a82:	b212      	sxth	r2, r2
 8011a84:	42ba      	cmp	r2, r7
 8011a86:	db01      	blt.n	8011a8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011a88:	4282      	cmp	r2, r0
 8011a8a:	db10      	blt.n	8011aae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011a8c:	4b21      	ldr	r3, [pc, #132]	; (8011b14 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011a8e:	a904      	add	r1, sp, #16
 8011a90:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011a92:	9304      	str	r3, [sp, #16]
 8011a94:	2302      	movs	r3, #2
 8011a96:	f88d 3014 	strb.w	r3, [sp, #20]
 8011a9a:	2300      	movs	r3, #0
 8011a9c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011aa0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011aa4:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011aa8:	6803      	ldr	r3, [r0, #0]
 8011aaa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011aac:	4798      	blx	r3
 8011aae:	1d29      	adds	r1, r5, #4
 8011ab0:	a802      	add	r0, sp, #8
 8011ab2:	f7ff fd7b 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ab6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011aba:	88e0      	ldrh	r0, [r4, #6]
 8011abc:	eba3 0808 	sub.w	r8, r3, r8
 8011ac0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011ac4:	7921      	ldrb	r1, [r4, #4]
 8011ac6:	fa1f f888 	uxth.w	r8, r8
 8011aca:	1bdf      	subs	r7, r3, r7
 8011acc:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8011ad0:	b2bb      	uxth	r3, r7
 8011ad2:	4440      	add	r0, r8
 8011ad4:	8922      	ldrh	r2, [r4, #8]
 8011ad6:	8967      	ldrh	r7, [r4, #10]
 8011ad8:	4460      	add	r0, ip
 8011ada:	89a4      	ldrh	r4, [r4, #12]
 8011adc:	441a      	add	r2, r3
 8011ade:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8011ae0:	44b8      	add	r8, r7
 8011ae2:	4423      	add	r3, r4
 8011ae4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011ae8:	4432      	add	r2, r6
 8011aea:	44e0      	add	r8, ip
 8011aec:	4433      	add	r3, r6
 8011aee:	4c0a      	ldr	r4, [pc, #40]	; (8011b18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011af0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011af2:	f88d 1014 	strb.w	r1, [sp, #20]
 8011af6:	a904      	add	r1, sp, #16
 8011af8:	9404      	str	r4, [sp, #16]
 8011afa:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011afe:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011b02:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011b06:	6803      	ldr	r3, [r0, #0]
 8011b08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011b0a:	4798      	blx	r3
 8011b0c:	b008      	add	sp, #32
 8011b0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b12:	bf00      	nop
 8011b14:	080239f8 	.word	0x080239f8
 8011b18:	08023a0c 	.word	0x08023a0c

08011b1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011b1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011b1e:	4604      	mov	r4, r0
 8011b20:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011b24:	3201      	adds	r2, #1
 8011b26:	d112      	bne.n	8011b4e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011b28:	2500      	movs	r5, #0
 8011b2a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011b2e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011b32:	6803      	ldr	r3, [r0, #0]
 8011b34:	9500      	str	r5, [sp, #0]
 8011b36:	466d      	mov	r5, sp
 8011b38:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011b3c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011b40:	4629      	mov	r1, r5
 8011b42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011b44:	4798      	blx	r3
 8011b46:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011b4a:	e884 0003 	stmia.w	r4, {r0, r1}
 8011b4e:	4620      	mov	r0, r4
 8011b50:	b003      	add	sp, #12
 8011b52:	bd30      	pop	{r4, r5, pc}

08011b54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011b54:	b513      	push	{r0, r1, r4, lr}
 8011b56:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011b5a:	4604      	mov	r4, r0
 8011b5c:	3301      	adds	r3, #1
 8011b5e:	d109      	bne.n	8011b74 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011b60:	4601      	mov	r1, r0
 8011b62:	4668      	mov	r0, sp
 8011b64:	f7ff fd22 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b68:	f8bd 3000 	ldrh.w	r3, [sp]
 8011b6c:	8423      	strh	r3, [r4, #32]
 8011b6e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011b72:	8463      	strh	r3, [r4, #34]	; 0x22
 8011b74:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011b78:	b002      	add	sp, #8
 8011b7a:	bd10      	pop	{r4, pc}

08011b7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011b7c:	b513      	push	{r0, r1, r4, lr}
 8011b7e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011b82:	4604      	mov	r4, r0
 8011b84:	3301      	adds	r3, #1
 8011b86:	d109      	bne.n	8011b9c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011b88:	4601      	mov	r1, r0
 8011b8a:	4668      	mov	r0, sp
 8011b8c:	f7ff fd0e 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b90:	f8bd 3000 	ldrh.w	r3, [sp]
 8011b94:	8423      	strh	r3, [r4, #32]
 8011b96:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011b9a:	8463      	strh	r3, [r4, #34]	; 0x22
 8011b9c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8011ba0:	b002      	add	sp, #8
 8011ba2:	bd10      	pop	{r4, pc}

08011ba4 <_ZN8touchgfx6ScreenC1Ev>:
 8011ba4:	b570      	push	{r4, r5, r6, lr}
 8011ba6:	4b17      	ldr	r3, [pc, #92]	; (8011c04 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011ba8:	4605      	mov	r5, r0
 8011baa:	4a17      	ldr	r2, [pc, #92]	; (8011c08 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011bac:	2101      	movs	r1, #1
 8011bae:	f845 3b04 	str.w	r3, [r5], #4
 8011bb2:	2300      	movs	r3, #0
 8011bb4:	6042      	str	r2, [r0, #4]
 8011bb6:	4604      	mov	r4, r0
 8011bb8:	8103      	strh	r3, [r0, #8]
 8011bba:	8143      	strh	r3, [r0, #10]
 8011bbc:	8183      	strh	r3, [r0, #12]
 8011bbe:	81c3      	strh	r3, [r0, #14]
 8011bc0:	8203      	strh	r3, [r0, #16]
 8011bc2:	8243      	strh	r3, [r0, #18]
 8011bc4:	8283      	strh	r3, [r0, #20]
 8011bc6:	82c3      	strh	r3, [r0, #22]
 8011bc8:	6203      	str	r3, [r0, #32]
 8011bca:	8483      	strh	r3, [r0, #36]	; 0x24
 8011bcc:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011bce:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011bd2:	6343      	str	r3, [r0, #52]	; 0x34
 8011bd4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011bd8:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8011bdc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011be0:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8011be4:	4b09      	ldr	r3, [pc, #36]	; (8011c0c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011be6:	4628      	mov	r0, r5
 8011be8:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011bec:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8011bee:	4a08      	ldr	r2, [pc, #32]	; (8011c10 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011bf0:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011bf4:	4798      	blx	r3
 8011bf6:	6863      	ldr	r3, [r4, #4]
 8011bf8:	4628      	mov	r0, r5
 8011bfa:	4631      	mov	r1, r6
 8011bfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011bfe:	4798      	blx	r3
 8011c00:	4620      	mov	r0, r4
 8011c02:	bd70      	pop	{r4, r5, r6, pc}
 8011c04:	08023a34 	.word	0x08023a34
 8011c08:	08023318 	.word	0x08023318
 8011c0c:	2400e41a 	.word	0x2400e41a
 8011c10:	2400e418 	.word	0x2400e418

08011c14 <_ZN8touchgfx6Screen4drawEv>:
 8011c14:	4b09      	ldr	r3, [pc, #36]	; (8011c3c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011c16:	b507      	push	{r0, r1, r2, lr}
 8011c18:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c1c:	2100      	movs	r1, #0
 8011c1e:	4b08      	ldr	r3, [pc, #32]	; (8011c40 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011c20:	9100      	str	r1, [sp, #0]
 8011c22:	4669      	mov	r1, sp
 8011c24:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011c28:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011c2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011c30:	6803      	ldr	r3, [r0, #0]
 8011c32:	689b      	ldr	r3, [r3, #8]
 8011c34:	4798      	blx	r3
 8011c36:	b003      	add	sp, #12
 8011c38:	f85d fb04 	ldr.w	pc, [sp], #4
 8011c3c:	2400e418 	.word	0x2400e418
 8011c40:	2400e41a 	.word	0x2400e41a

08011c44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c48:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011c4c:	b089      	sub	sp, #36	; 0x24
 8011c4e:	4680      	mov	r8, r0
 8011c50:	460c      	mov	r4, r1
 8011c52:	2b00      	cmp	r3, #0
 8011c54:	4615      	mov	r5, r2
 8011c56:	dd0e      	ble.n	8011c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011c58:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011c5c:	2b00      	cmp	r3, #0
 8011c5e:	dd0a      	ble.n	8011c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011c60:	4628      	mov	r0, r5
 8011c62:	f7ff ff5b 	bl	8011b1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011c66:	4621      	mov	r1, r4
 8011c68:	f7fe faad 	bl	80101c6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011c6c:	69eb      	ldr	r3, [r5, #28]
 8011c6e:	b928      	cbnz	r0, 8011c7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011c70:	461d      	mov	r5, r3
 8011c72:	2b00      	cmp	r3, #0
 8011c74:	d1f4      	bne.n	8011c60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011c76:	b009      	add	sp, #36	; 0x24
 8011c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c7c:	ae04      	add	r6, sp, #16
 8011c7e:	2b00      	cmp	r3, #0
 8011c80:	f000 80b5 	beq.w	8011dee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011c84:	682b      	ldr	r3, [r5, #0]
 8011c86:	4629      	mov	r1, r5
 8011c88:	a802      	add	r0, sp, #8
 8011c8a:	68db      	ldr	r3, [r3, #12]
 8011c8c:	4798      	blx	r3
 8011c8e:	4628      	mov	r0, r5
 8011c90:	f7ff ff60 	bl	8011b54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011c94:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011c98:	4407      	add	r7, r0
 8011c9a:	4628      	mov	r0, r5
 8011c9c:	f7ff ff6e 	bl	8011b7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011ca0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011ca4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011ca8:	b23f      	sxth	r7, r7
 8011caa:	4418      	add	r0, r3
 8011cac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011cb0:	4621      	mov	r1, r4
 8011cb2:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011cb6:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011cba:	4630      	mov	r0, r6
 8011cbc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011cc0:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011cc4:	f7f8 ff2a 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 8011cc8:	4628      	mov	r0, r5
 8011cca:	f7ff ff27 	bl	8011b1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011cce:	ab06      	add	r3, sp, #24
 8011cd0:	4602      	mov	r2, r0
 8011cd2:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011cd6:	e883 0003 	stmia.w	r3, {r0, r1}
 8011cda:	4611      	mov	r1, r2
 8011cdc:	4618      	mov	r0, r3
 8011cde:	f7f8 ff1d 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 8011ce2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011ce6:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011cea:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011cee:	4299      	cmp	r1, r3
 8011cf0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011cf4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011cf8:	d10b      	bne.n	8011d12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011cfa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011cfe:	4552      	cmp	r2, sl
 8011d00:	d107      	bne.n	8011d12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011d02:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011d06:	455a      	cmp	r2, fp
 8011d08:	d103      	bne.n	8011d12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011d0a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011d0e:	454a      	cmp	r2, r9
 8011d10:	d06d      	beq.n	8011dee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011d12:	f1bb 0f00 	cmp.w	fp, #0
 8011d16:	dd65      	ble.n	8011de4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011d18:	f1b9 0f00 	cmp.w	r9, #0
 8011d1c:	dd62      	ble.n	8011de4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011d1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011d22:	fa1f f08a 	uxth.w	r0, sl
 8011d26:	4552      	cmp	r2, sl
 8011d28:	9000      	str	r0, [sp, #0]
 8011d2a:	da12      	bge.n	8011d52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011d2c:	9301      	str	r3, [sp, #4]
 8011d2e:	9b00      	ldr	r3, [sp, #0]
 8011d30:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011d34:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011d38:	1a9a      	subs	r2, r3, r2
 8011d3a:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011d3e:	4631      	mov	r1, r6
 8011d40:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011d44:	4640      	mov	r0, r8
 8011d46:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011d4a:	69ea      	ldr	r2, [r5, #28]
 8011d4c:	f7ff ff7a 	bl	8011c44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011d50:	9b01      	ldr	r3, [sp, #4]
 8011d52:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011d56:	b29f      	uxth	r7, r3
 8011d58:	429a      	cmp	r2, r3
 8011d5a:	da0d      	bge.n	8011d78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011d5c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011d60:	1aba      	subs	r2, r7, r2
 8011d62:	f8ad a012 	strh.w	sl, [sp, #18]
 8011d66:	4631      	mov	r1, r6
 8011d68:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011d6c:	4640      	mov	r0, r8
 8011d6e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011d72:	69ea      	ldr	r2, [r5, #28]
 8011d74:	f7ff ff66 	bl	8011c44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011d78:	8822      	ldrh	r2, [r4, #0]
 8011d7a:	445f      	add	r7, fp
 8011d7c:	88a3      	ldrh	r3, [r4, #4]
 8011d7e:	b2bf      	uxth	r7, r7
 8011d80:	4413      	add	r3, r2
 8011d82:	b23a      	sxth	r2, r7
 8011d84:	b29b      	uxth	r3, r3
 8011d86:	b219      	sxth	r1, r3
 8011d88:	4291      	cmp	r1, r2
 8011d8a:	dd0d      	ble.n	8011da8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011d8c:	1bdb      	subs	r3, r3, r7
 8011d8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011d92:	f8ad a012 	strh.w	sl, [sp, #18]
 8011d96:	4631      	mov	r1, r6
 8011d98:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011d9c:	4640      	mov	r0, r8
 8011d9e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011da2:	69ea      	ldr	r2, [r5, #28]
 8011da4:	f7ff ff4e 	bl	8011c44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011da8:	88e2      	ldrh	r2, [r4, #6]
 8011daa:	8863      	ldrh	r3, [r4, #2]
 8011dac:	4413      	add	r3, r2
 8011dae:	9a00      	ldr	r2, [sp, #0]
 8011db0:	444a      	add	r2, r9
 8011db2:	b29b      	uxth	r3, r3
 8011db4:	fa1f f982 	uxth.w	r9, r2
 8011db8:	b219      	sxth	r1, r3
 8011dba:	fa0f f289 	sxth.w	r2, r9
 8011dbe:	428a      	cmp	r2, r1
 8011dc0:	da15      	bge.n	8011dee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011dc2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011dc6:	eba3 0309 	sub.w	r3, r3, r9
 8011dca:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011dce:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011dd2:	4631      	mov	r1, r6
 8011dd4:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011dd8:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011ddc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011de0:	69ea      	ldr	r2, [r5, #28]
 8011de2:	e001      	b.n	8011de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011de4:	69ea      	ldr	r2, [r5, #28]
 8011de6:	4621      	mov	r1, r4
 8011de8:	4640      	mov	r0, r8
 8011dea:	f7ff ff2b 	bl	8011c44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011dee:	4628      	mov	r0, r5
 8011df0:	f7ff fe94 	bl	8011b1c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011df4:	6861      	ldr	r1, [r4, #4]
 8011df6:	4602      	mov	r2, r0
 8011df8:	4633      	mov	r3, r6
 8011dfa:	6820      	ldr	r0, [r4, #0]
 8011dfc:	c303      	stmia	r3!, {r0, r1}
 8011dfe:	4611      	mov	r1, r2
 8011e00:	4630      	mov	r0, r6
 8011e02:	f7f8 fe8b 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 8011e06:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011e0a:	2b00      	cmp	r3, #0
 8011e0c:	f77f af33 	ble.w	8011c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011e10:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011e14:	2b00      	cmp	r3, #0
 8011e16:	f77f af2e 	ble.w	8011c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011e1a:	4628      	mov	r0, r5
 8011e1c:	f7ff fe9a 	bl	8011b54 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011e20:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011e24:	1a18      	subs	r0, r3, r0
 8011e26:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011e2a:	4628      	mov	r0, r5
 8011e2c:	f7ff fea6 	bl	8011b7c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011e30:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011e34:	4631      	mov	r1, r6
 8011e36:	1a18      	subs	r0, r3, r0
 8011e38:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011e3c:	4628      	mov	r0, r5
 8011e3e:	682b      	ldr	r3, [r5, #0]
 8011e40:	689b      	ldr	r3, [r3, #8]
 8011e42:	4798      	blx	r3
 8011e44:	e717      	b.n	8011c76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011e46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011e46:	b570      	push	{r4, r5, r6, lr}
 8011e48:	1d06      	adds	r6, r0, #4
 8011e4a:	b086      	sub	sp, #24
 8011e4c:	460c      	mov	r4, r1
 8011e4e:	2300      	movs	r3, #0
 8011e50:	4631      	mov	r1, r6
 8011e52:	4605      	mov	r5, r0
 8011e54:	a802      	add	r0, sp, #8
 8011e56:	9301      	str	r3, [sp, #4]
 8011e58:	f7ff fba8 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011e60:	8822      	ldrh	r2, [r4, #0]
 8011e62:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011e66:	1ad2      	subs	r2, r2, r3
 8011e68:	8863      	ldrh	r3, [r4, #2]
 8011e6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011e6e:	1a5b      	subs	r3, r3, r1
 8011e70:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011e74:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011e78:	aa01      	add	r2, sp, #4
 8011e7a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011e7e:	4630      	mov	r0, r6
 8011e80:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011e84:	a904      	add	r1, sp, #16
 8011e86:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011e8a:	f7f8 ff1f 	bl	800accc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011e8e:	9a01      	ldr	r2, [sp, #4]
 8011e90:	b11a      	cbz	r2, 8011e9a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011e92:	4621      	mov	r1, r4
 8011e94:	4628      	mov	r0, r5
 8011e96:	f7ff fed5 	bl	8011c44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011e9a:	b006      	add	sp, #24
 8011e9c:	bd70      	pop	{r4, r5, r6, pc}

08011e9e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011e9e:	4602      	mov	r2, r0
 8011ea0:	b530      	push	{r4, r5, lr}
 8011ea2:	4604      	mov	r4, r0
 8011ea4:	b085      	sub	sp, #20
 8011ea6:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011eaa:	460d      	mov	r5, r1
 8011eac:	466b      	mov	r3, sp
 8011eae:	6851      	ldr	r1, [r2, #4]
 8011eb0:	c303      	stmia	r3!, {r0, r1}
 8011eb2:	4629      	mov	r1, r5
 8011eb4:	4668      	mov	r0, sp
 8011eb6:	f7f8 fe31 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 8011eba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011ebe:	b12b      	cbz	r3, 8011ecc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011ec0:	4669      	mov	r1, sp
 8011ec2:	4620      	mov	r0, r4
 8011ec4:	f7ff ffbf 	bl	8011e46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011ec8:	b005      	add	sp, #20
 8011eca:	bd30      	pop	{r4, r5, pc}
 8011ecc:	3404      	adds	r4, #4
 8011ece:	a802      	add	r0, sp, #8
 8011ed0:	4621      	mov	r1, r4
 8011ed2:	f7ff fb6b 	bl	80115ac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ed6:	f8bd 3000 	ldrh.w	r3, [sp]
 8011eda:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011ede:	4669      	mov	r1, sp
 8011ee0:	4620      	mov	r0, r4
 8011ee2:	1a9b      	subs	r3, r3, r2
 8011ee4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011ee8:	f8ad 3000 	strh.w	r3, [sp]
 8011eec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011ef0:	1a9b      	subs	r3, r3, r2
 8011ef2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011ef6:	f7f8 feb0 	bl	800ac5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011efa:	e7e5      	b.n	8011ec8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011efc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011efc:	460b      	mov	r3, r1
 8011efe:	680a      	ldr	r2, [r1, #0]
 8011f00:	1d01      	adds	r1, r0, #4
 8011f02:	6992      	ldr	r2, [r2, #24]
 8011f04:	4618      	mov	r0, r3
 8011f06:	4710      	bx	r2

08011f08 <_ZN8touchgfx12TextProviderC1Ev>:
 8011f08:	b538      	push	{r3, r4, r5, lr}
 8011f0a:	2500      	movs	r5, #0
 8011f0c:	2302      	movs	r3, #2
 8011f0e:	4604      	mov	r4, r0
 8011f10:	220e      	movs	r2, #14
 8011f12:	7403      	strb	r3, [r0, #16]
 8011f14:	4629      	mov	r1, r5
 8011f16:	6145      	str	r5, [r0, #20]
 8011f18:	7605      	strb	r5, [r0, #24]
 8011f1a:	83c5      	strh	r5, [r0, #30]
 8011f1c:	8405      	strh	r5, [r0, #32]
 8011f1e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8011f20:	8705      	strh	r5, [r0, #56]	; 0x38
 8011f22:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8011f24:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8011f28:	e9c0 5500 	strd	r5, r5, [r0]
 8011f2c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8011f30:	304c      	adds	r0, #76	; 0x4c
 8011f32:	f00f f9a6 	bl	8021282 <memset>
 8011f36:	2301      	movs	r3, #1
 8011f38:	4620      	mov	r0, r4
 8011f3a:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8011f3e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011f42:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8011f46:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8011f4a:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8011f4e:	f7f1 fae3 	bl	8003518 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011f52:	4620      	mov	r0, r4
 8011f54:	bd38      	pop	{r3, r4, r5, pc}

08011f56 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8011f56:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011f58:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011f5c:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8011f5e:	fab0 f080 	clz	r0, r0
 8011f62:	0940      	lsrs	r0, r0, #5
 8011f64:	4770      	bx	lr

08011f66 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011f66:	b530      	push	{r4, r5, lr}
 8011f68:	2500      	movs	r5, #0
 8011f6a:	2401      	movs	r4, #1
 8011f6c:	6843      	ldr	r3, [r0, #4]
 8011f6e:	b913      	cbnz	r3, 8011f76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011f70:	6803      	ldr	r3, [r0, #0]
 8011f72:	b313      	cbz	r3, 8011fba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011f74:	6043      	str	r3, [r0, #4]
 8011f76:	7e03      	ldrb	r3, [r0, #24]
 8011f78:	b143      	cbz	r3, 8011f8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011f7a:	6943      	ldr	r3, [r0, #20]
 8011f7c:	b12b      	cbz	r3, 8011f8a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011f7e:	881a      	ldrh	r2, [r3, #0]
 8011f80:	b11a      	cbz	r2, 8011f8a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011f82:	1c9a      	adds	r2, r3, #2
 8011f84:	6142      	str	r2, [r0, #20]
 8011f86:	8818      	ldrh	r0, [r3, #0]
 8011f88:	bd30      	pop	{r4, r5, pc}
 8011f8a:	7605      	strb	r5, [r0, #24]
 8011f8c:	6843      	ldr	r3, [r0, #4]
 8011f8e:	8819      	ldrh	r1, [r3, #0]
 8011f90:	b199      	cbz	r1, 8011fba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011f92:	1c9a      	adds	r2, r3, #2
 8011f94:	2902      	cmp	r1, #2
 8011f96:	6042      	str	r2, [r0, #4]
 8011f98:	d1f5      	bne.n	8011f86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011f9a:	7c03      	ldrb	r3, [r0, #16]
 8011f9c:	2b01      	cmp	r3, #1
 8011f9e:	d8e5      	bhi.n	8011f6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011fa0:	1c5a      	adds	r2, r3, #1
 8011fa2:	3302      	adds	r3, #2
 8011fa4:	7402      	strb	r2, [r0, #16]
 8011fa6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011faa:	6143      	str	r3, [r0, #20]
 8011fac:	2b00      	cmp	r3, #0
 8011fae:	d0dd      	beq.n	8011f6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011fb0:	881b      	ldrh	r3, [r3, #0]
 8011fb2:	2b00      	cmp	r3, #0
 8011fb4:	d0da      	beq.n	8011f6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011fb6:	7604      	strb	r4, [r0, #24]
 8011fb8:	e7d8      	b.n	8011f6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011fba:	2000      	movs	r0, #0
 8011fbc:	e7e4      	b.n	8011f88 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011fbe:	6001      	str	r1, [r0, #0]
 8011fc0:	2100      	movs	r1, #0
 8011fc2:	b430      	push	{r4, r5}
 8011fc4:	6041      	str	r1, [r0, #4]
 8011fc6:	6815      	ldr	r5, [r2, #0]
 8011fc8:	6085      	str	r5, [r0, #8]
 8011fca:	6852      	ldr	r2, [r2, #4]
 8011fcc:	6443      	str	r3, [r0, #68]	; 0x44
 8011fce:	9b02      	ldr	r3, [sp, #8]
 8011fd0:	60c2      	str	r2, [r0, #12]
 8011fd2:	7401      	strb	r1, [r0, #16]
 8011fd4:	6141      	str	r1, [r0, #20]
 8011fd6:	7601      	strb	r1, [r0, #24]
 8011fd8:	8701      	strh	r1, [r0, #56]	; 0x38
 8011fda:	8401      	strh	r1, [r0, #32]
 8011fdc:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8011fe0:	6483      	str	r3, [r0, #72]	; 0x48
 8011fe2:	bc30      	pop	{r4, r5}
 8011fe4:	f7f1 ba98 	b.w	8003518 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011fe8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8011fe8:	b408      	push	{r3}
 8011fea:	b510      	push	{r4, lr}
 8011fec:	b085      	sub	sp, #20
 8011fee:	ac07      	add	r4, sp, #28
 8011ff0:	f854 3b04 	ldr.w	r3, [r4], #4
 8011ff4:	9300      	str	r3, [sp, #0]
 8011ff6:	4613      	mov	r3, r2
 8011ff8:	4622      	mov	r2, r4
 8011ffa:	9403      	str	r4, [sp, #12]
 8011ffc:	f7ff ffdf 	bl	8011fbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012000:	b005      	add	sp, #20
 8012002:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012006:	b001      	add	sp, #4
 8012008:	4770      	bx	lr

0801200a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801200a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801200c:	4605      	mov	r5, r0
 801200e:	4608      	mov	r0, r1
 8012010:	b1f1      	cbz	r1, 8012050 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8012012:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012016:	460b      	mov	r3, r1
 8012018:	f101 0708 	add.w	r7, r1, #8
 801201c:	4622      	mov	r2, r4
 801201e:	6818      	ldr	r0, [r3, #0]
 8012020:	3308      	adds	r3, #8
 8012022:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8012026:	4626      	mov	r6, r4
 8012028:	42bb      	cmp	r3, r7
 801202a:	c603      	stmia	r6!, {r0, r1}
 801202c:	4634      	mov	r4, r6
 801202e:	d1f6      	bne.n	801201e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012030:	6818      	ldr	r0, [r3, #0]
 8012032:	6030      	str	r0, [r6, #0]
 8012034:	4610      	mov	r0, r2
 8012036:	889b      	ldrh	r3, [r3, #4]
 8012038:	80b3      	strh	r3, [r6, #4]
 801203a:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801203e:	015b      	lsls	r3, r3, #5
 8012040:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012044:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012048:	430b      	orrs	r3, r1
 801204a:	425b      	negs	r3, r3
 801204c:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012050:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012052 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012052:	b538      	push	{r3, r4, r5, lr}
 8012054:	460c      	mov	r4, r1
 8012056:	6811      	ldr	r1, [r2, #0]
 8012058:	4610      	mov	r0, r2
 801205a:	68cd      	ldr	r5, [r1, #12]
 801205c:	4619      	mov	r1, r3
 801205e:	47a8      	blx	r5
 8012060:	2800      	cmp	r0, #0
 8012062:	bf08      	it	eq
 8012064:	4620      	moveq	r0, r4
 8012066:	bd38      	pop	{r3, r4, r5, pc}

08012068 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801206a:	4604      	mov	r4, r0
 801206c:	4615      	mov	r5, r2
 801206e:	4608      	mov	r0, r1
 8012070:	b93a      	cbnz	r2, 8012082 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012072:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012076:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801207a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801207e:	4628      	mov	r0, r5
 8012080:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012082:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012086:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801208a:	8893      	ldrh	r3, [r2, #4]
 801208c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012090:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012094:	79ee      	ldrb	r6, [r5, #7]
 8012096:	4316      	orrs	r6, r2
 8012098:	19da      	adds	r2, r3, r7
 801209a:	b291      	uxth	r1, r2
 801209c:	b2b7      	uxth	r7, r6
 801209e:	291d      	cmp	r1, #29
 80120a0:	d87b      	bhi.n	801219a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80120a2:	2201      	movs	r2, #1
 80120a4:	10f6      	asrs	r6, r6, #3
 80120a6:	408a      	lsls	r2, r1
 80120a8:	4974      	ldr	r1, [pc, #464]	; (801227c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80120aa:	420a      	tst	r2, r1
 80120ac:	d12e      	bne.n	801210c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80120ae:	f412 7f60 	tst.w	r2, #896	; 0x380
 80120b2:	d072      	beq.n	801219a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 80120b4:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80120b8:	462b      	mov	r3, r5
 80120ba:	f105 0e08 	add.w	lr, r5, #8
 80120be:	4615      	mov	r5, r2
 80120c0:	6818      	ldr	r0, [r3, #0]
 80120c2:	3308      	adds	r3, #8
 80120c4:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80120c8:	4694      	mov	ip, r2
 80120ca:	4573      	cmp	r3, lr
 80120cc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80120d0:	4662      	mov	r2, ip
 80120d2:	d1f5      	bne.n	80120c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 80120d4:	6818      	ldr	r0, [r3, #0]
 80120d6:	f8cc 0000 	str.w	r0, [ip]
 80120da:	889b      	ldrh	r3, [r3, #4]
 80120dc:	f8ac 3004 	strh.w	r3, [ip, #4]
 80120e0:	b2b3      	uxth	r3, r6
 80120e2:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80120e6:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80120ea:	1aca      	subs	r2, r1, r3
 80120ec:	1bcf      	subs	r7, r1, r7
 80120ee:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80120f2:	b292      	uxth	r2, r2
 80120f4:	1afb      	subs	r3, r7, r3
 80120f6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80120fa:	10d2      	asrs	r2, r2, #3
 80120fc:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012100:	4302      	orrs	r2, r0
 8012102:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012106:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801210a:	e7b8      	b.n	801207e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801210c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801210e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012112:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012114:	f640 6333 	movw	r3, #3635	; 0xe33
 8012118:	4299      	cmp	r1, r3
 801211a:	d110      	bne.n	801213e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801211c:	6803      	ldr	r3, [r0, #0]
 801211e:	68db      	ldr	r3, [r3, #12]
 8012120:	4798      	blx	r3
 8012122:	7b41      	ldrb	r1, [r0, #13]
 8012124:	00cb      	lsls	r3, r1, #3
 8012126:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801212a:	7a03      	ldrb	r3, [r0, #8]
 801212c:	0648      	lsls	r0, r1, #25
 801212e:	ea43 0302 	orr.w	r3, r3, r2
 8012132:	bf44      	itt	mi
 8012134:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012138:	b21b      	sxthmi	r3, r3
 801213a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801213e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012142:	462a      	mov	r2, r5
 8012144:	f105 0c08 	add.w	ip, r5, #8
 8012148:	443b      	add	r3, r7
 801214a:	4433      	add	r3, r6
 801214c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012150:	b29b      	uxth	r3, r3
 8012152:	4635      	mov	r5, r6
 8012154:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012158:	6810      	ldr	r0, [r2, #0]
 801215a:	3208      	adds	r2, #8
 801215c:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8012160:	4637      	mov	r7, r6
 8012162:	4562      	cmp	r2, ip
 8012164:	c703      	stmia	r7!, {r0, r1}
 8012166:	463e      	mov	r6, r7
 8012168:	d1f6      	bne.n	8012158 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801216a:	6810      	ldr	r0, [r2, #0]
 801216c:	6038      	str	r0, [r7, #0]
 801216e:	8892      	ldrh	r2, [r2, #4]
 8012170:	80ba      	strh	r2, [r7, #4]
 8012172:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012176:	10db      	asrs	r3, r3, #3
 8012178:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801217c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012180:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012184:	4313      	orrs	r3, r2
 8012186:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801218a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801218e:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012192:	1a9b      	subs	r3, r3, r2
 8012194:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012198:	e771      	b.n	801207e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801219a:	f023 0204 	bic.w	r2, r3, #4
 801219e:	f640 611b 	movw	r1, #3611	; 0xe1b
 80121a2:	428a      	cmp	r2, r1
 80121a4:	d003      	beq.n	80121ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 80121a6:	f640 621d 	movw	r2, #3613	; 0xe1d
 80121aa:	4293      	cmp	r3, r2
 80121ac:	d120      	bne.n	80121f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 80121ae:	3b01      	subs	r3, #1
 80121b0:	4602      	mov	r2, r0
 80121b2:	4629      	mov	r1, r5
 80121b4:	4620      	mov	r0, r4
 80121b6:	b29b      	uxth	r3, r3
 80121b8:	f7ff ff4b 	bl	8012052 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80121bc:	7b41      	ldrb	r1, [r0, #13]
 80121be:	00cb      	lsls	r3, r1, #3
 80121c0:	0649      	lsls	r1, r1, #25
 80121c2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80121c6:	7a03      	ldrb	r3, [r0, #8]
 80121c8:	ea43 0302 	orr.w	r3, r3, r2
 80121cc:	bf44      	itt	mi
 80121ce:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80121d2:	b21b      	sxthmi	r3, r3
 80121d4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80121d8:	7b6b      	ldrb	r3, [r5, #13]
 80121da:	7aaa      	ldrb	r2, [r5, #10]
 80121dc:	005b      	lsls	r3, r3, #1
 80121de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80121e2:	4313      	orrs	r3, r2
 80121e4:	115a      	asrs	r2, r3, #5
 80121e6:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80121ea:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80121ee:	e035      	b.n	801225c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80121f0:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80121f4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80121f8:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80121fc:	7a2a      	ldrb	r2, [r5, #8]
 80121fe:	ea42 0201 	orr.w	r2, r2, r1
 8012202:	f640 6109 	movw	r1, #3593	; 0xe09
 8012206:	bf1c      	itt	ne
 8012208:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801220c:	b212      	sxthne	r2, r2
 801220e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012212:	f023 0210 	bic.w	r2, r3, #16
 8012216:	428a      	cmp	r2, r1
 8012218:	d003      	beq.n	8012222 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 801221a:	f640 6213 	movw	r2, #3603	; 0xe13
 801221e:	4293      	cmp	r3, r2
 8012220:	d129      	bne.n	8012276 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012222:	7b6e      	ldrb	r6, [r5, #13]
 8012224:	4629      	mov	r1, r5
 8012226:	0076      	lsls	r6, r6, #1
 8012228:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801222c:	7aae      	ldrb	r6, [r5, #10]
 801222e:	4316      	orrs	r6, r2
 8012230:	f640 6213 	movw	r2, #3603	; 0xe13
 8012234:	4293      	cmp	r3, r2
 8012236:	4602      	mov	r2, r0
 8012238:	4620      	mov	r0, r4
 801223a:	bf16      	itet	ne
 801223c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012240:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012244:	b29b      	uxthne	r3, r3
 8012246:	f7ff ff04 	bl	8012052 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801224a:	7b43      	ldrb	r3, [r0, #13]
 801224c:	7a82      	ldrb	r2, [r0, #10]
 801224e:	005b      	lsls	r3, r3, #1
 8012250:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012254:	4313      	orrs	r3, r2
 8012256:	1af6      	subs	r6, r6, r3
 8012258:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801225c:	7b69      	ldrb	r1, [r5, #13]
 801225e:	00cb      	lsls	r3, r1, #3
 8012260:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012264:	7a2b      	ldrb	r3, [r5, #8]
 8012266:	4313      	orrs	r3, r2
 8012268:	064a      	lsls	r2, r1, #25
 801226a:	bf44      	itt	mi
 801226c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012270:	b21b      	sxthmi	r3, r3
 8012272:	1bdb      	subs	r3, r3, r7
 8012274:	e747      	b.n	8012106 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012276:	2300      	movs	r3, #0
 8012278:	e7b7      	b.n	80121ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 801227a:	bf00      	nop
 801227c:	3fc00079 	.word	0x3fc00079

08012280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012280:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012284:	4604      	mov	r4, r0
 8012286:	b942      	cbnz	r2, 801229a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012288:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801228c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012290:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012294:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012298:	e047      	b.n	801232a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801229a:	7b51      	ldrb	r1, [r2, #13]
 801229c:	8893      	ldrh	r3, [r2, #4]
 801229e:	010d      	lsls	r5, r1, #4
 80122a0:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80122a4:	79d5      	ldrb	r5, [r2, #7]
 80122a6:	4305      	orrs	r5, r0
 80122a8:	2d04      	cmp	r5, #4
 80122aa:	bfcc      	ite	gt
 80122ac:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80122b0:	f04f 0e01 	movle.w	lr, #1
 80122b4:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80122b8:	f200 80ab 	bhi.w	8012412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80122bc:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80122c0:	4283      	cmp	r3, r0
 80122c2:	d216      	bcs.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80122c4:	f240 605b 	movw	r0, #1627	; 0x65b
 80122c8:	4283      	cmp	r3, r0
 80122ca:	d859      	bhi.n	8012380 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80122cc:	f240 6057 	movw	r0, #1623	; 0x657
 80122d0:	4283      	cmp	r3, r0
 80122d2:	d20e      	bcs.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80122d4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80122d8:	d24a      	bcs.n	8012370 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80122da:	f240 604e 	movw	r0, #1614	; 0x64e
 80122de:	4283      	cmp	r3, r0
 80122e0:	d207      	bcs.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80122e2:	f240 601a 	movw	r0, #1562	; 0x61a
 80122e6:	4283      	cmp	r3, r0
 80122e8:	d02a      	beq.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80122ea:	d821      	bhi.n	8012330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80122ec:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80122f0:	d35b      	bcc.n	80123aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80122f2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80122f6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80122fa:	f040 80d0 	bne.w	801249e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80122fe:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012302:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012306:	f040 80ca 	bne.w	801249e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801230a:	00cb      	lsls	r3, r1, #3
 801230c:	0649      	lsls	r1, r1, #25
 801230e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012312:	7a13      	ldrb	r3, [r2, #8]
 8012314:	ea43 0300 	orr.w	r3, r3, r0
 8012318:	bf44      	itt	mi
 801231a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801231e:	b21b      	sxthmi	r3, r3
 8012320:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012324:	1b5d      	subs	r5, r3, r5
 8012326:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801232a:	4610      	mov	r0, r2
 801232c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012330:	f240 604b 	movw	r0, #1611	; 0x64b
 8012334:	4283      	cmp	r3, r0
 8012336:	d338      	bcc.n	80123aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012338:	f240 604c 	movw	r0, #1612	; 0x64c
 801233c:	4283      	cmp	r3, r0
 801233e:	d9d8      	bls.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012340:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012344:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012348:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801234c:	f040 80f3 	bne.w	8012536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8012350:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012354:	f040 80ef 	bne.w	8012536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8012358:	00cb      	lsls	r3, r1, #3
 801235a:	064e      	lsls	r6, r1, #25
 801235c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012360:	7a13      	ldrb	r3, [r2, #8]
 8012362:	ea43 0300 	orr.w	r3, r3, r0
 8012366:	bf44      	itt	mi
 8012368:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801236c:	b21b      	sxthmi	r3, r3
 801236e:	e7d9      	b.n	8012324 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012370:	f240 6054 	movw	r0, #1620	; 0x654
 8012374:	4283      	cmp	r3, r0
 8012376:	d8e3      	bhi.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012378:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801237c:	d9e0      	bls.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801237e:	e7b8      	b.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012380:	f240 6074 	movw	r0, #1652	; 0x674
 8012384:	4283      	cmp	r3, r0
 8012386:	d0b4      	beq.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012388:	d82d      	bhi.n	80123e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801238a:	f240 605e 	movw	r0, #1630	; 0x65e
 801238e:	4283      	cmp	r3, r0
 8012390:	d804      	bhi.n	801239c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012392:	f240 605d 	movw	r0, #1629	; 0x65d
 8012396:	4283      	cmp	r3, r0
 8012398:	d3d2      	bcc.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801239a:	e7aa      	b.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801239c:	f240 605f 	movw	r0, #1631	; 0x65f
 80123a0:	4283      	cmp	r3, r0
 80123a2:	d0cd      	beq.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80123a4:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80123a8:	d0a3      	beq.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80123aa:	00cb      	lsls	r3, r1, #3
 80123ac:	0649      	lsls	r1, r1, #25
 80123ae:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80123b2:	7a13      	ldrb	r3, [r2, #8]
 80123b4:	ea43 0300 	orr.w	r3, r3, r0
 80123b8:	bf44      	itt	mi
 80123ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80123be:	b21b      	sxthmi	r3, r3
 80123c0:	1b5d      	subs	r5, r3, r5
 80123c2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80123c6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80123ca:	7b53      	ldrb	r3, [r2, #13]
 80123cc:	015b      	lsls	r3, r3, #5
 80123ce:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80123d2:	7993      	ldrb	r3, [r2, #6]
 80123d4:	430b      	orrs	r3, r1
 80123d6:	2105      	movs	r1, #5
 80123d8:	005b      	lsls	r3, r3, #1
 80123da:	fb93 f3f1 	sdiv	r3, r3, r1
 80123de:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80123e2:	440b      	add	r3, r1
 80123e4:	e756      	b.n	8012294 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80123e6:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80123ea:	4283      	cmp	r3, r0
 80123ec:	d809      	bhi.n	8012402 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80123ee:	f240 60df 	movw	r0, #1759	; 0x6df
 80123f2:	4283      	cmp	r3, r0
 80123f4:	f4bf af7d 	bcs.w	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80123f8:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80123fc:	2b05      	cmp	r3, #5
 80123fe:	d8d4      	bhi.n	80123aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012400:	e777      	b.n	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012402:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012406:	4283      	cmp	r3, r0
 8012408:	d09a      	beq.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801240a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801240e:	4283      	cmp	r3, r0
 8012410:	e7ca      	b.n	80123a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012412:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012416:	d22b      	bcs.n	8012470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012418:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801241c:	4283      	cmp	r3, r0
 801241e:	d28f      	bcs.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012420:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012424:	4283      	cmp	r3, r0
 8012426:	d816      	bhi.n	8012456 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012428:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801242c:	4283      	cmp	r3, r0
 801242e:	f4bf af60 	bcs.w	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012432:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012436:	4283      	cmp	r3, r0
 8012438:	d80a      	bhi.n	8012450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801243a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801243e:	4283      	cmp	r3, r0
 8012440:	f4bf af57 	bcs.w	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012444:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012448:	4283      	cmp	r3, r0
 801244a:	f43f af79 	beq.w	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801244e:	e7ac      	b.n	80123aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012450:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012454:	e7f8      	b.n	8012448 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012456:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801245a:	4283      	cmp	r3, r0
 801245c:	d802      	bhi.n	8012464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801245e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012462:	e798      	b.n	8012396 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012464:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012468:	4283      	cmp	r3, r0
 801246a:	f47f af42 	bne.w	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801246e:	e767      	b.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012470:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012474:	4283      	cmp	r3, r0
 8012476:	f43f af63 	beq.w	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801247a:	d802      	bhi.n	8012482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801247c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012480:	e7f2      	b.n	8012468 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012482:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012486:	4283      	cmp	r3, r0
 8012488:	d805      	bhi.n	8012496 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801248a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801248e:	4283      	cmp	r3, r0
 8012490:	f4ff af2f 	bcc.w	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012494:	e754      	b.n	8012340 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012496:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801249a:	4283      	cmp	r3, r0
 801249c:	e7af      	b.n	80123fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801249e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80124a2:	4617      	mov	r7, r2
 80124a4:	f102 0808 	add.w	r8, r2, #8
 80124a8:	4666      	mov	r6, ip
 80124aa:	6838      	ldr	r0, [r7, #0]
 80124ac:	3708      	adds	r7, #8
 80124ae:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80124b2:	46e6      	mov	lr, ip
 80124b4:	4547      	cmp	r7, r8
 80124b6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80124ba:	46f4      	mov	ip, lr
 80124bc:	d1f5      	bne.n	80124aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80124be:	6838      	ldr	r0, [r7, #0]
 80124c0:	f8ce 0000 	str.w	r0, [lr]
 80124c4:	88b9      	ldrh	r1, [r7, #4]
 80124c6:	f8ae 1004 	strh.w	r1, [lr, #4]
 80124ca:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80124ce:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80124d2:	d009      	beq.n	80124e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 80124d4:	7b51      	ldrb	r1, [r2, #13]
 80124d6:	7992      	ldrb	r2, [r2, #6]
 80124d8:	0149      	lsls	r1, r1, #5
 80124da:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80124de:	4311      	orrs	r1, r2
 80124e0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80124e4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80124e8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80124ec:	b2ad      	uxth	r5, r5
 80124ee:	d00d      	beq.n	801250c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 80124f0:	442b      	add	r3, r5
 80124f2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80124f6:	b29b      	uxth	r3, r3
 80124f8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80124fc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012500:	10db      	asrs	r3, r3, #3
 8012502:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012506:	4313      	orrs	r3, r2
 8012508:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801250c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012510:	00cb      	lsls	r3, r1, #3
 8012512:	064f      	lsls	r7, r1, #25
 8012514:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012518:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801251c:	ea43 0302 	orr.w	r3, r3, r2
 8012520:	bf44      	itt	mi
 8012522:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012526:	b21b      	sxthmi	r3, r3
 8012528:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801252c:	1b5b      	subs	r3, r3, r5
 801252e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012532:	4632      	mov	r2, r6
 8012534:	e6f9      	b.n	801232a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012536:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801253a:	4617      	mov	r7, r2
 801253c:	f102 0908 	add.w	r9, r2, #8
 8012540:	4666      	mov	r6, ip
 8012542:	6838      	ldr	r0, [r7, #0]
 8012544:	3708      	adds	r7, #8
 8012546:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801254a:	46e0      	mov	r8, ip
 801254c:	454f      	cmp	r7, r9
 801254e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012552:	46c4      	mov	ip, r8
 8012554:	d1f5      	bne.n	8012542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8012556:	6838      	ldr	r0, [r7, #0]
 8012558:	f8c8 0000 	str.w	r0, [r8]
 801255c:	88b9      	ldrh	r1, [r7, #4]
 801255e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012562:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012566:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801256a:	d009      	beq.n	8012580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 801256c:	7b51      	ldrb	r1, [r2, #13]
 801256e:	7992      	ldrb	r2, [r2, #6]
 8012570:	0149      	lsls	r1, r1, #5
 8012572:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012576:	4311      	orrs	r1, r2
 8012578:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801257c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012580:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012584:	d00e      	beq.n	80125a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8012586:	eba3 030e 	sub.w	r3, r3, lr
 801258a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801258e:	b29b      	uxth	r3, r3
 8012590:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012594:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012598:	10db      	asrs	r3, r3, #3
 801259a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801259e:	4313      	orrs	r3, r2
 80125a0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80125a4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80125a8:	00cb      	lsls	r3, r1, #3
 80125aa:	0648      	lsls	r0, r1, #25
 80125ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80125b0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80125b4:	ea43 0302 	orr.w	r3, r3, r2
 80125b8:	bf44      	itt	mi
 80125ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80125be:	b21b      	sxthmi	r3, r3
 80125c0:	1b5d      	subs	r5, r3, r5
 80125c2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80125c6:	e7b4      	b.n	8012532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

080125c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80125c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125cc:	461e      	mov	r6, r3
 80125ce:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80125d0:	4604      	mov	r4, r0
 80125d2:	4617      	mov	r7, r2
 80125d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80125d8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80125dc:	f7f0 ff5a 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80125e0:	4605      	mov	r5, r0
 80125e2:	b918      	cbnz	r0, 80125ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80125e4:	6030      	str	r0, [r6, #0]
 80125e6:	4628      	mov	r0, r5
 80125e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125ec:	683b      	ldr	r3, [r7, #0]
 80125ee:	4601      	mov	r1, r0
 80125f0:	4638      	mov	r0, r7
 80125f2:	68db      	ldr	r3, [r3, #12]
 80125f4:	4798      	blx	r3
 80125f6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80125fa:	4602      	mov	r2, r0
 80125fc:	6030      	str	r0, [r6, #0]
 80125fe:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012602:	d213      	bcs.n	801262c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012604:	4643      	mov	r3, r8
 8012606:	4639      	mov	r1, r7
 8012608:	4620      	mov	r0, r4
 801260a:	f7ff fe39 	bl	8012280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801260e:	6030      	str	r0, [r6, #0]
 8012610:	6833      	ldr	r3, [r6, #0]
 8012612:	b143      	cbz	r3, 8012626 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012614:	7b5a      	ldrb	r2, [r3, #13]
 8012616:	7a9b      	ldrb	r3, [r3, #10]
 8012618:	0052      	lsls	r2, r2, #1
 801261a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801261e:	4313      	orrs	r3, r2
 8012620:	bf0c      	ite	eq
 8012622:	2301      	moveq	r3, #1
 8012624:	2300      	movne	r3, #0
 8012626:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801262a:	e7dc      	b.n	80125e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801262c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012630:	b29b      	uxth	r3, r3
 8012632:	2b7f      	cmp	r3, #127	; 0x7f
 8012634:	d804      	bhi.n	8012640 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012636:	4639      	mov	r1, r7
 8012638:	4620      	mov	r0, r4
 801263a:	f7ff fd15 	bl	8012068 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801263e:	e7e6      	b.n	801260e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012640:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012644:	2b00      	cmp	r3, #0
 8012646:	d0e3      	beq.n	8012610 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012648:	f640 1302 	movw	r3, #2306	; 0x902
 801264c:	429d      	cmp	r5, r3
 801264e:	d1df      	bne.n	8012610 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012650:	4601      	mov	r1, r0
 8012652:	4620      	mov	r0, r4
 8012654:	f7ff fcd9 	bl	801200a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012658:	e7d9      	b.n	801260e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801265a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801265a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801265e:	461e      	mov	r6, r3
 8012660:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012662:	4604      	mov	r4, r0
 8012664:	4617      	mov	r7, r2
 8012666:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801266a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801266e:	f7f0 ff11 	bl	8003494 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012672:	4605      	mov	r5, r0
 8012674:	b918      	cbnz	r0, 801267e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8012676:	6030      	str	r0, [r6, #0]
 8012678:	4628      	mov	r0, r5
 801267a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801267e:	683b      	ldr	r3, [r7, #0]
 8012680:	4601      	mov	r1, r0
 8012682:	4638      	mov	r0, r7
 8012684:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012688:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801268c:	47c8      	blx	r9
 801268e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012692:	4602      	mov	r2, r0
 8012694:	6030      	str	r0, [r6, #0]
 8012696:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801269a:	d213      	bcs.n	80126c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801269c:	4643      	mov	r3, r8
 801269e:	4639      	mov	r1, r7
 80126a0:	4620      	mov	r0, r4
 80126a2:	f7ff fded 	bl	8012280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80126a6:	6030      	str	r0, [r6, #0]
 80126a8:	6833      	ldr	r3, [r6, #0]
 80126aa:	b143      	cbz	r3, 80126be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80126ac:	7b5a      	ldrb	r2, [r3, #13]
 80126ae:	7a9b      	ldrb	r3, [r3, #10]
 80126b0:	0052      	lsls	r2, r2, #1
 80126b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80126b6:	4313      	orrs	r3, r2
 80126b8:	bf0c      	ite	eq
 80126ba:	2301      	moveq	r3, #1
 80126bc:	2300      	movne	r3, #0
 80126be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80126c2:	e7d9      	b.n	8012678 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80126c4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80126c8:	b29b      	uxth	r3, r3
 80126ca:	2b7f      	cmp	r3, #127	; 0x7f
 80126cc:	d804      	bhi.n	80126d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80126ce:	4639      	mov	r1, r7
 80126d0:	4620      	mov	r0, r4
 80126d2:	f7ff fcc9 	bl	8012068 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80126d6:	e7e6      	b.n	80126a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80126d8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80126dc:	2b00      	cmp	r3, #0
 80126de:	d0e3      	beq.n	80126a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80126e0:	f640 1302 	movw	r3, #2306	; 0x902
 80126e4:	429d      	cmp	r5, r3
 80126e6:	d1df      	bne.n	80126a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80126e8:	4601      	mov	r1, r0
 80126ea:	4620      	mov	r0, r4
 80126ec:	f7ff fc8d 	bl	801200a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80126f0:	e7d9      	b.n	80126a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080126f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80126f2:	b510      	push	{r4, lr}
 80126f4:	4604      	mov	r4, r0
 80126f6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80126fa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80126fc:	b1e1      	cbz	r1, 8012738 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80126fe:	2b0a      	cmp	r3, #10
 8012700:	d02d      	beq.n	801275e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8012702:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8012704:	3901      	subs	r1, #1
 8012706:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801270a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801270c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8012710:	1c51      	adds	r1, r2, #1
 8012712:	b289      	uxth	r1, r1
 8012714:	2901      	cmp	r1, #1
 8012716:	bf8a      	itet	hi
 8012718:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801271c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801271e:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8012720:	1c5a      	adds	r2, r3, #1
 8012722:	8722      	strh	r2, [r4, #56]	; 0x38
 8012724:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012726:	4413      	add	r3, r2
 8012728:	b29b      	uxth	r3, r3
 801272a:	2b09      	cmp	r3, #9
 801272c:	bf88      	it	hi
 801272e:	3b0a      	subhi	r3, #10
 8012730:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012734:	8458      	strh	r0, [r3, #34]	; 0x22
 8012736:	e7de      	b.n	80126f6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012738:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801273a:	2b0a      	cmp	r3, #10
 801273c:	d00f      	beq.n	801275e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801273e:	4620      	mov	r0, r4
 8012740:	f7ff fc11 	bl	8011f66 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012744:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012746:	1c5a      	adds	r2, r3, #1
 8012748:	8722      	strh	r2, [r4, #56]	; 0x38
 801274a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801274c:	4413      	add	r3, r2
 801274e:	b29b      	uxth	r3, r3
 8012750:	2b09      	cmp	r3, #9
 8012752:	bf88      	it	hi
 8012754:	3b0a      	subhi	r3, #10
 8012756:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801275a:	8458      	strh	r0, [r3, #34]	; 0x22
 801275c:	e7ec      	b.n	8012738 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801275e:	bd10      	pop	{r4, pc}

08012760 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012760:	b538      	push	{r3, r4, r5, lr}
 8012762:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012764:	4604      	mov	r4, r0
 8012766:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801276a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801276c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801276e:	3a01      	subs	r2, #1
 8012770:	8702      	strh	r2, [r0, #56]	; 0x38
 8012772:	1c5a      	adds	r2, r3, #1
 8012774:	b292      	uxth	r2, r2
 8012776:	2a09      	cmp	r2, #9
 8012778:	bf8a      	itet	hi
 801277a:	3b09      	subhi	r3, #9
 801277c:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801277e:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8012780:	f7ff ffb7 	bl	80126f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012784:	8c23      	ldrh	r3, [r4, #32]
 8012786:	2b01      	cmp	r3, #1
 8012788:	bf9c      	itt	ls
 801278a:	3301      	addls	r3, #1
 801278c:	8423      	strhls	r3, [r4, #32]
 801278e:	8be3      	ldrh	r3, [r4, #30]
 8012790:	b90b      	cbnz	r3, 8012796 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012792:	2302      	movs	r3, #2
 8012794:	83e3      	strh	r3, [r4, #30]
 8012796:	8be3      	ldrh	r3, [r4, #30]
 8012798:	4628      	mov	r0, r5
 801279a:	3b01      	subs	r3, #1
 801279c:	b29b      	uxth	r3, r3
 801279e:	83e3      	strh	r3, [r4, #30]
 80127a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80127a4:	8365      	strh	r5, [r4, #26]
 80127a6:	bd38      	pop	{r3, r4, r5, pc}

080127a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80127a8:	428a      	cmp	r2, r1
 80127aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80127ae:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80127b0:	d932      	bls.n	8012818 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 80127b2:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80127b4:	1a54      	subs	r4, r2, r1
 80127b6:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80127ba:	19ee      	adds	r6, r5, r7
 80127bc:	fa1f fe84 	uxth.w	lr, r4
 80127c0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80127c4:	3e01      	subs	r6, #1
 80127c6:	b2b4      	uxth	r4, r6
 80127c8:	eba4 090e 	sub.w	r9, r4, lr
 80127cc:	fa1f f989 	uxth.w	r9, r9
 80127d0:	2c09      	cmp	r4, #9
 80127d2:	4626      	mov	r6, r4
 80127d4:	bf88      	it	hi
 80127d6:	f1a4 060a 	subhi.w	r6, r4, #10
 80127da:	f1bc 0f00 	cmp.w	ip, #0
 80127de:	f104 34ff 	add.w	r4, r4, #4294967295
 80127e2:	bf08      	it	eq
 80127e4:	f04f 0c02 	moveq.w	ip, #2
 80127e8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80127ec:	b2a4      	uxth	r4, r4
 80127ee:	f10c 3cff 	add.w	ip, ip, #4294967295
 80127f2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80127f6:	454c      	cmp	r4, r9
 80127f8:	fa1f fc8c 	uxth.w	ip, ip
 80127fc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012800:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8012804:	d1e4      	bne.n	80127d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012806:	eba5 050e 	sub.w	r5, r5, lr
 801280a:	eb0e 0408 	add.w	r4, lr, r8
 801280e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8012812:	8705      	strh	r5, [r0, #56]	; 0x38
 8012814:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8012818:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801281a:	250a      	movs	r5, #10
 801281c:	1a64      	subs	r4, r4, r1
 801281e:	4439      	add	r1, r7
 8012820:	b289      	uxth	r1, r1
 8012822:	8704      	strh	r4, [r0, #56]	; 0x38
 8012824:	2909      	cmp	r1, #9
 8012826:	bf88      	it	hi
 8012828:	390a      	subhi	r1, #10
 801282a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801282c:	b18a      	cbz	r2, 8012852 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 801282e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8012830:	3a01      	subs	r2, #1
 8012832:	3101      	adds	r1, #1
 8012834:	b292      	uxth	r2, r2
 8012836:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801283a:	8701      	strh	r1, [r0, #56]	; 0x38
 801283c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801283e:	b901      	cbnz	r1, 8012842 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8012840:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012842:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8012844:	3901      	subs	r1, #1
 8012846:	b289      	uxth	r1, r1
 8012848:	86c1      	strh	r1, [r0, #54]	; 0x36
 801284a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801284e:	844c      	strh	r4, [r1, #34]	; 0x22
 8012850:	e7ec      	b.n	801282c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 8012852:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012856:	f7ff bf4c 	b.w	80126f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801285a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801285a:	b570      	push	{r4, r5, r6, lr}
 801285c:	2500      	movs	r5, #0
 801285e:	4295      	cmp	r5, r2
 8012860:	d011      	beq.n	8012886 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012862:	8bc4      	ldrh	r4, [r0, #30]
 8012864:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012868:	4414      	add	r4, r2
 801286a:	3c01      	subs	r4, #1
 801286c:	1b64      	subs	r4, r4, r5
 801286e:	b2a4      	uxth	r4, r4
 8012870:	2c01      	cmp	r4, #1
 8012872:	bf88      	it	hi
 8012874:	3c02      	subhi	r4, #2
 8012876:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801287a:	8b64      	ldrh	r4, [r4, #26]
 801287c:	42b4      	cmp	r4, r6
 801287e:	d117      	bne.n	80128b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012880:	3501      	adds	r5, #1
 8012882:	b2ad      	uxth	r5, r5
 8012884:	e7eb      	b.n	801285e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012886:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801288a:	2400      	movs	r4, #0
 801288c:	4413      	add	r3, r2
 801288e:	b2a2      	uxth	r2, r4
 8012890:	429a      	cmp	r2, r3
 8012892:	da0f      	bge.n	80128b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012894:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8012896:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801289a:	3401      	adds	r4, #1
 801289c:	4432      	add	r2, r6
 801289e:	b292      	uxth	r2, r2
 80128a0:	2a09      	cmp	r2, #9
 80128a2:	bf88      	it	hi
 80128a4:	3a0a      	subhi	r2, #10
 80128a6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80128aa:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80128ac:	42aa      	cmp	r2, r5
 80128ae:	d0ee      	beq.n	801288e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80128b0:	2000      	movs	r0, #0
 80128b2:	bd70      	pop	{r4, r5, r6, pc}
 80128b4:	2001      	movs	r0, #1
 80128b6:	e7fc      	b.n	80128b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080128b8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80128b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128bc:	4605      	mov	r5, r0
 80128be:	4616      	mov	r6, r2
 80128c0:	1c8c      	adds	r4, r1, #2
 80128c2:	8809      	ldrh	r1, [r1, #0]
 80128c4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80128c8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80128cc:	42b3      	cmp	r3, r6
 80128ce:	d124      	bne.n	801291a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80128d0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80128d4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80128d8:	f001 070f 	and.w	r7, r1, #15
 80128dc:	4652      	mov	r2, sl
 80128de:	f8cd 8000 	str.w	r8, [sp]
 80128e2:	464b      	mov	r3, r9
 80128e4:	4621      	mov	r1, r4
 80128e6:	4628      	mov	r0, r5
 80128e8:	f7ff ffb7 	bl	801285a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80128ec:	4683      	mov	fp, r0
 80128ee:	b168      	cbz	r0, 801290c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80128f0:	eb0a 0109 	add.w	r1, sl, r9
 80128f4:	463a      	mov	r2, r7
 80128f6:	4628      	mov	r0, r5
 80128f8:	4441      	add	r1, r8
 80128fa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80128fe:	4649      	mov	r1, r9
 8012900:	f7ff ff52 	bl	80127a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012904:	4658      	mov	r0, fp
 8012906:	b003      	add	sp, #12
 8012908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801290c:	eb07 010a 	add.w	r1, r7, sl
 8012910:	4449      	add	r1, r9
 8012912:	4441      	add	r1, r8
 8012914:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012918:	e7d2      	b.n	80128c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801291a:	f04f 0b00 	mov.w	fp, #0
 801291e:	e7f1      	b.n	8012904 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012920 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012920:	b570      	push	{r4, r5, r6, lr}
 8012922:	8810      	ldrh	r0, [r2, #0]
 8012924:	4298      	cmp	r0, r3
 8012926:	d817      	bhi.n	8012958 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012928:	1e48      	subs	r0, r1, #1
 801292a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801292e:	4298      	cmp	r0, r3
 8012930:	d312      	bcc.n	8012958 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012932:	2400      	movs	r4, #0
 8012934:	428c      	cmp	r4, r1
 8012936:	d20f      	bcs.n	8012958 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012938:	1860      	adds	r0, r4, r1
 801293a:	1040      	asrs	r0, r0, #1
 801293c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012940:	0085      	lsls	r5, r0, #2
 8012942:	42b3      	cmp	r3, r6
 8012944:	d902      	bls.n	801294c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012946:	3001      	adds	r0, #1
 8012948:	b284      	uxth	r4, r0
 801294a:	e7f3      	b.n	8012934 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801294c:	d201      	bcs.n	8012952 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801294e:	b281      	uxth	r1, r0
 8012950:	e7f0      	b.n	8012934 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012952:	442a      	add	r2, r5
 8012954:	8850      	ldrh	r0, [r2, #2]
 8012956:	bd70      	pop	{r4, r5, r6, pc}
 8012958:	2000      	movs	r0, #0
 801295a:	e7fc      	b.n	8012956 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801295c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801295c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012960:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8012962:	4604      	mov	r4, r0
 8012964:	260b      	movs	r6, #11
 8012966:	886f      	ldrh	r7, [r5, #2]
 8012968:	087f      	lsrs	r7, r7, #1
 801296a:	3e01      	subs	r6, #1
 801296c:	d013      	beq.n	8012996 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801296e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012970:	462a      	mov	r2, r5
 8012972:	4639      	mov	r1, r7
 8012974:	4620      	mov	r0, r4
 8012976:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801297a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801297e:	4643      	mov	r3, r8
 8012980:	f7ff ffce 	bl	8012920 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012984:	b138      	cbz	r0, 8012996 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012986:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801298a:	4642      	mov	r2, r8
 801298c:	4620      	mov	r0, r4
 801298e:	f7ff ff93 	bl	80128b8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012992:	2800      	cmp	r0, #0
 8012994:	d1e9      	bne.n	801296a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012996:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0801299c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801299c:	b570      	push	{r4, r5, r6, lr}
 801299e:	694a      	ldr	r2, [r1, #20]
 80129a0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80129a2:	684b      	ldr	r3, [r1, #4]
 80129a4:	1b54      	subs	r4, r2, r5
 80129a6:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80129a8:	f000 8106 	beq.w	8012bb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80129ac:	1b9b      	subs	r3, r3, r6
 80129ae:	d003      	beq.n	80129b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80129b0:	4363      	muls	r3, r4
 80129b2:	2210      	movs	r2, #16
 80129b4:	fb93 f3f2 	sdiv	r3, r3, r2
 80129b8:	680c      	ldr	r4, [r1, #0]
 80129ba:	698a      	ldr	r2, [r1, #24]
 80129bc:	1b65      	subs	r5, r4, r5
 80129be:	f000 80fd 	beq.w	8012bbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80129c2:	1b92      	subs	r2, r2, r6
 80129c4:	d003      	beq.n	80129ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80129c6:	436a      	muls	r2, r5
 80129c8:	2410      	movs	r4, #16
 80129ca:	fb92 f2f4 	sdiv	r2, r2, r4
 80129ce:	1a9b      	subs	r3, r3, r2
 80129d0:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8012bf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80129d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80129d8:	460a      	mov	r2, r1
 80129da:	ee07 3a90 	vmov	s15, r3
 80129de:	f100 040c 	add.w	r4, r0, #12
 80129e2:	4603      	mov	r3, r0
 80129e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129e8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80129ec:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80129f0:	eeb1 6a43 	vneg.f32	s12, s6
 80129f4:	edd2 7a02 	vldr	s15, [r2, #8]
 80129f8:	3214      	adds	r2, #20
 80129fa:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80129fe:	ece3 6a01 	vstmia	r3!, {s13}
 8012a02:	429c      	cmp	r4, r3
 8012a04:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012a08:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012a0c:	edc3 7a02 	vstr	s15, [r3, #8]
 8012a10:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012a14:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012a18:	edc3 7a05 	vstr	s15, [r3, #20]
 8012a1c:	d1ea      	bne.n	80129f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012a1e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012a20:	698b      	ldr	r3, [r1, #24]
 8012a22:	edd0 4a02 	vldr	s9, [r0, #8]
 8012a26:	1a9b      	subs	r3, r3, r2
 8012a28:	edd0 3a00 	vldr	s7, [r0]
 8012a2c:	edd0 6a01 	vldr	s13, [r0, #4]
 8012a30:	ee07 3a90 	vmov	s15, r3
 8012a34:	684b      	ldr	r3, [r1, #4]
 8012a36:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012a3a:	ed90 5a05 	vldr	s10, [r0, #20]
 8012a3e:	1a9b      	subs	r3, r3, r2
 8012a40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012a44:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012a48:	ed90 2a03 	vldr	s4, [r0, #12]
 8012a4c:	ee07 3a10 	vmov	s14, r3
 8012a50:	edd0 5a04 	vldr	s11, [r0, #16]
 8012a54:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012a58:	ed90 1a07 	vldr	s2, [r0, #28]
 8012a5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a60:	edd0 2a06 	vldr	s5, [r0, #24]
 8012a64:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012a68:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012a6c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012a70:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012a74:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a78:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012a7c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8012a80:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012a82:	694a      	ldr	r2, [r1, #20]
 8012a84:	1b13      	subs	r3, r2, r4
 8012a86:	ee07 3a10 	vmov	s14, r3
 8012a8a:	680b      	ldr	r3, [r1, #0]
 8012a8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a90:	1b1b      	subs	r3, r3, r4
 8012a92:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012a96:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012a9a:	ee07 3a10 	vmov	s14, r3
 8012a9e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012aa2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012aa6:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012aaa:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012aae:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8012ab2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012ab4:	698b      	ldr	r3, [r1, #24]
 8012ab6:	1a9b      	subs	r3, r3, r2
 8012ab8:	ee06 3a90 	vmov	s13, r3
 8012abc:	684b      	ldr	r3, [r1, #4]
 8012abe:	1a9b      	subs	r3, r3, r2
 8012ac0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012ac4:	ee07 3a10 	vmov	s14, r3
 8012ac8:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012acc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ad0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012ad4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012ad8:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012adc:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012ae0:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012ae4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012ae6:	694a      	ldr	r2, [r1, #20]
 8012ae8:	1b13      	subs	r3, r2, r4
 8012aea:	ee07 3a10 	vmov	s14, r3
 8012aee:	680b      	ldr	r3, [r1, #0]
 8012af0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012af4:	1b1b      	subs	r3, r3, r4
 8012af6:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012afa:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012afe:	ee07 3a10 	vmov	s14, r3
 8012b02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012b06:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012b0a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012b0e:	edd0 5a08 	vldr	s11, [r0, #32]
 8012b12:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012b16:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012b1a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012b1e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8012b22:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012b24:	698b      	ldr	r3, [r1, #24]
 8012b26:	1a9b      	subs	r3, r3, r2
 8012b28:	ee07 3a10 	vmov	s14, r3
 8012b2c:	684b      	ldr	r3, [r1, #4]
 8012b2e:	1a9b      	subs	r3, r3, r2
 8012b30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012b34:	ee01 3a90 	vmov	s3, r3
 8012b38:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012b3c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012b40:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012b44:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012b48:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012b4c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012b50:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012b54:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012b56:	694a      	ldr	r2, [r1, #20]
 8012b58:	1b13      	subs	r3, r2, r4
 8012b5a:	ee03 3a10 	vmov	s6, r3
 8012b5e:	680b      	ldr	r3, [r1, #0]
 8012b60:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012b64:	1b1b      	subs	r3, r3, r4
 8012b66:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012b6a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012b6e:	ee03 3a10 	vmov	s6, r3
 8012b72:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012b76:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012b7a:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012b7e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012b82:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012b86:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8012b8a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012b8e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b96:	dd13      	ble.n	8012bc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012b98:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012b9c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012ba0:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012ba2:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012ba6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012baa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bae:	dd15      	ble.n	8012bdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012bb0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012bb4:	6403      	str	r3, [r0, #64]	; 0x40
 8012bb6:	bd70      	pop	{r4, r5, r6, pc}
 8012bb8:	4623      	mov	r3, r4
 8012bba:	e6fd      	b.n	80129b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012bbc:	462a      	mov	r2, r5
 8012bbe:	e706      	b.n	80129ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012bc0:	d502      	bpl.n	8012bc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012bc2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012bc6:	e7e9      	b.n	8012b9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012bc8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012bcc:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012bd0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012bd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bd8:	dade      	bge.n	8012b98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012bda:	e7f2      	b.n	8012bc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012bdc:	d502      	bpl.n	8012be4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012bde:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012be2:	e7e7      	b.n	8012bb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012be4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012be8:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012bec:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bf4:	dadc      	bge.n	8012bb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012bf6:	e7f2      	b.n	8012bde <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012bf8:	3d800000 	.word	0x3d800000

08012bfc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012bfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c00:	2714      	movs	r7, #20
 8012c02:	435f      	muls	r7, r3
 8012c04:	eb02 0c07 	add.w	ip, r2, r7
 8012c08:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012c0c:	f115 0e0f 	adds.w	lr, r5, #15
 8012c10:	f100 80a2 	bmi.w	8012d58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012c14:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012c18:	9c08      	ldr	r4, [sp, #32]
 8012c1a:	2614      	movs	r6, #20
 8012c1c:	f8c0 e014 	str.w	lr, [r0, #20]
 8012c20:	4366      	muls	r6, r4
 8012c22:	eb02 0806 	add.w	r8, r2, r6
 8012c26:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012c2a:	f115 040f 	adds.w	r4, r5, #15
 8012c2e:	f100 809f 	bmi.w	8012d70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012c32:	1124      	asrs	r4, r4, #4
 8012c34:	eba4 040e 	sub.w	r4, r4, lr
 8012c38:	6184      	str	r4, [r0, #24]
 8012c3a:	2c00      	cmp	r4, #0
 8012c3c:	f000 808a 	beq.w	8012d54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012c40:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012c44:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012c48:	5995      	ldr	r5, [r2, r6]
 8012c4a:	eba4 0809 	sub.w	r8, r4, r9
 8012c4e:	59d4      	ldr	r4, [r2, r7]
 8012c50:	eba5 0a04 	sub.w	sl, r5, r4
 8012c54:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012c58:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012c5c:	fb0e fe05 	mul.w	lr, lr, r5
 8012c60:	fb0a ee19 	mls	lr, sl, r9, lr
 8012c64:	fb08 e404 	mla	r4, r8, r4, lr
 8012c68:	3c01      	subs	r4, #1
 8012c6a:	19a4      	adds	r4, r4, r6
 8012c6c:	f100 808c 	bmi.w	8012d88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012c70:	fb94 fef6 	sdiv	lr, r4, r6
 8012c74:	fb06 441e 	mls	r4, r6, lr, r4
 8012c78:	f8c0 e000 	str.w	lr, [r0]
 8012c7c:	6104      	str	r4, [r0, #16]
 8012c7e:	2d00      	cmp	r5, #0
 8012c80:	f2c0 8095 	blt.w	8012dae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012c84:	fb95 f4f6 	sdiv	r4, r5, r6
 8012c88:	fb06 5514 	mls	r5, r6, r4, r5
 8012c8c:	6044      	str	r4, [r0, #4]
 8012c8e:	6085      	str	r5, [r0, #8]
 8012c90:	60c6      	str	r6, [r0, #12]
 8012c92:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012c96:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012c9a:	6945      	ldr	r5, [r0, #20]
 8012c9c:	59d2      	ldr	r2, [r2, r7]
 8012c9e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8012ca2:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8012dd0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012ca6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012caa:	ee07 4a10 	vmov	s14, r4
 8012cae:	6804      	ldr	r4, [r0, #0]
 8012cb0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012cb4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cb8:	ee07 2a90 	vmov	s15, r2
 8012cbc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012cc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012cc4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012cc8:	edd3 6a00 	vldr	s13, [r3]
 8012ccc:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012cd0:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8012cd4:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012cd8:	edc0 6a07 	vstr	s13, [r0, #28]
 8012cdc:	edd0 6a01 	vldr	s13, [r0, #4]
 8012ce0:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8012ce4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012ce8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8012cec:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012cf0:	ed80 6a08 	vstr	s12, [r0, #32]
 8012cf4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8012cf6:	6242      	str	r2, [r0, #36]	; 0x24
 8012cf8:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8012cfc:	ed93 6a03 	vldr	s12, [r3, #12]
 8012d00:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012d04:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012d08:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012d0c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8012d10:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012d14:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8012d18:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012d1c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8012d20:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012d22:	6302      	str	r2, [r0, #48]	; 0x30
 8012d24:	ed93 6a06 	vldr	s12, [r3, #24]
 8012d28:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8012d2c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012d30:	eeb0 7a46 	vmov.f32	s14, s12
 8012d34:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8012d38:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012d3c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012d40:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8012d44:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8012d48:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012d4c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8012d50:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8012d52:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012d54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012d58:	2410      	movs	r4, #16
 8012d5a:	f1c5 0501 	rsb	r5, r5, #1
 8012d5e:	fb9e fef4 	sdiv	lr, lr, r4
 8012d62:	f015 050f 	ands.w	r5, r5, #15
 8012d66:	bf18      	it	ne
 8012d68:	2501      	movne	r5, #1
 8012d6a:	ebae 0e05 	sub.w	lr, lr, r5
 8012d6e:	e753      	b.n	8012c18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012d70:	f04f 0910 	mov.w	r9, #16
 8012d74:	f1c5 0501 	rsb	r5, r5, #1
 8012d78:	fb94 f4f9 	sdiv	r4, r4, r9
 8012d7c:	f015 050f 	ands.w	r5, r5, #15
 8012d80:	bf18      	it	ne
 8012d82:	2501      	movne	r5, #1
 8012d84:	1b64      	subs	r4, r4, r5
 8012d86:	e755      	b.n	8012c34 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012d88:	4264      	negs	r4, r4
 8012d8a:	fb94 fef6 	sdiv	lr, r4, r6
 8012d8e:	f1ce 0800 	rsb	r8, lr, #0
 8012d92:	fb06 441e 	mls	r4, r6, lr, r4
 8012d96:	f8c0 8000 	str.w	r8, [r0]
 8012d9a:	6104      	str	r4, [r0, #16]
 8012d9c:	2c00      	cmp	r4, #0
 8012d9e:	f43f af6e 	beq.w	8012c7e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012da2:	ea6f 0e0e 	mvn.w	lr, lr
 8012da6:	1b34      	subs	r4, r6, r4
 8012da8:	f8c0 e000 	str.w	lr, [r0]
 8012dac:	e766      	b.n	8012c7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012dae:	426d      	negs	r5, r5
 8012db0:	fb95 f4f6 	sdiv	r4, r5, r6
 8012db4:	f1c4 0e00 	rsb	lr, r4, #0
 8012db8:	fb06 5514 	mls	r5, r6, r4, r5
 8012dbc:	f8c0 e004 	str.w	lr, [r0, #4]
 8012dc0:	6085      	str	r5, [r0, #8]
 8012dc2:	2d00      	cmp	r5, #0
 8012dc4:	f43f af64 	beq.w	8012c90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012dc8:	43e4      	mvns	r4, r4
 8012dca:	1b75      	subs	r5, r6, r5
 8012dcc:	6044      	str	r4, [r0, #4]
 8012dce:	e75e      	b.n	8012c8e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012dd0:	3d800000 	.word	0x3d800000

08012dd4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012dd4:	4b01      	ldr	r3, [pc, #4]	; (8012ddc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012dd6:	6018      	str	r0, [r3, #0]
 8012dd8:	4770      	bx	lr
 8012dda:	bf00      	nop
 8012ddc:	2400e48c 	.word	0x2400e48c

08012de0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012de0:	4b06      	ldr	r3, [pc, #24]	; (8012dfc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8012de2:	881a      	ldrh	r2, [r3, #0]
 8012de4:	4282      	cmp	r2, r0
 8012de6:	d807      	bhi.n	8012df8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012de8:	4b05      	ldr	r3, [pc, #20]	; (8012e00 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012dea:	881b      	ldrh	r3, [r3, #0]
 8012dec:	4413      	add	r3, r2
 8012dee:	4298      	cmp	r0, r3
 8012df0:	bfac      	ite	ge
 8012df2:	2000      	movge	r0, #0
 8012df4:	2001      	movlt	r0, #1
 8012df6:	4770      	bx	lr
 8012df8:	2000      	movs	r0, #0
 8012dfa:	4770      	bx	lr
 8012dfc:	2400e4ac 	.word	0x2400e4ac
 8012e00:	2400e4b0 	.word	0x2400e4b0

08012e04 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012e04:	b508      	push	{r3, lr}
 8012e06:	4601      	mov	r1, r0
 8012e08:	f7ff ffea 	bl	8012de0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012e0c:	b118      	cbz	r0, 8012e16 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012e0e:	4b02      	ldr	r3, [pc, #8]	; (8012e18 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012e10:	681b      	ldr	r3, [r3, #0]
 8012e12:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012e16:	bd08      	pop	{r3, pc}
 8012e18:	2400e490 	.word	0x2400e490

08012e1c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e1e:	4c24      	ldr	r4, [pc, #144]	; (8012eb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012e20:	6823      	ldr	r3, [r4, #0]
 8012e22:	2b00      	cmp	r3, #0
 8012e24:	d042      	beq.n	8012eac <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012e26:	4a23      	ldr	r2, [pc, #140]	; (8012eb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012e28:	4d23      	ldr	r5, [pc, #140]	; (8012eb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012e2a:	8811      	ldrh	r1, [r2, #0]
 8012e2c:	f8b5 c000 	ldrh.w	ip, [r5]
 8012e30:	4822      	ldr	r0, [pc, #136]	; (8012ebc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012e32:	4461      	add	r1, ip
 8012e34:	1c4a      	adds	r2, r1, #1
 8012e36:	008f      	lsls	r7, r1, #2
 8012e38:	f022 0201 	bic.w	r2, r2, #1
 8012e3c:	19de      	adds	r6, r3, r7
 8012e3e:	0412      	lsls	r2, r2, #16
 8012e40:	6006      	str	r6, [r0, #0]
 8012e42:	4e1f      	ldr	r6, [pc, #124]	; (8012ec0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012e44:	0c12      	lsrs	r2, r2, #16
 8012e46:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012e4a:	19da      	adds	r2, r3, r7
 8012e4c:	6032      	str	r2, [r6, #0]
 8012e4e:	220e      	movs	r2, #14
 8012e50:	fb02 f20c 	mul.w	r2, r2, ip
 8012e54:	3203      	adds	r2, #3
 8012e56:	f022 0203 	bic.w	r2, r2, #3
 8012e5a:	443a      	add	r2, r7
 8012e5c:	4f19      	ldr	r7, [pc, #100]	; (8012ec4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012e5e:	4413      	add	r3, r2
 8012e60:	603b      	str	r3, [r7, #0]
 8012e62:	2300      	movs	r3, #0
 8012e64:	4f18      	ldr	r7, [pc, #96]	; (8012ec8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012e66:	469c      	mov	ip, r3
 8012e68:	803b      	strh	r3, [r7, #0]
 8012e6a:	4f18      	ldr	r7, [pc, #96]	; (8012ecc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012e6c:	683f      	ldr	r7, [r7, #0]
 8012e6e:	1aba      	subs	r2, r7, r2
 8012e70:	4f17      	ldr	r7, [pc, #92]	; (8012ed0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012e72:	603a      	str	r2, [r7, #0]
 8012e74:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8012e78:	4a16      	ldr	r2, [pc, #88]	; (8012ed4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012e7a:	8013      	strh	r3, [r2, #0]
 8012e7c:	428b      	cmp	r3, r1
 8012e7e:	d10d      	bne.n	8012e9c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012e80:	882d      	ldrh	r5, [r5, #0]
 8012e82:	2300      	movs	r3, #0
 8012e84:	6830      	ldr	r0, [r6, #0]
 8012e86:	240e      	movs	r4, #14
 8012e88:	429d      	cmp	r5, r3
 8012e8a:	d90f      	bls.n	8012eac <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012e8c:	fb04 0203 	mla	r2, r4, r3, r0
 8012e90:	3301      	adds	r3, #1
 8012e92:	7b11      	ldrb	r1, [r2, #12]
 8012e94:	f36f 1145 	bfc	r1, #5, #1
 8012e98:	7311      	strb	r1, [r2, #12]
 8012e9a:	e7f5      	b.n	8012e88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012e9c:	6822      	ldr	r2, [r4, #0]
 8012e9e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012ea2:	6802      	ldr	r2, [r0, #0]
 8012ea4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012ea8:	3301      	adds	r3, #1
 8012eaa:	e7e7      	b.n	8012e7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012eac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012eae:	bf00      	nop
 8012eb0:	2400e490 	.word	0x2400e490
 8012eb4:	2400e4ac 	.word	0x2400e4ac
 8012eb8:	2400e4b0 	.word	0x2400e4b0
 8012ebc:	2400e4a4 	.word	0x2400e4a4
 8012ec0:	2400e494 	.word	0x2400e494
 8012ec4:	2400e49c 	.word	0x2400e49c
 8012ec8:	2400e4ae 	.word	0x2400e4ae
 8012ecc:	2400e498 	.word	0x2400e498
 8012ed0:	2400e4a8 	.word	0x2400e4a8
 8012ed4:	2400e4a0 	.word	0x2400e4a0

08012ed8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012ed8:	4b06      	ldr	r3, [pc, #24]	; (8012ef4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012eda:	681b      	ldr	r3, [r3, #0]
 8012edc:	b943      	cbnz	r3, 8012ef0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012ede:	b139      	cbz	r1, 8012ef0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012ee0:	4b05      	ldr	r3, [pc, #20]	; (8012ef8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8012ee2:	801a      	strh	r2, [r3, #0]
 8012ee4:	4b05      	ldr	r3, [pc, #20]	; (8012efc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012ee6:	6019      	str	r1, [r3, #0]
 8012ee8:	4b05      	ldr	r3, [pc, #20]	; (8012f00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012eea:	6018      	str	r0, [r3, #0]
 8012eec:	f7ff bf96 	b.w	8012e1c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012ef0:	4770      	bx	lr
 8012ef2:	bf00      	nop
 8012ef4:	2400e49c 	.word	0x2400e49c
 8012ef8:	2400e4b0 	.word	0x2400e4b0
 8012efc:	2400e498 	.word	0x2400e498
 8012f00:	2400e490 	.word	0x2400e490

08012f04 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012f04:	b470      	push	{r4, r5, r6}
 8012f06:	4c07      	ldr	r4, [pc, #28]	; (8012f24 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012f08:	4605      	mov	r5, r0
 8012f0a:	4610      	mov	r0, r2
 8012f0c:	9a03      	ldr	r2, [sp, #12]
 8012f0e:	6826      	ldr	r6, [r4, #0]
 8012f10:	b936      	cbnz	r6, 8012f20 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8012f12:	6025      	str	r5, [r4, #0]
 8012f14:	4c04      	ldr	r4, [pc, #16]	; (8012f28 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012f16:	8021      	strh	r1, [r4, #0]
 8012f18:	4619      	mov	r1, r3
 8012f1a:	bc70      	pop	{r4, r5, r6}
 8012f1c:	f7ff bfdc 	b.w	8012ed8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012f20:	bc70      	pop	{r4, r5, r6}
 8012f22:	4770      	bx	lr
 8012f24:	2400e4b4 	.word	0x2400e4b4
 8012f28:	2400e4ac 	.word	0x2400e4ac

08012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012f2c:	4a12      	ldr	r2, [pc, #72]	; (8012f78 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012f2e:	8803      	ldrh	r3, [r0, #0]
 8012f30:	8812      	ldrh	r2, [r2, #0]
 8012f32:	4293      	cmp	r3, r2
 8012f34:	d207      	bcs.n	8012f46 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012f36:	4a11      	ldr	r2, [pc, #68]	; (8012f7c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012f38:	2114      	movs	r1, #20
 8012f3a:	6812      	ldr	r2, [r2, #0]
 8012f3c:	fb01 2303 	mla	r3, r1, r3, r2
 8012f40:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012f44:	4770      	bx	lr
 8012f46:	490e      	ldr	r1, [pc, #56]	; (8012f80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012f48:	8809      	ldrh	r1, [r1, #0]
 8012f4a:	4411      	add	r1, r2
 8012f4c:	428b      	cmp	r3, r1
 8012f4e:	da04      	bge.n	8012f5a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012f50:	1a9b      	subs	r3, r3, r2
 8012f52:	4a0c      	ldr	r2, [pc, #48]	; (8012f84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012f54:	210e      	movs	r1, #14
 8012f56:	6812      	ldr	r2, [r2, #0]
 8012f58:	e7f0      	b.n	8012f3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012f5a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012f5e:	4293      	cmp	r3, r2
 8012f60:	d108      	bne.n	8012f74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012f62:	4b09      	ldr	r3, [pc, #36]	; (8012f88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012f64:	781b      	ldrb	r3, [r3, #0]
 8012f66:	b91b      	cbnz	r3, 8012f70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012f68:	4b08      	ldr	r3, [pc, #32]	; (8012f8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012f6a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012f6e:	4770      	bx	lr
 8012f70:	4b07      	ldr	r3, [pc, #28]	; (8012f90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012f72:	e7fa      	b.n	8012f6a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012f74:	2000      	movs	r0, #0
 8012f76:	4770      	bx	lr
 8012f78:	2400e4ac 	.word	0x2400e4ac
 8012f7c:	2400e4b4 	.word	0x2400e4b4
 8012f80:	2400e4b0 	.word	0x2400e4b0
 8012f84:	2400e494 	.word	0x2400e494
 8012f88:	2400e41c 	.word	0x2400e41c
 8012f8c:	2400e41e 	.word	0x2400e41e
 8012f90:	2400e420 	.word	0x2400e420

08012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012f94:	4a12      	ldr	r2, [pc, #72]	; (8012fe0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012f96:	8803      	ldrh	r3, [r0, #0]
 8012f98:	8812      	ldrh	r2, [r2, #0]
 8012f9a:	4293      	cmp	r3, r2
 8012f9c:	d207      	bcs.n	8012fae <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012f9e:	4a11      	ldr	r2, [pc, #68]	; (8012fe4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012fa0:	2114      	movs	r1, #20
 8012fa2:	6812      	ldr	r2, [r2, #0]
 8012fa4:	fb01 2303 	mla	r3, r1, r3, r2
 8012fa8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012fac:	4770      	bx	lr
 8012fae:	490e      	ldr	r1, [pc, #56]	; (8012fe8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012fb0:	8809      	ldrh	r1, [r1, #0]
 8012fb2:	4411      	add	r1, r2
 8012fb4:	428b      	cmp	r3, r1
 8012fb6:	da04      	bge.n	8012fc2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012fb8:	1a9b      	subs	r3, r3, r2
 8012fba:	4a0c      	ldr	r2, [pc, #48]	; (8012fec <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012fbc:	210e      	movs	r1, #14
 8012fbe:	6812      	ldr	r2, [r2, #0]
 8012fc0:	e7f0      	b.n	8012fa4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012fc2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012fc6:	4293      	cmp	r3, r2
 8012fc8:	d108      	bne.n	8012fdc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012fca:	4b09      	ldr	r3, [pc, #36]	; (8012ff0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012fcc:	781b      	ldrb	r3, [r3, #0]
 8012fce:	b91b      	cbnz	r3, 8012fd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012fd0:	4b08      	ldr	r3, [pc, #32]	; (8012ff4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012fd2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012fd6:	4770      	bx	lr
 8012fd8:	4b07      	ldr	r3, [pc, #28]	; (8012ff8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012fda:	e7fa      	b.n	8012fd2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012fdc:	2000      	movs	r0, #0
 8012fde:	4770      	bx	lr
 8012fe0:	2400e4ac 	.word	0x2400e4ac
 8012fe4:	2400e4b4 	.word	0x2400e4b4
 8012fe8:	2400e4b0 	.word	0x2400e4b0
 8012fec:	2400e494 	.word	0x2400e494
 8012ff0:	2400e41c 	.word	0x2400e41c
 8012ff4:	2400e420 	.word	0x2400e420
 8012ff8:	2400e41e 	.word	0x2400e41e

08012ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012ffc:	4a1f      	ldr	r2, [pc, #124]	; (801307c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8012ffe:	b510      	push	{r4, lr}
 8013000:	880b      	ldrh	r3, [r1, #0]
 8013002:	8812      	ldrh	r2, [r2, #0]
 8013004:	4293      	cmp	r3, r2
 8013006:	d213      	bcs.n	8013030 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013008:	4a1d      	ldr	r2, [pc, #116]	; (8013080 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801300a:	2114      	movs	r1, #20
 801300c:	6812      	ldr	r2, [r2, #0]
 801300e:	fb01 2303 	mla	r3, r1, r3, r2
 8013012:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013016:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801301a:	8a1a      	ldrh	r2, [r3, #16]
 801301c:	8a5b      	ldrh	r3, [r3, #18]
 801301e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013022:	8004      	strh	r4, [r0, #0]
 8013024:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013028:	8041      	strh	r1, [r0, #2]
 801302a:	8082      	strh	r2, [r0, #4]
 801302c:	80c3      	strh	r3, [r0, #6]
 801302e:	e00e      	b.n	801304e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013030:	4914      	ldr	r1, [pc, #80]	; (8013084 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8013032:	8809      	ldrh	r1, [r1, #0]
 8013034:	4411      	add	r1, r2
 8013036:	428b      	cmp	r3, r1
 8013038:	da0a      	bge.n	8013050 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801303a:	1a9b      	subs	r3, r3, r2
 801303c:	4a12      	ldr	r2, [pc, #72]	; (8013088 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801303e:	210e      	movs	r1, #14
 8013040:	6812      	ldr	r2, [r2, #0]
 8013042:	fb01 2303 	mla	r3, r1, r3, r2
 8013046:	681a      	ldr	r2, [r3, #0]
 8013048:	6002      	str	r2, [r0, #0]
 801304a:	685a      	ldr	r2, [r3, #4]
 801304c:	6042      	str	r2, [r0, #4]
 801304e:	bd10      	pop	{r4, pc}
 8013050:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013054:	4293      	cmp	r3, r2
 8013056:	d10b      	bne.n	8013070 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8013058:	4b0c      	ldr	r3, [pc, #48]	; (801308c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801305a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801305e:	4b0c      	ldr	r3, [pc, #48]	; (8013090 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013060:	8081      	strh	r1, [r0, #4]
 8013062:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013066:	2300      	movs	r3, #0
 8013068:	80c2      	strh	r2, [r0, #6]
 801306a:	8003      	strh	r3, [r0, #0]
 801306c:	8043      	strh	r3, [r0, #2]
 801306e:	e7ee      	b.n	801304e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013070:	2300      	movs	r3, #0
 8013072:	8003      	strh	r3, [r0, #0]
 8013074:	8043      	strh	r3, [r0, #2]
 8013076:	8083      	strh	r3, [r0, #4]
 8013078:	e7d8      	b.n	801302c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801307a:	bf00      	nop
 801307c:	2400e4ac 	.word	0x2400e4ac
 8013080:	2400e4b4 	.word	0x2400e4b4
 8013084:	2400e4b0 	.word	0x2400e4b0
 8013088:	2400e494 	.word	0x2400e494
 801308c:	2400e418 	.word	0x2400e418
 8013090:	2400e41a 	.word	0x2400e41a

08013094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013094:	4a17      	ldr	r2, [pc, #92]	; (80130f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8013096:	8803      	ldrh	r3, [r0, #0]
 8013098:	8812      	ldrh	r2, [r2, #0]
 801309a:	4293      	cmp	r3, r2
 801309c:	d213      	bcs.n	80130c6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801309e:	4a16      	ldr	r2, [pc, #88]	; (80130f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80130a0:	2114      	movs	r1, #20
 80130a2:	6812      	ldr	r2, [r2, #0]
 80130a4:	fb01 2303 	mla	r3, r1, r3, r2
 80130a8:	8a1a      	ldrh	r2, [r3, #16]
 80130aa:	8919      	ldrh	r1, [r3, #8]
 80130ac:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80130b0:	428a      	cmp	r2, r1
 80130b2:	db1d      	blt.n	80130f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80130b4:	8a58      	ldrh	r0, [r3, #18]
 80130b6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80130ba:	895b      	ldrh	r3, [r3, #10]
 80130bc:	4298      	cmp	r0, r3
 80130be:	bfac      	ite	ge
 80130c0:	2000      	movge	r0, #0
 80130c2:	2001      	movlt	r0, #1
 80130c4:	4770      	bx	lr
 80130c6:	490d      	ldr	r1, [pc, #52]	; (80130fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80130c8:	8809      	ldrh	r1, [r1, #0]
 80130ca:	4411      	add	r1, r2
 80130cc:	428b      	cmp	r3, r1
 80130ce:	da0d      	bge.n	80130ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80130d0:	1a9b      	subs	r3, r3, r2
 80130d2:	4a0b      	ldr	r2, [pc, #44]	; (8013100 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80130d4:	210e      	movs	r1, #14
 80130d6:	6812      	ldr	r2, [r2, #0]
 80130d8:	fb01 2303 	mla	r3, r1, r3, r2
 80130dc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80130e0:	891a      	ldrh	r2, [r3, #8]
 80130e2:	4291      	cmp	r1, r2
 80130e4:	db04      	blt.n	80130f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80130e6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80130ea:	e7e6      	b.n	80130ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80130ec:	2000      	movs	r0, #0
 80130ee:	4770      	bx	lr
 80130f0:	2001      	movs	r0, #1
 80130f2:	4770      	bx	lr
 80130f4:	2400e4ac 	.word	0x2400e4ac
 80130f8:	2400e4b4 	.word	0x2400e4b4
 80130fc:	2400e4b0 	.word	0x2400e4b0
 8013100:	2400e494 	.word	0x2400e494

08013104 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013104:	4a12      	ldr	r2, [pc, #72]	; (8013150 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013106:	8803      	ldrh	r3, [r0, #0]
 8013108:	8811      	ldrh	r1, [r2, #0]
 801310a:	428b      	cmp	r3, r1
 801310c:	d20b      	bcs.n	8013126 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801310e:	4a11      	ldr	r2, [pc, #68]	; (8013154 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013110:	6812      	ldr	r2, [r2, #0]
 8013112:	b112      	cbz	r2, 801311a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013114:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013118:	b9c0      	cbnz	r0, 801314c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801311a:	4a0f      	ldr	r2, [pc, #60]	; (8013158 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801311c:	6811      	ldr	r1, [r2, #0]
 801311e:	2214      	movs	r2, #20
 8013120:	4353      	muls	r3, r2
 8013122:	58c8      	ldr	r0, [r1, r3]
 8013124:	4770      	bx	lr
 8013126:	4a0d      	ldr	r2, [pc, #52]	; (801315c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013128:	8812      	ldrh	r2, [r2, #0]
 801312a:	440a      	add	r2, r1
 801312c:	4293      	cmp	r3, r2
 801312e:	da04      	bge.n	801313a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8013130:	4a08      	ldr	r2, [pc, #32]	; (8013154 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013132:	6812      	ldr	r2, [r2, #0]
 8013134:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013138:	4770      	bx	lr
 801313a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801313e:	4293      	cmp	r3, r2
 8013140:	d103      	bne.n	801314a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013142:	4b07      	ldr	r3, [pc, #28]	; (8013160 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013144:	681b      	ldr	r3, [r3, #0]
 8013146:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8013148:	4770      	bx	lr
 801314a:	2000      	movs	r0, #0
 801314c:	4770      	bx	lr
 801314e:	bf00      	nop
 8013150:	2400e4ac 	.word	0x2400e4ac
 8013154:	2400e490 	.word	0x2400e490
 8013158:	2400e4b4 	.word	0x2400e4b4
 801315c:	2400e4b0 	.word	0x2400e4b0
 8013160:	2400e424 	.word	0x2400e424

08013164 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013164:	4b24      	ldr	r3, [pc, #144]	; (80131f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8013166:	8802      	ldrh	r2, [r0, #0]
 8013168:	8818      	ldrh	r0, [r3, #0]
 801316a:	4282      	cmp	r2, r0
 801316c:	d221      	bcs.n	80131b2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801316e:	4b23      	ldr	r3, [pc, #140]	; (80131fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8013170:	6819      	ldr	r1, [r3, #0]
 8013172:	2314      	movs	r3, #20
 8013174:	fb03 1302 	mla	r3, r3, r2, r1
 8013178:	6858      	ldr	r0, [r3, #4]
 801317a:	2800      	cmp	r0, #0
 801317c:	d03a      	beq.n	80131f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801317e:	4920      	ldr	r1, [pc, #128]	; (8013200 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013180:	6809      	ldr	r1, [r1, #0]
 8013182:	2900      	cmp	r1, #0
 8013184:	d036      	beq.n	80131f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013186:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801318a:	2900      	cmp	r1, #0
 801318c:	d032      	beq.n	80131f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801318e:	891a      	ldrh	r2, [r3, #8]
 8013190:	8958      	ldrh	r0, [r3, #10]
 8013192:	4350      	muls	r0, r2
 8013194:	7c5a      	ldrb	r2, [r3, #17]
 8013196:	7cdb      	ldrb	r3, [r3, #19]
 8013198:	0952      	lsrs	r2, r2, #5
 801319a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801319e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80131a2:	2b0b      	cmp	r3, #11
 80131a4:	bf18      	it	ne
 80131a6:	0040      	lslne	r0, r0, #1
 80131a8:	3003      	adds	r0, #3
 80131aa:	f020 0003 	bic.w	r0, r0, #3
 80131ae:	4408      	add	r0, r1
 80131b0:	4770      	bx	lr
 80131b2:	4b14      	ldr	r3, [pc, #80]	; (8013204 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80131b4:	881b      	ldrh	r3, [r3, #0]
 80131b6:	4403      	add	r3, r0
 80131b8:	429a      	cmp	r2, r3
 80131ba:	da1a      	bge.n	80131f2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80131bc:	4b12      	ldr	r3, [pc, #72]	; (8013208 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80131be:	1a10      	subs	r0, r2, r0
 80131c0:	210e      	movs	r1, #14
 80131c2:	681b      	ldr	r3, [r3, #0]
 80131c4:	fb01 3000 	mla	r0, r1, r0, r3
 80131c8:	7b03      	ldrb	r3, [r0, #12]
 80131ca:	f003 031f 	and.w	r3, r3, #31
 80131ce:	2b0b      	cmp	r3, #11
 80131d0:	d10b      	bne.n	80131ea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80131d2:	8903      	ldrh	r3, [r0, #8]
 80131d4:	8940      	ldrh	r0, [r0, #10]
 80131d6:	4358      	muls	r0, r3
 80131d8:	4b09      	ldr	r3, [pc, #36]	; (8013200 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80131da:	3003      	adds	r0, #3
 80131dc:	6819      	ldr	r1, [r3, #0]
 80131de:	f020 0303 	bic.w	r3, r0, #3
 80131e2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80131e6:	4418      	add	r0, r3
 80131e8:	4770      	bx	lr
 80131ea:	2b0d      	cmp	r3, #13
 80131ec:	d101      	bne.n	80131f2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80131ee:	300d      	adds	r0, #13
 80131f0:	4770      	bx	lr
 80131f2:	2000      	movs	r0, #0
 80131f4:	4770      	bx	lr
 80131f6:	bf00      	nop
 80131f8:	2400e4ac 	.word	0x2400e4ac
 80131fc:	2400e4b4 	.word	0x2400e4b4
 8013200:	2400e490 	.word	0x2400e490
 8013204:	2400e4b0 	.word	0x2400e4b0
 8013208:	2400e494 	.word	0x2400e494

0801320c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801320c:	4a17      	ldr	r2, [pc, #92]	; (801326c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801320e:	b510      	push	{r4, lr}
 8013210:	8803      	ldrh	r3, [r0, #0]
 8013212:	8812      	ldrh	r2, [r2, #0]
 8013214:	4293      	cmp	r3, r2
 8013216:	d20c      	bcs.n	8013232 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013218:	4a15      	ldr	r2, [pc, #84]	; (8013270 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801321a:	2114      	movs	r1, #20
 801321c:	6812      	ldr	r2, [r2, #0]
 801321e:	fb01 2303 	mla	r3, r1, r3, r2
 8013222:	7c58      	ldrb	r0, [r3, #17]
 8013224:	0942      	lsrs	r2, r0, #5
 8013226:	7cd8      	ldrb	r0, [r3, #19]
 8013228:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801322c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8013230:	bd10      	pop	{r4, pc}
 8013232:	4910      	ldr	r1, [pc, #64]	; (8013274 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8013234:	8809      	ldrh	r1, [r1, #0]
 8013236:	4411      	add	r1, r2
 8013238:	428b      	cmp	r3, r1
 801323a:	da09      	bge.n	8013250 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801323c:	1a9b      	subs	r3, r3, r2
 801323e:	4a0e      	ldr	r2, [pc, #56]	; (8013278 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8013240:	210e      	movs	r1, #14
 8013242:	6812      	ldr	r2, [r2, #0]
 8013244:	fb01 2303 	mla	r3, r1, r3, r2
 8013248:	7b18      	ldrb	r0, [r3, #12]
 801324a:	f000 001f 	and.w	r0, r0, #31
 801324e:	e7ef      	b.n	8013230 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8013250:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013254:	4293      	cmp	r3, r2
 8013256:	d106      	bne.n	8013266 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8013258:	f7ef f8e2 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 801325c:	6803      	ldr	r3, [r0, #0]
 801325e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013262:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013264:	4718      	bx	r3
 8013266:	2000      	movs	r0, #0
 8013268:	e7e2      	b.n	8013230 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801326a:	bf00      	nop
 801326c:	2400e4ac 	.word	0x2400e4ac
 8013270:	2400e4b4 	.word	0x2400e4b4
 8013274:	2400e4b0 	.word	0x2400e4b0
 8013278:	2400e494 	.word	0x2400e494

0801327c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801327c:	2010      	movs	r0, #16
 801327e:	4770      	bx	lr

08013280 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013280:	2000      	movs	r0, #0
 8013282:	4770      	bx	lr

08013284 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013284:	4b02      	ldr	r3, [pc, #8]	; (8013290 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8013286:	8818      	ldrh	r0, [r3, #0]
 8013288:	0040      	lsls	r0, r0, #1
 801328a:	b280      	uxth	r0, r0
 801328c:	4770      	bx	lr
 801328e:	bf00      	nop
 8013290:	2400e41e 	.word	0x2400e41e

08013294 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013294:	2bff      	cmp	r3, #255	; 0xff
 8013296:	d050      	beq.n	801333a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8013298:	2a0b      	cmp	r2, #11
 801329a:	d04a      	beq.n	8013332 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801329c:	d80e      	bhi.n	80132bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801329e:	2a03      	cmp	r2, #3
 80132a0:	d03f      	beq.n	8013322 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80132a2:	d804      	bhi.n	80132ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80132a4:	2a01      	cmp	r2, #1
 80132a6:	d03e      	beq.n	8013326 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80132a8:	d93f      	bls.n	801332a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80132aa:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80132ac:	4770      	bx	lr
 80132ae:	2a09      	cmp	r2, #9
 80132b0:	d03f      	beq.n	8013332 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80132b2:	d83c      	bhi.n	801332e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80132b4:	2a08      	cmp	r2, #8
 80132b6:	d03a      	beq.n	801332e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80132b8:	2000      	movs	r0, #0
 80132ba:	4770      	bx	lr
 80132bc:	2a2f      	cmp	r2, #47	; 0x2f
 80132be:	d024      	beq.n	801330a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80132c0:	d80d      	bhi.n	80132de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80132c2:	2a2d      	cmp	r2, #45	; 0x2d
 80132c4:	d014      	beq.n	80132f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80132c6:	d826      	bhi.n	8013316 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80132c8:	2a2c      	cmp	r2, #44	; 0x2c
 80132ca:	d1f5      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80132cc:	684b      	ldr	r3, [r1, #4]
 80132ce:	781b      	ldrb	r3, [r3, #0]
 80132d0:	2b01      	cmp	r3, #1
 80132d2:	d018      	beq.n	8013306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80132d4:	d323      	bcc.n	801331e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80132d6:	2b02      	cmp	r3, #2
 80132d8:	d1ee      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80132da:	6880      	ldr	r0, [r0, #8]
 80132dc:	4770      	bx	lr
 80132de:	2a31      	cmp	r2, #49	; 0x31
 80132e0:	d004      	beq.n	80132ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80132e2:	d328      	bcc.n	8013336 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80132e4:	2a32      	cmp	r2, #50	; 0x32
 80132e6:	d026      	beq.n	8013336 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80132e8:	2a33      	cmp	r2, #51	; 0x33
 80132ea:	d1e5      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80132ec:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80132ee:	4770      	bx	lr
 80132f0:	684b      	ldr	r3, [r1, #4]
 80132f2:	781b      	ldrb	r3, [r3, #0]
 80132f4:	2b01      	cmp	r3, #1
 80132f6:	d004      	beq.n	8013302 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80132f8:	d30b      	bcc.n	8013312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80132fa:	2b02      	cmp	r3, #2
 80132fc:	d1dc      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80132fe:	6900      	ldr	r0, [r0, #16]
 8013300:	4770      	bx	lr
 8013302:	6a00      	ldr	r0, [r0, #32]
 8013304:	4770      	bx	lr
 8013306:	6980      	ldr	r0, [r0, #24]
 8013308:	4770      	bx	lr
 801330a:	684b      	ldr	r3, [r1, #4]
 801330c:	781b      	ldrb	r3, [r3, #0]
 801330e:	2b00      	cmp	r3, #0
 8013310:	d1d2      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013312:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013314:	4770      	bx	lr
 8013316:	684b      	ldr	r3, [r1, #4]
 8013318:	781b      	ldrb	r3, [r3, #0]
 801331a:	2b00      	cmp	r3, #0
 801331c:	d1cc      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801331e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013320:	4770      	bx	lr
 8013322:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8013324:	4770      	bx	lr
 8013326:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8013328:	4770      	bx	lr
 801332a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801332c:	4770      	bx	lr
 801332e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8013330:	4770      	bx	lr
 8013332:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8013334:	4770      	bx	lr
 8013336:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8013338:	4770      	bx	lr
 801333a:	2a0b      	cmp	r2, #11
 801333c:	d049      	beq.n	80133d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801333e:	d80e      	bhi.n	801335e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8013340:	2a03      	cmp	r2, #3
 8013342:	d040      	beq.n	80133c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8013344:	d804      	bhi.n	8013350 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8013346:	2a01      	cmp	r2, #1
 8013348:	d03f      	beq.n	80133ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801334a:	d940      	bls.n	80133ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801334c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801334e:	4770      	bx	lr
 8013350:	2a09      	cmp	r2, #9
 8013352:	d03e      	beq.n	80133d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013354:	d801      	bhi.n	801335a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8013356:	2a08      	cmp	r2, #8
 8013358:	d1ae      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801335a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801335c:	4770      	bx	lr
 801335e:	2a2f      	cmp	r2, #47	; 0x2f
 8013360:	d024      	beq.n	80133ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8013362:	d80d      	bhi.n	8013380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8013364:	2a2d      	cmp	r2, #45	; 0x2d
 8013366:	d014      	beq.n	8013392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8013368:	d826      	bhi.n	80133b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801336a:	2a2c      	cmp	r2, #44	; 0x2c
 801336c:	d1a4      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801336e:	684b      	ldr	r3, [r1, #4]
 8013370:	781b      	ldrb	r3, [r3, #0]
 8013372:	2b01      	cmp	r3, #1
 8013374:	d018      	beq.n	80133a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8013376:	d324      	bcc.n	80133c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8013378:	2b02      	cmp	r3, #2
 801337a:	d19d      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801337c:	68c0      	ldr	r0, [r0, #12]
 801337e:	4770      	bx	lr
 8013380:	2a31      	cmp	r2, #49	; 0x31
 8013382:	d004      	beq.n	801338e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8013384:	d327      	bcc.n	80133d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013386:	2a32      	cmp	r2, #50	; 0x32
 8013388:	d025      	beq.n	80133d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801338a:	2a33      	cmp	r2, #51	; 0x33
 801338c:	d194      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801338e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8013390:	4770      	bx	lr
 8013392:	684b      	ldr	r3, [r1, #4]
 8013394:	781b      	ldrb	r3, [r3, #0]
 8013396:	2b01      	cmp	r3, #1
 8013398:	d004      	beq.n	80133a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801339a:	d30b      	bcc.n	80133b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801339c:	2b02      	cmp	r3, #2
 801339e:	d18b      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80133a0:	6940      	ldr	r0, [r0, #20]
 80133a2:	4770      	bx	lr
 80133a4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80133a6:	4770      	bx	lr
 80133a8:	69c0      	ldr	r0, [r0, #28]
 80133aa:	4770      	bx	lr
 80133ac:	684b      	ldr	r3, [r1, #4]
 80133ae:	781b      	ldrb	r3, [r3, #0]
 80133b0:	2b00      	cmp	r3, #0
 80133b2:	d181      	bne.n	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80133b4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80133b6:	4770      	bx	lr
 80133b8:	684b      	ldr	r3, [r1, #4]
 80133ba:	781b      	ldrb	r3, [r3, #0]
 80133bc:	2b00      	cmp	r3, #0
 80133be:	f47f af7b 	bne.w	80132b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80133c2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80133c4:	4770      	bx	lr
 80133c6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80133c8:	4770      	bx	lr
 80133ca:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80133cc:	4770      	bx	lr
 80133ce:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80133d0:	4770      	bx	lr
 80133d2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80133d4:	4770      	bx	lr
 80133d6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80133d8:	4770      	bx	lr

080133da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80133da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133de:	b087      	sub	sp, #28
 80133e0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80133e2:	9205      	str	r2, [sp, #20]
 80133e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80133e8:	9101      	str	r1, [sp, #4]
 80133ea:	9202      	str	r2, [sp, #8]
 80133ec:	6841      	ldr	r1, [r0, #4]
 80133ee:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80133f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80133f6:	fb01 2404 	mla	r4, r1, r4, r2
 80133fa:	6802      	ldr	r2, [r0, #0]
 80133fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013400:	f8de 2000 	ldr.w	r2, [lr]
 8013404:	9203      	str	r2, [sp, #12]
 8013406:	f8de 2004 	ldr.w	r2, [lr, #4]
 801340a:	3204      	adds	r2, #4
 801340c:	9204      	str	r2, [sp, #16]
 801340e:	9a02      	ldr	r2, [sp, #8]
 8013410:	43d6      	mvns	r6, r2
 8013412:	b2f6      	uxtb	r6, r6
 8013414:	9a01      	ldr	r2, [sp, #4]
 8013416:	2a00      	cmp	r2, #0
 8013418:	dc03      	bgt.n	8013422 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801341a:	9a05      	ldr	r2, [sp, #20]
 801341c:	2a00      	cmp	r2, #0
 801341e:	f340 8129 	ble.w	8013674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013422:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013424:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013428:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801342c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801342e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013432:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013436:	2b00      	cmp	r3, #0
 8013438:	dd0e      	ble.n	8013458 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801343a:	1408      	asrs	r0, r1, #16
 801343c:	d405      	bmi.n	801344a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801343e:	4560      	cmp	r0, ip
 8013440:	da03      	bge.n	801344a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013442:	1410      	asrs	r0, r2, #16
 8013444:	d401      	bmi.n	801344a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013446:	42b8      	cmp	r0, r7
 8013448:	db07      	blt.n	801345a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801344a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801344c:	3b01      	subs	r3, #1
 801344e:	3402      	adds	r4, #2
 8013450:	4401      	add	r1, r0
 8013452:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013454:	4402      	add	r2, r0
 8013456:	e7ee      	b.n	8013436 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013458:	d071      	beq.n	801353e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801345a:	1e58      	subs	r0, r3, #1
 801345c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801345e:	fb05 1500 	mla	r5, r5, r0, r1
 8013462:	142d      	asrs	r5, r5, #16
 8013464:	d45f      	bmi.n	8013526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013466:	4565      	cmp	r5, ip
 8013468:	da5d      	bge.n	8013526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801346a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801346c:	fb05 2000 	mla	r0, r5, r0, r2
 8013470:	1400      	asrs	r0, r0, #16
 8013472:	d458      	bmi.n	8013526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013474:	42b8      	cmp	r0, r7
 8013476:	da56      	bge.n	8013526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013478:	4699      	mov	r9, r3
 801347a:	46a2      	mov	sl, r4
 801347c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013480:	f1b9 0f00 	cmp.w	r9, #0
 8013484:	dd57      	ble.n	8013536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013486:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801348a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801348e:	9803      	ldr	r0, [sp, #12]
 8013490:	140d      	asrs	r5, r1, #16
 8013492:	f109 39ff 	add.w	r9, r9, #4294967295
 8013496:	fb07 000c 	mla	r0, r7, ip, r0
 801349a:	5d40      	ldrb	r0, [r0, r5]
 801349c:	9d04      	ldr	r5, [sp, #16]
 801349e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80134a2:	f8ba 5000 	ldrh.w	r5, [sl]
 80134a6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80134aa:	122f      	asrs	r7, r5, #8
 80134ac:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80134b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80134b4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80134b8:	00ed      	lsls	r5, r5, #3
 80134ba:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80134be:	fb17 f706 	smulbb	r7, r7, r6
 80134c2:	b2ed      	uxtb	r5, r5
 80134c4:	fb18 f806 	smulbb	r8, r8, r6
 80134c8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80134cc:	10c7      	asrs	r7, r0, #3
 80134ce:	fb15 f506 	smulbb	r5, r5, r6
 80134d2:	00c0      	lsls	r0, r0, #3
 80134d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80134d8:	fa1f fc8c 	uxth.w	ip, ip
 80134dc:	b2c0      	uxtb	r0, r0
 80134de:	fb07 870b 	mla	r7, r7, fp, r8
 80134e2:	fb00 500b 	mla	r0, r0, fp, r5
 80134e6:	f10c 0501 	add.w	r5, ip, #1
 80134ea:	b2bf      	uxth	r7, r7
 80134ec:	b280      	uxth	r0, r0
 80134ee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80134f2:	f107 0801 	add.w	r8, r7, #1
 80134f6:	1c45      	adds	r5, r0, #1
 80134f8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80134fc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013500:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013504:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013506:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801350a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801350e:	4401      	add	r1, r0
 8013510:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013514:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013516:	ea45 0c0c 	orr.w	ip, r5, ip
 801351a:	4402      	add	r2, r0
 801351c:	ea4c 0c08 	orr.w	ip, ip, r8
 8013520:	f82a cb02 	strh.w	ip, [sl], #2
 8013524:	e7ac      	b.n	8013480 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013526:	f04f 0800 	mov.w	r8, #0
 801352a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801352e:	eb03 0008 	add.w	r0, r3, r8
 8013532:	2800      	cmp	r0, #0
 8013534:	dc41      	bgt.n	80135ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013536:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801353a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801353e:	9b01      	ldr	r3, [sp, #4]
 8013540:	2b00      	cmp	r3, #0
 8013542:	f340 8097 	ble.w	8013674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013546:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801354a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801354c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013550:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013554:	eef0 6a62 	vmov.f32	s13, s5
 8013558:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801355c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013560:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013564:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013568:	eef0 6a43 	vmov.f32	s13, s6
 801356c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013570:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8013574:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013578:	ee61 7a27 	vmul.f32	s15, s2, s15
 801357c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013580:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013584:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013588:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801358c:	ee12 2a90 	vmov	r2, s5
 8013590:	eef0 2a47 	vmov.f32	s5, s14
 8013594:	fb92 f3f3 	sdiv	r3, r2, r3
 8013598:	ee13 2a10 	vmov	r2, s6
 801359c:	9313      	str	r3, [sp, #76]	; 0x4c
 801359e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135a0:	eeb0 3a67 	vmov.f32	s6, s15
 80135a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80135a8:	9314      	str	r3, [sp, #80]	; 0x50
 80135aa:	9b01      	ldr	r3, [sp, #4]
 80135ac:	9a05      	ldr	r2, [sp, #20]
 80135ae:	3b01      	subs	r3, #1
 80135b0:	9301      	str	r3, [sp, #4]
 80135b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135b4:	bf08      	it	eq
 80135b6:	4613      	moveq	r3, r2
 80135b8:	e72c      	b.n	8013414 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80135ba:	140f      	asrs	r7, r1, #16
 80135bc:	d453      	bmi.n	8013666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80135be:	f8de 5008 	ldr.w	r5, [lr, #8]
 80135c2:	42bd      	cmp	r5, r7
 80135c4:	dd4f      	ble.n	8013666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80135c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80135ca:	d44c      	bmi.n	8013666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80135cc:	f8de 000c 	ldr.w	r0, [lr, #12]
 80135d0:	4560      	cmp	r0, ip
 80135d2:	dd48      	ble.n	8013666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80135d4:	9803      	ldr	r0, [sp, #12]
 80135d6:	b22d      	sxth	r5, r5
 80135d8:	fb0c 0505 	mla	r5, ip, r5, r0
 80135dc:	5de8      	ldrb	r0, [r5, r7]
 80135de:	9d04      	ldr	r5, [sp, #16]
 80135e0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80135e4:	f06f 0501 	mvn.w	r5, #1
 80135e8:	fb05 fb08 	mul.w	fp, r5, r8
 80135ec:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80135f0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80135f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80135f8:	122f      	asrs	r7, r5, #8
 80135fa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80135fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013602:	00ed      	lsls	r5, r5, #3
 8013604:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013608:	fb17 f706 	smulbb	r7, r7, r6
 801360c:	b2ed      	uxtb	r5, r5
 801360e:	fb19 f906 	smulbb	r9, r9, r6
 8013612:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013616:	10c7      	asrs	r7, r0, #3
 8013618:	fb15 f506 	smulbb	r5, r5, r6
 801361c:	00c0      	lsls	r0, r0, #3
 801361e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013622:	fa1f fc8c 	uxth.w	ip, ip
 8013626:	b2c0      	uxtb	r0, r0
 8013628:	fb07 970a 	mla	r7, r7, sl, r9
 801362c:	fb00 500a 	mla	r0, r0, sl, r5
 8013630:	f10c 0501 	add.w	r5, ip, #1
 8013634:	b2bf      	uxth	r7, r7
 8013636:	b280      	uxth	r0, r0
 8013638:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801363c:	f107 0901 	add.w	r9, r7, #1
 8013640:	1c45      	adds	r5, r0, #1
 8013642:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013646:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801364a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801364e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013652:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013656:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801365a:	ea45 0c0c 	orr.w	ip, r5, ip
 801365e:	ea4c 0c09 	orr.w	ip, ip, r9
 8013662:	f824 c00b 	strh.w	ip, [r4, fp]
 8013666:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013668:	f108 38ff 	add.w	r8, r8, #4294967295
 801366c:	4401      	add	r1, r0
 801366e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013670:	4402      	add	r2, r0
 8013672:	e75c      	b.n	801352e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013674:	b007      	add	sp, #28
 8013676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801367a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801367a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801367e:	b085      	sub	sp, #20
 8013680:	4693      	mov	fp, r2
 8013682:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013686:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013688:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801368a:	6870      	ldr	r0, [r6, #4]
 801368c:	9100      	str	r1, [sp, #0]
 801368e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013692:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8013696:	fb00 2404 	mla	r4, r0, r4, r2
 801369a:	6832      	ldr	r2, [r6, #0]
 801369c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80136a0:	682a      	ldr	r2, [r5, #0]
 80136a2:	9201      	str	r2, [sp, #4]
 80136a4:	686a      	ldr	r2, [r5, #4]
 80136a6:	3204      	adds	r2, #4
 80136a8:	9202      	str	r2, [sp, #8]
 80136aa:	9a00      	ldr	r2, [sp, #0]
 80136ac:	2a00      	cmp	r2, #0
 80136ae:	dc03      	bgt.n	80136b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80136b0:	f1bb 0f00 	cmp.w	fp, #0
 80136b4:	f340 80a0 	ble.w	80137f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80136b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80136ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80136be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80136c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80136c4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80136c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80136cc:	2b00      	cmp	r3, #0
 80136ce:	dd0c      	ble.n	80136ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80136d0:	1406      	asrs	r6, r0, #16
 80136d2:	d405      	bmi.n	80136e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80136d4:	454e      	cmp	r6, r9
 80136d6:	da03      	bge.n	80136e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80136d8:	1416      	asrs	r6, r2, #16
 80136da:	d401      	bmi.n	80136e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80136dc:	4546      	cmp	r6, r8
 80136de:	db05      	blt.n	80136ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80136e0:	4470      	add	r0, lr
 80136e2:	4462      	add	r2, ip
 80136e4:	3b01      	subs	r3, #1
 80136e6:	3402      	adds	r4, #2
 80136e8:	e7f0      	b.n	80136cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80136ea:	d00f      	beq.n	801370c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80136ec:	1e5e      	subs	r6, r3, #1
 80136ee:	fb0e 0706 	mla	r7, lr, r6, r0
 80136f2:	143f      	asrs	r7, r7, #16
 80136f4:	d541      	bpl.n	801377a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80136f6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80136fa:	4698      	mov	r8, r3
 80136fc:	9603      	str	r6, [sp, #12]
 80136fe:	f1b8 0f00 	cmp.w	r8, #0
 8013702:	dc59      	bgt.n	80137b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013704:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013708:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801370c:	9b00      	ldr	r3, [sp, #0]
 801370e:	2b00      	cmp	r3, #0
 8013710:	dd72      	ble.n	80137f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013712:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013716:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013718:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801371c:	eeb0 6a62 	vmov.f32	s12, s5
 8013720:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013724:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013728:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801372c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013730:	eeb0 6a43 	vmov.f32	s12, s6
 8013734:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013738:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801373c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013740:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013744:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013748:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801374c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013750:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013754:	ee12 2a90 	vmov	r2, s5
 8013758:	eef0 2a47 	vmov.f32	s5, s14
 801375c:	fb92 fef3 	sdiv	lr, r2, r3
 8013760:	ee13 2a10 	vmov	r2, s6
 8013764:	eeb0 3a67 	vmov.f32	s6, s15
 8013768:	fb92 fcf3 	sdiv	ip, r2, r3
 801376c:	9b00      	ldr	r3, [sp, #0]
 801376e:	3b01      	subs	r3, #1
 8013770:	9300      	str	r3, [sp, #0]
 8013772:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013774:	bf08      	it	eq
 8013776:	465b      	moveq	r3, fp
 8013778:	e797      	b.n	80136aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801377a:	454f      	cmp	r7, r9
 801377c:	dabb      	bge.n	80136f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801377e:	fb0c 2606 	mla	r6, ip, r6, r2
 8013782:	1436      	asrs	r6, r6, #16
 8013784:	d4b7      	bmi.n	80136f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013786:	4546      	cmp	r6, r8
 8013788:	dab5      	bge.n	80136f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801378a:	461e      	mov	r6, r3
 801378c:	46a0      	mov	r8, r4
 801378e:	2e00      	cmp	r6, #0
 8013790:	ddb8      	ble.n	8013704 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013792:	1417      	asrs	r7, r2, #16
 8013794:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013798:	9901      	ldr	r1, [sp, #4]
 801379a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801379e:	4462      	add	r2, ip
 80137a0:	4470      	add	r0, lr
 80137a2:	fb0a 1707 	mla	r7, sl, r7, r1
 80137a6:	9902      	ldr	r1, [sp, #8]
 80137a8:	3e01      	subs	r6, #1
 80137aa:	f817 7009 	ldrb.w	r7, [r7, r9]
 80137ae:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80137b2:	f828 7b02 	strh.w	r7, [r8], #2
 80137b6:	e7ea      	b.n	801378e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80137b8:	ea5f 4920 	movs.w	r9, r0, asr #16
 80137bc:	d417      	bmi.n	80137ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80137be:	68ae      	ldr	r6, [r5, #8]
 80137c0:	454e      	cmp	r6, r9
 80137c2:	dd14      	ble.n	80137ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80137c4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80137c8:	d411      	bmi.n	80137ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80137ca:	68ef      	ldr	r7, [r5, #12]
 80137cc:	4557      	cmp	r7, sl
 80137ce:	dd0e      	ble.n	80137ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80137d0:	9f01      	ldr	r7, [sp, #4]
 80137d2:	b236      	sxth	r6, r6
 80137d4:	f06f 0101 	mvn.w	r1, #1
 80137d8:	fb0a 7606 	mla	r6, sl, r6, r7
 80137dc:	9f02      	ldr	r7, [sp, #8]
 80137de:	f816 6009 	ldrb.w	r6, [r6, r9]
 80137e2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80137e6:	fb01 f608 	mul.w	r6, r1, r8
 80137ea:	9903      	ldr	r1, [sp, #12]
 80137ec:	538f      	strh	r7, [r1, r6]
 80137ee:	4470      	add	r0, lr
 80137f0:	4462      	add	r2, ip
 80137f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80137f6:	e782      	b.n	80136fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80137f8:	b005      	add	sp, #20
 80137fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080137fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80137fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013802:	b087      	sub	sp, #28
 8013804:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013806:	9205      	str	r2, [sp, #20]
 8013808:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801380c:	9102      	str	r1, [sp, #8]
 801380e:	9203      	str	r2, [sp, #12]
 8013810:	6861      	ldr	r1, [r4, #4]
 8013812:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013816:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801381a:	fb01 2000 	mla	r0, r1, r0, r2
 801381e:	6822      	ldr	r2, [r4, #0]
 8013820:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013824:	9200      	str	r2, [sp, #0]
 8013826:	f8dc 2000 	ldr.w	r2, [ip]
 801382a:	9204      	str	r2, [sp, #16]
 801382c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013830:	3204      	adds	r2, #4
 8013832:	9201      	str	r2, [sp, #4]
 8013834:	9a03      	ldr	r2, [sp, #12]
 8013836:	43d5      	mvns	r5, r2
 8013838:	b2ed      	uxtb	r5, r5
 801383a:	9a02      	ldr	r2, [sp, #8]
 801383c:	2a00      	cmp	r2, #0
 801383e:	dc03      	bgt.n	8013848 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013840:	9a05      	ldr	r2, [sp, #20]
 8013842:	2a00      	cmp	r2, #0
 8013844:	f340 812c 	ble.w	8013aa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013848:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801384a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801384e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013852:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013854:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013858:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801385c:	2b00      	cmp	r3, #0
 801385e:	dd10      	ble.n	8013882 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013860:	140c      	asrs	r4, r1, #16
 8013862:	d405      	bmi.n	8013870 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013864:	4574      	cmp	r4, lr
 8013866:	da03      	bge.n	8013870 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013868:	1414      	asrs	r4, r2, #16
 801386a:	d401      	bmi.n	8013870 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801386c:	42bc      	cmp	r4, r7
 801386e:	db09      	blt.n	8013884 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013870:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013872:	3b01      	subs	r3, #1
 8013874:	9800      	ldr	r0, [sp, #0]
 8013876:	4421      	add	r1, r4
 8013878:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801387a:	3002      	adds	r0, #2
 801387c:	4422      	add	r2, r4
 801387e:	9000      	str	r0, [sp, #0]
 8013880:	e7ec      	b.n	801385c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013882:	d071      	beq.n	8013968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013884:	1e5c      	subs	r4, r3, #1
 8013886:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013888:	fb06 1604 	mla	r6, r6, r4, r1
 801388c:	1436      	asrs	r6, r6, #16
 801388e:	d45d      	bmi.n	801394c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013890:	4576      	cmp	r6, lr
 8013892:	da5b      	bge.n	801394c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013894:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8013896:	fb06 2404 	mla	r4, r6, r4, r2
 801389a:	1424      	asrs	r4, r4, #16
 801389c:	d456      	bmi.n	801394c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801389e:	42bc      	cmp	r4, r7
 80138a0:	da54      	bge.n	801394c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80138a2:	4698      	mov	r8, r3
 80138a4:	f8dd 9000 	ldr.w	r9, [sp]
 80138a8:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80138ac:	f1b8 0f00 	cmp.w	r8, #0
 80138b0:	dd54      	ble.n	801395c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80138b2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80138b6:	1414      	asrs	r4, r2, #16
 80138b8:	9804      	ldr	r0, [sp, #16]
 80138ba:	140e      	asrs	r6, r1, #16
 80138bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80138c0:	fb07 0404 	mla	r4, r7, r4, r0
 80138c4:	9801      	ldr	r0, [sp, #4]
 80138c6:	f814 e006 	ldrb.w	lr, [r4, r6]
 80138ca:	f8b9 4000 	ldrh.w	r4, [r9]
 80138ce:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80138d2:	1227      	asrs	r7, r4, #8
 80138d4:	eb00 0b0e 	add.w	fp, r0, lr
 80138d8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80138dc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80138e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80138e2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80138e6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80138ea:	4401      	add	r1, r0
 80138ec:	fb16 f60a 	smulbb	r6, r6, sl
 80138f0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80138f2:	fb1b fb0a 	smulbb	fp, fp, sl
 80138f6:	fb07 6705 	mla	r7, r7, r5, r6
 80138fa:	10e6      	asrs	r6, r4, #3
 80138fc:	00e4      	lsls	r4, r4, #3
 80138fe:	4402      	add	r2, r0
 8013900:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013904:	b2bf      	uxth	r7, r7
 8013906:	b2e4      	uxtb	r4, r4
 8013908:	fb06 b605 	mla	r6, r6, r5, fp
 801390c:	fb14 f405 	smulbb	r4, r4, r5
 8013910:	b2b6      	uxth	r6, r6
 8013912:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013916:	1c7c      	adds	r4, r7, #1
 8013918:	f106 0b01 	add.w	fp, r6, #1
 801391c:	fa1f fe8e 	uxth.w	lr, lr
 8013920:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013924:	f10e 0401 	add.w	r4, lr, #1
 8013928:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801392c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013930:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013934:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013938:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801393c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013940:	4327      	orrs	r7, r4
 8013942:	ea47 070b 	orr.w	r7, r7, fp
 8013946:	f829 7b02 	strh.w	r7, [r9], #2
 801394a:	e7af      	b.n	80138ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801394c:	f04f 0e00 	mov.w	lr, #0
 8013950:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013954:	eb03 040e 	add.w	r4, r3, lr
 8013958:	2c00      	cmp	r4, #0
 801395a:	dc43      	bgt.n	80139e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801395c:	9a00      	ldr	r2, [sp, #0]
 801395e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013962:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013966:	9300      	str	r3, [sp, #0]
 8013968:	9b02      	ldr	r3, [sp, #8]
 801396a:	2b00      	cmp	r3, #0
 801396c:	f340 8098 	ble.w	8013aa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013970:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013974:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013976:	ee30 0a04 	vadd.f32	s0, s0, s8
 801397a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801397e:	eef0 6a62 	vmov.f32	s13, s5
 8013982:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013986:	ee31 1a05 	vadd.f32	s2, s2, s10
 801398a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801398e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013992:	eef0 6a43 	vmov.f32	s13, s6
 8013996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801399a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801399e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80139a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80139a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80139aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80139ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80139b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80139b6:	ee12 2a90 	vmov	r2, s5
 80139ba:	eef0 2a47 	vmov.f32	s5, s14
 80139be:	fb92 f3f3 	sdiv	r3, r2, r3
 80139c2:	ee13 2a10 	vmov	r2, s6
 80139c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80139c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139ca:	eeb0 3a67 	vmov.f32	s6, s15
 80139ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80139d2:	9314      	str	r3, [sp, #80]	; 0x50
 80139d4:	9b02      	ldr	r3, [sp, #8]
 80139d6:	9a05      	ldr	r2, [sp, #20]
 80139d8:	3b01      	subs	r3, #1
 80139da:	9302      	str	r3, [sp, #8]
 80139dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139de:	bf08      	it	eq
 80139e0:	4613      	moveq	r3, r2
 80139e2:	e72a      	b.n	801383a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80139e4:	140f      	asrs	r7, r1, #16
 80139e6:	d454      	bmi.n	8013a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80139e8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80139ec:	42be      	cmp	r6, r7
 80139ee:	dd50      	ble.n	8013a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80139f0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80139f4:	d44d      	bmi.n	8013a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80139f6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80139fa:	4544      	cmp	r4, r8
 80139fc:	dd49      	ble.n	8013a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80139fe:	9c04      	ldr	r4, [sp, #16]
 8013a00:	b236      	sxth	r6, r6
 8013a02:	f06f 0001 	mvn.w	r0, #1
 8013a06:	fb08 4606 	mla	r6, r8, r6, r4
 8013a0a:	9c01      	ldr	r4, [sp, #4]
 8013a0c:	fb00 fa0e 	mul.w	sl, r0, lr
 8013a10:	9800      	ldr	r0, [sp, #0]
 8013a12:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013a16:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013a1a:	eb04 0b08 	add.w	fp, r4, r8
 8013a1e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013a22:	9801      	ldr	r0, [sp, #4]
 8013a24:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013a28:	1227      	asrs	r7, r4, #8
 8013a2a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013a2e:	fb16 f609 	smulbb	r6, r6, r9
 8013a32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013a36:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013a3a:	fb1b fb09 	smulbb	fp, fp, r9
 8013a3e:	fb07 6705 	mla	r7, r7, r5, r6
 8013a42:	10e6      	asrs	r6, r4, #3
 8013a44:	00e4      	lsls	r4, r4, #3
 8013a46:	9800      	ldr	r0, [sp, #0]
 8013a48:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a4c:	b2bf      	uxth	r7, r7
 8013a4e:	b2e4      	uxtb	r4, r4
 8013a50:	fb06 b605 	mla	r6, r6, r5, fp
 8013a54:	fb14 f405 	smulbb	r4, r4, r5
 8013a58:	b2b6      	uxth	r6, r6
 8013a5a:	fb08 4809 	mla	r8, r8, r9, r4
 8013a5e:	1c7c      	adds	r4, r7, #1
 8013a60:	f106 0b01 	add.w	fp, r6, #1
 8013a64:	fa1f f888 	uxth.w	r8, r8
 8013a68:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013a6c:	f108 0401 	add.w	r4, r8, #1
 8013a70:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013a74:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013a78:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013a7c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013a80:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013a84:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013a88:	4327      	orrs	r7, r4
 8013a8a:	ea47 070b 	orr.w	r7, r7, fp
 8013a8e:	f820 700a 	strh.w	r7, [r0, sl]
 8013a92:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013a94:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013a98:	4401      	add	r1, r0
 8013a9a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013a9c:	4402      	add	r2, r0
 8013a9e:	e759      	b.n	8013954 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013aa0:	b007      	add	sp, #28
 8013aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013aa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013aac:	b085      	sub	sp, #20
 8013aae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013ab2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013ab4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013ab6:	9203      	str	r2, [sp, #12]
 8013ab8:	6870      	ldr	r0, [r6, #4]
 8013aba:	686f      	ldr	r7, [r5, #4]
 8013abc:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8013ac0:	3704      	adds	r7, #4
 8013ac2:	9101      	str	r1, [sp, #4]
 8013ac4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013ac8:	fb00 2404 	mla	r4, r0, r4, r2
 8013acc:	6832      	ldr	r2, [r6, #0]
 8013ace:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ad2:	682a      	ldr	r2, [r5, #0]
 8013ad4:	9202      	str	r2, [sp, #8]
 8013ad6:	9a01      	ldr	r2, [sp, #4]
 8013ad8:	2a00      	cmp	r2, #0
 8013ada:	dc03      	bgt.n	8013ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013adc:	9a03      	ldr	r2, [sp, #12]
 8013ade:	2a00      	cmp	r2, #0
 8013ae0:	f340 80cc 	ble.w	8013c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013ae4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013ae6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013aea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013aee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013af0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013af4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013af8:	2b00      	cmp	r3, #0
 8013afa:	dd0d      	ble.n	8013b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013afc:	1406      	asrs	r6, r0, #16
 8013afe:	d405      	bmi.n	8013b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013b00:	454e      	cmp	r6, r9
 8013b02:	da03      	bge.n	8013b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013b04:	1416      	asrs	r6, r2, #16
 8013b06:	d401      	bmi.n	8013b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013b08:	4546      	cmp	r6, r8
 8013b0a:	db06      	blt.n	8013b1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013b0c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013b0e:	4460      	add	r0, ip
 8013b10:	3b01      	subs	r3, #1
 8013b12:	3402      	adds	r4, #2
 8013b14:	4432      	add	r2, r6
 8013b16:	e7ef      	b.n	8013af8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013b18:	d00f      	beq.n	8013b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013b1a:	1e5e      	subs	r6, r3, #1
 8013b1c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013b20:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013b24:	d543      	bpl.n	8013bae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013b26:	4698      	mov	r8, r3
 8013b28:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013b2c:	f1b8 0f00 	cmp.w	r8, #0
 8013b30:	dc71      	bgt.n	8013c16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013b32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013b36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b3a:	9b01      	ldr	r3, [sp, #4]
 8013b3c:	2b00      	cmp	r3, #0
 8013b3e:	f340 809d 	ble.w	8013c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013b42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013b46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013b4c:	eeb0 6a62 	vmov.f32	s12, s5
 8013b50:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013b54:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013b58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013b60:	eeb0 6a43 	vmov.f32	s12, s6
 8013b64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b68:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013b6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013b70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013b74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013b7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013b84:	ee12 2a90 	vmov	r2, s5
 8013b88:	eef0 2a47 	vmov.f32	s5, s14
 8013b8c:	fb92 fcf3 	sdiv	ip, r2, r3
 8013b90:	ee13 2a10 	vmov	r2, s6
 8013b94:	eeb0 3a67 	vmov.f32	s6, s15
 8013b98:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b9c:	9312      	str	r3, [sp, #72]	; 0x48
 8013b9e:	9b01      	ldr	r3, [sp, #4]
 8013ba0:	9a03      	ldr	r2, [sp, #12]
 8013ba2:	3b01      	subs	r3, #1
 8013ba4:	9301      	str	r3, [sp, #4]
 8013ba6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ba8:	bf08      	it	eq
 8013baa:	4613      	moveq	r3, r2
 8013bac:	e793      	b.n	8013ad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013bae:	45ce      	cmp	lr, r9
 8013bb0:	dab9      	bge.n	8013b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013bb2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013bb4:	fb01 2606 	mla	r6, r1, r6, r2
 8013bb8:	1436      	asrs	r6, r6, #16
 8013bba:	d4b4      	bmi.n	8013b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013bbc:	4546      	cmp	r6, r8
 8013bbe:	dab2      	bge.n	8013b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013bc0:	4698      	mov	r8, r3
 8013bc2:	46a2      	mov	sl, r4
 8013bc4:	f1b8 0f00 	cmp.w	r8, #0
 8013bc8:	ddb3      	ble.n	8013b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013bca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013bce:	1416      	asrs	r6, r2, #16
 8013bd0:	9902      	ldr	r1, [sp, #8]
 8013bd2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013bd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8013bda:	4460      	add	r0, ip
 8013bdc:	fb09 1606 	mla	r6, r9, r6, r1
 8013be0:	4928      	ldr	r1, [pc, #160]	; (8013c84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013be2:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013be6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013bea:	eb07 0b0e 	add.w	fp, r7, lr
 8013bee:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013bf2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8013bf6:	00f6      	lsls	r6, r6, #3
 8013bf8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013bfc:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013bfe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013c02:	440a      	add	r2, r1
 8013c04:	ea49 0606 	orr.w	r6, r9, r6
 8013c08:	f817 900e 	ldrb.w	r9, [r7, lr]
 8013c0c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013c10:	f82a 6b02 	strh.w	r6, [sl], #2
 8013c14:	e7d6      	b.n	8013bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013c16:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013c1a:	d429      	bmi.n	8013c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013c1c:	68ae      	ldr	r6, [r5, #8]
 8013c1e:	454e      	cmp	r6, r9
 8013c20:	dd26      	ble.n	8013c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013c22:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8013c26:	d423      	bmi.n	8013c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013c28:	68e9      	ldr	r1, [r5, #12]
 8013c2a:	4559      	cmp	r1, fp
 8013c2c:	dd20      	ble.n	8013c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013c2e:	fa0f fe86 	sxth.w	lr, r6
 8013c32:	9902      	ldr	r1, [sp, #8]
 8013c34:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8013c38:	f06f 0101 	mvn.w	r1, #1
 8013c3c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8013c40:	fb01 f908 	mul.w	r9, r1, r8
 8013c44:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8013c48:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013c4c:	eb07 060e 	add.w	r6, r7, lr
 8013c50:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013c54:	7876      	ldrb	r6, [r6, #1]
 8013c56:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8013c5a:	00f6      	lsls	r6, r6, #3
 8013c5c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013c60:	ea4b 0606 	orr.w	r6, fp, r6
 8013c64:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8013c68:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013c6c:	f82a 6009 	strh.w	r6, [sl, r9]
 8013c70:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013c72:	4460      	add	r0, ip
 8013c74:	f108 38ff 	add.w	r8, r8, #4294967295
 8013c78:	440a      	add	r2, r1
 8013c7a:	e757      	b.n	8013b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013c7c:	b005      	add	sp, #20
 8013c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c82:	bf00      	nop
 8013c84:	fffff800 	.word	0xfffff800

08013c88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c8c:	b087      	sub	sp, #28
 8013c8e:	468b      	mov	fp, r1
 8013c90:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013c94:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013c96:	9204      	str	r2, [sp, #16]
 8013c98:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013c9c:	6841      	ldr	r1, [r0, #4]
 8013c9e:	9205      	str	r2, [sp, #20]
 8013ca0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013ca4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013ca8:	fb01 2404 	mla	r4, r1, r4, r2
 8013cac:	6802      	ldr	r2, [r0, #0]
 8013cae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013cb2:	f8dc 2000 	ldr.w	r2, [ip]
 8013cb6:	9201      	str	r2, [sp, #4]
 8013cb8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013cbc:	3204      	adds	r2, #4
 8013cbe:	9202      	str	r2, [sp, #8]
 8013cc0:	f1bb 0f00 	cmp.w	fp, #0
 8013cc4:	dc03      	bgt.n	8013cce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013cc6:	9a04      	ldr	r2, [sp, #16]
 8013cc8:	2a00      	cmp	r2, #0
 8013cca:	f340 8138 	ble.w	8013f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013cce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013cd0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013cd4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013cd8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013cda:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013cde:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013ce2:	2b00      	cmp	r3, #0
 8013ce4:	dd0e      	ble.n	8013d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013ce6:	1402      	asrs	r2, r0, #16
 8013ce8:	d405      	bmi.n	8013cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013cea:	42ba      	cmp	r2, r7
 8013cec:	da03      	bge.n	8013cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013cee:	140a      	asrs	r2, r1, #16
 8013cf0:	d401      	bmi.n	8013cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013cf2:	42b2      	cmp	r2, r6
 8013cf4:	db07      	blt.n	8013d06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013cf6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013cf8:	3b01      	subs	r3, #1
 8013cfa:	3402      	adds	r4, #2
 8013cfc:	4410      	add	r0, r2
 8013cfe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013d00:	4411      	add	r1, r2
 8013d02:	e7ee      	b.n	8013ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013d04:	d019      	beq.n	8013d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013d06:	1e5a      	subs	r2, r3, #1
 8013d08:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013d0a:	fb05 0502 	mla	r5, r5, r2, r0
 8013d0e:	142d      	asrs	r5, r5, #16
 8013d10:	d409      	bmi.n	8013d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013d12:	42bd      	cmp	r5, r7
 8013d14:	da07      	bge.n	8013d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013d16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013d18:	fb05 1202 	mla	r2, r5, r2, r1
 8013d1c:	1412      	asrs	r2, r2, #16
 8013d1e:	d402      	bmi.n	8013d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013d20:	42b2      	cmp	r2, r6
 8013d22:	f2c0 80ac 	blt.w	8013e7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8013d26:	f04f 0e00 	mov.w	lr, #0
 8013d2a:	eb03 020e 	add.w	r2, r3, lr
 8013d2e:	2a00      	cmp	r2, #0
 8013d30:	dc3e      	bgt.n	8013db0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013d32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013d3a:	f1bb 0f00 	cmp.w	fp, #0
 8013d3e:	f340 80fe 	ble.w	8013f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013d42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d4c:	f1bb 0b01 	subs.w	fp, fp, #1
 8013d50:	eeb0 6a62 	vmov.f32	s12, s5
 8013d54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013d58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d60:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013d64:	eeb0 6a43 	vmov.f32	s12, s6
 8013d68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d6c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013d70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d88:	ee12 2a90 	vmov	r2, s5
 8013d8c:	eef0 2a47 	vmov.f32	s5, s14
 8013d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d94:	ee13 2a10 	vmov	r2, s6
 8013d98:	9313      	str	r3, [sp, #76]	; 0x4c
 8013d9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d9c:	eeb0 3a67 	vmov.f32	s6, s15
 8013da0:	fb92 f3f3 	sdiv	r3, r2, r3
 8013da4:	9a04      	ldr	r2, [sp, #16]
 8013da6:	9314      	str	r3, [sp, #80]	; 0x50
 8013da8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013daa:	bf08      	it	eq
 8013dac:	4613      	moveq	r3, r2
 8013dae:	e787      	b.n	8013cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013db0:	1406      	asrs	r6, r0, #16
 8013db2:	d45d      	bmi.n	8013e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013db4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013db8:	42b5      	cmp	r5, r6
 8013dba:	dd59      	ble.n	8013e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013dbc:	140f      	asrs	r7, r1, #16
 8013dbe:	d457      	bmi.n	8013e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013dc0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013dc4:	42ba      	cmp	r2, r7
 8013dc6:	dd53      	ble.n	8013e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013dc8:	9a01      	ldr	r2, [sp, #4]
 8013dca:	b22d      	sxth	r5, r5
 8013dcc:	fb07 2505 	mla	r5, r7, r5, r2
 8013dd0:	5daa      	ldrb	r2, [r5, r6]
 8013dd2:	9d02      	ldr	r5, [sp, #8]
 8013dd4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013dd8:	0e2e      	lsrs	r6, r5, #24
 8013dda:	d049      	beq.n	8013e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013ddc:	f06f 0201 	mvn.w	r2, #1
 8013de0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013de4:	fb02 f20e 	mul.w	r2, r2, lr
 8013de8:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013dec:	9203      	str	r2, [sp, #12]
 8013dee:	9a05      	ldr	r2, [sp, #20]
 8013df0:	ea4f 2728 	mov.w	r7, r8, asr #8
 8013df4:	4356      	muls	r6, r2
 8013df6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013dfa:	1c72      	adds	r2, r6, #1
 8013dfc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013e00:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013e04:	b2ed      	uxtb	r5, r5
 8013e06:	1212      	asrs	r2, r2, #8
 8013e08:	fa1f f982 	uxth.w	r9, r2
 8013e0c:	43d2      	mvns	r2, r2
 8013e0e:	fb16 f609 	smulbb	r6, r6, r9
 8013e12:	b2d2      	uxtb	r2, r2
 8013e14:	fb15 f509 	smulbb	r5, r5, r9
 8013e18:	fb07 6702 	mla	r7, r7, r2, r6
 8013e1c:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013e20:	fb1a fa09 	smulbb	sl, sl, r9
 8013e24:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013e28:	b2bf      	uxth	r7, r7
 8013e2a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013e2e:	fa5f f888 	uxtb.w	r8, r8
 8013e32:	fb06 a602 	mla	r6, r6, r2, sl
 8013e36:	fb08 5502 	mla	r5, r8, r2, r5
 8013e3a:	1c7a      	adds	r2, r7, #1
 8013e3c:	b2b6      	uxth	r6, r6
 8013e3e:	b2ad      	uxth	r5, r5
 8013e40:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013e44:	9a03      	ldr	r2, [sp, #12]
 8013e46:	f105 0a01 	add.w	sl, r5, #1
 8013e4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013e4e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013e52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e56:	ea4a 0707 	orr.w	r7, sl, r7
 8013e5a:	f106 0a01 	add.w	sl, r6, #1
 8013e5e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013e62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013e66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013e6a:	ea47 070a 	orr.w	r7, r7, sl
 8013e6e:	52a7      	strh	r7, [r4, r2]
 8013e70:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013e72:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013e76:	4410      	add	r0, r2
 8013e78:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013e7a:	4411      	add	r1, r2
 8013e7c:	e755      	b.n	8013d2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013e7e:	f04f 0800 	mov.w	r8, #0
 8013e82:	eba3 0208 	sub.w	r2, r3, r8
 8013e86:	2a00      	cmp	r2, #0
 8013e88:	f77f af53 	ble.w	8013d32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013e8c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013e90:	140a      	asrs	r2, r1, #16
 8013e92:	9f01      	ldr	r7, [sp, #4]
 8013e94:	1405      	asrs	r5, r0, #16
 8013e96:	fb06 7202 	mla	r2, r6, r2, r7
 8013e9a:	5d52      	ldrb	r2, [r2, r5]
 8013e9c:	9d02      	ldr	r5, [sp, #8]
 8013e9e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013ea2:	0e2e      	lsrs	r6, r5, #24
 8013ea4:	d044      	beq.n	8013f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8013ea6:	9a05      	ldr	r2, [sp, #20]
 8013ea8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013eac:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013eb0:	4356      	muls	r6, r2
 8013eb2:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013eb6:	1c72      	adds	r2, r6, #1
 8013eb8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013ebc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013ec0:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013ec4:	b2ed      	uxtb	r5, r5
 8013ec6:	1212      	asrs	r2, r2, #8
 8013ec8:	fa1f f982 	uxth.w	r9, r2
 8013ecc:	43d2      	mvns	r2, r2
 8013ece:	fb16 f609 	smulbb	r6, r6, r9
 8013ed2:	b2d2      	uxtb	r2, r2
 8013ed4:	fb15 f509 	smulbb	r5, r5, r9
 8013ed8:	fb07 6702 	mla	r7, r7, r2, r6
 8013edc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013ee0:	fb1a fa09 	smulbb	sl, sl, r9
 8013ee4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013ee8:	b2bf      	uxth	r7, r7
 8013eea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013eee:	fa5f fe8e 	uxtb.w	lr, lr
 8013ef2:	fb06 a602 	mla	r6, r6, r2, sl
 8013ef6:	fb0e 5502 	mla	r5, lr, r2, r5
 8013efa:	1c7a      	adds	r2, r7, #1
 8013efc:	b2b6      	uxth	r6, r6
 8013efe:	b2ad      	uxth	r5, r5
 8013f00:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013f04:	f105 0a01 	add.w	sl, r5, #1
 8013f08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013f0c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f14:	ea4a 0707 	orr.w	r7, sl, r7
 8013f18:	f106 0a01 	add.w	sl, r6, #1
 8013f1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013f28:	ea47 070a 	orr.w	r7, r7, sl
 8013f2c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013f30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013f32:	f108 0801 	add.w	r8, r8, #1
 8013f36:	4410      	add	r0, r2
 8013f38:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013f3a:	4411      	add	r1, r2
 8013f3c:	e7a1      	b.n	8013e82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8013f3e:	b007      	add	sp, #28
 8013f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013f44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f48:	b085      	sub	sp, #20
 8013f4a:	468b      	mov	fp, r1
 8013f4c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013f50:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013f52:	9203      	str	r2, [sp, #12]
 8013f54:	6841      	ldr	r1, [r0, #4]
 8013f56:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8013f5a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013f5e:	fb01 2404 	mla	r4, r1, r4, r2
 8013f62:	6802      	ldr	r2, [r0, #0]
 8013f64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013f68:	f8de 2000 	ldr.w	r2, [lr]
 8013f6c:	9200      	str	r2, [sp, #0]
 8013f6e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013f72:	3204      	adds	r2, #4
 8013f74:	9201      	str	r2, [sp, #4]
 8013f76:	f1bb 0f00 	cmp.w	fp, #0
 8013f7a:	dc03      	bgt.n	8013f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013f7c:	9a03      	ldr	r2, [sp, #12]
 8013f7e:	2a00      	cmp	r2, #0
 8013f80:	f340 8153 	ble.w	801422a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013f84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013f86:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013f8a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013f8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f90:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013f94:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013f98:	2b00      	cmp	r3, #0
 8013f9a:	dd0e      	ble.n	8013fba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013f9c:	1408      	asrs	r0, r1, #16
 8013f9e:	d405      	bmi.n	8013fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013fa0:	42b8      	cmp	r0, r7
 8013fa2:	da03      	bge.n	8013fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013fa4:	1410      	asrs	r0, r2, #16
 8013fa6:	d401      	bmi.n	8013fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013fa8:	42b0      	cmp	r0, r6
 8013faa:	db07      	blt.n	8013fbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013fac:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013fae:	3b01      	subs	r3, #1
 8013fb0:	3402      	adds	r4, #2
 8013fb2:	4401      	add	r1, r0
 8013fb4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013fb6:	4402      	add	r2, r0
 8013fb8:	e7ee      	b.n	8013f98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013fba:	d017      	beq.n	8013fec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013fbc:	1e58      	subs	r0, r3, #1
 8013fbe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013fc0:	fb05 1500 	mla	r5, r5, r0, r1
 8013fc4:	142d      	asrs	r5, r5, #16
 8013fc6:	d409      	bmi.n	8013fdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013fc8:	42bd      	cmp	r5, r7
 8013fca:	da07      	bge.n	8013fdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013fcc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013fce:	fb05 2000 	mla	r0, r5, r0, r2
 8013fd2:	1400      	asrs	r0, r0, #16
 8013fd4:	d402      	bmi.n	8013fdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013fd6:	42b0      	cmp	r0, r6
 8013fd8:	f2c0 80bc 	blt.w	8014154 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013fdc:	2600      	movs	r6, #0
 8013fde:	1998      	adds	r0, r3, r6
 8013fe0:	2800      	cmp	r0, #0
 8013fe2:	dc3e      	bgt.n	8014062 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013fe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013fe8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013fec:	f1bb 0f00 	cmp.w	fp, #0
 8013ff0:	f340 811b 	ble.w	801422a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013ff4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013ff8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ffa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ffe:	f1bb 0b01 	subs.w	fp, fp, #1
 8014002:	eeb0 6a62 	vmov.f32	s12, s5
 8014006:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801400a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801400e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014012:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014016:	eeb0 6a43 	vmov.f32	s12, s6
 801401a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801401e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014022:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014026:	ee61 7a27 	vmul.f32	s15, s2, s15
 801402a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801402e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014032:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014036:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801403a:	ee12 2a90 	vmov	r2, s5
 801403e:	eef0 2a47 	vmov.f32	s5, s14
 8014042:	fb92 f3f3 	sdiv	r3, r2, r3
 8014046:	ee13 2a10 	vmov	r2, s6
 801404a:	9311      	str	r3, [sp, #68]	; 0x44
 801404c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801404e:	eeb0 3a67 	vmov.f32	s6, s15
 8014052:	fb92 f3f3 	sdiv	r3, r2, r3
 8014056:	9a03      	ldr	r2, [sp, #12]
 8014058:	9312      	str	r3, [sp, #72]	; 0x48
 801405a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801405c:	bf08      	it	eq
 801405e:	4613      	moveq	r3, r2
 8014060:	e789      	b.n	8013f76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014062:	140f      	asrs	r7, r1, #16
 8014064:	d426      	bmi.n	80140b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014066:	f8de 5008 	ldr.w	r5, [lr, #8]
 801406a:	42bd      	cmp	r5, r7
 801406c:	dd22      	ble.n	80140b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801406e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014072:	d41f      	bmi.n	80140b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014074:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014078:	4560      	cmp	r0, ip
 801407a:	dd1b      	ble.n	80140b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801407c:	9800      	ldr	r0, [sp, #0]
 801407e:	b22d      	sxth	r5, r5
 8014080:	fb0c 0505 	mla	r5, ip, r5, r0
 8014084:	5de8      	ldrb	r0, [r5, r7]
 8014086:	9d01      	ldr	r5, [sp, #4]
 8014088:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801408c:	0e07      	lsrs	r7, r0, #24
 801408e:	2fff      	cmp	r7, #255	; 0xff
 8014090:	d116      	bne.n	80140c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014092:	f06f 0501 	mvn.w	r5, #1
 8014096:	fb05 f706 	mul.w	r7, r5, r6
 801409a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801409e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80140a2:	0945      	lsrs	r5, r0, #5
 80140a4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80140a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80140ac:	ea4c 0505 	orr.w	r5, ip, r5
 80140b0:	4305      	orrs	r5, r0
 80140b2:	53e5      	strh	r5, [r4, r7]
 80140b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80140b6:	3e01      	subs	r6, #1
 80140b8:	4401      	add	r1, r0
 80140ba:	9812      	ldr	r0, [sp, #72]	; 0x48
 80140bc:	4402      	add	r2, r0
 80140be:	e78e      	b.n	8013fde <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80140c0:	b2fd      	uxtb	r5, r7
 80140c2:	2f00      	cmp	r7, #0
 80140c4:	d0f6      	beq.n	80140b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80140c6:	f06f 0701 	mvn.w	r7, #1
 80140ca:	fa1f f985 	uxth.w	r9, r5
 80140ce:	43ed      	mvns	r5, r5
 80140d0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80140d4:	4377      	muls	r7, r6
 80140d6:	fb1a fa09 	smulbb	sl, sl, r9
 80140da:	b2ed      	uxtb	r5, r5
 80140dc:	f834 8007 	ldrh.w	r8, [r4, r7]
 80140e0:	9702      	str	r7, [sp, #8]
 80140e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80140e6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80140ea:	fb17 f709 	smulbb	r7, r7, r9
 80140ee:	b2c0      	uxtb	r0, r0
 80140f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80140f4:	fb10 f009 	smulbb	r0, r0, r9
 80140f8:	fb0c 7c05 	mla	ip, ip, r5, r7
 80140fc:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014100:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014104:	fa1f fc8c 	uxth.w	ip, ip
 8014108:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801410c:	fa5f f888 	uxtb.w	r8, r8
 8014110:	fb07 a705 	mla	r7, r7, r5, sl
 8014114:	fb08 0005 	mla	r0, r8, r5, r0
 8014118:	f10c 0501 	add.w	r5, ip, #1
 801411c:	b2bf      	uxth	r7, r7
 801411e:	b280      	uxth	r0, r0
 8014120:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014124:	f100 0a01 	add.w	sl, r0, #1
 8014128:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801412c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014130:	9802      	ldr	r0, [sp, #8]
 8014132:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014136:	ea4a 0c0c 	orr.w	ip, sl, ip
 801413a:	f107 0a01 	add.w	sl, r7, #1
 801413e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014142:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014146:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801414a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801414e:	f824 c000 	strh.w	ip, [r4, r0]
 8014152:	e7af      	b.n	80140b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014154:	f04f 0800 	mov.w	r8, #0
 8014158:	eba3 0008 	sub.w	r0, r3, r8
 801415c:	2800      	cmp	r0, #0
 801415e:	f77f af41 	ble.w	8013fe4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014162:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014166:	1410      	asrs	r0, r2, #16
 8014168:	9f00      	ldr	r7, [sp, #0]
 801416a:	140d      	asrs	r5, r1, #16
 801416c:	fb06 7000 	mla	r0, r6, r0, r7
 8014170:	5d40      	ldrb	r0, [r0, r5]
 8014172:	9d01      	ldr	r5, [sp, #4]
 8014174:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014178:	0e2e      	lsrs	r6, r5, #24
 801417a:	2eff      	cmp	r6, #255	; 0xff
 801417c:	d112      	bne.n	80141a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801417e:	482c      	ldr	r0, [pc, #176]	; (8014230 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014180:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014184:	0968      	lsrs	r0, r5, #5
 8014186:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801418a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801418e:	4330      	orrs	r0, r6
 8014190:	4328      	orrs	r0, r5
 8014192:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014196:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014198:	f108 0801 	add.w	r8, r8, #1
 801419c:	4401      	add	r1, r0
 801419e:	9812      	ldr	r0, [sp, #72]	; 0x48
 80141a0:	4402      	add	r2, r0
 80141a2:	e7d9      	b.n	8014158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80141a4:	b2f0      	uxtb	r0, r6
 80141a6:	2e00      	cmp	r6, #0
 80141a8:	d0f5      	beq.n	8014196 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80141aa:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80141ae:	fa1f f980 	uxth.w	r9, r0
 80141b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80141b6:	43c0      	mvns	r0, r0
 80141b8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80141bc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80141c0:	fb16 f609 	smulbb	r6, r6, r9
 80141c4:	b2c0      	uxtb	r0, r0
 80141c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80141ca:	b2ed      	uxtb	r5, r5
 80141cc:	fb1a fa09 	smulbb	sl, sl, r9
 80141d0:	fb07 6700 	mla	r7, r7, r0, r6
 80141d4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80141d8:	fb15 f509 	smulbb	r5, r5, r9
 80141dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80141e0:	b2bf      	uxth	r7, r7
 80141e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80141e6:	fa5f fc8c 	uxtb.w	ip, ip
 80141ea:	fb06 a600 	mla	r6, r6, r0, sl
 80141ee:	fb0c 5500 	mla	r5, ip, r0, r5
 80141f2:	1c78      	adds	r0, r7, #1
 80141f4:	b2b6      	uxth	r6, r6
 80141f6:	b2ad      	uxth	r5, r5
 80141f8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80141fc:	f105 0a01 	add.w	sl, r5, #1
 8014200:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014204:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014208:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801420c:	ea4a 0707 	orr.w	r7, sl, r7
 8014210:	f106 0a01 	add.w	sl, r6, #1
 8014214:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014218:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801421c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014220:	ea47 070a 	orr.w	r7, r7, sl
 8014224:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014228:	e7b5      	b.n	8014196 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801422a:	b005      	add	sp, #20
 801422c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014230:	fffff800 	.word	0xfffff800

08014234 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014238:	b087      	sub	sp, #28
 801423a:	468b      	mov	fp, r1
 801423c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014240:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014242:	9204      	str	r2, [sp, #16]
 8014244:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014248:	6861      	ldr	r1, [r4, #4]
 801424a:	9205      	str	r2, [sp, #20]
 801424c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014250:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014254:	fb01 2000 	mla	r0, r1, r0, r2
 8014258:	6822      	ldr	r2, [r4, #0]
 801425a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801425e:	f8de 2000 	ldr.w	r2, [lr]
 8014262:	9201      	str	r2, [sp, #4]
 8014264:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014268:	9202      	str	r2, [sp, #8]
 801426a:	f1bb 0f00 	cmp.w	fp, #0
 801426e:	dc03      	bgt.n	8014278 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014270:	9a04      	ldr	r2, [sp, #16]
 8014272:	2a00      	cmp	r2, #0
 8014274:	f340 8142 	ble.w	80144fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014278:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801427a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801427e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014282:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014284:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014288:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801428c:	2b00      	cmp	r3, #0
 801428e:	dd0e      	ble.n	80142ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014290:	140c      	asrs	r4, r1, #16
 8014292:	d405      	bmi.n	80142a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014294:	42bc      	cmp	r4, r7
 8014296:	da03      	bge.n	80142a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014298:	1414      	asrs	r4, r2, #16
 801429a:	d401      	bmi.n	80142a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801429c:	42b4      	cmp	r4, r6
 801429e:	db07      	blt.n	80142b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80142a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80142a2:	3b01      	subs	r3, #1
 80142a4:	3002      	adds	r0, #2
 80142a6:	4421      	add	r1, r4
 80142a8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80142aa:	4422      	add	r2, r4
 80142ac:	e7ee      	b.n	801428c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80142ae:	d019      	beq.n	80142e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80142b0:	1e5c      	subs	r4, r3, #1
 80142b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80142b4:	fb05 1504 	mla	r5, r5, r4, r1
 80142b8:	142d      	asrs	r5, r5, #16
 80142ba:	d409      	bmi.n	80142d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80142bc:	42bd      	cmp	r5, r7
 80142be:	da07      	bge.n	80142d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80142c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80142c2:	fb05 2404 	mla	r4, r5, r4, r2
 80142c6:	1424      	asrs	r4, r4, #16
 80142c8:	d402      	bmi.n	80142d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80142ca:	42b4      	cmp	r4, r6
 80142cc:	f2c0 80b1 	blt.w	8014432 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80142d0:	f04f 0800 	mov.w	r8, #0
 80142d4:	eb03 0408 	add.w	r4, r3, r8
 80142d8:	2c00      	cmp	r4, #0
 80142da:	dc3e      	bgt.n	801435a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80142dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80142e4:	f1bb 0f00 	cmp.w	fp, #0
 80142e8:	f340 8108 	ble.w	80144fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80142ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80142f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142f6:	f1bb 0b01 	subs.w	fp, fp, #1
 80142fa:	eeb0 6a62 	vmov.f32	s12, s5
 80142fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014302:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014306:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801430a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801430e:	eeb0 6a43 	vmov.f32	s12, s6
 8014312:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014316:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801431a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801431e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014322:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014326:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801432a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801432e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014332:	ee12 2a90 	vmov	r2, s5
 8014336:	eef0 2a47 	vmov.f32	s5, s14
 801433a:	fb92 f3f3 	sdiv	r3, r2, r3
 801433e:	ee13 2a10 	vmov	r2, s6
 8014342:	9313      	str	r3, [sp, #76]	; 0x4c
 8014344:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014346:	eeb0 3a67 	vmov.f32	s6, s15
 801434a:	fb92 f3f3 	sdiv	r3, r2, r3
 801434e:	9a04      	ldr	r2, [sp, #16]
 8014350:	9314      	str	r3, [sp, #80]	; 0x50
 8014352:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014354:	bf08      	it	eq
 8014356:	4613      	moveq	r3, r2
 8014358:	e787      	b.n	801426a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801435a:	140e      	asrs	r6, r1, #16
 801435c:	d462      	bmi.n	8014424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801435e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014362:	42b5      	cmp	r5, r6
 8014364:	dd5e      	ble.n	8014424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014366:	1417      	asrs	r7, r2, #16
 8014368:	d45c      	bmi.n	8014424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801436a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801436e:	42bc      	cmp	r4, r7
 8014370:	dd58      	ble.n	8014424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014372:	b22d      	sxth	r5, r5
 8014374:	9c02      	ldr	r4, [sp, #8]
 8014376:	fb07 6505 	mla	r5, r7, r5, r6
 801437a:	5d66      	ldrb	r6, [r4, r5]
 801437c:	2e00      	cmp	r6, #0
 801437e:	d051      	beq.n	8014424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014380:	9c01      	ldr	r4, [sp, #4]
 8014382:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014386:	f06f 0401 	mvn.w	r4, #1
 801438a:	fb04 f408 	mul.w	r4, r4, r8
 801438e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014392:	5b05      	ldrh	r5, [r0, r4]
 8014394:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014398:	9403      	str	r4, [sp, #12]
 801439a:	9c05      	ldr	r4, [sp, #20]
 801439c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80143a0:	4366      	muls	r6, r4
 80143a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80143a6:	1c74      	adds	r4, r6, #1
 80143a8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80143ac:	122e      	asrs	r6, r5, #8
 80143ae:	1224      	asrs	r4, r4, #8
 80143b0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80143b4:	00ed      	lsls	r5, r5, #3
 80143b6:	b2a7      	uxth	r7, r4
 80143b8:	43e4      	mvns	r4, r4
 80143ba:	b2ed      	uxtb	r5, r5
 80143bc:	b2e4      	uxtb	r4, r4
 80143be:	fb16 f604 	smulbb	r6, r6, r4
 80143c2:	fb15 f504 	smulbb	r5, r5, r4
 80143c6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80143ca:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80143ce:	fb1a fa04 	smulbb	sl, sl, r4
 80143d2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80143d6:	fa1f fc8c 	uxth.w	ip, ip
 80143da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80143de:	fa5f f989 	uxtb.w	r9, r9
 80143e2:	fb06 a607 	mla	r6, r6, r7, sl
 80143e6:	f10c 0401 	add.w	r4, ip, #1
 80143ea:	fb09 5507 	mla	r5, r9, r7, r5
 80143ee:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80143f2:	9c03      	ldr	r4, [sp, #12]
 80143f4:	b2ad      	uxth	r5, r5
 80143f6:	b2b6      	uxth	r6, r6
 80143f8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80143fc:	f105 0a01 	add.w	sl, r5, #1
 8014400:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014404:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014408:	ea4a 0c0c 	orr.w	ip, sl, ip
 801440c:	f106 0a01 	add.w	sl, r6, #1
 8014410:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014414:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014418:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801441c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014420:	f820 c004 	strh.w	ip, [r0, r4]
 8014424:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014426:	f108 38ff 	add.w	r8, r8, #4294967295
 801442a:	4421      	add	r1, r4
 801442c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801442e:	4422      	add	r2, r4
 8014430:	e750      	b.n	80142d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014432:	f04f 0900 	mov.w	r9, #0
 8014436:	eba3 0409 	sub.w	r4, r3, r9
 801443a:	2c00      	cmp	r4, #0
 801443c:	f77f af4e 	ble.w	80142dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014440:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014444:	140d      	asrs	r5, r1, #16
 8014446:	1414      	asrs	r4, r2, #16
 8014448:	fb06 5404 	mla	r4, r6, r4, r5
 801444c:	9d02      	ldr	r5, [sp, #8]
 801444e:	5d2e      	ldrb	r6, [r5, r4]
 8014450:	2e00      	cmp	r6, #0
 8014452:	d04c      	beq.n	80144ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014454:	9d01      	ldr	r5, [sp, #4]
 8014456:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801445a:	9c05      	ldr	r4, [sp, #20]
 801445c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014460:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014464:	4366      	muls	r6, r4
 8014466:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801446a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801446e:	1c74      	adds	r4, r6, #1
 8014470:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014474:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014478:	122e      	asrs	r6, r5, #8
 801447a:	1224      	asrs	r4, r4, #8
 801447c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014480:	00ed      	lsls	r5, r5, #3
 8014482:	b2a7      	uxth	r7, r4
 8014484:	43e4      	mvns	r4, r4
 8014486:	b2ed      	uxtb	r5, r5
 8014488:	b2e4      	uxtb	r4, r4
 801448a:	fb16 f604 	smulbb	r6, r6, r4
 801448e:	fb15 f504 	smulbb	r5, r5, r4
 8014492:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014496:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801449a:	fb1a fa04 	smulbb	sl, sl, r4
 801449e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80144a2:	fa1f fc8c 	uxth.w	ip, ip
 80144a6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80144aa:	fa5f f888 	uxtb.w	r8, r8
 80144ae:	fb06 a607 	mla	r6, r6, r7, sl
 80144b2:	f10c 0401 	add.w	r4, ip, #1
 80144b6:	fb08 5507 	mla	r5, r8, r7, r5
 80144ba:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80144be:	b2ad      	uxth	r5, r5
 80144c0:	b2b6      	uxth	r6, r6
 80144c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80144c6:	f105 0a01 	add.w	sl, r5, #1
 80144ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80144ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80144d2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80144d6:	f106 0a01 	add.w	sl, r6, #1
 80144da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80144de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80144e2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80144e6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80144ea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80144ee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80144f0:	f109 0901 	add.w	r9, r9, #1
 80144f4:	4421      	add	r1, r4
 80144f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80144f8:	4422      	add	r2, r4
 80144fa:	e79c      	b.n	8014436 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80144fc:	b007      	add	sp, #28
 80144fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014502 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014502:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014506:	b085      	sub	sp, #20
 8014508:	468b      	mov	fp, r1
 801450a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801450e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014510:	9203      	str	r2, [sp, #12]
 8014512:	6861      	ldr	r1, [r4, #4]
 8014514:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014518:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801451c:	fb01 2000 	mla	r0, r1, r0, r2
 8014520:	6822      	ldr	r2, [r4, #0]
 8014522:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014526:	f8d8 2000 	ldr.w	r2, [r8]
 801452a:	9200      	str	r2, [sp, #0]
 801452c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014530:	9201      	str	r2, [sp, #4]
 8014532:	f1bb 0f00 	cmp.w	fp, #0
 8014536:	dc03      	bgt.n	8014540 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014538:	9a03      	ldr	r2, [sp, #12]
 801453a:	2a00      	cmp	r2, #0
 801453c:	f340 8146 	ble.w	80147cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014540:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014542:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014546:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801454a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801454c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014550:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014554:	2b00      	cmp	r3, #0
 8014556:	dd0e      	ble.n	8014576 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014558:	140c      	asrs	r4, r1, #16
 801455a:	d405      	bmi.n	8014568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801455c:	42bc      	cmp	r4, r7
 801455e:	da03      	bge.n	8014568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014560:	1414      	asrs	r4, r2, #16
 8014562:	d401      	bmi.n	8014568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014564:	42b4      	cmp	r4, r6
 8014566:	db07      	blt.n	8014578 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014568:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801456a:	3b01      	subs	r3, #1
 801456c:	3002      	adds	r0, #2
 801456e:	4421      	add	r1, r4
 8014570:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014572:	4422      	add	r2, r4
 8014574:	e7ee      	b.n	8014554 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014576:	d017      	beq.n	80145a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014578:	1e5c      	subs	r4, r3, #1
 801457a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801457c:	fb05 1504 	mla	r5, r5, r4, r1
 8014580:	142d      	asrs	r5, r5, #16
 8014582:	d409      	bmi.n	8014598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014584:	42bd      	cmp	r5, r7
 8014586:	da07      	bge.n	8014598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014588:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801458a:	fb05 2404 	mla	r4, r5, r4, r2
 801458e:	1424      	asrs	r4, r4, #16
 8014590:	d402      	bmi.n	8014598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014592:	42b4      	cmp	r4, r6
 8014594:	f2c0 80b3 	blt.w	80146fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014598:	2600      	movs	r6, #0
 801459a:	199c      	adds	r4, r3, r6
 801459c:	2c00      	cmp	r4, #0
 801459e:	dc3e      	bgt.n	801461e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80145a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80145a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80145a8:	f1bb 0f00 	cmp.w	fp, #0
 80145ac:	f340 810e 	ble.w	80147cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80145b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80145b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80145ba:	f1bb 0b01 	subs.w	fp, fp, #1
 80145be:	eeb0 6a62 	vmov.f32	s12, s5
 80145c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145ce:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80145d2:	eeb0 6a43 	vmov.f32	s12, s6
 80145d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80145de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80145e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80145ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80145ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80145f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80145f6:	ee12 2a90 	vmov	r2, s5
 80145fa:	eef0 2a47 	vmov.f32	s5, s14
 80145fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014602:	ee13 2a10 	vmov	r2, s6
 8014606:	9311      	str	r3, [sp, #68]	; 0x44
 8014608:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801460a:	eeb0 3a67 	vmov.f32	s6, s15
 801460e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014612:	9a03      	ldr	r2, [sp, #12]
 8014614:	9312      	str	r3, [sp, #72]	; 0x48
 8014616:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014618:	bf08      	it	eq
 801461a:	4613      	moveq	r3, r2
 801461c:	e789      	b.n	8014532 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801461e:	140f      	asrs	r7, r1, #16
 8014620:	d418      	bmi.n	8014654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014622:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014626:	42bd      	cmp	r5, r7
 8014628:	dd14      	ble.n	8014654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801462a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801462e:	d411      	bmi.n	8014654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014630:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014634:	4564      	cmp	r4, ip
 8014636:	dd0d      	ble.n	8014654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014638:	b22d      	sxth	r5, r5
 801463a:	9c01      	ldr	r4, [sp, #4]
 801463c:	fb0c 7505 	mla	r5, ip, r5, r7
 8014640:	5d64      	ldrb	r4, [r4, r5]
 8014642:	2cff      	cmp	r4, #255	; 0xff
 8014644:	d10c      	bne.n	8014660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014646:	9c00      	ldr	r4, [sp, #0]
 8014648:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801464c:	f06f 0401 	mvn.w	r4, #1
 8014650:	4374      	muls	r4, r6
 8014652:	5305      	strh	r5, [r0, r4]
 8014654:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014656:	3e01      	subs	r6, #1
 8014658:	4421      	add	r1, r4
 801465a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801465c:	4422      	add	r2, r4
 801465e:	e79c      	b.n	801459a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014660:	2c00      	cmp	r4, #0
 8014662:	d0f7      	beq.n	8014654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014664:	9f00      	ldr	r7, [sp, #0]
 8014666:	fa1f fc84 	uxth.w	ip, r4
 801466a:	43e4      	mvns	r4, r4
 801466c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8014670:	f06f 0501 	mvn.w	r5, #1
 8014674:	b2e4      	uxtb	r4, r4
 8014676:	4375      	muls	r5, r6
 8014678:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801467c:	9502      	str	r5, [sp, #8]
 801467e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014682:	5b45      	ldrh	r5, [r0, r5]
 8014684:	122f      	asrs	r7, r5, #8
 8014686:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801468a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801468e:	00ed      	lsls	r5, r5, #3
 8014690:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014694:	fb17 f704 	smulbb	r7, r7, r4
 8014698:	b2ed      	uxtb	r5, r5
 801469a:	fb1a fa04 	smulbb	sl, sl, r4
 801469e:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80146a2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80146a6:	fb15 f504 	smulbb	r5, r5, r4
 80146aa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80146ae:	fa1f fe8e 	uxth.w	lr, lr
 80146b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80146b6:	fa5f f989 	uxtb.w	r9, r9
 80146ba:	fb07 a70c 	mla	r7, r7, ip, sl
 80146be:	f10e 0401 	add.w	r4, lr, #1
 80146c2:	fb09 550c 	mla	r5, r9, ip, r5
 80146c6:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80146ca:	9c02      	ldr	r4, [sp, #8]
 80146cc:	b2ad      	uxth	r5, r5
 80146ce:	b2bf      	uxth	r7, r7
 80146d0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80146d4:	f105 0a01 	add.w	sl, r5, #1
 80146d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80146dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80146e0:	ea4a 0e0e 	orr.w	lr, sl, lr
 80146e4:	f107 0a01 	add.w	sl, r7, #1
 80146e8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80146ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80146f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80146f4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80146f8:	f820 e004 	strh.w	lr, [r0, r4]
 80146fc:	e7aa      	b.n	8014654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80146fe:	f04f 0900 	mov.w	r9, #0
 8014702:	eba3 0409 	sub.w	r4, r3, r9
 8014706:	2c00      	cmp	r4, #0
 8014708:	f77f af4a 	ble.w	80145a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801470c:	1414      	asrs	r4, r2, #16
 801470e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014712:	140d      	asrs	r5, r1, #16
 8014714:	fb06 5504 	mla	r5, r6, r4, r5
 8014718:	9c01      	ldr	r4, [sp, #4]
 801471a:	5d64      	ldrb	r4, [r4, r5]
 801471c:	2cff      	cmp	r4, #255	; 0xff
 801471e:	d10b      	bne.n	8014738 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014720:	9c00      	ldr	r4, [sp, #0]
 8014722:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014726:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801472a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801472c:	f109 0901 	add.w	r9, r9, #1
 8014730:	4421      	add	r1, r4
 8014732:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014734:	4422      	add	r2, r4
 8014736:	e7e4      	b.n	8014702 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014738:	2c00      	cmp	r4, #0
 801473a:	d0f6      	beq.n	801472a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801473c:	9e00      	ldr	r6, [sp, #0]
 801473e:	b2a7      	uxth	r7, r4
 8014740:	43e4      	mvns	r4, r4
 8014742:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014746:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801474a:	b2e4      	uxtb	r4, r4
 801474c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014750:	122e      	asrs	r6, r5, #8
 8014752:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014756:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801475a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801475e:	00ed      	lsls	r5, r5, #3
 8014760:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014764:	fb16 f604 	smulbb	r6, r6, r4
 8014768:	b2ed      	uxtb	r5, r5
 801476a:	fb1a fa04 	smulbb	sl, sl, r4
 801476e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014772:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014776:	fb15 f504 	smulbb	r5, r5, r4
 801477a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801477e:	fa1f fc8c 	uxth.w	ip, ip
 8014782:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014786:	fa5f fe8e 	uxtb.w	lr, lr
 801478a:	fb06 a607 	mla	r6, r6, r7, sl
 801478e:	f10c 0401 	add.w	r4, ip, #1
 8014792:	fb0e 5507 	mla	r5, lr, r7, r5
 8014796:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801479a:	b2ad      	uxth	r5, r5
 801479c:	b2b6      	uxth	r6, r6
 801479e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80147a2:	f105 0a01 	add.w	sl, r5, #1
 80147a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80147aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80147ae:	ea4a 0c0c 	orr.w	ip, sl, ip
 80147b2:	f106 0a01 	add.w	sl, r6, #1
 80147b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80147ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80147be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80147c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80147c6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80147ca:	e7ae      	b.n	801472a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80147cc:	b005      	add	sp, #20
 80147ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080147d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80147d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147d6:	b085      	sub	sp, #20
 80147d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80147da:	9203      	str	r2, [sp, #12]
 80147dc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80147e0:	9100      	str	r1, [sp, #0]
 80147e2:	9201      	str	r2, [sp, #4]
 80147e4:	6841      	ldr	r1, [r0, #4]
 80147e6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80147ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80147ee:	fb01 2404 	mla	r4, r1, r4, r2
 80147f2:	6802      	ldr	r2, [r0, #0]
 80147f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80147f8:	f8de 2000 	ldr.w	r2, [lr]
 80147fc:	9202      	str	r2, [sp, #8]
 80147fe:	9a01      	ldr	r2, [sp, #4]
 8014800:	43d6      	mvns	r6, r2
 8014802:	b2f6      	uxtb	r6, r6
 8014804:	9a00      	ldr	r2, [sp, #0]
 8014806:	2a00      	cmp	r2, #0
 8014808:	dc03      	bgt.n	8014812 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801480a:	9a03      	ldr	r2, [sp, #12]
 801480c:	2a00      	cmp	r2, #0
 801480e:	f340 8124 	ble.w	8014a5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014812:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014814:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014818:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801481c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801481e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014822:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014826:	2b00      	cmp	r3, #0
 8014828:	dd0e      	ble.n	8014848 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801482a:	1408      	asrs	r0, r1, #16
 801482c:	d405      	bmi.n	801483a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801482e:	4560      	cmp	r0, ip
 8014830:	da03      	bge.n	801483a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014832:	1410      	asrs	r0, r2, #16
 8014834:	d401      	bmi.n	801483a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014836:	42b8      	cmp	r0, r7
 8014838:	db07      	blt.n	801484a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801483a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801483c:	3b01      	subs	r3, #1
 801483e:	3402      	adds	r4, #2
 8014840:	4401      	add	r1, r0
 8014842:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014844:	4402      	add	r2, r0
 8014846:	e7ee      	b.n	8014826 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014848:	d06e      	beq.n	8014928 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801484a:	1e58      	subs	r0, r3, #1
 801484c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801484e:	fb05 1500 	mla	r5, r5, r0, r1
 8014852:	142d      	asrs	r5, r5, #16
 8014854:	d45c      	bmi.n	8014910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014856:	4565      	cmp	r5, ip
 8014858:	da5a      	bge.n	8014910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801485a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801485c:	fb05 2000 	mla	r0, r5, r0, r2
 8014860:	1400      	asrs	r0, r0, #16
 8014862:	d455      	bmi.n	8014910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014864:	42b8      	cmp	r0, r7
 8014866:	da53      	bge.n	8014910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014868:	4699      	mov	r9, r3
 801486a:	46a2      	mov	sl, r4
 801486c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014870:	f1b9 0f00 	cmp.w	r9, #0
 8014874:	dd54      	ble.n	8014920 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014876:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801487a:	140d      	asrs	r5, r1, #16
 801487c:	1410      	asrs	r0, r2, #16
 801487e:	f109 39ff 	add.w	r9, r9, #4294967295
 8014882:	fb07 5000 	mla	r0, r7, r0, r5
 8014886:	9d02      	ldr	r5, [sp, #8]
 8014888:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801488c:	f8ba 5000 	ldrh.w	r5, [sl]
 8014890:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014894:	122f      	asrs	r7, r5, #8
 8014896:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801489a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801489e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80148a2:	00ed      	lsls	r5, r5, #3
 80148a4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80148a8:	fb17 f706 	smulbb	r7, r7, r6
 80148ac:	b2ed      	uxtb	r5, r5
 80148ae:	fb18 f806 	smulbb	r8, r8, r6
 80148b2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80148b6:	10c7      	asrs	r7, r0, #3
 80148b8:	fb15 f506 	smulbb	r5, r5, r6
 80148bc:	00c0      	lsls	r0, r0, #3
 80148be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80148c2:	fa1f fc8c 	uxth.w	ip, ip
 80148c6:	b2c0      	uxtb	r0, r0
 80148c8:	fb07 870b 	mla	r7, r7, fp, r8
 80148cc:	fb00 500b 	mla	r0, r0, fp, r5
 80148d0:	f10c 0501 	add.w	r5, ip, #1
 80148d4:	b2bf      	uxth	r7, r7
 80148d6:	b280      	uxth	r0, r0
 80148d8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80148dc:	f107 0801 	add.w	r8, r7, #1
 80148e0:	1c45      	adds	r5, r0, #1
 80148e2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80148e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80148ea:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80148ee:	9811      	ldr	r0, [sp, #68]	; 0x44
 80148f0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80148f4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80148f8:	4401      	add	r1, r0
 80148fa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80148fe:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014900:	ea45 0c0c 	orr.w	ip, r5, ip
 8014904:	4402      	add	r2, r0
 8014906:	ea4c 0c08 	orr.w	ip, ip, r8
 801490a:	f82a cb02 	strh.w	ip, [sl], #2
 801490e:	e7af      	b.n	8014870 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014910:	f04f 0800 	mov.w	r8, #0
 8014914:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014918:	eb03 0008 	add.w	r0, r3, r8
 801491c:	2800      	cmp	r0, #0
 801491e:	dc41      	bgt.n	80149a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014920:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014924:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014928:	9b00      	ldr	r3, [sp, #0]
 801492a:	2b00      	cmp	r3, #0
 801492c:	f340 8095 	ble.w	8014a5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014930:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014934:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014936:	ee30 0a04 	vadd.f32	s0, s0, s8
 801493a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801493e:	eef0 6a62 	vmov.f32	s13, s5
 8014942:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014946:	ee31 1a05 	vadd.f32	s2, s2, s10
 801494a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801494e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8014952:	eef0 6a43 	vmov.f32	s13, s6
 8014956:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801495a:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801495e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014962:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014966:	ee77 2a62 	vsub.f32	s5, s14, s5
 801496a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801496e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014972:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014976:	ee12 2a90 	vmov	r2, s5
 801497a:	eef0 2a47 	vmov.f32	s5, s14
 801497e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014982:	ee13 2a10 	vmov	r2, s6
 8014986:	9311      	str	r3, [sp, #68]	; 0x44
 8014988:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801498a:	eeb0 3a67 	vmov.f32	s6, s15
 801498e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014992:	9312      	str	r3, [sp, #72]	; 0x48
 8014994:	9b00      	ldr	r3, [sp, #0]
 8014996:	9a03      	ldr	r2, [sp, #12]
 8014998:	3b01      	subs	r3, #1
 801499a:	9300      	str	r3, [sp, #0]
 801499c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801499e:	bf08      	it	eq
 80149a0:	4613      	moveq	r3, r2
 80149a2:	e72f      	b.n	8014804 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80149a4:	140f      	asrs	r7, r1, #16
 80149a6:	d451      	bmi.n	8014a4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80149a8:	f8de 5008 	ldr.w	r5, [lr, #8]
 80149ac:	42bd      	cmp	r5, r7
 80149ae:	dd4d      	ble.n	8014a4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80149b0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80149b4:	d44a      	bmi.n	8014a4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80149b6:	f8de 000c 	ldr.w	r0, [lr, #12]
 80149ba:	4560      	cmp	r0, ip
 80149bc:	dd46      	ble.n	8014a4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80149be:	b22d      	sxth	r5, r5
 80149c0:	9802      	ldr	r0, [sp, #8]
 80149c2:	fb0c 7505 	mla	r5, ip, r5, r7
 80149c6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80149ca:	f06f 0501 	mvn.w	r5, #1
 80149ce:	fb05 fb08 	mul.w	fp, r5, r8
 80149d2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80149d6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80149da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80149de:	122f      	asrs	r7, r5, #8
 80149e0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80149e4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80149e8:	00ed      	lsls	r5, r5, #3
 80149ea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80149ee:	fb17 f706 	smulbb	r7, r7, r6
 80149f2:	b2ed      	uxtb	r5, r5
 80149f4:	fb19 f906 	smulbb	r9, r9, r6
 80149f8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80149fc:	10c7      	asrs	r7, r0, #3
 80149fe:	fb15 f506 	smulbb	r5, r5, r6
 8014a02:	00c0      	lsls	r0, r0, #3
 8014a04:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014a08:	fa1f fc8c 	uxth.w	ip, ip
 8014a0c:	b2c0      	uxtb	r0, r0
 8014a0e:	fb07 970a 	mla	r7, r7, sl, r9
 8014a12:	fb00 500a 	mla	r0, r0, sl, r5
 8014a16:	f10c 0501 	add.w	r5, ip, #1
 8014a1a:	b2bf      	uxth	r7, r7
 8014a1c:	b280      	uxth	r0, r0
 8014a1e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014a22:	f107 0901 	add.w	r9, r7, #1
 8014a26:	1c45      	adds	r5, r0, #1
 8014a28:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014a2c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014a30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014a34:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014a38:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014a3c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014a40:	ea45 0c0c 	orr.w	ip, r5, ip
 8014a44:	ea4c 0c09 	orr.w	ip, ip, r9
 8014a48:	f824 c00b 	strh.w	ip, [r4, fp]
 8014a4c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014a4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8014a52:	4401      	add	r1, r0
 8014a54:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014a56:	4402      	add	r2, r0
 8014a58:	e75e      	b.n	8014918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014a5a:	b005      	add	sp, #20
 8014a5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014a60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a64:	b085      	sub	sp, #20
 8014a66:	4693      	mov	fp, r2
 8014a68:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014a6c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014a6e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014a70:	6870      	ldr	r0, [r6, #4]
 8014a72:	9101      	str	r1, [sp, #4]
 8014a74:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014a78:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014a7c:	fb00 2404 	mla	r4, r0, r4, r2
 8014a80:	6832      	ldr	r2, [r6, #0]
 8014a82:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014a86:	682a      	ldr	r2, [r5, #0]
 8014a88:	9202      	str	r2, [sp, #8]
 8014a8a:	9a01      	ldr	r2, [sp, #4]
 8014a8c:	2a00      	cmp	r2, #0
 8014a8e:	dc03      	bgt.n	8014a98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014a90:	f1bb 0f00 	cmp.w	fp, #0
 8014a94:	f340 809a 	ble.w	8014bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014a98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014a9a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014a9e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014aa2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014aa4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014aa8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014aac:	2b00      	cmp	r3, #0
 8014aae:	dd0c      	ble.n	8014aca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014ab0:	1406      	asrs	r6, r0, #16
 8014ab2:	d405      	bmi.n	8014ac0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ab4:	454e      	cmp	r6, r9
 8014ab6:	da03      	bge.n	8014ac0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ab8:	1416      	asrs	r6, r2, #16
 8014aba:	d401      	bmi.n	8014ac0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014abc:	4546      	cmp	r6, r8
 8014abe:	db05      	blt.n	8014acc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014ac0:	4470      	add	r0, lr
 8014ac2:	4462      	add	r2, ip
 8014ac4:	3b01      	subs	r3, #1
 8014ac6:	3402      	adds	r4, #2
 8014ac8:	e7f0      	b.n	8014aac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014aca:	d00f      	beq.n	8014aec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014acc:	1e5e      	subs	r6, r3, #1
 8014ace:	fb0e 0706 	mla	r7, lr, r6, r0
 8014ad2:	143f      	asrs	r7, r7, #16
 8014ad4:	d541      	bpl.n	8014b5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014ad6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014ada:	4698      	mov	r8, r3
 8014adc:	9603      	str	r6, [sp, #12]
 8014ade:	f1b8 0f00 	cmp.w	r8, #0
 8014ae2:	dc56      	bgt.n	8014b92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014ae4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ae8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014aec:	9b01      	ldr	r3, [sp, #4]
 8014aee:	2b00      	cmp	r3, #0
 8014af0:	dd6c      	ble.n	8014bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014af2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014af6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014af8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014afc:	eeb0 6a62 	vmov.f32	s12, s5
 8014b00:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014b04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b0c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014b10:	eeb0 6a43 	vmov.f32	s12, s6
 8014b14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b18:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014b1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014b20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b34:	ee12 2a90 	vmov	r2, s5
 8014b38:	eef0 2a47 	vmov.f32	s5, s14
 8014b3c:	fb92 fef3 	sdiv	lr, r2, r3
 8014b40:	ee13 2a10 	vmov	r2, s6
 8014b44:	eeb0 3a67 	vmov.f32	s6, s15
 8014b48:	fb92 fcf3 	sdiv	ip, r2, r3
 8014b4c:	9b01      	ldr	r3, [sp, #4]
 8014b4e:	3b01      	subs	r3, #1
 8014b50:	9301      	str	r3, [sp, #4]
 8014b52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014b54:	bf08      	it	eq
 8014b56:	465b      	moveq	r3, fp
 8014b58:	e797      	b.n	8014a8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014b5a:	454f      	cmp	r7, r9
 8014b5c:	dabb      	bge.n	8014ad6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014b5e:	fb0c 2606 	mla	r6, ip, r6, r2
 8014b62:	1436      	asrs	r6, r6, #16
 8014b64:	d4b7      	bmi.n	8014ad6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014b66:	4546      	cmp	r6, r8
 8014b68:	dab5      	bge.n	8014ad6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014b6a:	461e      	mov	r6, r3
 8014b6c:	46a0      	mov	r8, r4
 8014b6e:	2e00      	cmp	r6, #0
 8014b70:	ddb8      	ble.n	8014ae4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014b72:	1417      	asrs	r7, r2, #16
 8014b74:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014b78:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014b7c:	9902      	ldr	r1, [sp, #8]
 8014b7e:	4470      	add	r0, lr
 8014b80:	4462      	add	r2, ip
 8014b82:	fb0a 9707 	mla	r7, sl, r7, r9
 8014b86:	3e01      	subs	r6, #1
 8014b88:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014b8c:	f828 7b02 	strh.w	r7, [r8], #2
 8014b90:	e7ed      	b.n	8014b6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014b92:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014b96:	d414      	bmi.n	8014bc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014b98:	68ae      	ldr	r6, [r5, #8]
 8014b9a:	454e      	cmp	r6, r9
 8014b9c:	dd11      	ble.n	8014bc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014b9e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014ba2:	d40e      	bmi.n	8014bc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014ba4:	68ef      	ldr	r7, [r5, #12]
 8014ba6:	4557      	cmp	r7, sl
 8014ba8:	dd0b      	ble.n	8014bc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014baa:	b236      	sxth	r6, r6
 8014bac:	f06f 0101 	mvn.w	r1, #1
 8014bb0:	9f02      	ldr	r7, [sp, #8]
 8014bb2:	fb0a 9606 	mla	r6, sl, r6, r9
 8014bb6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014bba:	fb01 f608 	mul.w	r6, r1, r8
 8014bbe:	9903      	ldr	r1, [sp, #12]
 8014bc0:	538f      	strh	r7, [r1, r6]
 8014bc2:	4470      	add	r0, lr
 8014bc4:	4462      	add	r2, ip
 8014bc6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014bca:	e788      	b.n	8014ade <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014bcc:	b005      	add	sp, #20
 8014bce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014bd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014bd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bd6:	b087      	sub	sp, #28
 8014bd8:	468b      	mov	fp, r1
 8014bda:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014bde:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014be0:	9203      	str	r2, [sp, #12]
 8014be2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014be6:	6841      	ldr	r1, [r0, #4]
 8014be8:	9204      	str	r2, [sp, #16]
 8014bea:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8014bee:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8014bf2:	fb01 2505 	mla	r5, r1, r5, r2
 8014bf6:	6802      	ldr	r2, [r0, #0]
 8014bf8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014bfc:	f8d9 2000 	ldr.w	r2, [r9]
 8014c00:	9201      	str	r2, [sp, #4]
 8014c02:	f1bb 0f00 	cmp.w	fp, #0
 8014c06:	dc03      	bgt.n	8014c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014c08:	9a03      	ldr	r2, [sp, #12]
 8014c0a:	2a00      	cmp	r2, #0
 8014c0c:	f340 8158 	ble.w	8014ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014c10:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014c12:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014c16:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014c1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014c1c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014c20:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014c24:	2b00      	cmp	r3, #0
 8014c26:	dd0e      	ble.n	8014c46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014c28:	1402      	asrs	r2, r0, #16
 8014c2a:	d405      	bmi.n	8014c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c2c:	42ba      	cmp	r2, r7
 8014c2e:	da03      	bge.n	8014c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c30:	140a      	asrs	r2, r1, #16
 8014c32:	d401      	bmi.n	8014c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c34:	42b2      	cmp	r2, r6
 8014c36:	db07      	blt.n	8014c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014c38:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014c3a:	3b01      	subs	r3, #1
 8014c3c:	3502      	adds	r5, #2
 8014c3e:	4410      	add	r0, r2
 8014c40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014c42:	4411      	add	r1, r2
 8014c44:	e7ee      	b.n	8014c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014c46:	d017      	beq.n	8014c78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014c48:	1e5a      	subs	r2, r3, #1
 8014c4a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014c4c:	fb04 0402 	mla	r4, r4, r2, r0
 8014c50:	1424      	asrs	r4, r4, #16
 8014c52:	d409      	bmi.n	8014c68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014c54:	42bc      	cmp	r4, r7
 8014c56:	da07      	bge.n	8014c68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014c58:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c5a:	fb04 1202 	mla	r2, r4, r2, r1
 8014c5e:	1412      	asrs	r2, r2, #16
 8014c60:	d402      	bmi.n	8014c68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014c62:	42b2      	cmp	r2, r6
 8014c64:	f2c0 80bf 	blt.w	8014de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014c68:	2700      	movs	r7, #0
 8014c6a:	19da      	adds	r2, r3, r7
 8014c6c:	2a00      	cmp	r2, #0
 8014c6e:	dc3e      	bgt.n	8014cee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014c70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c74:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014c78:	f1bb 0f00 	cmp.w	fp, #0
 8014c7c:	f340 8120 	ble.w	8014ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014c80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c8a:	f1bb 0b01 	subs.w	fp, fp, #1
 8014c8e:	eeb0 6a62 	vmov.f32	s12, s5
 8014c92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014c96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c9e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014ca2:	eeb0 6a43 	vmov.f32	s12, s6
 8014ca6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014caa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014cae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014cba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014cbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014cc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014cc6:	ee12 2a90 	vmov	r2, s5
 8014cca:	eef0 2a47 	vmov.f32	s5, s14
 8014cce:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cd2:	ee13 2a10 	vmov	r2, s6
 8014cd6:	9313      	str	r3, [sp, #76]	; 0x4c
 8014cd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014cda:	eeb0 3a67 	vmov.f32	s6, s15
 8014cde:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ce2:	9a03      	ldr	r2, [sp, #12]
 8014ce4:	9314      	str	r3, [sp, #80]	; 0x50
 8014ce6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ce8:	bf08      	it	eq
 8014cea:	4613      	moveq	r3, r2
 8014cec:	e789      	b.n	8014c02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014cee:	1406      	asrs	r6, r0, #16
 8014cf0:	d42d      	bmi.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014cf2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014cf6:	42b4      	cmp	r4, r6
 8014cf8:	dd29      	ble.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014cfa:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8014cfe:	d426      	bmi.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014d00:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014d04:	4562      	cmp	r2, ip
 8014d06:	dd22      	ble.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014d08:	b224      	sxth	r4, r4
 8014d0a:	9a01      	ldr	r2, [sp, #4]
 8014d0c:	fb0c 6404 	mla	r4, ip, r4, r6
 8014d10:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014d14:	0e22      	lsrs	r2, r4, #24
 8014d16:	d01a      	beq.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014d18:	9e04      	ldr	r6, [sp, #16]
 8014d1a:	4372      	muls	r2, r6
 8014d1c:	1c56      	adds	r6, r2, #1
 8014d1e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014d22:	0a26      	lsrs	r6, r4, #8
 8014d24:	1212      	asrs	r2, r2, #8
 8014d26:	9605      	str	r6, [sp, #20]
 8014d28:	2aff      	cmp	r2, #255	; 0xff
 8014d2a:	d116      	bne.n	8014d5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014d2c:	f06f 0201 	mvn.w	r2, #1
 8014d30:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8014d34:	fb02 fc07 	mul.w	ip, r2, r7
 8014d38:	0962      	lsrs	r2, r4, #5
 8014d3a:	f026 0607 	bic.w	r6, r6, #7
 8014d3e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014d42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014d46:	4316      	orrs	r6, r2
 8014d48:	4326      	orrs	r6, r4
 8014d4a:	f825 600c 	strh.w	r6, [r5, ip]
 8014d4e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014d50:	3f01      	subs	r7, #1
 8014d52:	4410      	add	r0, r2
 8014d54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014d56:	4411      	add	r1, r2
 8014d58:	e787      	b.n	8014c6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014d5a:	f06f 0601 	mvn.w	r6, #1
 8014d5e:	fa1f fa82 	uxth.w	sl, r2
 8014d62:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8014d66:	43d2      	mvns	r2, r2
 8014d68:	437e      	muls	r6, r7
 8014d6a:	b2e4      	uxtb	r4, r4
 8014d6c:	fb1c fc0a 	smulbb	ip, ip, sl
 8014d70:	b2d2      	uxtb	r2, r2
 8014d72:	f835 8006 	ldrh.w	r8, [r5, r6]
 8014d76:	fb14 f40a 	smulbb	r4, r4, sl
 8014d7a:	9602      	str	r6, [sp, #8]
 8014d7c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014d80:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014d84:	fb16 f60a 	smulbb	r6, r6, sl
 8014d88:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014d8c:	fb0e ce02 	mla	lr, lr, r2, ip
 8014d90:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014d94:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014d98:	fa1f fe8e 	uxth.w	lr, lr
 8014d9c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8014da0:	fa5f f888 	uxtb.w	r8, r8
 8014da4:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014da8:	fb08 4402 	mla	r4, r8, r2, r4
 8014dac:	f10e 0201 	add.w	r2, lr, #1
 8014db0:	fa1f fc8c 	uxth.w	ip, ip
 8014db4:	b2a4      	uxth	r4, r4
 8014db6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014dba:	9a02      	ldr	r2, [sp, #8]
 8014dbc:	1c66      	adds	r6, r4, #1
 8014dbe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8014dc2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014dc6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014dca:	ea46 0e0e 	orr.w	lr, r6, lr
 8014dce:	f10c 0601 	add.w	r6, ip, #1
 8014dd2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014dd6:	0976      	lsrs	r6, r6, #5
 8014dd8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014ddc:	ea4e 0e06 	orr.w	lr, lr, r6
 8014de0:	f825 e002 	strh.w	lr, [r5, r2]
 8014de4:	e7b3      	b.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014de6:	f04f 0800 	mov.w	r8, #0
 8014dea:	eba3 0208 	sub.w	r2, r3, r8
 8014dee:	2a00      	cmp	r2, #0
 8014df0:	f77f af3e 	ble.w	8014c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014df4:	1404      	asrs	r4, r0, #16
 8014df6:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014dfa:	140a      	asrs	r2, r1, #16
 8014dfc:	fb06 4202 	mla	r2, r6, r2, r4
 8014e00:	9c01      	ldr	r4, [sp, #4]
 8014e02:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014e06:	0e22      	lsrs	r2, r4, #24
 8014e08:	d015      	beq.n	8014e36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014e0a:	9e04      	ldr	r6, [sp, #16]
 8014e0c:	4372      	muls	r2, r6
 8014e0e:	1c56      	adds	r6, r2, #1
 8014e10:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014e14:	0a26      	lsrs	r6, r4, #8
 8014e16:	1212      	asrs	r2, r2, #8
 8014e18:	2aff      	cmp	r2, #255	; 0xff
 8014e1a:	d113      	bne.n	8014e44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8014e1c:	0962      	lsrs	r2, r4, #5
 8014e1e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8014e22:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014e26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014e2a:	f026 0607 	bic.w	r6, r6, #7
 8014e2e:	4316      	orrs	r6, r2
 8014e30:	4326      	orrs	r6, r4
 8014e32:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8014e36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014e38:	f108 0801 	add.w	r8, r8, #1
 8014e3c:	4410      	add	r0, r2
 8014e3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014e40:	4411      	add	r1, r2
 8014e42:	e7d2      	b.n	8014dea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8014e44:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8014e48:	fa1f fa82 	uxth.w	sl, r2
 8014e4c:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8014e50:	43d2      	mvns	r2, r2
 8014e52:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014e56:	fb17 f70a 	smulbb	r7, r7, sl
 8014e5a:	b2d2      	uxtb	r2, r2
 8014e5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014e60:	b2e4      	uxtb	r4, r4
 8014e62:	b2f6      	uxtb	r6, r6
 8014e64:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014e68:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014e6c:	fb14 f40a 	smulbb	r4, r4, sl
 8014e70:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014e74:	fa1f fc8c 	uxth.w	ip, ip
 8014e78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014e7c:	fb16 f60a 	smulbb	r6, r6, sl
 8014e80:	fa5f fe8e 	uxtb.w	lr, lr
 8014e84:	fb0e 4402 	mla	r4, lr, r2, r4
 8014e88:	fb07 6702 	mla	r7, r7, r2, r6
 8014e8c:	f10c 0201 	add.w	r2, ip, #1
 8014e90:	b2a4      	uxth	r4, r4
 8014e92:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014e96:	1c66      	adds	r6, r4, #1
 8014e98:	b2bf      	uxth	r7, r7
 8014e9a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e9e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014ea2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014ea6:	ea46 0c0c 	orr.w	ip, r6, ip
 8014eaa:	1c7e      	adds	r6, r7, #1
 8014eac:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014eb0:	0976      	lsrs	r6, r6, #5
 8014eb2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014eb6:	ea4c 0c06 	orr.w	ip, ip, r6
 8014eba:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014ebe:	e7ba      	b.n	8014e36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014ec0:	b007      	add	sp, #28
 8014ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014ec8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ecc:	b085      	sub	sp, #20
 8014ece:	468b      	mov	fp, r1
 8014ed0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014ed4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014ed6:	9203      	str	r2, [sp, #12]
 8014ed8:	6841      	ldr	r1, [r0, #4]
 8014eda:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014ede:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014ee2:	fb01 2404 	mla	r4, r1, r4, r2
 8014ee6:	6802      	ldr	r2, [r0, #0]
 8014ee8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014eec:	f8d8 2000 	ldr.w	r2, [r8]
 8014ef0:	9201      	str	r2, [sp, #4]
 8014ef2:	f1bb 0f00 	cmp.w	fp, #0
 8014ef6:	dc03      	bgt.n	8014f00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014ef8:	9a03      	ldr	r2, [sp, #12]
 8014efa:	2a00      	cmp	r2, #0
 8014efc:	f340 814f 	ble.w	801519e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014f00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014f02:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014f06:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014f0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014f0c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014f10:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014f14:	2b00      	cmp	r3, #0
 8014f16:	dd0e      	ble.n	8014f36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014f18:	1408      	asrs	r0, r1, #16
 8014f1a:	d405      	bmi.n	8014f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f1c:	42b8      	cmp	r0, r7
 8014f1e:	da03      	bge.n	8014f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f20:	1410      	asrs	r0, r2, #16
 8014f22:	d401      	bmi.n	8014f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f24:	42b0      	cmp	r0, r6
 8014f26:	db07      	blt.n	8014f38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014f28:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014f2a:	3b01      	subs	r3, #1
 8014f2c:	3402      	adds	r4, #2
 8014f2e:	4401      	add	r1, r0
 8014f30:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014f32:	4402      	add	r2, r0
 8014f34:	e7ee      	b.n	8014f14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014f36:	d017      	beq.n	8014f68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014f38:	1e58      	subs	r0, r3, #1
 8014f3a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014f3c:	fb05 1500 	mla	r5, r5, r0, r1
 8014f40:	142d      	asrs	r5, r5, #16
 8014f42:	d409      	bmi.n	8014f58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014f44:	42bd      	cmp	r5, r7
 8014f46:	da07      	bge.n	8014f58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014f48:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014f4a:	fb05 2000 	mla	r0, r5, r0, r2
 8014f4e:	1400      	asrs	r0, r0, #16
 8014f50:	d402      	bmi.n	8014f58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014f52:	42b0      	cmp	r0, r6
 8014f54:	f2c0 80ba 	blt.w	80150cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014f58:	2600      	movs	r6, #0
 8014f5a:	1998      	adds	r0, r3, r6
 8014f5c:	2800      	cmp	r0, #0
 8014f5e:	dc3e      	bgt.n	8014fde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014f60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014f68:	f1bb 0f00 	cmp.w	fp, #0
 8014f6c:	f340 8117 	ble.w	801519e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014f70:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f7a:	f1bb 0b01 	subs.w	fp, fp, #1
 8014f7e:	eeb0 6a62 	vmov.f32	s12, s5
 8014f82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014f86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f8e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f92:	eeb0 6a43 	vmov.f32	s12, s6
 8014f96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014fa2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014fa6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014faa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014fae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014fb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014fb6:	ee12 2a90 	vmov	r2, s5
 8014fba:	eef0 2a47 	vmov.f32	s5, s14
 8014fbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014fc2:	ee13 2a10 	vmov	r2, s6
 8014fc6:	9311      	str	r3, [sp, #68]	; 0x44
 8014fc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014fca:	eeb0 3a67 	vmov.f32	s6, s15
 8014fce:	fb92 f3f3 	sdiv	r3, r2, r3
 8014fd2:	9a03      	ldr	r2, [sp, #12]
 8014fd4:	9312      	str	r3, [sp, #72]	; 0x48
 8014fd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014fd8:	bf08      	it	eq
 8014fda:	4613      	moveq	r3, r2
 8014fdc:	e789      	b.n	8014ef2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014fde:	140f      	asrs	r7, r1, #16
 8014fe0:	d424      	bmi.n	801502c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014fe2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014fe6:	42bd      	cmp	r5, r7
 8014fe8:	dd20      	ble.n	801502c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014fea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014fee:	d41d      	bmi.n	801502c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014ff0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014ff4:	4560      	cmp	r0, ip
 8014ff6:	dd19      	ble.n	801502c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014ff8:	b22d      	sxth	r5, r5
 8014ffa:	9801      	ldr	r0, [sp, #4]
 8014ffc:	fb0c 7505 	mla	r5, ip, r5, r7
 8015000:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015004:	0e07      	lsrs	r7, r0, #24
 8015006:	2fff      	cmp	r7, #255	; 0xff
 8015008:	d116      	bne.n	8015038 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801500a:	f06f 0501 	mvn.w	r5, #1
 801500e:	fb05 f706 	mul.w	r7, r5, r6
 8015012:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015016:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801501a:	0945      	lsrs	r5, r0, #5
 801501c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015020:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015024:	ea4c 0505 	orr.w	r5, ip, r5
 8015028:	4305      	orrs	r5, r0
 801502a:	53e5      	strh	r5, [r4, r7]
 801502c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801502e:	3e01      	subs	r6, #1
 8015030:	4401      	add	r1, r0
 8015032:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015034:	4402      	add	r2, r0
 8015036:	e790      	b.n	8014f5a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015038:	b2fd      	uxtb	r5, r7
 801503a:	2f00      	cmp	r7, #0
 801503c:	d0f6      	beq.n	801502c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801503e:	f06f 0701 	mvn.w	r7, #1
 8015042:	fa1f f985 	uxth.w	r9, r5
 8015046:	43ed      	mvns	r5, r5
 8015048:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801504c:	4377      	muls	r7, r6
 801504e:	fb1a fa09 	smulbb	sl, sl, r9
 8015052:	b2ed      	uxtb	r5, r5
 8015054:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015058:	9702      	str	r7, [sp, #8]
 801505a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801505e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015062:	fb17 f709 	smulbb	r7, r7, r9
 8015066:	b2c0      	uxtb	r0, r0
 8015068:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801506c:	fb10 f009 	smulbb	r0, r0, r9
 8015070:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015074:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015078:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801507c:	fa1f fc8c 	uxth.w	ip, ip
 8015080:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015084:	fa5f fe8e 	uxtb.w	lr, lr
 8015088:	fb07 a705 	mla	r7, r7, r5, sl
 801508c:	fb0e 0005 	mla	r0, lr, r5, r0
 8015090:	f10c 0501 	add.w	r5, ip, #1
 8015094:	b2bf      	uxth	r7, r7
 8015096:	b280      	uxth	r0, r0
 8015098:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801509c:	f100 0a01 	add.w	sl, r0, #1
 80150a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80150a4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80150a8:	9802      	ldr	r0, [sp, #8]
 80150aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80150ae:	ea4a 0c0c 	orr.w	ip, sl, ip
 80150b2:	f107 0a01 	add.w	sl, r7, #1
 80150b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80150ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80150be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80150c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80150c6:	f824 c000 	strh.w	ip, [r4, r0]
 80150ca:	e7af      	b.n	801502c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80150cc:	f04f 0e00 	mov.w	lr, #0
 80150d0:	eba3 000e 	sub.w	r0, r3, lr
 80150d4:	2800      	cmp	r0, #0
 80150d6:	f77f af43 	ble.w	8014f60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80150da:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80150de:	140d      	asrs	r5, r1, #16
 80150e0:	1410      	asrs	r0, r2, #16
 80150e2:	fb06 5000 	mla	r0, r6, r0, r5
 80150e6:	9d01      	ldr	r5, [sp, #4]
 80150e8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80150ec:	0e2e      	lsrs	r6, r5, #24
 80150ee:	2eff      	cmp	r6, #255	; 0xff
 80150f0:	d112      	bne.n	8015118 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80150f2:	482c      	ldr	r0, [pc, #176]	; (80151a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80150f4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80150f8:	0968      	lsrs	r0, r5, #5
 80150fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80150fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015102:	4330      	orrs	r0, r6
 8015104:	4328      	orrs	r0, r5
 8015106:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801510a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801510c:	f10e 0e01 	add.w	lr, lr, #1
 8015110:	4401      	add	r1, r0
 8015112:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015114:	4402      	add	r2, r0
 8015116:	e7db      	b.n	80150d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015118:	b2f0      	uxtb	r0, r6
 801511a:	2e00      	cmp	r6, #0
 801511c:	d0f5      	beq.n	801510a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801511e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015122:	fa1f f980 	uxth.w	r9, r0
 8015126:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801512a:	43c0      	mvns	r0, r0
 801512c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015130:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015134:	fb16 f609 	smulbb	r6, r6, r9
 8015138:	b2c0      	uxtb	r0, r0
 801513a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801513e:	b2ed      	uxtb	r5, r5
 8015140:	fb1a fa09 	smulbb	sl, sl, r9
 8015144:	fb07 6700 	mla	r7, r7, r0, r6
 8015148:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801514c:	fb15 f509 	smulbb	r5, r5, r9
 8015150:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015154:	b2bf      	uxth	r7, r7
 8015156:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801515a:	fa5f fc8c 	uxtb.w	ip, ip
 801515e:	fb06 a600 	mla	r6, r6, r0, sl
 8015162:	fb0c 5500 	mla	r5, ip, r0, r5
 8015166:	1c78      	adds	r0, r7, #1
 8015168:	b2b6      	uxth	r6, r6
 801516a:	b2ad      	uxth	r5, r5
 801516c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015170:	f105 0a01 	add.w	sl, r5, #1
 8015174:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015178:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801517c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015180:	ea4a 0707 	orr.w	r7, sl, r7
 8015184:	f106 0a01 	add.w	sl, r6, #1
 8015188:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801518c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015190:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015194:	ea47 070a 	orr.w	r7, r7, sl
 8015198:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801519c:	e7b5      	b.n	801510a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801519e:	b005      	add	sp, #20
 80151a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151a4:	fffff800 	.word	0xfffff800

080151a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80151a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151ac:	b087      	sub	sp, #28
 80151ae:	468b      	mov	fp, r1
 80151b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80151b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80151b6:	9203      	str	r2, [sp, #12]
 80151b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80151bc:	6841      	ldr	r1, [r0, #4]
 80151be:	9204      	str	r2, [sp, #16]
 80151c0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80151c4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80151c8:	fb01 2404 	mla	r4, r1, r4, r2
 80151cc:	6802      	ldr	r2, [r0, #0]
 80151ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80151d2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80151d6:	3201      	adds	r2, #1
 80151d8:	f022 0201 	bic.w	r2, r2, #1
 80151dc:	9200      	str	r2, [sp, #0]
 80151de:	f8d9 2000 	ldr.w	r2, [r9]
 80151e2:	9201      	str	r2, [sp, #4]
 80151e4:	f1bb 0f00 	cmp.w	fp, #0
 80151e8:	dc03      	bgt.n	80151f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80151ea:	9a03      	ldr	r2, [sp, #12]
 80151ec:	2a00      	cmp	r2, #0
 80151ee:	f340 816a 	ble.w	80154c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80151f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80151f4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80151f8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80151fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80151fe:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015202:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015206:	2b00      	cmp	r3, #0
 8015208:	dd0e      	ble.n	8015228 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801520a:	1402      	asrs	r2, r0, #16
 801520c:	d405      	bmi.n	801521a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801520e:	42ba      	cmp	r2, r7
 8015210:	da03      	bge.n	801521a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015212:	140a      	asrs	r2, r1, #16
 8015214:	d401      	bmi.n	801521a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015216:	42b2      	cmp	r2, r6
 8015218:	db07      	blt.n	801522a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801521a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801521c:	3b01      	subs	r3, #1
 801521e:	3402      	adds	r4, #2
 8015220:	4410      	add	r0, r2
 8015222:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015224:	4411      	add	r1, r2
 8015226:	e7ee      	b.n	8015206 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015228:	d017      	beq.n	801525a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801522a:	1e5a      	subs	r2, r3, #1
 801522c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801522e:	fb05 0502 	mla	r5, r5, r2, r0
 8015232:	142d      	asrs	r5, r5, #16
 8015234:	d409      	bmi.n	801524a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015236:	42bd      	cmp	r5, r7
 8015238:	da07      	bge.n	801524a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801523a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801523c:	fb05 1202 	mla	r2, r5, r2, r1
 8015240:	1412      	asrs	r2, r2, #16
 8015242:	d402      	bmi.n	801524a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015244:	42b2      	cmp	r2, r6
 8015246:	f2c0 80c8 	blt.w	80153da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801524a:	2700      	movs	r7, #0
 801524c:	19da      	adds	r2, r3, r7
 801524e:	2a00      	cmp	r2, #0
 8015250:	dc3e      	bgt.n	80152d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015252:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015256:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801525a:	f1bb 0f00 	cmp.w	fp, #0
 801525e:	f340 8132 	ble.w	80154c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8015262:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015266:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015268:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801526c:	f1bb 0b01 	subs.w	fp, fp, #1
 8015270:	eeb0 6a62 	vmov.f32	s12, s5
 8015274:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015278:	ee31 1a05 	vadd.f32	s2, s2, s10
 801527c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015280:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015284:	eeb0 6a43 	vmov.f32	s12, s6
 8015288:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801528c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015290:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015294:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015298:	ee77 2a62 	vsub.f32	s5, s14, s5
 801529c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80152a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80152a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80152a8:	ee12 2a90 	vmov	r2, s5
 80152ac:	eef0 2a47 	vmov.f32	s5, s14
 80152b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80152b4:	ee13 2a10 	vmov	r2, s6
 80152b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80152ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80152bc:	eeb0 3a67 	vmov.f32	s6, s15
 80152c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80152c4:	9a03      	ldr	r2, [sp, #12]
 80152c6:	9314      	str	r3, [sp, #80]	; 0x50
 80152c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80152ca:	bf08      	it	eq
 80152cc:	4613      	moveq	r3, r2
 80152ce:	e789      	b.n	80151e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80152d0:	1405      	asrs	r5, r0, #16
 80152d2:	d436      	bmi.n	8015342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80152d4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80152d8:	42aa      	cmp	r2, r5
 80152da:	dd32      	ble.n	8015342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80152dc:	140e      	asrs	r6, r1, #16
 80152de:	d430      	bmi.n	8015342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80152e0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80152e4:	42b2      	cmp	r2, r6
 80152e6:	dd2c      	ble.n	8015342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80152e8:	9a00      	ldr	r2, [sp, #0]
 80152ea:	fb06 5502 	mla	r5, r6, r2, r5
 80152ee:	9e01      	ldr	r6, [sp, #4]
 80152f0:	086a      	lsrs	r2, r5, #1
 80152f2:	5cb2      	ldrb	r2, [r6, r2]
 80152f4:	07ee      	lsls	r6, r5, #31
 80152f6:	bf54      	ite	pl
 80152f8:	f002 020f 	andpl.w	r2, r2, #15
 80152fc:	1112      	asrmi	r2, r2, #4
 80152fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015302:	b2d2      	uxtb	r2, r2
 8015304:	b1ea      	cbz	r2, 8015342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015306:	9d04      	ldr	r5, [sp, #16]
 8015308:	436a      	muls	r2, r5
 801530a:	1c55      	adds	r5, r2, #1
 801530c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015310:	4d6e      	ldr	r5, [pc, #440]	; (80154cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015312:	1212      	asrs	r2, r2, #8
 8015314:	682d      	ldr	r5, [r5, #0]
 8015316:	2aff      	cmp	r2, #255	; 0xff
 8015318:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801531c:	9605      	str	r6, [sp, #20]
 801531e:	d116      	bne.n	801534e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8015320:	f06f 0201 	mvn.w	r2, #1
 8015324:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015328:	fb02 fc07 	mul.w	ip, r2, r7
 801532c:	096a      	lsrs	r2, r5, #5
 801532e:	f026 0607 	bic.w	r6, r6, #7
 8015332:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015336:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801533a:	4316      	orrs	r6, r2
 801533c:	432e      	orrs	r6, r5
 801533e:	f824 600c 	strh.w	r6, [r4, ip]
 8015342:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015344:	3f01      	subs	r7, #1
 8015346:	4410      	add	r0, r2
 8015348:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801534a:	4411      	add	r1, r2
 801534c:	e77e      	b.n	801524c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801534e:	f06f 0601 	mvn.w	r6, #1
 8015352:	fa1f fa82 	uxth.w	sl, r2
 8015356:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801535a:	43d2      	mvns	r2, r2
 801535c:	437e      	muls	r6, r7
 801535e:	b2ed      	uxtb	r5, r5
 8015360:	fb1c fc0a 	smulbb	ip, ip, sl
 8015364:	b2d2      	uxtb	r2, r2
 8015366:	f834 8006 	ldrh.w	r8, [r4, r6]
 801536a:	fb15 f50a 	smulbb	r5, r5, sl
 801536e:	9602      	str	r6, [sp, #8]
 8015370:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015374:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015378:	fb16 f60a 	smulbb	r6, r6, sl
 801537c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015380:	fb0e ce02 	mla	lr, lr, r2, ip
 8015384:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015388:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801538c:	fa1f fe8e 	uxth.w	lr, lr
 8015390:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015394:	fa5f f888 	uxtb.w	r8, r8
 8015398:	fb0c 6c02 	mla	ip, ip, r2, r6
 801539c:	fb08 5502 	mla	r5, r8, r2, r5
 80153a0:	f10e 0201 	add.w	r2, lr, #1
 80153a4:	fa1f fc8c 	uxth.w	ip, ip
 80153a8:	b2ad      	uxth	r5, r5
 80153aa:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80153ae:	9a02      	ldr	r2, [sp, #8]
 80153b0:	1c6e      	adds	r6, r5, #1
 80153b2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80153b6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80153ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80153be:	ea46 0e0e 	orr.w	lr, r6, lr
 80153c2:	f10c 0601 	add.w	r6, ip, #1
 80153c6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80153ca:	0976      	lsrs	r6, r6, #5
 80153cc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80153d0:	ea4e 0e06 	orr.w	lr, lr, r6
 80153d4:	f824 e002 	strh.w	lr, [r4, r2]
 80153d8:	e7b3      	b.n	8015342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80153da:	f04f 0800 	mov.w	r8, #0
 80153de:	eba3 0208 	sub.w	r2, r3, r8
 80153e2:	2a00      	cmp	r2, #0
 80153e4:	f77f af35 	ble.w	8015252 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80153e8:	1402      	asrs	r2, r0, #16
 80153ea:	9e00      	ldr	r6, [sp, #0]
 80153ec:	140d      	asrs	r5, r1, #16
 80153ee:	fb06 2505 	mla	r5, r6, r5, r2
 80153f2:	9e01      	ldr	r6, [sp, #4]
 80153f4:	086a      	lsrs	r2, r5, #1
 80153f6:	07ed      	lsls	r5, r5, #31
 80153f8:	5cb2      	ldrb	r2, [r6, r2]
 80153fa:	bf54      	ite	pl
 80153fc:	f002 020f 	andpl.w	r2, r2, #15
 8015400:	1112      	asrmi	r2, r2, #4
 8015402:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015406:	b2d2      	uxtb	r2, r2
 8015408:	b1c2      	cbz	r2, 801543c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801540a:	9d04      	ldr	r5, [sp, #16]
 801540c:	436a      	muls	r2, r5
 801540e:	1c55      	adds	r5, r2, #1
 8015410:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015414:	4d2d      	ldr	r5, [pc, #180]	; (80154cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015416:	1212      	asrs	r2, r2, #8
 8015418:	682e      	ldr	r6, [r5, #0]
 801541a:	2aff      	cmp	r2, #255	; 0xff
 801541c:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8015420:	d113      	bne.n	801544a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015422:	0972      	lsrs	r2, r6, #5
 8015424:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8015428:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801542c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015430:	f025 0507 	bic.w	r5, r5, #7
 8015434:	4315      	orrs	r5, r2
 8015436:	4335      	orrs	r5, r6
 8015438:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801543c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801543e:	f108 0801 	add.w	r8, r8, #1
 8015442:	4410      	add	r0, r2
 8015444:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015446:	4411      	add	r1, r2
 8015448:	e7c9      	b.n	80153de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801544a:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801544e:	fa1f fa82 	uxth.w	sl, r2
 8015452:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8015456:	43d2      	mvns	r2, r2
 8015458:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801545c:	fb17 f70a 	smulbb	r7, r7, sl
 8015460:	b2d2      	uxtb	r2, r2
 8015462:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015466:	b2f6      	uxtb	r6, r6
 8015468:	b2ed      	uxtb	r5, r5
 801546a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801546e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015472:	fb16 f60a 	smulbb	r6, r6, sl
 8015476:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801547a:	fa1f fc8c 	uxth.w	ip, ip
 801547e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015482:	fb15 f50a 	smulbb	r5, r5, sl
 8015486:	fa5f fe8e 	uxtb.w	lr, lr
 801548a:	fb0e 6602 	mla	r6, lr, r2, r6
 801548e:	fb07 5702 	mla	r7, r7, r2, r5
 8015492:	f10c 0201 	add.w	r2, ip, #1
 8015496:	b2b6      	uxth	r6, r6
 8015498:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801549c:	1c75      	adds	r5, r6, #1
 801549e:	b2bf      	uxth	r7, r7
 80154a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80154a4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80154a8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80154ac:	ea45 0c0c 	orr.w	ip, r5, ip
 80154b0:	1c7d      	adds	r5, r7, #1
 80154b2:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80154b6:	096d      	lsrs	r5, r5, #5
 80154b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80154bc:	ea4c 0c05 	orr.w	ip, ip, r5
 80154c0:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80154c4:	e7ba      	b.n	801543c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80154c6:	b007      	add	sp, #28
 80154c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154cc:	2400e434 	.word	0x2400e434

080154d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80154d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154d4:	b087      	sub	sp, #28
 80154d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80154da:	f8df 8308 	ldr.w	r8, [pc, #776]	; 80157e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80154de:	9815      	ldr	r0, [sp, #84]	; 0x54
 80154e0:	9101      	str	r1, [sp, #4]
 80154e2:	9205      	str	r2, [sp, #20]
 80154e4:	6841      	ldr	r1, [r0, #4]
 80154e6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80154ea:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80154ee:	fb01 2404 	mla	r4, r1, r4, r2
 80154f2:	6802      	ldr	r2, [r0, #0]
 80154f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80154f8:	f8db 2008 	ldr.w	r2, [fp, #8]
 80154fc:	3201      	adds	r2, #1
 80154fe:	f022 0201 	bic.w	r2, r2, #1
 8015502:	9202      	str	r2, [sp, #8]
 8015504:	f8db 2000 	ldr.w	r2, [fp]
 8015508:	9203      	str	r2, [sp, #12]
 801550a:	9a01      	ldr	r2, [sp, #4]
 801550c:	2a00      	cmp	r2, #0
 801550e:	dc03      	bgt.n	8015518 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015510:	9a05      	ldr	r2, [sp, #20]
 8015512:	2a00      	cmp	r2, #0
 8015514:	f340 8162 	ble.w	80157dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015518:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801551a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801551e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015522:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015524:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8015528:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801552c:	2b00      	cmp	r3, #0
 801552e:	dd0e      	ble.n	801554e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015530:	1402      	asrs	r2, r0, #16
 8015532:	d405      	bmi.n	8015540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015534:	42ba      	cmp	r2, r7
 8015536:	da03      	bge.n	8015540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015538:	140a      	asrs	r2, r1, #16
 801553a:	d401      	bmi.n	8015540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801553c:	42b2      	cmp	r2, r6
 801553e:	db07      	blt.n	8015550 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015540:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015542:	3b01      	subs	r3, #1
 8015544:	3402      	adds	r4, #2
 8015546:	4410      	add	r0, r2
 8015548:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801554a:	4411      	add	r1, r2
 801554c:	e7ee      	b.n	801552c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801554e:	d017      	beq.n	8015580 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015550:	1e5a      	subs	r2, r3, #1
 8015552:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015554:	fb05 0502 	mla	r5, r5, r2, r0
 8015558:	142d      	asrs	r5, r5, #16
 801555a:	d409      	bmi.n	8015570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801555c:	42bd      	cmp	r5, r7
 801555e:	da07      	bge.n	8015570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015560:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015562:	fb05 1202 	mla	r2, r5, r2, r1
 8015566:	1412      	asrs	r2, r2, #16
 8015568:	d402      	bmi.n	8015570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801556a:	42b2      	cmp	r2, r6
 801556c:	f2c0 80c3 	blt.w	80156f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8015570:	2500      	movs	r5, #0
 8015572:	195a      	adds	r2, r3, r5
 8015574:	2a00      	cmp	r2, #0
 8015576:	dc3f      	bgt.n	80155f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015578:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801557c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015580:	9b01      	ldr	r3, [sp, #4]
 8015582:	2b00      	cmp	r3, #0
 8015584:	f340 812a 	ble.w	80157dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015588:	ee30 0a04 	vadd.f32	s0, s0, s8
 801558c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801558e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015592:	eeb0 6a62 	vmov.f32	s12, s5
 8015596:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801559a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801559e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155a2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80155a6:	eeb0 6a43 	vmov.f32	s12, s6
 80155aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155ae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80155b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80155be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80155c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80155c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80155ca:	ee12 2a90 	vmov	r2, s5
 80155ce:	eef0 2a47 	vmov.f32	s5, s14
 80155d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80155d6:	ee13 2a10 	vmov	r2, s6
 80155da:	9313      	str	r3, [sp, #76]	; 0x4c
 80155dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155de:	eeb0 3a67 	vmov.f32	s6, s15
 80155e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80155e6:	9314      	str	r3, [sp, #80]	; 0x50
 80155e8:	9b01      	ldr	r3, [sp, #4]
 80155ea:	9a05      	ldr	r2, [sp, #20]
 80155ec:	3b01      	subs	r3, #1
 80155ee:	9301      	str	r3, [sp, #4]
 80155f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155f2:	bf08      	it	eq
 80155f4:	4613      	moveq	r3, r2
 80155f6:	e788      	b.n	801550a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80155f8:	1406      	asrs	r6, r0, #16
 80155fa:	d42c      	bmi.n	8015656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80155fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015600:	42b2      	cmp	r2, r6
 8015602:	dd28      	ble.n	8015656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015604:	140f      	asrs	r7, r1, #16
 8015606:	d426      	bmi.n	8015656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015608:	f8db 200c 	ldr.w	r2, [fp, #12]
 801560c:	42ba      	cmp	r2, r7
 801560e:	dd22      	ble.n	8015656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015610:	9a02      	ldr	r2, [sp, #8]
 8015612:	fb07 6602 	mla	r6, r7, r2, r6
 8015616:	9f03      	ldr	r7, [sp, #12]
 8015618:	0872      	lsrs	r2, r6, #1
 801561a:	07f6      	lsls	r6, r6, #31
 801561c:	5cba      	ldrb	r2, [r7, r2]
 801561e:	bf54      	ite	pl
 8015620:	f002 020f 	andpl.w	r2, r2, #15
 8015624:	1112      	asrmi	r2, r2, #4
 8015626:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801562a:	b2d2      	uxtb	r2, r2
 801562c:	2aff      	cmp	r2, #255	; 0xff
 801562e:	d118      	bne.n	8015662 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015630:	f06f 0601 	mvn.w	r6, #1
 8015634:	f8d8 2000 	ldr.w	r2, [r8]
 8015638:	fb06 f705 	mul.w	r7, r6, r5
 801563c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8015640:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015644:	0956      	lsrs	r6, r2, #5
 8015646:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801564a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801564e:	ea4c 0606 	orr.w	r6, ip, r6
 8015652:	4316      	orrs	r6, r2
 8015654:	53e6      	strh	r6, [r4, r7]
 8015656:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015658:	3d01      	subs	r5, #1
 801565a:	4410      	add	r0, r2
 801565c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801565e:	4411      	add	r1, r2
 8015660:	e787      	b.n	8015572 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015662:	2a00      	cmp	r2, #0
 8015664:	d0f7      	beq.n	8015656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015666:	f06f 0601 	mvn.w	r6, #1
 801566a:	f8d8 c000 	ldr.w	ip, [r8]
 801566e:	fa1f f982 	uxth.w	r9, r2
 8015672:	43d2      	mvns	r2, r2
 8015674:	436e      	muls	r6, r5
 8015676:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801567a:	b2d2      	uxtb	r2, r2
 801567c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015680:	fb1a fa09 	smulbb	sl, sl, r9
 8015684:	9604      	str	r6, [sp, #16]
 8015686:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801568a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801568e:	fb16 f609 	smulbb	r6, r6, r9
 8015692:	fa5f fc8c 	uxtb.w	ip, ip
 8015696:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801569a:	fb1c fc09 	smulbb	ip, ip, r9
 801569e:	fb07 6702 	mla	r7, r7, r2, r6
 80156a2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80156a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80156aa:	b2bf      	uxth	r7, r7
 80156ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80156b0:	fa5f fe8e 	uxtb.w	lr, lr
 80156b4:	fb06 a602 	mla	r6, r6, r2, sl
 80156b8:	fb0e cc02 	mla	ip, lr, r2, ip
 80156bc:	1c7a      	adds	r2, r7, #1
 80156be:	b2b6      	uxth	r6, r6
 80156c0:	fa1f fc8c 	uxth.w	ip, ip
 80156c4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80156c8:	9a04      	ldr	r2, [sp, #16]
 80156ca:	f10c 0a01 	add.w	sl, ip, #1
 80156ce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80156d2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80156d6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80156da:	ea4a 0707 	orr.w	r7, sl, r7
 80156de:	f106 0a01 	add.w	sl, r6, #1
 80156e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80156e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80156ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80156ee:	ea47 070a 	orr.w	r7, r7, sl
 80156f2:	52a7      	strh	r7, [r4, r2]
 80156f4:	e7af      	b.n	8015656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80156f6:	f04f 0e00 	mov.w	lr, #0
 80156fa:	eba3 020e 	sub.w	r2, r3, lr
 80156fe:	2a00      	cmp	r2, #0
 8015700:	f77f af3a 	ble.w	8015578 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015704:	1402      	asrs	r2, r0, #16
 8015706:	9e02      	ldr	r6, [sp, #8]
 8015708:	140d      	asrs	r5, r1, #16
 801570a:	fb06 2505 	mla	r5, r6, r5, r2
 801570e:	9e03      	ldr	r6, [sp, #12]
 8015710:	086a      	lsrs	r2, r5, #1
 8015712:	07ed      	lsls	r5, r5, #31
 8015714:	5cb2      	ldrb	r2, [r6, r2]
 8015716:	bf54      	ite	pl
 8015718:	f002 020f 	andpl.w	r2, r2, #15
 801571c:	1112      	asrmi	r2, r2, #4
 801571e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015722:	b2d2      	uxtb	r2, r2
 8015724:	2aff      	cmp	r2, #255	; 0xff
 8015726:	d115      	bne.n	8015754 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015728:	f8d8 5000 	ldr.w	r5, [r8]
 801572c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8015730:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015734:	096a      	lsrs	r2, r5, #5
 8015736:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801573a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801573e:	4332      	orrs	r2, r6
 8015740:	432a      	orrs	r2, r5
 8015742:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015746:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015748:	f10e 0e01 	add.w	lr, lr, #1
 801574c:	4410      	add	r0, r2
 801574e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015750:	4411      	add	r1, r2
 8015752:	e7d2      	b.n	80156fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015754:	2a00      	cmp	r2, #0
 8015756:	d0f6      	beq.n	8015746 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015758:	f8d8 7000 	ldr.w	r7, [r8]
 801575c:	fa1f f982 	uxth.w	r9, r2
 8015760:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015764:	43d2      	mvns	r2, r2
 8015766:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801576a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801576e:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015772:	fb15 f509 	smulbb	r5, r5, r9
 8015776:	b2d2      	uxtb	r2, r2
 8015778:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801577c:	b2ff      	uxtb	r7, r7
 801577e:	fb1a fa09 	smulbb	sl, sl, r9
 8015782:	fb06 5602 	mla	r6, r6, r2, r5
 8015786:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801578a:	fb17 f709 	smulbb	r7, r7, r9
 801578e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015792:	b2b6      	uxth	r6, r6
 8015794:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015798:	fa5f fc8c 	uxtb.w	ip, ip
 801579c:	fb05 a502 	mla	r5, r5, r2, sl
 80157a0:	fb0c 7702 	mla	r7, ip, r2, r7
 80157a4:	1c72      	adds	r2, r6, #1
 80157a6:	b2ad      	uxth	r5, r5
 80157a8:	b2bf      	uxth	r7, r7
 80157aa:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80157ae:	f107 0a01 	add.w	sl, r7, #1
 80157b2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80157b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80157ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157be:	ea4a 0606 	orr.w	r6, sl, r6
 80157c2:	f105 0a01 	add.w	sl, r5, #1
 80157c6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80157ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80157d2:	ea46 060a 	orr.w	r6, r6, sl
 80157d6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80157da:	e7b4      	b.n	8015746 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80157dc:	b007      	add	sp, #28
 80157de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157e2:	bf00      	nop
 80157e4:	2400e434 	.word	0x2400e434

080157e8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80157e8:	4770      	bx	lr

080157ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80157ea:	4770      	bx	lr

080157ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80157ec:	4770      	bx	lr

080157ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80157ee:	4770      	bx	lr

080157f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80157f0:	4770      	bx	lr

080157f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80157f2:	4770      	bx	lr

080157f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80157f4:	4770      	bx	lr

080157f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80157f6:	4770      	bx	lr

080157f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80157f8:	4770      	bx	lr

080157fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80157fa:	4770      	bx	lr

080157fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80157fc:	4770      	bx	lr

080157fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80157fe:	4770      	bx	lr

08015800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015800:	4770      	bx	lr

08015802 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015802:	4770      	bx	lr

08015804 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015804:	4770      	bx	lr

08015806 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015806:	4770      	bx	lr

08015808 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015808:	4770      	bx	lr

0801580a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801580a:	4770      	bx	lr

0801580c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801580c:	4770      	bx	lr

0801580e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801580e:	4770      	bx	lr

08015810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015810:	4770      	bx	lr

08015812 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015812:	4770      	bx	lr

08015814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015814:	4770      	bx	lr

08015816 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015816:	4770      	bx	lr

08015818 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015818:	4770      	bx	lr

0801581a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801581a:	4770      	bx	lr

0801581c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801581c:	4770      	bx	lr

0801581e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801581e:	4770      	bx	lr

08015820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015820:	4770      	bx	lr

08015822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015822:	4770      	bx	lr

08015824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015824:	4770      	bx	lr

08015826 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015826:	4770      	bx	lr

08015828 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015828:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801582c:	b088      	sub	sp, #32
 801582e:	4606      	mov	r6, r0
 8015830:	4688      	mov	r8, r1
 8015832:	4691      	mov	r9, r2
 8015834:	ac08      	add	r4, sp, #32
 8015836:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801583a:	4620      	mov	r0, r4
 801583c:	f7fd fc62 	bl	8013104 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015840:	6833      	ldr	r3, [r6, #0]
 8015842:	4605      	mov	r5, r0
 8015844:	4620      	mov	r0, r4
 8015846:	699f      	ldr	r7, [r3, #24]
 8015848:	f7fd fb70 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801584c:	4682      	mov	sl, r0
 801584e:	4620      	mov	r0, r4
 8015850:	f7fd fba0 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015854:	9500      	str	r5, [sp, #0]
 8015856:	464b      	mov	r3, r9
 8015858:	4642      	mov	r2, r8
 801585a:	4631      	mov	r1, r6
 801585c:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015860:	a806      	add	r0, sp, #24
 8015862:	47b8      	blx	r7
 8015864:	4628      	mov	r0, r5
 8015866:	b008      	add	sp, #32
 8015868:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801586c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801586c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015870:	2300      	movs	r3, #0
 8015872:	9300      	str	r3, [sp, #0]
 8015874:	4b3d      	ldr	r3, [pc, #244]	; (801596c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8015876:	781b      	ldrb	r3, [r3, #0]
 8015878:	2b00      	cmp	r3, #0
 801587a:	d137      	bne.n	80158ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801587c:	4a3c      	ldr	r2, [pc, #240]	; (8015970 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801587e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015882:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015886:	2b00      	cmp	r3, #0
 8015888:	d132      	bne.n	80158f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801588a:	4b3a      	ldr	r3, [pc, #232]	; (8015974 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801588c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015890:	ac02      	add	r4, sp, #8
 8015892:	6808      	ldr	r0, [r1, #0]
 8015894:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015898:	ab02      	add	r3, sp, #8
 801589a:	6849      	ldr	r1, [r1, #4]
 801589c:	4d36      	ldr	r5, [pc, #216]	; (8015978 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801589e:	c303      	stmia	r3!, {r0, r1}
 80158a0:	4669      	mov	r1, sp
 80158a2:	4620      	mov	r0, r4
 80158a4:	f7fa fbfe 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80158a8:	4668      	mov	r0, sp
 80158aa:	f7fa fbb7 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80158ae:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80158b2:	f8bd 2000 	ldrh.w	r2, [sp]
 80158b6:	462f      	mov	r7, r5
 80158b8:	6828      	ldr	r0, [r5, #0]
 80158ba:	4413      	add	r3, r2
 80158bc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80158c0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80158c4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80158c8:	4413      	add	r3, r2
 80158ca:	f8ad 300a 	strh.w	r3, [sp, #10]
 80158ce:	6803      	ldr	r3, [r0, #0]
 80158d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80158d2:	4798      	blx	r3
 80158d4:	f010 0f01 	tst.w	r0, #1
 80158d8:	d00c      	beq.n	80158f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80158da:	6828      	ldr	r0, [r5, #0]
 80158dc:	6803      	ldr	r3, [r0, #0]
 80158de:	e894 0006 	ldmia.w	r4, {r1, r2}
 80158e2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80158e4:	4798      	blx	r3
 80158e6:	b004      	add	sp, #16
 80158e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80158ec:	4a21      	ldr	r2, [pc, #132]	; (8015974 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80158ee:	e7c6      	b.n	801587e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80158f0:	4b1f      	ldr	r3, [pc, #124]	; (8015970 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80158f2:	e7cb      	b.n	801588c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80158f4:	6838      	ldr	r0, [r7, #0]
 80158f6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80158fa:	6803      	ldr	r3, [r0, #0]
 80158fc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015900:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015906:	4798      	blx	r3
 8015908:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801590c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015910:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015914:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015918:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801591c:	6838      	ldr	r0, [r7, #0]
 801591e:	6803      	ldr	r3, [r0, #0]
 8015920:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015922:	4798      	blx	r3
 8015924:	4a12      	ldr	r2, [pc, #72]	; (8015970 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015926:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801592a:	8813      	ldrh	r3, [r2, #0]
 801592c:	4691      	mov	r9, r2
 801592e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015932:	435d      	muls	r5, r3
 8015934:	fb03 1404 	mla	r4, r3, r4, r1
 8015938:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801593c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015940:	6838      	ldr	r0, [r7, #0]
 8015942:	42ac      	cmp	r4, r5
 8015944:	6803      	ldr	r3, [r0, #0]
 8015946:	d20e      	bcs.n	8015966 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015948:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801594c:	4632      	mov	r2, r6
 801594e:	4643      	mov	r3, r8
 8015950:	4621      	mov	r1, r4
 8015952:	47d0      	blx	sl
 8015954:	f8b9 3000 	ldrh.w	r3, [r9]
 8015958:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801595c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015960:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015964:	e7ec      	b.n	8015940 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8015966:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015968:	4798      	blx	r3
 801596a:	e7bc      	b.n	80158e6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801596c:	2400e41c 	.word	0x2400e41c
 8015970:	2400e41e 	.word	0x2400e41e
 8015974:	2400e420 	.word	0x2400e420
 8015978:	2400e424 	.word	0x2400e424

0801597c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801597c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015980:	b08b      	sub	sp, #44	; 0x2c
 8015982:	460f      	mov	r7, r1
 8015984:	4616      	mov	r6, r2
 8015986:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801598a:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801598e:	f1bb 0f00 	cmp.w	fp, #0
 8015992:	d04a      	beq.n	8015a2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015994:	6810      	ldr	r0, [r2, #0]
 8015996:	ad06      	add	r5, sp, #24
 8015998:	6851      	ldr	r1, [r2, #4]
 801599a:	c503      	stmia	r5!, {r0, r1}
 801599c:	6818      	ldr	r0, [r3, #0]
 801599e:	ad08      	add	r5, sp, #32
 80159a0:	6859      	ldr	r1, [r3, #4]
 80159a2:	c503      	stmia	r5!, {r0, r1}
 80159a4:	a806      	add	r0, sp, #24
 80159a6:	f7fa fb39 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80159aa:	4631      	mov	r1, r6
 80159ac:	a808      	add	r0, sp, #32
 80159ae:	f7fa fb79 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80159b2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80159b6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80159ba:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80159be:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80159c2:	fb16 2103 	smlabb	r1, r6, r3, r2
 80159c6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80159ca:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80159ce:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80159d2:	4f5f      	ldr	r7, [pc, #380]	; (8015b50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80159d4:	440a      	add	r2, r1
 80159d6:	6838      	ldr	r0, [r7, #0]
 80159d8:	46b9      	mov	r9, r7
 80159da:	f8ad 2020 	strh.w	r2, [sp, #32]
 80159de:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80159e2:	4413      	add	r3, r2
 80159e4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80159e8:	6803      	ldr	r3, [r0, #0]
 80159ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80159ec:	4798      	blx	r3
 80159ee:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80159f2:	d11d      	bne.n	8015a30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80159f4:	b9fc      	cbnz	r4, 8015a36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80159f6:	f010 0f01 	tst.w	r0, #1
 80159fa:	d01c      	beq.n	8015a36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80159fc:	f8d9 0000 	ldr.w	r0, [r9]
 8015a00:	2700      	movs	r7, #0
 8015a02:	b2ad      	uxth	r5, r5
 8015a04:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8015a08:	6801      	ldr	r1, [r0, #0]
 8015a0a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015a0e:	f8cd b00c 	str.w	fp, [sp, #12]
 8015a12:	9501      	str	r5, [sp, #4]
 8015a14:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015a18:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015a1c:	9402      	str	r4, [sp, #8]
 8015a1e:	fa1f f488 	uxth.w	r4, r8
 8015a22:	9400      	str	r4, [sp, #0]
 8015a24:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8015a26:	4631      	mov	r1, r6
 8015a28:	47a0      	blx	r4
 8015a2a:	b00b      	add	sp, #44	; 0x2c
 8015a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a30:	f010 0f04 	tst.w	r0, #4
 8015a34:	e7e1      	b.n	80159fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8015a36:	f8d9 0000 	ldr.w	r0, [r9]
 8015a3a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015a3e:	6803      	ldr	r3, [r0, #0]
 8015a40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015a42:	4798      	blx	r3
 8015a44:	4b43      	ldr	r3, [pc, #268]	; (8015b54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015a46:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8015a4a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015a4e:	881a      	ldrh	r2, [r3, #0]
 8015a50:	469a      	mov	sl, r3
 8015a52:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015a56:	fb05 f502 	mul.w	r5, r5, r2
 8015a5a:	fb02 1404 	mla	r4, r2, r4, r1
 8015a5e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015a62:	d059      	beq.n	8015b18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8015a64:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8015a68:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015a6c:	fa1f f28b 	uxth.w	r2, fp
 8015a70:	469e      	mov	lr, r3
 8015a72:	fa1f f989 	uxth.w	r9, r9
 8015a76:	42ac      	cmp	r4, r5
 8015a78:	d264      	bcs.n	8015b44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015a7a:	eb04 0a07 	add.w	sl, r4, r7
 8015a7e:	4554      	cmp	r4, sl
 8015a80:	d23d      	bcs.n	8015afe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8015a82:	8821      	ldrh	r1, [r4, #0]
 8015a84:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015a88:	1208      	asrs	r0, r1, #8
 8015a8a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015a8e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015a92:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015a96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a9a:	00c9      	lsls	r1, r1, #3
 8015a9c:	fb10 f009 	smulbb	r0, r0, r9
 8015aa0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015aa4:	b2c9      	uxtb	r1, r1
 8015aa6:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015aaa:	10d8      	asrs	r0, r3, #3
 8015aac:	fb1b fb09 	smulbb	fp, fp, r9
 8015ab0:	00db      	lsls	r3, r3, #3
 8015ab2:	fa1f fc8c 	uxth.w	ip, ip
 8015ab6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015aba:	fb11 f109 	smulbb	r1, r1, r9
 8015abe:	b2db      	uxtb	r3, r3
 8015ac0:	fb00 b002 	mla	r0, r0, r2, fp
 8015ac4:	f10c 0b01 	add.w	fp, ip, #1
 8015ac8:	fb03 1302 	mla	r3, r3, r2, r1
 8015acc:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015ad0:	b29b      	uxth	r3, r3
 8015ad2:	b280      	uxth	r0, r0
 8015ad4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015ad8:	f103 0c01 	add.w	ip, r3, #1
 8015adc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015ae0:	1c43      	adds	r3, r0, #1
 8015ae2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015ae6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015aea:	0940      	lsrs	r0, r0, #5
 8015aec:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015af0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015af4:	ea4c 0c00 	orr.w	ip, ip, r0
 8015af8:	f824 cb02 	strh.w	ip, [r4], #2
 8015afc:	e7bf      	b.n	8015a7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8015afe:	f8be 3000 	ldrh.w	r3, [lr]
 8015b02:	eba3 0308 	sub.w	r3, r3, r8
 8015b06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b0a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015b0e:	eba3 0308 	sub.w	r3, r3, r8
 8015b12:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015b16:	e7ae      	b.n	8015a76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015b18:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015b1c:	f8d9 0000 	ldr.w	r0, [r9]
 8015b20:	42ac      	cmp	r4, r5
 8015b22:	6803      	ldr	r3, [r0, #0]
 8015b24:	d20e      	bcs.n	8015b44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015b26:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8015b2a:	4632      	mov	r2, r6
 8015b2c:	463b      	mov	r3, r7
 8015b2e:	4621      	mov	r1, r4
 8015b30:	47c0      	blx	r8
 8015b32:	f8ba 3000 	ldrh.w	r3, [sl]
 8015b36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b3a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015b3e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015b42:	e7eb      	b.n	8015b1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015b44:	4b02      	ldr	r3, [pc, #8]	; (8015b50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015b46:	6818      	ldr	r0, [r3, #0]
 8015b48:	6803      	ldr	r3, [r0, #0]
 8015b4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015b4c:	4798      	blx	r3
 8015b4e:	e76c      	b.n	8015a2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015b50:	2400e424 	.word	0x2400e424
 8015b54:	2400e41e 	.word	0x2400e41e

08015b58 <_ZN8touchgfx8LCD16bppD0Ev>:
 8015b58:	b510      	push	{r4, lr}
 8015b5a:	4604      	mov	r4, r0
 8015b5c:	2184      	movs	r1, #132	; 0x84
 8015b5e:	f00b f95c 	bl	8020e1a <_ZdlPvj>
 8015b62:	4620      	mov	r0, r4
 8015b64:	bd10      	pop	{r4, pc}

08015b66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8015b66:	b510      	push	{r4, lr}
 8015b68:	4604      	mov	r4, r0
 8015b6a:	2104      	movs	r1, #4
 8015b6c:	f00b f955 	bl	8020e1a <_ZdlPvj>
 8015b70:	4620      	mov	r0, r4
 8015b72:	bd10      	pop	{r4, pc}

08015b74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8015b74:	b510      	push	{r4, lr}
 8015b76:	4604      	mov	r4, r0
 8015b78:	2104      	movs	r1, #4
 8015b7a:	f00b f94e 	bl	8020e1a <_ZdlPvj>
 8015b7e:	4620      	mov	r0, r4
 8015b80:	bd10      	pop	{r4, pc}

08015b82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8015b82:	b510      	push	{r4, lr}
 8015b84:	4604      	mov	r4, r0
 8015b86:	f640 0144 	movw	r1, #2116	; 0x844
 8015b8a:	f00b f946 	bl	8020e1a <_ZdlPvj>
 8015b8e:	4620      	mov	r0, r4
 8015b90:	bd10      	pop	{r4, pc}

08015b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015b92:	b510      	push	{r4, lr}
 8015b94:	4604      	mov	r4, r0
 8015b96:	2104      	movs	r1, #4
 8015b98:	f00b f93f 	bl	8020e1a <_ZdlPvj>
 8015b9c:	4620      	mov	r0, r4
 8015b9e:	bd10      	pop	{r4, pc}

08015ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015ba0:	b510      	push	{r4, lr}
 8015ba2:	4604      	mov	r4, r0
 8015ba4:	2104      	movs	r1, #4
 8015ba6:	f00b f938 	bl	8020e1a <_ZdlPvj>
 8015baa:	4620      	mov	r0, r4
 8015bac:	bd10      	pop	{r4, pc}

08015bae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015bae:	b510      	push	{r4, lr}
 8015bb0:	4604      	mov	r4, r0
 8015bb2:	2104      	movs	r1, #4
 8015bb4:	f00b f931 	bl	8020e1a <_ZdlPvj>
 8015bb8:	4620      	mov	r0, r4
 8015bba:	bd10      	pop	{r4, pc}

08015bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015bbc:	b510      	push	{r4, lr}
 8015bbe:	4604      	mov	r4, r0
 8015bc0:	2104      	movs	r1, #4
 8015bc2:	f00b f92a 	bl	8020e1a <_ZdlPvj>
 8015bc6:	4620      	mov	r0, r4
 8015bc8:	bd10      	pop	{r4, pc}

08015bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015bca:	b510      	push	{r4, lr}
 8015bcc:	4604      	mov	r4, r0
 8015bce:	2104      	movs	r1, #4
 8015bd0:	f00b f923 	bl	8020e1a <_ZdlPvj>
 8015bd4:	4620      	mov	r0, r4
 8015bd6:	bd10      	pop	{r4, pc}

08015bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015bd8:	b510      	push	{r4, lr}
 8015bda:	4604      	mov	r4, r0
 8015bdc:	2104      	movs	r1, #4
 8015bde:	f00b f91c 	bl	8020e1a <_ZdlPvj>
 8015be2:	4620      	mov	r0, r4
 8015be4:	bd10      	pop	{r4, pc}

08015be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015be6:	b510      	push	{r4, lr}
 8015be8:	4604      	mov	r4, r0
 8015bea:	2104      	movs	r1, #4
 8015bec:	f00b f915 	bl	8020e1a <_ZdlPvj>
 8015bf0:	4620      	mov	r0, r4
 8015bf2:	bd10      	pop	{r4, pc}

08015bf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015bf4:	b510      	push	{r4, lr}
 8015bf6:	4604      	mov	r4, r0
 8015bf8:	2104      	movs	r1, #4
 8015bfa:	f00b f90e 	bl	8020e1a <_ZdlPvj>
 8015bfe:	4620      	mov	r0, r4
 8015c00:	bd10      	pop	{r4, pc}

08015c02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015c02:	b510      	push	{r4, lr}
 8015c04:	4604      	mov	r4, r0
 8015c06:	2104      	movs	r1, #4
 8015c08:	f00b f907 	bl	8020e1a <_ZdlPvj>
 8015c0c:	4620      	mov	r0, r4
 8015c0e:	bd10      	pop	{r4, pc}

08015c10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015c10:	b510      	push	{r4, lr}
 8015c12:	4604      	mov	r4, r0
 8015c14:	2104      	movs	r1, #4
 8015c16:	f00b f900 	bl	8020e1a <_ZdlPvj>
 8015c1a:	4620      	mov	r0, r4
 8015c1c:	bd10      	pop	{r4, pc}

08015c1e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015c1e:	b510      	push	{r4, lr}
 8015c20:	4604      	mov	r4, r0
 8015c22:	2104      	movs	r1, #4
 8015c24:	f00b f8f9 	bl	8020e1a <_ZdlPvj>
 8015c28:	4620      	mov	r0, r4
 8015c2a:	bd10      	pop	{r4, pc}

08015c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015c2c:	b510      	push	{r4, lr}
 8015c2e:	4604      	mov	r4, r0
 8015c30:	2104      	movs	r1, #4
 8015c32:	f00b f8f2 	bl	8020e1a <_ZdlPvj>
 8015c36:	4620      	mov	r0, r4
 8015c38:	bd10      	pop	{r4, pc}

08015c3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015c3a:	b510      	push	{r4, lr}
 8015c3c:	4604      	mov	r4, r0
 8015c3e:	2104      	movs	r1, #4
 8015c40:	f00b f8eb 	bl	8020e1a <_ZdlPvj>
 8015c44:	4620      	mov	r0, r4
 8015c46:	bd10      	pop	{r4, pc}

08015c48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015c48:	b510      	push	{r4, lr}
 8015c4a:	4604      	mov	r4, r0
 8015c4c:	2104      	movs	r1, #4
 8015c4e:	f00b f8e4 	bl	8020e1a <_ZdlPvj>
 8015c52:	4620      	mov	r0, r4
 8015c54:	bd10      	pop	{r4, pc}

08015c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015c56:	b510      	push	{r4, lr}
 8015c58:	4604      	mov	r4, r0
 8015c5a:	2104      	movs	r1, #4
 8015c5c:	f00b f8dd 	bl	8020e1a <_ZdlPvj>
 8015c60:	4620      	mov	r0, r4
 8015c62:	bd10      	pop	{r4, pc}

08015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015c64:	b510      	push	{r4, lr}
 8015c66:	4604      	mov	r4, r0
 8015c68:	2104      	movs	r1, #4
 8015c6a:	f00b f8d6 	bl	8020e1a <_ZdlPvj>
 8015c6e:	4620      	mov	r0, r4
 8015c70:	bd10      	pop	{r4, pc}

08015c72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015c72:	b510      	push	{r4, lr}
 8015c74:	4604      	mov	r4, r0
 8015c76:	2104      	movs	r1, #4
 8015c78:	f00b f8cf 	bl	8020e1a <_ZdlPvj>
 8015c7c:	4620      	mov	r0, r4
 8015c7e:	bd10      	pop	{r4, pc}

08015c80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015c80:	b510      	push	{r4, lr}
 8015c82:	4604      	mov	r4, r0
 8015c84:	2104      	movs	r1, #4
 8015c86:	f00b f8c8 	bl	8020e1a <_ZdlPvj>
 8015c8a:	4620      	mov	r0, r4
 8015c8c:	bd10      	pop	{r4, pc}

08015c8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015c8e:	b510      	push	{r4, lr}
 8015c90:	4604      	mov	r4, r0
 8015c92:	2104      	movs	r1, #4
 8015c94:	f00b f8c1 	bl	8020e1a <_ZdlPvj>
 8015c98:	4620      	mov	r0, r4
 8015c9a:	bd10      	pop	{r4, pc}

08015c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015c9c:	b510      	push	{r4, lr}
 8015c9e:	4604      	mov	r4, r0
 8015ca0:	2104      	movs	r1, #4
 8015ca2:	f00b f8ba 	bl	8020e1a <_ZdlPvj>
 8015ca6:	4620      	mov	r0, r4
 8015ca8:	bd10      	pop	{r4, pc}

08015caa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015caa:	b510      	push	{r4, lr}
 8015cac:	4604      	mov	r4, r0
 8015cae:	2104      	movs	r1, #4
 8015cb0:	f00b f8b3 	bl	8020e1a <_ZdlPvj>
 8015cb4:	4620      	mov	r0, r4
 8015cb6:	bd10      	pop	{r4, pc}

08015cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015cb8:	b510      	push	{r4, lr}
 8015cba:	4604      	mov	r4, r0
 8015cbc:	2104      	movs	r1, #4
 8015cbe:	f00b f8ac 	bl	8020e1a <_ZdlPvj>
 8015cc2:	4620      	mov	r0, r4
 8015cc4:	bd10      	pop	{r4, pc}

08015cc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015cc6:	b510      	push	{r4, lr}
 8015cc8:	4604      	mov	r4, r0
 8015cca:	2104      	movs	r1, #4
 8015ccc:	f00b f8a5 	bl	8020e1a <_ZdlPvj>
 8015cd0:	4620      	mov	r0, r4
 8015cd2:	bd10      	pop	{r4, pc}

08015cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015cd4:	b510      	push	{r4, lr}
 8015cd6:	4604      	mov	r4, r0
 8015cd8:	2104      	movs	r1, #4
 8015cda:	f00b f89e 	bl	8020e1a <_ZdlPvj>
 8015cde:	4620      	mov	r0, r4
 8015ce0:	bd10      	pop	{r4, pc}

08015ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015ce2:	b510      	push	{r4, lr}
 8015ce4:	4604      	mov	r4, r0
 8015ce6:	2104      	movs	r1, #4
 8015ce8:	f00b f897 	bl	8020e1a <_ZdlPvj>
 8015cec:	4620      	mov	r0, r4
 8015cee:	bd10      	pop	{r4, pc}

08015cf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8015cf0:	b510      	push	{r4, lr}
 8015cf2:	4604      	mov	r4, r0
 8015cf4:	2104      	movs	r1, #4
 8015cf6:	f00b f890 	bl	8020e1a <_ZdlPvj>
 8015cfa:	4620      	mov	r0, r4
 8015cfc:	bd10      	pop	{r4, pc}

08015cfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8015cfe:	b510      	push	{r4, lr}
 8015d00:	4604      	mov	r4, r0
 8015d02:	2104      	movs	r1, #4
 8015d04:	f00b f889 	bl	8020e1a <_ZdlPvj>
 8015d08:	4620      	mov	r0, r4
 8015d0a:	bd10      	pop	{r4, pc}

08015d0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015d0c:	b510      	push	{r4, lr}
 8015d0e:	4604      	mov	r4, r0
 8015d10:	2104      	movs	r1, #4
 8015d12:	f00b f882 	bl	8020e1a <_ZdlPvj>
 8015d16:	4620      	mov	r0, r4
 8015d18:	bd10      	pop	{r4, pc}
	...

08015d1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d20:	b08f      	sub	sp, #60	; 0x3c
 8015d22:	461c      	mov	r4, r3
 8015d24:	9205      	str	r2, [sp, #20]
 8015d26:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015d2a:	9100      	str	r1, [sp, #0]
 8015d2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015d2e:	9201      	str	r2, [sp, #4]
 8015d30:	2a00      	cmp	r2, #0
 8015d32:	f000 8116 	beq.w	8015f62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8015d36:	6820      	ldr	r0, [r4, #0]
 8015d38:	aa0a      	add	r2, sp, #40	; 0x28
 8015d3a:	6861      	ldr	r1, [r4, #4]
 8015d3c:	c203      	stmia	r2!, {r0, r1}
 8015d3e:	6818      	ldr	r0, [r3, #0]
 8015d40:	aa0c      	add	r2, sp, #48	; 0x30
 8015d42:	6859      	ldr	r1, [r3, #4]
 8015d44:	c203      	stmia	r2!, {r0, r1}
 8015d46:	a80a      	add	r0, sp, #40	; 0x28
 8015d48:	f7fa f968 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015d4c:	4621      	mov	r1, r4
 8015d4e:	a80c      	add	r0, sp, #48	; 0x30
 8015d50:	f7fa f9a8 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015d54:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8015d58:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8015d5c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8015d60:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8015d64:	bfdb      	ittet	le
 8015d66:	b2b3      	uxthle	r3, r6
 8015d68:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8015d6c:	2301      	movgt	r3, #1
 8015d6e:	fb92 f3f3 	sdivle	r3, r2, r3
 8015d72:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8015d76:	441d      	add	r5, r3
 8015d78:	fb92 f1f3 	sdiv	r1, r2, r3
 8015d7c:	fa1f fc81 	uxth.w	ip, r1
 8015d80:	3d01      	subs	r5, #1
 8015d82:	fb0c 2413 	mls	r4, ip, r3, r2
 8015d86:	4661      	mov	r1, ip
 8015d88:	fb14 f406 	smulbb	r4, r4, r6
 8015d8c:	4404      	add	r4, r0
 8015d8e:	fb95 f5f3 	sdiv	r5, r5, r3
 8015d92:	b2a4      	uxth	r4, r4
 8015d94:	b131      	cbz	r1, 8015da4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8015d96:	9b05      	ldr	r3, [sp, #20]
 8015d98:	9900      	ldr	r1, [sp, #0]
 8015d9a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015d9e:	ba1b      	rev	r3, r3
 8015da0:	4419      	add	r1, r3
 8015da2:	9100      	str	r1, [sp, #0]
 8015da4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8015da8:	b2ad      	uxth	r5, r5
 8015daa:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8015dae:	4418      	add	r0, r3
 8015db0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8015db4:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8015db8:	00ad      	lsls	r5, r5, #2
 8015dba:	441a      	add	r2, r3
 8015dbc:	4b6a      	ldr	r3, [pc, #424]	; (8015f68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015dbe:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8015dc2:	6818      	ldr	r0, [r3, #0]
 8015dc4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015dc8:	6803      	ldr	r3, [r0, #0]
 8015dca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015dcc:	4798      	blx	r3
 8015dce:	4967      	ldr	r1, [pc, #412]	; (8015f6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015dd0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8015dd4:	2c00      	cmp	r4, #0
 8015dd6:	880b      	ldrh	r3, [r1, #0]
 8015dd8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8015ddc:	bf0c      	ite	eq
 8015dde:	46c6      	moveq	lr, r8
 8015de0:	f04f 0e00 	movne.w	lr, #0
 8015de4:	9109      	str	r1, [sp, #36]	; 0x24
 8015de6:	fb03 c202 	mla	r2, r3, r2, ip
 8015dea:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015dee:	4373      	muls	r3, r6
 8015df0:	fa1f fe8e 	uxth.w	lr, lr
 8015df4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015df8:	9103      	str	r1, [sp, #12]
 8015dfa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015dfe:	9306      	str	r3, [sp, #24]
 8015e00:	1d2b      	adds	r3, r5, #4
 8015e02:	9307      	str	r3, [sp, #28]
 8015e04:	9b01      	ldr	r3, [sp, #4]
 8015e06:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8015e0a:	2300      	movs	r3, #0
 8015e0c:	b292      	uxth	r2, r2
 8015e0e:	9302      	str	r3, [sp, #8]
 8015e10:	9204      	str	r2, [sp, #16]
 8015e12:	9a06      	ldr	r2, [sp, #24]
 8015e14:	4282      	cmp	r2, r0
 8015e16:	f240 809f 	bls.w	8015f58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8015e1a:	b963      	cbnz	r3, 8015e36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015e1c:	9b00      	ldr	r3, [sp, #0]
 8015e1e:	781a      	ldrb	r2, [r3, #0]
 8015e20:	0993      	lsrs	r3, r2, #6
 8015e22:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8015e26:	9202      	str	r2, [sp, #8]
 8015e28:	1e5a      	subs	r2, r3, #1
 8015e2a:	2a02      	cmp	r2, #2
 8015e2c:	d815      	bhi.n	8015e5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8015e2e:	9a00      	ldr	r2, [sp, #0]
 8015e30:	b29b      	uxth	r3, r3
 8015e32:	3201      	adds	r2, #1
 8015e34:	9200      	str	r2, [sp, #0]
 8015e36:	b1b4      	cbz	r4, 8015e66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8015e38:	429c      	cmp	r4, r3
 8015e3a:	bf91      	iteee	ls
 8015e3c:	1b1c      	subls	r4, r3, r4
 8015e3e:	1ae4      	subhi	r4, r4, r3
 8015e40:	4671      	movhi	r1, lr
 8015e42:	f04f 0a00 	movhi.w	sl, #0
 8015e46:	bf9b      	ittet	ls
 8015e48:	fa1f fa84 	uxthls.w	sl, r4
 8015e4c:	2400      	movls	r4, #0
 8015e4e:	b2a4      	uxthhi	r4, r4
 8015e50:	fa1f f188 	uxthls.w	r1, r8
 8015e54:	4653      	mov	r3, sl
 8015e56:	468e      	mov	lr, r1
 8015e58:	e7db      	b.n	8015e12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8015e5a:	9a00      	ldr	r2, [sp, #0]
 8015e5c:	9b00      	ldr	r3, [sp, #0]
 8015e5e:	3202      	adds	r2, #2
 8015e60:	785b      	ldrb	r3, [r3, #1]
 8015e62:	9200      	str	r2, [sp, #0]
 8015e64:	e7e7      	b.n	8015e36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015e66:	2202      	movs	r2, #2
 8015e68:	9907      	ldr	r1, [sp, #28]
 8015e6a:	4573      	cmp	r3, lr
 8015e6c:	4615      	mov	r5, r2
 8015e6e:	9a02      	ldr	r2, [sp, #8]
 8015e70:	bf24      	itt	cs
 8015e72:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015e76:	46f1      	movcs	r9, lr
 8015e78:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015e7c:	9905      	ldr	r1, [sp, #20]
 8015e7e:	bf34      	ite	cc
 8015e80:	4699      	movcc	r9, r3
 8015e82:	fa1f fa8a 	uxthcs.w	sl, sl
 8015e86:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015e8a:	bf38      	it	cc
 8015e8c:	ebae 0103 	subcc.w	r1, lr, r3
 8015e90:	9a01      	ldr	r2, [sp, #4]
 8015e92:	bf2e      	itee	cs
 8015e94:	4621      	movcs	r1, r4
 8015e96:	b289      	uxthcc	r1, r1
 8015e98:	46a2      	movcc	sl, r4
 8015e9a:	2aff      	cmp	r2, #255	; 0xff
 8015e9c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015ea0:	d105      	bne.n	8015eae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8015ea2:	4481      	add	r9, r0
 8015ea4:	4581      	cmp	r9, r0
 8015ea6:	d045      	beq.n	8015f34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015ea8:	f820 cb02 	strh.w	ip, [r0], #2
 8015eac:	e7fa      	b.n	8015ea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8015eae:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015eb2:	9d03      	ldr	r5, [sp, #12]
 8015eb4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015eb8:	4481      	add	r9, r0
 8015eba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015ebe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015ec2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015ec6:	fa5f fc8c 	uxtb.w	ip, ip
 8015eca:	436a      	muls	r2, r5
 8015ecc:	fb0b fb05 	mul.w	fp, fp, r5
 8015ed0:	fb0c fc05 	mul.w	ip, ip, r5
 8015ed4:	9208      	str	r2, [sp, #32]
 8015ed6:	4581      	cmp	r9, r0
 8015ed8:	d02c      	beq.n	8015f34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015eda:	8802      	ldrh	r2, [r0, #0]
 8015edc:	9d04      	ldr	r5, [sp, #16]
 8015ede:	1216      	asrs	r6, r2, #8
 8015ee0:	9f04      	ldr	r7, [sp, #16]
 8015ee2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015ee6:	fb16 f605 	smulbb	r6, r6, r5
 8015eea:	9d08      	ldr	r5, [sp, #32]
 8015eec:	442e      	add	r6, r5
 8015eee:	10d5      	asrs	r5, r2, #3
 8015ef0:	00d2      	lsls	r2, r2, #3
 8015ef2:	b2b6      	uxth	r6, r6
 8015ef4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015ef8:	b2d2      	uxtb	r2, r2
 8015efa:	fb15 f507 	smulbb	r5, r5, r7
 8015efe:	fb12 f207 	smulbb	r2, r2, r7
 8015f02:	1c77      	adds	r7, r6, #1
 8015f04:	445d      	add	r5, fp
 8015f06:	4462      	add	r2, ip
 8015f08:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015f0c:	b2ad      	uxth	r5, r5
 8015f0e:	b292      	uxth	r2, r2
 8015f10:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015f14:	1c57      	adds	r7, r2, #1
 8015f16:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8015f1a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015f1e:	4316      	orrs	r6, r2
 8015f20:	1c6a      	adds	r2, r5, #1
 8015f22:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015f26:	096d      	lsrs	r5, r5, #5
 8015f28:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015f2c:	432e      	orrs	r6, r5
 8015f2e:	f820 6b02 	strh.w	r6, [r0], #2
 8015f32:	e7d0      	b.n	8015ed6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8015f34:	4573      	cmp	r3, lr
 8015f36:	d38d      	bcc.n	8015e54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8015f38:	fa1f f188 	uxth.w	r1, r8
 8015f3c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8015f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f42:	1a64      	subs	r4, r4, r1
 8015f44:	881b      	ldrh	r3, [r3, #0]
 8015f46:	b2a4      	uxth	r4, r4
 8015f48:	eba3 0308 	sub.w	r3, r3, r8
 8015f4c:	2c00      	cmp	r4, #0
 8015f4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015f52:	bf18      	it	ne
 8015f54:	2100      	movne	r1, #0
 8015f56:	e77d      	b.n	8015e54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8015f58:	4b03      	ldr	r3, [pc, #12]	; (8015f68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015f5a:	6818      	ldr	r0, [r3, #0]
 8015f5c:	6803      	ldr	r3, [r0, #0]
 8015f5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015f60:	4798      	blx	r3
 8015f62:	b00f      	add	sp, #60	; 0x3c
 8015f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f68:	2400e424 	.word	0x2400e424
 8015f6c:	2400e41e 	.word	0x2400e41e

08015f70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f74:	b09f      	sub	sp, #124	; 0x7c
 8015f76:	461d      	mov	r5, r3
 8015f78:	4604      	mov	r4, r0
 8015f7a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015f7c:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8015f80:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8015f84:	9209      	str	r2, [sp, #36]	; 0x24
 8015f86:	2a00      	cmp	r2, #0
 8015f88:	f000 81ed 	beq.w	8016366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8015f8c:	6828      	ldr	r0, [r5, #0]
 8015f8e:	aa1a      	add	r2, sp, #104	; 0x68
 8015f90:	6869      	ldr	r1, [r5, #4]
 8015f92:	c203      	stmia	r2!, {r0, r1}
 8015f94:	6818      	ldr	r0, [r3, #0]
 8015f96:	aa1c      	add	r2, sp, #112	; 0x70
 8015f98:	6859      	ldr	r1, [r3, #4]
 8015f9a:	c203      	stmia	r2!, {r0, r1}
 8015f9c:	a81a      	add	r0, sp, #104	; 0x68
 8015f9e:	f7fa f83d 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015fa2:	4629      	mov	r1, r5
 8015fa4:	a81c      	add	r0, sp, #112	; 0x70
 8015fa6:	f7fa f87d 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015faa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8015fae:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8015fb2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8015fb6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8015fba:	bfdb      	ittet	le
 8015fbc:	b29a      	uxthle	r2, r3
 8015fbe:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8015fc2:	2201      	movgt	r2, #1
 8015fc4:	fb91 f2f2 	sdivle	r2, r1, r2
 8015fc8:	9202      	str	r2, [sp, #8]
 8015fca:	9802      	ldr	r0, [sp, #8]
 8015fcc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8015fd0:	9902      	ldr	r1, [sp, #8]
 8015fd2:	fb92 f0f0 	sdiv	r0, r2, r0
 8015fd6:	b280      	uxth	r0, r0
 8015fd8:	4488      	add	r8, r1
 8015fda:	9010      	str	r0, [sp, #64]	; 0x40
 8015fdc:	f108 38ff 	add.w	r8, r8, #4294967295
 8015fe0:	9802      	ldr	r0, [sp, #8]
 8015fe2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8015fe4:	fb05 2510 	mls	r5, r5, r0, r2
 8015fe8:	fb98 f8f1 	sdiv	r8, r8, r1
 8015fec:	fb15 f503 	smulbb	r5, r5, r3
 8015ff0:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8015ff4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8015ff8:	f108 0801 	add.w	r8, r8, #1
 8015ffc:	440d      	add	r5, r1
 8015ffe:	4419      	add	r1, r3
 8016000:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8016004:	fa1f f888 	uxth.w	r8, r8
 8016008:	441a      	add	r2, r3
 801600a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801600e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8016012:	b2ad      	uxth	r5, r5
 8016014:	9304      	str	r3, [sp, #16]
 8016016:	4b94      	ldr	r3, [pc, #592]	; (8016268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016018:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801601c:	6818      	ldr	r0, [r3, #0]
 801601e:	6803      	ldr	r3, [r0, #0]
 8016020:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016022:	4798      	blx	r3
 8016024:	4b91      	ldr	r3, [pc, #580]	; (801626c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016026:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801602a:	2d00      	cmp	r5, #0
 801602c:	881a      	ldrh	r2, [r3, #0]
 801602e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8016032:	fb02 f606 	mul.w	r6, r2, r6
 8016036:	fb02 7101 	mla	r1, r2, r1, r7
 801603a:	9318      	str	r3, [sp, #96]	; 0x60
 801603c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016040:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8016044:	f04f 0100 	mov.w	r1, #0
 8016048:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801604c:	930f      	str	r3, [sp, #60]	; 0x3c
 801604e:	4b88      	ldr	r3, [pc, #544]	; (8016270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8016050:	920a      	str	r2, [sp, #40]	; 0x28
 8016052:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016054:	eba3 0304 	sub.w	r3, r3, r4
 8016058:	910d      	str	r1, [sp, #52]	; 0x34
 801605a:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801605e:	9319      	str	r3, [sp, #100]	; 0x64
 8016060:	f108 0204 	add.w	r2, r8, #4
 8016064:	9211      	str	r2, [sp, #68]	; 0x44
 8016066:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016068:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801606c:	9215      	str	r2, [sp, #84]	; 0x54
 801606e:	9a04      	ldr	r2, [sp, #16]
 8016070:	bf18      	it	ne
 8016072:	2200      	movne	r2, #0
 8016074:	b292      	uxth	r2, r2
 8016076:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016078:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801607a:	fa11 f383 	uxtah	r3, r1, r3
 801607e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016080:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016084:	3304      	adds	r3, #4
 8016086:	9306      	str	r3, [sp, #24]
 8016088:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801608a:	4283      	cmp	r3, r0
 801608c:	f240 8166 	bls.w	801635c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8016090:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8016094:	f04f 0a01 	mov.w	sl, #1
 8016098:	9902      	ldr	r1, [sp, #8]
 801609a:	9e06      	ldr	r6, [sp, #24]
 801609c:	46d3      	mov	fp, sl
 801609e:	4657      	mov	r7, sl
 80160a0:	7836      	ldrb	r6, [r6, #0]
 80160a2:	fbb5 f3f3 	udiv	r3, r5, r3
 80160a6:	1acb      	subs	r3, r1, r3
 80160a8:	9612      	str	r6, [sp, #72]	; 0x48
 80160aa:	3601      	adds	r6, #1
 80160ac:	b29b      	uxth	r3, r3
 80160ae:	9605      	str	r6, [sp, #20]
 80160b0:	9316      	str	r3, [sp, #88]	; 0x58
 80160b2:	9b06      	ldr	r3, [sp, #24]
 80160b4:	7859      	ldrb	r1, [r3, #1]
 80160b6:	789b      	ldrb	r3, [r3, #2]
 80160b8:	021b      	lsls	r3, r3, #8
 80160ba:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80160be:	9906      	ldr	r1, [sp, #24]
 80160c0:	78c9      	ldrb	r1, [r1, #3]
 80160c2:	430b      	orrs	r3, r1
 80160c4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80160c6:	4419      	add	r1, r3
 80160c8:	1c4e      	adds	r6, r1, #1
 80160ca:	7849      	ldrb	r1, [r1, #1]
 80160cc:	9603      	str	r6, [sp, #12]
 80160ce:	0209      	lsls	r1, r1, #8
 80160d0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80160d2:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 80160d6:	5cf3      	ldrb	r3, [r6, r3]
 80160d8:	4319      	orrs	r1, r3
 80160da:	b28b      	uxth	r3, r1
 80160dc:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 80160e0:	930c      	str	r3, [sp, #48]	; 0x30
 80160e2:	2300      	movs	r3, #0
 80160e4:	9307      	str	r3, [sp, #28]
 80160e6:	469c      	mov	ip, r3
 80160e8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80160ec:	930e      	str	r3, [sp, #56]	; 0x38
 80160ee:	2d00      	cmp	r5, #0
 80160f0:	d07e      	beq.n	80161f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 80160f2:	42af      	cmp	r7, r5
 80160f4:	d26e      	bcs.n	80161d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 80160f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80160f8:	1bed      	subs	r5, r5, r7
 80160fa:	9201      	str	r2, [sp, #4]
 80160fc:	4283      	cmp	r3, r0
 80160fe:	b2ad      	uxth	r5, r5
 8016100:	d802      	bhi.n	8016108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8016102:	e073      	b.n	80161ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016104:	2b00      	cmp	r3, #0
 8016106:	d15f      	bne.n	80161c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8016108:	9b03      	ldr	r3, [sp, #12]
 801610a:	f1cb 0207 	rsb	r2, fp, #7
 801610e:	785b      	ldrb	r3, [r3, #1]
 8016110:	4093      	lsls	r3, r2
 8016112:	005b      	lsls	r3, r3, #1
 8016114:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016118:	9b03      	ldr	r3, [sp, #12]
 801611a:	781b      	ldrb	r3, [r3, #0]
 801611c:	fa43 f30b 	asr.w	r3, r3, fp
 8016120:	b2db      	uxtb	r3, r3
 8016122:	4313      	orrs	r3, r2
 8016124:	f10b 0201 	add.w	r2, fp, #1
 8016128:	fa5f fb82 	uxtb.w	fp, r2
 801612c:	9a03      	ldr	r2, [sp, #12]
 801612e:	b29f      	uxth	r7, r3
 8016130:	f1bb 0f08 	cmp.w	fp, #8
 8016134:	bf13      	iteet	ne
 8016136:	3201      	addne	r2, #1
 8016138:	3202      	addeq	r2, #2
 801613a:	f04f 0b00 	moveq.w	fp, #0
 801613e:	9203      	strne	r2, [sp, #12]
 8016140:	bf08      	it	eq
 8016142:	9203      	streq	r2, [sp, #12]
 8016144:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016146:	42ba      	cmp	r2, r7
 8016148:	d309      	bcc.n	801615e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801614a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801614e:	2301      	movs	r3, #1
 8016150:	9a05      	ldr	r2, [sp, #20]
 8016152:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8016156:	d30e      	bcc.n	8016176 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8016158:	469a      	mov	sl, r3
 801615a:	2600      	movs	r6, #0
 801615c:	e035      	b.n	80161ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 801615e:	9b05      	ldr	r3, [sp, #20]
 8016160:	429f      	cmp	r7, r3
 8016162:	d318      	bcc.n	8016196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8016164:	eb04 030a 	add.w	r3, r4, sl
 8016168:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801616c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 8016170:	f10a 0301 	add.w	r3, sl, #1
 8016174:	b29b      	uxth	r3, r3
 8016176:	9a05      	ldr	r2, [sp, #20]
 8016178:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801617c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016180:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016182:	7116      	strb	r6, [r2, #4]
 8016184:	f10a 0601 	add.w	r6, sl, #1
 8016188:	80d1      	strh	r1, [r2, #6]
 801618a:	7156      	strb	r6, [r2, #5]
 801618c:	9a05      	ldr	r2, [sp, #20]
 801618e:	3201      	adds	r2, #1
 8016190:	b292      	uxth	r2, r2
 8016192:	9205      	str	r2, [sp, #20]
 8016194:	e7e0      	b.n	8016158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 8016196:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801619a:	463a      	mov	r2, r7
 801619c:	795b      	ldrb	r3, [r3, #5]
 801619e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 80161a2:	4426      	add	r6, r4
 80161a4:	9919      	ldr	r1, [sp, #100]	; 0x64
 80161a6:	eb01 0c06 	add.w	ip, r1, r6
 80161aa:	f1bc 0f00 	cmp.w	ip, #0
 80161ae:	dd07      	ble.n	80161c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 80161b0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80161b4:	f892 c004 	ldrb.w	ip, [r2, #4]
 80161b8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80161bc:	88d2      	ldrh	r2, [r2, #6]
 80161be:	e7f1      	b.n	80161a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 80161c0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80161c4:	b29b      	uxth	r3, r3
 80161c6:	e7c3      	b.n	8016150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 80161c8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80161ca:	970c      	str	r7, [sp, #48]	; 0x30
 80161cc:	46b4      	mov	ip, r6
 80161ce:	9a01      	ldr	r2, [sp, #4]
 80161d0:	461f      	mov	r7, r3
 80161d2:	e78c      	b.n	80160ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 80161d4:	1b7b      	subs	r3, r7, r5
 80161d6:	eb0c 0605 	add.w	r6, ip, r5
 80161da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80161de:	b29b      	uxth	r3, r3
 80161e0:	b2b6      	uxth	r6, r6
 80161e2:	9201      	str	r2, [sp, #4]
 80161e4:	2500      	movs	r5, #0
 80161e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80161e8:	4282      	cmp	r2, r0
 80161ea:	d88b      	bhi.n	8016104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80161ec:	9a01      	ldr	r2, [sp, #4]
 80161ee:	e74b      	b.n	8016088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 80161f0:	4297      	cmp	r7, r2
 80161f2:	d332      	bcc.n	801625a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 80161f4:	1abb      	subs	r3, r7, r2
 80161f6:	9208      	str	r2, [sp, #32]
 80161f8:	9501      	str	r5, [sp, #4]
 80161fa:	b29b      	uxth	r3, r3
 80161fc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80161fe:	29ff      	cmp	r1, #255	; 0xff
 8016200:	9908      	ldr	r1, [sp, #32]
 8016202:	eb0c 0601 	add.w	r6, ip, r1
 8016206:	d135      	bne.n	8016274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016208:	f1a0 0e02 	sub.w	lr, r0, #2
 801620c:	b2b6      	uxth	r6, r6
 801620e:	45b4      	cmp	ip, r6
 8016210:	f040 808c 	bne.w	801632c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8016214:	9908      	ldr	r1, [sp, #32]
 8016216:	4297      	cmp	r7, r2
 8016218:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801621c:	d3e2      	bcc.n	80161e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 801621e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016220:	9904      	ldr	r1, [sp, #16]
 8016222:	8812      	ldrh	r2, [r2, #0]
 8016224:	1a52      	subs	r2, r2, r1
 8016226:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016228:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801622c:	9a07      	ldr	r2, [sp, #28]
 801622e:	3201      	adds	r2, #1
 8016230:	428a      	cmp	r2, r1
 8016232:	9207      	str	r2, [sp, #28]
 8016234:	f040 8087 	bne.w	8016346 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 8016238:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801623c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 8016240:	9b04      	ldr	r3, [sp, #16]
 8016242:	1bed      	subs	r5, r5, r7
 8016244:	b2ad      	uxth	r5, r5
 8016246:	2d00      	cmp	r5, #0
 8016248:	bf08      	it	eq
 801624a:	461a      	moveq	r2, r3
 801624c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801624e:	bf18      	it	ne
 8016250:	2200      	movne	r2, #0
 8016252:	3301      	adds	r3, #1
 8016254:	b292      	uxth	r2, r2
 8016256:	930d      	str	r3, [sp, #52]	; 0x34
 8016258:	e70d      	b.n	8016076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 801625a:	1bd1      	subs	r1, r2, r7
 801625c:	9708      	str	r7, [sp, #32]
 801625e:	b28b      	uxth	r3, r1
 8016260:	9301      	str	r3, [sp, #4]
 8016262:	462b      	mov	r3, r5
 8016264:	e7ca      	b.n	80161fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 8016266:	bf00      	nop
 8016268:	2400e424 	.word	0x2400e424
 801626c:	2400e41e 	.word	0x2400e41e
 8016270:	fffff7fb 	.word	0xfffff7fb
 8016274:	b2b6      	uxth	r6, r6
 8016276:	900b      	str	r0, [sp, #44]	; 0x2c
 8016278:	45b4      	cmp	ip, r6
 801627a:	d0cb      	beq.n	8016214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 801627c:	f10c 0101 	add.w	r1, ip, #1
 8016280:	44a4      	add	ip, r4
 8016282:	9117      	str	r1, [sp, #92]	; 0x5c
 8016284:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8016288:	9911      	ldr	r1, [sp, #68]	; 0x44
 801628a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801628e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8016290:	ea4f 2825 	mov.w	r8, r5, asr #8
 8016294:	f8b1 c000 	ldrh.w	ip, [r1]
 8016298:	990e      	ldr	r1, [sp, #56]	; 0x38
 801629a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801629e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80162a2:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80162a6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80162aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80162ae:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80162b2:	fb1e fe01 	smulbb	lr, lr, r1
 80162b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80162b8:	fa5f fc8c 	uxtb.w	ip, ip
 80162bc:	fb08 e801 	mla	r8, r8, r1, lr
 80162c0:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80162c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80162c6:	00ed      	lsls	r5, r5, #3
 80162c8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80162cc:	fa1f f888 	uxth.w	r8, r8
 80162d0:	fb19 f901 	smulbb	r9, r9, r1
 80162d4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80162d6:	b2ed      	uxtb	r5, r5
 80162d8:	fb0e 9e01 	mla	lr, lr, r1, r9
 80162dc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80162de:	fb1c fc01 	smulbb	ip, ip, r1
 80162e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80162e4:	fa1f fe8e 	uxth.w	lr, lr
 80162e8:	fb05 c501 	mla	r5, r5, r1, ip
 80162ec:	f108 0c01 	add.w	ip, r8, #1
 80162f0:	f10e 0901 	add.w	r9, lr, #1
 80162f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80162f6:	b2ad      	uxth	r5, r5
 80162f8:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80162fc:	f105 0c01 	add.w	ip, r5, #1
 8016300:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016304:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8016308:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801630c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016310:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016314:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016318:	ea4c 0808 	orr.w	r8, ip, r8
 801631c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 8016320:	ea48 0809 	orr.w	r8, r8, r9
 8016324:	f821 8b02 	strh.w	r8, [r1], #2
 8016328:	910b      	str	r1, [sp, #44]	; 0x2c
 801632a:	e7a5      	b.n	8016278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 801632c:	f10c 0801 	add.w	r8, ip, #1
 8016330:	44a4      	add	ip, r4
 8016332:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016334:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8016338:	fa1f fc88 	uxth.w	ip, r8
 801633c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016340:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016344:	e763      	b.n	801620e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 8016346:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801634a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801634e:	1aad      	subs	r5, r5, r2
 8016350:	b2ad      	uxth	r5, r5
 8016352:	2d00      	cmp	r5, #0
 8016354:	bf18      	it	ne
 8016356:	2200      	movne	r2, #0
 8016358:	9201      	str	r2, [sp, #4]
 801635a:	e744      	b.n	80161e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 801635c:	4b03      	ldr	r3, [pc, #12]	; (801636c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 801635e:	6818      	ldr	r0, [r3, #0]
 8016360:	6803      	ldr	r3, [r0, #0]
 8016362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016364:	4798      	blx	r3
 8016366:	b01f      	add	sp, #124	; 0x7c
 8016368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801636c:	2400e424 	.word	0x2400e424

08016370 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016374:	b08f      	sub	sp, #60	; 0x3c
 8016376:	461c      	mov	r4, r3
 8016378:	460f      	mov	r7, r1
 801637a:	9203      	str	r2, [sp, #12]
 801637c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016380:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016382:	9202      	str	r2, [sp, #8]
 8016384:	2a00      	cmp	r2, #0
 8016386:	f000 8128 	beq.w	80165da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801638a:	6820      	ldr	r0, [r4, #0]
 801638c:	aa0a      	add	r2, sp, #40	; 0x28
 801638e:	6861      	ldr	r1, [r4, #4]
 8016390:	c203      	stmia	r2!, {r0, r1}
 8016392:	6818      	ldr	r0, [r3, #0]
 8016394:	aa0c      	add	r2, sp, #48	; 0x30
 8016396:	6859      	ldr	r1, [r3, #4]
 8016398:	c203      	stmia	r2!, {r0, r1}
 801639a:	a80a      	add	r0, sp, #40	; 0x28
 801639c:	f7f9 fe3e 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80163a0:	4621      	mov	r1, r4
 80163a2:	a80c      	add	r0, sp, #48	; 0x30
 80163a4:	f7f9 fe7e 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80163a8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80163ac:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 80163b0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80163b4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 80163b8:	bfdb      	ittet	le
 80163ba:	b2b3      	uxthle	r3, r6
 80163bc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 80163c0:	2301      	movgt	r3, #1
 80163c2:	fb92 f3f3 	sdivle	r3, r2, r3
 80163c6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80163ca:	441d      	add	r5, r3
 80163cc:	fb92 f1f3 	sdiv	r1, r2, r3
 80163d0:	fa1f fc81 	uxth.w	ip, r1
 80163d4:	3d01      	subs	r5, #1
 80163d6:	fb0c 2413 	mls	r4, ip, r3, r2
 80163da:	4661      	mov	r1, ip
 80163dc:	fb14 f406 	smulbb	r4, r4, r6
 80163e0:	4404      	add	r4, r0
 80163e2:	fb95 f5f3 	sdiv	r5, r5, r3
 80163e6:	b2a4      	uxth	r4, r4
 80163e8:	b121      	cbz	r1, 80163f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 80163ea:	9b03      	ldr	r3, [sp, #12]
 80163ec:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80163f0:	ba1b      	rev	r3, r3
 80163f2:	441f      	add	r7, r3
 80163f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80163f8:	b2ad      	uxth	r5, r5
 80163fa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80163fe:	4418      	add	r0, r3
 8016400:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8016404:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8016408:	00ad      	lsls	r5, r5, #2
 801640a:	441a      	add	r2, r3
 801640c:	4b74      	ldr	r3, [pc, #464]	; (80165e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801640e:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8016412:	6818      	ldr	r0, [r3, #0]
 8016414:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016418:	6803      	ldr	r3, [r0, #0]
 801641a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801641c:	4798      	blx	r3
 801641e:	4a71      	ldr	r2, [pc, #452]	; (80165e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016420:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8016424:	2c00      	cmp	r4, #0
 8016426:	8813      	ldrh	r3, [r2, #0]
 8016428:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801642c:	bf0c      	ite	eq
 801642e:	46c8      	moveq	r8, r9
 8016430:	f04f 0800 	movne.w	r8, #0
 8016434:	9209      	str	r2, [sp, #36]	; 0x24
 8016436:	fb03 c101 	mla	r1, r3, r1, ip
 801643a:	4373      	muls	r3, r6
 801643c:	fa1f f888 	uxth.w	r8, r8
 8016440:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016444:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016448:	9304      	str	r3, [sp, #16]
 801644a:	1d2b      	adds	r3, r5, #4
 801644c:	9305      	str	r3, [sp, #20]
 801644e:	2300      	movs	r3, #0
 8016450:	9301      	str	r3, [sp, #4]
 8016452:	9a04      	ldr	r2, [sp, #16]
 8016454:	4282      	cmp	r2, r0
 8016456:	f240 80bb 	bls.w	80165d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801645a:	b95b      	cbnz	r3, 8016474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 801645c:	783a      	ldrb	r2, [r7, #0]
 801645e:	0993      	lsrs	r3, r2, #6
 8016460:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8016464:	9201      	str	r2, [sp, #4]
 8016466:	1e5a      	subs	r2, r3, #1
 8016468:	2a02      	cmp	r2, #2
 801646a:	bf8d      	iteet	hi
 801646c:	787b      	ldrbhi	r3, [r7, #1]
 801646e:	3701      	addls	r7, #1
 8016470:	b29b      	uxthls	r3, r3
 8016472:	3702      	addhi	r7, #2
 8016474:	b184      	cbz	r4, 8016498 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 8016476:	429c      	cmp	r4, r3
 8016478:	bf91      	iteee	ls
 801647a:	1b1c      	subls	r4, r3, r4
 801647c:	1ae4      	subhi	r4, r4, r3
 801647e:	46c4      	movhi	ip, r8
 8016480:	f04f 0a00 	movhi.w	sl, #0
 8016484:	bf9b      	ittet	ls
 8016486:	fa1f fa84 	uxthls.w	sl, r4
 801648a:	2400      	movls	r4, #0
 801648c:	b2a4      	uxthhi	r4, r4
 801648e:	fa1f fc89 	uxthls.w	ip, r9
 8016492:	4653      	mov	r3, sl
 8016494:	46e0      	mov	r8, ip
 8016496:	e7dc      	b.n	8016452 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8016498:	2204      	movs	r2, #4
 801649a:	9905      	ldr	r1, [sp, #20]
 801649c:	4543      	cmp	r3, r8
 801649e:	4615      	mov	r5, r2
 80164a0:	9a01      	ldr	r2, [sp, #4]
 80164a2:	bf24      	itt	cs
 80164a4:	eba3 0a08 	subcs.w	sl, r3, r8
 80164a8:	46c6      	movcs	lr, r8
 80164aa:	fb15 1202 	smlabb	r2, r5, r2, r1
 80164ae:	9903      	ldr	r1, [sp, #12]
 80164b0:	bf3c      	itt	cc
 80164b2:	eba8 0c03 	subcc.w	ip, r8, r3
 80164b6:	469e      	movcc	lr, r3
 80164b8:	588a      	ldr	r2, [r1, r2]
 80164ba:	bf26      	itte	cs
 80164bc:	fa1f fa8a 	uxthcs.w	sl, sl
 80164c0:	46a4      	movcs	ip, r4
 80164c2:	fa1f fc8c 	uxthcc.w	ip, ip
 80164c6:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80164ca:	bf38      	it	cc
 80164cc:	46a2      	movcc	sl, r4
 80164ce:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80164d2:	2900      	cmp	r1, #0
 80164d4:	d066      	beq.n	80165a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80164d6:	29ff      	cmp	r1, #255	; 0xff
 80164d8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80164dc:	d114      	bne.n	8016508 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80164de:	9d02      	ldr	r5, [sp, #8]
 80164e0:	2dff      	cmp	r5, #255	; 0xff
 80164e2:	d111      	bne.n	8016508 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80164e4:	0951      	lsrs	r1, r2, #5
 80164e6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80164ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80164ee:	4486      	add	lr, r0
 80164f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80164f4:	f026 0607 	bic.w	r6, r6, #7
 80164f8:	430e      	orrs	r6, r1
 80164fa:	4316      	orrs	r6, r2
 80164fc:	b2b6      	uxth	r6, r6
 80164fe:	4586      	cmp	lr, r0
 8016500:	d051      	beq.n	80165a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016502:	f820 6b02 	strh.w	r6, [r0], #2
 8016506:	e7fa      	b.n	80164fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016508:	9d02      	ldr	r5, [sp, #8]
 801650a:	b2f6      	uxtb	r6, r6
 801650c:	4486      	add	lr, r0
 801650e:	4369      	muls	r1, r5
 8016510:	1c4d      	adds	r5, r1, #1
 8016512:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016516:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801651a:	b2d2      	uxtb	r2, r2
 801651c:	122d      	asrs	r5, r5, #8
 801651e:	ea6f 0b05 	mvn.w	fp, r5
 8016522:	b2ad      	uxth	r5, r5
 8016524:	fb11 f105 	smulbb	r1, r1, r5
 8016528:	fa5f fb8b 	uxtb.w	fp, fp
 801652c:	fb16 f605 	smulbb	r6, r6, r5
 8016530:	fb12 f205 	smulbb	r2, r2, r5
 8016534:	b289      	uxth	r1, r1
 8016536:	b2b6      	uxth	r6, r6
 8016538:	b292      	uxth	r2, r2
 801653a:	9106      	str	r1, [sp, #24]
 801653c:	9607      	str	r6, [sp, #28]
 801653e:	9208      	str	r2, [sp, #32]
 8016540:	4586      	cmp	lr, r0
 8016542:	d030      	beq.n	80165a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016544:	8802      	ldrh	r2, [r0, #0]
 8016546:	9906      	ldr	r1, [sp, #24]
 8016548:	1216      	asrs	r6, r2, #8
 801654a:	10d5      	asrs	r5, r2, #3
 801654c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016550:	00d2      	lsls	r2, r2, #3
 8016552:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016556:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801655a:	b2d2      	uxtb	r2, r2
 801655c:	fb06 160b 	mla	r6, r6, fp, r1
 8016560:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016564:	9907      	ldr	r1, [sp, #28]
 8016566:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801656a:	b2b6      	uxth	r6, r6
 801656c:	fb05 150b 	mla	r5, r5, fp, r1
 8016570:	9908      	ldr	r1, [sp, #32]
 8016572:	fb02 120b 	mla	r2, r2, fp, r1
 8016576:	1c71      	adds	r1, r6, #1
 8016578:	b2ad      	uxth	r5, r5
 801657a:	b292      	uxth	r2, r2
 801657c:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016580:	1c51      	adds	r1, r2, #1
 8016582:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016586:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801658a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801658e:	4316      	orrs	r6, r2
 8016590:	1c6a      	adds	r2, r5, #1
 8016592:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016596:	096d      	lsrs	r5, r5, #5
 8016598:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801659c:	432e      	orrs	r6, r5
 801659e:	f820 6b02 	strh.w	r6, [r0], #2
 80165a2:	e7cd      	b.n	8016540 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80165a4:	4470      	add	r0, lr
 80165a6:	4543      	cmp	r3, r8
 80165a8:	f4ff af73 	bcc.w	8016492 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80165ac:	fa1f fc89 	uxth.w	ip, r9
 80165b0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80165b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165b6:	eba4 040c 	sub.w	r4, r4, ip
 80165ba:	881b      	ldrh	r3, [r3, #0]
 80165bc:	b2a4      	uxth	r4, r4
 80165be:	eba3 0309 	sub.w	r3, r3, r9
 80165c2:	2c00      	cmp	r4, #0
 80165c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80165c8:	bf18      	it	ne
 80165ca:	f04f 0c00 	movne.w	ip, #0
 80165ce:	e760      	b.n	8016492 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80165d0:	4b03      	ldr	r3, [pc, #12]	; (80165e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80165d2:	6818      	ldr	r0, [r3, #0]
 80165d4:	6803      	ldr	r3, [r0, #0]
 80165d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165d8:	4798      	blx	r3
 80165da:	b00f      	add	sp, #60	; 0x3c
 80165dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165e0:	2400e424 	.word	0x2400e424
 80165e4:	2400e41e 	.word	0x2400e41e

080165e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80165e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165ec:	b093      	sub	sp, #76	; 0x4c
 80165ee:	461c      	mov	r4, r3
 80165f0:	9205      	str	r2, [sp, #20]
 80165f2:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 80165f6:	9101      	str	r1, [sp, #4]
 80165f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80165fa:	9202      	str	r2, [sp, #8]
 80165fc:	2a00      	cmp	r2, #0
 80165fe:	f000 812e 	beq.w	801685e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8016602:	6820      	ldr	r0, [r4, #0]
 8016604:	aa0e      	add	r2, sp, #56	; 0x38
 8016606:	6861      	ldr	r1, [r4, #4]
 8016608:	c203      	stmia	r2!, {r0, r1}
 801660a:	6818      	ldr	r0, [r3, #0]
 801660c:	aa10      	add	r2, sp, #64	; 0x40
 801660e:	6859      	ldr	r1, [r3, #4]
 8016610:	c203      	stmia	r2!, {r0, r1}
 8016612:	a80e      	add	r0, sp, #56	; 0x38
 8016614:	f7f9 fd02 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016618:	4621      	mov	r1, r4
 801661a:	a810      	add	r0, sp, #64	; 0x40
 801661c:	f7f9 fd42 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016620:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8016624:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8016628:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801662c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8016630:	bfdb      	ittet	le
 8016632:	b2b3      	uxthle	r3, r6
 8016634:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8016638:	2301      	movgt	r3, #1
 801663a:	fb92 f3f3 	sdivle	r3, r2, r3
 801663e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8016642:	441d      	add	r5, r3
 8016644:	fb92 f1f3 	sdiv	r1, r2, r3
 8016648:	fa1f fc81 	uxth.w	ip, r1
 801664c:	3d01      	subs	r5, #1
 801664e:	fb0c 2413 	mls	r4, ip, r3, r2
 8016652:	4661      	mov	r1, ip
 8016654:	fb14 f406 	smulbb	r4, r4, r6
 8016658:	4404      	add	r4, r0
 801665a:	fb95 f5f3 	sdiv	r5, r5, r3
 801665e:	b2a4      	uxth	r4, r4
 8016660:	b131      	cbz	r1, 8016670 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 8016662:	9b05      	ldr	r3, [sp, #20]
 8016664:	9901      	ldr	r1, [sp, #4]
 8016666:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801666a:	ba1b      	rev	r3, r3
 801666c:	4419      	add	r1, r3
 801666e:	9101      	str	r1, [sp, #4]
 8016670:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016674:	b2ad      	uxth	r5, r5
 8016676:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801667a:	4418      	add	r0, r3
 801667c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8016680:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 8016684:	00ad      	lsls	r5, r5, #2
 8016686:	441a      	add	r2, r3
 8016688:	4b76      	ldr	r3, [pc, #472]	; (8016864 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801668a:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801668e:	6818      	ldr	r0, [r3, #0]
 8016690:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8016694:	6803      	ldr	r3, [r0, #0]
 8016696:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016698:	4798      	blx	r3
 801669a:	4973      	ldr	r1, [pc, #460]	; (8016868 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801669c:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 80166a0:	2c00      	cmp	r4, #0
 80166a2:	880b      	ldrh	r3, [r1, #0]
 80166a4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80166a8:	910d      	str	r1, [sp, #52]	; 0x34
 80166aa:	fb03 c202 	mla	r2, r3, r2, ip
 80166ae:	bf08      	it	eq
 80166b0:	46dc      	moveq	ip, fp
 80166b2:	fb03 f306 	mul.w	r3, r3, r6
 80166b6:	bf18      	it	ne
 80166b8:	f04f 0c00 	movne.w	ip, #0
 80166bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80166c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80166c4:	fa1f fc8c 	uxth.w	ip, ip
 80166c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80166cc:	9106      	str	r1, [sp, #24]
 80166ce:	9308      	str	r3, [sp, #32]
 80166d0:	1d2b      	adds	r3, r5, #4
 80166d2:	9309      	str	r3, [sp, #36]	; 0x24
 80166d4:	9b02      	ldr	r3, [sp, #8]
 80166d6:	43da      	mvns	r2, r3
 80166d8:	2300      	movs	r3, #0
 80166da:	b2d2      	uxtb	r2, r2
 80166dc:	9303      	str	r3, [sp, #12]
 80166de:	9207      	str	r2, [sp, #28]
 80166e0:	9a08      	ldr	r2, [sp, #32]
 80166e2:	4282      	cmp	r2, r0
 80166e4:	f240 80b6 	bls.w	8016854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 80166e8:	b963      	cbnz	r3, 8016704 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80166ea:	9b01      	ldr	r3, [sp, #4]
 80166ec:	781a      	ldrb	r2, [r3, #0]
 80166ee:	0993      	lsrs	r3, r2, #6
 80166f0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80166f4:	9203      	str	r2, [sp, #12]
 80166f6:	1e5a      	subs	r2, r3, #1
 80166f8:	2a02      	cmp	r2, #2
 80166fa:	d815      	bhi.n	8016728 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 80166fc:	9a01      	ldr	r2, [sp, #4]
 80166fe:	b29b      	uxth	r3, r3
 8016700:	3201      	adds	r2, #1
 8016702:	9201      	str	r2, [sp, #4]
 8016704:	b1b4      	cbz	r4, 8016734 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 8016706:	429c      	cmp	r4, r3
 8016708:	bf91      	iteee	ls
 801670a:	1b1c      	subls	r4, r3, r4
 801670c:	1ae4      	subhi	r4, r4, r3
 801670e:	4666      	movhi	r6, ip
 8016710:	f04f 0800 	movhi.w	r8, #0
 8016714:	bf9b      	ittet	ls
 8016716:	fa1f f884 	uxthls.w	r8, r4
 801671a:	2400      	movls	r4, #0
 801671c:	b2a4      	uxthhi	r4, r4
 801671e:	fa1f f68b 	uxthls.w	r6, fp
 8016722:	4643      	mov	r3, r8
 8016724:	46b4      	mov	ip, r6
 8016726:	e7db      	b.n	80166e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 8016728:	9a01      	ldr	r2, [sp, #4]
 801672a:	9b01      	ldr	r3, [sp, #4]
 801672c:	3202      	adds	r2, #2
 801672e:	785b      	ldrb	r3, [r3, #1]
 8016730:	9201      	str	r2, [sp, #4]
 8016732:	e7e7      	b.n	8016704 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8016734:	2203      	movs	r2, #3
 8016736:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016738:	4563      	cmp	r3, ip
 801673a:	4615      	mov	r5, r2
 801673c:	9a03      	ldr	r2, [sp, #12]
 801673e:	bf2c      	ite	cs
 8016740:	eba3 080c 	subcs.w	r8, r3, ip
 8016744:	ebac 0603 	subcc.w	r6, ip, r3
 8016748:	fb15 1202 	smlabb	r2, r5, r2, r1
 801674c:	9905      	ldr	r1, [sp, #20]
 801674e:	bf24      	itt	cs
 8016750:	fa1f f888 	uxthcs.w	r8, r8
 8016754:	46e1      	movcs	r9, ip
 8016756:	eb01 0502 	add.w	r5, r1, r2
 801675a:	9902      	ldr	r1, [sp, #8]
 801675c:	bf2f      	iteee	cs
 801675e:	4626      	movcs	r6, r4
 8016760:	b2b6      	uxthcc	r6, r6
 8016762:	4699      	movcc	r9, r3
 8016764:	46a0      	movcc	r8, r4
 8016766:	29ff      	cmp	r1, #255	; 0xff
 8016768:	d04a      	beq.n	8016800 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801676a:	9f06      	ldr	r7, [sp, #24]
 801676c:	46ca      	mov	sl, r9
 801676e:	78a9      	ldrb	r1, [r5, #2]
 8016770:	9004      	str	r0, [sp, #16]
 8016772:	4379      	muls	r1, r7
 8016774:	910a      	str	r1, [sp, #40]	; 0x28
 8016776:	7869      	ldrb	r1, [r5, #1]
 8016778:	4379      	muls	r1, r7
 801677a:	910b      	str	r1, [sp, #44]	; 0x2c
 801677c:	9905      	ldr	r1, [sp, #20]
 801677e:	5c8a      	ldrb	r2, [r1, r2]
 8016780:	437a      	muls	r2, r7
 8016782:	920c      	str	r2, [sp, #48]	; 0x30
 8016784:	f1ba 0f00 	cmp.w	sl, #0
 8016788:	d03d      	beq.n	8016806 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801678a:	9a04      	ldr	r2, [sp, #16]
 801678c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016790:	9f07      	ldr	r7, [sp, #28]
 8016792:	8812      	ldrh	r2, [r2, #0]
 8016794:	fa1f fa8a 	uxth.w	sl, sl
 8016798:	46be      	mov	lr, r7
 801679a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801679c:	1215      	asrs	r5, r2, #8
 801679e:	10d1      	asrs	r1, r2, #3
 80167a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80167a4:	00d2      	lsls	r2, r2, #3
 80167a6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80167aa:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80167ae:	b2d2      	uxtb	r2, r2
 80167b0:	fb05 750e 	mla	r5, r5, lr, r7
 80167b4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80167b8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80167ba:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80167be:	b2ad      	uxth	r5, r5
 80167c0:	fb01 710e 	mla	r1, r1, lr, r7
 80167c4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80167c6:	fb02 720e 	mla	r2, r2, lr, r7
 80167ca:	f105 0e01 	add.w	lr, r5, #1
 80167ce:	b289      	uxth	r1, r1
 80167d0:	b292      	uxth	r2, r2
 80167d2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80167d6:	f102 0e01 	add.w	lr, r2, #1
 80167da:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80167de:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80167e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80167e6:	4315      	orrs	r5, r2
 80167e8:	1c4a      	adds	r2, r1, #1
 80167ea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80167ee:	9a04      	ldr	r2, [sp, #16]
 80167f0:	0949      	lsrs	r1, r1, #5
 80167f2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80167f6:	430d      	orrs	r5, r1
 80167f8:	f822 5b02 	strh.w	r5, [r2], #2
 80167fc:	9204      	str	r2, [sp, #16]
 80167fe:	e7c1      	b.n	8016784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8016800:	4649      	mov	r1, r9
 8016802:	4686      	mov	lr, r0
 8016804:	b999      	cbnz	r1, 801682e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8016806:	4563      	cmp	r3, ip
 8016808:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801680c:	d389      	bcc.n	8016722 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801680e:	fa1f f68b 	uxth.w	r6, fp
 8016812:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 8016816:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016818:	1ba4      	subs	r4, r4, r6
 801681a:	881b      	ldrh	r3, [r3, #0]
 801681c:	b2a4      	uxth	r4, r4
 801681e:	eba3 030b 	sub.w	r3, r3, fp
 8016822:	2c00      	cmp	r4, #0
 8016824:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016828:	bf18      	it	ne
 801682a:	2600      	movne	r6, #0
 801682c:	e779      	b.n	8016722 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801682e:	78aa      	ldrb	r2, [r5, #2]
 8016830:	3901      	subs	r1, #1
 8016832:	4f0e      	ldr	r7, [pc, #56]	; (801686c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8016834:	b289      	uxth	r1, r1
 8016836:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801683a:	786a      	ldrb	r2, [r5, #1]
 801683c:	00d2      	lsls	r2, r2, #3
 801683e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016842:	ea4a 0202 	orr.w	r2, sl, r2
 8016846:	f895 a000 	ldrb.w	sl, [r5]
 801684a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801684e:	f82e 2b02 	strh.w	r2, [lr], #2
 8016852:	e7d7      	b.n	8016804 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8016854:	4b03      	ldr	r3, [pc, #12]	; (8016864 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016856:	6818      	ldr	r0, [r3, #0]
 8016858:	6803      	ldr	r3, [r0, #0]
 801685a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801685c:	4798      	blx	r3
 801685e:	b013      	add	sp, #76	; 0x4c
 8016860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016864:	2400e424 	.word	0x2400e424
 8016868:	2400e41e 	.word	0x2400e41e
 801686c:	fffff800 	.word	0xfffff800

08016870 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016874:	b09d      	sub	sp, #116	; 0x74
 8016876:	461c      	mov	r4, r3
 8016878:	4683      	mov	fp, r0
 801687a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801687c:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 8016880:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 8016884:	920e      	str	r2, [sp, #56]	; 0x38
 8016886:	2a00      	cmp	r2, #0
 8016888:	f000 81e4 	beq.w	8016c54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 801688c:	6820      	ldr	r0, [r4, #0]
 801688e:	aa18      	add	r2, sp, #96	; 0x60
 8016890:	6861      	ldr	r1, [r4, #4]
 8016892:	c203      	stmia	r2!, {r0, r1}
 8016894:	6818      	ldr	r0, [r3, #0]
 8016896:	aa1a      	add	r2, sp, #104	; 0x68
 8016898:	6859      	ldr	r1, [r3, #4]
 801689a:	c203      	stmia	r2!, {r0, r1}
 801689c:	a818      	add	r0, sp, #96	; 0x60
 801689e:	f7f9 fbbd 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80168a2:	4621      	mov	r1, r4
 80168a4:	a81a      	add	r0, sp, #104	; 0x68
 80168a6:	f7f9 fbfd 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80168aa:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 80168ae:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 80168b2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80168b6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 80168ba:	bfdb      	ittet	le
 80168bc:	b29a      	uxthle	r2, r3
 80168be:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80168c2:	2201      	movgt	r2, #1
 80168c4:	fb91 f2f2 	sdivle	r2, r1, r2
 80168c8:	9202      	str	r2, [sp, #8]
 80168ca:	9802      	ldr	r0, [sp, #8]
 80168cc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 80168d0:	9902      	ldr	r1, [sp, #8]
 80168d2:	fb92 f0f0 	sdiv	r0, r2, r0
 80168d6:	b280      	uxth	r0, r0
 80168d8:	440c      	add	r4, r1
 80168da:	900f      	str	r0, [sp, #60]	; 0x3c
 80168dc:	3c01      	subs	r4, #1
 80168de:	9802      	ldr	r0, [sp, #8]
 80168e0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80168e2:	fb05 2510 	mls	r5, r5, r0, r2
 80168e6:	fb94 f4f1 	sdiv	r4, r4, r1
 80168ea:	fb15 f503 	smulbb	r5, r5, r3
 80168ee:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 80168f2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 80168f6:	3401      	adds	r4, #1
 80168f8:	440d      	add	r5, r1
 80168fa:	4419      	add	r1, r3
 80168fc:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8016900:	b2a4      	uxth	r4, r4
 8016902:	441a      	add	r2, r3
 8016904:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8016908:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801690c:	00a4      	lsls	r4, r4, #2
 801690e:	9306      	str	r3, [sp, #24]
 8016910:	b2ad      	uxth	r5, r5
 8016912:	4bb3      	ldr	r3, [pc, #716]	; (8016be0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8016914:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8016918:	6818      	ldr	r0, [r3, #0]
 801691a:	6803      	ldr	r3, [r0, #0]
 801691c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801691e:	4798      	blx	r3
 8016920:	4bb0      	ldr	r3, [pc, #704]	; (8016be4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8016922:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 8016926:	2d00      	cmp	r5, #0
 8016928:	881a      	ldrh	r2, [r3, #0]
 801692a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801692e:	fb02 f606 	mul.w	r6, r2, r6
 8016932:	fb02 7101 	mla	r1, r2, r1, r7
 8016936:	9316      	str	r3, [sp, #88]	; 0x58
 8016938:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801693c:	4baa      	ldr	r3, [pc, #680]	; (8016be8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 801693e:	bf18      	it	ne
 8016940:	2100      	movne	r1, #0
 8016942:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8016946:	eba3 030b 	sub.w	r3, r3, fp
 801694a:	920a      	str	r2, [sp, #40]	; 0x28
 801694c:	f104 0204 	add.w	r2, r4, #4
 8016950:	9317      	str	r3, [sp, #92]	; 0x5c
 8016952:	9213      	str	r2, [sp, #76]	; 0x4c
 8016954:	9a06      	ldr	r2, [sp, #24]
 8016956:	bf08      	it	eq
 8016958:	4611      	moveq	r1, r2
 801695a:	2200      	movs	r2, #0
 801695c:	b289      	uxth	r1, r1
 801695e:	920d      	str	r2, [sp, #52]	; 0x34
 8016960:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016962:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016964:	fa12 f383 	uxtah	r3, r2, r3
 8016968:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801696a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801696e:	3304      	adds	r3, #4
 8016970:	9308      	str	r3, [sp, #32]
 8016972:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016974:	4543      	cmp	r3, r8
 8016976:	f240 8168 	bls.w	8016c4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 801697a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801697e:	f04f 0e01 	mov.w	lr, #1
 8016982:	9a02      	ldr	r2, [sp, #8]
 8016984:	9808      	ldr	r0, [sp, #32]
 8016986:	fbb5 f3f3 	udiv	r3, r5, r3
 801698a:	1ad3      	subs	r3, r2, r3
 801698c:	7800      	ldrb	r0, [r0, #0]
 801698e:	b29b      	uxth	r3, r3
 8016990:	9010      	str	r0, [sp, #64]	; 0x40
 8016992:	3001      	adds	r0, #1
 8016994:	9314      	str	r3, [sp, #80]	; 0x50
 8016996:	9b08      	ldr	r3, [sp, #32]
 8016998:	9007      	str	r0, [sp, #28]
 801699a:	785a      	ldrb	r2, [r3, #1]
 801699c:	789b      	ldrb	r3, [r3, #2]
 801699e:	021b      	lsls	r3, r3, #8
 80169a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80169a4:	9a08      	ldr	r2, [sp, #32]
 80169a6:	78d2      	ldrb	r2, [r2, #3]
 80169a8:	4313      	orrs	r3, r2
 80169aa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80169ac:	441a      	add	r2, r3
 80169ae:	1c50      	adds	r0, r2, #1
 80169b0:	7852      	ldrb	r2, [r2, #1]
 80169b2:	9005      	str	r0, [sp, #20]
 80169b4:	0212      	lsls	r2, r2, #8
 80169b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80169b8:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80169bc:	5cc3      	ldrb	r3, [r0, r3]
 80169be:	431a      	orrs	r2, r3
 80169c0:	b293      	uxth	r3, r2
 80169c2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 80169c6:	930b      	str	r3, [sp, #44]	; 0x2c
 80169c8:	2300      	movs	r3, #0
 80169ca:	9309      	str	r3, [sp, #36]	; 0x24
 80169cc:	2301      	movs	r3, #1
 80169ce:	9301      	str	r3, [sp, #4]
 80169d0:	9304      	str	r3, [sp, #16]
 80169d2:	2300      	movs	r3, #0
 80169d4:	9303      	str	r3, [sp, #12]
 80169d6:	2d00      	cmp	r5, #0
 80169d8:	d07d      	beq.n	8016ad6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 80169da:	45ae      	cmp	lr, r5
 80169dc:	d26c      	bcs.n	8016ab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 80169de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80169e0:	eba5 050e 	sub.w	r5, r5, lr
 80169e4:	460c      	mov	r4, r1
 80169e6:	4543      	cmp	r3, r8
 80169e8:	b2ad      	uxth	r5, r5
 80169ea:	d802      	bhi.n	80169f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 80169ec:	e071      	b.n	8016ad2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 80169ee:	2b00      	cmp	r3, #0
 80169f0:	d15d      	bne.n	8016aae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 80169f2:	9b05      	ldr	r3, [sp, #20]
 80169f4:	9a04      	ldr	r2, [sp, #16]
 80169f6:	785b      	ldrb	r3, [r3, #1]
 80169f8:	f1c2 0207 	rsb	r2, r2, #7
 80169fc:	9904      	ldr	r1, [sp, #16]
 80169fe:	4093      	lsls	r3, r2
 8016a00:	005b      	lsls	r3, r3, #1
 8016a02:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016a06:	9b05      	ldr	r3, [sp, #20]
 8016a08:	781b      	ldrb	r3, [r3, #0]
 8016a0a:	410b      	asrs	r3, r1
 8016a0c:	3101      	adds	r1, #1
 8016a0e:	b2c9      	uxtb	r1, r1
 8016a10:	b2db      	uxtb	r3, r3
 8016a12:	2908      	cmp	r1, #8
 8016a14:	9104      	str	r1, [sp, #16]
 8016a16:	9905      	ldr	r1, [sp, #20]
 8016a18:	ea43 0302 	orr.w	r3, r3, r2
 8016a1c:	bf0c      	ite	eq
 8016a1e:	3102      	addeq	r1, #2
 8016a20:	3101      	addne	r1, #1
 8016a22:	b29a      	uxth	r2, r3
 8016a24:	bf05      	ittet	eq
 8016a26:	9105      	streq	r1, [sp, #20]
 8016a28:	2100      	moveq	r1, #0
 8016a2a:	9105      	strne	r1, [sp, #20]
 8016a2c:	9104      	streq	r1, [sp, #16]
 8016a2e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016a30:	4291      	cmp	r1, r2
 8016a32:	d30a      	bcc.n	8016a4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8016a34:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8016a38:	2301      	movs	r3, #1
 8016a3a:	9907      	ldr	r1, [sp, #28]
 8016a3c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8016a40:	d30f      	bcc.n	8016a62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8016a42:	2100      	movs	r1, #0
 8016a44:	9301      	str	r3, [sp, #4]
 8016a46:	9103      	str	r1, [sp, #12]
 8016a48:	e032      	b.n	8016ab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8016a4a:	9b07      	ldr	r3, [sp, #28]
 8016a4c:	429a      	cmp	r2, r3
 8016a4e:	d318      	bcc.n	8016a82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8016a50:	9b01      	ldr	r3, [sp, #4]
 8016a52:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8016a56:	445b      	add	r3, fp
 8016a58:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8016a5c:	9b01      	ldr	r3, [sp, #4]
 8016a5e:	3301      	adds	r3, #1
 8016a60:	b29b      	uxth	r3, r3
 8016a62:	9907      	ldr	r1, [sp, #28]
 8016a64:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8016a68:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8016a6c:	7108      	strb	r0, [r1, #4]
 8016a6e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016a70:	80c8      	strh	r0, [r1, #6]
 8016a72:	9801      	ldr	r0, [sp, #4]
 8016a74:	3001      	adds	r0, #1
 8016a76:	7148      	strb	r0, [r1, #5]
 8016a78:	9907      	ldr	r1, [sp, #28]
 8016a7a:	3101      	adds	r1, #1
 8016a7c:	b289      	uxth	r1, r1
 8016a7e:	9107      	str	r1, [sp, #28]
 8016a80:	e7df      	b.n	8016a42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8016a82:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8016a86:	4611      	mov	r1, r2
 8016a88:	795b      	ldrb	r3, [r3, #5]
 8016a8a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8016a8e:	4458      	add	r0, fp
 8016a90:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8016a92:	4406      	add	r6, r0
 8016a94:	2e00      	cmp	r6, #0
 8016a96:	dd06      	ble.n	8016aa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016a98:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8016a9c:	790e      	ldrb	r6, [r1, #4]
 8016a9e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8016aa2:	88c9      	ldrh	r1, [r1, #6]
 8016aa4:	e7f4      	b.n	8016a90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8016aa6:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8016aaa:	b29b      	uxth	r3, r3
 8016aac:	e7c5      	b.n	8016a3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8016aae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016ab0:	4621      	mov	r1, r4
 8016ab2:	920b      	str	r2, [sp, #44]	; 0x2c
 8016ab4:	469e      	mov	lr, r3
 8016ab6:	e78e      	b.n	80169d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8016ab8:	9a03      	ldr	r2, [sp, #12]
 8016aba:	ebae 0305 	sub.w	r3, lr, r5
 8016abe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016ac2:	442a      	add	r2, r5
 8016ac4:	b29b      	uxth	r3, r3
 8016ac6:	b292      	uxth	r2, r2
 8016ac8:	9203      	str	r2, [sp, #12]
 8016aca:	2500      	movs	r5, #0
 8016acc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016ace:	4542      	cmp	r2, r8
 8016ad0:	d88d      	bhi.n	80169ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8016ad2:	4621      	mov	r1, r4
 8016ad4:	e74d      	b.n	8016972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8016ad6:	458e      	cmp	lr, r1
 8016ad8:	f04f 0900 	mov.w	r9, #0
 8016adc:	bf2b      	itete	cs
 8016ade:	ebae 0301 	subcs.w	r3, lr, r1
 8016ae2:	eba1 040e 	subcc.w	r4, r1, lr
 8016ae6:	462c      	movcs	r4, r5
 8016ae8:	462b      	movcc	r3, r5
 8016aea:	bf27      	ittee	cs
 8016aec:	b29b      	uxthcs	r3, r3
 8016aee:	910c      	strcs	r1, [sp, #48]	; 0x30
 8016af0:	b2a4      	uxthcc	r4, r4
 8016af2:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8016af6:	9a03      	ldr	r2, [sp, #12]
 8016af8:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016afa:	444a      	add	r2, r9
 8016afc:	4548      	cmp	r0, r9
 8016afe:	b292      	uxth	r2, r2
 8016b00:	d074      	beq.n	8016bec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8016b02:	2004      	movs	r0, #4
 8016b04:	445a      	add	r2, fp
 8016b06:	4605      	mov	r5, r0
 8016b08:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8016b0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016b0e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8016b12:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016b14:	5880      	ldr	r0, [r0, r2]
 8016b16:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8016b1a:	d014      	beq.n	8016b46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016b1c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016b20:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8016b24:	d112      	bne.n	8016b4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016b26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016b28:	2aff      	cmp	r2, #255	; 0xff
 8016b2a:	d10f      	bne.n	8016b4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016b2c:	0942      	lsrs	r2, r0, #5
 8016b2e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016b32:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016b36:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016b3a:	f025 0507 	bic.w	r5, r5, #7
 8016b3e:	4315      	orrs	r5, r2
 8016b40:	4305      	orrs	r5, r0
 8016b42:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8016b46:	f109 0901 	add.w	r9, r9, #1
 8016b4a:	e7d4      	b.n	8016af6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8016b4c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8016b50:	b2ed      	uxtb	r5, r5
 8016b52:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016b56:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016b5a:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8016b5e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016b62:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8016b66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016b6a:	9215      	str	r2, [sp, #84]	; 0x54
 8016b6c:	fa5f fc8c 	uxtb.w	ip, ip
 8016b70:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016b72:	b2c0      	uxtb	r0, r0
 8016b74:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016b78:	fb02 fa0a 	mul.w	sl, r2, sl
 8016b7c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8016b80:	f10a 0201 	add.w	r2, sl, #1
 8016b84:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8016b88:	1212      	asrs	r2, r2, #8
 8016b8a:	fa1f fa82 	uxth.w	sl, r2
 8016b8e:	43d2      	mvns	r2, r2
 8016b90:	fb16 f60a 	smulbb	r6, r6, sl
 8016b94:	b2d2      	uxtb	r2, r2
 8016b96:	fb10 f00a 	smulbb	r0, r0, sl
 8016b9a:	fb07 6702 	mla	r7, r7, r2, r6
 8016b9e:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8016ba0:	fb0c 0002 	mla	r0, ip, r2, r0
 8016ba4:	fb15 f50a 	smulbb	r5, r5, sl
 8016ba8:	b2bf      	uxth	r7, r7
 8016baa:	b280      	uxth	r0, r0
 8016bac:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8016bb0:	fb06 5602 	mla	r6, r6, r2, r5
 8016bb4:	1c7a      	adds	r2, r7, #1
 8016bb6:	1c45      	adds	r5, r0, #1
 8016bb8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016bbc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016bc0:	b2b6      	uxth	r6, r6
 8016bc2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016bc6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016bca:	432f      	orrs	r7, r5
 8016bcc:	1c75      	adds	r5, r6, #1
 8016bce:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016bd2:	096d      	lsrs	r5, r5, #5
 8016bd4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016bd8:	432f      	orrs	r7, r5
 8016bda:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8016bde:	e7b2      	b.n	8016b46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016be0:	2400e424 	.word	0x2400e424
 8016be4:	2400e41e 	.word	0x2400e41e
 8016be8:	fffff7fb 	.word	0xfffff7fb
 8016bec:	9203      	str	r2, [sp, #12]
 8016bee:	458e      	cmp	lr, r1
 8016bf0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016bf2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016bf6:	f4ff af68 	bcc.w	8016aca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8016bfa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016bfc:	9906      	ldr	r1, [sp, #24]
 8016bfe:	8812      	ldrh	r2, [r2, #0]
 8016c00:	1a52      	subs	r2, r2, r1
 8016c02:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016c04:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016c08:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016c0a:	3201      	adds	r2, #1
 8016c0c:	428a      	cmp	r2, r1
 8016c0e:	9209      	str	r2, [sp, #36]	; 0x24
 8016c10:	d111      	bne.n	8016c36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8016c12:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8016c16:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8016c1a:	9b06      	ldr	r3, [sp, #24]
 8016c1c:	eba5 0509 	sub.w	r5, r5, r9
 8016c20:	b2ad      	uxth	r5, r5
 8016c22:	2d00      	cmp	r5, #0
 8016c24:	bf08      	it	eq
 8016c26:	4619      	moveq	r1, r3
 8016c28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016c2a:	bf18      	it	ne
 8016c2c:	2100      	movne	r1, #0
 8016c2e:	3301      	adds	r3, #1
 8016c30:	b289      	uxth	r1, r1
 8016c32:	930d      	str	r3, [sp, #52]	; 0x34
 8016c34:	e694      	b.n	8016960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8016c36:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016c3a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016c3e:	1b2d      	subs	r5, r5, r4
 8016c40:	b2ad      	uxth	r5, r5
 8016c42:	2d00      	cmp	r5, #0
 8016c44:	bf18      	it	ne
 8016c46:	2400      	movne	r4, #0
 8016c48:	e740      	b.n	8016acc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8016c4a:	4b04      	ldr	r3, [pc, #16]	; (8016c5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8016c4c:	6818      	ldr	r0, [r3, #0]
 8016c4e:	6803      	ldr	r3, [r0, #0]
 8016c50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016c52:	4798      	blx	r3
 8016c54:	b01d      	add	sp, #116	; 0x74
 8016c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c5a:	bf00      	nop
 8016c5c:	2400e424 	.word	0x2400e424

08016c60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c64:	b09f      	sub	sp, #124	; 0x7c
 8016c66:	461d      	mov	r5, r3
 8016c68:	4604      	mov	r4, r0
 8016c6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016c6c:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8016c70:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8016c74:	920a      	str	r2, [sp, #40]	; 0x28
 8016c76:	2a00      	cmp	r2, #0
 8016c78:	f000 81fe 	beq.w	8017078 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8016c7c:	6828      	ldr	r0, [r5, #0]
 8016c7e:	aa1a      	add	r2, sp, #104	; 0x68
 8016c80:	6869      	ldr	r1, [r5, #4]
 8016c82:	c203      	stmia	r2!, {r0, r1}
 8016c84:	6818      	ldr	r0, [r3, #0]
 8016c86:	aa1c      	add	r2, sp, #112	; 0x70
 8016c88:	6859      	ldr	r1, [r3, #4]
 8016c8a:	c203      	stmia	r2!, {r0, r1}
 8016c8c:	a81a      	add	r0, sp, #104	; 0x68
 8016c8e:	f7f9 f9c5 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c92:	4629      	mov	r1, r5
 8016c94:	a81c      	add	r0, sp, #112	; 0x70
 8016c96:	f7f9 fa05 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c9a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8016c9e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8016ca2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8016ca6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8016caa:	bfdb      	ittet	le
 8016cac:	b29a      	uxthle	r2, r3
 8016cae:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8016cb2:	2201      	movgt	r2, #1
 8016cb4:	fb91 f2f2 	sdivle	r2, r1, r2
 8016cb8:	9201      	str	r2, [sp, #4]
 8016cba:	9801      	ldr	r0, [sp, #4]
 8016cbc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8016cc0:	9901      	ldr	r1, [sp, #4]
 8016cc2:	fb92 f0f0 	sdiv	r0, r2, r0
 8016cc6:	b280      	uxth	r0, r0
 8016cc8:	440e      	add	r6, r1
 8016cca:	9010      	str	r0, [sp, #64]	; 0x40
 8016ccc:	3e01      	subs	r6, #1
 8016cce:	9801      	ldr	r0, [sp, #4]
 8016cd0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8016cd2:	fb05 2510 	mls	r5, r5, r0, r2
 8016cd6:	fb96 f6f1 	sdiv	r6, r6, r1
 8016cda:	fb15 f503 	smulbb	r5, r5, r3
 8016cde:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8016ce2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8016ce6:	3601      	adds	r6, #1
 8016ce8:	440d      	add	r5, r1
 8016cea:	4419      	add	r1, r3
 8016cec:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8016cf0:	b2b6      	uxth	r6, r6
 8016cf2:	441a      	add	r2, r3
 8016cf4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8016cf8:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8016cfc:	b2ad      	uxth	r5, r5
 8016cfe:	9304      	str	r3, [sp, #16]
 8016d00:	4b96      	ldr	r3, [pc, #600]	; (8016f5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016d02:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8016d06:	6818      	ldr	r0, [r3, #0]
 8016d08:	6803      	ldr	r3, [r0, #0]
 8016d0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016d0c:	4798      	blx	r3
 8016d0e:	4b94      	ldr	r3, [pc, #592]	; (8016f60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8016d10:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8016d14:	2d00      	cmp	r5, #0
 8016d16:	881a      	ldrh	r2, [r3, #0]
 8016d18:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8016d1c:	fb02 f707 	mul.w	r7, r2, r7
 8016d20:	fb02 c101 	mla	r1, r2, r1, ip
 8016d24:	9318      	str	r3, [sp, #96]	; 0x60
 8016d26:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8016d2a:	4b8e      	ldr	r3, [pc, #568]	; (8016f64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8016d2c:	bf18      	it	ne
 8016d2e:	2100      	movne	r1, #0
 8016d30:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8016d34:	eba3 0304 	sub.w	r3, r3, r4
 8016d38:	920b      	str	r2, [sp, #44]	; 0x2c
 8016d3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d3c:	9319      	str	r3, [sp, #100]	; 0x64
 8016d3e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8016d42:	f106 0204 	add.w	r2, r6, #4
 8016d46:	9206      	str	r2, [sp, #24]
 8016d48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016d4a:	ea6f 0202 	mvn.w	r2, r2
 8016d4e:	b2d2      	uxtb	r2, r2
 8016d50:	9215      	str	r2, [sp, #84]	; 0x54
 8016d52:	9a04      	ldr	r2, [sp, #16]
 8016d54:	bf08      	it	eq
 8016d56:	4611      	moveq	r1, r2
 8016d58:	2200      	movs	r2, #0
 8016d5a:	b289      	uxth	r1, r1
 8016d5c:	920d      	str	r2, [sp, #52]	; 0x34
 8016d5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016d60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016d62:	fa12 f383 	uxtah	r3, r2, r3
 8016d66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d68:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016d6c:	3304      	adds	r3, #4
 8016d6e:	9307      	str	r3, [sp, #28]
 8016d70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016d72:	455b      	cmp	r3, fp
 8016d74:	f240 817b 	bls.w	801706e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8016d78:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8016d7c:	f04f 0801 	mov.w	r8, #1
 8016d80:	9a01      	ldr	r2, [sp, #4]
 8016d82:	9807      	ldr	r0, [sp, #28]
 8016d84:	46c4      	mov	ip, r8
 8016d86:	f8cd 8008 	str.w	r8, [sp, #8]
 8016d8a:	7800      	ldrb	r0, [r0, #0]
 8016d8c:	fbb5 f3f3 	udiv	r3, r5, r3
 8016d90:	1ad3      	subs	r3, r2, r3
 8016d92:	9011      	str	r0, [sp, #68]	; 0x44
 8016d94:	3001      	adds	r0, #1
 8016d96:	b29b      	uxth	r3, r3
 8016d98:	9005      	str	r0, [sp, #20]
 8016d9a:	9316      	str	r3, [sp, #88]	; 0x58
 8016d9c:	9b07      	ldr	r3, [sp, #28]
 8016d9e:	785a      	ldrb	r2, [r3, #1]
 8016da0:	789b      	ldrb	r3, [r3, #2]
 8016da2:	021b      	lsls	r3, r3, #8
 8016da4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016da8:	9a07      	ldr	r2, [sp, #28]
 8016daa:	78d2      	ldrb	r2, [r2, #3]
 8016dac:	4313      	orrs	r3, r2
 8016dae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016db0:	441a      	add	r2, r3
 8016db2:	1c50      	adds	r0, r2, #1
 8016db4:	7852      	ldrb	r2, [r2, #1]
 8016db6:	9003      	str	r0, [sp, #12]
 8016db8:	0212      	lsls	r2, r2, #8
 8016dba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016dbc:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8016dc0:	5cc3      	ldrb	r3, [r0, r3]
 8016dc2:	431a      	orrs	r2, r3
 8016dc4:	b293      	uxth	r3, r2
 8016dc6:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8016dca:	930c      	str	r3, [sp, #48]	; 0x30
 8016dcc:	2300      	movs	r3, #0
 8016dce:	9308      	str	r3, [sp, #32]
 8016dd0:	461a      	mov	r2, r3
 8016dd2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016dd6:	930e      	str	r3, [sp, #56]	; 0x38
 8016dd8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8016ddc:	930f      	str	r3, [sp, #60]	; 0x3c
 8016dde:	2d00      	cmp	r5, #0
 8016de0:	d07d      	beq.n	8016ede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8016de2:	45ac      	cmp	ip, r5
 8016de4:	d26d      	bcs.n	8016ec2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8016de6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016de8:	eba5 050c 	sub.w	r5, r5, ip
 8016dec:	4608      	mov	r0, r1
 8016dee:	455b      	cmp	r3, fp
 8016df0:	b2ad      	uxth	r5, r5
 8016df2:	d802      	bhi.n	8016dfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8016df4:	e071      	b.n	8016eda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8016df6:	2b00      	cmp	r3, #0
 8016df8:	d15d      	bne.n	8016eb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8016dfa:	9b03      	ldr	r3, [sp, #12]
 8016dfc:	9a02      	ldr	r2, [sp, #8]
 8016dfe:	785b      	ldrb	r3, [r3, #1]
 8016e00:	f1c2 0207 	rsb	r2, r2, #7
 8016e04:	9902      	ldr	r1, [sp, #8]
 8016e06:	4093      	lsls	r3, r2
 8016e08:	005b      	lsls	r3, r3, #1
 8016e0a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016e0e:	9b03      	ldr	r3, [sp, #12]
 8016e10:	781b      	ldrb	r3, [r3, #0]
 8016e12:	410b      	asrs	r3, r1
 8016e14:	3101      	adds	r1, #1
 8016e16:	b2c9      	uxtb	r1, r1
 8016e18:	b2db      	uxtb	r3, r3
 8016e1a:	2908      	cmp	r1, #8
 8016e1c:	9102      	str	r1, [sp, #8]
 8016e1e:	9903      	ldr	r1, [sp, #12]
 8016e20:	ea43 0302 	orr.w	r3, r3, r2
 8016e24:	bf0c      	ite	eq
 8016e26:	3102      	addeq	r1, #2
 8016e28:	3101      	addne	r1, #1
 8016e2a:	b29a      	uxth	r2, r3
 8016e2c:	bf05      	ittet	eq
 8016e2e:	9103      	streq	r1, [sp, #12]
 8016e30:	2100      	moveq	r1, #0
 8016e32:	9103      	strne	r1, [sp, #12]
 8016e34:	9102      	streq	r1, [sp, #8]
 8016e36:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016e38:	4291      	cmp	r1, r2
 8016e3a:	d30a      	bcc.n	8016e52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8016e3c:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8016e40:	2301      	movs	r3, #1
 8016e42:	9905      	ldr	r1, [sp, #20]
 8016e44:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8016e48:	d30f      	bcc.n	8016e6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8016e4a:	2100      	movs	r1, #0
 8016e4c:	4698      	mov	r8, r3
 8016e4e:	9100      	str	r1, [sp, #0]
 8016e50:	e032      	b.n	8016eb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8016e52:	9b05      	ldr	r3, [sp, #20]
 8016e54:	429a      	cmp	r2, r3
 8016e56:	d318      	bcc.n	8016e8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8016e58:	eb04 0308 	add.w	r3, r4, r8
 8016e5c:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8016e60:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8016e64:	f108 0301 	add.w	r3, r8, #1
 8016e68:	b29b      	uxth	r3, r3
 8016e6a:	9905      	ldr	r1, [sp, #20]
 8016e6c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8016e70:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016e74:	710e      	strb	r6, [r1, #4]
 8016e76:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016e78:	80ce      	strh	r6, [r1, #6]
 8016e7a:	f108 0601 	add.w	r6, r8, #1
 8016e7e:	714e      	strb	r6, [r1, #5]
 8016e80:	9905      	ldr	r1, [sp, #20]
 8016e82:	3101      	adds	r1, #1
 8016e84:	b289      	uxth	r1, r1
 8016e86:	9105      	str	r1, [sp, #20]
 8016e88:	e7df      	b.n	8016e4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016e8a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8016e8e:	4611      	mov	r1, r2
 8016e90:	795b      	ldrb	r3, [r3, #5]
 8016e92:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8016e96:	4426      	add	r6, r4
 8016e98:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8016e9a:	4437      	add	r7, r6
 8016e9c:	2f00      	cmp	r7, #0
 8016e9e:	dd06      	ble.n	8016eae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8016ea0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016ea4:	790f      	ldrb	r7, [r1, #4]
 8016ea6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016eaa:	88c9      	ldrh	r1, [r1, #6]
 8016eac:	e7f4      	b.n	8016e98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8016eae:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8016eb2:	b29b      	uxth	r3, r3
 8016eb4:	e7c5      	b.n	8016e42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 8016eb6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016eb8:	920c      	str	r2, [sp, #48]	; 0x30
 8016eba:	4601      	mov	r1, r0
 8016ebc:	9a00      	ldr	r2, [sp, #0]
 8016ebe:	469c      	mov	ip, r3
 8016ec0:	e78d      	b.n	8016dde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8016ec2:	ebac 0305 	sub.w	r3, ip, r5
 8016ec6:	1957      	adds	r7, r2, r5
 8016ec8:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016ecc:	b2ba      	uxth	r2, r7
 8016ece:	b29b      	uxth	r3, r3
 8016ed0:	9200      	str	r2, [sp, #0]
 8016ed2:	2500      	movs	r5, #0
 8016ed4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016ed6:	455a      	cmp	r2, fp
 8016ed8:	d88d      	bhi.n	8016df6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8016eda:	4601      	mov	r1, r0
 8016edc:	e748      	b.n	8016d70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8016ede:	458c      	cmp	ip, r1
 8016ee0:	bf27      	ittee	cs
 8016ee2:	ebac 0301 	subcs.w	r3, ip, r1
 8016ee6:	4628      	movcs	r0, r5
 8016ee8:	eba1 000c 	subcc.w	r0, r1, ip
 8016eec:	462b      	movcc	r3, r5
 8016eee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016ef0:	bf27      	ittee	cs
 8016ef2:	b29b      	uxthcs	r3, r3
 8016ef4:	9109      	strcs	r1, [sp, #36]	; 0x24
 8016ef6:	b280      	uxthcc	r0, r0
 8016ef8:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8016efc:	2dff      	cmp	r5, #255	; 0xff
 8016efe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8016f00:	eb02 0705 	add.w	r7, r2, r5
 8016f04:	b2bd      	uxth	r5, r7
 8016f06:	9500      	str	r5, [sp, #0]
 8016f08:	d12e      	bne.n	8016f68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 8016f0a:	465e      	mov	r6, fp
 8016f0c:	9d00      	ldr	r5, [sp, #0]
 8016f0e:	42aa      	cmp	r2, r5
 8016f10:	f040 8083 	bne.w	801701a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8016f14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016f16:	458c      	cmp	ip, r1
 8016f18:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016f1c:	d3d9      	bcc.n	8016ed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016f1e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016f20:	9904      	ldr	r1, [sp, #16]
 8016f22:	8812      	ldrh	r2, [r2, #0]
 8016f24:	1a52      	subs	r2, r2, r1
 8016f26:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016f28:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016f2c:	9a08      	ldr	r2, [sp, #32]
 8016f2e:	3201      	adds	r2, #1
 8016f30:	428a      	cmp	r2, r1
 8016f32:	9208      	str	r2, [sp, #32]
 8016f34:	f040 8091 	bne.w	801705a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 8016f38:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8016f3c:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8016f40:	9b04      	ldr	r3, [sp, #16]
 8016f42:	eba5 050c 	sub.w	r5, r5, ip
 8016f46:	b2ad      	uxth	r5, r5
 8016f48:	2d00      	cmp	r5, #0
 8016f4a:	bf08      	it	eq
 8016f4c:	4619      	moveq	r1, r3
 8016f4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016f50:	bf18      	it	ne
 8016f52:	2100      	movne	r1, #0
 8016f54:	3301      	adds	r3, #1
 8016f56:	b289      	uxth	r1, r1
 8016f58:	930d      	str	r3, [sp, #52]	; 0x34
 8016f5a:	e700      	b.n	8016d5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8016f5c:	2400e424 	.word	0x2400e424
 8016f60:	2400e41e 	.word	0x2400e41e
 8016f64:	fffff7fb 	.word	0xfffff7fb
 8016f68:	46d9      	mov	r9, fp
 8016f6a:	9d00      	ldr	r5, [sp, #0]
 8016f6c:	42aa      	cmp	r2, r5
 8016f6e:	d0d1      	beq.n	8016f14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8016f70:	1c55      	adds	r5, r2, #1
 8016f72:	4422      	add	r2, r4
 8016f74:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8016f78:	9a06      	ldr	r2, [sp, #24]
 8016f7a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016f7e:	9517      	str	r5, [sp, #92]	; 0x5c
 8016f80:	4472      	add	r2, lr
 8016f82:	9212      	str	r2, [sp, #72]	; 0x48
 8016f84:	f8b9 2000 	ldrh.w	r2, [r9]
 8016f88:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8016f8a:	1216      	asrs	r6, r2, #8
 8016f8c:	f897 a002 	ldrb.w	sl, [r7, #2]
 8016f90:	10d5      	asrs	r5, r2, #3
 8016f92:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016f94:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016f98:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016f9c:	00d2      	lsls	r2, r2, #3
 8016f9e:	fb1a fa07 	smulbb	sl, sl, r7
 8016fa2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016fa6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016fa8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016fac:	b2d2      	uxtb	r2, r2
 8016fae:	fb06 a607 	mla	r6, r6, r7, sl
 8016fb2:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8016fb4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016fb8:	f897 a001 	ldrb.w	sl, [r7, #1]
 8016fbc:	b2b6      	uxth	r6, r6
 8016fbe:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016fc0:	fb1a fa07 	smulbb	sl, sl, r7
 8016fc4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016fc6:	fb05 a507 	mla	r5, r5, r7, sl
 8016fca:	9f06      	ldr	r7, [sp, #24]
 8016fcc:	f106 0a01 	add.w	sl, r6, #1
 8016fd0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016fd4:	b2ad      	uxth	r5, r5
 8016fd6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016fd8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8016fdc:	f105 0a01 	add.w	sl, r5, #1
 8016fe0:	fb1e fe07 	smulbb	lr, lr, r7
 8016fe4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016fe6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016fea:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016fee:	fb02 e207 	mla	r2, r2, r7, lr
 8016ff2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016ff6:	b292      	uxth	r2, r2
 8016ff8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016ffc:	f102 0e01 	add.w	lr, r2, #1
 8017000:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017004:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8017008:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801700c:	ea4e 0606 	orr.w	r6, lr, r6
 8017010:	ea46 060a 	orr.w	r6, r6, sl
 8017014:	f829 6b02 	strh.w	r6, [r9], #2
 8017018:	e7a7      	b.n	8016f6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801701a:	f102 0e01 	add.w	lr, r2, #1
 801701e:	4422      	add	r2, r4
 8017020:	9f06      	ldr	r7, [sp, #24]
 8017022:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8017026:	9a06      	ldr	r2, [sp, #24]
 8017028:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801702c:	eb02 0a05 	add.w	sl, r2, r5
 8017030:	4a13      	ldr	r2, [pc, #76]	; (8017080 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8017032:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8017036:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801703a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801703e:	00d2      	lsls	r2, r2, #3
 8017040:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017044:	ea49 0202 	orr.w	r2, r9, r2
 8017048:	f817 9005 	ldrb.w	r9, [r7, r5]
 801704c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8017050:	f826 2b02 	strh.w	r2, [r6], #2
 8017054:	fa1f f28e 	uxth.w	r2, lr
 8017058:	e758      	b.n	8016f0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801705a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801705e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8017062:	1a2d      	subs	r5, r5, r0
 8017064:	b2ad      	uxth	r5, r5
 8017066:	2d00      	cmp	r5, #0
 8017068:	bf18      	it	ne
 801706a:	2000      	movne	r0, #0
 801706c:	e732      	b.n	8016ed4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 801706e:	4b05      	ldr	r3, [pc, #20]	; (8017084 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8017070:	6818      	ldr	r0, [r3, #0]
 8017072:	6803      	ldr	r3, [r0, #0]
 8017074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017076:	4798      	blx	r3
 8017078:	b01f      	add	sp, #124	; 0x7c
 801707a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801707e:	bf00      	nop
 8017080:	fffff800 	.word	0xfffff800
 8017084:	2400e424 	.word	0x2400e424

08017088 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801708c:	b091      	sub	sp, #68	; 0x44
 801708e:	469b      	mov	fp, r3
 8017090:	4616      	mov	r6, r2
 8017092:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017096:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801709a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801709e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80170a2:	4604      	mov	r4, r0
 80170a4:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80170a8:	4640      	mov	r0, r8
 80170aa:	460d      	mov	r5, r1
 80170ac:	4659      	mov	r1, fp
 80170ae:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80170b2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80170b6:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80170ba:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80170be:	f7f3 fd2d 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 80170c2:	4631      	mov	r1, r6
 80170c4:	4640      	mov	r0, r8
 80170c6:	f7f3 fd29 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 80170ca:	4b74      	ldr	r3, [pc, #464]	; (801729c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80170cc:	8818      	ldrh	r0, [r3, #0]
 80170ce:	4b74      	ldr	r3, [pc, #464]	; (80172a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80170d0:	b202      	sxth	r2, r0
 80170d2:	8819      	ldrh	r1, [r3, #0]
 80170d4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80170d8:	b20e      	sxth	r6, r1
 80170da:	2b00      	cmp	r3, #0
 80170dc:	da07      	bge.n	80170ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80170de:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80170e2:	4463      	add	r3, ip
 80170e4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80170e8:	2300      	movs	r3, #0
 80170ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80170ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80170f2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80170f6:	1ad2      	subs	r2, r2, r3
 80170f8:	4594      	cmp	ip, r2
 80170fa:	bfc4      	itt	gt
 80170fc:	1ac2      	subgt	r2, r0, r3
 80170fe:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8017102:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017106:	2a00      	cmp	r2, #0
 8017108:	da07      	bge.n	801711a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801710a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801710e:	4462      	add	r2, ip
 8017110:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017114:	2200      	movs	r2, #0
 8017116:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801711a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801711e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017122:	eba6 060a 	sub.w	r6, r6, sl
 8017126:	42b2      	cmp	r2, r6
 8017128:	bfc4      	itt	gt
 801712a:	eba1 020a 	subgt.w	r2, r1, sl
 801712e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8017132:	4a5c      	ldr	r2, [pc, #368]	; (80172a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017134:	7812      	ldrb	r2, [r2, #0]
 8017136:	b9a2      	cbnz	r2, 8017162 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017138:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801713c:	4286      	cmp	r6, r0
 801713e:	4640      	mov	r0, r8
 8017140:	9303      	str	r3, [sp, #12]
 8017142:	bf14      	ite	ne
 8017144:	2600      	movne	r6, #0
 8017146:	2601      	moveq	r6, #1
 8017148:	f7f3 fd2b 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801714c:	9b03      	ldr	r3, [sp, #12]
 801714e:	b160      	cbz	r0, 801716a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017150:	2300      	movs	r3, #0
 8017152:	8023      	strh	r3, [r4, #0]
 8017154:	8063      	strh	r3, [r4, #2]
 8017156:	80a3      	strh	r3, [r4, #4]
 8017158:	4620      	mov	r0, r4
 801715a:	80e3      	strh	r3, [r4, #6]
 801715c:	b011      	add	sp, #68	; 0x44
 801715e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017162:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017166:	428e      	cmp	r6, r1
 8017168:	e7e9      	b.n	801713e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801716a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801716e:	a90e      	add	r1, sp, #56	; 0x38
 8017170:	900e      	str	r0, [sp, #56]	; 0x38
 8017172:	a80c      	add	r0, sp, #48	; 0x30
 8017174:	9205      	str	r2, [sp, #20]
 8017176:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801717a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801717e:	9206      	str	r2, [sp, #24]
 8017180:	f8bb 2000 	ldrh.w	r2, [fp]
 8017184:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8017188:	1a9b      	subs	r3, r3, r2
 801718a:	b21b      	sxth	r3, r3
 801718c:	9303      	str	r3, [sp, #12]
 801718e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017192:	f8df b118 	ldr.w	fp, [pc, #280]	; 80172ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017196:	ebaa 0a03 	sub.w	sl, sl, r3
 801719a:	fa0f f38a 	sxth.w	r3, sl
 801719e:	9304      	str	r3, [sp, #16]
 80171a0:	9b03      	ldr	r3, [sp, #12]
 80171a2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80171a6:	9b04      	ldr	r3, [sp, #16]
 80171a8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80171ac:	9b05      	ldr	r3, [sp, #20]
 80171ae:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80171b2:	9b06      	ldr	r3, [sp, #24]
 80171b4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80171b8:	f7f8 ff74 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80171bc:	4640      	mov	r0, r8
 80171be:	f7f8 ff2d 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80171c2:	a80e      	add	r0, sp, #56	; 0x38
 80171c4:	f7f8 ff2a 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80171c8:	4b37      	ldr	r3, [pc, #220]	; (80172a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80171ca:	4628      	mov	r0, r5
 80171cc:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80171d0:	881b      	ldrh	r3, [r3, #0]
 80171d2:	9307      	str	r3, [sp, #28]
 80171d4:	682b      	ldr	r3, [r5, #0]
 80171d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80171d8:	4798      	blx	r3
 80171da:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80171de:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80171e2:	4681      	mov	r9, r0
 80171e4:	f8db 0000 	ldr.w	r0, [fp]
 80171e8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80171ec:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80171ee:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80171f2:	6803      	ldr	r3, [r0, #0]
 80171f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80171f6:	4798      	blx	r3
 80171f8:	4607      	mov	r7, r0
 80171fa:	f8db 0000 	ldr.w	r0, [fp]
 80171fe:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017202:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017206:	6803      	ldr	r3, [r0, #0]
 8017208:	9109      	str	r1, [sp, #36]	; 0x24
 801720a:	9208      	str	r2, [sp, #32]
 801720c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801720e:	4798      	blx	r3
 8017210:	f010 0f01 	tst.w	r0, #1
 8017214:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017218:	d012      	beq.n	8017240 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801721a:	f8db 0000 	ldr.w	r0, [fp]
 801721e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8017222:	6803      	ldr	r3, [r0, #0]
 8017224:	9200      	str	r2, [sp, #0]
 8017226:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017228:	462b      	mov	r3, r5
 801722a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801722e:	47b0      	blx	r6
 8017230:	9b03      	ldr	r3, [sp, #12]
 8017232:	8023      	strh	r3, [r4, #0]
 8017234:	9b04      	ldr	r3, [sp, #16]
 8017236:	8063      	strh	r3, [r4, #2]
 8017238:	9b05      	ldr	r3, [sp, #20]
 801723a:	80a3      	strh	r3, [r4, #4]
 801723c:	9b06      	ldr	r3, [sp, #24]
 801723e:	e78b      	b.n	8017158 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017240:	fb09 f202 	mul.w	r2, r9, r2
 8017244:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017248:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801724c:	440f      	add	r7, r1
 801724e:	b166      	cbz	r6, 801726a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017250:	9a07      	ldr	r2, [sp, #28]
 8017252:	4592      	cmp	sl, r2
 8017254:	d109      	bne.n	801726a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017256:	f8db 0000 	ldr.w	r0, [fp]
 801725a:	fb09 f303 	mul.w	r3, r9, r3
 801725e:	4629      	mov	r1, r5
 8017260:	6802      	ldr	r2, [r0, #0]
 8017262:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8017264:	463a      	mov	r2, r7
 8017266:	47b0      	blx	r6
 8017268:	e7e2      	b.n	8017230 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801726a:	fb0a f303 	mul.w	r3, sl, r3
 801726e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017272:	f8df b038 	ldr.w	fp, [pc, #56]	; 80172ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017276:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801727a:	4545      	cmp	r5, r8
 801727c:	d2d8      	bcs.n	8017230 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801727e:	f8db 0000 	ldr.w	r0, [fp]
 8017282:	4629      	mov	r1, r5
 8017284:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017288:	4435      	add	r5, r6
 801728a:	6802      	ldr	r2, [r0, #0]
 801728c:	005b      	lsls	r3, r3, #1
 801728e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017292:	463a      	mov	r2, r7
 8017294:	47d0      	blx	sl
 8017296:	444f      	add	r7, r9
 8017298:	e7ef      	b.n	801727a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801729a:	bf00      	nop
 801729c:	2400e418 	.word	0x2400e418
 80172a0:	2400e41a 	.word	0x2400e41a
 80172a4:	2400e41c 	.word	0x2400e41c
 80172a8:	2400e41e 	.word	0x2400e41e
 80172ac:	2400e424 	.word	0x2400e424

080172b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80172b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80172b2:	4606      	mov	r6, r0
 80172b4:	b087      	sub	sp, #28
 80172b6:	460c      	mov	r4, r1
 80172b8:	4617      	mov	r7, r2
 80172ba:	461d      	mov	r5, r3
 80172bc:	b333      	cbz	r3, 801730c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80172be:	4608      	mov	r0, r1
 80172c0:	f7f3 fc6f 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80172c4:	bb10      	cbnz	r0, 801730c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80172c6:	6820      	ldr	r0, [r4, #0]
 80172c8:	ab04      	add	r3, sp, #16
 80172ca:	6861      	ldr	r1, [r4, #4]
 80172cc:	4c1b      	ldr	r4, [pc, #108]	; (801733c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80172ce:	c303      	stmia	r3!, {r0, r1}
 80172d0:	a804      	add	r0, sp, #16
 80172d2:	f7f8 fea3 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80172d6:	6820      	ldr	r0, [r4, #0]
 80172d8:	6803      	ldr	r3, [r0, #0]
 80172da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80172dc:	4798      	blx	r3
 80172de:	2dff      	cmp	r5, #255	; 0xff
 80172e0:	d016      	beq.n	8017310 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80172e2:	f010 0f08 	tst.w	r0, #8
 80172e6:	6820      	ldr	r0, [r4, #0]
 80172e8:	d015      	beq.n	8017316 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80172ea:	2400      	movs	r4, #0
 80172ec:	6801      	ldr	r1, [r0, #0]
 80172ee:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80172f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80172f6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80172fa:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80172fe:	9401      	str	r4, [sp, #4]
 8017300:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017304:	9400      	str	r4, [sp, #0]
 8017306:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017308:	4639      	mov	r1, r7
 801730a:	47a0      	blx	r4
 801730c:	b007      	add	sp, #28
 801730e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017310:	f010 0f02 	tst.w	r0, #2
 8017314:	e7e7      	b.n	80172e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017316:	6803      	ldr	r3, [r0, #0]
 8017318:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801731a:	4798      	blx	r3
 801731c:	4b08      	ldr	r3, [pc, #32]	; (8017340 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801731e:	4601      	mov	r1, r0
 8017320:	4630      	mov	r0, r6
 8017322:	881a      	ldrh	r2, [r3, #0]
 8017324:	6833      	ldr	r3, [r6, #0]
 8017326:	e9cd 7500 	strd	r7, r5, [sp]
 801732a:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801732c:	ab04      	add	r3, sp, #16
 801732e:	47a8      	blx	r5
 8017330:	6820      	ldr	r0, [r4, #0]
 8017332:	6803      	ldr	r3, [r0, #0]
 8017334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017336:	4798      	blx	r3
 8017338:	e7e8      	b.n	801730c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801733a:	bf00      	nop
 801733c:	2400e424 	.word	0x2400e424
 8017340:	2400e41e 	.word	0x2400e41e

08017344 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017344:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017348:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801734c:	4688      	mov	r8, r1
 801734e:	4614      	mov	r4, r2
 8017350:	461d      	mov	r5, r3
 8017352:	9e08      	ldr	r6, [sp, #32]
 8017354:	2f00      	cmp	r7, #0
 8017356:	f000 80ab 	beq.w	80174b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801735a:	4618      	mov	r0, r3
 801735c:	f7f3 fc21 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017360:	2800      	cmp	r0, #0
 8017362:	f040 80a5 	bne.w	80174b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017366:	f9b5 1000 	ldrsh.w	r1, [r5]
 801736a:	2fff      	cmp	r7, #255	; 0xff
 801736c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017370:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017374:	fb04 1303 	mla	r3, r4, r3, r1
 8017378:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801737c:	eba4 0200 	sub.w	r2, r4, r0
 8017380:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017384:	fb04 f505 	mul.w	r5, r4, r5
 8017388:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801738c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017390:	d04a      	beq.n	8017428 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8017392:	b2bc      	uxth	r4, r7
 8017394:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8017398:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801739c:	fa5f f788 	uxtb.w	r7, r8
 80173a0:	b2f3      	uxtb	r3, r6
 80173a2:	0040      	lsls	r0, r0, #1
 80173a4:	fb0e fe04 	mul.w	lr, lr, r4
 80173a8:	4367      	muls	r7, r4
 80173aa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80173ae:	4363      	muls	r3, r4
 80173b0:	fa1f fc8c 	uxth.w	ip, ip
 80173b4:	42a9      	cmp	r1, r5
 80173b6:	d27b      	bcs.n	80174b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80173b8:	eb01 0900 	add.w	r9, r1, r0
 80173bc:	4549      	cmp	r1, r9
 80173be:	d231      	bcs.n	8017424 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 80173c0:	880a      	ldrh	r2, [r1, #0]
 80173c2:	1214      	asrs	r4, r2, #8
 80173c4:	10d6      	asrs	r6, r2, #3
 80173c6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80173ca:	00d2      	lsls	r2, r2, #3
 80173cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80173d0:	b2d2      	uxtb	r2, r2
 80173d2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80173d6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80173da:	fb14 f40c 	smulbb	r4, r4, ip
 80173de:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80173e2:	fb12 f20c 	smulbb	r2, r2, ip
 80173e6:	fb16 f60c 	smulbb	r6, r6, ip
 80173ea:	4474      	add	r4, lr
 80173ec:	441a      	add	r2, r3
 80173ee:	b2a4      	uxth	r4, r4
 80173f0:	443e      	add	r6, r7
 80173f2:	b292      	uxth	r2, r2
 80173f4:	f104 0a01 	add.w	sl, r4, #1
 80173f8:	b2b6      	uxth	r6, r6
 80173fa:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80173fe:	f102 0a01 	add.w	sl, r2, #1
 8017402:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017406:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801740a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801740e:	4322      	orrs	r2, r4
 8017410:	1c74      	adds	r4, r6, #1
 8017412:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017416:	0976      	lsrs	r6, r6, #5
 8017418:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801741c:	4332      	orrs	r2, r6
 801741e:	f821 2b02 	strh.w	r2, [r1], #2
 8017422:	e7cb      	b.n	80173bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8017424:	4441      	add	r1, r8
 8017426:	e7c5      	b.n	80173b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 8017428:	0973      	lsrs	r3, r6, #5
 801742a:	4f22      	ldr	r7, [pc, #136]	; (80174b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 801742c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017430:	ea08 0707 	and.w	r7, r8, r7
 8017434:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017438:	433b      	orrs	r3, r7
 801743a:	07e7      	lsls	r7, r4, #31
 801743c:	ea43 0306 	orr.w	r3, r3, r6
 8017440:	b29b      	uxth	r3, r3
 8017442:	d50b      	bpl.n	801745c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8017444:	0040      	lsls	r0, r0, #1
 8017446:	0052      	lsls	r2, r2, #1
 8017448:	42a9      	cmp	r1, r5
 801744a:	d231      	bcs.n	80174b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801744c:	180c      	adds	r4, r1, r0
 801744e:	42a1      	cmp	r1, r4
 8017450:	d202      	bcs.n	8017458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017452:	f821 3b02 	strh.w	r3, [r1], #2
 8017456:	e7fa      	b.n	801744e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8017458:	4411      	add	r1, r2
 801745a:	e7f5      	b.n	8017448 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 801745c:	078e      	lsls	r6, r1, #30
 801745e:	d008      	beq.n	8017472 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 8017460:	0066      	lsls	r6, r4, #1
 8017462:	460a      	mov	r2, r1
 8017464:	42aa      	cmp	r2, r5
 8017466:	d202      	bcs.n	801746e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017468:	8013      	strh	r3, [r2, #0]
 801746a:	4432      	add	r2, r6
 801746c:	e7fa      	b.n	8017464 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801746e:	3102      	adds	r1, #2
 8017470:	3801      	subs	r0, #1
 8017472:	07c2      	lsls	r2, r0, #31
 8017474:	d50b      	bpl.n	801748e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 8017476:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801747a:	0066      	lsls	r6, r4, #1
 801747c:	3a01      	subs	r2, #1
 801747e:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017482:	42aa      	cmp	r2, r5
 8017484:	d202      	bcs.n	801748c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8017486:	8013      	strh	r3, [r2, #0]
 8017488:	4432      	add	r2, r6
 801748a:	e7fa      	b.n	8017482 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801748c:	3801      	subs	r0, #1
 801748e:	b178      	cbz	r0, 80174b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017490:	1040      	asrs	r0, r0, #1
 8017492:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017496:	0080      	lsls	r0, r0, #2
 8017498:	0064      	lsls	r4, r4, #1
 801749a:	42a9      	cmp	r1, r5
 801749c:	d208      	bcs.n	80174b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801749e:	180e      	adds	r6, r1, r0
 80174a0:	460a      	mov	r2, r1
 80174a2:	42b2      	cmp	r2, r6
 80174a4:	d202      	bcs.n	80174ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80174a6:	f842 3b04 	str.w	r3, [r2], #4
 80174aa:	e7fa      	b.n	80174a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 80174ac:	4421      	add	r1, r4
 80174ae:	e7f4      	b.n	801749a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 80174b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80174b4:	00fff800 	.word	0x00fff800

080174b8 <_ZN8touchgfx8LCD16bppC1Ev>:
 80174b8:	2200      	movs	r2, #0
 80174ba:	4912      	ldr	r1, [pc, #72]	; (8017504 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80174bc:	6042      	str	r2, [r0, #4]
 80174be:	6001      	str	r1, [r0, #0]
 80174c0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80174c4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80174c8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80174cc:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80174d0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80174d4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80174d8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80174dc:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80174e0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80174e4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80174e8:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80174ec:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80174f0:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80174f4:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80174f8:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 80174fc:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8017500:	4770      	bx	lr
 8017502:	bf00      	nop
 8017504:	08023cec 	.word	0x08023cec

08017508 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801750c:	b08d      	sub	sp, #52	; 0x34
 801750e:	460d      	mov	r5, r1
 8017510:	4604      	mov	r4, r0
 8017512:	4699      	mov	r9, r3
 8017514:	6808      	ldr	r0, [r1, #0]
 8017516:	ab08      	add	r3, sp, #32
 8017518:	6849      	ldr	r1, [r1, #4]
 801751a:	c303      	stmia	r3!, {r0, r1}
 801751c:	6810      	ldr	r0, [r2, #0]
 801751e:	ab0a      	add	r3, sp, #40	; 0x28
 8017520:	6851      	ldr	r1, [r2, #4]
 8017522:	c303      	stmia	r3!, {r0, r1}
 8017524:	a808      	add	r0, sp, #32
 8017526:	f7f8 fd79 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801752a:	4629      	mov	r1, r5
 801752c:	a80a      	add	r0, sp, #40	; 0x28
 801752e:	4d67      	ldr	r5, [pc, #412]	; (80176cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017530:	f7f8 fdb8 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017534:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017538:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801753c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8017540:	6828      	ldr	r0, [r5, #0]
 8017542:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017546:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801754a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801754e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017552:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017556:	440a      	add	r2, r1
 8017558:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801755c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017560:	4413      	add	r3, r2
 8017562:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017566:	6803      	ldr	r3, [r0, #0]
 8017568:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801756a:	4798      	blx	r3
 801756c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017570:	d119      	bne.n	80175a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017572:	f010 0f20 	tst.w	r0, #32
 8017576:	6828      	ldr	r0, [r5, #0]
 8017578:	d018      	beq.n	80175ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801757a:	2500      	movs	r5, #0
 801757c:	6801      	ldr	r1, [r0, #0]
 801757e:	b2b6      	uxth	r6, r6
 8017580:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8017584:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017588:	9601      	str	r6, [sp, #4]
 801758a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801758e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017592:	9502      	str	r5, [sp, #8]
 8017594:	fa1f f588 	uxth.w	r5, r8
 8017598:	9500      	str	r5, [sp, #0]
 801759a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801759c:	4621      	mov	r1, r4
 801759e:	47a8      	blx	r5
 80175a0:	b00d      	add	sp, #52	; 0x34
 80175a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175a6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80175aa:	e7e4      	b.n	8017576 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80175ac:	6803      	ldr	r3, [r0, #0]
 80175ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175b0:	4798      	blx	r3
 80175b2:	4947      	ldr	r1, [pc, #284]	; (80176d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80175b4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80175b8:	880b      	ldrh	r3, [r1, #0]
 80175ba:	468a      	mov	sl, r1
 80175bc:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80175c0:	fb03 5202 	mla	r2, r3, r2, r5
 80175c4:	4373      	muls	r3, r6
 80175c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80175ca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80175ce:	9307      	str	r3, [sp, #28]
 80175d0:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80175d4:	9306      	str	r3, [sp, #24]
 80175d6:	9b07      	ldr	r3, [sp, #28]
 80175d8:	4298      	cmp	r0, r3
 80175da:	d270      	bcs.n	80176be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80175dc:	9b06      	ldr	r3, [sp, #24]
 80175de:	4621      	mov	r1, r4
 80175e0:	eb00 0b03 	add.w	fp, r0, r3
 80175e4:	4558      	cmp	r0, fp
 80175e6:	d25d      	bcs.n	80176a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80175e8:	f851 4b04 	ldr.w	r4, [r1], #4
 80175ec:	0e23      	lsrs	r3, r4, #24
 80175ee:	d014      	beq.n	801761a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80175f0:	2bff      	cmp	r3, #255	; 0xff
 80175f2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80175f6:	d112      	bne.n	801761e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80175f8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80175fc:	d10f      	bne.n	801761e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80175fe:	0963      	lsrs	r3, r4, #5
 8017600:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017604:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017608:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801760c:	f02c 0c07 	bic.w	ip, ip, #7
 8017610:	ea43 0c0c 	orr.w	ip, r3, ip
 8017614:	ea4c 0404 	orr.w	r4, ip, r4
 8017618:	8004      	strh	r4, [r0, #0]
 801761a:	3002      	adds	r0, #2
 801761c:	e7e2      	b.n	80175e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801761e:	fb09 f303 	mul.w	r3, r9, r3
 8017622:	8807      	ldrh	r7, [r0, #0]
 8017624:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017628:	fa5f fc8c 	uxtb.w	ip, ip
 801762c:	1c5a      	adds	r2, r3, #1
 801762e:	123e      	asrs	r6, r7, #8
 8017630:	10fd      	asrs	r5, r7, #3
 8017632:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017636:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801763a:	00ff      	lsls	r7, r7, #3
 801763c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017640:	1212      	asrs	r2, r2, #8
 8017642:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017646:	b293      	uxth	r3, r2
 8017648:	43d2      	mvns	r2, r2
 801764a:	b2ff      	uxtb	r7, r7
 801764c:	fb1e fe03 	smulbb	lr, lr, r3
 8017650:	b2d2      	uxtb	r2, r2
 8017652:	fb1c fc03 	smulbb	ip, ip, r3
 8017656:	b2e4      	uxtb	r4, r4
 8017658:	fb06 e602 	mla	r6, r6, r2, lr
 801765c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017660:	fb14 f403 	smulbb	r4, r4, r3
 8017664:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017668:	b2b6      	uxth	r6, r6
 801766a:	fb05 c502 	mla	r5, r5, r2, ip
 801766e:	fb07 4702 	mla	r7, r7, r2, r4
 8017672:	f106 0e01 	add.w	lr, r6, #1
 8017676:	b2ad      	uxth	r5, r5
 8017678:	b2bf      	uxth	r7, r7
 801767a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801767e:	f105 0c01 	add.w	ip, r5, #1
 8017682:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8017686:	1c7e      	adds	r6, r7, #1
 8017688:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801768c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017690:	096d      	lsrs	r5, r5, #5
 8017692:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017696:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801769a:	ea46 060e 	orr.w	r6, r6, lr
 801769e:	432e      	orrs	r6, r5
 80176a0:	8006      	strh	r6, [r0, #0]
 80176a2:	e7ba      	b.n	801761a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80176a4:	f8ba 3000 	ldrh.w	r3, [sl]
 80176a8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80176ac:	eba3 0308 	sub.w	r3, r3, r8
 80176b0:	eba4 0408 	sub.w	r4, r4, r8
 80176b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80176b8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80176bc:	e78b      	b.n	80175d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80176be:	4b03      	ldr	r3, [pc, #12]	; (80176cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80176c0:	6818      	ldr	r0, [r3, #0]
 80176c2:	6803      	ldr	r3, [r0, #0]
 80176c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176c6:	4798      	blx	r3
 80176c8:	e76a      	b.n	80175a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80176ca:	bf00      	nop
 80176cc:	2400e424 	.word	0x2400e424
 80176d0:	2400e41e 	.word	0x2400e41e

080176d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80176d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80176d8:	b085      	sub	sp, #20
 80176da:	6810      	ldr	r0, [r2, #0]
 80176dc:	460c      	mov	r4, r1
 80176de:	6851      	ldr	r1, [r2, #4]
 80176e0:	466d      	mov	r5, sp
 80176e2:	4616      	mov	r6, r2
 80176e4:	c503      	stmia	r5!, {r0, r1}
 80176e6:	6818      	ldr	r0, [r3, #0]
 80176e8:	6859      	ldr	r1, [r3, #4]
 80176ea:	c503      	stmia	r5!, {r0, r1}
 80176ec:	4668      	mov	r0, sp
 80176ee:	4d2e      	ldr	r5, [pc, #184]	; (80177a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80176f0:	f7f8 fc94 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80176f4:	4631      	mov	r1, r6
 80176f6:	a802      	add	r0, sp, #8
 80176f8:	4e2c      	ldr	r6, [pc, #176]	; (80177ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80176fa:	f7f8 fcd3 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80176fe:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017702:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017706:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801770a:	6828      	ldr	r0, [r5, #0]
 801770c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017710:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017714:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017718:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801771c:	f8bd 1000 	ldrh.w	r1, [sp]
 8017720:	440a      	add	r2, r1
 8017722:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017726:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801772a:	4413      	add	r3, r2
 801772c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017730:	6803      	ldr	r3, [r0, #0]
 8017732:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017734:	4798      	blx	r3
 8017736:	8833      	ldrh	r3, [r6, #0]
 8017738:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801773c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017740:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017744:	f8df e068 	ldr.w	lr, [pc, #104]	; 80177b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017748:	fb03 1202 	mla	r2, r3, r2, r1
 801774c:	fb08 f303 	mul.w	r3, r8, r3
 8017750:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017754:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017758:	4298      	cmp	r0, r3
 801775a:	d21d      	bcs.n	8017798 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801775c:	eb00 080c 	add.w	r8, r0, ip
 8017760:	4540      	cmp	r0, r8
 8017762:	d20f      	bcs.n	8017784 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017764:	f854 1b04 	ldr.w	r1, [r4], #4
 8017768:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801776c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017770:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017774:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017778:	ea42 0209 	orr.w	r2, r2, r9
 801777c:	430a      	orrs	r2, r1
 801777e:	f820 2b02 	strh.w	r2, [r0], #2
 8017782:	e7ed      	b.n	8017760 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017784:	8832      	ldrh	r2, [r6, #0]
 8017786:	1bd2      	subs	r2, r2, r7
 8017788:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801778c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017790:	1bd2      	subs	r2, r2, r7
 8017792:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017796:	e7df      	b.n	8017758 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017798:	6828      	ldr	r0, [r5, #0]
 801779a:	6803      	ldr	r3, [r0, #0]
 801779c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801779e:	4798      	blx	r3
 80177a0:	b005      	add	sp, #20
 80177a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80177a6:	bf00      	nop
 80177a8:	2400e424 	.word	0x2400e424
 80177ac:	2400e41e 	.word	0x2400e41e
 80177b0:	fffff800 	.word	0xfffff800

080177b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80177b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80177b8:	b08e      	sub	sp, #56	; 0x38
 80177ba:	460e      	mov	r6, r1
 80177bc:	4604      	mov	r4, r0
 80177be:	461d      	mov	r5, r3
 80177c0:	6808      	ldr	r0, [r1, #0]
 80177c2:	ab0a      	add	r3, sp, #40	; 0x28
 80177c4:	6849      	ldr	r1, [r1, #4]
 80177c6:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 801799c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80177ca:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 80179a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80177ce:	c303      	stmia	r3!, {r0, r1}
 80177d0:	6810      	ldr	r0, [r2, #0]
 80177d2:	ab0c      	add	r3, sp, #48	; 0x30
 80177d4:	6851      	ldr	r1, [r2, #4]
 80177d6:	c303      	stmia	r3!, {r0, r1}
 80177d8:	a80a      	add	r0, sp, #40	; 0x28
 80177da:	f7f8 fc1f 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80177de:	4631      	mov	r1, r6
 80177e0:	a80c      	add	r0, sp, #48	; 0x30
 80177e2:	f7f8 fc5f 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80177e6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80177ea:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80177ee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80177f2:	f8d8 0000 	ldr.w	r0, [r8]
 80177f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80177fa:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80177fe:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017802:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017806:	440c      	add	r4, r1
 8017808:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801780c:	440a      	add	r2, r1
 801780e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017812:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017816:	4413      	add	r3, r2
 8017818:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801781c:	6803      	ldr	r3, [r0, #0]
 801781e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017820:	4798      	blx	r3
 8017822:	2dff      	cmp	r5, #255	; 0xff
 8017824:	d124      	bne.n	8017870 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017826:	f010 0f01 	tst.w	r0, #1
 801782a:	f8d8 0000 	ldr.w	r0, [r8]
 801782e:	d022      	beq.n	8017876 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017830:	2100      	movs	r1, #0
 8017832:	f04f 0e01 	mov.w	lr, #1
 8017836:	f8d0 c000 	ldr.w	ip, [r0]
 801783a:	b2b6      	uxth	r6, r6
 801783c:	f8cd e018 	str.w	lr, [sp, #24]
 8017840:	b2bf      	uxth	r7, r7
 8017842:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017846:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801784a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801784e:	f8b9 e000 	ldrh.w	lr, [r9]
 8017852:	9503      	str	r5, [sp, #12]
 8017854:	9601      	str	r6, [sp, #4]
 8017856:	9700      	str	r7, [sp, #0]
 8017858:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801785c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017860:	9102      	str	r1, [sp, #8]
 8017862:	4621      	mov	r1, r4
 8017864:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017868:	47a8      	blx	r5
 801786a:	b00e      	add	sp, #56	; 0x38
 801786c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017870:	f010 0f04 	tst.w	r0, #4
 8017874:	e7d9      	b.n	801782a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017876:	6803      	ldr	r3, [r0, #0]
 8017878:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801787a:	4798      	blx	r3
 801787c:	f8b9 3000 	ldrh.w	r3, [r9]
 8017880:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017884:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017888:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801788c:	435e      	muls	r6, r3
 801788e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017892:	2dff      	cmp	r5, #255	; 0xff
 8017894:	fb03 1202 	mla	r2, r3, r2, r1
 8017898:	ebac 0c07 	sub.w	ip, ip, r7
 801789c:	eba3 0707 	sub.w	r7, r3, r7
 80178a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80178a4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80178a8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80178ac:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80178b0:	d049      	beq.n	8017946 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80178b2:	43eb      	mvns	r3, r5
 80178b4:	fa1f f985 	uxth.w	r9, r5
 80178b8:	b2db      	uxtb	r3, r3
 80178ba:	42b0      	cmp	r0, r6
 80178bc:	d266      	bcs.n	801798c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80178be:	eb00 0a0e 	add.w	sl, r0, lr
 80178c2:	4550      	cmp	r0, sl
 80178c4:	4621      	mov	r1, r4
 80178c6:	f104 0403 	add.w	r4, r4, #3
 80178ca:	d25b      	bcs.n	8017984 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80178cc:	8802      	ldrh	r2, [r0, #0]
 80178ce:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80178d2:	ea4f 2822 	mov.w	r8, r2, asr #8
 80178d6:	fb11 f109 	smulbb	r1, r1, r9
 80178da:	10d5      	asrs	r5, r2, #3
 80178dc:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80178e0:	00d2      	lsls	r2, r2, #3
 80178e2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80178e6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80178ea:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80178ee:	fb08 1803 	mla	r8, r8, r3, r1
 80178f2:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80178f6:	b2d2      	uxtb	r2, r2
 80178f8:	fb11 f109 	smulbb	r1, r1, r9
 80178fc:	fa1f f888 	uxth.w	r8, r8
 8017900:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017904:	fb05 1503 	mla	r5, r5, r3, r1
 8017908:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801790c:	fb11 f109 	smulbb	r1, r1, r9
 8017910:	b2ad      	uxth	r5, r5
 8017912:	fb02 1203 	mla	r2, r2, r3, r1
 8017916:	f108 0101 	add.w	r1, r8, #1
 801791a:	b292      	uxth	r2, r2
 801791c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017920:	1c51      	adds	r1, r2, #1
 8017922:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017926:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801792a:	1c69      	adds	r1, r5, #1
 801792c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017930:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017934:	096d      	lsrs	r5, r5, #5
 8017936:	ea42 0208 	orr.w	r2, r2, r8
 801793a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801793e:	432a      	orrs	r2, r5
 8017940:	f820 2b02 	strh.w	r2, [r0], #2
 8017944:	e7bd      	b.n	80178c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017946:	4a14      	ldr	r2, [pc, #80]	; (8017998 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017948:	42b0      	cmp	r0, r6
 801794a:	d21f      	bcs.n	801798c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801794c:	eb00 050e 	add.w	r5, r0, lr
 8017950:	42a8      	cmp	r0, r5
 8017952:	4621      	mov	r1, r4
 8017954:	f104 0403 	add.w	r4, r4, #3
 8017958:	d210      	bcs.n	801797c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801795a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801795e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017962:	00db      	lsls	r3, r3, #3
 8017964:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017968:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801796c:	430b      	orrs	r3, r1
 801796e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017972:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017976:	f820 3b02 	strh.w	r3, [r0], #2
 801797a:	e7e9      	b.n	8017950 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801797c:	4438      	add	r0, r7
 801797e:	eb01 040c 	add.w	r4, r1, ip
 8017982:	e7e1      	b.n	8017948 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017984:	4438      	add	r0, r7
 8017986:	eb01 040c 	add.w	r4, r1, ip
 801798a:	e796      	b.n	80178ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801798c:	4b03      	ldr	r3, [pc, #12]	; (801799c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801798e:	6818      	ldr	r0, [r3, #0]
 8017990:	6803      	ldr	r3, [r0, #0]
 8017992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017994:	4798      	blx	r3
 8017996:	e768      	b.n	801786a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017998:	fffff800 	.word	0xfffff800
 801799c:	2400e424 	.word	0x2400e424
 80179a0:	2400e41e 	.word	0x2400e41e

080179a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80179a4:	b4f0      	push	{r4, r5, r6, r7}
 80179a6:	4616      	mov	r6, r2
 80179a8:	461c      	mov	r4, r3
 80179aa:	460d      	mov	r5, r1
 80179ac:	9a04      	ldr	r2, [sp, #16]
 80179ae:	2e01      	cmp	r6, #1
 80179b0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80179b4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80179b8:	d012      	beq.n	80179e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80179ba:	d303      	bcc.n	80179c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80179bc:	2e02      	cmp	r6, #2
 80179be:	d00a      	beq.n	80179d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80179c0:	bcf0      	pop	{r4, r5, r6, r7}
 80179c2:	4770      	bx	lr
 80179c4:	6805      	ldr	r5, [r0, #0]
 80179c6:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80179ca:	68ed      	ldr	r5, [r5, #12]
 80179cc:	4613      	mov	r3, r2
 80179ce:	4622      	mov	r2, r4
 80179d0:	46ac      	mov	ip, r5
 80179d2:	bcf0      	pop	{r4, r5, r6, r7}
 80179d4:	4760      	bx	ip
 80179d6:	4621      	mov	r1, r4
 80179d8:	4628      	mov	r0, r5
 80179da:	bcf0      	pop	{r4, r5, r6, r7}
 80179dc:	f7ff bd94 	b.w	8017508 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80179e0:	4621      	mov	r1, r4
 80179e2:	4628      	mov	r0, r5
 80179e4:	bcf0      	pop	{r4, r5, r6, r7}
 80179e6:	f7ff bee5 	b.w	80177b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080179ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80179ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179f0:	b093      	sub	sp, #76	; 0x4c
 80179f2:	4681      	mov	r9, r0
 80179f4:	4688      	mov	r8, r1
 80179f6:	6810      	ldr	r0, [r2, #0]
 80179f8:	6851      	ldr	r1, [r2, #4]
 80179fa:	ac0e      	add	r4, sp, #56	; 0x38
 80179fc:	4616      	mov	r6, r2
 80179fe:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017a02:	4f6b      	ldr	r7, [pc, #428]	; (8017bb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017a04:	c403      	stmia	r4!, {r0, r1}
 8017a06:	6818      	ldr	r0, [r3, #0]
 8017a08:	ac10      	add	r4, sp, #64	; 0x40
 8017a0a:	6859      	ldr	r1, [r3, #4]
 8017a0c:	c403      	stmia	r4!, {r0, r1}
 8017a0e:	a80e      	add	r0, sp, #56	; 0x38
 8017a10:	f7f8 fb04 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a14:	4631      	mov	r1, r6
 8017a16:	a810      	add	r0, sp, #64	; 0x40
 8017a18:	4e66      	ldr	r6, [pc, #408]	; (8017bb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017a1a:	f7f8 fb43 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a1e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017a22:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017a26:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017a2a:	6830      	ldr	r0, [r6, #0]
 8017a2c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017a30:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017a34:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017a38:	4489      	add	r9, r1
 8017a3a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017a3e:	440a      	add	r2, r1
 8017a40:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017a44:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017a48:	4413      	add	r3, r2
 8017a4a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017a4e:	6803      	ldr	r3, [r0, #0]
 8017a50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a52:	4798      	blx	r3
 8017a54:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017a58:	6830      	ldr	r0, [r6, #0]
 8017a5a:	d01d      	beq.n	8017a98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017a5c:	2200      	movs	r2, #0
 8017a5e:	6801      	ldr	r1, [r0, #0]
 8017a60:	b2a4      	uxth	r4, r4
 8017a62:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017a66:	b2ad      	uxth	r5, r5
 8017a68:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017a6c:	220b      	movs	r2, #11
 8017a6e:	9207      	str	r2, [sp, #28]
 8017a70:	883a      	ldrh	r2, [r7, #0]
 8017a72:	9502      	str	r5, [sp, #8]
 8017a74:	9206      	str	r2, [sp, #24]
 8017a76:	2201      	movs	r2, #1
 8017a78:	9401      	str	r4, [sp, #4]
 8017a7a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017a7e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017a82:	9203      	str	r2, [sp, #12]
 8017a84:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017a88:	9200      	str	r2, [sp, #0]
 8017a8a:	4642      	mov	r2, r8
 8017a8c:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017a8e:	4649      	mov	r1, r9
 8017a90:	47a0      	blx	r4
 8017a92:	b013      	add	sp, #76	; 0x4c
 8017a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a98:	6803      	ldr	r3, [r0, #0]
 8017a9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a9c:	4798      	blx	r3
 8017a9e:	883b      	ldrh	r3, [r7, #0]
 8017aa0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017aa4:	f04f 0e04 	mov.w	lr, #4
 8017aa8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017aac:	435d      	muls	r5, r3
 8017aae:	fb03 1202 	mla	r2, r3, r2, r1
 8017ab2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017ab6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017aba:	920c      	str	r2, [sp, #48]	; 0x30
 8017abc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017ac0:	1b12      	subs	r2, r2, r4
 8017ac2:	920d      	str	r2, [sp, #52]	; 0x34
 8017ac4:	0062      	lsls	r2, r4, #1
 8017ac6:	1b1c      	subs	r4, r3, r4
 8017ac8:	920a      	str	r2, [sp, #40]	; 0x28
 8017aca:	0063      	lsls	r3, r4, #1
 8017acc:	930b      	str	r3, [sp, #44]	; 0x2c
 8017ace:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017ad0:	4298      	cmp	r0, r3
 8017ad2:	d266      	bcs.n	8017ba2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017ad4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017ad6:	eb00 0b03 	add.w	fp, r0, r3
 8017ada:	4558      	cmp	r0, fp
 8017adc:	d25c      	bcs.n	8017b98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017ade:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017ae2:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017ae6:	f858 2003 	ldr.w	r2, [r8, r3]
 8017aea:	0e11      	lsrs	r1, r2, #24
 8017aec:	d012      	beq.n	8017b14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017aee:	29ff      	cmp	r1, #255	; 0xff
 8017af0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017af4:	d110      	bne.n	8017b18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017af6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017afa:	d10d      	bne.n	8017b18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017afc:	0953      	lsrs	r3, r2, #5
 8017afe:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017b02:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017b06:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b0a:	f027 0707 	bic.w	r7, r7, #7
 8017b0e:	431f      	orrs	r7, r3
 8017b10:	433a      	orrs	r2, r7
 8017b12:	8002      	strh	r2, [r0, #0]
 8017b14:	3002      	adds	r0, #2
 8017b16:	e7e0      	b.n	8017ada <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017b18:	fb0a f101 	mul.w	r1, sl, r1
 8017b1c:	8806      	ldrh	r6, [r0, #0]
 8017b1e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017b22:	b2d2      	uxtb	r2, r2
 8017b24:	1c4b      	adds	r3, r1, #1
 8017b26:	1235      	asrs	r5, r6, #8
 8017b28:	10f4      	asrs	r4, r6, #3
 8017b2a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017b2e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017b32:	00f6      	lsls	r6, r6, #3
 8017b34:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017b38:	121b      	asrs	r3, r3, #8
 8017b3a:	b2f6      	uxtb	r6, r6
 8017b3c:	b299      	uxth	r1, r3
 8017b3e:	43db      	mvns	r3, r3
 8017b40:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017b44:	fb1c fc01 	smulbb	ip, ip, r1
 8017b48:	b2db      	uxtb	r3, r3
 8017b4a:	fb12 f201 	smulbb	r2, r2, r1
 8017b4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017b52:	fb05 c503 	mla	r5, r5, r3, ip
 8017b56:	b2ff      	uxtb	r7, r7
 8017b58:	fb06 2203 	mla	r2, r6, r3, r2
 8017b5c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017b60:	fb17 f701 	smulbb	r7, r7, r1
 8017b64:	b2ad      	uxth	r5, r5
 8017b66:	b292      	uxth	r2, r2
 8017b68:	fb04 7403 	mla	r4, r4, r3, r7
 8017b6c:	f105 0c01 	add.w	ip, r5, #1
 8017b70:	1c57      	adds	r7, r2, #1
 8017b72:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017b76:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017b7a:	b2a4      	uxth	r4, r4
 8017b7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017b80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017b84:	433d      	orrs	r5, r7
 8017b86:	1c67      	adds	r7, r4, #1
 8017b88:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017b8c:	0964      	lsrs	r4, r4, #5
 8017b8e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017b92:	4325      	orrs	r5, r4
 8017b94:	8005      	strh	r5, [r0, #0]
 8017b96:	e7bd      	b.n	8017b14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017b98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017b9a:	4418      	add	r0, r3
 8017b9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b9e:	4499      	add	r9, r3
 8017ba0:	e795      	b.n	8017ace <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017ba2:	4b04      	ldr	r3, [pc, #16]	; (8017bb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017ba4:	6818      	ldr	r0, [r3, #0]
 8017ba6:	6803      	ldr	r3, [r0, #0]
 8017ba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017baa:	4798      	blx	r3
 8017bac:	e771      	b.n	8017a92 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017bae:	bf00      	nop
 8017bb0:	2400e41e 	.word	0x2400e41e
 8017bb4:	2400e424 	.word	0x2400e424

08017bb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bbc:	b087      	sub	sp, #28
 8017bbe:	4680      	mov	r8, r0
 8017bc0:	460d      	mov	r5, r1
 8017bc2:	4614      	mov	r4, r2
 8017bc4:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017bc8:	2e00      	cmp	r6, #0
 8017bca:	f000 80b9 	beq.w	8017d40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017bce:	6810      	ldr	r0, [r2, #0]
 8017bd0:	af02      	add	r7, sp, #8
 8017bd2:	6851      	ldr	r1, [r2, #4]
 8017bd4:	c703      	stmia	r7!, {r0, r1}
 8017bd6:	6818      	ldr	r0, [r3, #0]
 8017bd8:	af04      	add	r7, sp, #16
 8017bda:	6859      	ldr	r1, [r3, #4]
 8017bdc:	c703      	stmia	r7!, {r0, r1}
 8017bde:	a802      	add	r0, sp, #8
 8017be0:	f7f8 fa1c 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017be4:	4621      	mov	r1, r4
 8017be6:	a804      	add	r0, sp, #16
 8017be8:	f7f8 fa5c 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017bec:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017bf0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017bf4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017bf8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017bfc:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017c00:	eb08 0401 	add.w	r4, r8, r1
 8017c04:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017c08:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017c0c:	440a      	add	r2, r1
 8017c0e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017c12:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017c16:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017c1a:	4413      	add	r3, r2
 8017c1c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017c20:	4b49      	ldr	r3, [pc, #292]	; (8017d48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017c22:	6818      	ldr	r0, [r3, #0]
 8017c24:	6803      	ldr	r3, [r0, #0]
 8017c26:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017c28:	4798      	blx	r3
 8017c2a:	4b48      	ldr	r3, [pc, #288]	; (8017d4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017c2c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017c30:	2eff      	cmp	r6, #255	; 0xff
 8017c32:	881a      	ldrh	r2, [r3, #0]
 8017c34:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017c38:	fb02 c101 	mla	r1, r2, r1, ip
 8017c3c:	fb02 f207 	mul.w	r2, r2, r7
 8017c40:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017c44:	f105 0104 	add.w	r1, r5, #4
 8017c48:	461d      	mov	r5, r3
 8017c4a:	d05a      	beq.n	8017d02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017c4c:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017c50:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017c54:	b2b6      	uxth	r6, r6
 8017c56:	9301      	str	r3, [sp, #4]
 8017c58:	fa1f fe8e 	uxth.w	lr, lr
 8017c5c:	4282      	cmp	r2, r0
 8017c5e:	d96a      	bls.n	8017d36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017c60:	eb00 0b0a 	add.w	fp, r0, sl
 8017c64:	4583      	cmp	fp, r0
 8017c66:	d940      	bls.n	8017cea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017c68:	8805      	ldrh	r5, [r0, #0]
 8017c6a:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017c6e:	122f      	asrs	r7, r5, #8
 8017c70:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017c74:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017c78:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017c7c:	00ed      	lsls	r5, r5, #3
 8017c7e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017c82:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017c86:	fb17 f70e 	smulbb	r7, r7, lr
 8017c8a:	b2ed      	uxtb	r5, r5
 8017c8c:	fb19 f90e 	smulbb	r9, r9, lr
 8017c90:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017c94:	fb15 f50e 	smulbb	r5, r5, lr
 8017c98:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017c9c:	10df      	asrs	r7, r3, #3
 8017c9e:	00db      	lsls	r3, r3, #3
 8017ca0:	fa1f fc8c 	uxth.w	ip, ip
 8017ca4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017ca8:	b2db      	uxtb	r3, r3
 8017caa:	fb07 9706 	mla	r7, r7, r6, r9
 8017cae:	f10c 0901 	add.w	r9, ip, #1
 8017cb2:	fb03 5306 	mla	r3, r3, r6, r5
 8017cb6:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017cba:	b29b      	uxth	r3, r3
 8017cbc:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017cc0:	b2bf      	uxth	r7, r7
 8017cc2:	f103 0c01 	add.w	ip, r3, #1
 8017cc6:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017cca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017cce:	ea4c 0c09 	orr.w	ip, ip, r9
 8017cd2:	f107 0901 	add.w	r9, r7, #1
 8017cd6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017cda:	097f      	lsrs	r7, r7, #5
 8017cdc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ce0:	ea4c 0c07 	orr.w	ip, ip, r7
 8017ce4:	f820 cb02 	strh.w	ip, [r0], #2
 8017ce8:	e7bc      	b.n	8017c64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017cea:	9b01      	ldr	r3, [sp, #4]
 8017cec:	881b      	ldrh	r3, [r3, #0]
 8017cee:	eba3 0308 	sub.w	r3, r3, r8
 8017cf2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017cf6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017cfa:	eba3 0308 	sub.w	r3, r3, r8
 8017cfe:	441c      	add	r4, r3
 8017d00:	e7ac      	b.n	8017c5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017d02:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017d06:	4282      	cmp	r2, r0
 8017d08:	d915      	bls.n	8017d36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017d0a:	eb00 060a 	add.w	r6, r0, sl
 8017d0e:	4286      	cmp	r6, r0
 8017d10:	d906      	bls.n	8017d20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017d12:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017d16:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017d1a:	f820 3b02 	strh.w	r3, [r0], #2
 8017d1e:	e7f6      	b.n	8017d0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017d20:	882b      	ldrh	r3, [r5, #0]
 8017d22:	eba3 0308 	sub.w	r3, r3, r8
 8017d26:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017d2a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017d2e:	eba3 0308 	sub.w	r3, r3, r8
 8017d32:	441c      	add	r4, r3
 8017d34:	e7e7      	b.n	8017d06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017d36:	4b04      	ldr	r3, [pc, #16]	; (8017d48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017d38:	6818      	ldr	r0, [r3, #0]
 8017d3a:	6803      	ldr	r3, [r0, #0]
 8017d3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017d3e:	4798      	blx	r3
 8017d40:	b007      	add	sp, #28
 8017d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d46:	bf00      	nop
 8017d48:	2400e424 	.word	0x2400e424
 8017d4c:	2400e41e 	.word	0x2400e41e

08017d50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d54:	b091      	sub	sp, #68	; 0x44
 8017d56:	4680      	mov	r8, r0
 8017d58:	460f      	mov	r7, r1
 8017d5a:	4614      	mov	r4, r2
 8017d5c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017d60:	2d00      	cmp	r5, #0
 8017d62:	d051      	beq.n	8017e08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017d64:	6810      	ldr	r0, [r2, #0]
 8017d66:	ae0c      	add	r6, sp, #48	; 0x30
 8017d68:	6851      	ldr	r1, [r2, #4]
 8017d6a:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8017f6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017d6e:	c603      	stmia	r6!, {r0, r1}
 8017d70:	6818      	ldr	r0, [r3, #0]
 8017d72:	ae0e      	add	r6, sp, #56	; 0x38
 8017d74:	6859      	ldr	r1, [r3, #4]
 8017d76:	c603      	stmia	r6!, {r0, r1}
 8017d78:	a80c      	add	r0, sp, #48	; 0x30
 8017d7a:	f7f8 f94f 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d7e:	4621      	mov	r1, r4
 8017d80:	a80e      	add	r0, sp, #56	; 0x38
 8017d82:	f7f8 f98f 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d86:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017d8a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017d8e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017d92:	f8d9 0000 	ldr.w	r0, [r9]
 8017d96:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d9a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017d9e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017da2:	eb08 0401 	add.w	r4, r8, r1
 8017da6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017daa:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8017f70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017dae:	440a      	add	r2, r1
 8017db0:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017db4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017db8:	4413      	add	r3, r2
 8017dba:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017dbe:	6803      	ldr	r3, [r0, #0]
 8017dc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017dc2:	4798      	blx	r3
 8017dc4:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017dc8:	f8d9 0000 	ldr.w	r0, [r9]
 8017dcc:	d01f      	beq.n	8017e0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017dce:	2200      	movs	r2, #0
 8017dd0:	6801      	ldr	r1, [r0, #0]
 8017dd2:	b2b6      	uxth	r6, r6
 8017dd4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017dd8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017ddc:	220b      	movs	r2, #11
 8017dde:	9207      	str	r2, [sp, #28]
 8017de0:	f8b8 2000 	ldrh.w	r2, [r8]
 8017de4:	9601      	str	r6, [sp, #4]
 8017de6:	9206      	str	r2, [sp, #24]
 8017de8:	2201      	movs	r2, #1
 8017dea:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017dee:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017df2:	9203      	str	r2, [sp, #12]
 8017df4:	fa1f f28a 	uxth.w	r2, sl
 8017df8:	9202      	str	r2, [sp, #8]
 8017dfa:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017dfe:	9200      	str	r2, [sp, #0]
 8017e00:	463a      	mov	r2, r7
 8017e02:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017e04:	4621      	mov	r1, r4
 8017e06:	47a8      	blx	r5
 8017e08:	b011      	add	sp, #68	; 0x44
 8017e0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e0e:	6803      	ldr	r3, [r0, #0]
 8017e10:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017e14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e16:	4798      	blx	r3
 8017e18:	f8b8 2000 	ldrh.w	r2, [r8]
 8017e1c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017e20:	2dff      	cmp	r5, #255	; 0xff
 8017e22:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017e26:	fb0a fa02 	mul.w	sl, sl, r2
 8017e2a:	fb02 1303 	mla	r3, r2, r3, r1
 8017e2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e32:	d062      	beq.n	8017efa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017e34:	ea6f 0c05 	mvn.w	ip, r5
 8017e38:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017e3c:	b2ad      	uxth	r5, r5
 8017e3e:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017e42:	fa5f fc8c 	uxtb.w	ip, ip
 8017e46:	930a      	str	r3, [sp, #40]	; 0x28
 8017e48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017e4a:	4298      	cmp	r0, r3
 8017e4c:	f080 8085 	bcs.w	8017f5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017e50:	eb00 0b09 	add.w	fp, r0, r9
 8017e54:	4558      	cmp	r0, fp
 8017e56:	d246      	bcs.n	8017ee6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017e58:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017e5c:	2303      	movs	r3, #3
 8017e5e:	2204      	movs	r2, #4
 8017e60:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017e64:	8803      	ldrh	r3, [r0, #0]
 8017e66:	eb07 0a0e 	add.w	sl, r7, lr
 8017e6a:	1219      	asrs	r1, r3, #8
 8017e6c:	10da      	asrs	r2, r3, #3
 8017e6e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017e72:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017e76:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017e7a:	00db      	lsls	r3, r3, #3
 8017e7c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017e80:	fb18 f805 	smulbb	r8, r8, r5
 8017e84:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017e88:	fb1e fe05 	smulbb	lr, lr, r5
 8017e8c:	b2db      	uxtb	r3, r3
 8017e8e:	fb01 810c 	mla	r1, r1, ip, r8
 8017e92:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017e96:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017e9a:	fb18 f805 	smulbb	r8, r8, r5
 8017e9e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017ea2:	b289      	uxth	r1, r1
 8017ea4:	fb02 820c 	mla	r2, r2, ip, r8
 8017ea8:	fb03 e30c 	mla	r3, r3, ip, lr
 8017eac:	f101 0801 	add.w	r8, r1, #1
 8017eb0:	b292      	uxth	r2, r2
 8017eb2:	b29b      	uxth	r3, r3
 8017eb4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017eb8:	f102 0801 	add.w	r8, r2, #1
 8017ebc:	f103 0e01 	add.w	lr, r3, #1
 8017ec0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017ec4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017ec8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017ecc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017ed0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017ed4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017ed8:	ea4e 0101 	orr.w	r1, lr, r1
 8017edc:	ea41 0108 	orr.w	r1, r1, r8
 8017ee0:	f820 1b02 	strh.w	r1, [r0], #2
 8017ee4:	e7b6      	b.n	8017e54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017ee6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017ee8:	881b      	ldrh	r3, [r3, #0]
 8017eea:	1b9b      	subs	r3, r3, r6
 8017eec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ef0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017ef4:	1b9b      	subs	r3, r3, r6
 8017ef6:	441c      	add	r4, r3
 8017ef8:	e7a6      	b.n	8017e48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017efa:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017efe:	2203      	movs	r2, #3
 8017f00:	2504      	movs	r5, #4
 8017f02:	4919      	ldr	r1, [pc, #100]	; (8017f68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017f04:	4550      	cmp	r0, sl
 8017f06:	d228      	bcs.n	8017f5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017f08:	eb00 0c09 	add.w	ip, r0, r9
 8017f0c:	4560      	cmp	r0, ip
 8017f0e:	4623      	mov	r3, r4
 8017f10:	d219      	bcs.n	8017f46 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8017f12:	f893 e000 	ldrb.w	lr, [r3]
 8017f16:	3401      	adds	r4, #1
 8017f18:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017f1c:	eb07 0b0e 	add.w	fp, r7, lr
 8017f20:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017f24:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017f28:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017f2c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017f30:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017f34:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017f38:	ea43 030b 	orr.w	r3, r3, fp
 8017f3c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017f40:	f820 3b02 	strh.w	r3, [r0], #2
 8017f44:	e7e2      	b.n	8017f0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017f46:	f8b8 3000 	ldrh.w	r3, [r8]
 8017f4a:	1b9b      	subs	r3, r3, r6
 8017f4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f50:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017f54:	1b9b      	subs	r3, r3, r6
 8017f56:	441c      	add	r4, r3
 8017f58:	e7d4      	b.n	8017f04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017f5a:	4b04      	ldr	r3, [pc, #16]	; (8017f6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017f5c:	6818      	ldr	r0, [r3, #0]
 8017f5e:	6803      	ldr	r3, [r0, #0]
 8017f60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f62:	4798      	blx	r3
 8017f64:	e750      	b.n	8017e08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f66:	bf00      	nop
 8017f68:	fffff800 	.word	0xfffff800
 8017f6c:	2400e424 	.word	0x2400e424
 8017f70:	2400e41e 	.word	0x2400e41e

08017f74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017f74:	b4f0      	push	{r4, r5, r6, r7}
 8017f76:	460c      	mov	r4, r1
 8017f78:	4611      	mov	r1, r2
 8017f7a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8017f7e:	461a      	mov	r2, r3
 8017f80:	780f      	ldrb	r7, [r1, #0]
 8017f82:	9b04      	ldr	r3, [sp, #16]
 8017f84:	2f01      	cmp	r7, #1
 8017f86:	784e      	ldrb	r6, [r1, #1]
 8017f88:	d036      	beq.n	8017ff8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8017f8a:	d31e      	bcc.n	8017fca <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8017f8c:	2f02      	cmp	r7, #2
 8017f8e:	d14a      	bne.n	8018026 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f90:	2e03      	cmp	r6, #3
 8017f92:	d848      	bhi.n	8018026 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017f94:	e8df f006 	tbb	[pc, r6]
 8017f98:	16140702 	.word	0x16140702
 8017f9c:	9504      	str	r5, [sp, #16]
 8017f9e:	4620      	mov	r0, r4
 8017fa0:	bcf0      	pop	{r4, r5, r6, r7}
 8017fa2:	f7ff be09 	b.w	8017bb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017fa6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017fa8:	2800      	cmp	r0, #0
 8017faa:	d03c      	beq.n	8018026 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017fac:	6806      	ldr	r6, [r0, #0]
 8017fae:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017fb2:	68b5      	ldr	r5, [r6, #8]
 8017fb4:	4613      	mov	r3, r2
 8017fb6:	46ac      	mov	ip, r5
 8017fb8:	460a      	mov	r2, r1
 8017fba:	4621      	mov	r1, r4
 8017fbc:	bcf0      	pop	{r4, r5, r6, r7}
 8017fbe:	4760      	bx	ip
 8017fc0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017fc2:	e7f1      	b.n	8017fa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017fc4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017fc8:	e7ee      	b.n	8017fa8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017fca:	2e03      	cmp	r6, #3
 8017fcc:	d82b      	bhi.n	8018026 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017fce:	e8df f006 	tbb	[pc, r6]
 8017fd2:	0702      	.short	0x0702
 8017fd4:	100e      	.short	0x100e
 8017fd6:	9504      	str	r5, [sp, #16]
 8017fd8:	4620      	mov	r0, r4
 8017fda:	bcf0      	pop	{r4, r5, r6, r7}
 8017fdc:	f7ff bd06 	b.w	80179ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8017fe0:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017fe2:	b300      	cbz	r0, 8018026 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017fe4:	6806      	ldr	r6, [r0, #0]
 8017fe6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017fea:	68f5      	ldr	r5, [r6, #12]
 8017fec:	e7e2      	b.n	8017fb4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017fee:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017ff0:	e7f7      	b.n	8017fe2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8017ff2:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017ff6:	e7f4      	b.n	8017fe2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8017ff8:	2e03      	cmp	r6, #3
 8017ffa:	d814      	bhi.n	8018026 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017ffc:	e8df f006 	tbb	[pc, r6]
 8018000:	100e0702 	.word	0x100e0702
 8018004:	9504      	str	r5, [sp, #16]
 8018006:	4620      	mov	r0, r4
 8018008:	bcf0      	pop	{r4, r5, r6, r7}
 801800a:	f7ff bea1 	b.w	8017d50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801800e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8018010:	b148      	cbz	r0, 8018026 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018012:	6806      	ldr	r6, [r0, #0]
 8018014:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018018:	6935      	ldr	r5, [r6, #16]
 801801a:	e7cb      	b.n	8017fb4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801801c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801801e:	e7f7      	b.n	8018010 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8018020:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8018024:	e7f4      	b.n	8018010 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8018026:	bcf0      	pop	{r4, r5, r6, r7}
 8018028:	4770      	bx	lr
	...

0801802c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801802c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018030:	b087      	sub	sp, #28
 8018032:	4604      	mov	r4, r0
 8018034:	460e      	mov	r6, r1
 8018036:	6810      	ldr	r0, [r2, #0]
 8018038:	6851      	ldr	r1, [r2, #4]
 801803a:	ad02      	add	r5, sp, #8
 801803c:	4617      	mov	r7, r2
 801803e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8018042:	f8df 9230 	ldr.w	r9, [pc, #560]	; 8018274 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018046:	c503      	stmia	r5!, {r0, r1}
 8018048:	6818      	ldr	r0, [r3, #0]
 801804a:	ad04      	add	r5, sp, #16
 801804c:	6859      	ldr	r1, [r3, #4]
 801804e:	c503      	stmia	r5!, {r0, r1}
 8018050:	a802      	add	r0, sp, #8
 8018052:	f7f7 ffe3 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018056:	4639      	mov	r1, r7
 8018058:	a804      	add	r0, sp, #16
 801805a:	f7f8 f823 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801805e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018062:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018066:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801806a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801806e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018072:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018076:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801807a:	440e      	add	r6, r1
 801807c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018080:	440a      	add	r2, r1
 8018082:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018086:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801808a:	4413      	add	r3, r2
 801808c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018090:	4b77      	ldr	r3, [pc, #476]	; (8018270 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018092:	6818      	ldr	r0, [r3, #0]
 8018094:	6803      	ldr	r3, [r0, #0]
 8018096:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018098:	4798      	blx	r3
 801809a:	f8b9 b000 	ldrh.w	fp, [r9]
 801809e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80180a2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80180a6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80180aa:	fb05 f50b 	mul.w	r5, r5, fp
 80180ae:	fb0b 2303 	mla	r3, fp, r3, r2
 80180b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80180b6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80180ba:	9300      	str	r3, [sp, #0]
 80180bc:	d069      	beq.n	8018192 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80180be:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80180c2:	4558      	cmp	r0, fp
 80180c4:	f080 80cc 	bcs.w	8018260 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80180c8:	9b00      	ldr	r3, [sp, #0]
 80180ca:	4631      	mov	r1, r6
 80180cc:	18c3      	adds	r3, r0, r3
 80180ce:	9301      	str	r3, [sp, #4]
 80180d0:	9b01      	ldr	r3, [sp, #4]
 80180d2:	4298      	cmp	r0, r3
 80180d4:	d24f      	bcs.n	8018176 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80180d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80180da:	2a00      	cmp	r2, #0
 80180dc:	d048      	beq.n	8018170 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80180de:	fb0a f202 	mul.w	r2, sl, r2
 80180e2:	1c53      	adds	r3, r2, #1
 80180e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80180e8:	121b      	asrs	r3, r3, #8
 80180ea:	d041      	beq.n	8018170 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80180ec:	8802      	ldrh	r2, [r0, #0]
 80180ee:	b29e      	uxth	r6, r3
 80180f0:	f8b4 c000 	ldrh.w	ip, [r4]
 80180f4:	43db      	mvns	r3, r3
 80180f6:	1215      	asrs	r5, r2, #8
 80180f8:	b2db      	uxtb	r3, r3
 80180fa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80180fe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018102:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018106:	fb15 f503 	smulbb	r5, r5, r3
 801810a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801810e:	00d2      	lsls	r2, r2, #3
 8018110:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018114:	fb07 5706 	mla	r7, r7, r6, r5
 8018118:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801811c:	b2d2      	uxtb	r2, r2
 801811e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018122:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018126:	fb1e fe03 	smulbb	lr, lr, r3
 801812a:	b2bf      	uxth	r7, r7
 801812c:	fb12 f203 	smulbb	r2, r2, r3
 8018130:	fa5f fc8c 	uxtb.w	ip, ip
 8018134:	fb05 e506 	mla	r5, r5, r6, lr
 8018138:	f107 0e01 	add.w	lr, r7, #1
 801813c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018140:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018144:	fa1f fc8c 	uxth.w	ip, ip
 8018148:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801814c:	b2ad      	uxth	r5, r5
 801814e:	f10c 0701 	add.w	r7, ip, #1
 8018152:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018156:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801815a:	ea47 070e 	orr.w	r7, r7, lr
 801815e:	f105 0e01 	add.w	lr, r5, #1
 8018162:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018166:	096d      	lsrs	r5, r5, #5
 8018168:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801816c:	432f      	orrs	r7, r5
 801816e:	8007      	strh	r7, [r0, #0]
 8018170:	3002      	adds	r0, #2
 8018172:	3402      	adds	r4, #2
 8018174:	e7ac      	b.n	80180d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018176:	f8b9 3000 	ldrh.w	r3, [r9]
 801817a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801817e:	eba3 0308 	sub.w	r3, r3, r8
 8018182:	eba6 0608 	sub.w	r6, r6, r8
 8018186:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801818a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801818e:	440e      	add	r6, r1
 8018190:	e797      	b.n	80180c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018192:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018196:	42a8      	cmp	r0, r5
 8018198:	d262      	bcs.n	8018260 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801819a:	9b00      	ldr	r3, [sp, #0]
 801819c:	4631      	mov	r1, r6
 801819e:	eb00 0b03 	add.w	fp, r0, r3
 80181a2:	4558      	cmp	r0, fp
 80181a4:	d24e      	bcs.n	8018244 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80181a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80181aa:	b12b      	cbz	r3, 80181b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80181ac:	2bff      	cmp	r3, #255	; 0xff
 80181ae:	f8b4 e000 	ldrh.w	lr, [r4]
 80181b2:	d104      	bne.n	80181be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80181b4:	f8a0 e000 	strh.w	lr, [r0]
 80181b8:	3002      	adds	r0, #2
 80181ba:	3402      	adds	r4, #2
 80181bc:	e7f1      	b.n	80181a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80181be:	8802      	ldrh	r2, [r0, #0]
 80181c0:	b29f      	uxth	r7, r3
 80181c2:	43db      	mvns	r3, r3
 80181c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80181c8:	1216      	asrs	r6, r2, #8
 80181ca:	b2db      	uxtb	r3, r3
 80181cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80181d0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80181d4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80181d8:	00d2      	lsls	r2, r2, #3
 80181da:	fb16 f603 	smulbb	r6, r6, r3
 80181de:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80181e2:	b2d2      	uxtb	r2, r2
 80181e4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80181e8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80181ec:	fb1a fa03 	smulbb	sl, sl, r3
 80181f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80181f4:	fa1f fc8c 	uxth.w	ip, ip
 80181f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80181fc:	fb12 f303 	smulbb	r3, r2, r3
 8018200:	fa5f fe8e 	uxtb.w	lr, lr
 8018204:	fb06 a607 	mla	r6, r6, r7, sl
 8018208:	f10c 0201 	add.w	r2, ip, #1
 801820c:	fb0e 3307 	mla	r3, lr, r7, r3
 8018210:	b2b6      	uxth	r6, r6
 8018212:	b29b      	uxth	r3, r3
 8018214:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018218:	f106 0a01 	add.w	sl, r6, #1
 801821c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8018220:	f103 0c01 	add.w	ip, r3, #1
 8018224:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018228:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801822c:	0976      	lsrs	r6, r6, #5
 801822e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018232:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018236:	ea4c 0c02 	orr.w	ip, ip, r2
 801823a:	ea4c 0c06 	orr.w	ip, ip, r6
 801823e:	f8a0 c000 	strh.w	ip, [r0]
 8018242:	e7b9      	b.n	80181b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018244:	f8b9 3000 	ldrh.w	r3, [r9]
 8018248:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801824c:	eba3 0308 	sub.w	r3, r3, r8
 8018250:	eba6 0608 	sub.w	r6, r6, r8
 8018254:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018258:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801825c:	440e      	add	r6, r1
 801825e:	e79a      	b.n	8018196 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018260:	4b03      	ldr	r3, [pc, #12]	; (8018270 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018262:	6818      	ldr	r0, [r3, #0]
 8018264:	6803      	ldr	r3, [r0, #0]
 8018266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018268:	4798      	blx	r3
 801826a:	b007      	add	sp, #28
 801826c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018270:	2400e424 	.word	0x2400e424
 8018274:	2400e41e 	.word	0x2400e41e

08018278 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801827c:	b089      	sub	sp, #36	; 0x24
 801827e:	4682      	mov	sl, r0
 8018280:	460f      	mov	r7, r1
 8018282:	4691      	mov	r9, r2
 8018284:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018288:	4698      	mov	r8, r3
 801828a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801828c:	2e00      	cmp	r6, #0
 801828e:	d03d      	beq.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018290:	4608      	mov	r0, r1
 8018292:	f7fa fe4b 	bl	8012f2c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018296:	4605      	mov	r5, r0
 8018298:	4638      	mov	r0, r7
 801829a:	f7fa fe7b 	bl	8012f94 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801829e:	f8ad 000e 	strh.w	r0, [sp, #14]
 80182a2:	4638      	mov	r0, r7
 80182a4:	f8ad 9008 	strh.w	r9, [sp, #8]
 80182a8:	f8ad 500c 	strh.w	r5, [sp, #12]
 80182ac:	f8ad 800a 	strh.w	r8, [sp, #10]
 80182b0:	f7fa ff28 	bl	8013104 <_ZNK8touchgfx6Bitmap7getDataEv>
 80182b4:	4605      	mov	r5, r0
 80182b6:	4638      	mov	r0, r7
 80182b8:	f7fa ff54 	bl	8013164 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80182bc:	4681      	mov	r9, r0
 80182be:	4638      	mov	r0, r7
 80182c0:	f7fa ffa4 	bl	801320c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80182c4:	280b      	cmp	r0, #11
 80182c6:	d821      	bhi.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80182c8:	e8df f000 	tbb	[pc, r0]
 80182cc:	2006aebe 	.word	0x2006aebe
 80182d0:	20202020 	.word	0x20202020
 80182d4:	b5202020 	.word	0xb5202020
 80182d8:	4bb0      	ldr	r3, [pc, #704]	; (801859c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80182da:	6818      	ldr	r0, [r3, #0]
 80182dc:	6803      	ldr	r3, [r0, #0]
 80182de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80182e0:	4798      	blx	r3
 80182e2:	2eff      	cmp	r6, #255	; 0xff
 80182e4:	d101      	bne.n	80182ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80182e6:	0683      	lsls	r3, r0, #26
 80182e8:	d506      	bpl.n	80182f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80182ea:	4633      	mov	r3, r6
 80182ec:	4622      	mov	r2, r4
 80182ee:	a902      	add	r1, sp, #8
 80182f0:	4628      	mov	r0, r5
 80182f2:	f7ff f909 	bl	8017508 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182f6:	e009      	b.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80182f8:	4638      	mov	r0, r7
 80182fa:	f7fa fecb 	bl	8013094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80182fe:	b940      	cbnz	r0, 8018312 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8018300:	4623      	mov	r3, r4
 8018302:	aa02      	add	r2, sp, #8
 8018304:	4629      	mov	r1, r5
 8018306:	4650      	mov	r0, sl
 8018308:	f7ff f9e4 	bl	80176d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801830c:	b009      	add	sp, #36	; 0x24
 801830e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018312:	f10d 0818 	add.w	r8, sp, #24
 8018316:	4639      	mov	r1, r7
 8018318:	af04      	add	r7, sp, #16
 801831a:	4640      	mov	r0, r8
 801831c:	f7fa fe6e 	bl	8012ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018320:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018324:	e887 0003 	stmia.w	r7, {r0, r1}
 8018328:	4638      	mov	r0, r7
 801832a:	4621      	mov	r1, r4
 801832c:	f7f2 fbf6 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 8018330:	4638      	mov	r0, r7
 8018332:	f7f2 fc36 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018336:	2800      	cmp	r0, #0
 8018338:	d1d7      	bne.n	80182ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801833a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801833e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018342:	4293      	cmp	r3, r2
 8018344:	dd12      	ble.n	801836c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8018346:	1a9b      	subs	r3, r3, r2
 8018348:	f9b4 0000 	ldrsh.w	r0, [r4]
 801834c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018350:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018354:	4628      	mov	r0, r5
 8018356:	f8ad 201a 	strh.w	r2, [sp, #26]
 801835a:	4642      	mov	r2, r8
 801835c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018360:	a902      	add	r1, sp, #8
 8018362:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018366:	4633      	mov	r3, r6
 8018368:	f7ff f8ce 	bl	8017508 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801836c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018370:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018374:	4293      	cmp	r3, r2
 8018376:	dd12      	ble.n	801839e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8018378:	1a9b      	subs	r3, r3, r2
 801837a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801837e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018382:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018386:	4642      	mov	r2, r8
 8018388:	f8ad 001a 	strh.w	r0, [sp, #26]
 801838c:	4628      	mov	r0, r5
 801838e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018392:	23ff      	movs	r3, #255	; 0xff
 8018394:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018398:	a902      	add	r1, sp, #8
 801839a:	f7ff f8b5 	bl	8017508 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801839e:	463b      	mov	r3, r7
 80183a0:	aa02      	add	r2, sp, #8
 80183a2:	4629      	mov	r1, r5
 80183a4:	4650      	mov	r0, sl
 80183a6:	f7ff f995 	bl	80176d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80183aa:	88a2      	ldrh	r2, [r4, #4]
 80183ac:	8823      	ldrh	r3, [r4, #0]
 80183ae:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80183b2:	4413      	add	r3, r2
 80183b4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80183b8:	440a      	add	r2, r1
 80183ba:	b29b      	uxth	r3, r3
 80183bc:	b292      	uxth	r2, r2
 80183be:	b218      	sxth	r0, r3
 80183c0:	b211      	sxth	r1, r2
 80183c2:	4288      	cmp	r0, r1
 80183c4:	dd12      	ble.n	80183ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80183c6:	1a9b      	subs	r3, r3, r2
 80183c8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80183cc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80183d0:	4642      	mov	r2, r8
 80183d2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80183d6:	a902      	add	r1, sp, #8
 80183d8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80183dc:	23ff      	movs	r3, #255	; 0xff
 80183de:	f8ad 001e 	strh.w	r0, [sp, #30]
 80183e2:	4628      	mov	r0, r5
 80183e4:	f8ad 601a 	strh.w	r6, [sp, #26]
 80183e8:	f7ff f88e 	bl	8017508 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80183ec:	88e2      	ldrh	r2, [r4, #6]
 80183ee:	8863      	ldrh	r3, [r4, #2]
 80183f0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80183f4:	4413      	add	r3, r2
 80183f6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80183fa:	440a      	add	r2, r1
 80183fc:	b29b      	uxth	r3, r3
 80183fe:	b292      	uxth	r2, r2
 8018400:	b218      	sxth	r0, r3
 8018402:	b211      	sxth	r1, r2
 8018404:	4288      	cmp	r0, r1
 8018406:	dd81      	ble.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018408:	1a9b      	subs	r3, r3, r2
 801840a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801840e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018412:	4642      	mov	r2, r8
 8018414:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018418:	23ff      	movs	r3, #255	; 0xff
 801841a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801841e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018422:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018426:	e762      	b.n	80182ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8018428:	4633      	mov	r3, r6
 801842a:	4622      	mov	r2, r4
 801842c:	a902      	add	r1, sp, #8
 801842e:	4628      	mov	r0, r5
 8018430:	f7ff f9c0 	bl	80177b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018434:	e76a      	b.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018436:	e9cd 4600 	strd	r4, r6, [sp]
 801843a:	ab02      	add	r3, sp, #8
 801843c:	464a      	mov	r2, r9
 801843e:	4629      	mov	r1, r5
 8018440:	4650      	mov	r0, sl
 8018442:	f7ff fd97 	bl	8017f74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018446:	e761      	b.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018448:	4638      	mov	r0, r7
 801844a:	f7fa fe23 	bl	8013094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801844e:	b950      	cbnz	r0, 8018466 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8018450:	f8da 3000 	ldr.w	r3, [sl]
 8018454:	aa02      	add	r2, sp, #8
 8018456:	4629      	mov	r1, r5
 8018458:	e9cd 6000 	strd	r6, r0, [sp]
 801845c:	4650      	mov	r0, sl
 801845e:	68de      	ldr	r6, [r3, #12]
 8018460:	4623      	mov	r3, r4
 8018462:	47b0      	blx	r6
 8018464:	e752      	b.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018466:	f10d 0818 	add.w	r8, sp, #24
 801846a:	4639      	mov	r1, r7
 801846c:	af04      	add	r7, sp, #16
 801846e:	4640      	mov	r0, r8
 8018470:	f7fa fdc4 	bl	8012ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018474:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018478:	e887 0003 	stmia.w	r7, {r0, r1}
 801847c:	4638      	mov	r0, r7
 801847e:	4621      	mov	r1, r4
 8018480:	f7f2 fb4c 	bl	800ab1c <_ZN8touchgfx4RectaNERKS0_>
 8018484:	4638      	mov	r0, r7
 8018486:	f7f2 fb8c 	bl	800aba2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801848a:	b138      	cbz	r0, 801849c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801848c:	4623      	mov	r3, r4
 801848e:	9600      	str	r6, [sp, #0]
 8018490:	aa02      	add	r2, sp, #8
 8018492:	4649      	mov	r1, r9
 8018494:	4628      	mov	r0, r5
 8018496:	f7ff fdc9 	bl	801802c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801849a:	e737      	b.n	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801849c:	f8da 3000 	ldr.w	r3, [sl]
 80184a0:	aa02      	add	r2, sp, #8
 80184a2:	4629      	mov	r1, r5
 80184a4:	e9cd 6000 	strd	r6, r0, [sp]
 80184a8:	4650      	mov	r0, sl
 80184aa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80184ae:	463b      	mov	r3, r7
 80184b0:	47d8      	blx	fp
 80184b2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80184b6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80184ba:	4293      	cmp	r3, r2
 80184bc:	dd13      	ble.n	80184e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80184be:	f9b4 0000 	ldrsh.w	r0, [r4]
 80184c2:	1a9b      	subs	r3, r3, r2
 80184c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80184c8:	f8ad 0018 	strh.w	r0, [sp, #24]
 80184cc:	4628      	mov	r0, r5
 80184ce:	f8ad 201a 	strh.w	r2, [sp, #26]
 80184d2:	aa02      	add	r2, sp, #8
 80184d4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80184d8:	4649      	mov	r1, r9
 80184da:	f8ad 301e 	strh.w	r3, [sp, #30]
 80184de:	4643      	mov	r3, r8
 80184e0:	9600      	str	r6, [sp, #0]
 80184e2:	f7ff fda3 	bl	801802c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80184e6:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80184ea:	f9b4 2000 	ldrsh.w	r2, [r4]
 80184ee:	4293      	cmp	r3, r2
 80184f0:	dd13      	ble.n	801851a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80184f2:	1a9b      	subs	r3, r3, r2
 80184f4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80184f8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80184fc:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018500:	aa02      	add	r2, sp, #8
 8018502:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018506:	4628      	mov	r0, r5
 8018508:	f8ad 301c 	strh.w	r3, [sp, #28]
 801850c:	4643      	mov	r3, r8
 801850e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018512:	4649      	mov	r1, r9
 8018514:	9600      	str	r6, [sp, #0]
 8018516:	f7ff fd89 	bl	801802c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801851a:	88a2      	ldrh	r2, [r4, #4]
 801851c:	8823      	ldrh	r3, [r4, #0]
 801851e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018522:	4413      	add	r3, r2
 8018524:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018528:	440a      	add	r2, r1
 801852a:	b29b      	uxth	r3, r3
 801852c:	b292      	uxth	r2, r2
 801852e:	b218      	sxth	r0, r3
 8018530:	b211      	sxth	r1, r2
 8018532:	4288      	cmp	r0, r1
 8018534:	dd13      	ble.n	801855e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8018536:	1a9b      	subs	r3, r3, r2
 8018538:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801853c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018540:	aa02      	add	r2, sp, #8
 8018542:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018546:	4649      	mov	r1, r9
 8018548:	f8ad 301c 	strh.w	r3, [sp, #28]
 801854c:	4643      	mov	r3, r8
 801854e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018552:	4628      	mov	r0, r5
 8018554:	9600      	str	r6, [sp, #0]
 8018556:	f8ad 701a 	strh.w	r7, [sp, #26]
 801855a:	f7ff fd67 	bl	801802c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801855e:	88e2      	ldrh	r2, [r4, #6]
 8018560:	8863      	ldrh	r3, [r4, #2]
 8018562:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018566:	4413      	add	r3, r2
 8018568:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801856c:	440a      	add	r2, r1
 801856e:	b29b      	uxth	r3, r3
 8018570:	b292      	uxth	r2, r2
 8018572:	b218      	sxth	r0, r3
 8018574:	b211      	sxth	r1, r2
 8018576:	4288      	cmp	r0, r1
 8018578:	f77f aec8 	ble.w	801830c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801857c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018580:	1a9b      	subs	r3, r3, r2
 8018582:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018586:	f8ad 301e 	strh.w	r3, [sp, #30]
 801858a:	4643      	mov	r3, r8
 801858c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018590:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018594:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018598:	9600      	str	r6, [sp, #0]
 801859a:	e779      	b.n	8018490 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801859c:	2400e424 	.word	0x2400e424

080185a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80185a0:	b180      	cbz	r0, 80185c4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80185a2:	2903      	cmp	r1, #3
 80185a4:	d81c      	bhi.n	80185e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80185a6:	e8df f001 	tbb	[pc, r1]
 80185aa:	1d02      	.short	0x1d02
 80185ac:	1f08      	.short	0x1f08
 80185ae:	4b10      	ldr	r3, [pc, #64]	; (80185f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80185b0:	8818      	ldrh	r0, [r3, #0]
 80185b2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80185b6:	4240      	negs	r0, r0
 80185b8:	4770      	bx	lr
 80185ba:	4b0d      	ldr	r3, [pc, #52]	; (80185f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80185bc:	8818      	ldrh	r0, [r3, #0]
 80185be:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80185c2:	4770      	bx	lr
 80185c4:	2903      	cmp	r1, #3
 80185c6:	d80b      	bhi.n	80185e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80185c8:	a301      	add	r3, pc, #4	; (adr r3, 80185d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80185ca:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80185ce:	bf00      	nop
 80185d0:	080185e5 	.word	0x080185e5
 80185d4:	080185bb 	.word	0x080185bb
 80185d8:	080185e9 	.word	0x080185e9
 80185dc:	080185af 	.word	0x080185af
 80185e0:	2000      	movs	r0, #0
 80185e2:	4770      	bx	lr
 80185e4:	2001      	movs	r0, #1
 80185e6:	4770      	bx	lr
 80185e8:	f04f 30ff 	mov.w	r0, #4294967295
 80185ec:	4770      	bx	lr
 80185ee:	bf00      	nop
 80185f0:	2400e41e 	.word	0x2400e41e

080185f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80185f4:	b180      	cbz	r0, 8018618 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80185f6:	2903      	cmp	r1, #3
 80185f8:	d81c      	bhi.n	8018634 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80185fa:	e8df f001 	tbb	[pc, r1]
 80185fe:	021d      	.short	0x021d
 8018600:	071f      	.short	0x071f
 8018602:	4b10      	ldr	r3, [pc, #64]	; (8018644 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018604:	8818      	ldrh	r0, [r3, #0]
 8018606:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801860a:	4770      	bx	lr
 801860c:	4b0d      	ldr	r3, [pc, #52]	; (8018644 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801860e:	8818      	ldrh	r0, [r3, #0]
 8018610:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018614:	4240      	negs	r0, r0
 8018616:	4770      	bx	lr
 8018618:	2903      	cmp	r1, #3
 801861a:	d80b      	bhi.n	8018634 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801861c:	a301      	add	r3, pc, #4	; (adr r3, 8018624 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801861e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018622:	bf00      	nop
 8018624:	08018603 	.word	0x08018603
 8018628:	0801863d 	.word	0x0801863d
 801862c:	0801860d 	.word	0x0801860d
 8018630:	08018639 	.word	0x08018639
 8018634:	2000      	movs	r0, #0
 8018636:	4770      	bx	lr
 8018638:	2001      	movs	r0, #1
 801863a:	4770      	bx	lr
 801863c:	f04f 30ff 	mov.w	r0, #4294967295
 8018640:	4770      	bx	lr
 8018642:	bf00      	nop
 8018644:	2400e41e 	.word	0x2400e41e

08018648 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801864c:	b099      	sub	sp, #100	; 0x64
 801864e:	910b      	str	r1, [sp, #44]	; 0x2c
 8018650:	a914      	add	r1, sp, #80	; 0x50
 8018652:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018656:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801865a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801865e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8018662:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018666:	e881 000c 	stmia.w	r1, {r2, r3}
 801866a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801866e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8018672:	9309      	str	r3, [sp, #36]	; 0x24
 8018674:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018678:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801867c:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018680:	9310      	str	r3, [sp, #64]	; 0x40
 8018682:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018686:	930c      	str	r3, [sp, #48]	; 0x30
 8018688:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801868c:	798f      	ldrb	r7, [r1, #6]
 801868e:	431f      	orrs	r7, r3
 8018690:	f000 8195 	beq.w	80189be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018694:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018698:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801869c:	f891 9007 	ldrb.w	r9, [r1, #7]
 80186a0:	ea59 0903 	orrs.w	r9, r9, r3
 80186a4:	f000 818b 	beq.w	80189be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80186a8:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80186ac:	b29b      	uxth	r3, r3
 80186ae:	2d00      	cmp	r5, #0
 80186b0:	f000 812e 	beq.w	8018910 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80186b4:	1aed      	subs	r5, r5, r3
 80186b6:	b2ad      	uxth	r5, r5
 80186b8:	042b      	lsls	r3, r5, #16
 80186ba:	d502      	bpl.n	80186c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80186bc:	1b64      	subs	r4, r4, r5
 80186be:	2500      	movs	r5, #0
 80186c0:	b224      	sxth	r4, r4
 80186c2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80186c6:	a814      	add	r0, sp, #80	; 0x50
 80186c8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80186cc:	428c      	cmp	r4, r1
 80186ce:	b28b      	uxth	r3, r1
 80186d0:	bfbf      	itttt	lt
 80186d2:	18ed      	addlt	r5, r5, r3
 80186d4:	1b2c      	sublt	r4, r5, r4
 80186d6:	b2a5      	uxthlt	r5, r4
 80186d8:	460c      	movlt	r4, r1
 80186da:	8891      	ldrh	r1, [r2, #4]
 80186dc:	440b      	add	r3, r1
 80186de:	4621      	mov	r1, r4
 80186e0:	b21b      	sxth	r3, r3
 80186e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80186e4:	88d3      	ldrh	r3, [r2, #6]
 80186e6:	8852      	ldrh	r2, [r2, #2]
 80186e8:	4413      	add	r3, r2
 80186ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80186ec:	b21b      	sxth	r3, r3
 80186ee:	930d      	str	r3, [sp, #52]	; 0x34
 80186f0:	4bbd      	ldr	r3, [pc, #756]	; (80189e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80186f2:	f893 b000 	ldrb.w	fp, [r3]
 80186f6:	f10b 3cff 	add.w	ip, fp, #4294967295
 80186fa:	f1dc 0300 	rsbs	r3, ip, #0
 80186fe:	eb43 030c 	adc.w	r3, r3, ip
 8018702:	930e      	str	r3, [sp, #56]	; 0x38
 8018704:	4653      	mov	r3, sl
 8018706:	f7f7 fafe 	bl	800fd06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801870a:	4621      	mov	r1, r4
 801870c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018710:	4653      	mov	r3, sl
 8018712:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018714:	a814      	add	r0, sp, #80	; 0x50
 8018716:	f7f7 fb13 	bl	800fd40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801871a:	a918      	add	r1, sp, #96	; 0x60
 801871c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018720:	a817      	add	r0, sp, #92	; 0x5c
 8018722:	f7f7 fc39 	bl	800ff98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018726:	f1ba 0f00 	cmp.w	sl, #0
 801872a:	f040 80f4 	bne.w	8018916 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801872e:	f1bb 0f01 	cmp.w	fp, #1
 8018732:	f040 80f8 	bne.w	8018926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018736:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018738:	2b00      	cmp	r3, #0
 801873a:	f040 8145 	bne.w	80189c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801873e:	b2ba      	uxth	r2, r7
 8018740:	b905      	cbnz	r5, 8018744 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018742:	b16e      	cbz	r6, 8018760 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018744:	fb06 5302 	mla	r3, r6, r2, r5
 8018748:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801874a:	4631      	mov	r1, r6
 801874c:	fb08 f303 	mul.w	r3, r8, r3
 8018750:	f003 0607 	and.w	r6, r3, #7
 8018754:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018758:	9328      	str	r3, [sp, #160]	; 0xa0
 801875a:	eba9 0301 	sub.w	r3, r9, r1
 801875e:	930a      	str	r3, [sp, #40]	; 0x28
 8018760:	4651      	mov	r1, sl
 8018762:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018764:	f7ff ff1c 	bl	80185a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018768:	4681      	mov	r9, r0
 801876a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801876c:	f7ff ff42 	bl	80185f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018770:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018772:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018774:	4683      	mov	fp, r0
 8018776:	eba3 0a01 	sub.w	sl, r3, r1
 801877a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801877c:	459a      	cmp	sl, r3
 801877e:	bfa8      	it	ge
 8018780:	469a      	movge	sl, r3
 8018782:	f1ba 0f00 	cmp.w	sl, #0
 8018786:	f340 811a 	ble.w	80189be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801878a:	1b64      	subs	r4, r4, r5
 801878c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801878e:	1b1c      	subs	r4, r3, r4
 8018790:	42bc      	cmp	r4, r7
 8018792:	bfd4      	ite	le
 8018794:	ebc5 0504 	rsble	r5, r5, r4
 8018798:	ebc5 0507 	rsbgt	r5, r5, r7
 801879c:	2d00      	cmp	r5, #0
 801879e:	f340 810e 	ble.w	80189be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80187a2:	1b52      	subs	r2, r2, r5
 80187a4:	fb08 f302 	mul.w	r3, r8, r2
 80187a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80187aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80187ac:	2b00      	cmp	r3, #0
 80187ae:	f040 8116 	bne.w	80189de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80187b2:	4b8e      	ldr	r3, [pc, #568]	; (80189ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80187b4:	6818      	ldr	r0, [r3, #0]
 80187b6:	6803      	ldr	r3, [r0, #0]
 80187b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80187ba:	4798      	blx	r3
 80187bc:	2301      	movs	r3, #1
 80187be:	4a8c      	ldr	r2, [pc, #560]	; (80189f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80187c0:	fa03 f308 	lsl.w	r3, r3, r8
 80187c4:	8811      	ldrh	r1, [r2, #0]
 80187c6:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80187ca:	3b01      	subs	r3, #1
 80187cc:	b2db      	uxtb	r3, r3
 80187ce:	930e      	str	r3, [sp, #56]	; 0x38
 80187d0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80187d4:	fb01 2303 	mla	r3, r1, r3, r2
 80187d8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80187dc:	930a      	str	r3, [sp, #40]	; 0x28
 80187de:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80187e0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80187e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80187e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80187e8:	0a19      	lsrs	r1, r3, #8
 80187ea:	b2cb      	uxtb	r3, r1
 80187ec:	9312      	str	r3, [sp, #72]	; 0x48
 80187ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80187f0:	b2db      	uxtb	r3, r3
 80187f2:	9311      	str	r3, [sp, #68]	; 0x44
 80187f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80187f6:	095a      	lsrs	r2, r3, #5
 80187f8:	4b7e      	ldr	r3, [pc, #504]	; (80189f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 80187fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187fe:	400b      	ands	r3, r1
 8018800:	4313      	orrs	r3, r2
 8018802:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018804:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018808:	4313      	orrs	r3, r2
 801880a:	b29b      	uxth	r3, r3
 801880c:	9310      	str	r3, [sp, #64]	; 0x40
 801880e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018810:	781a      	ldrb	r2, [r3, #0]
 8018812:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018816:	fb05 b919 	mls	r9, r5, r9, fp
 801881a:	4132      	asrs	r2, r6
 801881c:	fb03 fb05 	mul.w	fp, r3, r5
 8018820:	930d      	str	r3, [sp, #52]	; 0x34
 8018822:	b2d2      	uxtb	r2, r2
 8018824:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018828:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801882c:	f0c0 80f5 	bcc.w	8018a1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018830:	46ae      	mov	lr, r5
 8018832:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018836:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801883a:	f0c0 80dd 	bcc.w	80189f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801883e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018840:	4013      	ands	r3, r2
 8018842:	d055      	beq.n	80188f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018844:	20ff      	movs	r0, #255	; 0xff
 8018846:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018848:	fb90 f1f1 	sdiv	r1, r0, r1
 801884c:	434b      	muls	r3, r1
 801884e:	2bfe      	cmp	r3, #254	; 0xfe
 8018850:	dd03      	ble.n	801885a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018852:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018854:	4281      	cmp	r1, r0
 8018856:	f000 80c4 	beq.w	80189e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801885a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801885c:	f8bc 4000 	ldrh.w	r4, [ip]
 8018860:	fb11 f303 	smulbb	r3, r1, r3
 8018864:	1220      	asrs	r0, r4, #8
 8018866:	b29b      	uxth	r3, r3
 8018868:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801886c:	1c59      	adds	r1, r3, #1
 801886e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018872:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018876:	10e1      	asrs	r1, r4, #3
 8018878:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801887c:	00e4      	lsls	r4, r4, #3
 801887e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018882:	b29f      	uxth	r7, r3
 8018884:	43db      	mvns	r3, r3
 8018886:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801888a:	b2db      	uxtb	r3, r3
 801888c:	b2e4      	uxtb	r4, r4
 801888e:	9309      	str	r3, [sp, #36]	; 0x24
 8018890:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018892:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018896:	fb13 f907 	smulbb	r9, r3, r7
 801889a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801889c:	fb00 9003 	mla	r0, r0, r3, r9
 80188a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80188a2:	fb13 f907 	smulbb	r9, r3, r7
 80188a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188a8:	b280      	uxth	r0, r0
 80188aa:	fb01 9103 	mla	r1, r1, r3, r9
 80188ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80188b0:	fb13 f707 	smulbb	r7, r3, r7
 80188b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188b6:	b289      	uxth	r1, r1
 80188b8:	fb04 7403 	mla	r4, r4, r3, r7
 80188bc:	1c43      	adds	r3, r0, #1
 80188be:	b2a4      	uxth	r4, r4
 80188c0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80188c4:	f104 0901 	add.w	r9, r4, #1
 80188c8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80188cc:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80188d0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80188d4:	ea49 0000 	orr.w	r0, r9, r0
 80188d8:	f101 0901 	add.w	r9, r1, #1
 80188dc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80188e0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80188e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80188e8:	ea40 0009 	orr.w	r0, r0, r9
 80188ec:	f8ac 0000 	strh.w	r0, [ip]
 80188f0:	4446      	add	r6, r8
 80188f2:	b2b6      	uxth	r6, r6
 80188f4:	2e07      	cmp	r6, #7
 80188f6:	bf89      	itett	hi
 80188f8:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80188fa:	fa42 f208 	asrls.w	r2, r2, r8
 80188fe:	2600      	movhi	r6, #0
 8018900:	785a      	ldrbhi	r2, [r3, #1]
 8018902:	bf8a      	itet	hi
 8018904:	3301      	addhi	r3, #1
 8018906:	b2d2      	uxtbls	r2, r2
 8018908:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801890a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801890c:	449c      	add	ip, r3
 801890e:	e792      	b.n	8018836 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018910:	441c      	add	r4, r3
 8018912:	b224      	sxth	r4, r4
 8018914:	e6d5      	b.n	80186c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018916:	f1ba 0f01 	cmp.w	sl, #1
 801891a:	f47f af0c 	bne.w	8018736 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801891e:	f1bb 0f01 	cmp.w	fp, #1
 8018922:	f47f af08 	bne.w	8018736 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018926:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 80189ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801892a:	f8db 0000 	ldr.w	r0, [fp]
 801892e:	6803      	ldr	r3, [r0, #0]
 8018930:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018932:	4798      	blx	r3
 8018934:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018938:	465a      	mov	r2, fp
 801893a:	d006      	beq.n	801894a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801893c:	f1b8 0f04 	cmp.w	r8, #4
 8018940:	d140      	bne.n	80189c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018942:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018944:	3300      	adds	r3, #0
 8018946:	bf18      	it	ne
 8018948:	2301      	movne	r3, #1
 801894a:	0580      	lsls	r0, r0, #22
 801894c:	d56e      	bpl.n	8018a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801894e:	f1b8 0f08 	cmp.w	r8, #8
 8018952:	d16b      	bne.n	8018a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018954:	2b00      	cmp	r3, #0
 8018956:	bf0c      	ite	eq
 8018958:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801895c:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018960:	2d00      	cmp	r5, #0
 8018962:	f47f aee8 	bne.w	8018736 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018966:	2e00      	cmp	r6, #0
 8018968:	f47f aee5 	bne.w	8018736 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801896c:	19e3      	adds	r3, r4, r7
 801896e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018970:	4283      	cmp	r3, r0
 8018972:	f73f aee0 	bgt.w	8018736 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018976:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018978:	980d      	ldr	r0, [sp, #52]	; 0x34
 801897a:	444b      	add	r3, r9
 801897c:	4283      	cmp	r3, r0
 801897e:	f73f aeda 	bgt.w	8018736 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018982:	b2bf      	uxth	r7, r7
 8018984:	f1b8 0f08 	cmp.w	r8, #8
 8018988:	6810      	ldr	r0, [r2, #0]
 801898a:	f04f 0500 	mov.w	r5, #0
 801898e:	bf18      	it	ne
 8018990:	3701      	addne	r7, #1
 8018992:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018996:	6804      	ldr	r4, [r0, #0]
 8018998:	bf18      	it	ne
 801899a:	f027 0701 	bicne.w	r7, r7, #1
 801899e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80189a2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80189a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80189a8:	bf18      	it	ne
 80189aa:	b2bf      	uxthne	r7, r7
 80189ac:	9104      	str	r1, [sp, #16]
 80189ae:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80189b0:	e9cd 7900 	strd	r7, r9, [sp]
 80189b4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80189b8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80189ba:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80189bc:	47a0      	blx	r4
 80189be:	b019      	add	sp, #100	; 0x64
 80189c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189c4:	2300      	movs	r3, #0
 80189c6:	e7c0      	b.n	801894a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80189c8:	2208      	movs	r2, #8
 80189ca:	fb92 f3f8 	sdiv	r3, r2, r8
 80189ce:	1e5a      	subs	r2, r3, #1
 80189d0:	443a      	add	r2, r7
 80189d2:	fb92 f2f3 	sdiv	r2, r2, r3
 80189d6:	fb12 f203 	smulbb	r2, r2, r3
 80189da:	b292      	uxth	r2, r2
 80189dc:	e6b0      	b.n	8018740 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80189de:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80189e0:	e6ec      	b.n	80187bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80189e2:	9810      	ldr	r0, [sp, #64]	; 0x40
 80189e4:	e782      	b.n	80188ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80189e6:	bf00      	nop
 80189e8:	2400e41c 	.word	0x2400e41c
 80189ec:	2400e424 	.word	0x2400e424
 80189f0:	2400e41e 	.word	0x2400e41e
 80189f4:	00fff800 	.word	0x00fff800
 80189f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80189fa:	b153      	cbz	r3, 8018a12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80189fc:	441e      	add	r6, r3
 80189fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018a00:	b2b6      	uxth	r6, r6
 8018a02:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018a06:	f006 0607 	and.w	r6, r6, #7
 8018a0a:	781a      	ldrb	r2, [r3, #0]
 8018a0c:	9328      	str	r3, [sp, #160]	; 0xa0
 8018a0e:	4132      	asrs	r2, r6
 8018a10:	b2d2      	uxtb	r2, r2
 8018a12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018a14:	445b      	add	r3, fp
 8018a16:	930a      	str	r3, [sp, #40]	; 0x28
 8018a18:	e706      	b.n	8018828 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018a1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a1c:	2b00      	cmp	r3, #0
 8018a1e:	d1ce      	bne.n	80189be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a20:	4b05      	ldr	r3, [pc, #20]	; (8018a38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018a22:	6818      	ldr	r0, [r3, #0]
 8018a24:	6803      	ldr	r3, [r0, #0]
 8018a26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018a28:	4798      	blx	r3
 8018a2a:	e7c8      	b.n	80189be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a2c:	2b00      	cmp	r3, #0
 8018a2e:	f43f ae82 	beq.w	8018736 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a32:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018a36:	e793      	b.n	8018960 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018a38:	2400e424 	.word	0x2400e424

08018a3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018a3c:	b538      	push	{r3, r4, r5, lr}
 8018a3e:	4c15      	ldr	r4, [pc, #84]	; (8018a94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018a40:	4605      	mov	r5, r0
 8018a42:	7823      	ldrb	r3, [r4, #0]
 8018a44:	f3bf 8f5b 	dmb	ish
 8018a48:	07da      	lsls	r2, r3, #31
 8018a4a:	d40b      	bmi.n	8018a64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018a4c:	4620      	mov	r0, r4
 8018a4e:	f008 f9e6 	bl	8020e1e <__cxa_guard_acquire>
 8018a52:	b138      	cbz	r0, 8018a64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018a54:	4620      	mov	r0, r4
 8018a56:	f008 f9ee 	bl	8020e36 <__cxa_guard_release>
 8018a5a:	4a0f      	ldr	r2, [pc, #60]	; (8018a98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018a5c:	490f      	ldr	r1, [pc, #60]	; (8018a9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018a5e:	4810      	ldr	r0, [pc, #64]	; (8018aa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018a60:	f008 f9d6 	bl	8020e10 <__aeabi_atexit>
 8018a64:	4c0f      	ldr	r4, [pc, #60]	; (8018aa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018a66:	7823      	ldrb	r3, [r4, #0]
 8018a68:	f3bf 8f5b 	dmb	ish
 8018a6c:	07db      	lsls	r3, r3, #31
 8018a6e:	d40b      	bmi.n	8018a88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018a70:	4620      	mov	r0, r4
 8018a72:	f008 f9d4 	bl	8020e1e <__cxa_guard_acquire>
 8018a76:	b138      	cbz	r0, 8018a88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018a78:	4620      	mov	r0, r4
 8018a7a:	f008 f9dc 	bl	8020e36 <__cxa_guard_release>
 8018a7e:	4a06      	ldr	r2, [pc, #24]	; (8018a98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018a80:	4909      	ldr	r1, [pc, #36]	; (8018aa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018a82:	480a      	ldr	r0, [pc, #40]	; (8018aac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018a84:	f008 f9c4 	bl	8020e10 <__aeabi_atexit>
 8018a88:	4b05      	ldr	r3, [pc, #20]	; (8018aa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018a8a:	612b      	str	r3, [r5, #16]
 8018a8c:	4b07      	ldr	r3, [pc, #28]	; (8018aac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018a8e:	616b      	str	r3, [r5, #20]
 8018a90:	bd38      	pop	{r3, r4, r5, pc}
 8018a92:	bf00      	nop
 8018a94:	2400e504 	.word	0x2400e504
 8018a98:	24000000 	.word	0x24000000
 8018a9c:	08015823 	.word	0x08015823
 8018aa0:	240000cc 	.word	0x240000cc
 8018aa4:	2400e508 	.word	0x2400e508
 8018aa8:	08015821 	.word	0x08015821
 8018aac:	240000d0 	.word	0x240000d0

08018ab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018ab0:	b538      	push	{r3, r4, r5, lr}
 8018ab2:	4c15      	ldr	r4, [pc, #84]	; (8018b08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018ab4:	4605      	mov	r5, r0
 8018ab6:	7823      	ldrb	r3, [r4, #0]
 8018ab8:	f3bf 8f5b 	dmb	ish
 8018abc:	07da      	lsls	r2, r3, #31
 8018abe:	d40b      	bmi.n	8018ad8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018ac0:	4620      	mov	r0, r4
 8018ac2:	f008 f9ac 	bl	8020e1e <__cxa_guard_acquire>
 8018ac6:	b138      	cbz	r0, 8018ad8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018ac8:	4620      	mov	r0, r4
 8018aca:	f008 f9b4 	bl	8020e36 <__cxa_guard_release>
 8018ace:	4a0f      	ldr	r2, [pc, #60]	; (8018b0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018ad0:	490f      	ldr	r1, [pc, #60]	; (8018b10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018ad2:	4810      	ldr	r0, [pc, #64]	; (8018b14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018ad4:	f008 f99c 	bl	8020e10 <__aeabi_atexit>
 8018ad8:	4c0f      	ldr	r4, [pc, #60]	; (8018b18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018ada:	7823      	ldrb	r3, [r4, #0]
 8018adc:	f3bf 8f5b 	dmb	ish
 8018ae0:	07db      	lsls	r3, r3, #31
 8018ae2:	d40b      	bmi.n	8018afc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018ae4:	4620      	mov	r0, r4
 8018ae6:	f008 f99a 	bl	8020e1e <__cxa_guard_acquire>
 8018aea:	b138      	cbz	r0, 8018afc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018aec:	4620      	mov	r0, r4
 8018aee:	f008 f9a2 	bl	8020e36 <__cxa_guard_release>
 8018af2:	4a06      	ldr	r2, [pc, #24]	; (8018b0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018af4:	4909      	ldr	r1, [pc, #36]	; (8018b1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018af6:	480a      	ldr	r0, [pc, #40]	; (8018b20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018af8:	f008 f98a 	bl	8020e10 <__aeabi_atexit>
 8018afc:	4b05      	ldr	r3, [pc, #20]	; (8018b14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018afe:	60ab      	str	r3, [r5, #8]
 8018b00:	4b07      	ldr	r3, [pc, #28]	; (8018b20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018b02:	60eb      	str	r3, [r5, #12]
 8018b04:	bd38      	pop	{r3, r4, r5, pc}
 8018b06:	bf00      	nop
 8018b08:	2400e4dc 	.word	0x2400e4dc
 8018b0c:	24000000 	.word	0x24000000
 8018b10:	08015827 	.word	0x08015827
 8018b14:	240000a4 	.word	0x240000a4
 8018b18:	2400e4e0 	.word	0x2400e4e0
 8018b1c:	08015825 	.word	0x08015825
 8018b20:	240000a8 	.word	0x240000a8

08018b24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018b24:	b510      	push	{r4, lr}
 8018b26:	4604      	mov	r4, r0
 8018b28:	f7ff ff88 	bl	8018a3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018b2c:	4620      	mov	r0, r4
 8018b2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b32:	f7ff bfbd 	b.w	8018ab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018b38:	b538      	push	{r3, r4, r5, lr}
 8018b3a:	4c15      	ldr	r4, [pc, #84]	; (8018b90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018b3c:	4605      	mov	r5, r0
 8018b3e:	7823      	ldrb	r3, [r4, #0]
 8018b40:	f3bf 8f5b 	dmb	ish
 8018b44:	07da      	lsls	r2, r3, #31
 8018b46:	d40b      	bmi.n	8018b60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018b48:	4620      	mov	r0, r4
 8018b4a:	f008 f968 	bl	8020e1e <__cxa_guard_acquire>
 8018b4e:	b138      	cbz	r0, 8018b60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018b50:	4620      	mov	r0, r4
 8018b52:	f008 f970 	bl	8020e36 <__cxa_guard_release>
 8018b56:	4a0f      	ldr	r2, [pc, #60]	; (8018b94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018b58:	490f      	ldr	r1, [pc, #60]	; (8018b98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018b5a:	4810      	ldr	r0, [pc, #64]	; (8018b9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018b5c:	f008 f958 	bl	8020e10 <__aeabi_atexit>
 8018b60:	4c0f      	ldr	r4, [pc, #60]	; (8018ba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018b62:	7823      	ldrb	r3, [r4, #0]
 8018b64:	f3bf 8f5b 	dmb	ish
 8018b68:	07db      	lsls	r3, r3, #31
 8018b6a:	d40b      	bmi.n	8018b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018b6c:	4620      	mov	r0, r4
 8018b6e:	f008 f956 	bl	8020e1e <__cxa_guard_acquire>
 8018b72:	b138      	cbz	r0, 8018b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018b74:	4620      	mov	r0, r4
 8018b76:	f008 f95e 	bl	8020e36 <__cxa_guard_release>
 8018b7a:	4a06      	ldr	r2, [pc, #24]	; (8018b94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018b7c:	4909      	ldr	r1, [pc, #36]	; (8018ba4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018b7e:	480a      	ldr	r0, [pc, #40]	; (8018ba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018b80:	f008 f946 	bl	8020e10 <__aeabi_atexit>
 8018b84:	4b05      	ldr	r3, [pc, #20]	; (8018b9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018b86:	622b      	str	r3, [r5, #32]
 8018b88:	4b07      	ldr	r3, [pc, #28]	; (8018ba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018b8a:	626b      	str	r3, [r5, #36]	; 0x24
 8018b8c:	bd38      	pop	{r3, r4, r5, pc}
 8018b8e:	bf00      	nop
 8018b90:	2400e50c 	.word	0x2400e50c
 8018b94:	24000000 	.word	0x24000000
 8018b98:	0801581b 	.word	0x0801581b
 8018b9c:	240000d4 	.word	0x240000d4
 8018ba0:	2400e510 	.word	0x2400e510
 8018ba4:	08015819 	.word	0x08015819
 8018ba8:	240000d8 	.word	0x240000d8

08018bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018bac:	b538      	push	{r3, r4, r5, lr}
 8018bae:	4c15      	ldr	r4, [pc, #84]	; (8018c04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018bb0:	4605      	mov	r5, r0
 8018bb2:	7823      	ldrb	r3, [r4, #0]
 8018bb4:	f3bf 8f5b 	dmb	ish
 8018bb8:	07da      	lsls	r2, r3, #31
 8018bba:	d40b      	bmi.n	8018bd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018bbc:	4620      	mov	r0, r4
 8018bbe:	f008 f92e 	bl	8020e1e <__cxa_guard_acquire>
 8018bc2:	b138      	cbz	r0, 8018bd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018bc4:	4620      	mov	r0, r4
 8018bc6:	f008 f936 	bl	8020e36 <__cxa_guard_release>
 8018bca:	4a0f      	ldr	r2, [pc, #60]	; (8018c08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018bcc:	490f      	ldr	r1, [pc, #60]	; (8018c0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018bce:	4810      	ldr	r0, [pc, #64]	; (8018c10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018bd0:	f008 f91e 	bl	8020e10 <__aeabi_atexit>
 8018bd4:	4c0f      	ldr	r4, [pc, #60]	; (8018c14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018bd6:	7823      	ldrb	r3, [r4, #0]
 8018bd8:	f3bf 8f5b 	dmb	ish
 8018bdc:	07db      	lsls	r3, r3, #31
 8018bde:	d40b      	bmi.n	8018bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018be0:	4620      	mov	r0, r4
 8018be2:	f008 f91c 	bl	8020e1e <__cxa_guard_acquire>
 8018be6:	b138      	cbz	r0, 8018bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018be8:	4620      	mov	r0, r4
 8018bea:	f008 f924 	bl	8020e36 <__cxa_guard_release>
 8018bee:	4a06      	ldr	r2, [pc, #24]	; (8018c08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018bf0:	4909      	ldr	r1, [pc, #36]	; (8018c18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018bf2:	480a      	ldr	r0, [pc, #40]	; (8018c1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018bf4:	f008 f90c 	bl	8020e10 <__aeabi_atexit>
 8018bf8:	4b05      	ldr	r3, [pc, #20]	; (8018c10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018bfa:	61ab      	str	r3, [r5, #24]
 8018bfc:	4b07      	ldr	r3, [pc, #28]	; (8018c1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018bfe:	61eb      	str	r3, [r5, #28]
 8018c00:	bd38      	pop	{r3, r4, r5, pc}
 8018c02:	bf00      	nop
 8018c04:	2400e4e4 	.word	0x2400e4e4
 8018c08:	24000000 	.word	0x24000000
 8018c0c:	0801581f 	.word	0x0801581f
 8018c10:	240000ac 	.word	0x240000ac
 8018c14:	2400e4e8 	.word	0x2400e4e8
 8018c18:	0801581d 	.word	0x0801581d
 8018c1c:	240000b0 	.word	0x240000b0

08018c20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018c20:	b510      	push	{r4, lr}
 8018c22:	4604      	mov	r4, r0
 8018c24:	f7ff ff88 	bl	8018b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018c28:	4620      	mov	r0, r4
 8018c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c2e:	f7ff bfbd 	b.w	8018bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018c34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018c34:	b538      	push	{r3, r4, r5, lr}
 8018c36:	4c15      	ldr	r4, [pc, #84]	; (8018c8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018c38:	4605      	mov	r5, r0
 8018c3a:	7823      	ldrb	r3, [r4, #0]
 8018c3c:	f3bf 8f5b 	dmb	ish
 8018c40:	07da      	lsls	r2, r3, #31
 8018c42:	d40b      	bmi.n	8018c5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018c44:	4620      	mov	r0, r4
 8018c46:	f008 f8ea 	bl	8020e1e <__cxa_guard_acquire>
 8018c4a:	b138      	cbz	r0, 8018c5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018c4c:	4620      	mov	r0, r4
 8018c4e:	f008 f8f2 	bl	8020e36 <__cxa_guard_release>
 8018c52:	4a0f      	ldr	r2, [pc, #60]	; (8018c90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018c54:	490f      	ldr	r1, [pc, #60]	; (8018c94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018c56:	4810      	ldr	r0, [pc, #64]	; (8018c98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018c58:	f008 f8da 	bl	8020e10 <__aeabi_atexit>
 8018c5c:	4c0f      	ldr	r4, [pc, #60]	; (8018c9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018c5e:	7823      	ldrb	r3, [r4, #0]
 8018c60:	f3bf 8f5b 	dmb	ish
 8018c64:	07db      	lsls	r3, r3, #31
 8018c66:	d40b      	bmi.n	8018c80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018c68:	4620      	mov	r0, r4
 8018c6a:	f008 f8d8 	bl	8020e1e <__cxa_guard_acquire>
 8018c6e:	b138      	cbz	r0, 8018c80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018c70:	4620      	mov	r0, r4
 8018c72:	f008 f8e0 	bl	8020e36 <__cxa_guard_release>
 8018c76:	4a06      	ldr	r2, [pc, #24]	; (8018c90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018c78:	4909      	ldr	r1, [pc, #36]	; (8018ca0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018c7a:	480a      	ldr	r0, [pc, #40]	; (8018ca4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018c7c:	f008 f8c8 	bl	8020e10 <__aeabi_atexit>
 8018c80:	4b05      	ldr	r3, [pc, #20]	; (8018c98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018c82:	632b      	str	r3, [r5, #48]	; 0x30
 8018c84:	4b07      	ldr	r3, [pc, #28]	; (8018ca4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018c86:	636b      	str	r3, [r5, #52]	; 0x34
 8018c88:	bd38      	pop	{r3, r4, r5, pc}
 8018c8a:	bf00      	nop
 8018c8c:	2400e51c 	.word	0x2400e51c
 8018c90:	24000000 	.word	0x24000000
 8018c94:	08015813 	.word	0x08015813
 8018c98:	240000e4 	.word	0x240000e4
 8018c9c:	2400e520 	.word	0x2400e520
 8018ca0:	08015811 	.word	0x08015811
 8018ca4:	240000e8 	.word	0x240000e8

08018ca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018ca8:	b538      	push	{r3, r4, r5, lr}
 8018caa:	4c15      	ldr	r4, [pc, #84]	; (8018d00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018cac:	4605      	mov	r5, r0
 8018cae:	7823      	ldrb	r3, [r4, #0]
 8018cb0:	f3bf 8f5b 	dmb	ish
 8018cb4:	07da      	lsls	r2, r3, #31
 8018cb6:	d40b      	bmi.n	8018cd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018cb8:	4620      	mov	r0, r4
 8018cba:	f008 f8b0 	bl	8020e1e <__cxa_guard_acquire>
 8018cbe:	b138      	cbz	r0, 8018cd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018cc0:	4620      	mov	r0, r4
 8018cc2:	f008 f8b8 	bl	8020e36 <__cxa_guard_release>
 8018cc6:	4a0f      	ldr	r2, [pc, #60]	; (8018d04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018cc8:	490f      	ldr	r1, [pc, #60]	; (8018d08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018cca:	4810      	ldr	r0, [pc, #64]	; (8018d0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018ccc:	f008 f8a0 	bl	8020e10 <__aeabi_atexit>
 8018cd0:	4c0f      	ldr	r4, [pc, #60]	; (8018d10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018cd2:	7823      	ldrb	r3, [r4, #0]
 8018cd4:	f3bf 8f5b 	dmb	ish
 8018cd8:	07db      	lsls	r3, r3, #31
 8018cda:	d40b      	bmi.n	8018cf4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018cdc:	4620      	mov	r0, r4
 8018cde:	f008 f89e 	bl	8020e1e <__cxa_guard_acquire>
 8018ce2:	b138      	cbz	r0, 8018cf4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018ce4:	4620      	mov	r0, r4
 8018ce6:	f008 f8a6 	bl	8020e36 <__cxa_guard_release>
 8018cea:	4a06      	ldr	r2, [pc, #24]	; (8018d04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018cec:	4909      	ldr	r1, [pc, #36]	; (8018d14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018cee:	480a      	ldr	r0, [pc, #40]	; (8018d18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018cf0:	f008 f88e 	bl	8020e10 <__aeabi_atexit>
 8018cf4:	4b05      	ldr	r3, [pc, #20]	; (8018d0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018cf6:	62ab      	str	r3, [r5, #40]	; 0x28
 8018cf8:	4b07      	ldr	r3, [pc, #28]	; (8018d18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018cfa:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018cfc:	bd38      	pop	{r3, r4, r5, pc}
 8018cfe:	bf00      	nop
 8018d00:	2400e4ec 	.word	0x2400e4ec
 8018d04:	24000000 	.word	0x24000000
 8018d08:	08015817 	.word	0x08015817
 8018d0c:	240000b4 	.word	0x240000b4
 8018d10:	2400e4f0 	.word	0x2400e4f0
 8018d14:	08015815 	.word	0x08015815
 8018d18:	240000b8 	.word	0x240000b8

08018d1c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018d1c:	b510      	push	{r4, lr}
 8018d1e:	4604      	mov	r4, r0
 8018d20:	f7ff ff88 	bl	8018c34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018d24:	4620      	mov	r0, r4
 8018d26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018d2a:	f7ff bfbd 	b.w	8018ca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018d30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018d30:	b538      	push	{r3, r4, r5, lr}
 8018d32:	4c15      	ldr	r4, [pc, #84]	; (8018d88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018d34:	4605      	mov	r5, r0
 8018d36:	7823      	ldrb	r3, [r4, #0]
 8018d38:	f3bf 8f5b 	dmb	ish
 8018d3c:	07da      	lsls	r2, r3, #31
 8018d3e:	d40b      	bmi.n	8018d58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018d40:	4620      	mov	r0, r4
 8018d42:	f008 f86c 	bl	8020e1e <__cxa_guard_acquire>
 8018d46:	b138      	cbz	r0, 8018d58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018d48:	4620      	mov	r0, r4
 8018d4a:	f008 f874 	bl	8020e36 <__cxa_guard_release>
 8018d4e:	4a0f      	ldr	r2, [pc, #60]	; (8018d8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018d50:	490f      	ldr	r1, [pc, #60]	; (8018d90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018d52:	4810      	ldr	r0, [pc, #64]	; (8018d94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018d54:	f008 f85c 	bl	8020e10 <__aeabi_atexit>
 8018d58:	4c0f      	ldr	r4, [pc, #60]	; (8018d98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018d5a:	7823      	ldrb	r3, [r4, #0]
 8018d5c:	f3bf 8f5b 	dmb	ish
 8018d60:	07db      	lsls	r3, r3, #31
 8018d62:	d40b      	bmi.n	8018d7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018d64:	4620      	mov	r0, r4
 8018d66:	f008 f85a 	bl	8020e1e <__cxa_guard_acquire>
 8018d6a:	b138      	cbz	r0, 8018d7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018d6c:	4620      	mov	r0, r4
 8018d6e:	f008 f862 	bl	8020e36 <__cxa_guard_release>
 8018d72:	4a06      	ldr	r2, [pc, #24]	; (8018d8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018d74:	4909      	ldr	r1, [pc, #36]	; (8018d9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018d76:	480a      	ldr	r0, [pc, #40]	; (8018da0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018d78:	f008 f84a 	bl	8020e10 <__aeabi_atexit>
 8018d7c:	4b05      	ldr	r3, [pc, #20]	; (8018d94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018d7e:	652b      	str	r3, [r5, #80]	; 0x50
 8018d80:	4b07      	ldr	r3, [pc, #28]	; (8018da0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018d82:	656b      	str	r3, [r5, #84]	; 0x54
 8018d84:	bd38      	pop	{r3, r4, r5, pc}
 8018d86:	bf00      	nop
 8018d88:	2400e524 	.word	0x2400e524
 8018d8c:	24000000 	.word	0x24000000
 8018d90:	08015803 	.word	0x08015803
 8018d94:	240000ec 	.word	0x240000ec
 8018d98:	2400e528 	.word	0x2400e528
 8018d9c:	08015801 	.word	0x08015801
 8018da0:	240000f0 	.word	0x240000f0

08018da4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018da4:	b538      	push	{r3, r4, r5, lr}
 8018da6:	4c15      	ldr	r4, [pc, #84]	; (8018dfc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018da8:	4605      	mov	r5, r0
 8018daa:	7823      	ldrb	r3, [r4, #0]
 8018dac:	f3bf 8f5b 	dmb	ish
 8018db0:	07da      	lsls	r2, r3, #31
 8018db2:	d40b      	bmi.n	8018dcc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018db4:	4620      	mov	r0, r4
 8018db6:	f008 f832 	bl	8020e1e <__cxa_guard_acquire>
 8018dba:	b138      	cbz	r0, 8018dcc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018dbc:	4620      	mov	r0, r4
 8018dbe:	f008 f83a 	bl	8020e36 <__cxa_guard_release>
 8018dc2:	4a0f      	ldr	r2, [pc, #60]	; (8018e00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018dc4:	490f      	ldr	r1, [pc, #60]	; (8018e04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018dc6:	4810      	ldr	r0, [pc, #64]	; (8018e08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018dc8:	f008 f822 	bl	8020e10 <__aeabi_atexit>
 8018dcc:	4c0f      	ldr	r4, [pc, #60]	; (8018e0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018dce:	7823      	ldrb	r3, [r4, #0]
 8018dd0:	f3bf 8f5b 	dmb	ish
 8018dd4:	07db      	lsls	r3, r3, #31
 8018dd6:	d40b      	bmi.n	8018df0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018dd8:	4620      	mov	r0, r4
 8018dda:	f008 f820 	bl	8020e1e <__cxa_guard_acquire>
 8018dde:	b138      	cbz	r0, 8018df0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018de0:	4620      	mov	r0, r4
 8018de2:	f008 f828 	bl	8020e36 <__cxa_guard_release>
 8018de6:	4a06      	ldr	r2, [pc, #24]	; (8018e00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018de8:	4909      	ldr	r1, [pc, #36]	; (8018e10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018dea:	480a      	ldr	r0, [pc, #40]	; (8018e14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018dec:	f008 f810 	bl	8020e10 <__aeabi_atexit>
 8018df0:	4b05      	ldr	r3, [pc, #20]	; (8018e08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018df2:	64ab      	str	r3, [r5, #72]	; 0x48
 8018df4:	4b07      	ldr	r3, [pc, #28]	; (8018e14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018df6:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018df8:	bd38      	pop	{r3, r4, r5, pc}
 8018dfa:	bf00      	nop
 8018dfc:	2400e52c 	.word	0x2400e52c
 8018e00:	24000000 	.word	0x24000000
 8018e04:	08015807 	.word	0x08015807
 8018e08:	240000f4 	.word	0x240000f4
 8018e0c:	2400e530 	.word	0x2400e530
 8018e10:	08015805 	.word	0x08015805
 8018e14:	240000f8 	.word	0x240000f8

08018e18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018e18:	b538      	push	{r3, r4, r5, lr}
 8018e1a:	4c15      	ldr	r4, [pc, #84]	; (8018e70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018e1c:	4605      	mov	r5, r0
 8018e1e:	7823      	ldrb	r3, [r4, #0]
 8018e20:	f3bf 8f5b 	dmb	ish
 8018e24:	07da      	lsls	r2, r3, #31
 8018e26:	d40b      	bmi.n	8018e40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018e28:	4620      	mov	r0, r4
 8018e2a:	f007 fff8 	bl	8020e1e <__cxa_guard_acquire>
 8018e2e:	b138      	cbz	r0, 8018e40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018e30:	4620      	mov	r0, r4
 8018e32:	f008 f800 	bl	8020e36 <__cxa_guard_release>
 8018e36:	4a0f      	ldr	r2, [pc, #60]	; (8018e74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018e38:	490f      	ldr	r1, [pc, #60]	; (8018e78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018e3a:	4810      	ldr	r0, [pc, #64]	; (8018e7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018e3c:	f007 ffe8 	bl	8020e10 <__aeabi_atexit>
 8018e40:	4c0f      	ldr	r4, [pc, #60]	; (8018e80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018e42:	7823      	ldrb	r3, [r4, #0]
 8018e44:	f3bf 8f5b 	dmb	ish
 8018e48:	07db      	lsls	r3, r3, #31
 8018e4a:	d40b      	bmi.n	8018e64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018e4c:	4620      	mov	r0, r4
 8018e4e:	f007 ffe6 	bl	8020e1e <__cxa_guard_acquire>
 8018e52:	b138      	cbz	r0, 8018e64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018e54:	4620      	mov	r0, r4
 8018e56:	f007 ffee 	bl	8020e36 <__cxa_guard_release>
 8018e5a:	4a06      	ldr	r2, [pc, #24]	; (8018e74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018e5c:	4909      	ldr	r1, [pc, #36]	; (8018e84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018e5e:	480a      	ldr	r0, [pc, #40]	; (8018e88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018e60:	f007 ffd6 	bl	8020e10 <__aeabi_atexit>
 8018e64:	4b05      	ldr	r3, [pc, #20]	; (8018e7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018e66:	642b      	str	r3, [r5, #64]	; 0x40
 8018e68:	4b07      	ldr	r3, [pc, #28]	; (8018e88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018e6a:	646b      	str	r3, [r5, #68]	; 0x44
 8018e6c:	bd38      	pop	{r3, r4, r5, pc}
 8018e6e:	bf00      	nop
 8018e70:	2400e4f4 	.word	0x2400e4f4
 8018e74:	24000000 	.word	0x24000000
 8018e78:	0801580b 	.word	0x0801580b
 8018e7c:	240000bc 	.word	0x240000bc
 8018e80:	2400e4f8 	.word	0x2400e4f8
 8018e84:	08015809 	.word	0x08015809
 8018e88:	240000c0 	.word	0x240000c0

08018e8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018e8c:	b538      	push	{r3, r4, r5, lr}
 8018e8e:	4c15      	ldr	r4, [pc, #84]	; (8018ee4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018e90:	4605      	mov	r5, r0
 8018e92:	7823      	ldrb	r3, [r4, #0]
 8018e94:	f3bf 8f5b 	dmb	ish
 8018e98:	07da      	lsls	r2, r3, #31
 8018e9a:	d40b      	bmi.n	8018eb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018e9c:	4620      	mov	r0, r4
 8018e9e:	f007 ffbe 	bl	8020e1e <__cxa_guard_acquire>
 8018ea2:	b138      	cbz	r0, 8018eb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018ea4:	4620      	mov	r0, r4
 8018ea6:	f007 ffc6 	bl	8020e36 <__cxa_guard_release>
 8018eaa:	4a0f      	ldr	r2, [pc, #60]	; (8018ee8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018eac:	490f      	ldr	r1, [pc, #60]	; (8018eec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018eae:	4810      	ldr	r0, [pc, #64]	; (8018ef0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018eb0:	f007 ffae 	bl	8020e10 <__aeabi_atexit>
 8018eb4:	4c0f      	ldr	r4, [pc, #60]	; (8018ef4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018eb6:	7823      	ldrb	r3, [r4, #0]
 8018eb8:	f3bf 8f5b 	dmb	ish
 8018ebc:	07db      	lsls	r3, r3, #31
 8018ebe:	d40b      	bmi.n	8018ed8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018ec0:	4620      	mov	r0, r4
 8018ec2:	f007 ffac 	bl	8020e1e <__cxa_guard_acquire>
 8018ec6:	b138      	cbz	r0, 8018ed8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018ec8:	4620      	mov	r0, r4
 8018eca:	f007 ffb4 	bl	8020e36 <__cxa_guard_release>
 8018ece:	4a06      	ldr	r2, [pc, #24]	; (8018ee8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018ed0:	4909      	ldr	r1, [pc, #36]	; (8018ef8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018ed2:	480a      	ldr	r0, [pc, #40]	; (8018efc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018ed4:	f007 ff9c 	bl	8020e10 <__aeabi_atexit>
 8018ed8:	4b05      	ldr	r3, [pc, #20]	; (8018ef0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018eda:	63ab      	str	r3, [r5, #56]	; 0x38
 8018edc:	4b07      	ldr	r3, [pc, #28]	; (8018efc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018ede:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018ee0:	bd38      	pop	{r3, r4, r5, pc}
 8018ee2:	bf00      	nop
 8018ee4:	2400e514 	.word	0x2400e514
 8018ee8:	24000000 	.word	0x24000000
 8018eec:	0801580f 	.word	0x0801580f
 8018ef0:	240000dc 	.word	0x240000dc
 8018ef4:	2400e518 	.word	0x2400e518
 8018ef8:	0801580d 	.word	0x0801580d
 8018efc:	240000e0 	.word	0x240000e0

08018f00 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018f00:	b510      	push	{r4, lr}
 8018f02:	4604      	mov	r4, r0
 8018f04:	f7ff ff14 	bl	8018d30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018f08:	4620      	mov	r0, r4
 8018f0a:	f7ff ff85 	bl	8018e18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8018f0e:	4620      	mov	r0, r4
 8018f10:	f7ff ff48 	bl	8018da4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018f14:	4620      	mov	r0, r4
 8018f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f1a:	f7ff bfb7 	b.w	8018e8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018f20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018f20:	b538      	push	{r3, r4, r5, lr}
 8018f22:	4c15      	ldr	r4, [pc, #84]	; (8018f78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018f24:	4605      	mov	r5, r0
 8018f26:	7823      	ldrb	r3, [r4, #0]
 8018f28:	f3bf 8f5b 	dmb	ish
 8018f2c:	07da      	lsls	r2, r3, #31
 8018f2e:	d40b      	bmi.n	8018f48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018f30:	4620      	mov	r0, r4
 8018f32:	f007 ff74 	bl	8020e1e <__cxa_guard_acquire>
 8018f36:	b138      	cbz	r0, 8018f48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018f38:	4620      	mov	r0, r4
 8018f3a:	f007 ff7c 	bl	8020e36 <__cxa_guard_release>
 8018f3e:	4a0f      	ldr	r2, [pc, #60]	; (8018f7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018f40:	490f      	ldr	r1, [pc, #60]	; (8018f80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018f42:	4810      	ldr	r0, [pc, #64]	; (8018f84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018f44:	f007 ff64 	bl	8020e10 <__aeabi_atexit>
 8018f48:	4c0f      	ldr	r4, [pc, #60]	; (8018f88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8018f4a:	7823      	ldrb	r3, [r4, #0]
 8018f4c:	f3bf 8f5b 	dmb	ish
 8018f50:	07db      	lsls	r3, r3, #31
 8018f52:	d40b      	bmi.n	8018f6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018f54:	4620      	mov	r0, r4
 8018f56:	f007 ff62 	bl	8020e1e <__cxa_guard_acquire>
 8018f5a:	b138      	cbz	r0, 8018f6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018f5c:	4620      	mov	r0, r4
 8018f5e:	f007 ff6a 	bl	8020e36 <__cxa_guard_release>
 8018f62:	4a06      	ldr	r2, [pc, #24]	; (8018f7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018f64:	4909      	ldr	r1, [pc, #36]	; (8018f8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018f66:	480a      	ldr	r0, [pc, #40]	; (8018f90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018f68:	f007 ff52 	bl	8020e10 <__aeabi_atexit>
 8018f6c:	4b05      	ldr	r3, [pc, #20]	; (8018f84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018f6e:	662b      	str	r3, [r5, #96]	; 0x60
 8018f70:	4b07      	ldr	r3, [pc, #28]	; (8018f90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018f72:	666b      	str	r3, [r5, #100]	; 0x64
 8018f74:	bd38      	pop	{r3, r4, r5, pc}
 8018f76:	bf00      	nop
 8018f78:	2400e4fc 	.word	0x2400e4fc
 8018f7c:	24000000 	.word	0x24000000
 8018f80:	080157fb 	.word	0x080157fb
 8018f84:	240000c4 	.word	0x240000c4
 8018f88:	2400e500 	.word	0x2400e500
 8018f8c:	080157f9 	.word	0x080157f9
 8018f90:	240000c8 	.word	0x240000c8

08018f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018f94:	b538      	push	{r3, r4, r5, lr}
 8018f96:	4c15      	ldr	r4, [pc, #84]	; (8018fec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018f98:	4605      	mov	r5, r0
 8018f9a:	7823      	ldrb	r3, [r4, #0]
 8018f9c:	f3bf 8f5b 	dmb	ish
 8018fa0:	07da      	lsls	r2, r3, #31
 8018fa2:	d40b      	bmi.n	8018fbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018fa4:	4620      	mov	r0, r4
 8018fa6:	f007 ff3a 	bl	8020e1e <__cxa_guard_acquire>
 8018faa:	b138      	cbz	r0, 8018fbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018fac:	4620      	mov	r0, r4
 8018fae:	f007 ff42 	bl	8020e36 <__cxa_guard_release>
 8018fb2:	4a0f      	ldr	r2, [pc, #60]	; (8018ff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018fb4:	490f      	ldr	r1, [pc, #60]	; (8018ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018fb6:	4810      	ldr	r0, [pc, #64]	; (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018fb8:	f007 ff2a 	bl	8020e10 <__aeabi_atexit>
 8018fbc:	4c0f      	ldr	r4, [pc, #60]	; (8018ffc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8018fbe:	7823      	ldrb	r3, [r4, #0]
 8018fc0:	f3bf 8f5b 	dmb	ish
 8018fc4:	07db      	lsls	r3, r3, #31
 8018fc6:	d40b      	bmi.n	8018fe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018fc8:	4620      	mov	r0, r4
 8018fca:	f007 ff28 	bl	8020e1e <__cxa_guard_acquire>
 8018fce:	b138      	cbz	r0, 8018fe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018fd0:	4620      	mov	r0, r4
 8018fd2:	f007 ff30 	bl	8020e36 <__cxa_guard_release>
 8018fd6:	4a06      	ldr	r2, [pc, #24]	; (8018ff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018fd8:	4909      	ldr	r1, [pc, #36]	; (8019000 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018fda:	480a      	ldr	r0, [pc, #40]	; (8019004 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018fdc:	f007 ff18 	bl	8020e10 <__aeabi_atexit>
 8018fe0:	4b05      	ldr	r3, [pc, #20]	; (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018fe2:	65ab      	str	r3, [r5, #88]	; 0x58
 8018fe4:	4b07      	ldr	r3, [pc, #28]	; (8019004 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018fe6:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018fe8:	bd38      	pop	{r3, r4, r5, pc}
 8018fea:	bf00      	nop
 8018fec:	2400e4d4 	.word	0x2400e4d4
 8018ff0:	24000000 	.word	0x24000000
 8018ff4:	080157ff 	.word	0x080157ff
 8018ff8:	2400009c 	.word	0x2400009c
 8018ffc:	2400e4d8 	.word	0x2400e4d8
 8019000:	080157fd 	.word	0x080157fd
 8019004:	240000a0 	.word	0x240000a0

08019008 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019008:	b510      	push	{r4, lr}
 801900a:	4604      	mov	r4, r0
 801900c:	f7ff ff88 	bl	8018f20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019010:	4620      	mov	r0, r4
 8019012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019016:	f7ff bfbd 	b.w	8018f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801901c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801901c:	b538      	push	{r3, r4, r5, lr}
 801901e:	4c15      	ldr	r4, [pc, #84]	; (8019074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019020:	4605      	mov	r5, r0
 8019022:	7823      	ldrb	r3, [r4, #0]
 8019024:	f3bf 8f5b 	dmb	ish
 8019028:	07da      	lsls	r2, r3, #31
 801902a:	d40b      	bmi.n	8019044 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801902c:	4620      	mov	r0, r4
 801902e:	f007 fef6 	bl	8020e1e <__cxa_guard_acquire>
 8019032:	b138      	cbz	r0, 8019044 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019034:	4620      	mov	r0, r4
 8019036:	f007 fefe 	bl	8020e36 <__cxa_guard_release>
 801903a:	4a0f      	ldr	r2, [pc, #60]	; (8019078 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801903c:	490f      	ldr	r1, [pc, #60]	; (801907c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801903e:	4810      	ldr	r0, [pc, #64]	; (8019080 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019040:	f007 fee6 	bl	8020e10 <__aeabi_atexit>
 8019044:	4c0f      	ldr	r4, [pc, #60]	; (8019084 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019046:	7823      	ldrb	r3, [r4, #0]
 8019048:	f3bf 8f5b 	dmb	ish
 801904c:	07db      	lsls	r3, r3, #31
 801904e:	d40b      	bmi.n	8019068 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019050:	4620      	mov	r0, r4
 8019052:	f007 fee4 	bl	8020e1e <__cxa_guard_acquire>
 8019056:	b138      	cbz	r0, 8019068 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019058:	4620      	mov	r0, r4
 801905a:	f007 feec 	bl	8020e36 <__cxa_guard_release>
 801905e:	4a06      	ldr	r2, [pc, #24]	; (8019078 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019060:	4909      	ldr	r1, [pc, #36]	; (8019088 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019062:	480a      	ldr	r0, [pc, #40]	; (801908c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019064:	f007 fed4 	bl	8020e10 <__aeabi_atexit>
 8019068:	4b05      	ldr	r3, [pc, #20]	; (8019080 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801906a:	672b      	str	r3, [r5, #112]	; 0x70
 801906c:	4b07      	ldr	r3, [pc, #28]	; (801908c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801906e:	676b      	str	r3, [r5, #116]	; 0x74
 8019070:	bd38      	pop	{r3, r4, r5, pc}
 8019072:	bf00      	nop
 8019074:	2400e4cc 	.word	0x2400e4cc
 8019078:	24000000 	.word	0x24000000
 801907c:	080157f3 	.word	0x080157f3
 8019080:	24000094 	.word	0x24000094
 8019084:	2400e4d0 	.word	0x2400e4d0
 8019088:	080157f1 	.word	0x080157f1
 801908c:	24000098 	.word	0x24000098

08019090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019090:	b538      	push	{r3, r4, r5, lr}
 8019092:	4c15      	ldr	r4, [pc, #84]	; (80190e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019094:	4605      	mov	r5, r0
 8019096:	7823      	ldrb	r3, [r4, #0]
 8019098:	f3bf 8f5b 	dmb	ish
 801909c:	07da      	lsls	r2, r3, #31
 801909e:	d40b      	bmi.n	80190b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80190a0:	4620      	mov	r0, r4
 80190a2:	f007 febc 	bl	8020e1e <__cxa_guard_acquire>
 80190a6:	b138      	cbz	r0, 80190b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80190a8:	4620      	mov	r0, r4
 80190aa:	f007 fec4 	bl	8020e36 <__cxa_guard_release>
 80190ae:	4a0f      	ldr	r2, [pc, #60]	; (80190ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80190b0:	490f      	ldr	r1, [pc, #60]	; (80190f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80190b2:	4810      	ldr	r0, [pc, #64]	; (80190f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80190b4:	f007 feac 	bl	8020e10 <__aeabi_atexit>
 80190b8:	4c0f      	ldr	r4, [pc, #60]	; (80190f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80190ba:	7823      	ldrb	r3, [r4, #0]
 80190bc:	f3bf 8f5b 	dmb	ish
 80190c0:	07db      	lsls	r3, r3, #31
 80190c2:	d40b      	bmi.n	80190dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80190c4:	4620      	mov	r0, r4
 80190c6:	f007 feaa 	bl	8020e1e <__cxa_guard_acquire>
 80190ca:	b138      	cbz	r0, 80190dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80190cc:	4620      	mov	r0, r4
 80190ce:	f007 feb2 	bl	8020e36 <__cxa_guard_release>
 80190d2:	4a06      	ldr	r2, [pc, #24]	; (80190ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80190d4:	4909      	ldr	r1, [pc, #36]	; (80190fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80190d6:	480a      	ldr	r0, [pc, #40]	; (8019100 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80190d8:	f007 fe9a 	bl	8020e10 <__aeabi_atexit>
 80190dc:	4b05      	ldr	r3, [pc, #20]	; (80190f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80190de:	66ab      	str	r3, [r5, #104]	; 0x68
 80190e0:	4b07      	ldr	r3, [pc, #28]	; (8019100 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80190e2:	66eb      	str	r3, [r5, #108]	; 0x6c
 80190e4:	bd38      	pop	{r3, r4, r5, pc}
 80190e6:	bf00      	nop
 80190e8:	2400e4c4 	.word	0x2400e4c4
 80190ec:	24000000 	.word	0x24000000
 80190f0:	080157f7 	.word	0x080157f7
 80190f4:	2400008c 	.word	0x2400008c
 80190f8:	2400e4c8 	.word	0x2400e4c8
 80190fc:	080157f5 	.word	0x080157f5
 8019100:	24000090 	.word	0x24000090

08019104 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019104:	b510      	push	{r4, lr}
 8019106:	4604      	mov	r4, r0
 8019108:	f7ff ff88 	bl	801901c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801910c:	4620      	mov	r0, r4
 801910e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019112:	f7ff bfbd 	b.w	8019090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019116 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019116:	b510      	push	{r4, lr}
 8019118:	4604      	mov	r4, r0
 801911a:	f7ff fff3 	bl	8019104 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801911e:	4620      	mov	r0, r4
 8019120:	f7ff ff72 	bl	8019008 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019124:	4620      	mov	r0, r4
 8019126:	f7ff fdf9 	bl	8018d1c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801912a:	4620      	mov	r0, r4
 801912c:	f7ff fcfa 	bl	8018b24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019130:	4620      	mov	r0, r4
 8019132:	f7ff fd75 	bl	8018c20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019136:	4620      	mov	r0, r4
 8019138:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801913c:	f7ff bee0 	b.w	8018f00 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019140 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019140:	b538      	push	{r3, r4, r5, lr}
 8019142:	4c0b      	ldr	r4, [pc, #44]	; (8019170 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019144:	4605      	mov	r5, r0
 8019146:	7823      	ldrb	r3, [r4, #0]
 8019148:	f3bf 8f5b 	dmb	ish
 801914c:	07db      	lsls	r3, r3, #31
 801914e:	d40b      	bmi.n	8019168 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019150:	4620      	mov	r0, r4
 8019152:	f007 fe64 	bl	8020e1e <__cxa_guard_acquire>
 8019156:	b138      	cbz	r0, 8019168 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019158:	4620      	mov	r0, r4
 801915a:	f007 fe6c 	bl	8020e36 <__cxa_guard_release>
 801915e:	4a05      	ldr	r2, [pc, #20]	; (8019174 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019160:	4905      	ldr	r1, [pc, #20]	; (8019178 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019162:	4806      	ldr	r0, [pc, #24]	; (801917c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019164:	f007 fe54 	bl	8020e10 <__aeabi_atexit>
 8019168:	4b04      	ldr	r3, [pc, #16]	; (801917c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801916a:	67ab      	str	r3, [r5, #120]	; 0x78
 801916c:	bd38      	pop	{r3, r4, r5, pc}
 801916e:	bf00      	nop
 8019170:	2400e4b8 	.word	0x2400e4b8
 8019174:	24000000 	.word	0x24000000
 8019178:	080157ef 	.word	0x080157ef
 801917c:	24000084 	.word	0x24000084

08019180 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019180:	b538      	push	{r3, r4, r5, lr}
 8019182:	4c0b      	ldr	r4, [pc, #44]	; (80191b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019184:	4605      	mov	r5, r0
 8019186:	7823      	ldrb	r3, [r4, #0]
 8019188:	f3bf 8f5b 	dmb	ish
 801918c:	07db      	lsls	r3, r3, #31
 801918e:	d40b      	bmi.n	80191a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019190:	4620      	mov	r0, r4
 8019192:	f007 fe44 	bl	8020e1e <__cxa_guard_acquire>
 8019196:	b138      	cbz	r0, 80191a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019198:	4620      	mov	r0, r4
 801919a:	f007 fe4c 	bl	8020e36 <__cxa_guard_release>
 801919e:	4a05      	ldr	r2, [pc, #20]	; (80191b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80191a0:	4905      	ldr	r1, [pc, #20]	; (80191b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80191a2:	4806      	ldr	r0, [pc, #24]	; (80191bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80191a4:	f007 fe34 	bl	8020e10 <__aeabi_atexit>
 80191a8:	4b04      	ldr	r3, [pc, #16]	; (80191bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80191aa:	67eb      	str	r3, [r5, #124]	; 0x7c
 80191ac:	bd38      	pop	{r3, r4, r5, pc}
 80191ae:	bf00      	nop
 80191b0:	2400e4bc 	.word	0x2400e4bc
 80191b4:	24000000 	.word	0x24000000
 80191b8:	080157ed 	.word	0x080157ed
 80191bc:	24000088 	.word	0x24000088

080191c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80191c0:	b570      	push	{r4, r5, r6, lr}
 80191c2:	4d0d      	ldr	r5, [pc, #52]	; (80191f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80191c4:	4606      	mov	r6, r0
 80191c6:	4c0d      	ldr	r4, [pc, #52]	; (80191fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80191c8:	782b      	ldrb	r3, [r5, #0]
 80191ca:	f3bf 8f5b 	dmb	ish
 80191ce:	f013 0f01 	tst.w	r3, #1
 80191d2:	d10d      	bne.n	80191f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80191d4:	4628      	mov	r0, r5
 80191d6:	f007 fe22 	bl	8020e1e <__cxa_guard_acquire>
 80191da:	b148      	cbz	r0, 80191f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80191dc:	4b08      	ldr	r3, [pc, #32]	; (8019200 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80191de:	4628      	mov	r0, r5
 80191e0:	6023      	str	r3, [r4, #0]
 80191e2:	f007 fe28 	bl	8020e36 <__cxa_guard_release>
 80191e6:	4a07      	ldr	r2, [pc, #28]	; (8019204 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80191e8:	4620      	mov	r0, r4
 80191ea:	4907      	ldr	r1, [pc, #28]	; (8019208 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80191ec:	f007 fe10 	bl	8020e10 <__aeabi_atexit>
 80191f0:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80191f4:	bd70      	pop	{r4, r5, r6, pc}
 80191f6:	bf00      	nop
 80191f8:	2400e4c0 	.word	0x2400e4c0
 80191fc:	2400e534 	.word	0x2400e534
 8019200:	08023aa0 	.word	0x08023aa0
 8019204:	24000000 	.word	0x24000000
 8019208:	080157eb 	.word	0x080157eb

0801920c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801920c:	b510      	push	{r4, lr}
 801920e:	4604      	mov	r4, r0
 8019210:	f7ff ff96 	bl	8019140 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019214:	4620      	mov	r0, r4
 8019216:	f7ff ffb3 	bl	8019180 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801921a:	4620      	mov	r0, r4
 801921c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019220:	f7ff bfce 	b.w	80191c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019224 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019228:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801922c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8019230:	2d00      	cmp	r5, #0
 8019232:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8019236:	fb05 4c0e 	mla	ip, r5, lr, r4
 801923a:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801923e:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8019242:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8019246:	eb02 0a0c 	add.w	sl, r2, ip
 801924a:	8808      	ldrh	r0, [r1, #0]
 801924c:	f2c0 80b0 	blt.w	80193b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019250:	45ab      	cmp	fp, r5
 8019252:	f340 80ad 	ble.w	80193b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019256:	2c00      	cmp	r4, #0
 8019258:	f2c0 80a8 	blt.w	80193ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801925c:	45a6      	cmp	lr, r4
 801925e:	f340 80a5 	ble.w	80193ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019262:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019266:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801926a:	1c62      	adds	r2, r4, #1
 801926c:	f100 80a3 	bmi.w	80193b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019270:	4596      	cmp	lr, r2
 8019272:	f340 80a0 	ble.w	80193b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019276:	f1b9 0f00 	cmp.w	r9, #0
 801927a:	f000 809c 	beq.w	80193b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801927e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019282:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019286:	3501      	adds	r5, #1
 8019288:	f100 8099 	bmi.w	80193be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801928c:	45ab      	cmp	fp, r5
 801928e:	f340 8096 	ble.w	80193be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019292:	2f00      	cmp	r7, #0
 8019294:	f000 8093 	beq.w	80193be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019298:	2c00      	cmp	r4, #0
 801929a:	f2c0 808e 	blt.w	80193ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801929e:	45a6      	cmp	lr, r4
 80192a0:	f340 808b 	ble.w	80193ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80192a4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80192a8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80192ac:	3401      	adds	r4, #1
 80192ae:	f100 8089 	bmi.w	80193c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80192b2:	45a6      	cmp	lr, r4
 80192b4:	f340 8086 	ble.w	80193c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80192b8:	f1b9 0f00 	cmp.w	r9, #0
 80192bc:	f000 8082 	beq.w	80193c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80192c0:	44d6      	add	lr, sl
 80192c2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80192c6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80192ca:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80192ce:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80192d2:	fb19 fe07 	smulbb	lr, r9, r7
 80192d6:	f1c7 0210 	rsb	r2, r7, #16
 80192da:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80192de:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80192e2:	eba2 0209 	sub.w	r2, r2, r9
 80192e6:	ea44 0808 	orr.w	r8, r4, r8
 80192ea:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80192ee:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80192f2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80192f6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80192fa:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80192fe:	ea44 0c0c 	orr.w	ip, r4, ip
 8019302:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019306:	fb04 f40c 	mul.w	r4, r4, ip
 801930a:	fb02 4808 	mla	r8, r2, r8, r4
 801930e:	041a      	lsls	r2, r3, #16
 8019310:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019314:	b2b4      	uxth	r4, r6
 8019316:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801931a:	43f6      	mvns	r6, r6
 801931c:	4313      	orrs	r3, r2
 801931e:	042a      	lsls	r2, r5, #16
 8019320:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019324:	b2f6      	uxtb	r6, r6
 8019326:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801932a:	fb0e 8303 	mla	r3, lr, r3, r8
 801932e:	432a      	orrs	r2, r5
 8019330:	fb07 3202 	mla	r2, r7, r2, r3
 8019334:	10c7      	asrs	r7, r0, #3
 8019336:	0d53      	lsrs	r3, r2, #21
 8019338:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801933c:	0952      	lsrs	r2, r2, #5
 801933e:	fb17 f706 	smulbb	r7, r7, r6
 8019342:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019346:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801934a:	431a      	orrs	r2, r3
 801934c:	b293      	uxth	r3, r2
 801934e:	1202      	asrs	r2, r0, #8
 8019350:	121d      	asrs	r5, r3, #8
 8019352:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019356:	00c0      	lsls	r0, r0, #3
 8019358:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801935c:	fb12 f206 	smulbb	r2, r2, r6
 8019360:	b2c0      	uxtb	r0, r0
 8019362:	fb05 2504 	mla	r5, r5, r4, r2
 8019366:	10da      	asrs	r2, r3, #3
 8019368:	fb10 f006 	smulbb	r0, r0, r6
 801936c:	00db      	lsls	r3, r3, #3
 801936e:	b2ad      	uxth	r5, r5
 8019370:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019374:	b2db      	uxtb	r3, r3
 8019376:	fb02 7204 	mla	r2, r2, r4, r7
 801937a:	fb03 0004 	mla	r0, r3, r4, r0
 801937e:	1c6b      	adds	r3, r5, #1
 8019380:	b292      	uxth	r2, r2
 8019382:	b280      	uxth	r0, r0
 8019384:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019388:	1c43      	adds	r3, r0, #1
 801938a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801938e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019392:	1c50      	adds	r0, r2, #1
 8019394:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019398:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801939c:	0952      	lsrs	r2, r2, #5
 801939e:	432b      	orrs	r3, r5
 80193a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80193a4:	4313      	orrs	r3, r2
 80193a6:	800b      	strh	r3, [r1, #0]
 80193a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193ac:	4680      	mov	r8, r0
 80193ae:	e75c      	b.n	801926a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80193b0:	4684      	mov	ip, r0
 80193b2:	4680      	mov	r8, r0
 80193b4:	e767      	b.n	8019286 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80193b6:	4684      	mov	ip, r0
 80193b8:	e765      	b.n	8019286 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80193ba:	4605      	mov	r5, r0
 80193bc:	e776      	b.n	80192ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80193be:	4603      	mov	r3, r0
 80193c0:	4605      	mov	r5, r0
 80193c2:	e782      	b.n	80192ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80193c4:	4603      	mov	r3, r0
 80193c6:	e780      	b.n	80192ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080193c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193cc:	b099      	sub	sp, #100	; 0x64
 80193ce:	9215      	str	r2, [sp, #84]	; 0x54
 80193d0:	9309      	str	r3, [sp, #36]	; 0x24
 80193d2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80193d4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80193d8:	9016      	str	r0, [sp, #88]	; 0x58
 80193da:	930d      	str	r3, [sp, #52]	; 0x34
 80193dc:	6850      	ldr	r0, [r2, #4]
 80193de:	910c      	str	r1, [sp, #48]	; 0x30
 80193e0:	6812      	ldr	r2, [r2, #0]
 80193e2:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80193e6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80193ea:	fb00 1303 	mla	r3, r0, r3, r1
 80193ee:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80193f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80193f4:	681b      	ldr	r3, [r3, #0]
 80193f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80193f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80193fa:	685e      	ldr	r6, [r3, #4]
 80193fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80193fe:	3604      	adds	r6, #4
 8019400:	43db      	mvns	r3, r3
 8019402:	b2db      	uxtb	r3, r3
 8019404:	930a      	str	r3, [sp, #40]	; 0x28
 8019406:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019408:	2b00      	cmp	r3, #0
 801940a:	dc03      	bgt.n	8019414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801940c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801940e:	2b00      	cmp	r3, #0
 8019410:	f340 8225 	ble.w	801985e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019414:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019416:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801941a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801941e:	1e48      	subs	r0, r1, #1
 8019420:	1e57      	subs	r7, r2, #1
 8019422:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019424:	2b00      	cmp	r3, #0
 8019426:	f340 80e3 	ble.w	80195f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801942a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801942e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019432:	d406      	bmi.n	8019442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019434:	4584      	cmp	ip, r0
 8019436:	da04      	bge.n	8019442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019438:	2b00      	cmp	r3, #0
 801943a:	db02      	blt.n	8019442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801943c:	42bb      	cmp	r3, r7
 801943e:	f2c0 80d8 	blt.w	80195f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019442:	f11c 0c01 	adds.w	ip, ip, #1
 8019446:	f100 80c9 	bmi.w	80195dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801944a:	4561      	cmp	r1, ip
 801944c:	f2c0 80c6 	blt.w	80195dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019450:	3301      	adds	r3, #1
 8019452:	f100 80c3 	bmi.w	80195dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019456:	429a      	cmp	r2, r3
 8019458:	f2c0 80c0 	blt.w	80195dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801945c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019460:	4647      	mov	r7, r8
 8019462:	f1bb 0f00 	cmp.w	fp, #0
 8019466:	f340 80e3 	ble.w	8019630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801946a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801946c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019470:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019472:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019476:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801947a:	ea5f 422a 	movs.w	r2, sl, asr #16
 801947e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019482:	689b      	ldr	r3, [r3, #8]
 8019484:	f100 8121 	bmi.w	80196ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019488:	f103 39ff 	add.w	r9, r3, #4294967295
 801948c:	454a      	cmp	r2, r9
 801948e:	f280 811c 	bge.w	80196ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019492:	f1bc 0f00 	cmp.w	ip, #0
 8019496:	f2c0 8118 	blt.w	80196ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801949a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801949e:	45cc      	cmp	ip, r9
 80194a0:	f280 8113 	bge.w	80196ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80194a4:	b21b      	sxth	r3, r3
 80194a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80194a8:	fb0c 2203 	mla	r2, ip, r3, r2
 80194ac:	eb04 0902 	add.w	r9, r4, r2
 80194b0:	5ca2      	ldrb	r2, [r4, r2]
 80194b2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80194b6:	2800      	cmp	r0, #0
 80194b8:	f000 80fe 	beq.w	80196b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80194bc:	f899 2001 	ldrb.w	r2, [r9, #1]
 80194c0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80194c4:	9211      	str	r2, [sp, #68]	; 0x44
 80194c6:	b151      	cbz	r1, 80194de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80194c8:	eb09 0203 	add.w	r2, r9, r3
 80194cc:	f819 3003 	ldrb.w	r3, [r9, r3]
 80194d0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80194d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80194d6:	7853      	ldrb	r3, [r2, #1]
 80194d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80194dc:	9312      	str	r3, [sp, #72]	; 0x48
 80194de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80194e0:	fb10 f201 	smulbb	r2, r0, r1
 80194e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80194e6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80194ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80194ee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80194f2:	10d2      	asrs	r2, r2, #3
 80194f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80194f8:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80194fc:	ea4c 0c03 	orr.w	ip, ip, r3
 8019500:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019502:	041b      	lsls	r3, r3, #16
 8019504:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019508:	4323      	orrs	r3, r4
 801950a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801950c:	4353      	muls	r3, r2
 801950e:	fb09 330c 	mla	r3, r9, ip, r3
 8019512:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019516:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801951a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801951e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019522:	f1c1 0c10 	rsb	ip, r1, #16
 8019526:	ebac 0c00 	sub.w	ip, ip, r0
 801952a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801952e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019532:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019536:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019538:	0418      	lsls	r0, r3, #16
 801953a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801953e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019542:	4318      	orrs	r0, r3
 8019544:	fb02 c200 	mla	r2, r2, r0, ip
 8019548:	8838      	ldrh	r0, [r7, #0]
 801954a:	0d53      	lsrs	r3, r2, #21
 801954c:	0952      	lsrs	r2, r2, #5
 801954e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019552:	1201      	asrs	r1, r0, #8
 8019554:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019558:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801955c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019560:	00c0      	lsls	r0, r0, #3
 8019562:	431a      	orrs	r2, r3
 8019564:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019568:	fb11 f104 	smulbb	r1, r1, r4
 801956c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019570:	b292      	uxth	r2, r2
 8019572:	fb1e fe04 	smulbb	lr, lr, r4
 8019576:	b2c0      	uxtb	r0, r0
 8019578:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801957c:	fb10 f004 	smulbb	r0, r0, r4
 8019580:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019584:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019588:	10d1      	asrs	r1, r2, #3
 801958a:	00d2      	lsls	r2, r2, #3
 801958c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019590:	fa1f fc8c 	uxth.w	ip, ip
 8019594:	b2d2      	uxtb	r2, r2
 8019596:	fb01 e103 	mla	r1, r1, r3, lr
 801959a:	fb02 0303 	mla	r3, r2, r3, r0
 801959e:	b289      	uxth	r1, r1
 80195a0:	b29a      	uxth	r2, r3
 80195a2:	f10c 0301 	add.w	r3, ip, #1
 80195a6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80195aa:	1c53      	adds	r3, r2, #1
 80195ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80195b0:	1c4a      	adds	r2, r1, #1
 80195b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80195b6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80195ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80195be:	0949      	lsrs	r1, r1, #5
 80195c0:	ea43 030c 	orr.w	r3, r3, ip
 80195c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80195c8:	430b      	orrs	r3, r1
 80195ca:	803b      	strh	r3, [r7, #0]
 80195cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80195ce:	3702      	adds	r7, #2
 80195d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80195d4:	449a      	add	sl, r3
 80195d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195d8:	441d      	add	r5, r3
 80195da:	e742      	b.n	8019462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80195dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80195de:	f108 0802 	add.w	r8, r8, #2
 80195e2:	449a      	add	sl, r3
 80195e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195e6:	441d      	add	r5, r3
 80195e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195ea:	3b01      	subs	r3, #1
 80195ec:	9309      	str	r3, [sp, #36]	; 0x24
 80195ee:	e718      	b.n	8019422 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80195f0:	d023      	beq.n	801963a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80195f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195f4:	9825      	ldr	r0, [sp, #148]	; 0x94
 80195f6:	3b01      	subs	r3, #1
 80195f8:	fb00 a003 	mla	r0, r0, r3, sl
 80195fc:	1400      	asrs	r0, r0, #16
 80195fe:	f53f af2d 	bmi.w	801945c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019602:	3901      	subs	r1, #1
 8019604:	4288      	cmp	r0, r1
 8019606:	f6bf af29 	bge.w	801945c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801960a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801960c:	fb01 5303 	mla	r3, r1, r3, r5
 8019610:	141b      	asrs	r3, r3, #16
 8019612:	f53f af23 	bmi.w	801945c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019616:	3a01      	subs	r2, #1
 8019618:	4293      	cmp	r3, r2
 801961a:	f6bf af1f 	bge.w	801945c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801961e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019622:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019626:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801962a:	f1be 0f00 	cmp.w	lr, #0
 801962e:	dc6c      	bgt.n	801970a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019630:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019632:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019636:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801963a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801963c:	2b00      	cmp	r3, #0
 801963e:	f340 810e 	ble.w	801985e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019642:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019646:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019648:	ee30 0a04 	vadd.f32	s0, s0, s8
 801964c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019650:	eef0 6a62 	vmov.f32	s13, s5
 8019654:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019658:	ee31 1a05 	vadd.f32	s2, s2, s10
 801965c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019660:	ee16 aa90 	vmov	sl, s13
 8019664:	eef0 6a43 	vmov.f32	s13, s6
 8019668:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801966c:	ee16 5a90 	vmov	r5, s13
 8019670:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019674:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019678:	ee77 2a62 	vsub.f32	s5, s14, s5
 801967c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019680:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019684:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019688:	ee12 2a90 	vmov	r2, s5
 801968c:	eef0 2a47 	vmov.f32	s5, s14
 8019690:	fb92 f3f3 	sdiv	r3, r2, r3
 8019694:	ee13 2a10 	vmov	r2, s6
 8019698:	9325      	str	r3, [sp, #148]	; 0x94
 801969a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801969c:	eeb0 3a67 	vmov.f32	s6, s15
 80196a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80196a4:	9326      	str	r3, [sp, #152]	; 0x98
 80196a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196a8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80196aa:	3b01      	subs	r3, #1
 80196ac:	930c      	str	r3, [sp, #48]	; 0x30
 80196ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80196b0:	bf08      	it	eq
 80196b2:	4613      	moveq	r3, r2
 80196b4:	9309      	str	r3, [sp, #36]	; 0x24
 80196b6:	e6a6      	b.n	8019406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80196b8:	2900      	cmp	r1, #0
 80196ba:	f43f af10 	beq.w	80194de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80196be:	f819 3003 	ldrb.w	r3, [r9, r3]
 80196c2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80196c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80196c8:	e709      	b.n	80194de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80196ca:	f112 0901 	adds.w	r9, r2, #1
 80196ce:	f53f af7d 	bmi.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80196d2:	454b      	cmp	r3, r9
 80196d4:	f6ff af7a 	blt.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80196d8:	f11c 0901 	adds.w	r9, ip, #1
 80196dc:	f53f af76 	bmi.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80196e0:	45ce      	cmp	lr, r9
 80196e2:	f6ff af73 	blt.w	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80196e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80196e8:	b21b      	sxth	r3, r3
 80196ea:	9202      	str	r2, [sp, #8]
 80196ec:	fa0f f28e 	sxth.w	r2, lr
 80196f0:	9300      	str	r3, [sp, #0]
 80196f2:	4633      	mov	r3, r6
 80196f4:	9201      	str	r2, [sp, #4]
 80196f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80196f8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80196fc:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019700:	4639      	mov	r1, r7
 8019702:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019704:	f7ff fd8e 	bl	8019224 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019708:	e760      	b.n	80195cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801970a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801970c:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019710:	1429      	asrs	r1, r5, #16
 8019712:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019714:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019718:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801971c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019720:	fb03 2101 	mla	r1, r3, r1, r2
 8019724:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019726:	440a      	add	r2, r1
 8019728:	5c61      	ldrb	r1, [r4, r1]
 801972a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801972e:	f1bc 0f00 	cmp.w	ip, #0
 8019732:	f000 808c 	beq.w	801984e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019736:	7857      	ldrb	r7, [r2, #1]
 8019738:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801973c:	9413      	str	r4, [sp, #76]	; 0x4c
 801973e:	b140      	cbz	r0, 8019752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019740:	18d7      	adds	r7, r2, r3
 8019742:	5cd3      	ldrb	r3, [r2, r3]
 8019744:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019748:	9310      	str	r3, [sp, #64]	; 0x40
 801974a:	787b      	ldrb	r3, [r7, #1]
 801974c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019750:	9314      	str	r3, [sp, #80]	; 0x50
 8019752:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019754:	fb1c f200 	smulbb	r2, ip, r0
 8019758:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801975a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801975e:	041f      	lsls	r7, r3, #16
 8019760:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019764:	10d2      	asrs	r2, r2, #3
 8019766:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801976a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801976e:	431f      	orrs	r7, r3
 8019770:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019774:	9317      	str	r3, [sp, #92]	; 0x5c
 8019776:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019778:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801977a:	041b      	lsls	r3, r3, #16
 801977c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019780:	ea43 030b 	orr.w	r3, r3, fp
 8019784:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019788:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801978c:	4353      	muls	r3, r2
 801978e:	fb04 3707 	mla	r7, r4, r7, r3
 8019792:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019796:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019798:	ea43 0b01 	orr.w	fp, r3, r1
 801979c:	f1c0 0110 	rsb	r1, r0, #16
 80197a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197a2:	eba1 0c0c 	sub.w	ip, r1, ip
 80197a6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80197aa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80197ae:	fb0c 770b 	mla	r7, ip, fp, r7
 80197b2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80197b6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80197ba:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80197be:	ea4c 0c0b 	orr.w	ip, ip, fp
 80197c2:	fb02 770c 	mla	r7, r2, ip, r7
 80197c6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80197c8:	0d79      	lsrs	r1, r7, #21
 80197ca:	8812      	ldrh	r2, [r2, #0]
 80197cc:	097f      	lsrs	r7, r7, #5
 80197ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80197d2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80197d6:	430f      	orrs	r7, r1
 80197d8:	1211      	asrs	r1, r2, #8
 80197da:	b2bb      	uxth	r3, r7
 80197dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80197e0:	10d7      	asrs	r7, r2, #3
 80197e2:	fb11 f104 	smulbb	r1, r1, r4
 80197e6:	1218      	asrs	r0, r3, #8
 80197e8:	00d2      	lsls	r2, r2, #3
 80197ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80197ee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80197f2:	fb17 f704 	smulbb	r7, r7, r4
 80197f6:	b2d2      	uxtb	r2, r2
 80197f8:	fb00 1009 	mla	r0, r0, r9, r1
 80197fc:	10d9      	asrs	r1, r3, #3
 80197fe:	fb12 f204 	smulbb	r2, r2, r4
 8019802:	00db      	lsls	r3, r3, #3
 8019804:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019808:	b280      	uxth	r0, r0
 801980a:	b2db      	uxtb	r3, r3
 801980c:	fb01 7109 	mla	r1, r1, r9, r7
 8019810:	fb03 2309 	mla	r3, r3, r9, r2
 8019814:	1c42      	adds	r2, r0, #1
 8019816:	b289      	uxth	r1, r1
 8019818:	b29b      	uxth	r3, r3
 801981a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801981e:	1c4f      	adds	r7, r1, #1
 8019820:	1c5a      	adds	r2, r3, #1
 8019822:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019826:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801982a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801982e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019830:	0949      	lsrs	r1, r1, #5
 8019832:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019836:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801983a:	4310      	orrs	r0, r2
 801983c:	4308      	orrs	r0, r1
 801983e:	f823 0b02 	strh.w	r0, [r3], #2
 8019842:	930e      	str	r3, [sp, #56]	; 0x38
 8019844:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019846:	449a      	add	sl, r3
 8019848:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801984a:	441d      	add	r5, r3
 801984c:	e6ed      	b.n	801962a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801984e:	2800      	cmp	r0, #0
 8019850:	f43f af7f 	beq.w	8019752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019854:	5cd3      	ldrb	r3, [r2, r3]
 8019856:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801985a:	9310      	str	r3, [sp, #64]	; 0x40
 801985c:	e779      	b.n	8019752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801985e:	b019      	add	sp, #100	; 0x64
 8019860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019868:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801986c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019870:	f1b8 0f00 	cmp.w	r8, #0
 8019874:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019878:	fb08 470e 	mla	r7, r8, lr, r4
 801987c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019880:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019884:	eb02 0907 	add.w	r9, r2, r7
 8019888:	8808      	ldrh	r0, [r1, #0]
 801988a:	db67      	blt.n	801995c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801988c:	45c2      	cmp	sl, r8
 801988e:	dd65      	ble.n	801995c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019890:	2c00      	cmp	r4, #0
 8019892:	db61      	blt.n	8019958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019894:	45a6      	cmp	lr, r4
 8019896:	dd5f      	ble.n	8019958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019898:	5dd2      	ldrb	r2, [r2, r7]
 801989a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801989e:	1c62      	adds	r2, r4, #1
 80198a0:	d45f      	bmi.n	8019962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80198a2:	4596      	cmp	lr, r2
 80198a4:	dd5d      	ble.n	8019962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80198a6:	2d00      	cmp	r5, #0
 80198a8:	d05b      	beq.n	8019962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80198aa:	f899 2001 	ldrb.w	r2, [r9, #1]
 80198ae:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80198b2:	f118 0801 	adds.w	r8, r8, #1
 80198b6:	d458      	bmi.n	801996a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80198b8:	45c2      	cmp	sl, r8
 80198ba:	dd56      	ble.n	801996a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80198bc:	2e00      	cmp	r6, #0
 80198be:	d054      	beq.n	801996a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80198c0:	2c00      	cmp	r4, #0
 80198c2:	db50      	blt.n	8019966 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80198c4:	45a6      	cmp	lr, r4
 80198c6:	dd4e      	ble.n	8019966 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80198c8:	f819 200e 	ldrb.w	r2, [r9, lr]
 80198cc:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80198d0:	3401      	adds	r4, #1
 80198d2:	d407      	bmi.n	80198e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80198d4:	45a6      	cmp	lr, r4
 80198d6:	dd05      	ble.n	80198e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80198d8:	b125      	cbz	r5, 80198e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80198da:	44ce      	add	lr, r9
 80198dc:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80198e0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80198e4:	fb15 f406 	smulbb	r4, r5, r6
 80198e8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80198ec:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80198f0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80198f4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80198f8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80198fc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019900:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019904:	ea43 0c0c 	orr.w	ip, r3, ip
 8019908:	f1c6 0310 	rsb	r3, r6, #16
 801990c:	ea4e 0707 	orr.w	r7, lr, r7
 8019910:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019914:	1b5b      	subs	r3, r3, r5
 8019916:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801991a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801991e:	437d      	muls	r5, r7
 8019920:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019924:	0403      	lsls	r3, r0, #16
 8019926:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801992a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801992e:	4318      	orrs	r0, r3
 8019930:	0413      	lsls	r3, r2, #16
 8019932:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019936:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801993a:	fb04 c000 	mla	r0, r4, r0, ip
 801993e:	4313      	orrs	r3, r2
 8019940:	fb06 0003 	mla	r0, r6, r3, r0
 8019944:	0d43      	lsrs	r3, r0, #21
 8019946:	0940      	lsrs	r0, r0, #5
 8019948:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801994c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019950:	4318      	orrs	r0, r3
 8019952:	8008      	strh	r0, [r1, #0]
 8019954:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019958:	4684      	mov	ip, r0
 801995a:	e7a0      	b.n	801989e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801995c:	4607      	mov	r7, r0
 801995e:	4684      	mov	ip, r0
 8019960:	e7a7      	b.n	80198b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019962:	4607      	mov	r7, r0
 8019964:	e7a5      	b.n	80198b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019966:	4602      	mov	r2, r0
 8019968:	e7b2      	b.n	80198d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801996a:	4602      	mov	r2, r0
 801996c:	e7ba      	b.n	80198e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801996e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801996e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019972:	b093      	sub	sp, #76	; 0x4c
 8019974:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019978:	920f      	str	r2, [sp, #60]	; 0x3c
 801997a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801997c:	9010      	str	r0, [sp, #64]	; 0x40
 801997e:	9108      	str	r1, [sp, #32]
 8019980:	6850      	ldr	r0, [r2, #4]
 8019982:	9306      	str	r3, [sp, #24]
 8019984:	6812      	ldr	r2, [r2, #0]
 8019986:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801998a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801998e:	fb00 1303 	mla	r3, r0, r3, r1
 8019992:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019996:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019998:	681b      	ldr	r3, [r3, #0]
 801999a:	9307      	str	r3, [sp, #28]
 801999c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801999e:	685f      	ldr	r7, [r3, #4]
 80199a0:	3704      	adds	r7, #4
 80199a2:	9b08      	ldr	r3, [sp, #32]
 80199a4:	2b00      	cmp	r3, #0
 80199a6:	dc03      	bgt.n	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80199a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80199aa:	2b00      	cmp	r3, #0
 80199ac:	f340 81b2 	ble.w	8019d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80199b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80199b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80199b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80199ba:	1e48      	subs	r0, r1, #1
 80199bc:	f102 3cff 	add.w	ip, r2, #4294967295
 80199c0:	9b06      	ldr	r3, [sp, #24]
 80199c2:	2b00      	cmp	r3, #0
 80199c4:	f340 80a9 	ble.w	8019b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80199c8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80199cc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80199d0:	d406      	bmi.n	80199e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80199d2:	4586      	cmp	lr, r0
 80199d4:	da04      	bge.n	80199e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80199d6:	2b00      	cmp	r3, #0
 80199d8:	db02      	blt.n	80199e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80199da:	4563      	cmp	r3, ip
 80199dc:	f2c0 809e 	blt.w	8019b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80199e0:	f11e 0e01 	adds.w	lr, lr, #1
 80199e4:	f100 808f 	bmi.w	8019b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199e8:	4571      	cmp	r1, lr
 80199ea:	f2c0 808c 	blt.w	8019b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199ee:	3301      	adds	r3, #1
 80199f0:	f100 8089 	bmi.w	8019b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199f4:	429a      	cmp	r2, r3
 80199f6:	f2c0 8086 	blt.w	8019b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199fa:	f8dd b018 	ldr.w	fp, [sp, #24]
 80199fe:	46c8      	mov	r8, r9
 8019a00:	f1bb 0f00 	cmp.w	fp, #0
 8019a04:	f340 80a6 	ble.w	8019b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019a08:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019a0a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019a0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a10:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019a14:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019a18:	1422      	asrs	r2, r4, #16
 8019a1a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019a1e:	689b      	ldr	r3, [r3, #8]
 8019a20:	f100 80e3 	bmi.w	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019a24:	f103 3aff 	add.w	sl, r3, #4294967295
 8019a28:	4552      	cmp	r2, sl
 8019a2a:	f280 80de 	bge.w	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019a2e:	f1bc 0f00 	cmp.w	ip, #0
 8019a32:	f2c0 80da 	blt.w	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019a36:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019a3a:	45d4      	cmp	ip, sl
 8019a3c:	f280 80d5 	bge.w	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019a40:	b21b      	sxth	r3, r3
 8019a42:	9d07      	ldr	r5, [sp, #28]
 8019a44:	fb0c 2203 	mla	r2, ip, r3, r2
 8019a48:	eb05 0a02 	add.w	sl, r5, r2
 8019a4c:	5caa      	ldrb	r2, [r5, r2]
 8019a4e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019a52:	2800      	cmp	r0, #0
 8019a54:	f000 80c0 	beq.w	8019bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019a58:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019a5c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019a60:	920b      	str	r2, [sp, #44]	; 0x2c
 8019a62:	b151      	cbz	r1, 8019a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019a64:	eb0a 0203 	add.w	r2, sl, r3
 8019a68:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019a6c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019a70:	9309      	str	r3, [sp, #36]	; 0x24
 8019a72:	7853      	ldrb	r3, [r2, #1]
 8019a74:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019a78:	930c      	str	r3, [sp, #48]	; 0x30
 8019a7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019a7c:	fb10 f201 	smulbb	r2, r0, r1
 8019a80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a82:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019a86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019a8a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019a8e:	10d2      	asrs	r2, r2, #3
 8019a90:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019a94:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019a98:	ea4c 0c03 	orr.w	ip, ip, r3
 8019a9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019a9e:	041b      	lsls	r3, r3, #16
 8019aa0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019aa4:	432b      	orrs	r3, r5
 8019aa6:	4353      	muls	r3, r2
 8019aa8:	fb0a 330c 	mla	r3, sl, ip, r3
 8019aac:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019ab0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019ab4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019ab8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019abc:	f1c1 0c10 	rsb	ip, r1, #16
 8019ac0:	ebac 0c00 	sub.w	ip, ip, r0
 8019ac4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019ac8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019acc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019ad0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ad2:	0418      	lsls	r0, r3, #16
 8019ad4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019ad8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019adc:	4318      	orrs	r0, r3
 8019ade:	fb02 c200 	mla	r2, r2, r0, ip
 8019ae2:	0d53      	lsrs	r3, r2, #21
 8019ae4:	0952      	lsrs	r2, r2, #5
 8019ae6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019aea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019aee:	431a      	orrs	r2, r3
 8019af0:	f8a8 2000 	strh.w	r2, [r8]
 8019af4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019af6:	f108 0802 	add.w	r8, r8, #2
 8019afa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019afe:	441c      	add	r4, r3
 8019b00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b02:	441e      	add	r6, r3
 8019b04:	e77c      	b.n	8019a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019b06:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019b08:	f109 0902 	add.w	r9, r9, #2
 8019b0c:	441c      	add	r4, r3
 8019b0e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b10:	441e      	add	r6, r3
 8019b12:	9b06      	ldr	r3, [sp, #24]
 8019b14:	3b01      	subs	r3, #1
 8019b16:	9306      	str	r3, [sp, #24]
 8019b18:	e752      	b.n	80199c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019b1a:	d020      	beq.n	8019b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b1c:	9b06      	ldr	r3, [sp, #24]
 8019b1e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019b20:	3b01      	subs	r3, #1
 8019b22:	fb00 4003 	mla	r0, r0, r3, r4
 8019b26:	1400      	asrs	r0, r0, #16
 8019b28:	f53f af67 	bmi.w	80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b2c:	3901      	subs	r1, #1
 8019b2e:	4288      	cmp	r0, r1
 8019b30:	f6bf af63 	bge.w	80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b34:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019b36:	fb01 6303 	mla	r3, r1, r3, r6
 8019b3a:	141b      	asrs	r3, r3, #16
 8019b3c:	f53f af5d 	bmi.w	80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b40:	3a01      	subs	r2, #1
 8019b42:	4293      	cmp	r3, r2
 8019b44:	f6bf af59 	bge.w	80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b48:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019b4c:	46ca      	mov	sl, r9
 8019b4e:	f1b8 0f00 	cmp.w	r8, #0
 8019b52:	dc67      	bgt.n	8019c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019b54:	9b06      	ldr	r3, [sp, #24]
 8019b56:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019b5a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019b5e:	9b08      	ldr	r3, [sp, #32]
 8019b60:	2b00      	cmp	r3, #0
 8019b62:	f340 80d7 	ble.w	8019d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019b66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b6a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019b6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b70:	eeb0 6a62 	vmov.f32	s12, s5
 8019b74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b78:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b80:	ee16 4a10 	vmov	r4, s12
 8019b84:	eeb0 6a43 	vmov.f32	s12, s6
 8019b88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b8c:	ee16 6a10 	vmov	r6, s12
 8019b90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b94:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b98:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ba0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ba4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ba8:	ee12 2a90 	vmov	r2, s5
 8019bac:	eef0 2a47 	vmov.f32	s5, s14
 8019bb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bb4:	ee13 2a10 	vmov	r2, s6
 8019bb8:	931f      	str	r3, [sp, #124]	; 0x7c
 8019bba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019bbc:	eeb0 3a67 	vmov.f32	s6, s15
 8019bc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bc4:	9320      	str	r3, [sp, #128]	; 0x80
 8019bc6:	9b08      	ldr	r3, [sp, #32]
 8019bc8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019bca:	3b01      	subs	r3, #1
 8019bcc:	9308      	str	r3, [sp, #32]
 8019bce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019bd0:	bf08      	it	eq
 8019bd2:	4613      	moveq	r3, r2
 8019bd4:	9306      	str	r3, [sp, #24]
 8019bd6:	e6e4      	b.n	80199a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019bd8:	2900      	cmp	r1, #0
 8019bda:	f43f af4e 	beq.w	8019a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019bde:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019be2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019be6:	9309      	str	r3, [sp, #36]	; 0x24
 8019be8:	e747      	b.n	8019a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019bea:	f112 0a01 	adds.w	sl, r2, #1
 8019bee:	d481      	bmi.n	8019af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bf0:	4553      	cmp	r3, sl
 8019bf2:	f6ff af7f 	blt.w	8019af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bf6:	f11c 0a01 	adds.w	sl, ip, #1
 8019bfa:	f53f af7b 	bmi.w	8019af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bfe:	45d6      	cmp	lr, sl
 8019c00:	f6ff af78 	blt.w	8019af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c04:	b21b      	sxth	r3, r3
 8019c06:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019c0a:	fa0f f28e 	sxth.w	r2, lr
 8019c0e:	9300      	str	r3, [sp, #0]
 8019c10:	463b      	mov	r3, r7
 8019c12:	9201      	str	r2, [sp, #4]
 8019c14:	9a07      	ldr	r2, [sp, #28]
 8019c16:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019c1a:	4641      	mov	r1, r8
 8019c1c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019c1e:	f7ff fe21 	bl	8019864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019c22:	e767      	b.n	8019af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019c26:	1422      	asrs	r2, r4, #16
 8019c28:	1431      	asrs	r1, r6, #16
 8019c2a:	9d07      	ldr	r5, [sp, #28]
 8019c2c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019c30:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019c34:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019c38:	fb03 2101 	mla	r1, r3, r1, r2
 8019c3c:	9a07      	ldr	r2, [sp, #28]
 8019c3e:	440a      	add	r2, r1
 8019c40:	5c69      	ldrb	r1, [r5, r1]
 8019c42:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019c46:	f1be 0f00 	cmp.w	lr, #0
 8019c4a:	d05c      	beq.n	8019d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019c4c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019c50:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019c54:	950d      	str	r5, [sp, #52]	; 0x34
 8019c56:	b150      	cbz	r0, 8019c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019c58:	eb02 0c03 	add.w	ip, r2, r3
 8019c5c:	5cd3      	ldrb	r3, [r2, r3]
 8019c5e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c62:	930a      	str	r3, [sp, #40]	; 0x28
 8019c64:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019c68:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c6c:	930e      	str	r3, [sp, #56]	; 0x38
 8019c6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019c70:	fb1e f200 	smulbb	r2, lr, r0
 8019c74:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019c76:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c7a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019c7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019c82:	10d2      	asrs	r2, r2, #3
 8019c84:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019c88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c8c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019c90:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019c94:	9311      	str	r3, [sp, #68]	; 0x44
 8019c96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c9a:	041b      	lsls	r3, r3, #16
 8019c9c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019ca0:	ea43 030b 	orr.w	r3, r3, fp
 8019ca4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019ca8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019cac:	4353      	muls	r3, r2
 8019cae:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019cb2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019cb6:	ea43 0b01 	orr.w	fp, r3, r1
 8019cba:	f1c0 0110 	rsb	r1, r0, #16
 8019cbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019cc0:	eba1 0e0e 	sub.w	lr, r1, lr
 8019cc4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019cc8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019ccc:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019cd0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019cd4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019cd8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019cdc:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019ce0:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019ce4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019ce8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019cec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019cf0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019cf4:	ea43 0c0c 	orr.w	ip, r3, ip
 8019cf8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019cfa:	441c      	add	r4, r3
 8019cfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019cfe:	f82a cb02 	strh.w	ip, [sl], #2
 8019d02:	441e      	add	r6, r3
 8019d04:	e723      	b.n	8019b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019d06:	2800      	cmp	r0, #0
 8019d08:	d0b1      	beq.n	8019c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d0a:	5cd3      	ldrb	r3, [r2, r3]
 8019d0c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d10:	930a      	str	r3, [sp, #40]	; 0x28
 8019d12:	e7ac      	b.n	8019c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d14:	b013      	add	sp, #76	; 0x4c
 8019d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019d1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d1e:	880d      	ldrh	r5, [r1, #0]
 8019d20:	b087      	sub	sp, #28
 8019d22:	10ef      	asrs	r7, r5, #3
 8019d24:	9103      	str	r1, [sp, #12]
 8019d26:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019d2a:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019d2e:	00ed      	lsls	r5, r5, #3
 8019d30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d34:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019d38:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019d3c:	b2ed      	uxtb	r5, r5
 8019d3e:	9701      	str	r7, [sp, #4]
 8019d40:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019d44:	9502      	str	r5, [sp, #8]
 8019d46:	9d01      	ldr	r5, [sp, #4]
 8019d48:	9902      	ldr	r1, [sp, #8]
 8019d4a:	022d      	lsls	r5, r5, #8
 8019d4c:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019d50:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019d54:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019d58:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019d5c:	430d      	orrs	r5, r1
 8019d5e:	fb06 0709 	mla	r7, r6, r9, r0
 8019d62:	2e00      	cmp	r6, #0
 8019d64:	9505      	str	r5, [sp, #20]
 8019d66:	eb02 0c07 	add.w	ip, r2, r7
 8019d6a:	f2c0 80b6 	blt.w	8019eda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019d6e:	45b3      	cmp	fp, r6
 8019d70:	f340 80b3 	ble.w	8019eda <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019d74:	2800      	cmp	r0, #0
 8019d76:	f2c0 80ae 	blt.w	8019ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019d7a:	4581      	cmp	r9, r0
 8019d7c:	f340 80ab 	ble.w	8019ed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019d80:	5dd7      	ldrb	r7, [r2, r7]
 8019d82:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019d86:	441f      	add	r7, r3
 8019d88:	1c42      	adds	r2, r0, #1
 8019d8a:	f100 80a9 	bmi.w	8019ee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d8e:	4591      	cmp	r9, r2
 8019d90:	f340 80a6 	ble.w	8019ee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d94:	2c00      	cmp	r4, #0
 8019d96:	f000 80a3 	beq.w	8019ee0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019d9a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019d9e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019da2:	441d      	add	r5, r3
 8019da4:	3601      	adds	r6, #1
 8019da6:	f100 809f 	bmi.w	8019ee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019daa:	45b3      	cmp	fp, r6
 8019dac:	f340 809c 	ble.w	8019ee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019db0:	f1be 0f00 	cmp.w	lr, #0
 8019db4:	f000 8098 	beq.w	8019ee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019db8:	2800      	cmp	r0, #0
 8019dba:	f2c0 8093 	blt.w	8019ee4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019dbe:	4581      	cmp	r9, r0
 8019dc0:	f340 8090 	ble.w	8019ee4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019dc4:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019dc8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019dcc:	441e      	add	r6, r3
 8019dce:	3001      	adds	r0, #1
 8019dd0:	f100 808d 	bmi.w	8019eee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019dd4:	4581      	cmp	r9, r0
 8019dd6:	f340 808a 	ble.w	8019eee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019dda:	2c00      	cmp	r4, #0
 8019ddc:	f000 8087 	beq.w	8019eee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019de0:	44e1      	add	r9, ip
 8019de2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019de6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019dea:	4413      	add	r3, r2
 8019dec:	b2a4      	uxth	r4, r4
 8019dee:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019df2:	fa1f fe8e 	uxth.w	lr, lr
 8019df6:	9901      	ldr	r1, [sp, #4]
 8019df8:	fb04 fb0e 	mul.w	fp, r4, lr
 8019dfc:	0124      	lsls	r4, r4, #4
 8019dfe:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019e02:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019e06:	eba4 040b 	sub.w	r4, r4, fp
 8019e0a:	fa1f f08e 	uxth.w	r0, lr
 8019e0e:	b2a2      	uxth	r2, r4
 8019e10:	78ac      	ldrb	r4, [r5, #2]
 8019e12:	eba9 0900 	sub.w	r9, r9, r0
 8019e16:	fa1f fe88 	uxth.w	lr, r8
 8019e1a:	4354      	muls	r4, r2
 8019e1c:	ea6f 0808 	mvn.w	r8, r8
 8019e20:	fa1f f989 	uxth.w	r9, r9
 8019e24:	fa5f f888 	uxtb.w	r8, r8
 8019e28:	fb09 440c 	mla	r4, r9, ip, r4
 8019e2c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019e30:	fb1a fa08 	smulbb	sl, sl, r8
 8019e34:	fb00 440c 	mla	r4, r0, ip, r4
 8019e38:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019e3c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019e40:	787c      	ldrb	r4, [r7, #1]
 8019e42:	783f      	ldrb	r7, [r7, #0]
 8019e44:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019e48:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019e4c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019e50:	782d      	ldrb	r5, [r5, #0]
 8019e52:	fb02 fa0a 	mul.w	sl, r2, sl
 8019e56:	fa1f fc8c 	uxth.w	ip, ip
 8019e5a:	436a      	muls	r2, r5
 8019e5c:	7835      	ldrb	r5, [r6, #0]
 8019e5e:	fb09 aa04 	mla	sl, r9, r4, sl
 8019e62:	7874      	ldrb	r4, [r6, #1]
 8019e64:	fb09 2207 	mla	r2, r9, r7, r2
 8019e68:	fb00 aa04 	mla	sl, r0, r4, sl
 8019e6c:	785c      	ldrb	r4, [r3, #1]
 8019e6e:	fb00 2005 	mla	r0, r0, r5, r2
 8019e72:	781b      	ldrb	r3, [r3, #0]
 8019e74:	fb0b a404 	mla	r4, fp, r4, sl
 8019e78:	fb11 fa08 	smulbb	sl, r1, r8
 8019e7c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019e80:	9b02      	ldr	r3, [sp, #8]
 8019e82:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019e86:	fb13 f808 	smulbb	r8, r3, r8
 8019e8a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019e8e:	fb04 a40e 	mla	r4, r4, lr, sl
 8019e92:	f10c 0301 	add.w	r3, ip, #1
 8019e96:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019e9a:	b2a4      	uxth	r4, r4
 8019e9c:	fa1f fe8e 	uxth.w	lr, lr
 8019ea0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019ea4:	f104 0a01 	add.w	sl, r4, #1
 8019ea8:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019eac:	f10e 0c01 	add.w	ip, lr, #1
 8019eb0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019eb4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019eb8:	0964      	lsrs	r4, r4, #5
 8019eba:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019ebe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019ec2:	ea4c 0c03 	orr.w	ip, ip, r3
 8019ec6:	9b03      	ldr	r3, [sp, #12]
 8019ec8:	ea4c 0c04 	orr.w	ip, ip, r4
 8019ecc:	f8a3 c000 	strh.w	ip, [r3]
 8019ed0:	b007      	add	sp, #28
 8019ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ed6:	af05      	add	r7, sp, #20
 8019ed8:	e756      	b.n	8019d88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019eda:	ad05      	add	r5, sp, #20
 8019edc:	462f      	mov	r7, r5
 8019ede:	e761      	b.n	8019da4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019ee0:	ad05      	add	r5, sp, #20
 8019ee2:	e75f      	b.n	8019da4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019ee4:	ae05      	add	r6, sp, #20
 8019ee6:	e772      	b.n	8019dce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019ee8:	ab05      	add	r3, sp, #20
 8019eea:	461e      	mov	r6, r3
 8019eec:	e77e      	b.n	8019dec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019eee:	ab05      	add	r3, sp, #20
 8019ef0:	e77c      	b.n	8019dec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ef6:	b095      	sub	sp, #84	; 0x54
 8019ef8:	9212      	str	r2, [sp, #72]	; 0x48
 8019efa:	9309      	str	r3, [sp, #36]	; 0x24
 8019efc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019efe:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019f02:	9013      	str	r0, [sp, #76]	; 0x4c
 8019f04:	930f      	str	r3, [sp, #60]	; 0x3c
 8019f06:	6850      	ldr	r0, [r2, #4]
 8019f08:	910e      	str	r1, [sp, #56]	; 0x38
 8019f0a:	6812      	ldr	r2, [r2, #0]
 8019f0c:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019f10:	fb00 1303 	mla	r3, r0, r3, r1
 8019f14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019f18:	930a      	str	r3, [sp, #40]	; 0x28
 8019f1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019f1c:	681b      	ldr	r3, [r3, #0]
 8019f1e:	930d      	str	r3, [sp, #52]	; 0x34
 8019f20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019f22:	685c      	ldr	r4, [r3, #4]
 8019f24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019f26:	3404      	adds	r4, #4
 8019f28:	43db      	mvns	r3, r3
 8019f2a:	b2db      	uxtb	r3, r3
 8019f2c:	930b      	str	r3, [sp, #44]	; 0x2c
 8019f2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f30:	2b00      	cmp	r3, #0
 8019f32:	dc03      	bgt.n	8019f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019f34:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019f36:	2b00      	cmp	r3, #0
 8019f38:	f340 8255 	ble.w	801a3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019f3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019f3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f42:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019f46:	1e48      	subs	r0, r1, #1
 8019f48:	1e55      	subs	r5, r2, #1
 8019f4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f4c:	2b00      	cmp	r3, #0
 8019f4e:	f340 80f9 	ble.w	801a144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019f52:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019f54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019f56:	1436      	asrs	r6, r6, #16
 8019f58:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019f5c:	d406      	bmi.n	8019f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f5e:	4286      	cmp	r6, r0
 8019f60:	da04      	bge.n	8019f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f62:	2b00      	cmp	r3, #0
 8019f64:	db02      	blt.n	8019f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019f66:	42ab      	cmp	r3, r5
 8019f68:	f2c0 80ed 	blt.w	801a146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019f6c:	3601      	adds	r6, #1
 8019f6e:	f100 80da 	bmi.w	801a126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f72:	42b1      	cmp	r1, r6
 8019f74:	f2c0 80d7 	blt.w	801a126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f78:	3301      	adds	r3, #1
 8019f7a:	f100 80d4 	bmi.w	801a126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f7e:	429a      	cmp	r2, r3
 8019f80:	f2c0 80d1 	blt.w	801a126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019f84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f86:	9311      	str	r3, [sp, #68]	; 0x44
 8019f88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f8a:	930c      	str	r3, [sp, #48]	; 0x30
 8019f8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019f8e:	2b00      	cmp	r3, #0
 8019f90:	f340 80fa 	ble.w	801a188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019f94:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019f96:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019f98:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019f9a:	68c6      	ldr	r6, [r0, #12]
 8019f9c:	141d      	asrs	r5, r3, #16
 8019f9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019fa0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019fa4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fa6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019fa8:	1400      	asrs	r0, r0, #16
 8019faa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019fae:	6892      	ldr	r2, [r2, #8]
 8019fb0:	f100 813e 	bmi.w	801a230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019fb4:	1e57      	subs	r7, r2, #1
 8019fb6:	42b8      	cmp	r0, r7
 8019fb8:	f280 813a 	bge.w	801a230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019fbc:	2d00      	cmp	r5, #0
 8019fbe:	f2c0 8137 	blt.w	801a230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019fc2:	1e77      	subs	r7, r6, #1
 8019fc4:	42bd      	cmp	r5, r7
 8019fc6:	f280 8133 	bge.w	801a230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019fca:	b212      	sxth	r2, r2
 8019fcc:	fb05 0002 	mla	r0, r5, r2, r0
 8019fd0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019fd2:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019fd6:	182e      	adds	r6, r5, r0
 8019fd8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019fdc:	eb04 050a 	add.w	r5, r4, sl
 8019fe0:	2b00      	cmp	r3, #0
 8019fe2:	f000 8117 	beq.w	801a214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019fe6:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019fea:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019fee:	44a4      	add	ip, r4
 8019ff0:	2900      	cmp	r1, #0
 8019ff2:	f000 8117 	beq.w	801a224 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019ff6:	18b0      	adds	r0, r6, r2
 8019ff8:	5cb2      	ldrb	r2, [r6, r2]
 8019ffa:	7840      	ldrb	r0, [r0, #1]
 8019ffc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a000:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a004:	4422      	add	r2, r4
 801a006:	4420      	add	r0, r4
 801a008:	b29b      	uxth	r3, r3
 801a00a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a00e:	b289      	uxth	r1, r1
 801a010:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a014:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a016:	fb03 f901 	mul.w	r9, r3, r1
 801a01a:	011b      	lsls	r3, r3, #4
 801a01c:	f8b6 e000 	ldrh.w	lr, [r6]
 801a020:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a024:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a028:	eba3 0309 	sub.w	r3, r3, r9
 801a02c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a030:	b289      	uxth	r1, r1
 801a032:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a036:	b29b      	uxth	r3, r3
 801a038:	eba8 0801 	sub.w	r8, r8, r1
 801a03c:	435f      	muls	r7, r3
 801a03e:	fa1f f888 	uxth.w	r8, r8
 801a042:	9310      	str	r3, [sp, #64]	; 0x40
 801a044:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a046:	fb08 770b 	mla	r7, r8, fp, r7
 801a04a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a04e:	fb01 770b 	mla	r7, r1, fp, r7
 801a052:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a056:	fb09 770b 	mla	r7, r9, fp, r7
 801a05a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a05e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a062:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a066:	fb1b fb03 	smulbb	fp, fp, r3
 801a06a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a06c:	fb07 b706 	mla	r7, r7, r6, fp
 801a070:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a074:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a078:	f89c c000 	ldrb.w	ip, [ip]
 801a07c:	b2bf      	uxth	r7, r7
 801a07e:	435d      	muls	r5, r3
 801a080:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a082:	fb08 550b 	mla	r5, r8, fp, r5
 801a086:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a08a:	fb01 550b 	mla	r5, r1, fp, r5
 801a08e:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a092:	fb09 550b 	mla	r5, r9, fp, r5
 801a096:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a09a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a09e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a0a2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a0a6:	fa5f fe8e 	uxtb.w	lr, lr
 801a0aa:	fb1b fb03 	smulbb	fp, fp, r3
 801a0ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0b0:	fb03 f30c 	mul.w	r3, r3, ip
 801a0b4:	f892 c000 	ldrb.w	ip, [r2]
 801a0b8:	fb05 b506 	mla	r5, r5, r6, fp
 801a0bc:	fb08 330a 	mla	r3, r8, sl, r3
 801a0c0:	b2ad      	uxth	r5, r5
 801a0c2:	fb01 330c 	mla	r3, r1, ip, r3
 801a0c6:	f890 c000 	ldrb.w	ip, [r0]
 801a0ca:	f105 0b01 	add.w	fp, r5, #1
 801a0ce:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a0d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a0d4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a0d8:	fb1e fe03 	smulbb	lr, lr, r3
 801a0dc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a0e0:	1c7b      	adds	r3, r7, #1
 801a0e2:	096d      	lsrs	r5, r5, #5
 801a0e4:	fb0c e606 	mla	r6, ip, r6, lr
 801a0e8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a0ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a0f0:	b2b6      	uxth	r6, r6
 801a0f2:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a0f6:	1c77      	adds	r7, r6, #1
 801a0f8:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a0fc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a100:	431f      	orrs	r7, r3
 801a102:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a104:	433d      	orrs	r5, r7
 801a106:	801d      	strh	r5, [r3, #0]
 801a108:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a10a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a10c:	3302      	adds	r3, #2
 801a10e:	930c      	str	r3, [sp, #48]	; 0x30
 801a110:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a112:	4413      	add	r3, r2
 801a114:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a116:	931f      	str	r3, [sp, #124]	; 0x7c
 801a118:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a11a:	4413      	add	r3, r2
 801a11c:	9320      	str	r3, [sp, #128]	; 0x80
 801a11e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a120:	3b01      	subs	r3, #1
 801a122:	9311      	str	r3, [sp, #68]	; 0x44
 801a124:	e732      	b.n	8019f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a126:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a128:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a12a:	4433      	add	r3, r6
 801a12c:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a12e:	931f      	str	r3, [sp, #124]	; 0x7c
 801a130:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a132:	4433      	add	r3, r6
 801a134:	9320      	str	r3, [sp, #128]	; 0x80
 801a136:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a138:	3b01      	subs	r3, #1
 801a13a:	9309      	str	r3, [sp, #36]	; 0x24
 801a13c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a13e:	3302      	adds	r3, #2
 801a140:	930a      	str	r3, [sp, #40]	; 0x28
 801a142:	e702      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a144:	d027      	beq.n	801a196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a146:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a148:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a14a:	3b01      	subs	r3, #1
 801a14c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a14e:	fb00 5003 	mla	r0, r0, r3, r5
 801a152:	1400      	asrs	r0, r0, #16
 801a154:	f53f af16 	bmi.w	8019f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a158:	3901      	subs	r1, #1
 801a15a:	4288      	cmp	r0, r1
 801a15c:	f6bf af12 	bge.w	8019f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a160:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a162:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a164:	fb01 0303 	mla	r3, r1, r3, r0
 801a168:	141b      	asrs	r3, r3, #16
 801a16a:	f53f af0b 	bmi.w	8019f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a16e:	3a01      	subs	r2, #1
 801a170:	4293      	cmp	r3, r2
 801a172:	f6bf af07 	bge.w	8019f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a176:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a178:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a17c:	9311      	str	r3, [sp, #68]	; 0x44
 801a17e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a180:	930c      	str	r3, [sp, #48]	; 0x30
 801a182:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a184:	2b00      	cmp	r3, #0
 801a186:	dc70      	bgt.n	801a26a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a188:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a18a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a18c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a190:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a194:	930a      	str	r3, [sp, #40]	; 0x28
 801a196:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a198:	2b00      	cmp	r3, #0
 801a19a:	f340 8124 	ble.w	801a3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a19e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a1a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a1a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1ac:	eef0 6a62 	vmov.f32	s13, s5
 801a1b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a1b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1bc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a1c0:	eef0 6a43 	vmov.f32	s13, s6
 801a1c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1c8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a1cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a1d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a1d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1e4:	ee12 2a90 	vmov	r2, s5
 801a1e8:	eef0 2a47 	vmov.f32	s5, s14
 801a1ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1f0:	ee13 2a10 	vmov	r2, s6
 801a1f4:	9321      	str	r3, [sp, #132]	; 0x84
 801a1f6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a1f8:	eeb0 3a67 	vmov.f32	s6, s15
 801a1fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a200:	9322      	str	r3, [sp, #136]	; 0x88
 801a202:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a204:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a206:	3b01      	subs	r3, #1
 801a208:	930e      	str	r3, [sp, #56]	; 0x38
 801a20a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a20c:	bf08      	it	eq
 801a20e:	4613      	moveq	r3, r2
 801a210:	9309      	str	r3, [sp, #36]	; 0x24
 801a212:	e68c      	b.n	8019f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a214:	b149      	cbz	r1, 801a22a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a216:	5cb2      	ldrb	r2, [r6, r2]
 801a218:	4628      	mov	r0, r5
 801a21a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a21e:	4422      	add	r2, r4
 801a220:	46ac      	mov	ip, r5
 801a222:	e6f1      	b.n	801a008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a224:	4628      	mov	r0, r5
 801a226:	462a      	mov	r2, r5
 801a228:	e6ee      	b.n	801a008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a22a:	4628      	mov	r0, r5
 801a22c:	462a      	mov	r2, r5
 801a22e:	e7f7      	b.n	801a220 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a230:	1c47      	adds	r7, r0, #1
 801a232:	f53f af69 	bmi.w	801a108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a236:	42ba      	cmp	r2, r7
 801a238:	f6ff af66 	blt.w	801a108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a23c:	1c6f      	adds	r7, r5, #1
 801a23e:	f53f af63 	bmi.w	801a108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a242:	42be      	cmp	r6, r7
 801a244:	f6ff af60 	blt.w	801a108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a248:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a24a:	b236      	sxth	r6, r6
 801a24c:	b212      	sxth	r2, r2
 801a24e:	9002      	str	r0, [sp, #8]
 801a250:	9601      	str	r6, [sp, #4]
 801a252:	9200      	str	r2, [sp, #0]
 801a254:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a256:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a25a:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a25e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a262:	4623      	mov	r3, r4
 801a264:	f7ff fd59 	bl	8019d1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a268:	e74e      	b.n	801a108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a26a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a26c:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a26e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a272:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a274:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a276:	1400      	asrs	r0, r0, #16
 801a278:	142d      	asrs	r5, r5, #16
 801a27a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a27c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a280:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a284:	fb02 5000 	mla	r0, r2, r0, r5
 801a288:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a28a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a28e:	182e      	adds	r6, r5, r0
 801a290:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a294:	eb04 0509 	add.w	r5, r4, r9
 801a298:	2b00      	cmp	r3, #0
 801a29a:	f000 8096 	beq.w	801a3ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a29e:	7877      	ldrb	r7, [r6, #1]
 801a2a0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a2a4:	4427      	add	r7, r4
 801a2a6:	2900      	cmp	r1, #0
 801a2a8:	f000 8097 	beq.w	801a3da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a2ac:	18b0      	adds	r0, r6, r2
 801a2ae:	5cb2      	ldrb	r2, [r6, r2]
 801a2b0:	7840      	ldrb	r0, [r0, #1]
 801a2b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a2b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a2ba:	4422      	add	r2, r4
 801a2bc:	4420      	add	r0, r4
 801a2be:	b29b      	uxth	r3, r3
 801a2c0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a2c2:	b289      	uxth	r1, r1
 801a2c4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a2c8:	f8b6 c000 	ldrh.w	ip, [r6]
 801a2cc:	fb03 f801 	mul.w	r8, r3, r1
 801a2d0:	011b      	lsls	r3, r3, #4
 801a2d2:	78be      	ldrb	r6, [r7, #2]
 801a2d4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a2d8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a2dc:	eba3 0308 	sub.w	r3, r3, r8
 801a2e0:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a2e4:	b289      	uxth	r1, r1
 801a2e6:	b29b      	uxth	r3, r3
 801a2e8:	ebae 0e01 	sub.w	lr, lr, r1
 801a2ec:	435e      	muls	r6, r3
 801a2ee:	fa1f fe8e 	uxth.w	lr, lr
 801a2f2:	9310      	str	r3, [sp, #64]	; 0x40
 801a2f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a2f6:	fb0e 660b 	mla	r6, lr, fp, r6
 801a2fa:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a2fe:	fb01 660b 	mla	r6, r1, fp, r6
 801a302:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a306:	fb08 660b 	mla	r6, r8, fp, r6
 801a30a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a30e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a312:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a316:	fb1b fb03 	smulbb	fp, fp, r3
 801a31a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a31c:	fb06 b60a 	mla	r6, r6, sl, fp
 801a320:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a324:	787d      	ldrb	r5, [r7, #1]
 801a326:	783f      	ldrb	r7, [r7, #0]
 801a328:	b2b6      	uxth	r6, r6
 801a32a:	435d      	muls	r5, r3
 801a32c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a32e:	fb0e 550b 	mla	r5, lr, fp, r5
 801a332:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a336:	fb01 550b 	mla	r5, r1, fp, r5
 801a33a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a33e:	fb08 550b 	mla	r5, r8, fp, r5
 801a342:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a346:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a34a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a34e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a352:	fa5f fc8c 	uxtb.w	ip, ip
 801a356:	fb1b fb03 	smulbb	fp, fp, r3
 801a35a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a35c:	437b      	muls	r3, r7
 801a35e:	7817      	ldrb	r7, [r2, #0]
 801a360:	fb05 b50a 	mla	r5, r5, sl, fp
 801a364:	fb0e 3309 	mla	r3, lr, r9, r3
 801a368:	b2ad      	uxth	r5, r5
 801a36a:	fb01 3307 	mla	r3, r1, r7, r3
 801a36e:	7807      	ldrb	r7, [r0, #0]
 801a370:	f105 0b01 	add.w	fp, r5, #1
 801a374:	fb08 3707 	mla	r7, r8, r7, r3
 801a378:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a37a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a37e:	fb1c fc03 	smulbb	ip, ip, r3
 801a382:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a386:	1c73      	adds	r3, r6, #1
 801a388:	096d      	lsrs	r5, r5, #5
 801a38a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a38e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a392:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a396:	b2bf      	uxth	r7, r7
 801a398:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a39a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a39e:	1c7a      	adds	r2, r7, #1
 801a3a0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a3a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a3a8:	4316      	orrs	r6, r2
 801a3aa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a3ac:	432e      	orrs	r6, r5
 801a3ae:	f823 6b02 	strh.w	r6, [r3], #2
 801a3b2:	930c      	str	r3, [sp, #48]	; 0x30
 801a3b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a3b6:	4413      	add	r3, r2
 801a3b8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a3ba:	931f      	str	r3, [sp, #124]	; 0x7c
 801a3bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a3be:	4413      	add	r3, r2
 801a3c0:	9320      	str	r3, [sp, #128]	; 0x80
 801a3c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a3c4:	3b01      	subs	r3, #1
 801a3c6:	9311      	str	r3, [sp, #68]	; 0x44
 801a3c8:	e6db      	b.n	801a182 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a3ca:	b149      	cbz	r1, 801a3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a3cc:	5cb2      	ldrb	r2, [r6, r2]
 801a3ce:	4628      	mov	r0, r5
 801a3d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a3d4:	4422      	add	r2, r4
 801a3d6:	462f      	mov	r7, r5
 801a3d8:	e771      	b.n	801a2be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a3da:	4628      	mov	r0, r5
 801a3dc:	462a      	mov	r2, r5
 801a3de:	e76e      	b.n	801a2be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a3e0:	4628      	mov	r0, r5
 801a3e2:	462a      	mov	r2, r5
 801a3e4:	e7f7      	b.n	801a3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a3e6:	b015      	add	sp, #84	; 0x54
 801a3e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a3ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a3ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3f0:	880f      	ldrh	r7, [r1, #0]
 801a3f2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a3f6:	023c      	lsls	r4, r7, #8
 801a3f8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a3fc:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a400:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a404:	017c      	lsls	r4, r7, #5
 801a406:	00ff      	lsls	r7, r7, #3
 801a408:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a40c:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a410:	b2ff      	uxtb	r7, r7
 801a412:	ea4b 0404 	orr.w	r4, fp, r4
 801a416:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a41a:	4327      	orrs	r7, r4
 801a41c:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a420:	2d00      	cmp	r5, #0
 801a422:	9701      	str	r7, [sp, #4]
 801a424:	eb02 080a 	add.w	r8, r2, sl
 801a428:	db7e      	blt.n	801a528 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a42a:	45a9      	cmp	r9, r5
 801a42c:	dd7c      	ble.n	801a528 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a42e:	f1bc 0f00 	cmp.w	ip, #0
 801a432:	db77      	blt.n	801a524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a434:	45e6      	cmp	lr, ip
 801a436:	dd75      	ble.n	801a524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a438:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a43c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a440:	441f      	add	r7, r3
 801a442:	f11c 0201 	adds.w	r2, ip, #1
 801a446:	d472      	bmi.n	801a52e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a448:	4596      	cmp	lr, r2
 801a44a:	dd70      	ble.n	801a52e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a44c:	2800      	cmp	r0, #0
 801a44e:	d06e      	beq.n	801a52e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a450:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a454:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a458:	441c      	add	r4, r3
 801a45a:	3501      	adds	r5, #1
 801a45c:	d46b      	bmi.n	801a536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a45e:	45a9      	cmp	r9, r5
 801a460:	dd69      	ble.n	801a536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a462:	2e00      	cmp	r6, #0
 801a464:	d067      	beq.n	801a536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a466:	f1bc 0f00 	cmp.w	ip, #0
 801a46a:	db62      	blt.n	801a532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a46c:	45e6      	cmp	lr, ip
 801a46e:	dd60      	ble.n	801a532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a470:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a474:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a478:	441d      	add	r5, r3
 801a47a:	f11c 0201 	adds.w	r2, ip, #1
 801a47e:	d45d      	bmi.n	801a53c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a480:	4596      	cmp	lr, r2
 801a482:	dd5b      	ble.n	801a53c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a484:	2800      	cmp	r0, #0
 801a486:	d059      	beq.n	801a53c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a488:	44c6      	add	lr, r8
 801a48a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a48e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a492:	4413      	add	r3, r2
 801a494:	b280      	uxth	r0, r0
 801a496:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a49a:	b2b2      	uxth	r2, r6
 801a49c:	f897 9000 	ldrb.w	r9, [r7]
 801a4a0:	787f      	ldrb	r7, [r7, #1]
 801a4a2:	fb00 f602 	mul.w	r6, r0, r2
 801a4a6:	0100      	lsls	r0, r0, #4
 801a4a8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a4ac:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a4b0:	1b80      	subs	r0, r0, r6
 801a4b2:	fa1f fc82 	uxth.w	ip, r2
 801a4b6:	b282      	uxth	r2, r0
 801a4b8:	78a0      	ldrb	r0, [r4, #2]
 801a4ba:	eba8 080c 	sub.w	r8, r8, ip
 801a4be:	4350      	muls	r0, r2
 801a4c0:	fa1f f888 	uxth.w	r8, r8
 801a4c4:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a4c8:	78a8      	ldrb	r0, [r5, #2]
 801a4ca:	fb0c e000 	mla	r0, ip, r0, lr
 801a4ce:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a4d2:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a4d6:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a4da:	f894 e000 	ldrb.w	lr, [r4]
 801a4de:	fb02 fe0e 	mul.w	lr, r2, lr
 801a4e2:	fb08 e909 	mla	r9, r8, r9, lr
 801a4e6:	f895 e000 	ldrb.w	lr, [r5]
 801a4ea:	fb0c 990e 	mla	r9, ip, lr, r9
 801a4ee:	f893 e000 	ldrb.w	lr, [r3]
 801a4f2:	785b      	ldrb	r3, [r3, #1]
 801a4f4:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a4f8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a4fc:	ea4e 0e00 	orr.w	lr, lr, r0
 801a500:	7860      	ldrb	r0, [r4, #1]
 801a502:	4350      	muls	r0, r2
 801a504:	786a      	ldrb	r2, [r5, #1]
 801a506:	fb08 0007 	mla	r0, r8, r7, r0
 801a50a:	fb0c 0202 	mla	r2, ip, r2, r0
 801a50e:	fb06 2303 	mla	r3, r6, r3, r2
 801a512:	095b      	lsrs	r3, r3, #5
 801a514:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a518:	ea4e 0303 	orr.w	r3, lr, r3
 801a51c:	800b      	strh	r3, [r1, #0]
 801a51e:	b003      	add	sp, #12
 801a520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a524:	af01      	add	r7, sp, #4
 801a526:	e78c      	b.n	801a442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a528:	ac01      	add	r4, sp, #4
 801a52a:	4627      	mov	r7, r4
 801a52c:	e795      	b.n	801a45a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a52e:	ac01      	add	r4, sp, #4
 801a530:	e793      	b.n	801a45a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a532:	ad01      	add	r5, sp, #4
 801a534:	e7a1      	b.n	801a47a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a536:	ab01      	add	r3, sp, #4
 801a538:	461d      	mov	r5, r3
 801a53a:	e7ab      	b.n	801a494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a53c:	ab01      	add	r3, sp, #4
 801a53e:	e7a9      	b.n	801a494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a544:	b08f      	sub	sp, #60	; 0x3c
 801a546:	920c      	str	r2, [sp, #48]	; 0x30
 801a548:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a54a:	900d      	str	r0, [sp, #52]	; 0x34
 801a54c:	910a      	str	r1, [sp, #40]	; 0x28
 801a54e:	6850      	ldr	r0, [r2, #4]
 801a550:	9306      	str	r3, [sp, #24]
 801a552:	6812      	ldr	r2, [r2, #0]
 801a554:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a558:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a55c:	fb00 1303 	mla	r3, r0, r3, r1
 801a560:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a564:	9307      	str	r3, [sp, #28]
 801a566:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a568:	681b      	ldr	r3, [r3, #0]
 801a56a:	9308      	str	r3, [sp, #32]
 801a56c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a56e:	685c      	ldr	r4, [r3, #4]
 801a570:	3404      	adds	r4, #4
 801a572:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a574:	2b00      	cmp	r3, #0
 801a576:	dc03      	bgt.n	801a580 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a578:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a57a:	2b00      	cmp	r3, #0
 801a57c:	f340 81d5 	ble.w	801a92a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801a580:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a582:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a586:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a58a:	1e48      	subs	r0, r1, #1
 801a58c:	1e56      	subs	r6, r2, #1
 801a58e:	9b06      	ldr	r3, [sp, #24]
 801a590:	2b00      	cmp	r3, #0
 801a592:	f340 80b6 	ble.w	801a702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801a596:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a59a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a59e:	d406      	bmi.n	801a5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5a0:	4287      	cmp	r7, r0
 801a5a2:	da04      	bge.n	801a5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5a4:	2b00      	cmp	r3, #0
 801a5a6:	db02      	blt.n	801a5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5a8:	42b3      	cmp	r3, r6
 801a5aa:	f2c0 80ab 	blt.w	801a704 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a5ae:	3701      	adds	r7, #1
 801a5b0:	f100 809c 	bmi.w	801a6ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a5b4:	42b9      	cmp	r1, r7
 801a5b6:	f2c0 8099 	blt.w	801a6ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a5ba:	3301      	adds	r3, #1
 801a5bc:	f100 8096 	bmi.w	801a6ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a5c0:	429a      	cmp	r2, r3
 801a5c2:	f2c0 8093 	blt.w	801a6ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a5c6:	9b06      	ldr	r3, [sp, #24]
 801a5c8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a5ca:	9b07      	ldr	r3, [sp, #28]
 801a5cc:	9309      	str	r3, [sp, #36]	; 0x24
 801a5ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a5d0:	2b00      	cmp	r3, #0
 801a5d2:	f340 80b4 	ble.w	801a73e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a5d6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a5d8:	142e      	asrs	r6, r5, #16
 801a5da:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a5dc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a5e0:	68c7      	ldr	r7, [r0, #12]
 801a5e2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a5e6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a5ea:	6892      	ldr	r2, [r2, #8]
 801a5ec:	f100 80fb 	bmi.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a5f0:	f102 3cff 	add.w	ip, r2, #4294967295
 801a5f4:	4560      	cmp	r0, ip
 801a5f6:	f280 80f6 	bge.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a5fa:	2e00      	cmp	r6, #0
 801a5fc:	f2c0 80f3 	blt.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a600:	f107 3cff 	add.w	ip, r7, #4294967295
 801a604:	4566      	cmp	r6, ip
 801a606:	f280 80ee 	bge.w	801a7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a60a:	b212      	sxth	r2, r2
 801a60c:	fb06 0002 	mla	r0, r6, r2, r0
 801a610:	9e08      	ldr	r6, [sp, #32]
 801a612:	1837      	adds	r7, r6, r0
 801a614:	5c30      	ldrb	r0, [r6, r0]
 801a616:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a61a:	eb04 0c08 	add.w	ip, r4, r8
 801a61e:	2b00      	cmp	r3, #0
 801a620:	f000 80d3 	beq.w	801a7ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801a624:	787e      	ldrb	r6, [r7, #1]
 801a626:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a62a:	4426      	add	r6, r4
 801a62c:	2900      	cmp	r1, #0
 801a62e:	f000 80d4 	beq.w	801a7da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a632:	18b8      	adds	r0, r7, r2
 801a634:	5cba      	ldrb	r2, [r7, r2]
 801a636:	7840      	ldrb	r0, [r0, #1]
 801a638:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a63c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a640:	4422      	add	r2, r4
 801a642:	4420      	add	r0, r4
 801a644:	b29b      	uxth	r3, r3
 801a646:	78b7      	ldrb	r7, [r6, #2]
 801a648:	b289      	uxth	r1, r1
 801a64a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a64e:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a652:	fb03 f901 	mul.w	r9, r3, r1
 801a656:	011b      	lsls	r3, r3, #4
 801a658:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a65c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a660:	eba3 0309 	sub.w	r3, r3, r9
 801a664:	b289      	uxth	r1, r1
 801a666:	b29b      	uxth	r3, r3
 801a668:	ebae 0e01 	sub.w	lr, lr, r1
 801a66c:	435f      	muls	r7, r3
 801a66e:	fa1f fe8e 	uxth.w	lr, lr
 801a672:	fb0e 770a 	mla	r7, lr, sl, r7
 801a676:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a67a:	fb01 770a 	mla	r7, r1, sl, r7
 801a67e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a682:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a686:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a68a:	f896 8000 	ldrb.w	r8, [r6]
 801a68e:	7876      	ldrb	r6, [r6, #1]
 801a690:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a694:	fb03 f808 	mul.w	r8, r3, r8
 801a698:	4373      	muls	r3, r6
 801a69a:	fb0e 8807 	mla	r8, lr, r7, r8
 801a69e:	7817      	ldrb	r7, [r2, #0]
 801a6a0:	fb0e 330c 	mla	r3, lr, ip, r3
 801a6a4:	fb01 8807 	mla	r8, r1, r7, r8
 801a6a8:	7807      	ldrb	r7, [r0, #0]
 801a6aa:	fb09 8707 	mla	r7, r9, r7, r8
 801a6ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a6b2:	ea47 070a 	orr.w	r7, r7, sl
 801a6b6:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a6ba:	fb01 310a 	mla	r1, r1, sl, r3
 801a6be:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a6c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a6c4:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a6c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a6d0:	ea47 070a 	orr.w	r7, r7, sl
 801a6d4:	801f      	strh	r7, [r3, #0]
 801a6d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a6d8:	3302      	adds	r3, #2
 801a6da:	9309      	str	r3, [sp, #36]	; 0x24
 801a6dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a6de:	449b      	add	fp, r3
 801a6e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a6e2:	441d      	add	r5, r3
 801a6e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a6e6:	3b01      	subs	r3, #1
 801a6e8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a6ea:	e770      	b.n	801a5ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a6ec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a6ee:	449b      	add	fp, r3
 801a6f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a6f2:	441d      	add	r5, r3
 801a6f4:	9b06      	ldr	r3, [sp, #24]
 801a6f6:	3b01      	subs	r3, #1
 801a6f8:	9306      	str	r3, [sp, #24]
 801a6fa:	9b07      	ldr	r3, [sp, #28]
 801a6fc:	3302      	adds	r3, #2
 801a6fe:	9307      	str	r3, [sp, #28]
 801a700:	e745      	b.n	801a58e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a702:	d023      	beq.n	801a74c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801a704:	9b06      	ldr	r3, [sp, #24]
 801a706:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a708:	3b01      	subs	r3, #1
 801a70a:	fb00 b003 	mla	r0, r0, r3, fp
 801a70e:	1400      	asrs	r0, r0, #16
 801a710:	f53f af59 	bmi.w	801a5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a714:	3901      	subs	r1, #1
 801a716:	4288      	cmp	r0, r1
 801a718:	f6bf af55 	bge.w	801a5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a71c:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a71e:	fb01 5303 	mla	r3, r1, r3, r5
 801a722:	141b      	asrs	r3, r3, #16
 801a724:	f53f af4f 	bmi.w	801a5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a728:	3a01      	subs	r2, #1
 801a72a:	4293      	cmp	r3, r2
 801a72c:	f6bf af4b 	bge.w	801a5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a730:	9b06      	ldr	r3, [sp, #24]
 801a732:	9309      	str	r3, [sp, #36]	; 0x24
 801a734:	9b07      	ldr	r3, [sp, #28]
 801a736:	930b      	str	r3, [sp, #44]	; 0x2c
 801a738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a73a:	2b00      	cmp	r3, #0
 801a73c:	dc70      	bgt.n	801a820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a73e:	9b06      	ldr	r3, [sp, #24]
 801a740:	9a07      	ldr	r2, [sp, #28]
 801a742:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a746:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a74a:	9307      	str	r3, [sp, #28]
 801a74c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a74e:	2b00      	cmp	r3, #0
 801a750:	f340 80eb 	ble.w	801a92a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801a754:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a758:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a75a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a75e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a762:	eef0 6a62 	vmov.f32	s13, s5
 801a766:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a76a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a76e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a772:	ee16 ba90 	vmov	fp, s13
 801a776:	eef0 6a43 	vmov.f32	s13, s6
 801a77a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a77e:	ee16 5a90 	vmov	r5, s13
 801a782:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a786:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a78a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a78e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a792:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a796:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a79a:	ee12 2a90 	vmov	r2, s5
 801a79e:	eef0 2a47 	vmov.f32	s5, s14
 801a7a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7a6:	ee13 2a10 	vmov	r2, s6
 801a7aa:	931b      	str	r3, [sp, #108]	; 0x6c
 801a7ac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a7ae:	eeb0 3a67 	vmov.f32	s6, s15
 801a7b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7b6:	931c      	str	r3, [sp, #112]	; 0x70
 801a7b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a7ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a7bc:	3b01      	subs	r3, #1
 801a7be:	930a      	str	r3, [sp, #40]	; 0x28
 801a7c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a7c2:	bf08      	it	eq
 801a7c4:	4613      	moveq	r3, r2
 801a7c6:	9306      	str	r3, [sp, #24]
 801a7c8:	e6d3      	b.n	801a572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a7ca:	b149      	cbz	r1, 801a7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a7cc:	5cba      	ldrb	r2, [r7, r2]
 801a7ce:	4660      	mov	r0, ip
 801a7d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a7d4:	4422      	add	r2, r4
 801a7d6:	4666      	mov	r6, ip
 801a7d8:	e734      	b.n	801a644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801a7da:	4660      	mov	r0, ip
 801a7dc:	4662      	mov	r2, ip
 801a7de:	e731      	b.n	801a644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801a7e0:	4660      	mov	r0, ip
 801a7e2:	4662      	mov	r2, ip
 801a7e4:	e7f7      	b.n	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a7e6:	f110 0c01 	adds.w	ip, r0, #1
 801a7ea:	f53f af74 	bmi.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a7ee:	4562      	cmp	r2, ip
 801a7f0:	f6ff af71 	blt.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a7f4:	f116 0c01 	adds.w	ip, r6, #1
 801a7f8:	f53f af6d 	bmi.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a7fc:	4567      	cmp	r7, ip
 801a7fe:	f6ff af6a 	blt.w	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a802:	b23f      	sxth	r7, r7
 801a804:	b212      	sxth	r2, r2
 801a806:	9701      	str	r7, [sp, #4]
 801a808:	9200      	str	r2, [sp, #0]
 801a80a:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a80e:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a812:	4623      	mov	r3, r4
 801a814:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a816:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a81a:	f7ff fde7 	bl	801a3ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a81e:	e75a      	b.n	801a6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801a820:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a822:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a826:	1428      	asrs	r0, r5, #16
 801a828:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a82c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a830:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a834:	fb02 6000 	mla	r0, r2, r0, r6
 801a838:	9e08      	ldr	r6, [sp, #32]
 801a83a:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a83e:	1837      	adds	r7, r6, r0
 801a840:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a844:	eb04 0c08 	add.w	ip, r4, r8
 801a848:	2b00      	cmp	r3, #0
 801a84a:	d060      	beq.n	801a90e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801a84c:	787e      	ldrb	r6, [r7, #1]
 801a84e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a852:	4426      	add	r6, r4
 801a854:	2900      	cmp	r1, #0
 801a856:	d062      	beq.n	801a91e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801a858:	18b8      	adds	r0, r7, r2
 801a85a:	5cba      	ldrb	r2, [r7, r2]
 801a85c:	7840      	ldrb	r0, [r0, #1]
 801a85e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a862:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a866:	4422      	add	r2, r4
 801a868:	4420      	add	r0, r4
 801a86a:	b29b      	uxth	r3, r3
 801a86c:	78b7      	ldrb	r7, [r6, #2]
 801a86e:	b289      	uxth	r1, r1
 801a870:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a874:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a878:	fb03 f901 	mul.w	r9, r3, r1
 801a87c:	011b      	lsls	r3, r3, #4
 801a87e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a882:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a886:	eba3 0309 	sub.w	r3, r3, r9
 801a88a:	b289      	uxth	r1, r1
 801a88c:	b29b      	uxth	r3, r3
 801a88e:	ebae 0e01 	sub.w	lr, lr, r1
 801a892:	435f      	muls	r7, r3
 801a894:	fa1f fe8e 	uxth.w	lr, lr
 801a898:	fb0e 770a 	mla	r7, lr, sl, r7
 801a89c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a8a0:	fb01 770a 	mla	r7, r1, sl, r7
 801a8a4:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a8a8:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a8ac:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a8b0:	f896 8000 	ldrb.w	r8, [r6]
 801a8b4:	7876      	ldrb	r6, [r6, #1]
 801a8b6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a8ba:	fb03 f808 	mul.w	r8, r3, r8
 801a8be:	4373      	muls	r3, r6
 801a8c0:	7856      	ldrb	r6, [r2, #1]
 801a8c2:	fb0e 8807 	mla	r8, lr, r7, r8
 801a8c6:	7817      	ldrb	r7, [r2, #0]
 801a8c8:	fb0e 330c 	mla	r3, lr, ip, r3
 801a8cc:	fb01 8807 	mla	r8, r1, r7, r8
 801a8d0:	7807      	ldrb	r7, [r0, #0]
 801a8d2:	fb01 3306 	mla	r3, r1, r6, r3
 801a8d6:	fb09 8707 	mla	r7, r9, r7, r8
 801a8da:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a8de:	ea47 070a 	orr.w	r7, r7, sl
 801a8e2:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a8e6:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a8ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a8ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8f4:	ea47 070a 	orr.w	r7, r7, sl
 801a8f8:	f823 7b02 	strh.w	r7, [r3], #2
 801a8fc:	930b      	str	r3, [sp, #44]	; 0x2c
 801a8fe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a900:	449b      	add	fp, r3
 801a902:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a904:	441d      	add	r5, r3
 801a906:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a908:	3b01      	subs	r3, #1
 801a90a:	9309      	str	r3, [sp, #36]	; 0x24
 801a90c:	e714      	b.n	801a738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801a90e:	b149      	cbz	r1, 801a924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801a910:	5cba      	ldrb	r2, [r7, r2]
 801a912:	4660      	mov	r0, ip
 801a914:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a918:	4422      	add	r2, r4
 801a91a:	4666      	mov	r6, ip
 801a91c:	e7a5      	b.n	801a86a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a91e:	4660      	mov	r0, ip
 801a920:	4662      	mov	r2, ip
 801a922:	e7a2      	b.n	801a86a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a924:	4660      	mov	r0, ip
 801a926:	4662      	mov	r2, ip
 801a928:	e7f7      	b.n	801a91a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801a92a:	b00f      	add	sp, #60	; 0x3c
 801a92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a930 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a934:	b085      	sub	sp, #20
 801a936:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a93a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a93e:	9102      	str	r1, [sp, #8]
 801a940:	2c00      	cmp	r4, #0
 801a942:	fb04 710c 	mla	r1, r4, ip, r7
 801a946:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a94a:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a94e:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a952:	eb02 0e01 	add.w	lr, r2, r1
 801a956:	f2c0 8122 	blt.w	801ab9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a95a:	45a0      	cmp	r8, r4
 801a95c:	f340 811f 	ble.w	801ab9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a960:	2f00      	cmp	r7, #0
 801a962:	f2c0 811a 	blt.w	801ab9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a966:	45bc      	cmp	ip, r7
 801a968:	f340 8117 	ble.w	801ab9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a96c:	5c52      	ldrb	r2, [r2, r1]
 801a96e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a972:	1c7a      	adds	r2, r7, #1
 801a974:	f100 8116 	bmi.w	801aba4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a978:	4594      	cmp	ip, r2
 801a97a:	f340 8113 	ble.w	801aba4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a97e:	2e00      	cmp	r6, #0
 801a980:	f000 8112 	beq.w	801aba8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a984:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a988:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a98c:	3401      	adds	r4, #1
 801a98e:	f100 810f 	bmi.w	801abb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a992:	45a0      	cmp	r8, r4
 801a994:	f340 810c 	ble.w	801abb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a998:	2800      	cmp	r0, #0
 801a99a:	f000 810c 	beq.w	801abb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a99e:	2f00      	cmp	r7, #0
 801a9a0:	f2c0 8104 	blt.w	801abac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a9a4:	45bc      	cmp	ip, r7
 801a9a6:	f340 8101 	ble.w	801abac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a9aa:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a9ae:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a9b2:	3701      	adds	r7, #1
 801a9b4:	f100 8102 	bmi.w	801abbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a9b8:	45bc      	cmp	ip, r7
 801a9ba:	f340 80ff 	ble.w	801abbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a9be:	2e00      	cmp	r6, #0
 801a9c0:	f000 80fe 	beq.w	801abc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a9c4:	44f4      	add	ip, lr
 801a9c6:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a9ca:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a9ce:	b2b6      	uxth	r6, r6
 801a9d0:	b280      	uxth	r0, r0
 801a9d2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a9d6:	fb00 fe06 	mul.w	lr, r0, r6
 801a9da:	0136      	lsls	r6, r6, #4
 801a9dc:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a9e0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a9e4:	eba6 070e 	sub.w	r7, r6, lr
 801a9e8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a9ec:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a9f0:	b280      	uxth	r0, r0
 801a9f2:	b2bf      	uxth	r7, r7
 801a9f4:	1a1b      	subs	r3, r3, r0
 801a9f6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a9fa:	fb0a f607 	mul.w	r6, sl, r7
 801a9fe:	b29b      	uxth	r3, r3
 801aa00:	fb0b 6603 	mla	r6, fp, r3, r6
 801aa04:	fb00 6609 	mla	r6, r0, r9, r6
 801aa08:	fb0e 6608 	mla	r6, lr, r8, r6
 801aa0c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aa10:	9600      	str	r6, [sp, #0]
 801aa12:	2e00      	cmp	r6, #0
 801aa14:	f000 80be 	beq.w	801ab94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801aa18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aa1c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801aa20:	9e02      	ldr	r6, [sp, #8]
 801aa22:	fb0b fc0c 	mul.w	ip, fp, ip
 801aa26:	fb0b f505 	mul.w	r5, fp, r5
 801aa2a:	8836      	ldrh	r6, [r6, #0]
 801aa2c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801aa30:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aa34:	9501      	str	r5, [sp, #4]
 801aa36:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801aa3a:	44dc      	add	ip, fp
 801aa3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa40:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801aa44:	9503      	str	r5, [sp, #12]
 801aa46:	9d01      	ldr	r5, [sp, #4]
 801aa48:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801aa4c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801aa50:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801aa54:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801aa58:	fb0a fc0c 	mul.w	ip, sl, ip
 801aa5c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801aa60:	fb0a fa01 	mul.w	sl, sl, r1
 801aa64:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801aa68:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aa6c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801aa70:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801aa74:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801aa78:	4465      	add	r5, ip
 801aa7a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aa7e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aa82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa86:	fb09 fc0c 	mul.w	ip, r9, ip
 801aa8a:	0a2d      	lsrs	r5, r5, #8
 801aa8c:	fb09 f904 	mul.w	r9, r9, r4
 801aa90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa94:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801aa98:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801aa9c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801aaa0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aaa4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801aaa8:	437d      	muls	r5, r7
 801aaaa:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801aaae:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801aab2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801aab6:	4461      	add	r1, ip
 801aab8:	fb08 f404 	mul.w	r4, r8, r4
 801aabc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aac0:	fb08 f802 	mul.w	r8, r8, r2
 801aac4:	0a09      	lsrs	r1, r1, #8
 801aac6:	0a22      	lsrs	r2, r4, #8
 801aac8:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801aacc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801aad0:	fb07 f70a 	mul.w	r7, r7, sl
 801aad4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801aad8:	4414      	add	r4, r2
 801aada:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801aade:	0a24      	lsrs	r4, r4, #8
 801aae0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801aae4:	9a03      	ldr	r2, [sp, #12]
 801aae6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801aaea:	fb02 5503 	mla	r5, r2, r3, r5
 801aaee:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801aaf2:	9a00      	ldr	r2, [sp, #0]
 801aaf4:	fb04 540e 	mla	r4, r4, lr, r5
 801aaf8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801aafc:	1235      	asrs	r5, r6, #8
 801aafe:	fb01 4100 	mla	r1, r1, r0, r4
 801ab02:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ab06:	0a09      	lsrs	r1, r1, #8
 801ab08:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ab0c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ab10:	fb03 7101 	mla	r1, r3, r1, r7
 801ab14:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ab18:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ab1c:	fb00 e101 	mla	r1, r0, r1, lr
 801ab20:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ab24:	b287      	uxth	r7, r0
 801ab26:	0a09      	lsrs	r1, r1, #8
 801ab28:	437a      	muls	r2, r7
 801ab2a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ab2e:	1c53      	adds	r3, r2, #1
 801ab30:	4321      	orrs	r1, r4
 801ab32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ab36:	0c0a      	lsrs	r2, r1, #16
 801ab38:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ab3c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ab40:	b2c8      	uxtb	r0, r1
 801ab42:	fb12 f207 	smulbb	r2, r2, r7
 801ab46:	fb14 f407 	smulbb	r4, r4, r7
 801ab4a:	b2db      	uxtb	r3, r3
 801ab4c:	fb10 f007 	smulbb	r0, r0, r7
 801ab50:	fb05 2503 	mla	r5, r5, r3, r2
 801ab54:	10f2      	asrs	r2, r6, #3
 801ab56:	00f6      	lsls	r6, r6, #3
 801ab58:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ab5c:	b2ad      	uxth	r5, r5
 801ab5e:	b2f6      	uxtb	r6, r6
 801ab60:	fb02 4203 	mla	r2, r2, r3, r4
 801ab64:	fb06 0303 	mla	r3, r6, r3, r0
 801ab68:	b294      	uxth	r4, r2
 801ab6a:	b299      	uxth	r1, r3
 801ab6c:	1c6b      	adds	r3, r5, #1
 801ab6e:	1c62      	adds	r2, r4, #1
 801ab70:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ab74:	1c4b      	adds	r3, r1, #1
 801ab76:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ab7a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ab7e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ab82:	0952      	lsrs	r2, r2, #5
 801ab84:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ab88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab8c:	432b      	orrs	r3, r5
 801ab8e:	4313      	orrs	r3, r2
 801ab90:	9a02      	ldr	r2, [sp, #8]
 801ab92:	8013      	strh	r3, [r2, #0]
 801ab94:	b005      	add	sp, #20
 801ab96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab9a:	2500      	movs	r5, #0
 801ab9c:	e6e9      	b.n	801a972 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ab9e:	2100      	movs	r1, #0
 801aba0:	460d      	mov	r5, r1
 801aba2:	e6f3      	b.n	801a98c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aba4:	2100      	movs	r1, #0
 801aba6:	e6f1      	b.n	801a98c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aba8:	4631      	mov	r1, r6
 801abaa:	e6ef      	b.n	801a98c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801abac:	2400      	movs	r4, #0
 801abae:	e700      	b.n	801a9b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801abb0:	2200      	movs	r2, #0
 801abb2:	4614      	mov	r4, r2
 801abb4:	e70b      	b.n	801a9ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801abb6:	4602      	mov	r2, r0
 801abb8:	4604      	mov	r4, r0
 801abba:	e708      	b.n	801a9ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801abbc:	2200      	movs	r2, #0
 801abbe:	e706      	b.n	801a9ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801abc0:	4632      	mov	r2, r6
 801abc2:	e704      	b.n	801a9ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801abc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abc8:	b09f      	sub	sp, #124	; 0x7c
 801abca:	921b      	str	r2, [sp, #108]	; 0x6c
 801abcc:	9309      	str	r3, [sp, #36]	; 0x24
 801abce:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801abd0:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801abd4:	901d      	str	r0, [sp, #116]	; 0x74
 801abd6:	931c      	str	r3, [sp, #112]	; 0x70
 801abd8:	6850      	ldr	r0, [r2, #4]
 801abda:	9119      	str	r1, [sp, #100]	; 0x64
 801abdc:	6812      	ldr	r2, [r2, #0]
 801abde:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801abe0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801abe4:	fb00 1303 	mla	r3, r0, r3, r1
 801abe8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801abec:	930c      	str	r3, [sp, #48]	; 0x30
 801abee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801abf0:	681b      	ldr	r3, [r3, #0]
 801abf2:	9312      	str	r3, [sp, #72]	; 0x48
 801abf4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801abf6:	685e      	ldr	r6, [r3, #4]
 801abf8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801abfc:	3604      	adds	r6, #4
 801abfe:	930d      	str	r3, [sp, #52]	; 0x34
 801ac00:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ac02:	2b00      	cmp	r3, #0
 801ac04:	dc03      	bgt.n	801ac0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ac06:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ac08:	2b00      	cmp	r3, #0
 801ac0a:	f340 8387 	ble.w	801b31c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801ac0e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac18:	1e48      	subs	r0, r1, #1
 801ac1a:	1e57      	subs	r7, r2, #1
 801ac1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac1e:	2b00      	cmp	r3, #0
 801ac20:	f340 8194 	ble.w	801af4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801ac24:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ac26:	142b      	asrs	r3, r5, #16
 801ac28:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ac2c:	d406      	bmi.n	801ac3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac2e:	4584      	cmp	ip, r0
 801ac30:	da04      	bge.n	801ac3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac32:	2b00      	cmp	r3, #0
 801ac34:	db02      	blt.n	801ac3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac36:	42bb      	cmp	r3, r7
 801ac38:	f2c0 8189 	blt.w	801af4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ac3c:	f11c 0c01 	adds.w	ip, ip, #1
 801ac40:	f100 8177 	bmi.w	801af32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ac44:	4561      	cmp	r1, ip
 801ac46:	f2c0 8174 	blt.w	801af32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ac4a:	3301      	adds	r3, #1
 801ac4c:	f100 8171 	bmi.w	801af32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ac50:	429a      	cmp	r2, r3
 801ac52:	f2c0 816e 	blt.w	801af32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ac56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac58:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ac5a:	931a      	str	r3, [sp, #104]	; 0x68
 801ac5c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ac5e:	2b00      	cmp	r3, #0
 801ac60:	f340 8193 	ble.w	801af8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801ac64:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ac66:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ac6a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ac6e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ac72:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac74:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ac78:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ac7a:	141b      	asrs	r3, r3, #16
 801ac7c:	f100 81d6 	bmi.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac80:	f100 38ff 	add.w	r8, r0, #4294967295
 801ac84:	4543      	cmp	r3, r8
 801ac86:	f280 81d1 	bge.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac8a:	f1bc 0f00 	cmp.w	ip, #0
 801ac8e:	f2c0 81cd 	blt.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac92:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ac96:	45c4      	cmp	ip, r8
 801ac98:	f280 81c8 	bge.w	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ac9c:	b200      	sxth	r0, r0
 801ac9e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aca0:	fb0c 3300 	mla	r3, ip, r0, r3
 801aca4:	eb04 0803 	add.w	r8, r4, r3
 801aca8:	5ce3      	ldrb	r3, [r4, r3]
 801acaa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801acae:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801acb2:	2a00      	cmp	r2, #0
 801acb4:	f000 81af 	beq.w	801b016 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801acb8:	f898 c001 	ldrb.w	ip, [r8, #1]
 801acbc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801acc0:	940e      	str	r4, [sp, #56]	; 0x38
 801acc2:	0e24      	lsrs	r4, r4, #24
 801acc4:	9415      	str	r4, [sp, #84]	; 0x54
 801acc6:	b179      	cbz	r1, 801ace8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801acc8:	eb08 0c00 	add.w	ip, r8, r0
 801accc:	f818 0000 	ldrb.w	r0, [r8, r0]
 801acd0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801acd4:	900a      	str	r0, [sp, #40]	; 0x28
 801acd6:	0e00      	lsrs	r0, r0, #24
 801acd8:	9013      	str	r0, [sp, #76]	; 0x4c
 801acda:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801acde:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ace2:	900f      	str	r0, [sp, #60]	; 0x3c
 801ace4:	0e00      	lsrs	r0, r0, #24
 801ace6:	9016      	str	r0, [sp, #88]	; 0x58
 801ace8:	b292      	uxth	r2, r2
 801acea:	9815      	ldr	r0, [sp, #84]	; 0x54
 801acec:	b289      	uxth	r1, r1
 801acee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801acf0:	fb02 f901 	mul.w	r9, r2, r1
 801acf4:	0112      	lsls	r2, r2, #4
 801acf6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801acfa:	eba2 0809 	sub.w	r8, r2, r9
 801acfe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ad02:	b289      	uxth	r1, r1
 801ad04:	fa1f f888 	uxth.w	r8, r8
 801ad08:	1a52      	subs	r2, r2, r1
 801ad0a:	fb08 f000 	mul.w	r0, r8, r0
 801ad0e:	b292      	uxth	r2, r2
 801ad10:	fb02 000e 	mla	r0, r2, lr, r0
 801ad14:	fb01 0004 	mla	r0, r1, r4, r0
 801ad18:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ad1a:	fb09 0004 	mla	r0, r9, r4, r0
 801ad1e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ad22:	2800      	cmp	r0, #0
 801ad24:	f000 80fa 	beq.w	801af1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ad28:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ad2c:	d01b      	beq.n	801ad66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801ad2e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ad32:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ad36:	fb0e fa0a 	mul.w	sl, lr, sl
 801ad3a:	fb0e fe03 	mul.w	lr, lr, r3
 801ad3e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ad42:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ad46:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ad4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad4e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ad52:	4453      	add	r3, sl
 801ad54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad58:	0a1b      	lsrs	r3, r3, #8
 801ad5a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ad5e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad62:	ea43 030c 	orr.w	r3, r3, ip
 801ad66:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ad68:	2cff      	cmp	r4, #255	; 0xff
 801ad6a:	d021      	beq.n	801adb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801ad6c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ad6e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ad72:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ad74:	fb04 fb0b 	mul.w	fp, r4, fp
 801ad78:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ad7a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ad7e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ad80:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ad88:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad90:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ad94:	44de      	add	lr, fp
 801ad96:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ad9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ada2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ada6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adaa:	ea4e 040a 	orr.w	r4, lr, sl
 801adae:	940e      	str	r4, [sp, #56]	; 0x38
 801adb0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801adb2:	2cff      	cmp	r4, #255	; 0xff
 801adb4:	d021      	beq.n	801adfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801adb6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801adb8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801adbc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801adbe:	fb04 fb0b 	mul.w	fp, r4, fp
 801adc2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801adc4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801adc8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801adca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801adce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801add2:	fb04 fa0a 	mul.w	sl, r4, sl
 801add6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801adda:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801adde:	44de      	add	lr, fp
 801ade0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ade4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ade8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801adf0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adf4:	ea4e 040a 	orr.w	r4, lr, sl
 801adf8:	940a      	str	r4, [sp, #40]	; 0x28
 801adfa:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801adfc:	2cff      	cmp	r4, #255	; 0xff
 801adfe:	d021      	beq.n	801ae44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801ae00:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ae02:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae06:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae08:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ae0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae12:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae18:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae1c:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae28:	44de      	add	lr, fp
 801ae2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae3e:	ea4e 040a 	orr.w	r4, lr, sl
 801ae42:	940f      	str	r4, [sp, #60]	; 0x3c
 801ae44:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae46:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801ae4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ae4e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ae52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae54:	fb08 fc0c 	mul.w	ip, r8, ip
 801ae58:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ae5c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ae60:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ae62:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ae66:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ae6a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae6c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ae70:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ae74:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ae76:	fb08 f80e 	mul.w	r8, r8, lr
 801ae7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae7e:	fb02 8303 	mla	r3, r2, r3, r8
 801ae82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ae84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae88:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ae8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ae8e:	fb01 330a 	mla	r3, r1, sl, r3
 801ae92:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ae96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ae98:	fb09 3901 	mla	r9, r9, r1, r3
 801ae9c:	883b      	ldrh	r3, [r7, #0]
 801ae9e:	4342      	muls	r2, r0
 801aea0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aea4:	1c50      	adds	r0, r2, #1
 801aea6:	1219      	asrs	r1, r3, #8
 801aea8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801aeac:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801aeb0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801aeb4:	ea4c 0c09 	orr.w	ip, ip, r9
 801aeb8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801aebc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801aec0:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801aec4:	b2c0      	uxtb	r0, r0
 801aec6:	fb12 f204 	smulbb	r2, r2, r4
 801aeca:	fa5f fc8c 	uxtb.w	ip, ip
 801aece:	fb1e fe04 	smulbb	lr, lr, r4
 801aed2:	fb01 2100 	mla	r1, r1, r0, r2
 801aed6:	10da      	asrs	r2, r3, #3
 801aed8:	fb1c fc04 	smulbb	ip, ip, r4
 801aedc:	00db      	lsls	r3, r3, #3
 801aede:	b289      	uxth	r1, r1
 801aee0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801aee4:	b2db      	uxtb	r3, r3
 801aee6:	fb02 e200 	mla	r2, r2, r0, lr
 801aeea:	fb03 c300 	mla	r3, r3, r0, ip
 801aeee:	b292      	uxth	r2, r2
 801aef0:	fa1f fc83 	uxth.w	ip, r3
 801aef4:	1c4b      	adds	r3, r1, #1
 801aef6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801aefa:	f10c 0301 	add.w	r3, ip, #1
 801aefe:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801af02:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801af06:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801af0a:	430b      	orrs	r3, r1
 801af0c:	1c51      	adds	r1, r2, #1
 801af0e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801af12:	0952      	lsrs	r2, r2, #5
 801af14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af18:	4313      	orrs	r3, r2
 801af1a:	803b      	strh	r3, [r7, #0]
 801af1c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801af1e:	3702      	adds	r7, #2
 801af20:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801af22:	441a      	add	r2, r3
 801af24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801af26:	441d      	add	r5, r3
 801af28:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801af2a:	9229      	str	r2, [sp, #164]	; 0xa4
 801af2c:	3b01      	subs	r3, #1
 801af2e:	931a      	str	r3, [sp, #104]	; 0x68
 801af30:	e694      	b.n	801ac5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801af32:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801af34:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801af36:	441c      	add	r4, r3
 801af38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801af3a:	441d      	add	r5, r3
 801af3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af3e:	9429      	str	r4, [sp, #164]	; 0xa4
 801af40:	3b01      	subs	r3, #1
 801af42:	9309      	str	r3, [sp, #36]	; 0x24
 801af44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801af46:	3302      	adds	r3, #2
 801af48:	930c      	str	r3, [sp, #48]	; 0x30
 801af4a:	e667      	b.n	801ac1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801af4c:	d024      	beq.n	801af98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801af4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af50:	982b      	ldr	r0, [sp, #172]	; 0xac
 801af52:	3b01      	subs	r3, #1
 801af54:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801af56:	fb00 4003 	mla	r0, r0, r3, r4
 801af5a:	1400      	asrs	r0, r0, #16
 801af5c:	f53f ae7b 	bmi.w	801ac56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801af60:	3901      	subs	r1, #1
 801af62:	4288      	cmp	r0, r1
 801af64:	f6bf ae77 	bge.w	801ac56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801af68:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801af6a:	fb01 5303 	mla	r3, r1, r3, r5
 801af6e:	141b      	asrs	r3, r3, #16
 801af70:	f53f ae71 	bmi.w	801ac56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801af74:	3a01      	subs	r2, #1
 801af76:	4293      	cmp	r3, r2
 801af78:	f6bf ae6d 	bge.w	801ac56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801af7c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801af80:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801af84:	f1bb 0f00 	cmp.w	fp, #0
 801af88:	dc70      	bgt.n	801b06c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801af8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af8c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801af90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801af92:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801af96:	930c      	str	r3, [sp, #48]	; 0x30
 801af98:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801af9a:	2b00      	cmp	r3, #0
 801af9c:	f340 81be 	ble.w	801b31c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801afa0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801afa4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801afa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afae:	eef0 6a62 	vmov.f32	s13, s5
 801afb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afbe:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801afc2:	eef0 6a43 	vmov.f32	s13, s6
 801afc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afca:	ee16 5a90 	vmov	r5, s13
 801afce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801afda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801afe2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afe6:	ee12 2a90 	vmov	r2, s5
 801afea:	eef0 2a47 	vmov.f32	s5, s14
 801afee:	fb92 f3f3 	sdiv	r3, r2, r3
 801aff2:	ee13 2a10 	vmov	r2, s6
 801aff6:	932b      	str	r3, [sp, #172]	; 0xac
 801aff8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801affa:	eeb0 3a67 	vmov.f32	s6, s15
 801affe:	fb92 f3f3 	sdiv	r3, r2, r3
 801b002:	932c      	str	r3, [sp, #176]	; 0xb0
 801b004:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b006:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b008:	3b01      	subs	r3, #1
 801b00a:	9319      	str	r3, [sp, #100]	; 0x64
 801b00c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b00e:	bf08      	it	eq
 801b010:	4613      	moveq	r3, r2
 801b012:	9309      	str	r3, [sp, #36]	; 0x24
 801b014:	e5f4      	b.n	801ac00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b016:	2900      	cmp	r1, #0
 801b018:	f43f ae66 	beq.w	801ace8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b01c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b020:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b024:	900a      	str	r0, [sp, #40]	; 0x28
 801b026:	0e00      	lsrs	r0, r0, #24
 801b028:	9013      	str	r0, [sp, #76]	; 0x4c
 801b02a:	e65d      	b.n	801ace8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b02c:	f113 0801 	adds.w	r8, r3, #1
 801b030:	f53f af74 	bmi.w	801af1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b034:	4540      	cmp	r0, r8
 801b036:	f6ff af71 	blt.w	801af1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b03a:	f11c 0801 	adds.w	r8, ip, #1
 801b03e:	f53f af6d 	bmi.w	801af1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b042:	45c6      	cmp	lr, r8
 801b044:	f6ff af6a 	blt.w	801af1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b048:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b04a:	b200      	sxth	r0, r0
 801b04c:	9302      	str	r3, [sp, #8]
 801b04e:	fa0f f38e 	sxth.w	r3, lr
 801b052:	9000      	str	r0, [sp, #0]
 801b054:	9301      	str	r3, [sp, #4]
 801b056:	4633      	mov	r3, r6
 801b058:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b05a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b05e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b062:	4639      	mov	r1, r7
 801b064:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b066:	f7ff fc63 	bl	801a930 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b06a:	e757      	b.n	801af1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b06c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b06e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b072:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b074:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b078:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b07a:	1427      	asrs	r7, r4, #16
 801b07c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b07e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b082:	142b      	asrs	r3, r5, #16
 801b084:	fb01 7303 	mla	r3, r1, r3, r7
 801b088:	18e7      	adds	r7, r4, r3
 801b08a:	5ce3      	ldrb	r3, [r4, r3]
 801b08c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b090:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b094:	2a00      	cmp	r2, #0
 801b096:	f000 8137 	beq.w	801b308 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801b09a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b09e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b0a2:	9410      	str	r4, [sp, #64]	; 0x40
 801b0a4:	0e24      	lsrs	r4, r4, #24
 801b0a6:	9417      	str	r4, [sp, #92]	; 0x5c
 801b0a8:	b170      	cbz	r0, 801b0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b0aa:	eb07 0e01 	add.w	lr, r7, r1
 801b0ae:	5c79      	ldrb	r1, [r7, r1]
 801b0b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b0b4:	910b      	str	r1, [sp, #44]	; 0x2c
 801b0b6:	0e09      	lsrs	r1, r1, #24
 801b0b8:	9114      	str	r1, [sp, #80]	; 0x50
 801b0ba:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b0be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b0c2:	9111      	str	r1, [sp, #68]	; 0x44
 801b0c4:	0e09      	lsrs	r1, r1, #24
 801b0c6:	9118      	str	r1, [sp, #96]	; 0x60
 801b0c8:	b292      	uxth	r2, r2
 801b0ca:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b0cc:	b280      	uxth	r0, r0
 801b0ce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b0d0:	fb02 f800 	mul.w	r8, r2, r0
 801b0d4:	0112      	lsls	r2, r2, #4
 801b0d6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b0da:	eba2 0e08 	sub.w	lr, r2, r8
 801b0de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b0e2:	b280      	uxth	r0, r0
 801b0e4:	fa1f fe8e 	uxth.w	lr, lr
 801b0e8:	1a12      	subs	r2, r2, r0
 801b0ea:	fb0e f101 	mul.w	r1, lr, r1
 801b0ee:	b292      	uxth	r2, r2
 801b0f0:	fb02 110c 	mla	r1, r2, ip, r1
 801b0f4:	fb00 1104 	mla	r1, r0, r4, r1
 801b0f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b0fa:	fb08 1104 	mla	r1, r8, r4, r1
 801b0fe:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b102:	2900      	cmp	r1, #0
 801b104:	f000 80f5 	beq.w	801b2f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801b108:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b10c:	d019      	beq.n	801b142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801b10e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b112:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b116:	fb0c fa0a 	mul.w	sl, ip, sl
 801b11a:	fb0c fc03 	mul.w	ip, ip, r3
 801b11e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b122:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b126:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b12a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b12e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b132:	4453      	add	r3, sl
 801b134:	0a3f      	lsrs	r7, r7, #8
 801b136:	0a1b      	lsrs	r3, r3, #8
 801b138:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b13c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b140:	433b      	orrs	r3, r7
 801b142:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b144:	2cff      	cmp	r4, #255	; 0xff
 801b146:	d020      	beq.n	801b18a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801b148:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b14a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b14e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b150:	4367      	muls	r7, r4
 801b152:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b154:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b158:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b15c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b15e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b162:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b166:	fb04 fa0a 	mul.w	sl, r4, sl
 801b16a:	44bc      	add	ip, r7
 801b16c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b170:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b174:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b178:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b17c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b180:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b184:	ea4c 040a 	orr.w	r4, ip, sl
 801b188:	9410      	str	r4, [sp, #64]	; 0x40
 801b18a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b18c:	2cff      	cmp	r4, #255	; 0xff
 801b18e:	d020      	beq.n	801b1d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801b190:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b192:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b196:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b198:	4367      	muls	r7, r4
 801b19a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b19c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b1a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b1a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b1aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1ae:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1b2:	44bc      	add	ip, r7
 801b1b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b1b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b1c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b1cc:	ea4c 040a 	orr.w	r4, ip, sl
 801b1d0:	940b      	str	r4, [sp, #44]	; 0x2c
 801b1d2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b1d4:	2cff      	cmp	r4, #255	; 0xff
 801b1d6:	d020      	beq.n	801b21a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801b1d8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b1da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b1de:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b1e0:	4367      	muls	r7, r4
 801b1e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b1e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b1ec:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b1ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b1f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1f6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1fa:	44bc      	add	ip, r7
 801b1fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b200:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b204:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b208:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b20c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b210:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b214:	ea4c 040a 	orr.w	r4, ip, sl
 801b218:	9411      	str	r4, [sp, #68]	; 0x44
 801b21a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b21c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b220:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b224:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b228:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b22a:	fb0e f707 	mul.w	r7, lr, r7
 801b22e:	fb02 770c 	mla	r7, r2, ip, r7
 801b232:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b236:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b238:	fb00 770c 	mla	r7, r0, ip, r7
 801b23c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b240:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b242:	fb08 770c 	mla	r7, r8, ip, r7
 801b246:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b24a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b24c:	fb0e fe0c 	mul.w	lr, lr, ip
 801b250:	0a3f      	lsrs	r7, r7, #8
 801b252:	fb02 e303 	mla	r3, r2, r3, lr
 801b256:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b258:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b25c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b260:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b262:	fb00 330a 	mla	r3, r0, sl, r3
 801b266:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b26a:	f8b9 0000 	ldrh.w	r0, [r9]
 801b26e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b272:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b274:	1202      	asrs	r2, r0, #8
 801b276:	434b      	muls	r3, r1
 801b278:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b27c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b280:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b284:	1c59      	adds	r1, r3, #1
 801b286:	ea47 070c 	orr.w	r7, r7, ip
 801b28a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b28e:	0c3b      	lsrs	r3, r7, #16
 801b290:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b294:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b298:	b2ff      	uxtb	r7, r7
 801b29a:	fb13 f304 	smulbb	r3, r3, r4
 801b29e:	b2c9      	uxtb	r1, r1
 801b2a0:	fb1c fc04 	smulbb	ip, ip, r4
 801b2a4:	fb02 3201 	mla	r2, r2, r1, r3
 801b2a8:	10c3      	asrs	r3, r0, #3
 801b2aa:	fb17 f704 	smulbb	r7, r7, r4
 801b2ae:	00c0      	lsls	r0, r0, #3
 801b2b0:	b292      	uxth	r2, r2
 801b2b2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b2b6:	b2c0      	uxtb	r0, r0
 801b2b8:	fb03 c301 	mla	r3, r3, r1, ip
 801b2bc:	f102 0c01 	add.w	ip, r2, #1
 801b2c0:	fb00 7001 	mla	r0, r0, r1, r7
 801b2c4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b2c8:	b280      	uxth	r0, r0
 801b2ca:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b2ce:	b29b      	uxth	r3, r3
 801b2d0:	1c42      	adds	r2, r0, #1
 801b2d2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b2d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b2da:	ea42 020c 	orr.w	r2, r2, ip
 801b2de:	f103 0c01 	add.w	ip, r3, #1
 801b2e2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b2e6:	095b      	lsrs	r3, r3, #5
 801b2e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b2ec:	431a      	orrs	r2, r3
 801b2ee:	f8a9 2000 	strh.w	r2, [r9]
 801b2f2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b2f4:	f109 0902 	add.w	r9, r9, #2
 801b2f8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b2fa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b2fe:	441a      	add	r2, r3
 801b300:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b302:	9229      	str	r2, [sp, #164]	; 0xa4
 801b304:	441d      	add	r5, r3
 801b306:	e63d      	b.n	801af84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b308:	2800      	cmp	r0, #0
 801b30a:	f43f aedd 	beq.w	801b0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b30e:	5c79      	ldrb	r1, [r7, r1]
 801b310:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b314:	910b      	str	r1, [sp, #44]	; 0x2c
 801b316:	0e09      	lsrs	r1, r1, #24
 801b318:	9114      	str	r1, [sp, #80]	; 0x50
 801b31a:	e6d5      	b.n	801b0c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b31c:	b01f      	add	sp, #124	; 0x7c
 801b31e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b322 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b322:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b326:	b089      	sub	sp, #36	; 0x24
 801b328:	9101      	str	r1, [sp, #4]
 801b32a:	9801      	ldr	r0, [sp, #4]
 801b32c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b330:	8800      	ldrh	r0, [r0, #0]
 801b332:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b336:	1206      	asrs	r6, r0, #8
 801b338:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b33c:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b340:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b344:	9602      	str	r6, [sp, #8]
 801b346:	10c6      	asrs	r6, r0, #3
 801b348:	00c0      	lsls	r0, r0, #3
 801b34a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b34e:	b2c0      	uxtb	r0, r0
 801b350:	9603      	str	r6, [sp, #12]
 801b352:	9004      	str	r0, [sp, #16]
 801b354:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b358:	fb07 100c 	mla	r0, r7, ip, r1
 801b35c:	2f00      	cmp	r7, #0
 801b35e:	eb02 0e00 	add.w	lr, r2, r0
 801b362:	f2c0 810a 	blt.w	801b57a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b366:	45b8      	cmp	r8, r7
 801b368:	f340 8107 	ble.w	801b57a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b36c:	2900      	cmp	r1, #0
 801b36e:	f2c0 8102 	blt.w	801b576 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b372:	458c      	cmp	ip, r1
 801b374:	f340 80ff 	ble.w	801b576 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b378:	5c12      	ldrb	r2, [r2, r0]
 801b37a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b37e:	1c4a      	adds	r2, r1, #1
 801b380:	f100 80fe 	bmi.w	801b580 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b384:	4594      	cmp	ip, r2
 801b386:	f340 80fb 	ble.w	801b580 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b38a:	2d00      	cmp	r5, #0
 801b38c:	f000 80fa 	beq.w	801b584 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b390:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b394:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b398:	3701      	adds	r7, #1
 801b39a:	f100 80f7 	bmi.w	801b58c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b39e:	45b8      	cmp	r8, r7
 801b3a0:	f340 80f4 	ble.w	801b58c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b3a4:	2c00      	cmp	r4, #0
 801b3a6:	f000 80f4 	beq.w	801b592 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b3aa:	2900      	cmp	r1, #0
 801b3ac:	eb0e 020c 	add.w	r2, lr, ip
 801b3b0:	f2c0 80ea 	blt.w	801b588 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b3b4:	458c      	cmp	ip, r1
 801b3b6:	f340 80e7 	ble.w	801b588 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b3ba:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b3be:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b3c2:	3101      	adds	r1, #1
 801b3c4:	f100 80e8 	bmi.w	801b598 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b3c8:	458c      	cmp	ip, r1
 801b3ca:	f340 80e5 	ble.w	801b598 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b3ce:	2d00      	cmp	r5, #0
 801b3d0:	f000 80e4 	beq.w	801b59c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b3d4:	7852      	ldrb	r2, [r2, #1]
 801b3d6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b3da:	0e0b      	lsrs	r3, r1, #24
 801b3dc:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b3e0:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b3e4:	9300      	str	r3, [sp, #0]
 801b3e6:	b2a4      	uxth	r4, r4
 801b3e8:	b2ab      	uxth	r3, r5
 801b3ea:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b3ee:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b3f2:	fb03 f904 	mul.w	r9, r3, r4
 801b3f6:	011b      	lsls	r3, r3, #4
 801b3f8:	fb0a f505 	mul.w	r5, sl, r5
 801b3fc:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b400:	eba3 0e09 	sub.w	lr, r3, r9
 801b404:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b408:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b40c:	0a28      	lsrs	r0, r5, #8
 801b40e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b412:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b416:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b41a:	fb0a f303 	mul.w	r3, sl, r3
 801b41e:	fb08 f707 	mul.w	r7, r8, r7
 801b422:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b426:	4405      	add	r5, r0
 801b428:	fb08 fc0c 	mul.w	ip, r8, ip
 801b42c:	b2a4      	uxth	r4, r4
 801b42e:	0a2d      	lsrs	r5, r5, #8
 801b430:	fa1f fe8e 	uxth.w	lr, lr
 801b434:	1b12      	subs	r2, r2, r4
 801b436:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b43a:	b292      	uxth	r2, r2
 801b43c:	9005      	str	r0, [sp, #20]
 801b43e:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b442:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b446:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b44a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b44e:	0a1b      	lsrs	r3, r3, #8
 801b450:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b454:	9306      	str	r3, [sp, #24]
 801b456:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b45a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b45e:	4460      	add	r0, ip
 801b460:	fb0b f303 	mul.w	r3, fp, r3
 801b464:	fb0b f606 	mul.w	r6, fp, r6
 801b468:	0a00      	lsrs	r0, r0, #8
 801b46a:	0a1d      	lsrs	r5, r3, #8
 801b46c:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b470:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b474:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b478:	441d      	add	r5, r3
 801b47a:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b47e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b482:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b486:	0a2d      	lsrs	r5, r5, #8
 801b488:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b48c:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b490:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b494:	0a36      	lsrs	r6, r6, #8
 801b496:	0a1b      	lsrs	r3, r3, #8
 801b498:	fb05 f50e 	mul.w	r5, r5, lr
 801b49c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b4a0:	9307      	str	r3, [sp, #28]
 801b4a2:	0e0b      	lsrs	r3, r1, #24
 801b4a4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b4a8:	fb0e f606 	mul.w	r6, lr, r6
 801b4ac:	435f      	muls	r7, r3
 801b4ae:	4359      	muls	r1, r3
 801b4b0:	9b05      	ldr	r3, [sp, #20]
 801b4b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b4b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b4ba:	fb03 5502 	mla	r5, r3, r2, r5
 801b4be:	9b06      	ldr	r3, [sp, #24]
 801b4c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b4c4:	fb0e fe0b 	mul.w	lr, lr, fp
 801b4c8:	44bc      	add	ip, r7
 801b4ca:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b4ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b4d2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b4d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b4da:	0a09      	lsrs	r1, r1, #8
 801b4dc:	fb0c 5509 	mla	r5, ip, r9, r5
 801b4e0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b4e4:	fb00 5504 	mla	r5, r0, r4, r5
 801b4e8:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b4ec:	9b07      	ldr	r3, [sp, #28]
 801b4ee:	fb02 6000 	mla	r0, r2, r0, r6
 801b4f2:	0a2d      	lsrs	r5, r5, #8
 801b4f4:	fb02 e20a 	mla	r2, r2, sl, lr
 801b4f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b4fc:	fb09 0001 	mla	r0, r9, r1, r0
 801b500:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b504:	fb04 0003 	mla	r0, r4, r3, r0
 801b508:	9b00      	ldr	r3, [sp, #0]
 801b50a:	fb04 2408 	mla	r4, r4, r8, r2
 801b50e:	9a04      	ldr	r2, [sp, #16]
 801b510:	0a00      	lsrs	r0, r0, #8
 801b512:	fb09 4903 	mla	r9, r9, r3, r4
 801b516:	9b02      	ldr	r3, [sp, #8]
 801b518:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b51c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b520:	4305      	orrs	r5, r0
 801b522:	fa5f f989 	uxtb.w	r9, r9
 801b526:	fb03 f109 	mul.w	r1, r3, r9
 801b52a:	9b03      	ldr	r3, [sp, #12]
 801b52c:	fb03 f309 	mul.w	r3, r3, r9
 801b530:	fb02 f909 	mul.w	r9, r2, r9
 801b534:	1c4a      	adds	r2, r1, #1
 801b536:	1c58      	adds	r0, r3, #1
 801b538:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b53c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b540:	0c2a      	lsrs	r2, r5, #16
 801b542:	0a2b      	lsrs	r3, r5, #8
 801b544:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b548:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b54c:	0212      	lsls	r2, r2, #8
 801b54e:	00db      	lsls	r3, r3, #3
 801b550:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b554:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b558:	4313      	orrs	r3, r2
 801b55a:	f109 0201 	add.w	r2, r9, #1
 801b55e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b562:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b566:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b56a:	431d      	orrs	r5, r3
 801b56c:	9b01      	ldr	r3, [sp, #4]
 801b56e:	801d      	strh	r5, [r3, #0]
 801b570:	b009      	add	sp, #36	; 0x24
 801b572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b576:	2000      	movs	r0, #0
 801b578:	e701      	b.n	801b37e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b57a:	2600      	movs	r6, #0
 801b57c:	4630      	mov	r0, r6
 801b57e:	e70b      	b.n	801b398 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b580:	2600      	movs	r6, #0
 801b582:	e709      	b.n	801b398 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b584:	462e      	mov	r6, r5
 801b586:	e707      	b.n	801b398 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b588:	2700      	movs	r7, #0
 801b58a:	e71a      	b.n	801b3c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b58c:	2100      	movs	r1, #0
 801b58e:	460f      	mov	r7, r1
 801b590:	e723      	b.n	801b3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b592:	4621      	mov	r1, r4
 801b594:	4627      	mov	r7, r4
 801b596:	e720      	b.n	801b3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b598:	2100      	movs	r1, #0
 801b59a:	e71e      	b.n	801b3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b59c:	4629      	mov	r1, r5
 801b59e:	e71c      	b.n	801b3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b5a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5a4:	b09b      	sub	sp, #108	; 0x6c
 801b5a6:	9218      	str	r2, [sp, #96]	; 0x60
 801b5a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b5aa:	9019      	str	r0, [sp, #100]	; 0x64
 801b5ac:	9116      	str	r1, [sp, #88]	; 0x58
 801b5ae:	6850      	ldr	r0, [r2, #4]
 801b5b0:	9307      	str	r3, [sp, #28]
 801b5b2:	6812      	ldr	r2, [r2, #0]
 801b5b4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b5b6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b5ba:	fb00 1303 	mla	r3, r0, r3, r1
 801b5be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b5c2:	930a      	str	r3, [sp, #40]	; 0x28
 801b5c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5c6:	681b      	ldr	r3, [r3, #0]
 801b5c8:	930f      	str	r3, [sp, #60]	; 0x3c
 801b5ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5cc:	685e      	ldr	r6, [r3, #4]
 801b5ce:	3604      	adds	r6, #4
 801b5d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b5d2:	2b00      	cmp	r3, #0
 801b5d4:	dc03      	bgt.n	801b5de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b5d6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b5d8:	2b00      	cmp	r3, #0
 801b5da:	f340 8373 	ble.w	801bcc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b5de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b5e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b5e8:	1e48      	subs	r0, r1, #1
 801b5ea:	1e57      	subs	r7, r2, #1
 801b5ec:	9b07      	ldr	r3, [sp, #28]
 801b5ee:	2b00      	cmp	r3, #0
 801b5f0:	f340 818f 	ble.w	801b912 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801b5f4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b5f6:	142b      	asrs	r3, r5, #16
 801b5f8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b5fc:	d406      	bmi.n	801b60c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b5fe:	4584      	cmp	ip, r0
 801b600:	da04      	bge.n	801b60c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b602:	2b00      	cmp	r3, #0
 801b604:	db02      	blt.n	801b60c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b606:	42bb      	cmp	r3, r7
 801b608:	f2c0 8184 	blt.w	801b914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b60c:	f11c 0c01 	adds.w	ip, ip, #1
 801b610:	f100 8172 	bmi.w	801b8f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b614:	4561      	cmp	r1, ip
 801b616:	f2c0 816f 	blt.w	801b8f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b61a:	3301      	adds	r3, #1
 801b61c:	f100 816c 	bmi.w	801b8f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b620:	429a      	cmp	r2, r3
 801b622:	f2c0 8169 	blt.w	801b8f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b626:	9b07      	ldr	r3, [sp, #28]
 801b628:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b62a:	9317      	str	r3, [sp, #92]	; 0x5c
 801b62c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b62e:	2b00      	cmp	r3, #0
 801b630:	f340 818e 	ble.w	801b950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801b634:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b636:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b63a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b63e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b642:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b644:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b648:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b64a:	141b      	asrs	r3, r3, #16
 801b64c:	f100 81d1 	bmi.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b650:	f101 38ff 	add.w	r8, r1, #4294967295
 801b654:	4543      	cmp	r3, r8
 801b656:	f280 81cc 	bge.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b65a:	f1bc 0f00 	cmp.w	ip, #0
 801b65e:	f2c0 81c8 	blt.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b662:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b666:	45c4      	cmp	ip, r8
 801b668:	f280 81c3 	bge.w	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b66c:	b209      	sxth	r1, r1
 801b66e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b670:	fb0c 3301 	mla	r3, ip, r1, r3
 801b674:	eb04 0803 	add.w	r8, r4, r3
 801b678:	5ce3      	ldrb	r3, [r4, r3]
 801b67a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b67e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b682:	2a00      	cmp	r2, #0
 801b684:	f000 81aa 	beq.w	801b9dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801b688:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b68c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b690:	940b      	str	r4, [sp, #44]	; 0x2c
 801b692:	0e24      	lsrs	r4, r4, #24
 801b694:	9412      	str	r4, [sp, #72]	; 0x48
 801b696:	b178      	cbz	r0, 801b6b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801b698:	eb08 0c01 	add.w	ip, r8, r1
 801b69c:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b6a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b6a4:	9108      	str	r1, [sp, #32]
 801b6a6:	0e09      	lsrs	r1, r1, #24
 801b6a8:	9110      	str	r1, [sp, #64]	; 0x40
 801b6aa:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b6ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b6b2:	910c      	str	r1, [sp, #48]	; 0x30
 801b6b4:	0e09      	lsrs	r1, r1, #24
 801b6b6:	9113      	str	r1, [sp, #76]	; 0x4c
 801b6b8:	b292      	uxth	r2, r2
 801b6ba:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b6bc:	b280      	uxth	r0, r0
 801b6be:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b6c0:	fb02 f900 	mul.w	r9, r2, r0
 801b6c4:	0112      	lsls	r2, r2, #4
 801b6c6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b6ca:	eba2 0809 	sub.w	r8, r2, r9
 801b6ce:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b6d2:	b280      	uxth	r0, r0
 801b6d4:	fa1f f888 	uxth.w	r8, r8
 801b6d8:	1a12      	subs	r2, r2, r0
 801b6da:	fb08 f101 	mul.w	r1, r8, r1
 801b6de:	b292      	uxth	r2, r2
 801b6e0:	fb02 110e 	mla	r1, r2, lr, r1
 801b6e4:	fb00 1104 	mla	r1, r0, r4, r1
 801b6e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b6ea:	fb09 1104 	mla	r1, r9, r4, r1
 801b6ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b6f2:	2900      	cmp	r1, #0
 801b6f4:	f000 80f5 	beq.w	801b8e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b6f8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b6fc:	d01b      	beq.n	801b736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b6fe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b702:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b706:	fb0e fa0a 	mul.w	sl, lr, sl
 801b70a:	fb0e fe03 	mul.w	lr, lr, r3
 801b70e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b712:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b716:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b71a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b71e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b722:	4453      	add	r3, sl
 801b724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b728:	0a1b      	lsrs	r3, r3, #8
 801b72a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b72e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b732:	ea43 030c 	orr.w	r3, r3, ip
 801b736:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b738:	2cff      	cmp	r4, #255	; 0xff
 801b73a:	d021      	beq.n	801b780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b73c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b73e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b742:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b744:	fb04 fb0b 	mul.w	fp, r4, fp
 801b748:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b74a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b74e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b750:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b754:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b758:	fb04 fa0a 	mul.w	sl, r4, sl
 801b75c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b760:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b764:	44de      	add	lr, fp
 801b766:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b76a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b76e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b772:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b776:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b77a:	ea4e 040a 	orr.w	r4, lr, sl
 801b77e:	940b      	str	r4, [sp, #44]	; 0x2c
 801b780:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b782:	2cff      	cmp	r4, #255	; 0xff
 801b784:	d021      	beq.n	801b7ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b786:	9c08      	ldr	r4, [sp, #32]
 801b788:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b78c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b78e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b792:	9c08      	ldr	r4, [sp, #32]
 801b794:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b798:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b79a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b79e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b7a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b7ae:	44de      	add	lr, fp
 801b7b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b7b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7c4:	ea4e 040a 	orr.w	r4, lr, sl
 801b7c8:	9408      	str	r4, [sp, #32]
 801b7ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b7cc:	2cff      	cmp	r4, #255	; 0xff
 801b7ce:	d021      	beq.n	801b814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b7d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b7d2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b7d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b7d8:	fb04 fb0b 	mul.w	fp, r4, fp
 801b7dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b7de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b7e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b7e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b7e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b7ec:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b7f8:	44de      	add	lr, fp
 801b7fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b802:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b806:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b80a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b80e:	ea4e 040a 	orr.w	r4, lr, sl
 801b812:	940c      	str	r4, [sp, #48]	; 0x30
 801b814:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b816:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b81a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b81e:	43c9      	mvns	r1, r1
 801b820:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b824:	9c08      	ldr	r4, [sp, #32]
 801b826:	fb08 fc0c 	mul.w	ip, r8, ip
 801b82a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b82e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b832:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b834:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b838:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b83c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b83e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b842:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b846:	fb08 f80e 	mul.w	r8, r8, lr
 801b84a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b84e:	fa5f fe81 	uxtb.w	lr, r1
 801b852:	fb02 8303 	mla	r3, r2, r3, r8
 801b856:	9a08      	ldr	r2, [sp, #32]
 801b858:	f8b7 8000 	ldrh.w	r8, [r7]
 801b85c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b860:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b864:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b866:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b86a:	fb00 330a 	mla	r3, r0, sl, r3
 801b86e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b872:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b876:	fb09 3900 	mla	r9, r9, r0, r3
 801b87a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b87e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b882:	b2c9      	uxtb	r1, r1
 801b884:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b888:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b88c:	fb02 f20e 	mul.w	r2, r2, lr
 801b890:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b894:	fb00 f00e 	mul.w	r0, r0, lr
 801b898:	1c53      	adds	r3, r2, #1
 801b89a:	fb01 f10e 	mul.w	r1, r1, lr
 801b89e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b8a2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b8a6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b8aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b8ae:	4a60      	ldr	r2, [pc, #384]	; (801ba30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b8b0:	b2db      	uxtb	r3, r3
 801b8b2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b8b6:	1c43      	adds	r3, r0, #1
 801b8b8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b8bc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b8c0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b8c4:	00db      	lsls	r3, r3, #3
 801b8c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b8ca:	4313      	orrs	r3, r2
 801b8cc:	1c4a      	adds	r2, r1, #1
 801b8ce:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b8d2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b8d6:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b8da:	ea4c 0c03 	orr.w	ip, ip, r3
 801b8de:	f8a7 c000 	strh.w	ip, [r7]
 801b8e2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b8e4:	3702      	adds	r7, #2
 801b8e6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b8e8:	441a      	add	r2, r3
 801b8ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b8ec:	441d      	add	r5, r3
 801b8ee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b8f0:	9225      	str	r2, [sp, #148]	; 0x94
 801b8f2:	3b01      	subs	r3, #1
 801b8f4:	9317      	str	r3, [sp, #92]	; 0x5c
 801b8f6:	e699      	b.n	801b62c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b8f8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b8fa:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b8fc:	441c      	add	r4, r3
 801b8fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b900:	441d      	add	r5, r3
 801b902:	9b07      	ldr	r3, [sp, #28]
 801b904:	9425      	str	r4, [sp, #148]	; 0x94
 801b906:	3b01      	subs	r3, #1
 801b908:	9307      	str	r3, [sp, #28]
 801b90a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b90c:	3302      	adds	r3, #2
 801b90e:	930a      	str	r3, [sp, #40]	; 0x28
 801b910:	e66c      	b.n	801b5ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b912:	d024      	beq.n	801b95e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801b914:	9b07      	ldr	r3, [sp, #28]
 801b916:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b918:	3b01      	subs	r3, #1
 801b91a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b91c:	fb00 4003 	mla	r0, r0, r3, r4
 801b920:	1400      	asrs	r0, r0, #16
 801b922:	f53f ae80 	bmi.w	801b626 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b926:	3901      	subs	r1, #1
 801b928:	4288      	cmp	r0, r1
 801b92a:	f6bf ae7c 	bge.w	801b626 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b92e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b930:	fb01 5303 	mla	r3, r1, r3, r5
 801b934:	141b      	asrs	r3, r3, #16
 801b936:	f53f ae76 	bmi.w	801b626 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b93a:	3a01      	subs	r2, #1
 801b93c:	4293      	cmp	r3, r2
 801b93e:	f6bf ae72 	bge.w	801b626 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b942:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b946:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b94a:	f1bb 0f00 	cmp.w	fp, #0
 801b94e:	dc71      	bgt.n	801ba34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b950:	9b07      	ldr	r3, [sp, #28]
 801b952:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b958:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b95c:	930a      	str	r3, [sp, #40]	; 0x28
 801b95e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b960:	2b00      	cmp	r3, #0
 801b962:	f340 81af 	ble.w	801bcc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b966:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b96a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b96c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b970:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b974:	eef0 6a62 	vmov.f32	s13, s5
 801b978:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b97c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b980:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b984:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801b988:	eef0 6a43 	vmov.f32	s13, s6
 801b98c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b990:	ee16 5a90 	vmov	r5, s13
 801b994:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b998:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b99c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b9a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b9a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b9a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b9ac:	ee12 2a90 	vmov	r2, s5
 801b9b0:	eef0 2a47 	vmov.f32	s5, s14
 801b9b4:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9b8:	ee13 2a10 	vmov	r2, s6
 801b9bc:	9327      	str	r3, [sp, #156]	; 0x9c
 801b9be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9c0:	eeb0 3a67 	vmov.f32	s6, s15
 801b9c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9c8:	9328      	str	r3, [sp, #160]	; 0xa0
 801b9ca:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b9cc:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b9ce:	3b01      	subs	r3, #1
 801b9d0:	9316      	str	r3, [sp, #88]	; 0x58
 801b9d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9d4:	bf08      	it	eq
 801b9d6:	4613      	moveq	r3, r2
 801b9d8:	9307      	str	r3, [sp, #28]
 801b9da:	e5f9      	b.n	801b5d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b9dc:	2800      	cmp	r0, #0
 801b9de:	f43f ae6b 	beq.w	801b6b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801b9e2:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b9e6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b9ea:	9108      	str	r1, [sp, #32]
 801b9ec:	0e09      	lsrs	r1, r1, #24
 801b9ee:	9110      	str	r1, [sp, #64]	; 0x40
 801b9f0:	e662      	b.n	801b6b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801b9f2:	f113 0801 	adds.w	r8, r3, #1
 801b9f6:	f53f af74 	bmi.w	801b8e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b9fa:	4541      	cmp	r1, r8
 801b9fc:	f6ff af71 	blt.w	801b8e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ba00:	f11c 0801 	adds.w	r8, ip, #1
 801ba04:	f53f af6d 	bmi.w	801b8e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ba08:	45c6      	cmp	lr, r8
 801ba0a:	f6ff af6a 	blt.w	801b8e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ba0e:	b209      	sxth	r1, r1
 801ba10:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ba14:	fa0f f38e 	sxth.w	r3, lr
 801ba18:	9100      	str	r1, [sp, #0]
 801ba1a:	4639      	mov	r1, r7
 801ba1c:	9301      	str	r3, [sp, #4]
 801ba1e:	4633      	mov	r3, r6
 801ba20:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ba24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba26:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ba28:	f7ff fc7b 	bl	801b322 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801ba2c:	e759      	b.n	801b8e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ba2e:	bf00      	nop
 801ba30:	fffff800 	.word	0xfffff800
 801ba34:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ba36:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ba3a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801ba3c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ba40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ba42:	1427      	asrs	r7, r4, #16
 801ba44:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ba46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ba4a:	142b      	asrs	r3, r5, #16
 801ba4c:	fb01 7303 	mla	r3, r1, r3, r7
 801ba50:	18e7      	adds	r7, r4, r3
 801ba52:	5ce3      	ldrb	r3, [r4, r3]
 801ba54:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ba58:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ba5c:	2a00      	cmp	r2, #0
 801ba5e:	f000 8127 	beq.w	801bcb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ba62:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ba66:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ba6a:	940d      	str	r4, [sp, #52]	; 0x34
 801ba6c:	0e24      	lsrs	r4, r4, #24
 801ba6e:	9414      	str	r4, [sp, #80]	; 0x50
 801ba70:	b170      	cbz	r0, 801ba90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ba72:	eb07 0e01 	add.w	lr, r7, r1
 801ba76:	5c79      	ldrb	r1, [r7, r1]
 801ba78:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba7c:	9109      	str	r1, [sp, #36]	; 0x24
 801ba7e:	0e09      	lsrs	r1, r1, #24
 801ba80:	9111      	str	r1, [sp, #68]	; 0x44
 801ba82:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ba86:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba8a:	910e      	str	r1, [sp, #56]	; 0x38
 801ba8c:	0e09      	lsrs	r1, r1, #24
 801ba8e:	9115      	str	r1, [sp, #84]	; 0x54
 801ba90:	b292      	uxth	r2, r2
 801ba92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ba94:	b280      	uxth	r0, r0
 801ba96:	fb02 f800 	mul.w	r8, r2, r0
 801ba9a:	0112      	lsls	r2, r2, #4
 801ba9c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801baa0:	eba2 0e08 	sub.w	lr, r2, r8
 801baa4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801baa8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801baaa:	b280      	uxth	r0, r0
 801baac:	fa1f fe8e 	uxth.w	lr, lr
 801bab0:	1a09      	subs	r1, r1, r0
 801bab2:	fb0e f202 	mul.w	r2, lr, r2
 801bab6:	b289      	uxth	r1, r1
 801bab8:	fb01 220c 	mla	r2, r1, ip, r2
 801babc:	fb00 2204 	mla	r2, r0, r4, r2
 801bac0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bac2:	fb08 2204 	mla	r2, r8, r4, r2
 801bac6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801baca:	2a00      	cmp	r2, #0
 801bacc:	f000 80e5 	beq.w	801bc9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bad0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bad4:	d019      	beq.n	801bb0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bad6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bada:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bade:	fb0c fa0a 	mul.w	sl, ip, sl
 801bae2:	fb0c fc03 	mul.w	ip, ip, r3
 801bae6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801baea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801baee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801baf2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801baf6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bafa:	4453      	add	r3, sl
 801bafc:	0a3f      	lsrs	r7, r7, #8
 801bafe:	0a1b      	lsrs	r3, r3, #8
 801bb00:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bb04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bb08:	433b      	orrs	r3, r7
 801bb0a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb0c:	2cff      	cmp	r4, #255	; 0xff
 801bb0e:	d020      	beq.n	801bb52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bb10:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bb12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb18:	4367      	muls	r7, r4
 801bb1a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bb1c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb20:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bb24:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb2e:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb32:	44bc      	add	ip, r7
 801bb34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb4c:	ea4c 040a 	orr.w	r4, ip, sl
 801bb50:	940d      	str	r4, [sp, #52]	; 0x34
 801bb52:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb54:	2cff      	cmp	r4, #255	; 0xff
 801bb56:	d020      	beq.n	801bb9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bb58:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bb5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb60:	4367      	muls	r7, r4
 801bb62:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bb64:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bb6c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb6e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb76:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb7a:	44bc      	add	ip, r7
 801bb7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb94:	ea4c 040a 	orr.w	r4, ip, sl
 801bb98:	9409      	str	r4, [sp, #36]	; 0x24
 801bb9a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb9c:	2cff      	cmp	r4, #255	; 0xff
 801bb9e:	d020      	beq.n	801bbe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bba0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bba2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bba6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bba8:	4367      	muls	r7, r4
 801bbaa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bbac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbb0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bbb4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bbb6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bbba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbbe:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbc2:	44bc      	add	ip, r7
 801bbc4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bbc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbcc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bbd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bbdc:	ea4c 040a 	orr.w	r4, ip, sl
 801bbe0:	940e      	str	r4, [sp, #56]	; 0x38
 801bbe2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bbe4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bbe8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bbec:	43d2      	mvns	r2, r2
 801bbee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bbf2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bbf4:	b2d2      	uxtb	r2, r2
 801bbf6:	fb0e f707 	mul.w	r7, lr, r7
 801bbfa:	fb01 770c 	mla	r7, r1, ip, r7
 801bbfe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bc02:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc04:	fb00 770c 	mla	r7, r0, ip, r7
 801bc08:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bc0c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bc0e:	fb08 770c 	mla	r7, r8, ip, r7
 801bc12:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bc16:	fb0e fe0c 	mul.w	lr, lr, ip
 801bc1a:	0a3f      	lsrs	r7, r7, #8
 801bc1c:	fb01 e303 	mla	r3, r1, r3, lr
 801bc20:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bc22:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bc26:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bc2a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bc2c:	fb00 330a 	mla	r3, r0, sl, r3
 801bc30:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bc34:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bc38:	f8b9 3000 	ldrh.w	r3, [r9]
 801bc3c:	1218      	asrs	r0, r3, #8
 801bc3e:	10d9      	asrs	r1, r3, #3
 801bc40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bc48:	00db      	lsls	r3, r3, #3
 801bc4a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bc4e:	4350      	muls	r0, r2
 801bc50:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bc54:	b2db      	uxtb	r3, r3
 801bc56:	4351      	muls	r1, r2
 801bc58:	ea47 070c 	orr.w	r7, r7, ip
 801bc5c:	4353      	muls	r3, r2
 801bc5e:	1c42      	adds	r2, r0, #1
 801bc60:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bc64:	0c3a      	lsrs	r2, r7, #16
 801bc66:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bc6a:	4a18      	ldr	r2, [pc, #96]	; (801bccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bc6c:	b2c0      	uxtb	r0, r0
 801bc6e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bc72:	1c4a      	adds	r2, r1, #1
 801bc74:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bc78:	0a3a      	lsrs	r2, r7, #8
 801bc7a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bc7e:	00c9      	lsls	r1, r1, #3
 801bc80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bc84:	4301      	orrs	r1, r0
 801bc86:	1c58      	adds	r0, r3, #1
 801bc88:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bc8c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bc90:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bc94:	4308      	orrs	r0, r1
 801bc96:	f8a9 0000 	strh.w	r0, [r9]
 801bc9a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bc9c:	f109 0902 	add.w	r9, r9, #2
 801bca0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bca2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bca6:	441a      	add	r2, r3
 801bca8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bcaa:	9225      	str	r2, [sp, #148]	; 0x94
 801bcac:	441d      	add	r5, r3
 801bcae:	e64c      	b.n	801b94a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801bcb0:	2800      	cmp	r0, #0
 801bcb2:	f43f aeed 	beq.w	801ba90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bcb6:	5c79      	ldrb	r1, [r7, r1]
 801bcb8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bcbc:	9109      	str	r1, [sp, #36]	; 0x24
 801bcbe:	0e09      	lsrs	r1, r1, #24
 801bcc0:	9111      	str	r1, [sp, #68]	; 0x44
 801bcc2:	e6e5      	b.n	801ba90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bcc4:	b01b      	add	sp, #108	; 0x6c
 801bcc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcca:	bf00      	nop
 801bccc:	fffff800 	.word	0xfffff800

0801bcd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bcd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcd4:	b085      	sub	sp, #20
 801bcd6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bcda:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bcde:	2800      	cmp	r0, #0
 801bce0:	9103      	str	r1, [sp, #12]
 801bce2:	fb00 7406 	mla	r4, r0, r6, r7
 801bce6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bcea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bcee:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bcf2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bcf6:	eb03 0904 	add.w	r9, r3, r4
 801bcfa:	9501      	str	r5, [sp, #4]
 801bcfc:	f2c0 8150 	blt.w	801bfa0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bd00:	4583      	cmp	fp, r0
 801bd02:	f340 814d 	ble.w	801bfa0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bd06:	2f00      	cmp	r7, #0
 801bd08:	f2c0 8146 	blt.w	801bf98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bd0c:	42be      	cmp	r6, r7
 801bd0e:	f340 8143 	ble.w	801bf98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bd12:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bd16:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bd1a:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bd1e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bd22:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bd26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bd2a:	4355      	muls	r5, r2
 801bd2c:	fb0c f203 	mul.w	r2, ip, r3
 801bd30:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bd34:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bd38:	441d      	add	r5, r3
 801bd3a:	f102 0320 	add.w	r3, r2, #32
 801bd3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bd42:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bd46:	0a1b      	lsrs	r3, r3, #8
 801bd48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bd4c:	431c      	orrs	r4, r3
 801bd4e:	1c7b      	adds	r3, r7, #1
 801bd50:	f100 812b 	bmi.w	801bfaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bd54:	429e      	cmp	r6, r3
 801bd56:	f340 8128 	ble.w	801bfaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bd5a:	2900      	cmp	r1, #0
 801bd5c:	f000 8128 	beq.w	801bfb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bd60:	9a01      	ldr	r2, [sp, #4]
 801bd62:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bd66:	8855      	ldrh	r5, [r2, #2]
 801bd68:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bd6c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bd70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bd74:	fb08 f802 	mul.w	r8, r8, r2
 801bd78:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bd7c:	435d      	muls	r5, r3
 801bd7e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bd82:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bd86:	44d0      	add	r8, sl
 801bd88:	f105 0a20 	add.w	sl, r5, #32
 801bd8c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bd90:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bd94:	0a2d      	lsrs	r5, r5, #8
 801bd96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bd9a:	432a      	orrs	r2, r5
 801bd9c:	3001      	adds	r0, #1
 801bd9e:	f100 810d 	bmi.w	801bfbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bda2:	4583      	cmp	fp, r0
 801bda4:	f340 810a 	ble.w	801bfbc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bda8:	f1be 0f00 	cmp.w	lr, #0
 801bdac:	f000 810b 	beq.w	801bfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bdb0:	2f00      	cmp	r7, #0
 801bdb2:	f2c0 8100 	blt.w	801bfb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bdb6:	42be      	cmp	r6, r7
 801bdb8:	f340 80fd 	ble.w	801bfb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bdbc:	9801      	ldr	r0, [sp, #4]
 801bdbe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bdc2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bdc6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bdca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bdce:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bdd2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bdd6:	fb0a fa00 	mul.w	sl, sl, r0
 801bdda:	fb05 f808 	mul.w	r8, r5, r8
 801bdde:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bde2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bde6:	4482      	add	sl, r0
 801bde8:	f108 0020 	add.w	r0, r8, #32
 801bdec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bdf0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bdf4:	0a00      	lsrs	r0, r0, #8
 801bdf6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bdfa:	ea4b 0b00 	orr.w	fp, fp, r0
 801bdfe:	3701      	adds	r7, #1
 801be00:	f100 80e6 	bmi.w	801bfd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801be04:	42be      	cmp	r6, r7
 801be06:	f340 80e3 	ble.w	801bfd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801be0a:	2900      	cmp	r1, #0
 801be0c:	f000 80e3 	beq.w	801bfd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801be10:	3601      	adds	r6, #1
 801be12:	9801      	ldr	r0, [sp, #4]
 801be14:	f819 7006 	ldrb.w	r7, [r9, r6]
 801be18:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801be1c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801be20:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801be24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be28:	fb09 f906 	mul.w	r9, r9, r6
 801be2c:	fb07 f800 	mul.w	r8, r7, r0
 801be30:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801be34:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801be38:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801be3c:	44d1      	add	r9, sl
 801be3e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801be42:	f108 0020 	add.w	r0, r8, #32
 801be46:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801be4a:	0a00      	lsrs	r0, r0, #8
 801be4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be50:	4330      	orrs	r0, r6
 801be52:	b28e      	uxth	r6, r1
 801be54:	fa1f f98e 	uxth.w	r9, lr
 801be58:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801be5c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801be60:	fb06 f809 	mul.w	r8, r6, r9
 801be64:	0136      	lsls	r6, r6, #4
 801be66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801be6a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801be6e:	9601      	str	r6, [sp, #4]
 801be70:	ea4a 0404 	orr.w	r4, sl, r4
 801be74:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801be78:	fa1f f689 	uxth.w	r6, r9
 801be7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801be80:	fb11 f90e 	smulbb	r9, r1, lr
 801be84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801be88:	9602      	str	r6, [sp, #8]
 801be8a:	4626      	mov	r6, r4
 801be8c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801be90:	f1ce 0410 	rsb	r4, lr, #16
 801be94:	ea4a 0202 	orr.w	r2, sl, r2
 801be98:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801be9c:	1a64      	subs	r4, r4, r1
 801be9e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bea2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bea6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801beaa:	434a      	muls	r2, r1
 801beac:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801beb0:	ea4a 0000 	orr.w	r0, sl, r0
 801beb4:	9903      	ldr	r1, [sp, #12]
 801beb6:	fb04 2406 	mla	r4, r4, r6, r2
 801beba:	9e02      	ldr	r6, [sp, #8]
 801bebc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bec0:	fb09 4200 	mla	r2, r9, r0, r4
 801bec4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bec8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801becc:	8808      	ldrh	r0, [r1, #0]
 801bece:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bed2:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bed6:	ea44 0b0b 	orr.w	fp, r4, fp
 801beda:	9c01      	ldr	r4, [sp, #4]
 801bedc:	b289      	uxth	r1, r1
 801bede:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bee2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bee6:	1ba4      	subs	r4, r4, r6
 801bee8:	9e01      	ldr	r6, [sp, #4]
 801beea:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801beee:	eba6 0608 	sub.w	r6, r6, r8
 801bef2:	b2a4      	uxth	r4, r4
 801bef4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bef8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801befc:	b2b6      	uxth	r6, r6
 801befe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bf02:	4373      	muls	r3, r6
 801bf04:	ea42 0e0e 	orr.w	lr, r2, lr
 801bf08:	fb0c 3304 	mla	r3, ip, r4, r3
 801bf0c:	9c02      	ldr	r4, [sp, #8]
 801bf0e:	fa1f f28e 	uxth.w	r2, lr
 801bf12:	fb04 3505 	mla	r5, r4, r5, r3
 801bf16:	10d4      	asrs	r4, r2, #3
 801bf18:	fb08 5707 	mla	r7, r8, r7, r5
 801bf1c:	1215      	asrs	r5, r2, #8
 801bf1e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bf22:	00d2      	lsls	r2, r2, #3
 801bf24:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bf28:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf2c:	b2d2      	uxtb	r2, r2
 801bf2e:	434f      	muls	r7, r1
 801bf30:	1c7b      	adds	r3, r7, #1
 801bf32:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bf36:	1203      	asrs	r3, r0, #8
 801bf38:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bf3c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bf40:	b2ff      	uxtb	r7, r7
 801bf42:	fb13 f307 	smulbb	r3, r3, r7
 801bf46:	fb05 3501 	mla	r5, r5, r1, r3
 801bf4a:	10c3      	asrs	r3, r0, #3
 801bf4c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bf50:	b2ad      	uxth	r5, r5
 801bf52:	fb13 f307 	smulbb	r3, r3, r7
 801bf56:	fb04 3401 	mla	r4, r4, r1, r3
 801bf5a:	00c3      	lsls	r3, r0, #3
 801bf5c:	b2db      	uxtb	r3, r3
 801bf5e:	b2a4      	uxth	r4, r4
 801bf60:	fb13 f307 	smulbb	r3, r3, r7
 801bf64:	fb02 3101 	mla	r1, r2, r1, r3
 801bf68:	1c6b      	adds	r3, r5, #1
 801bf6a:	1c62      	adds	r2, r4, #1
 801bf6c:	b289      	uxth	r1, r1
 801bf6e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bf72:	1c4b      	adds	r3, r1, #1
 801bf74:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bf78:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bf7c:	9a03      	ldr	r2, [sp, #12]
 801bf7e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bf82:	0964      	lsrs	r4, r4, #5
 801bf84:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bf88:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bf8c:	432b      	orrs	r3, r5
 801bf8e:	4323      	orrs	r3, r4
 801bf90:	8013      	strh	r3, [r2, #0]
 801bf92:	b005      	add	sp, #20
 801bf94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf98:	f04f 0c00 	mov.w	ip, #0
 801bf9c:	4664      	mov	r4, ip
 801bf9e:	e6d6      	b.n	801bd4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801bfa0:	2300      	movs	r3, #0
 801bfa2:	469c      	mov	ip, r3
 801bfa4:	461a      	mov	r2, r3
 801bfa6:	461c      	mov	r4, r3
 801bfa8:	e6f8      	b.n	801bd9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bfaa:	2300      	movs	r3, #0
 801bfac:	461a      	mov	r2, r3
 801bfae:	e6f5      	b.n	801bd9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bfb0:	460b      	mov	r3, r1
 801bfb2:	460a      	mov	r2, r1
 801bfb4:	e6f2      	b.n	801bd9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bfb6:	2500      	movs	r5, #0
 801bfb8:	46ab      	mov	fp, r5
 801bfba:	e720      	b.n	801bdfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801bfbc:	2700      	movs	r7, #0
 801bfbe:	463d      	mov	r5, r7
 801bfc0:	4638      	mov	r0, r7
 801bfc2:	46bb      	mov	fp, r7
 801bfc4:	e745      	b.n	801be52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bfc6:	4677      	mov	r7, lr
 801bfc8:	4675      	mov	r5, lr
 801bfca:	4670      	mov	r0, lr
 801bfcc:	46f3      	mov	fp, lr
 801bfce:	e740      	b.n	801be52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bfd0:	2700      	movs	r7, #0
 801bfd2:	4638      	mov	r0, r7
 801bfd4:	e73d      	b.n	801be52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bfd6:	460f      	mov	r7, r1
 801bfd8:	4608      	mov	r0, r1
 801bfda:	e73a      	b.n	801be52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801bfdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bfdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfe0:	b097      	sub	sp, #92	; 0x5c
 801bfe2:	9214      	str	r2, [sp, #80]	; 0x50
 801bfe4:	9308      	str	r3, [sp, #32]
 801bfe6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bfe8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801bfec:	9015      	str	r0, [sp, #84]	; 0x54
 801bfee:	9312      	str	r3, [sp, #72]	; 0x48
 801bff0:	6850      	ldr	r0, [r2, #4]
 801bff2:	9111      	str	r1, [sp, #68]	; 0x44
 801bff4:	6812      	ldr	r2, [r2, #0]
 801bff6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801bffa:	fb00 1303 	mla	r3, r0, r3, r1
 801bffe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c002:	9309      	str	r3, [sp, #36]	; 0x24
 801c004:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c006:	681b      	ldr	r3, [r3, #0]
 801c008:	930b      	str	r3, [sp, #44]	; 0x2c
 801c00a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c00c:	685b      	ldr	r3, [r3, #4]
 801c00e:	930c      	str	r3, [sp, #48]	; 0x30
 801c010:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c014:	930a      	str	r3, [sp, #40]	; 0x28
 801c016:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c018:	2b00      	cmp	r3, #0
 801c01a:	dc03      	bgt.n	801c024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c01c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c01e:	2b00      	cmp	r3, #0
 801c020:	f340 83cd 	ble.w	801c7be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801c024:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c026:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c02a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c02e:	1e48      	subs	r0, r1, #1
 801c030:	1e55      	subs	r5, r2, #1
 801c032:	9b08      	ldr	r3, [sp, #32]
 801c034:	2b00      	cmp	r3, #0
 801c036:	f340 81a5 	ble.w	801c384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801c03a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c03c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c03e:	1436      	asrs	r6, r6, #16
 801c040:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c044:	d406      	bmi.n	801c054 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c046:	4286      	cmp	r6, r0
 801c048:	da04      	bge.n	801c054 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c04a:	2b00      	cmp	r3, #0
 801c04c:	db02      	blt.n	801c054 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c04e:	42ab      	cmp	r3, r5
 801c050:	f2c0 8199 	blt.w	801c386 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801c054:	3601      	adds	r6, #1
 801c056:	f100 8186 	bmi.w	801c366 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c05a:	42b1      	cmp	r1, r6
 801c05c:	f2c0 8183 	blt.w	801c366 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c060:	3301      	adds	r3, #1
 801c062:	f100 8180 	bmi.w	801c366 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c066:	429a      	cmp	r2, r3
 801c068:	f2c0 817d 	blt.w	801c366 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c06c:	9b08      	ldr	r3, [sp, #32]
 801c06e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c072:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c074:	9313      	str	r3, [sp, #76]	; 0x4c
 801c076:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c078:	2b00      	cmp	r3, #0
 801c07a:	f340 81a6 	ble.w	801c3ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801c07e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c080:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c082:	1418      	asrs	r0, r3, #16
 801c084:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c086:	142d      	asrs	r5, r5, #16
 801c088:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c08c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c08e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c092:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c094:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c098:	f100 81fa 	bmi.w	801c490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c09c:	f102 3eff 	add.w	lr, r2, #4294967295
 801c0a0:	4575      	cmp	r5, lr
 801c0a2:	f280 81f5 	bge.w	801c490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c0a6:	2800      	cmp	r0, #0
 801c0a8:	f2c0 81f2 	blt.w	801c490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c0ac:	f103 3eff 	add.w	lr, r3, #4294967295
 801c0b0:	4570      	cmp	r0, lr
 801c0b2:	f280 81ed 	bge.w	801c490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c0b6:	b212      	sxth	r2, r2
 801c0b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c0ba:	fa1f fe81 	uxth.w	lr, r1
 801c0be:	fb00 5002 	mla	r0, r0, r2, r5
 801c0c2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c0c6:	eb03 0a00 	add.w	sl, r3, r0
 801c0ca:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c0ce:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c0d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c0d6:	b29b      	uxth	r3, r3
 801c0d8:	f1bc 0f00 	cmp.w	ip, #0
 801c0dc:	f000 81bb 	beq.w	801c456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c0e0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c0e4:	eb0a 0b02 	add.w	fp, sl, r2
 801c0e8:	fa1f fa8c 	uxth.w	sl, ip
 801c0ec:	940d      	str	r4, [sp, #52]	; 0x34
 801c0ee:	fb0a fe0e 	mul.w	lr, sl, lr
 801c0f2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c0f6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c0fa:	eba5 050e 	sub.w	r5, r5, lr
 801c0fe:	940e      	str	r4, [sp, #56]	; 0x38
 801c100:	fa1f fa8a 	uxth.w	sl, sl
 801c104:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c106:	b2ad      	uxth	r5, r5
 801c108:	eba3 030a 	sub.w	r3, r3, sl
 801c10c:	fb08 f505 	mul.w	r5, r8, r5
 801c110:	b29b      	uxth	r3, r3
 801c112:	fb09 5303 	mla	r3, r9, r3, r5
 801c116:	fb0a 3304 	mla	r3, sl, r4, r3
 801c11a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c11c:	fb0e 3304 	mla	r3, lr, r4, r3
 801c120:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c124:	2b00      	cmp	r3, #0
 801c126:	f000 8111 	beq.w	801c34c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c12a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c12c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c130:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c134:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c138:	f000 8192 	beq.w	801c460 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c13c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c140:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c144:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c148:	fb0a fe0e 	mul.w	lr, sl, lr
 801c14c:	fb09 f000 	mul.w	r0, r9, r0
 801c150:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c154:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c158:	f100 0b20 	add.w	fp, r0, #32
 801c15c:	44ce      	add	lr, r9
 801c15e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c162:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c166:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c16a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c16e:	ea4e 0909 	orr.w	r9, lr, r9
 801c172:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c176:	8868      	ldrh	r0, [r5, #2]
 801c178:	d019      	beq.n	801c1ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c17a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c17e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c182:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c186:	fb0a fe0e 	mul.w	lr, sl, lr
 801c18a:	fb08 f800 	mul.w	r8, r8, r0
 801c18e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c192:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c196:	f108 0b20 	add.w	fp, r8, #32
 801c19a:	4486      	add	lr, r0
 801c19c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c1a0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c1a4:	0a00      	lsrs	r0, r0, #8
 801c1a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c1aa:	ea4e 0000 	orr.w	r0, lr, r0
 801c1ae:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c1b2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c1b6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c1ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c1be:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c1c2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c1c6:	ea4e 0909 	orr.w	r9, lr, r9
 801c1ca:	ea4a 0000 	orr.w	r0, sl, r0
 801c1ce:	f1bc 0f00 	cmp.w	ip, #0
 801c1d2:	f000 8147 	beq.w	801c464 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801c1d6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c1da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c1dc:	3a01      	subs	r2, #1
 801c1de:	2cff      	cmp	r4, #255	; 0xff
 801c1e0:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801c1e4:	f102 0202 	add.w	r2, r2, #2
 801c1e8:	eb05 0e02 	add.w	lr, r5, r2
 801c1ec:	5aaa      	ldrh	r2, [r5, r2]
 801c1ee:	d018      	beq.n	801c222 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c1f0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c1f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c1f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c1fc:	fb04 fa02 	mul.w	sl, r4, r2
 801c200:	fb08 f805 	mul.w	r8, r8, r5
 801c204:	f10a 0520 	add.w	r5, sl, #32
 801c208:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c20c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c210:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c214:	4442      	add	r2, r8
 801c216:	0a2d      	lsrs	r5, r5, #8
 801c218:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c21c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c220:	432a      	orrs	r2, r5
 801c222:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c224:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c228:	2cff      	cmp	r4, #255	; 0xff
 801c22a:	d01a      	beq.n	801c262 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801c22c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c230:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c234:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c238:	fb04 fa05 	mul.w	sl, r4, r5
 801c23c:	fb08 f80e 	mul.w	r8, r8, lr
 801c240:	f10a 0e20 	add.w	lr, sl, #32
 801c244:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c248:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c24c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c250:	4445      	add	r5, r8
 801c252:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c256:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c25a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c25e:	ea45 050e 	orr.w	r5, r5, lr
 801c262:	fb1c fe01 	smulbb	lr, ip, r1
 801c266:	f1cc 0810 	rsb	r8, ip, #16
 801c26a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c26e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c272:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c276:	eba8 0801 	sub.w	r8, r8, r1
 801c27a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c27e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c282:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c286:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c28a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c28e:	ea4a 0202 	orr.w	r2, sl, r2
 801c292:	4341      	muls	r1, r0
 801c294:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c298:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c29c:	fb09 1108 	mla	r1, r9, r8, r1
 801c2a0:	ea4b 0505 	orr.w	r5, fp, r5
 801c2a4:	fb0c 1102 	mla	r1, ip, r2, r1
 801c2a8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c2ac:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c2b0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c2b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2b8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c2bc:	ea42 0e0e 	orr.w	lr, r2, lr
 801c2c0:	fa1f f28e 	uxth.w	r2, lr
 801c2c4:	2bff      	cmp	r3, #255	; 0xff
 801c2c6:	d103      	bne.n	801c2d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c2c8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c2ca:	29ff      	cmp	r1, #255	; 0xff
 801c2cc:	f000 80de 	beq.w	801c48c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c2d0:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c2d2:	1215      	asrs	r5, r2, #8
 801c2d4:	8838      	ldrh	r0, [r7, #0]
 801c2d6:	434b      	muls	r3, r1
 801c2d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c2dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c2de:	f103 0c01 	add.w	ip, r3, #1
 801c2e2:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c2e6:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c2ea:	fa5f fc83 	uxtb.w	ip, r3
 801c2ee:	1203      	asrs	r3, r0, #8
 801c2f0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c2f4:	fb13 f30c 	smulbb	r3, r3, ip
 801c2f8:	fb05 3501 	mla	r5, r5, r1, r3
 801c2fc:	10c3      	asrs	r3, r0, #3
 801c2fe:	10d1      	asrs	r1, r2, #3
 801c300:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c304:	00d2      	lsls	r2, r2, #3
 801c306:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c30a:	b2ad      	uxth	r5, r5
 801c30c:	fb13 f30c 	smulbb	r3, r3, ip
 801c310:	b2d2      	uxtb	r2, r2
 801c312:	fb01 3104 	mla	r1, r1, r4, r3
 801c316:	00c3      	lsls	r3, r0, #3
 801c318:	b2db      	uxtb	r3, r3
 801c31a:	b289      	uxth	r1, r1
 801c31c:	fb13 f30c 	smulbb	r3, r3, ip
 801c320:	fb02 3304 	mla	r3, r2, r4, r3
 801c324:	b29a      	uxth	r2, r3
 801c326:	1c6b      	adds	r3, r5, #1
 801c328:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c32c:	1c53      	adds	r3, r2, #1
 801c32e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c332:	1c4a      	adds	r2, r1, #1
 801c334:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c338:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c33c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c340:	0949      	lsrs	r1, r1, #5
 801c342:	432b      	orrs	r3, r5
 801c344:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c348:	430b      	orrs	r3, r1
 801c34a:	803b      	strh	r3, [r7, #0]
 801c34c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c34e:	3702      	adds	r7, #2
 801c350:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c352:	4413      	add	r3, r2
 801c354:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c356:	9321      	str	r3, [sp, #132]	; 0x84
 801c358:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c35a:	441a      	add	r2, r3
 801c35c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c35e:	3b01      	subs	r3, #1
 801c360:	9222      	str	r2, [sp, #136]	; 0x88
 801c362:	9313      	str	r3, [sp, #76]	; 0x4c
 801c364:	e687      	b.n	801c076 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c366:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c368:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c36a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c36c:	4433      	add	r3, r6
 801c36e:	9321      	str	r3, [sp, #132]	; 0x84
 801c370:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c372:	441c      	add	r4, r3
 801c374:	9b08      	ldr	r3, [sp, #32]
 801c376:	3b01      	subs	r3, #1
 801c378:	9422      	str	r4, [sp, #136]	; 0x88
 801c37a:	9308      	str	r3, [sp, #32]
 801c37c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c37e:	3302      	adds	r3, #2
 801c380:	9309      	str	r3, [sp, #36]	; 0x24
 801c382:	e656      	b.n	801c032 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c384:	d028      	beq.n	801c3d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801c386:	9b08      	ldr	r3, [sp, #32]
 801c388:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c38a:	3b01      	subs	r3, #1
 801c38c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c38e:	fb00 5003 	mla	r0, r0, r3, r5
 801c392:	1400      	asrs	r0, r0, #16
 801c394:	f53f ae6a 	bmi.w	801c06c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c398:	3901      	subs	r1, #1
 801c39a:	4288      	cmp	r0, r1
 801c39c:	f6bf ae66 	bge.w	801c06c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c3a0:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c3a2:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c3a4:	fb01 0303 	mla	r3, r1, r3, r0
 801c3a8:	141b      	asrs	r3, r3, #16
 801c3aa:	f53f ae5f 	bmi.w	801c06c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c3ae:	3a01      	subs	r2, #1
 801c3b0:	4293      	cmp	r3, r2
 801c3b2:	f6bf ae5b 	bge.w	801c06c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c3b6:	9b08      	ldr	r3, [sp, #32]
 801c3b8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c3bc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c3c0:	9313      	str	r3, [sp, #76]	; 0x4c
 801c3c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c3c4:	2b00      	cmp	r3, #0
 801c3c6:	f300 8082 	bgt.w	801c4ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801c3ca:	9b08      	ldr	r3, [sp, #32]
 801c3cc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c3d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c3d2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c3d6:	9309      	str	r3, [sp, #36]	; 0x24
 801c3d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c3da:	2b00      	cmp	r3, #0
 801c3dc:	f340 81ef 	ble.w	801c7be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801c3e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c3e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c3e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c3ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c3ee:	eef0 6a62 	vmov.f32	s13, s5
 801c3f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c3f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c3fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c3fe:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c402:	eef0 6a43 	vmov.f32	s13, s6
 801c406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c40a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c40e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c412:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c416:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c41a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c41e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c422:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c426:	ee12 2a90 	vmov	r2, s5
 801c42a:	eef0 2a47 	vmov.f32	s5, s14
 801c42e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c432:	ee13 2a10 	vmov	r2, s6
 801c436:	9323      	str	r3, [sp, #140]	; 0x8c
 801c438:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c43a:	eeb0 3a67 	vmov.f32	s6, s15
 801c43e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c442:	9324      	str	r3, [sp, #144]	; 0x90
 801c444:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c446:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c448:	3b01      	subs	r3, #1
 801c44a:	9311      	str	r3, [sp, #68]	; 0x44
 801c44c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c44e:	bf08      	it	eq
 801c450:	4613      	moveq	r3, r2
 801c452:	9308      	str	r3, [sp, #32]
 801c454:	e5df      	b.n	801c016 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c456:	fb08 f505 	mul.w	r5, r8, r5
 801c45a:	fb09 5303 	mla	r3, r9, r3, r5
 801c45e:	e65f      	b.n	801c120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c460:	4681      	mov	r9, r0
 801c462:	e686      	b.n	801c172 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c464:	f1c1 0210 	rsb	r2, r1, #16
 801c468:	4341      	muls	r1, r0
 801c46a:	fb09 1902 	mla	r9, r9, r2, r1
 801c46e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c472:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c476:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c47a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c47e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c482:	ea42 0909 	orr.w	r9, r2, r9
 801c486:	fa1f f289 	uxth.w	r2, r9
 801c48a:	e71b      	b.n	801c2c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801c48c:	803a      	strh	r2, [r7, #0]
 801c48e:	e75d      	b.n	801c34c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c490:	f115 0e01 	adds.w	lr, r5, #1
 801c494:	f53f af5a 	bmi.w	801c34c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c498:	4572      	cmp	r2, lr
 801c49a:	f6ff af57 	blt.w	801c34c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c49e:	f110 0e01 	adds.w	lr, r0, #1
 801c4a2:	f53f af53 	bmi.w	801c34c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c4a6:	4573      	cmp	r3, lr
 801c4a8:	f6ff af50 	blt.w	801c34c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c4ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c4ae:	b21b      	sxth	r3, r3
 801c4b0:	b212      	sxth	r2, r2
 801c4b2:	9502      	str	r5, [sp, #8]
 801c4b4:	9301      	str	r3, [sp, #4]
 801c4b6:	9200      	str	r2, [sp, #0]
 801c4b8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c4bc:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c4c0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c4c4:	4639      	mov	r1, r7
 801c4c6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c4c8:	f7ff fc02 	bl	801bcd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c4cc:	e73e      	b.n	801c34c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c4ce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c4d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c4d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c4d6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c4da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c4dc:	fa1f fc82 	uxth.w	ip, r2
 801c4e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c4e4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c4e6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c4ea:	141f      	asrs	r7, r3, #16
 801c4ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c4ee:	141b      	asrs	r3, r3, #16
 801c4f0:	fb01 3707 	mla	r7, r1, r7, r3
 801c4f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c4f6:	eb03 0a07 	add.w	sl, r3, r7
 801c4fa:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c4fe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c502:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c506:	b29b      	uxth	r3, r3
 801c508:	2d00      	cmp	r5, #0
 801c50a:	f000 813d 	beq.w	801c788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801c50e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c512:	eb0a 0b01 	add.w	fp, sl, r1
 801c516:	fa1f fa85 	uxth.w	sl, r5
 801c51a:	940f      	str	r4, [sp, #60]	; 0x3c
 801c51c:	fb0a fc0c 	mul.w	ip, sl, ip
 801c520:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c524:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c528:	eba0 000c 	sub.w	r0, r0, ip
 801c52c:	9410      	str	r4, [sp, #64]	; 0x40
 801c52e:	fa1f fa8a 	uxth.w	sl, sl
 801c532:	b280      	uxth	r0, r0
 801c534:	eba3 030a 	sub.w	r3, r3, sl
 801c538:	fb08 f000 	mul.w	r0, r8, r0
 801c53c:	b29b      	uxth	r3, r3
 801c53e:	fb09 0303 	mla	r3, r9, r3, r0
 801c542:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c544:	fb0a 3300 	mla	r3, sl, r0, r3
 801c548:	fb0c 3304 	mla	r3, ip, r4, r3
 801c54c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c550:	2b00      	cmp	r3, #0
 801c552:	f000 810b 	beq.w	801c76c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801c556:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c558:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c55c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c55e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c562:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c566:	f000 8114 	beq.w	801c792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c56a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c56e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c572:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c576:	fb0a fc0c 	mul.w	ip, sl, ip
 801c57a:	fb09 f707 	mul.w	r7, r9, r7
 801c57e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c582:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c586:	f107 0b20 	add.w	fp, r7, #32
 801c58a:	44cc      	add	ip, r9
 801c58c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c590:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c594:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c598:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c59c:	ea4c 0909 	orr.w	r9, ip, r9
 801c5a0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c5a4:	8847      	ldrh	r7, [r0, #2]
 801c5a6:	d019      	beq.n	801c5dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801c5a8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c5ac:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c5b0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c5b4:	fb0a fc0c 	mul.w	ip, sl, ip
 801c5b8:	fb08 f807 	mul.w	r8, r8, r7
 801c5bc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c5c0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c5c4:	f108 0b20 	add.w	fp, r8, #32
 801c5c8:	44bc      	add	ip, r7
 801c5ca:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c5ce:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c5d2:	0a3f      	lsrs	r7, r7, #8
 801c5d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c5d8:	ea4c 0707 	orr.w	r7, ip, r7
 801c5dc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c5e0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c5e4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c5e8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c5ec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c5f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c5f4:	ea4c 0909 	orr.w	r9, ip, r9
 801c5f8:	ea4a 0707 	orr.w	r7, sl, r7
 801c5fc:	2d00      	cmp	r5, #0
 801c5fe:	f000 80ca 	beq.w	801c796 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801c602:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c606:	3901      	subs	r1, #1
 801c608:	0049      	lsls	r1, r1, #1
 801c60a:	3102      	adds	r1, #2
 801c60c:	eb00 0c01 	add.w	ip, r0, r1
 801c610:	5a41      	ldrh	r1, [r0, r1]
 801c612:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c614:	28ff      	cmp	r0, #255	; 0xff
 801c616:	d019      	beq.n	801c64c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801c618:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c61c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c61e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c622:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c626:	fb04 fa01 	mul.w	sl, r4, r1
 801c62a:	fb08 f800 	mul.w	r8, r8, r0
 801c62e:	f10a 0020 	add.w	r0, sl, #32
 801c632:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c636:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c63a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c63e:	4441      	add	r1, r8
 801c640:	0a00      	lsrs	r0, r0, #8
 801c642:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c646:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c64a:	4301      	orrs	r1, r0
 801c64c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c64e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c652:	2cff      	cmp	r4, #255	; 0xff
 801c654:	d01a      	beq.n	801c68c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801c656:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c65a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c65e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c662:	fb04 fa00 	mul.w	sl, r4, r0
 801c666:	fb08 f80c 	mul.w	r8, r8, ip
 801c66a:	f10a 0c20 	add.w	ip, sl, #32
 801c66e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c672:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c676:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c67a:	4440      	add	r0, r8
 801c67c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c680:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c684:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c688:	ea40 000c 	orr.w	r0, r0, ip
 801c68c:	fb15 fc02 	smulbb	ip, r5, r2
 801c690:	f1c5 0810 	rsb	r8, r5, #16
 801c694:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c698:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c69c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c6a0:	eba8 0802 	sub.w	r8, r8, r2
 801c6a4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c6a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c6ac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c6b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c6b4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c6b8:	ea4a 0101 	orr.w	r1, sl, r1
 801c6bc:	437a      	muls	r2, r7
 801c6be:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c6c2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c6c6:	fb09 2208 	mla	r2, r9, r8, r2
 801c6ca:	ea4b 0000 	orr.w	r0, fp, r0
 801c6ce:	fb05 2201 	mla	r2, r5, r1, r2
 801c6d2:	fb0c 2200 	mla	r2, ip, r0, r2
 801c6d6:	0d57      	lsrs	r7, r2, #21
 801c6d8:	0952      	lsrs	r2, r2, #5
 801c6da:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c6de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c6e2:	433a      	orrs	r2, r7
 801c6e4:	2bff      	cmp	r3, #255	; 0xff
 801c6e6:	b292      	uxth	r2, r2
 801c6e8:	d102      	bne.n	801c6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801c6ea:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c6ec:	29ff      	cmp	r1, #255	; 0xff
 801c6ee:	d063      	beq.n	801c7b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801c6f0:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c6f2:	1215      	asrs	r5, r2, #8
 801c6f4:	f8be 1000 	ldrh.w	r1, [lr]
 801c6f8:	4343      	muls	r3, r0
 801c6fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c6fc:	10cf      	asrs	r7, r1, #3
 801c6fe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c702:	1c58      	adds	r0, r3, #1
 801c704:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c708:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c70c:	1208      	asrs	r0, r1, #8
 801c70e:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c712:	00c9      	lsls	r1, r1, #3
 801c714:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c718:	b2db      	uxtb	r3, r3
 801c71a:	b2c9      	uxtb	r1, r1
 801c71c:	fb10 f003 	smulbb	r0, r0, r3
 801c720:	fb11 f103 	smulbb	r1, r1, r3
 801c724:	fb05 0504 	mla	r5, r5, r4, r0
 801c728:	10d0      	asrs	r0, r2, #3
 801c72a:	fb17 f703 	smulbb	r7, r7, r3
 801c72e:	00d2      	lsls	r2, r2, #3
 801c730:	b2ad      	uxth	r5, r5
 801c732:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c736:	b2d2      	uxtb	r2, r2
 801c738:	fb00 7004 	mla	r0, r0, r4, r7
 801c73c:	1c6b      	adds	r3, r5, #1
 801c73e:	fb02 1204 	mla	r2, r2, r4, r1
 801c742:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c746:	b292      	uxth	r2, r2
 801c748:	b280      	uxth	r0, r0
 801c74a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c74e:	1c57      	adds	r7, r2, #1
 801c750:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c754:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c758:	433d      	orrs	r5, r7
 801c75a:	1c47      	adds	r7, r0, #1
 801c75c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c760:	097f      	lsrs	r7, r7, #5
 801c762:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c766:	433d      	orrs	r5, r7
 801c768:	f8ae 5000 	strh.w	r5, [lr]
 801c76c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c76e:	f10e 0e02 	add.w	lr, lr, #2
 801c772:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c774:	4413      	add	r3, r2
 801c776:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c778:	9321      	str	r3, [sp, #132]	; 0x84
 801c77a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c77c:	441a      	add	r2, r3
 801c77e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c780:	3b01      	subs	r3, #1
 801c782:	9222      	str	r2, [sp, #136]	; 0x88
 801c784:	9313      	str	r3, [sp, #76]	; 0x4c
 801c786:	e61c      	b.n	801c3c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801c788:	fb08 f000 	mul.w	r0, r8, r0
 801c78c:	fb09 0303 	mla	r3, r9, r3, r0
 801c790:	e6dc      	b.n	801c54c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801c792:	46b9      	mov	r9, r7
 801c794:	e704      	b.n	801c5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801c796:	f1c2 0110 	rsb	r1, r2, #16
 801c79a:	437a      	muls	r2, r7
 801c79c:	fb09 2901 	mla	r9, r9, r1, r2
 801c7a0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c7a4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c7a8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c7ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c7b4:	4302      	orrs	r2, r0
 801c7b6:	e795      	b.n	801c6e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801c7b8:	f8ae 2000 	strh.w	r2, [lr]
 801c7bc:	e7d6      	b.n	801c76c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801c7be:	b017      	add	sp, #92	; 0x5c
 801c7c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c7c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c7c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7c8:	b085      	sub	sp, #20
 801c7ca:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c7ce:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c7d2:	2800      	cmp	r0, #0
 801c7d4:	9103      	str	r1, [sp, #12]
 801c7d6:	fb00 7406 	mla	r4, r0, r6, r7
 801c7da:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c7de:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c7e2:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c7e6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c7ea:	eb02 0904 	add.w	r9, r2, r4
 801c7ee:	9501      	str	r5, [sp, #4]
 801c7f0:	f2c0 8141 	blt.w	801ca76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c7f4:	4583      	cmp	fp, r0
 801c7f6:	f340 813e 	ble.w	801ca76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c7fa:	2f00      	cmp	r7, #0
 801c7fc:	f2c0 8137 	blt.w	801ca6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c800:	42be      	cmp	r6, r7
 801c802:	f340 8134 	ble.w	801ca6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c806:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c80a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c80e:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c812:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c816:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c81a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c81e:	4355      	muls	r5, r2
 801c820:	fb0c f203 	mul.w	r2, ip, r3
 801c824:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c828:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c82c:	441d      	add	r5, r3
 801c82e:	f102 0320 	add.w	r3, r2, #32
 801c832:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c836:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c83a:	0a1b      	lsrs	r3, r3, #8
 801c83c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c840:	431c      	orrs	r4, r3
 801c842:	1c7b      	adds	r3, r7, #1
 801c844:	f100 811c 	bmi.w	801ca80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c848:	429e      	cmp	r6, r3
 801c84a:	f340 8119 	ble.w	801ca80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c84e:	2900      	cmp	r1, #0
 801c850:	f000 8119 	beq.w	801ca86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c854:	9a01      	ldr	r2, [sp, #4]
 801c856:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c85a:	8855      	ldrh	r5, [r2, #2]
 801c85c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c860:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c864:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c868:	fb08 f802 	mul.w	r8, r8, r2
 801c86c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c870:	435d      	muls	r5, r3
 801c872:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c876:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c87a:	44d0      	add	r8, sl
 801c87c:	f105 0a20 	add.w	sl, r5, #32
 801c880:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c884:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c888:	0a2d      	lsrs	r5, r5, #8
 801c88a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c88e:	432a      	orrs	r2, r5
 801c890:	3001      	adds	r0, #1
 801c892:	f100 80fe 	bmi.w	801ca92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c896:	4583      	cmp	fp, r0
 801c898:	f340 80fb 	ble.w	801ca92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c89c:	f1be 0f00 	cmp.w	lr, #0
 801c8a0:	f000 80fc 	beq.w	801ca9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c8a4:	2f00      	cmp	r7, #0
 801c8a6:	f2c0 80f1 	blt.w	801ca8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c8aa:	42be      	cmp	r6, r7
 801c8ac:	f340 80ee 	ble.w	801ca8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c8b0:	9801      	ldr	r0, [sp, #4]
 801c8b2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c8b6:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c8ba:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c8be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c8c2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c8c6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c8ca:	fb0a fa00 	mul.w	sl, sl, r0
 801c8ce:	fb05 f808 	mul.w	r8, r5, r8
 801c8d2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c8d6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c8da:	4482      	add	sl, r0
 801c8dc:	f108 0020 	add.w	r0, r8, #32
 801c8e0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c8e4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c8e8:	0a00      	lsrs	r0, r0, #8
 801c8ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c8ee:	ea4b 0b00 	orr.w	fp, fp, r0
 801c8f2:	3701      	adds	r7, #1
 801c8f4:	f100 80d7 	bmi.w	801caa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c8f8:	42be      	cmp	r6, r7
 801c8fa:	f340 80d4 	ble.w	801caa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c8fe:	2900      	cmp	r1, #0
 801c900:	f000 80d4 	beq.w	801caac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c904:	3601      	adds	r6, #1
 801c906:	9801      	ldr	r0, [sp, #4]
 801c908:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c90c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c910:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c914:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c918:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c91c:	fb09 f906 	mul.w	r9, r9, r6
 801c920:	fb07 f800 	mul.w	r8, r7, r0
 801c924:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c928:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c92c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c930:	44d1      	add	r9, sl
 801c932:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c936:	f108 0020 	add.w	r0, r8, #32
 801c93a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c93e:	0a00      	lsrs	r0, r0, #8
 801c940:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c944:	4330      	orrs	r0, r6
 801c946:	b28e      	uxth	r6, r1
 801c948:	fa1f f98e 	uxth.w	r9, lr
 801c94c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c950:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c954:	fb06 f809 	mul.w	r8, r6, r9
 801c958:	0136      	lsls	r6, r6, #4
 801c95a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c95e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c962:	9601      	str	r6, [sp, #4]
 801c964:	ea4a 0404 	orr.w	r4, sl, r4
 801c968:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c96c:	fa1f f689 	uxth.w	r6, r9
 801c970:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c974:	fb11 f90e 	smulbb	r9, r1, lr
 801c978:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c97c:	9602      	str	r6, [sp, #8]
 801c97e:	4626      	mov	r6, r4
 801c980:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c984:	f1ce 0410 	rsb	r4, lr, #16
 801c988:	ea4a 0202 	orr.w	r2, sl, r2
 801c98c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c990:	1a64      	subs	r4, r4, r1
 801c992:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c996:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c99a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c99e:	434a      	muls	r2, r1
 801c9a0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c9a4:	ea4a 0000 	orr.w	r0, sl, r0
 801c9a8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c9ac:	fb04 2406 	mla	r4, r4, r6, r2
 801c9b0:	9903      	ldr	r1, [sp, #12]
 801c9b2:	fb09 4200 	mla	r2, r9, r0, r4
 801c9b6:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c9ba:	9801      	ldr	r0, [sp, #4]
 801c9bc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c9c0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c9c4:	8809      	ldrh	r1, [r1, #0]
 801c9c6:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c9ca:	ea44 0b0b 	orr.w	fp, r4, fp
 801c9ce:	9c02      	ldr	r4, [sp, #8]
 801c9d0:	1b00      	subs	r0, r0, r4
 801c9d2:	9c01      	ldr	r4, [sp, #4]
 801c9d4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c9d8:	eba4 0608 	sub.w	r6, r4, r8
 801c9dc:	b280      	uxth	r0, r0
 801c9de:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c9e2:	b2b6      	uxth	r6, r6
 801c9e4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c9e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c9ec:	4373      	muls	r3, r6
 801c9ee:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c9f2:	fb0c 3300 	mla	r3, ip, r0, r3
 801c9f6:	9802      	ldr	r0, [sp, #8]
 801c9f8:	ea42 0e0e 	orr.w	lr, r2, lr
 801c9fc:	fb00 3505 	mla	r5, r0, r5, r3
 801ca00:	120b      	asrs	r3, r1, #8
 801ca02:	10c8      	asrs	r0, r1, #3
 801ca04:	fb08 5707 	mla	r7, r8, r7, r5
 801ca08:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ca0c:	00c9      	lsls	r1, r1, #3
 801ca0e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ca12:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ca16:	fa1f f28e 	uxth.w	r2, lr
 801ca1a:	b2c9      	uxtb	r1, r1
 801ca1c:	b2ff      	uxtb	r7, r7
 801ca1e:	437b      	muls	r3, r7
 801ca20:	4378      	muls	r0, r7
 801ca22:	434f      	muls	r7, r1
 801ca24:	1c59      	adds	r1, r3, #1
 801ca26:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ca2a:	1213      	asrs	r3, r2, #8
 801ca2c:	f023 0307 	bic.w	r3, r3, #7
 801ca30:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ca34:	1c41      	adds	r1, r0, #1
 801ca36:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ca3a:	10d1      	asrs	r1, r2, #3
 801ca3c:	021b      	lsls	r3, r3, #8
 801ca3e:	f021 0103 	bic.w	r1, r1, #3
 801ca42:	00d2      	lsls	r2, r2, #3
 801ca44:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801ca48:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ca4c:	00c9      	lsls	r1, r1, #3
 801ca4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ca52:	430b      	orrs	r3, r1
 801ca54:	1c79      	adds	r1, r7, #1
 801ca56:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801ca5a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ca5e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ca62:	431a      	orrs	r2, r3
 801ca64:	9b03      	ldr	r3, [sp, #12]
 801ca66:	801a      	strh	r2, [r3, #0]
 801ca68:	b005      	add	sp, #20
 801ca6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca6e:	f04f 0c00 	mov.w	ip, #0
 801ca72:	4664      	mov	r4, ip
 801ca74:	e6e5      	b.n	801c842 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801ca76:	2300      	movs	r3, #0
 801ca78:	469c      	mov	ip, r3
 801ca7a:	461a      	mov	r2, r3
 801ca7c:	461c      	mov	r4, r3
 801ca7e:	e707      	b.n	801c890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca80:	2300      	movs	r3, #0
 801ca82:	461a      	mov	r2, r3
 801ca84:	e704      	b.n	801c890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca86:	460b      	mov	r3, r1
 801ca88:	460a      	mov	r2, r1
 801ca8a:	e701      	b.n	801c890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ca8c:	2500      	movs	r5, #0
 801ca8e:	46ab      	mov	fp, r5
 801ca90:	e72f      	b.n	801c8f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ca92:	2700      	movs	r7, #0
 801ca94:	463d      	mov	r5, r7
 801ca96:	4638      	mov	r0, r7
 801ca98:	46bb      	mov	fp, r7
 801ca9a:	e754      	b.n	801c946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ca9c:	4677      	mov	r7, lr
 801ca9e:	4675      	mov	r5, lr
 801caa0:	4670      	mov	r0, lr
 801caa2:	46f3      	mov	fp, lr
 801caa4:	e74f      	b.n	801c946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801caa6:	2700      	movs	r7, #0
 801caa8:	4638      	mov	r0, r7
 801caaa:	e74c      	b.n	801c946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801caac:	460f      	mov	r7, r1
 801caae:	4608      	mov	r0, r1
 801cab0:	e749      	b.n	801c946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cab8:	b093      	sub	sp, #76	; 0x4c
 801caba:	9210      	str	r2, [sp, #64]	; 0x40
 801cabc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cabe:	9011      	str	r0, [sp, #68]	; 0x44
 801cac0:	910e      	str	r1, [sp, #56]	; 0x38
 801cac2:	6850      	ldr	r0, [r2, #4]
 801cac4:	9306      	str	r3, [sp, #24]
 801cac6:	6812      	ldr	r2, [r2, #0]
 801cac8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cacc:	fb00 1303 	mla	r3, r0, r3, r1
 801cad0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cad4:	9307      	str	r3, [sp, #28]
 801cad6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cad8:	681b      	ldr	r3, [r3, #0]
 801cada:	9308      	str	r3, [sp, #32]
 801cadc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cade:	685b      	ldr	r3, [r3, #4]
 801cae0:	9309      	str	r3, [sp, #36]	; 0x24
 801cae2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cae4:	2b00      	cmp	r3, #0
 801cae6:	dc03      	bgt.n	801caf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cae8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801caea:	2b00      	cmp	r3, #0
 801caec:	f340 83b6 	ble.w	801d25c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801caf0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801caf2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801caf6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cafa:	1e48      	subs	r0, r1, #1
 801cafc:	1e55      	subs	r5, r2, #1
 801cafe:	9b06      	ldr	r3, [sp, #24]
 801cb00:	2b00      	cmp	r3, #0
 801cb02:	f340 8165 	ble.w	801cdd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cb06:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cb08:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cb0a:	1436      	asrs	r6, r6, #16
 801cb0c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cb10:	d406      	bmi.n	801cb20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb12:	4286      	cmp	r6, r0
 801cb14:	da04      	bge.n	801cb20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb16:	2b00      	cmp	r3, #0
 801cb18:	db02      	blt.n	801cb20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb1a:	42ab      	cmp	r3, r5
 801cb1c:	f2c0 8159 	blt.w	801cdd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801cb20:	3601      	adds	r6, #1
 801cb22:	f100 8146 	bmi.w	801cdb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cb26:	42b1      	cmp	r1, r6
 801cb28:	f2c0 8143 	blt.w	801cdb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cb2c:	3301      	adds	r3, #1
 801cb2e:	f100 8140 	bmi.w	801cdb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cb32:	429a      	cmp	r2, r3
 801cb34:	f2c0 813d 	blt.w	801cdb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cb38:	9b06      	ldr	r3, [sp, #24]
 801cb3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cb3e:	9f07      	ldr	r7, [sp, #28]
 801cb40:	930f      	str	r3, [sp, #60]	; 0x3c
 801cb42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cb44:	2b00      	cmp	r3, #0
 801cb46:	f340 8166 	ble.w	801ce16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801cb4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cb4c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cb4e:	1418      	asrs	r0, r3, #16
 801cb50:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cb52:	142d      	asrs	r5, r5, #16
 801cb54:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cb58:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cb5a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cb5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb60:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cb64:	f100 81f0 	bmi.w	801cf48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cb68:	f102 3eff 	add.w	lr, r2, #4294967295
 801cb6c:	4575      	cmp	r5, lr
 801cb6e:	f280 81eb 	bge.w	801cf48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cb72:	2800      	cmp	r0, #0
 801cb74:	f2c0 81e8 	blt.w	801cf48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cb78:	f103 3eff 	add.w	lr, r3, #4294967295
 801cb7c:	4570      	cmp	r0, lr
 801cb7e:	f280 81e3 	bge.w	801cf48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cb82:	b212      	sxth	r2, r2
 801cb84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb86:	fa1f fe81 	uxth.w	lr, r1
 801cb8a:	fb00 5002 	mla	r0, r0, r2, r5
 801cb8e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cb92:	eb03 0a00 	add.w	sl, r3, r0
 801cb96:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cb9a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cb9e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cba2:	b29b      	uxth	r3, r3
 801cba4:	f1bc 0f00 	cmp.w	ip, #0
 801cba8:	f000 817b 	beq.w	801cea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801cbac:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cbb0:	eb0a 0b02 	add.w	fp, sl, r2
 801cbb4:	fa1f fa8c 	uxth.w	sl, ip
 801cbb8:	940a      	str	r4, [sp, #40]	; 0x28
 801cbba:	fb0a fe0e 	mul.w	lr, sl, lr
 801cbbe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cbc2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cbc6:	eba5 050e 	sub.w	r5, r5, lr
 801cbca:	940b      	str	r4, [sp, #44]	; 0x2c
 801cbcc:	fa1f fa8a 	uxth.w	sl, sl
 801cbd0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cbd2:	b2ad      	uxth	r5, r5
 801cbd4:	eba3 030a 	sub.w	r3, r3, sl
 801cbd8:	fb08 f505 	mul.w	r5, r8, r5
 801cbdc:	b29b      	uxth	r3, r3
 801cbde:	fb09 5303 	mla	r3, r9, r3, r5
 801cbe2:	fb0a 3304 	mla	r3, sl, r4, r3
 801cbe6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cbe8:	fb0e 3304 	mla	r3, lr, r4, r3
 801cbec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cbf0:	2b00      	cmp	r3, #0
 801cbf2:	f000 80d1 	beq.w	801cd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cbf6:	9c08      	ldr	r4, [sp, #32]
 801cbf8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cbfc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cc00:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cc04:	f000 8152 	beq.w	801ceac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cc08:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cc0c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cc10:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc14:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc18:	fb09 f000 	mul.w	r0, r9, r0
 801cc1c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cc20:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cc24:	f100 0b20 	add.w	fp, r0, #32
 801cc28:	44ce      	add	lr, r9
 801cc2a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cc2e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cc32:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cc36:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cc3a:	ea4e 0909 	orr.w	r9, lr, r9
 801cc3e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cc42:	8868      	ldrh	r0, [r5, #2]
 801cc44:	d019      	beq.n	801cc7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cc46:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cc4a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cc4e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc52:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc56:	fb08 f800 	mul.w	r8, r8, r0
 801cc5a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cc5e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cc62:	f108 0b20 	add.w	fp, r8, #32
 801cc66:	4486      	add	lr, r0
 801cc68:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cc6c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cc70:	0a00      	lsrs	r0, r0, #8
 801cc72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc76:	ea4e 0000 	orr.w	r0, lr, r0
 801cc7a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cc7e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cc82:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cc86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cc8a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cc8e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cc92:	ea4e 0909 	orr.w	r9, lr, r9
 801cc96:	ea4a 0000 	orr.w	r0, sl, r0
 801cc9a:	f1bc 0f00 	cmp.w	ip, #0
 801cc9e:	f000 8107 	beq.w	801ceb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801cca2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cca6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cca8:	3a01      	subs	r2, #1
 801ccaa:	2cff      	cmp	r4, #255	; 0xff
 801ccac:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801ccb0:	f102 0202 	add.w	r2, r2, #2
 801ccb4:	eb05 0e02 	add.w	lr, r5, r2
 801ccb8:	5aaa      	ldrh	r2, [r5, r2]
 801ccba:	d018      	beq.n	801ccee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ccbc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ccc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ccc4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ccc8:	fb04 fa02 	mul.w	sl, r4, r2
 801cccc:	fb08 f805 	mul.w	r8, r8, r5
 801ccd0:	f10a 0520 	add.w	r5, sl, #32
 801ccd4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ccd8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ccdc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cce0:	4442      	add	r2, r8
 801cce2:	0a2d      	lsrs	r5, r5, #8
 801cce4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cce8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ccec:	432a      	orrs	r2, r5
 801ccee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ccf0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ccf4:	2cff      	cmp	r4, #255	; 0xff
 801ccf6:	d01a      	beq.n	801cd2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ccf8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801ccfc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd00:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd04:	fb04 fa05 	mul.w	sl, r4, r5
 801cd08:	fb08 f80e 	mul.w	r8, r8, lr
 801cd0c:	f10a 0e20 	add.w	lr, sl, #32
 801cd10:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cd14:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd18:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cd1c:	4445      	add	r5, r8
 801cd1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cd22:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cd26:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cd2a:	ea45 050e 	orr.w	r5, r5, lr
 801cd2e:	fb1c fe01 	smulbb	lr, ip, r1
 801cd32:	f1cc 0810 	rsb	r8, ip, #16
 801cd36:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cd3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cd3e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cd42:	eba8 0801 	sub.w	r8, r8, r1
 801cd46:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cd4a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd4e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cd52:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cd56:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cd5a:	ea4a 0202 	orr.w	r2, sl, r2
 801cd5e:	4341      	muls	r1, r0
 801cd60:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cd64:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cd68:	fb09 1108 	mla	r1, r9, r8, r1
 801cd6c:	ea4b 0505 	orr.w	r5, fp, r5
 801cd70:	fb0c 1102 	mla	r1, ip, r2, r1
 801cd74:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cd78:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cd7c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cd80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd84:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cd88:	ea42 0e0e 	orr.w	lr, r2, lr
 801cd8c:	fa1f f28e 	uxth.w	r2, lr
 801cd90:	2bff      	cmp	r3, #255	; 0xff
 801cd92:	f040 80a1 	bne.w	801ced8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801cd96:	803a      	strh	r2, [r7, #0]
 801cd98:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cd9a:	3702      	adds	r7, #2
 801cd9c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cd9e:	4413      	add	r3, r2
 801cda0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cda2:	931d      	str	r3, [sp, #116]	; 0x74
 801cda4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cda6:	441a      	add	r2, r3
 801cda8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cdaa:	3b01      	subs	r3, #1
 801cdac:	921e      	str	r2, [sp, #120]	; 0x78
 801cdae:	930f      	str	r3, [sp, #60]	; 0x3c
 801cdb0:	e6c7      	b.n	801cb42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cdb2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cdb4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cdb6:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801cdb8:	4433      	add	r3, r6
 801cdba:	931d      	str	r3, [sp, #116]	; 0x74
 801cdbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cdbe:	441c      	add	r4, r3
 801cdc0:	9b06      	ldr	r3, [sp, #24]
 801cdc2:	3b01      	subs	r3, #1
 801cdc4:	941e      	str	r4, [sp, #120]	; 0x78
 801cdc6:	9306      	str	r3, [sp, #24]
 801cdc8:	9b07      	ldr	r3, [sp, #28]
 801cdca:	3302      	adds	r3, #2
 801cdcc:	9307      	str	r3, [sp, #28]
 801cdce:	e696      	b.n	801cafe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cdd0:	d028      	beq.n	801ce24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801cdd2:	9b06      	ldr	r3, [sp, #24]
 801cdd4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cdd6:	3b01      	subs	r3, #1
 801cdd8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cdda:	fb00 5003 	mla	r0, r0, r3, r5
 801cdde:	1400      	asrs	r0, r0, #16
 801cde0:	f53f aeaa 	bmi.w	801cb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cde4:	3901      	subs	r1, #1
 801cde6:	4288      	cmp	r0, r1
 801cde8:	f6bf aea6 	bge.w	801cb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cdec:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cdee:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cdf0:	fb01 0303 	mla	r3, r1, r3, r0
 801cdf4:	141b      	asrs	r3, r3, #16
 801cdf6:	f53f ae9f 	bmi.w	801cb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cdfa:	3a01      	subs	r2, #1
 801cdfc:	4293      	cmp	r3, r2
 801cdfe:	f6bf ae9b 	bge.w	801cb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce02:	9b06      	ldr	r3, [sp, #24]
 801ce04:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ce08:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ce0c:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce10:	2b00      	cmp	r3, #0
 801ce12:	f300 80b6 	bgt.w	801cf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801ce16:	9b06      	ldr	r3, [sp, #24]
 801ce18:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ce1c:	9b07      	ldr	r3, [sp, #28]
 801ce1e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ce22:	9307      	str	r3, [sp, #28]
 801ce24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce26:	2b00      	cmp	r3, #0
 801ce28:	f340 8218 	ble.w	801d25c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ce2c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ce30:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce32:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce3a:	eef0 6a62 	vmov.f32	s13, s5
 801ce3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ce42:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce4a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801ce4e:	eef0 6a43 	vmov.f32	s13, s6
 801ce52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce56:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801ce5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce62:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce72:	ee12 2a90 	vmov	r2, s5
 801ce76:	eef0 2a47 	vmov.f32	s5, s14
 801ce7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce7e:	ee13 2a10 	vmov	r2, s6
 801ce82:	931f      	str	r3, [sp, #124]	; 0x7c
 801ce84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce86:	eeb0 3a67 	vmov.f32	s6, s15
 801ce8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce8e:	9320      	str	r3, [sp, #128]	; 0x80
 801ce90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ce94:	3b01      	subs	r3, #1
 801ce96:	930e      	str	r3, [sp, #56]	; 0x38
 801ce98:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce9a:	bf08      	it	eq
 801ce9c:	4613      	moveq	r3, r2
 801ce9e:	9306      	str	r3, [sp, #24]
 801cea0:	e61f      	b.n	801cae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cea2:	fb08 f505 	mul.w	r5, r8, r5
 801cea6:	fb09 5303 	mla	r3, r9, r3, r5
 801ceaa:	e69f      	b.n	801cbec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801ceac:	4681      	mov	r9, r0
 801ceae:	e6c6      	b.n	801cc3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801ceb0:	f1c1 0210 	rsb	r2, r1, #16
 801ceb4:	4341      	muls	r1, r0
 801ceb6:	fb09 1902 	mla	r9, r9, r2, r1
 801ceba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cebe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cec2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cec6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ceca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cece:	ea42 0909 	orr.w	r9, r2, r9
 801ced2:	fa1f f289 	uxth.w	r2, r9
 801ced6:	e75b      	b.n	801cd90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801ced8:	f8b7 c000 	ldrh.w	ip, [r7]
 801cedc:	43db      	mvns	r3, r3
 801cede:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cee2:	fa5f fe83 	uxtb.w	lr, r3
 801cee6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ceea:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ceee:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cef2:	fb00 f00e 	mul.w	r0, r0, lr
 801cef6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cefa:	b2db      	uxtb	r3, r3
 801cefc:	1c41      	adds	r1, r0, #1
 801cefe:	fb05 f50e 	mul.w	r5, r5, lr
 801cf02:	fb03 f30e 	mul.w	r3, r3, lr
 801cf06:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cf0a:	1211      	asrs	r1, r2, #8
 801cf0c:	f021 0107 	bic.w	r1, r1, #7
 801cf10:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cf14:	48d3      	ldr	r0, [pc, #844]	; (801d264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801cf16:	b2c9      	uxtb	r1, r1
 801cf18:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cf1c:	1c69      	adds	r1, r5, #1
 801cf1e:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cf22:	10d1      	asrs	r1, r2, #3
 801cf24:	00d2      	lsls	r2, r2, #3
 801cf26:	f021 0103 	bic.w	r1, r1, #3
 801cf2a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cf2e:	00c9      	lsls	r1, r1, #3
 801cf30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cf34:	4301      	orrs	r1, r0
 801cf36:	1c58      	adds	r0, r3, #1
 801cf38:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cf3c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cf40:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cf44:	430a      	orrs	r2, r1
 801cf46:	e726      	b.n	801cd96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801cf48:	f115 0e01 	adds.w	lr, r5, #1
 801cf4c:	f53f af24 	bmi.w	801cd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf50:	4572      	cmp	r2, lr
 801cf52:	f6ff af21 	blt.w	801cd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf56:	f110 0e01 	adds.w	lr, r0, #1
 801cf5a:	f53f af1d 	bmi.w	801cd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf5e:	4573      	cmp	r3, lr
 801cf60:	f6ff af1a 	blt.w	801cd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf64:	b21b      	sxth	r3, r3
 801cf66:	b212      	sxth	r2, r2
 801cf68:	9301      	str	r3, [sp, #4]
 801cf6a:	9200      	str	r2, [sp, #0]
 801cf6c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801cf70:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801cf74:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801cf78:	4639      	mov	r1, r7
 801cf7a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cf7c:	f7ff fc22 	bl	801c7c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cf80:	e70a      	b.n	801cd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cf82:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cf84:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cf88:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cf8a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cf8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cf90:	fa1f fc82 	uxth.w	ip, r2
 801cf94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cf98:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cf9a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cf9e:	141f      	asrs	r7, r3, #16
 801cfa0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cfa2:	141b      	asrs	r3, r3, #16
 801cfa4:	fb01 3707 	mla	r7, r1, r7, r3
 801cfa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cfaa:	eb03 0a07 	add.w	sl, r3, r7
 801cfae:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cfb2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801cfb6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cfba:	b29b      	uxth	r3, r3
 801cfbc:	2d00      	cmp	r5, #0
 801cfbe:	f000 80fe 	beq.w	801d1be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801cfc2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cfc6:	eb0a 0b01 	add.w	fp, sl, r1
 801cfca:	fa1f fa85 	uxth.w	sl, r5
 801cfce:	940c      	str	r4, [sp, #48]	; 0x30
 801cfd0:	fb0a fc0c 	mul.w	ip, sl, ip
 801cfd4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cfd8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cfdc:	eba0 000c 	sub.w	r0, r0, ip
 801cfe0:	940d      	str	r4, [sp, #52]	; 0x34
 801cfe2:	fa1f fa8a 	uxth.w	sl, sl
 801cfe6:	b280      	uxth	r0, r0
 801cfe8:	eba3 030a 	sub.w	r3, r3, sl
 801cfec:	fb08 f000 	mul.w	r0, r8, r0
 801cff0:	b29b      	uxth	r3, r3
 801cff2:	fb09 0303 	mla	r3, r9, r3, r0
 801cff6:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cff8:	fb0a 3300 	mla	r3, sl, r0, r3
 801cffc:	fb0c 3304 	mla	r3, ip, r4, r3
 801d000:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d004:	2b00      	cmp	r3, #0
 801d006:	f000 80cc 	beq.w	801d1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801d00a:	9808      	ldr	r0, [sp, #32]
 801d00c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d010:	9c08      	ldr	r4, [sp, #32]
 801d012:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d016:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d01a:	f000 80d5 	beq.w	801d1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d01e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d022:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d026:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d02a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d02e:	fb09 f707 	mul.w	r7, r9, r7
 801d032:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d036:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d03a:	f107 0b20 	add.w	fp, r7, #32
 801d03e:	44cc      	add	ip, r9
 801d040:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d044:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d048:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d04c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d050:	ea4c 0909 	orr.w	r9, ip, r9
 801d054:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d058:	8847      	ldrh	r7, [r0, #2]
 801d05a:	d019      	beq.n	801d090 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801d05c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d060:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d064:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d068:	fb0a fc0c 	mul.w	ip, sl, ip
 801d06c:	fb08 f807 	mul.w	r8, r8, r7
 801d070:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d074:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d078:	f108 0b20 	add.w	fp, r8, #32
 801d07c:	44bc      	add	ip, r7
 801d07e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d082:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d086:	0a3f      	lsrs	r7, r7, #8
 801d088:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d08c:	ea4c 0707 	orr.w	r7, ip, r7
 801d090:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d094:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d098:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d09c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d0a0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d0a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d0a8:	ea4c 0909 	orr.w	r9, ip, r9
 801d0ac:	ea4a 0707 	orr.w	r7, sl, r7
 801d0b0:	2d00      	cmp	r5, #0
 801d0b2:	f000 808b 	beq.w	801d1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801d0b6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d0ba:	3901      	subs	r1, #1
 801d0bc:	0049      	lsls	r1, r1, #1
 801d0be:	3102      	adds	r1, #2
 801d0c0:	eb00 0c01 	add.w	ip, r0, r1
 801d0c4:	5a41      	ldrh	r1, [r0, r1]
 801d0c6:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d0c8:	28ff      	cmp	r0, #255	; 0xff
 801d0ca:	d019      	beq.n	801d100 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801d0cc:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d0d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d0d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d0d6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0da:	fb04 fa01 	mul.w	sl, r4, r1
 801d0de:	fb08 f800 	mul.w	r8, r8, r0
 801d0e2:	f10a 0020 	add.w	r0, sl, #32
 801d0e6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d0ea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d0ee:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d0f2:	4441      	add	r1, r8
 801d0f4:	0a00      	lsrs	r0, r0, #8
 801d0f6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d0fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d0fe:	4301      	orrs	r1, r0
 801d100:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d102:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d106:	2cff      	cmp	r4, #255	; 0xff
 801d108:	d01a      	beq.n	801d140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801d10a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d10e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d112:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d116:	fb04 fa00 	mul.w	sl, r4, r0
 801d11a:	fb08 f80c 	mul.w	r8, r8, ip
 801d11e:	f10a 0c20 	add.w	ip, sl, #32
 801d122:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d126:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d12a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d12e:	4440      	add	r0, r8
 801d130:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d134:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d138:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d13c:	ea40 000c 	orr.w	r0, r0, ip
 801d140:	fb15 fc02 	smulbb	ip, r5, r2
 801d144:	f1c5 0810 	rsb	r8, r5, #16
 801d148:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d14c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d150:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d154:	eba8 0802 	sub.w	r8, r8, r2
 801d158:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d15c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d160:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d164:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d168:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d16c:	ea4a 0101 	orr.w	r1, sl, r1
 801d170:	437a      	muls	r2, r7
 801d172:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d176:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d17a:	fb09 2208 	mla	r2, r9, r8, r2
 801d17e:	ea4b 0000 	orr.w	r0, fp, r0
 801d182:	fb05 2201 	mla	r2, r5, r1, r2
 801d186:	fb0c 2200 	mla	r2, ip, r0, r2
 801d18a:	0d57      	lsrs	r7, r2, #21
 801d18c:	0952      	lsrs	r2, r2, #5
 801d18e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d192:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d196:	433a      	orrs	r2, r7
 801d198:	2bff      	cmp	r3, #255	; 0xff
 801d19a:	b292      	uxth	r2, r2
 801d19c:	d127      	bne.n	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801d19e:	f8ae 2000 	strh.w	r2, [lr]
 801d1a2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d1a4:	f10e 0e02 	add.w	lr, lr, #2
 801d1a8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d1aa:	4413      	add	r3, r2
 801d1ac:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d1ae:	931d      	str	r3, [sp, #116]	; 0x74
 801d1b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d1b2:	441a      	add	r2, r3
 801d1b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d1b6:	3b01      	subs	r3, #1
 801d1b8:	921e      	str	r2, [sp, #120]	; 0x78
 801d1ba:	930f      	str	r3, [sp, #60]	; 0x3c
 801d1bc:	e627      	b.n	801ce0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d1be:	fb08 f000 	mul.w	r0, r8, r0
 801d1c2:	fb09 0303 	mla	r3, r9, r3, r0
 801d1c6:	e71b      	b.n	801d000 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801d1c8:	46b9      	mov	r9, r7
 801d1ca:	e743      	b.n	801d054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801d1cc:	f1c2 0110 	rsb	r1, r2, #16
 801d1d0:	437a      	muls	r2, r7
 801d1d2:	fb09 2901 	mla	r9, r9, r1, r2
 801d1d6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d1da:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d1de:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d1e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d1ea:	4302      	orrs	r2, r0
 801d1ec:	e7d4      	b.n	801d198 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801d1ee:	f8be 7000 	ldrh.w	r7, [lr]
 801d1f2:	43db      	mvns	r3, r3
 801d1f4:	4c1b      	ldr	r4, [pc, #108]	; (801d264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801d1f6:	1238      	asrs	r0, r7, #8
 801d1f8:	fa5f fc83 	uxtb.w	ip, r3
 801d1fc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d200:	10fd      	asrs	r5, r7, #3
 801d202:	00fb      	lsls	r3, r7, #3
 801d204:	fb00 f00c 	mul.w	r0, r0, ip
 801d208:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d20c:	b2db      	uxtb	r3, r3
 801d20e:	fb05 f10c 	mul.w	r1, r5, ip
 801d212:	1c45      	adds	r5, r0, #1
 801d214:	fb03 f30c 	mul.w	r3, r3, ip
 801d218:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d21c:	1215      	asrs	r5, r2, #8
 801d21e:	f025 0507 	bic.w	r5, r5, #7
 801d222:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d226:	1c4d      	adds	r5, r1, #1
 801d228:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d22c:	10d1      	asrs	r1, r2, #3
 801d22e:	b2c0      	uxtb	r0, r0
 801d230:	f021 0103 	bic.w	r1, r1, #3
 801d234:	00d2      	lsls	r2, r2, #3
 801d236:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d23a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d23e:	00c9      	lsls	r1, r1, #3
 801d240:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d244:	4308      	orrs	r0, r1
 801d246:	1c59      	adds	r1, r3, #1
 801d248:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d24c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d250:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d254:	4318      	orrs	r0, r3
 801d256:	f8ae 0000 	strh.w	r0, [lr]
 801d25a:	e7a2      	b.n	801d1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801d25c:	b013      	add	sp, #76	; 0x4c
 801d25e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d262:	bf00      	nop
 801d264:	fffff800 	.word	0xfffff800

0801d268 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d268:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d26c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d270:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d274:	fb05 4c03 	mla	ip, r5, r3, r4
 801d278:	2d00      	cmp	r5, #0
 801d27a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d27e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d282:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d286:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d28a:	8808      	ldrh	r0, [r1, #0]
 801d28c:	f2c0 80a7 	blt.w	801d3de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d290:	45aa      	cmp	sl, r5
 801d292:	f340 80a4 	ble.w	801d3de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d296:	2c00      	cmp	r4, #0
 801d298:	f2c0 809f 	blt.w	801d3da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d29c:	42a3      	cmp	r3, r4
 801d29e:	f340 809c 	ble.w	801d3da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d2a2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d2a6:	1c62      	adds	r2, r4, #1
 801d2a8:	f100 809c 	bmi.w	801d3e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d2ac:	4293      	cmp	r3, r2
 801d2ae:	f340 8099 	ble.w	801d3e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d2b2:	f1b9 0f00 	cmp.w	r9, #0
 801d2b6:	f000 8095 	beq.w	801d3e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d2ba:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d2be:	3501      	adds	r5, #1
 801d2c0:	f100 8094 	bmi.w	801d3ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d2c4:	45aa      	cmp	sl, r5
 801d2c6:	f340 8091 	ble.w	801d3ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d2ca:	2f00      	cmp	r7, #0
 801d2cc:	f000 808e 	beq.w	801d3ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d2d0:	2c00      	cmp	r4, #0
 801d2d2:	f2c0 8089 	blt.w	801d3e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d2d6:	42a3      	cmp	r3, r4
 801d2d8:	f340 8086 	ble.w	801d3e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d2dc:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d2e0:	3401      	adds	r4, #1
 801d2e2:	f100 8086 	bmi.w	801d3f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d2e6:	42a3      	cmp	r3, r4
 801d2e8:	f340 8083 	ble.w	801d3f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d2ec:	f1b9 0f00 	cmp.w	r9, #0
 801d2f0:	d07f      	beq.n	801d3f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d2f2:	3301      	adds	r3, #1
 801d2f4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d2f8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d2fc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d300:	fb19 fe07 	smulbb	lr, r9, r7
 801d304:	f1c7 0210 	rsb	r2, r7, #16
 801d308:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d30c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d310:	eba2 0209 	sub.w	r2, r2, r9
 801d314:	ea44 0808 	orr.w	r8, r4, r8
 801d318:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d31c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d320:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d324:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d328:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d32c:	ea44 0c0c 	orr.w	ip, r4, ip
 801d330:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d334:	fb04 f40c 	mul.w	r4, r4, ip
 801d338:	fb02 4808 	mla	r8, r2, r8, r4
 801d33c:	041a      	lsls	r2, r3, #16
 801d33e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d342:	b2b4      	uxth	r4, r6
 801d344:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d348:	43f6      	mvns	r6, r6
 801d34a:	4313      	orrs	r3, r2
 801d34c:	042a      	lsls	r2, r5, #16
 801d34e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d352:	b2f6      	uxtb	r6, r6
 801d354:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d358:	fb0e 8303 	mla	r3, lr, r3, r8
 801d35c:	432a      	orrs	r2, r5
 801d35e:	fb07 3202 	mla	r2, r7, r2, r3
 801d362:	10c7      	asrs	r7, r0, #3
 801d364:	0d53      	lsrs	r3, r2, #21
 801d366:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d36a:	0952      	lsrs	r2, r2, #5
 801d36c:	fb17 f706 	smulbb	r7, r7, r6
 801d370:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d374:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d378:	431a      	orrs	r2, r3
 801d37a:	b293      	uxth	r3, r2
 801d37c:	1202      	asrs	r2, r0, #8
 801d37e:	121d      	asrs	r5, r3, #8
 801d380:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d384:	00c0      	lsls	r0, r0, #3
 801d386:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d38a:	fb12 f206 	smulbb	r2, r2, r6
 801d38e:	b2c0      	uxtb	r0, r0
 801d390:	fb05 2504 	mla	r5, r5, r4, r2
 801d394:	10da      	asrs	r2, r3, #3
 801d396:	fb10 f006 	smulbb	r0, r0, r6
 801d39a:	00db      	lsls	r3, r3, #3
 801d39c:	b2ad      	uxth	r5, r5
 801d39e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d3a2:	b2db      	uxtb	r3, r3
 801d3a4:	fb02 7204 	mla	r2, r2, r4, r7
 801d3a8:	fb03 0004 	mla	r0, r3, r4, r0
 801d3ac:	1c6b      	adds	r3, r5, #1
 801d3ae:	b292      	uxth	r2, r2
 801d3b0:	b280      	uxth	r0, r0
 801d3b2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d3b6:	1c43      	adds	r3, r0, #1
 801d3b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d3bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d3c0:	1c50      	adds	r0, r2, #1
 801d3c2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d3c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d3ca:	0952      	lsrs	r2, r2, #5
 801d3cc:	432b      	orrs	r3, r5
 801d3ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d3d2:	4313      	orrs	r3, r2
 801d3d4:	800b      	strh	r3, [r1, #0]
 801d3d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d3da:	4680      	mov	r8, r0
 801d3dc:	e763      	b.n	801d2a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d3de:	4684      	mov	ip, r0
 801d3e0:	4680      	mov	r8, r0
 801d3e2:	e76c      	b.n	801d2be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d3e4:	4684      	mov	ip, r0
 801d3e6:	e76a      	b.n	801d2be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d3e8:	4605      	mov	r5, r0
 801d3ea:	e779      	b.n	801d2e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d3ec:	4603      	mov	r3, r0
 801d3ee:	4605      	mov	r5, r0
 801d3f0:	e782      	b.n	801d2f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d3f2:	4603      	mov	r3, r0
 801d3f4:	e780      	b.n	801d2f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d3f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d3f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3fa:	b093      	sub	sp, #76	; 0x4c
 801d3fc:	461d      	mov	r5, r3
 801d3fe:	9210      	str	r2, [sp, #64]	; 0x40
 801d400:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d402:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d406:	910a      	str	r1, [sp, #40]	; 0x28
 801d408:	920b      	str	r2, [sp, #44]	; 0x2c
 801d40a:	6859      	ldr	r1, [r3, #4]
 801d40c:	681b      	ldr	r3, [r3, #0]
 801d40e:	9011      	str	r0, [sp, #68]	; 0x44
 801d410:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d414:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d418:	fb01 2707 	mla	r7, r1, r7, r2
 801d41c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d420:	9307      	str	r3, [sp, #28]
 801d422:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d424:	681b      	ldr	r3, [r3, #0]
 801d426:	9309      	str	r3, [sp, #36]	; 0x24
 801d428:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d42a:	43db      	mvns	r3, r3
 801d42c:	b2db      	uxtb	r3, r3
 801d42e:	9308      	str	r3, [sp, #32]
 801d430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d432:	2b00      	cmp	r3, #0
 801d434:	dc03      	bgt.n	801d43e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d436:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d438:	2b00      	cmp	r3, #0
 801d43a:	f340 8205 	ble.w	801d848 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d43e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d440:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d444:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d448:	1e48      	subs	r0, r1, #1
 801d44a:	f102 3cff 	add.w	ip, r2, #4294967295
 801d44e:	2d00      	cmp	r5, #0
 801d450:	f340 80da 	ble.w	801d608 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d454:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d458:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d45c:	d406      	bmi.n	801d46c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d45e:	4586      	cmp	lr, r0
 801d460:	da04      	bge.n	801d46c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d462:	2b00      	cmp	r3, #0
 801d464:	db02      	blt.n	801d46c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d466:	4563      	cmp	r3, ip
 801d468:	f2c0 80cf 	blt.w	801d60a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d46c:	f11e 0e01 	adds.w	lr, lr, #1
 801d470:	f100 80c1 	bmi.w	801d5f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d474:	4571      	cmp	r1, lr
 801d476:	f2c0 80be 	blt.w	801d5f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d47a:	3301      	adds	r3, #1
 801d47c:	f100 80bb 	bmi.w	801d5f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d480:	429a      	cmp	r2, r3
 801d482:	f2c0 80b8 	blt.w	801d5f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d486:	46a9      	mov	r9, r5
 801d488:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d48c:	f1b9 0f00 	cmp.w	r9, #0
 801d490:	f340 80d8 	ble.w	801d644 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d494:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d496:	1421      	asrs	r1, r4, #16
 801d498:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d49c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d4a0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d4a4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d4a8:	f100 8112 	bmi.w	801d6d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d4ac:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d4b0:	4551      	cmp	r1, sl
 801d4b2:	f280 810d 	bge.w	801d6d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d4b6:	2800      	cmp	r0, #0
 801d4b8:	f2c0 810a 	blt.w	801d6d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d4bc:	f103 3aff 	add.w	sl, r3, #4294967295
 801d4c0:	4550      	cmp	r0, sl
 801d4c2:	f280 8105 	bge.w	801d6d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d4c6:	fa0f f38e 	sxth.w	r3, lr
 801d4ca:	fb00 1103 	mla	r1, r0, r3, r1
 801d4ce:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d4d0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d4d4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d4d8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d4dc:	f1bc 0f00 	cmp.w	ip, #0
 801d4e0:	d007      	beq.n	801d4f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d4e2:	005b      	lsls	r3, r3, #1
 801d4e4:	eb0a 0003 	add.w	r0, sl, r3
 801d4e8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d4ec:	930c      	str	r3, [sp, #48]	; 0x30
 801d4ee:	8843      	ldrh	r3, [r0, #2]
 801d4f0:	930d      	str	r3, [sp, #52]	; 0x34
 801d4f2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d4f6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d4fa:	fb12 f30c 	smulbb	r3, r2, ip
 801d4fe:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d502:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d506:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d50a:	10db      	asrs	r3, r3, #3
 801d50c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d510:	ea40 000e 	orr.w	r0, r0, lr
 801d514:	f1cc 0e10 	rsb	lr, ip, #16
 801d518:	ea4a 0101 	orr.w	r1, sl, r1
 801d51c:	9f08      	ldr	r7, [sp, #32]
 801d51e:	ebae 0e02 	sub.w	lr, lr, r2
 801d522:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d526:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d52a:	4351      	muls	r1, r2
 801d52c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d52e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d532:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d534:	0410      	lsls	r0, r2, #16
 801d536:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d53a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d53e:	4310      	orrs	r0, r2
 801d540:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d542:	0412      	lsls	r2, r2, #16
 801d544:	fb03 e000 	mla	r0, r3, r0, lr
 801d548:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d54c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d550:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d554:	ea42 020e 	orr.w	r2, r2, lr
 801d558:	fb03 0302 	mla	r3, r3, r2, r0
 801d55c:	f8b8 0000 	ldrh.w	r0, [r8]
 801d560:	0d5a      	lsrs	r2, r3, #21
 801d562:	095b      	lsrs	r3, r3, #5
 801d564:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d568:	1201      	asrs	r1, r0, #8
 801d56a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d56e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d572:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d576:	00c0      	lsls	r0, r0, #3
 801d578:	4313      	orrs	r3, r2
 801d57a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d57e:	fb11 f107 	smulbb	r1, r1, r7
 801d582:	b2c0      	uxtb	r0, r0
 801d584:	b29b      	uxth	r3, r3
 801d586:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d58a:	fb10 f007 	smulbb	r0, r0, r7
 801d58e:	fb1e fe07 	smulbb	lr, lr, r7
 801d592:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d596:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d59a:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d59e:	10d9      	asrs	r1, r3, #3
 801d5a0:	00db      	lsls	r3, r3, #3
 801d5a2:	fa1f fc8c 	uxth.w	ip, ip
 801d5a6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d5aa:	b2db      	uxtb	r3, r3
 801d5ac:	fb01 e102 	mla	r1, r1, r2, lr
 801d5b0:	fb03 0302 	mla	r3, r3, r2, r0
 801d5b4:	b289      	uxth	r1, r1
 801d5b6:	b29a      	uxth	r2, r3
 801d5b8:	f10c 0301 	add.w	r3, ip, #1
 801d5bc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d5c0:	1c53      	adds	r3, r2, #1
 801d5c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d5c6:	1c4a      	adds	r2, r1, #1
 801d5c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d5cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d5d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d5d4:	0949      	lsrs	r1, r1, #5
 801d5d6:	ea43 030c 	orr.w	r3, r3, ip
 801d5da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d5de:	430b      	orrs	r3, r1
 801d5e0:	f8a8 3000 	strh.w	r3, [r8]
 801d5e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d5e6:	f108 0802 	add.w	r8, r8, #2
 801d5ea:	f109 39ff 	add.w	r9, r9, #4294967295
 801d5ee:	441c      	add	r4, r3
 801d5f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d5f2:	441e      	add	r6, r3
 801d5f4:	e74a      	b.n	801d48c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d5f6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d5f8:	3d01      	subs	r5, #1
 801d5fa:	441c      	add	r4, r3
 801d5fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d5fe:	441e      	add	r6, r3
 801d600:	9b07      	ldr	r3, [sp, #28]
 801d602:	3302      	adds	r3, #2
 801d604:	9307      	str	r3, [sp, #28]
 801d606:	e722      	b.n	801d44e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d608:	d022      	beq.n	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d60a:	1e6b      	subs	r3, r5, #1
 801d60c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d60e:	fb00 4003 	mla	r0, r0, r3, r4
 801d612:	1400      	asrs	r0, r0, #16
 801d614:	f53f af37 	bmi.w	801d486 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d618:	3901      	subs	r1, #1
 801d61a:	4288      	cmp	r0, r1
 801d61c:	f6bf af33 	bge.w	801d486 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d620:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d622:	fb01 6303 	mla	r3, r1, r3, r6
 801d626:	141b      	asrs	r3, r3, #16
 801d628:	f53f af2d 	bmi.w	801d486 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d62c:	3a01      	subs	r2, #1
 801d62e:	4293      	cmp	r3, r2
 801d630:	f6bf af29 	bge.w	801d486 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d634:	46a8      	mov	r8, r5
 801d636:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d63a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d63e:	f1b8 0f00 	cmp.w	r8, #0
 801d642:	dc60      	bgt.n	801d706 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801d644:	9b07      	ldr	r3, [sp, #28]
 801d646:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d64a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d64e:	9307      	str	r3, [sp, #28]
 801d650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d652:	2b00      	cmp	r3, #0
 801d654:	f340 80f8 	ble.w	801d848 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d658:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d65c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d65e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d662:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d666:	eef0 6a62 	vmov.f32	s13, s5
 801d66a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d66e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d672:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d676:	ee16 4a90 	vmov	r4, s13
 801d67a:	eef0 6a43 	vmov.f32	s13, s6
 801d67e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d682:	ee16 6a90 	vmov	r6, s13
 801d686:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d68a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d68e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d692:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d696:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d69a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d69e:	ee12 2a90 	vmov	r2, s5
 801d6a2:	eef0 2a47 	vmov.f32	s5, s14
 801d6a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6aa:	ee13 2a10 	vmov	r2, s6
 801d6ae:	931f      	str	r3, [sp, #124]	; 0x7c
 801d6b0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d6b2:	eeb0 3a67 	vmov.f32	s6, s15
 801d6b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6ba:	9320      	str	r3, [sp, #128]	; 0x80
 801d6bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d6c0:	3b01      	subs	r3, #1
 801d6c2:	930a      	str	r3, [sp, #40]	; 0x28
 801d6c4:	bf08      	it	eq
 801d6c6:	4615      	moveq	r5, r2
 801d6c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d6ca:	bf18      	it	ne
 801d6cc:	461d      	movne	r5, r3
 801d6ce:	e6af      	b.n	801d430 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d6d0:	f111 0a01 	adds.w	sl, r1, #1
 801d6d4:	d486      	bmi.n	801d5e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d6d6:	45d6      	cmp	lr, sl
 801d6d8:	db84      	blt.n	801d5e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d6da:	f110 0a01 	adds.w	sl, r0, #1
 801d6de:	d481      	bmi.n	801d5e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d6e0:	4553      	cmp	r3, sl
 801d6e2:	f6ff af7f 	blt.w	801d5e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d6e6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d6e8:	b21b      	sxth	r3, r3
 801d6ea:	9101      	str	r1, [sp, #4]
 801d6ec:	4641      	mov	r1, r8
 801d6ee:	9300      	str	r3, [sp, #0]
 801d6f0:	fa0f f38e 	sxth.w	r3, lr
 801d6f4:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d6f8:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d6fc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d6fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d700:	f7ff fdb2 	bl	801d268 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d704:	e76e      	b.n	801d5e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d706:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d708:	1430      	asrs	r0, r6, #16
 801d70a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d70c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d710:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d714:	1423      	asrs	r3, r4, #16
 801d716:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d71a:	fb01 3000 	mla	r0, r1, r0, r3
 801d71e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d720:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d724:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d728:	8858      	ldrh	r0, [r3, #2]
 801d72a:	f1be 0f00 	cmp.w	lr, #0
 801d72e:	d00b      	beq.n	801d748 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801d730:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d734:	3901      	subs	r1, #1
 801d736:	0049      	lsls	r1, r1, #1
 801d738:	3102      	adds	r1, #2
 801d73a:	eb03 0b01 	add.w	fp, r3, r1
 801d73e:	5a5b      	ldrh	r3, [r3, r1]
 801d740:	930e      	str	r3, [sp, #56]	; 0x38
 801d742:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d746:	930f      	str	r3, [sp, #60]	; 0x3c
 801d748:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d74c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d750:	fb12 f30e 	smulbb	r3, r2, lr
 801d754:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d758:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d75c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d760:	10db      	asrs	r3, r3, #3
 801d762:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d766:	ea41 010c 	orr.w	r1, r1, ip
 801d76a:	f1ce 0c10 	rsb	ip, lr, #16
 801d76e:	ea4b 0000 	orr.w	r0, fp, r0
 801d772:	9f08      	ldr	r7, [sp, #32]
 801d774:	ebac 0c02 	sub.w	ip, ip, r2
 801d778:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d77c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d780:	4350      	muls	r0, r2
 801d782:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d786:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d788:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d78c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d78e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d792:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d796:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d798:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d79c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d7a0:	0412      	lsls	r2, r2, #16
 801d7a2:	ea4b 0101 	orr.w	r1, fp, r1
 801d7a6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d7aa:	fb03 c101 	mla	r1, r3, r1, ip
 801d7ae:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d7b2:	4302      	orrs	r2, r0
 801d7b4:	fb03 1202 	mla	r2, r3, r2, r1
 801d7b8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d7bc:	0952      	lsrs	r2, r2, #5
 801d7be:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d7c2:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d7c6:	f8b9 2000 	ldrh.w	r2, [r9]
 801d7ca:	ea4b 0303 	orr.w	r3, fp, r3
 801d7ce:	1211      	asrs	r1, r2, #8
 801d7d0:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d7d4:	b29b      	uxth	r3, r3
 801d7d6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d7da:	00d2      	lsls	r2, r2, #3
 801d7dc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d7e0:	fb11 f107 	smulbb	r1, r1, r7
 801d7e4:	1218      	asrs	r0, r3, #8
 801d7e6:	fb1c fc07 	smulbb	ip, ip, r7
 801d7ea:	b2d2      	uxtb	r2, r2
 801d7ec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d7f0:	fb12 f207 	smulbb	r2, r2, r7
 801d7f4:	fb00 100a 	mla	r0, r0, sl, r1
 801d7f8:	10d9      	asrs	r1, r3, #3
 801d7fa:	00db      	lsls	r3, r3, #3
 801d7fc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d800:	b280      	uxth	r0, r0
 801d802:	b2db      	uxtb	r3, r3
 801d804:	fb01 c10a 	mla	r1, r1, sl, ip
 801d808:	fb03 230a 	mla	r3, r3, sl, r2
 801d80c:	1c42      	adds	r2, r0, #1
 801d80e:	b289      	uxth	r1, r1
 801d810:	b29b      	uxth	r3, r3
 801d812:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d816:	f101 0c01 	add.w	ip, r1, #1
 801d81a:	1c5a      	adds	r2, r3, #1
 801d81c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d820:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d824:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d828:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d82a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d82e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d832:	441c      	add	r4, r3
 801d834:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d838:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d83a:	4310      	orrs	r0, r2
 801d83c:	441e      	add	r6, r3
 801d83e:	ea40 000c 	orr.w	r0, r0, ip
 801d842:	f829 0b02 	strh.w	r0, [r9], #2
 801d846:	e6fa      	b.n	801d63e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d848:	b013      	add	sp, #76	; 0x4c
 801d84a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d84e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d84e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d852:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d856:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d85a:	fb0e 4703 	mla	r7, lr, r3, r4
 801d85e:	f1be 0f00 	cmp.w	lr, #0
 801d862:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d866:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d86a:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d86e:	8808      	ldrh	r0, [r1, #0]
 801d870:	db60      	blt.n	801d934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d872:	45f1      	cmp	r9, lr
 801d874:	dd5e      	ble.n	801d934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d876:	2c00      	cmp	r4, #0
 801d878:	db5a      	blt.n	801d930 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d87a:	42a3      	cmp	r3, r4
 801d87c:	dd58      	ble.n	801d930 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d87e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d882:	1c62      	adds	r2, r4, #1
 801d884:	d459      	bmi.n	801d93a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d886:	4293      	cmp	r3, r2
 801d888:	dd57      	ble.n	801d93a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d88a:	2d00      	cmp	r5, #0
 801d88c:	d055      	beq.n	801d93a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d88e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d892:	f11e 0e01 	adds.w	lr, lr, #1
 801d896:	d454      	bmi.n	801d942 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d898:	45f1      	cmp	r9, lr
 801d89a:	dd52      	ble.n	801d942 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d89c:	2e00      	cmp	r6, #0
 801d89e:	d050      	beq.n	801d942 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d8a0:	2c00      	cmp	r4, #0
 801d8a2:	db4c      	blt.n	801d93e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d8a4:	42a3      	cmp	r3, r4
 801d8a6:	dd4a      	ble.n	801d93e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d8a8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d8ac:	3401      	adds	r4, #1
 801d8ae:	d405      	bmi.n	801d8bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d8b0:	42a3      	cmp	r3, r4
 801d8b2:	dd03      	ble.n	801d8bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d8b4:	b115      	cbz	r5, 801d8bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d8b6:	3301      	adds	r3, #1
 801d8b8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d8bc:	fb15 f406 	smulbb	r4, r5, r6
 801d8c0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d8c4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d8c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d8cc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d8d0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d8d4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d8d8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d8dc:	ea43 0c0c 	orr.w	ip, r3, ip
 801d8e0:	f1c6 0310 	rsb	r3, r6, #16
 801d8e4:	ea4e 0707 	orr.w	r7, lr, r7
 801d8e8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d8ec:	1b5b      	subs	r3, r3, r5
 801d8ee:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d8f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d8f6:	437d      	muls	r5, r7
 801d8f8:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d8fc:	0403      	lsls	r3, r0, #16
 801d8fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d902:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d906:	4318      	orrs	r0, r3
 801d908:	0413      	lsls	r3, r2, #16
 801d90a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d90e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d912:	fb04 c000 	mla	r0, r4, r0, ip
 801d916:	4313      	orrs	r3, r2
 801d918:	fb06 0003 	mla	r0, r6, r3, r0
 801d91c:	0d43      	lsrs	r3, r0, #21
 801d91e:	0940      	lsrs	r0, r0, #5
 801d920:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d924:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d928:	4318      	orrs	r0, r3
 801d92a:	8008      	strh	r0, [r1, #0]
 801d92c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d930:	4684      	mov	ip, r0
 801d932:	e7a6      	b.n	801d882 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d934:	4607      	mov	r7, r0
 801d936:	4684      	mov	ip, r0
 801d938:	e7ab      	b.n	801d892 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d93a:	4607      	mov	r7, r0
 801d93c:	e7a9      	b.n	801d892 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d93e:	4602      	mov	r2, r0
 801d940:	e7b4      	b.n	801d8ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d942:	4602      	mov	r2, r0
 801d944:	e7ba      	b.n	801d8bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d946 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d946:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d94a:	b08f      	sub	sp, #60	; 0x3c
 801d94c:	461d      	mov	r5, r3
 801d94e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d950:	9107      	str	r1, [sp, #28]
 801d952:	920c      	str	r2, [sp, #48]	; 0x30
 801d954:	6859      	ldr	r1, [r3, #4]
 801d956:	681b      	ldr	r3, [r3, #0]
 801d958:	900d      	str	r0, [sp, #52]	; 0x34
 801d95a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d95e:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d962:	fb01 2707 	mla	r7, r1, r7, r2
 801d966:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d96a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d96c:	f8d3 8000 	ldr.w	r8, [r3]
 801d970:	9b07      	ldr	r3, [sp, #28]
 801d972:	2b00      	cmp	r3, #0
 801d974:	dc03      	bgt.n	801d97e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d976:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d978:	2b00      	cmp	r3, #0
 801d97a:	f340 8182 	ble.w	801dc82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801d97e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d980:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d984:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d988:	1e48      	subs	r0, r1, #1
 801d98a:	f102 3cff 	add.w	ip, r2, #4294967295
 801d98e:	2d00      	cmp	r5, #0
 801d990:	f340 809b 	ble.w	801daca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d994:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d998:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d99c:	d406      	bmi.n	801d9ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d99e:	4586      	cmp	lr, r0
 801d9a0:	da04      	bge.n	801d9ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d9a2:	2b00      	cmp	r3, #0
 801d9a4:	db02      	blt.n	801d9ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d9a6:	4563      	cmp	r3, ip
 801d9a8:	f2c0 8090 	blt.w	801dacc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d9ac:	f11e 0e01 	adds.w	lr, lr, #1
 801d9b0:	f100 8084 	bmi.w	801dabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d9b4:	4571      	cmp	r1, lr
 801d9b6:	f2c0 8081 	blt.w	801dabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d9ba:	3301      	adds	r3, #1
 801d9bc:	d47e      	bmi.n	801dabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d9be:	429a      	cmp	r2, r3
 801d9c0:	db7c      	blt.n	801dabc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d9c2:	46aa      	mov	sl, r5
 801d9c4:	46b9      	mov	r9, r7
 801d9c6:	f1ba 0f00 	cmp.w	sl, #0
 801d9ca:	f340 8099 	ble.w	801db00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d9ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9d0:	1421      	asrs	r1, r4, #16
 801d9d2:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d9d6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d9da:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d9de:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d9e2:	f100 80d1 	bmi.w	801db88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d9e6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d9ea:	4559      	cmp	r1, fp
 801d9ec:	f280 80cc 	bge.w	801db88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d9f0:	2800      	cmp	r0, #0
 801d9f2:	f2c0 80c9 	blt.w	801db88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d9f6:	f103 3bff 	add.w	fp, r3, #4294967295
 801d9fa:	4558      	cmp	r0, fp
 801d9fc:	f280 80c4 	bge.w	801db88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801da00:	fa0f fe8e 	sxth.w	lr, lr
 801da04:	fb00 110e 	mla	r1, r0, lr, r1
 801da08:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801da0c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801da10:	8841      	ldrh	r1, [r0, #2]
 801da12:	f1bc 0f00 	cmp.w	ip, #0
 801da16:	d00b      	beq.n	801da30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801da18:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801da1c:	3b01      	subs	r3, #1
 801da1e:	005b      	lsls	r3, r3, #1
 801da20:	3302      	adds	r3, #2
 801da22:	eb00 0e03 	add.w	lr, r0, r3
 801da26:	5ac3      	ldrh	r3, [r0, r3]
 801da28:	9308      	str	r3, [sp, #32]
 801da2a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801da2e:	9309      	str	r3, [sp, #36]	; 0x24
 801da30:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801da34:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801da38:	fb12 f30c 	smulbb	r3, r2, ip
 801da3c:	f1cc 0e10 	rsb	lr, ip, #16
 801da40:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801da44:	10db      	asrs	r3, r3, #3
 801da46:	ebae 0e02 	sub.w	lr, lr, r2
 801da4a:	ea40 000b 	orr.w	r0, r0, fp
 801da4e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801da52:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801da56:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801da5a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801da5e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801da62:	ea4b 0101 	orr.w	r1, fp, r1
 801da66:	4351      	muls	r1, r2
 801da68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801da6a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801da6e:	0410      	lsls	r0, r2, #16
 801da70:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801da74:	9908      	ldr	r1, [sp, #32]
 801da76:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801da7a:	4310      	orrs	r0, r2
 801da7c:	9a08      	ldr	r2, [sp, #32]
 801da7e:	0412      	lsls	r2, r2, #16
 801da80:	fb03 e000 	mla	r0, r3, r0, lr
 801da84:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801da88:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801da8c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801da90:	ea42 020e 	orr.w	r2, r2, lr
 801da94:	fb03 0302 	mla	r3, r3, r2, r0
 801da98:	0d5a      	lsrs	r2, r3, #21
 801da9a:	095b      	lsrs	r3, r3, #5
 801da9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801daa0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801daa4:	4313      	orrs	r3, r2
 801daa6:	f8a9 3000 	strh.w	r3, [r9]
 801daaa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801daac:	f109 0902 	add.w	r9, r9, #2
 801dab0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801dab4:	441c      	add	r4, r3
 801dab6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dab8:	441e      	add	r6, r3
 801daba:	e784      	b.n	801d9c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801dabc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dabe:	3d01      	subs	r5, #1
 801dac0:	3702      	adds	r7, #2
 801dac2:	441c      	add	r4, r3
 801dac4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dac6:	441e      	add	r6, r3
 801dac8:	e761      	b.n	801d98e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801daca:	d01d      	beq.n	801db08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801dacc:	1e6b      	subs	r3, r5, #1
 801dace:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801dad0:	fb00 4003 	mla	r0, r0, r3, r4
 801dad4:	1400      	asrs	r0, r0, #16
 801dad6:	f53f af74 	bmi.w	801d9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dada:	3901      	subs	r1, #1
 801dadc:	4288      	cmp	r0, r1
 801dade:	f6bf af70 	bge.w	801d9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dae2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801dae4:	fb01 6303 	mla	r3, r1, r3, r6
 801dae8:	141b      	asrs	r3, r3, #16
 801daea:	f53f af6a 	bmi.w	801d9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801daee:	3a01      	subs	r2, #1
 801daf0:	4293      	cmp	r3, r2
 801daf2:	f6bf af66 	bge.w	801d9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801daf6:	46a9      	mov	r9, r5
 801daf8:	46ba      	mov	sl, r7
 801dafa:	f1b9 0f00 	cmp.w	r9, #0
 801dafe:	dc5b      	bgt.n	801dbb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801db00:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801db04:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801db08:	9b07      	ldr	r3, [sp, #28]
 801db0a:	2b00      	cmp	r3, #0
 801db0c:	f340 80b9 	ble.w	801dc82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801db10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801db14:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801db16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db1e:	eef0 6a62 	vmov.f32	s13, s5
 801db22:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801db26:	ee31 1a05 	vadd.f32	s2, s2, s10
 801db2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db2e:	ee16 4a90 	vmov	r4, s13
 801db32:	eef0 6a43 	vmov.f32	s13, s6
 801db36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db3a:	ee16 6a90 	vmov	r6, s13
 801db3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801db42:	ee61 7a27 	vmul.f32	s15, s2, s15
 801db46:	ee77 2a62 	vsub.f32	s5, s14, s5
 801db4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801db4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801db52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801db56:	ee12 2a90 	vmov	r2, s5
 801db5a:	eef0 2a47 	vmov.f32	s5, s14
 801db5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801db62:	ee13 2a10 	vmov	r2, s6
 801db66:	931b      	str	r3, [sp, #108]	; 0x6c
 801db68:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801db6a:	eeb0 3a67 	vmov.f32	s6, s15
 801db6e:	fb92 f3f3 	sdiv	r3, r2, r3
 801db72:	931c      	str	r3, [sp, #112]	; 0x70
 801db74:	9b07      	ldr	r3, [sp, #28]
 801db76:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801db78:	3b01      	subs	r3, #1
 801db7a:	9307      	str	r3, [sp, #28]
 801db7c:	bf08      	it	eq
 801db7e:	4615      	moveq	r5, r2
 801db80:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801db82:	bf18      	it	ne
 801db84:	461d      	movne	r5, r3
 801db86:	e6f3      	b.n	801d970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801db88:	f111 0b01 	adds.w	fp, r1, #1
 801db8c:	d48d      	bmi.n	801daaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db8e:	45de      	cmp	lr, fp
 801db90:	db8b      	blt.n	801daaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db92:	f110 0b01 	adds.w	fp, r0, #1
 801db96:	d488      	bmi.n	801daaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db98:	455b      	cmp	r3, fp
 801db9a:	db86      	blt.n	801daaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801db9c:	b21b      	sxth	r3, r3
 801db9e:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dba2:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dba6:	9300      	str	r3, [sp, #0]
 801dba8:	4642      	mov	r2, r8
 801dbaa:	fa0f f38e 	sxth.w	r3, lr
 801dbae:	4649      	mov	r1, r9
 801dbb0:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dbb2:	f7ff fe4c 	bl	801d84e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dbb6:	e778      	b.n	801daaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dbb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dbba:	1420      	asrs	r0, r4, #16
 801dbbc:	1431      	asrs	r1, r6, #16
 801dbbe:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dbc2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dbc6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dbca:	fb03 0101 	mla	r1, r3, r1, r0
 801dbce:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dbd2:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dbd6:	8841      	ldrh	r1, [r0, #2]
 801dbd8:	f1be 0f00 	cmp.w	lr, #0
 801dbdc:	d00b      	beq.n	801dbf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801dbde:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801dbe2:	3b01      	subs	r3, #1
 801dbe4:	005b      	lsls	r3, r3, #1
 801dbe6:	3302      	adds	r3, #2
 801dbe8:	eb00 0b03 	add.w	fp, r0, r3
 801dbec:	5ac3      	ldrh	r3, [r0, r3]
 801dbee:	930a      	str	r3, [sp, #40]	; 0x28
 801dbf0:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dbf4:	930b      	str	r3, [sp, #44]	; 0x2c
 801dbf6:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dbfa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dbfe:	fb12 f30e 	smulbb	r3, r2, lr
 801dc02:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dc06:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dc0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dc0e:	10db      	asrs	r3, r3, #3
 801dc10:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dc14:	ea40 000c 	orr.w	r0, r0, ip
 801dc18:	f1ce 0c10 	rsb	ip, lr, #16
 801dc1c:	ea4b 0101 	orr.w	r1, fp, r1
 801dc20:	f109 39ff 	add.w	r9, r9, #4294967295
 801dc24:	ebac 0c02 	sub.w	ip, ip, r2
 801dc28:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dc2c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dc30:	4351      	muls	r1, r2
 801dc32:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dc34:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dc38:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dc3a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dc3e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dc42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dc44:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dc48:	0412      	lsls	r2, r2, #16
 801dc4a:	ea4b 0000 	orr.w	r0, fp, r0
 801dc4e:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801dc52:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dc56:	fb03 c000 	mla	r0, r3, r0, ip
 801dc5a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dc5e:	ea42 0b0b 	orr.w	fp, r2, fp
 801dc62:	fb03 000b 	mla	r0, r3, fp, r0
 801dc66:	0d43      	lsrs	r3, r0, #21
 801dc68:	0940      	lsrs	r0, r0, #5
 801dc6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dc6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dc72:	4318      	orrs	r0, r3
 801dc74:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dc76:	441c      	add	r4, r3
 801dc78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc7a:	f82a 0b02 	strh.w	r0, [sl], #2
 801dc7e:	441e      	add	r6, r3
 801dc80:	e73b      	b.n	801dafa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dc82:	b00f      	add	sp, #60	; 0x3c
 801dc84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dc88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dc88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc8c:	b085      	sub	sp, #20
 801dc8e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dc92:	9102      	str	r1, [sp, #8]
 801dc94:	2c00      	cmp	r4, #0
 801dc96:	fb04 7103 	mla	r1, r4, r3, r7
 801dc9a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801dc9e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801dca2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dca6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801dcaa:	f2c0 811b 	blt.w	801dee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dcae:	45a6      	cmp	lr, r4
 801dcb0:	f340 8118 	ble.w	801dee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dcb4:	2f00      	cmp	r7, #0
 801dcb6:	f2c0 8113 	blt.w	801dee0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dcba:	42bb      	cmp	r3, r7
 801dcbc:	f340 8110 	ble.w	801dee0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dcc0:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dcc4:	1c7a      	adds	r2, r7, #1
 801dcc6:	f100 8110 	bmi.w	801deea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dcca:	4293      	cmp	r3, r2
 801dccc:	f340 810d 	ble.w	801deea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dcd0:	2e00      	cmp	r6, #0
 801dcd2:	f000 810c 	beq.w	801deee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dcd6:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dcda:	3401      	adds	r4, #1
 801dcdc:	f100 810b 	bmi.w	801def6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dce0:	45a6      	cmp	lr, r4
 801dce2:	f340 8108 	ble.w	801def6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dce6:	2800      	cmp	r0, #0
 801dce8:	f000 8108 	beq.w	801defc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801dcec:	2f00      	cmp	r7, #0
 801dcee:	f2c0 8100 	blt.w	801def2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dcf2:	42bb      	cmp	r3, r7
 801dcf4:	f340 80fd 	ble.w	801def2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dcf8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dcfc:	3701      	adds	r7, #1
 801dcfe:	f100 8100 	bmi.w	801df02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dd02:	42bb      	cmp	r3, r7
 801dd04:	f340 80fd 	ble.w	801df02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dd08:	2e00      	cmp	r6, #0
 801dd0a:	f000 80fc 	beq.w	801df06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801dd0e:	3301      	adds	r3, #1
 801dd10:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801dd14:	b2b6      	uxth	r6, r6
 801dd16:	b280      	uxth	r0, r0
 801dd18:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dd1c:	fb00 fe06 	mul.w	lr, r0, r6
 801dd20:	0136      	lsls	r6, r6, #4
 801dd22:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dd26:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dd2a:	eba6 070e 	sub.w	r7, r6, lr
 801dd2e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dd32:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dd36:	b280      	uxth	r0, r0
 801dd38:	b2bf      	uxth	r7, r7
 801dd3a:	1a1b      	subs	r3, r3, r0
 801dd3c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801dd40:	fb0a f607 	mul.w	r6, sl, r7
 801dd44:	b29b      	uxth	r3, r3
 801dd46:	fb0b 6603 	mla	r6, fp, r3, r6
 801dd4a:	fb00 6609 	mla	r6, r0, r9, r6
 801dd4e:	fb0e 6608 	mla	r6, lr, r8, r6
 801dd52:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dd56:	9600      	str	r6, [sp, #0]
 801dd58:	2e00      	cmp	r6, #0
 801dd5a:	f000 80be 	beq.w	801deda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801dd5e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dd62:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801dd66:	9e02      	ldr	r6, [sp, #8]
 801dd68:	fb0b fc0c 	mul.w	ip, fp, ip
 801dd6c:	fb0b f505 	mul.w	r5, fp, r5
 801dd70:	8836      	ldrh	r6, [r6, #0]
 801dd72:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dd76:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dd7a:	9501      	str	r5, [sp, #4]
 801dd7c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801dd80:	44dc      	add	ip, fp
 801dd82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd86:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801dd8a:	9503      	str	r5, [sp, #12]
 801dd8c:	9d01      	ldr	r5, [sp, #4]
 801dd8e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801dd92:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dd96:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801dd9a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dd9e:	fb0a fc0c 	mul.w	ip, sl, ip
 801dda2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dda6:	fb0a fa01 	mul.w	sl, sl, r1
 801ddaa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ddae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ddb2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ddb6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ddba:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ddbe:	4465      	add	r5, ip
 801ddc0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ddc4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ddc8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ddcc:	fb09 fc0c 	mul.w	ip, r9, ip
 801ddd0:	0a2d      	lsrs	r5, r5, #8
 801ddd2:	fb09 f904 	mul.w	r9, r9, r4
 801ddd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ddda:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ddde:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dde2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801dde6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ddea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ddee:	437d      	muls	r5, r7
 801ddf0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ddf4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ddf8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ddfc:	4461      	add	r1, ip
 801ddfe:	fb08 f404 	mul.w	r4, r8, r4
 801de02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801de06:	fb08 f802 	mul.w	r8, r8, r2
 801de0a:	0a09      	lsrs	r1, r1, #8
 801de0c:	0a22      	lsrs	r2, r4, #8
 801de0e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801de12:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801de16:	fb07 f70a 	mul.w	r7, r7, sl
 801de1a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801de1e:	4414      	add	r4, r2
 801de20:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801de24:	0a24      	lsrs	r4, r4, #8
 801de26:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801de2a:	9a03      	ldr	r2, [sp, #12]
 801de2c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801de30:	fb02 5503 	mla	r5, r2, r3, r5
 801de34:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801de38:	9a00      	ldr	r2, [sp, #0]
 801de3a:	fb04 540e 	mla	r4, r4, lr, r5
 801de3e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801de42:	1235      	asrs	r5, r6, #8
 801de44:	fb01 4100 	mla	r1, r1, r0, r4
 801de48:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801de4c:	0a09      	lsrs	r1, r1, #8
 801de4e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801de52:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801de56:	fb03 7101 	mla	r1, r3, r1, r7
 801de5a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801de5e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801de62:	fb00 e101 	mla	r1, r0, r1, lr
 801de66:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801de6a:	b287      	uxth	r7, r0
 801de6c:	0a09      	lsrs	r1, r1, #8
 801de6e:	437a      	muls	r2, r7
 801de70:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801de74:	1c53      	adds	r3, r2, #1
 801de76:	4321      	orrs	r1, r4
 801de78:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801de7c:	0c0a      	lsrs	r2, r1, #16
 801de7e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801de82:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801de86:	b2c8      	uxtb	r0, r1
 801de88:	fb12 f207 	smulbb	r2, r2, r7
 801de8c:	fb14 f407 	smulbb	r4, r4, r7
 801de90:	b2db      	uxtb	r3, r3
 801de92:	fb10 f007 	smulbb	r0, r0, r7
 801de96:	fb05 2503 	mla	r5, r5, r3, r2
 801de9a:	10f2      	asrs	r2, r6, #3
 801de9c:	00f6      	lsls	r6, r6, #3
 801de9e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801dea2:	b2ad      	uxth	r5, r5
 801dea4:	b2f6      	uxtb	r6, r6
 801dea6:	fb02 4203 	mla	r2, r2, r3, r4
 801deaa:	fb06 0303 	mla	r3, r6, r3, r0
 801deae:	b294      	uxth	r4, r2
 801deb0:	b299      	uxth	r1, r3
 801deb2:	1c6b      	adds	r3, r5, #1
 801deb4:	1c62      	adds	r2, r4, #1
 801deb6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801deba:	1c4b      	adds	r3, r1, #1
 801debc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dec0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dec4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dec8:	0952      	lsrs	r2, r2, #5
 801deca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dece:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ded2:	432b      	orrs	r3, r5
 801ded4:	4313      	orrs	r3, r2
 801ded6:	9a02      	ldr	r2, [sp, #8]
 801ded8:	8013      	strh	r3, [r2, #0]
 801deda:	b005      	add	sp, #20
 801dedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dee0:	2500      	movs	r5, #0
 801dee2:	e6ef      	b.n	801dcc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801dee4:	2100      	movs	r1, #0
 801dee6:	460d      	mov	r5, r1
 801dee8:	e6f7      	b.n	801dcda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801deea:	2100      	movs	r1, #0
 801deec:	e6f5      	b.n	801dcda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801deee:	4631      	mov	r1, r6
 801def0:	e6f3      	b.n	801dcda <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801def2:	2400      	movs	r4, #0
 801def4:	e702      	b.n	801dcfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801def6:	2200      	movs	r2, #0
 801def8:	4614      	mov	r4, r2
 801defa:	e70b      	b.n	801dd14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801defc:	4602      	mov	r2, r0
 801defe:	4604      	mov	r4, r0
 801df00:	e708      	b.n	801dd14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df02:	2200      	movs	r2, #0
 801df04:	e706      	b.n	801dd14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df06:	4632      	mov	r2, r6
 801df08:	e704      	b.n	801dd14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801df0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801df0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df0e:	b09d      	sub	sp, #116	; 0x74
 801df10:	9219      	str	r2, [sp, #100]	; 0x64
 801df12:	9307      	str	r3, [sp, #28]
 801df14:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801df16:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801df1a:	901b      	str	r0, [sp, #108]	; 0x6c
 801df1c:	931a      	str	r3, [sp, #104]	; 0x68
 801df1e:	6850      	ldr	r0, [r2, #4]
 801df20:	9117      	str	r1, [sp, #92]	; 0x5c
 801df22:	6812      	ldr	r2, [r2, #0]
 801df24:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801df28:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801df2c:	fb00 1303 	mla	r3, r0, r3, r1
 801df30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801df34:	930a      	str	r3, [sp, #40]	; 0x28
 801df36:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801df38:	681b      	ldr	r3, [r3, #0]
 801df3a:	9310      	str	r3, [sp, #64]	; 0x40
 801df3c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801df40:	930b      	str	r3, [sp, #44]	; 0x2c
 801df42:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801df44:	2b00      	cmp	r3, #0
 801df46:	dc03      	bgt.n	801df50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801df48:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801df4a:	2b00      	cmp	r3, #0
 801df4c:	f340 8375 	ble.w	801e63a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801df50:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801df52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801df5a:	1e48      	subs	r0, r1, #1
 801df5c:	1e57      	subs	r7, r2, #1
 801df5e:	9b07      	ldr	r3, [sp, #28]
 801df60:	2b00      	cmp	r3, #0
 801df62:	f340 818e 	ble.w	801e282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801df66:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801df6a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801df6e:	d406      	bmi.n	801df7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df70:	4584      	cmp	ip, r0
 801df72:	da04      	bge.n	801df7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df74:	2b00      	cmp	r3, #0
 801df76:	db02      	blt.n	801df7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df78:	42bb      	cmp	r3, r7
 801df7a:	f2c0 8183 	blt.w	801e284 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801df7e:	f11c 0c01 	adds.w	ip, ip, #1
 801df82:	f100 8173 	bmi.w	801e26c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df86:	4561      	cmp	r1, ip
 801df88:	f2c0 8170 	blt.w	801e26c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df8c:	3301      	adds	r3, #1
 801df8e:	f100 816d 	bmi.w	801e26c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df92:	429a      	cmp	r2, r3
 801df94:	f2c0 816a 	blt.w	801e26c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df98:	9b07      	ldr	r3, [sp, #28]
 801df9a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801df9c:	9318      	str	r3, [sp, #96]	; 0x60
 801df9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dfa0:	2b00      	cmp	r3, #0
 801dfa2:	f340 818c 	ble.w	801e2be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801dfa6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801dfa8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dfac:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dfae:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801dfb2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dfb6:	1422      	asrs	r2, r4, #16
 801dfb8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801dfbc:	689b      	ldr	r3, [r3, #8]
 801dfbe:	f100 81cd 	bmi.w	801e35c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dfc2:	f103 38ff 	add.w	r8, r3, #4294967295
 801dfc6:	4542      	cmp	r2, r8
 801dfc8:	f280 81c8 	bge.w	801e35c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dfcc:	f1bc 0f00 	cmp.w	ip, #0
 801dfd0:	f2c0 81c4 	blt.w	801e35c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dfd4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801dfd8:	45c4      	cmp	ip, r8
 801dfda:	f280 81bf 	bge.w	801e35c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dfde:	b21b      	sxth	r3, r3
 801dfe0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dfe2:	fb0c 2203 	mla	r2, ip, r3, r2
 801dfe6:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801dfea:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801dfee:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801dff2:	2800      	cmp	r0, #0
 801dff4:	f000 81a9 	beq.w	801e34a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801dff8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801dffc:	950c      	str	r5, [sp, #48]	; 0x30
 801dffe:	0e2d      	lsrs	r5, r5, #24
 801e000:	9513      	str	r5, [sp, #76]	; 0x4c
 801e002:	b181      	cbz	r1, 801e026 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e004:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e008:	3b01      	subs	r3, #1
 801e00a:	009b      	lsls	r3, r3, #2
 801e00c:	3304      	adds	r3, #4
 801e00e:	eb08 0c03 	add.w	ip, r8, r3
 801e012:	f858 3003 	ldr.w	r3, [r8, r3]
 801e016:	9308      	str	r3, [sp, #32]
 801e018:	0e1b      	lsrs	r3, r3, #24
 801e01a:	9311      	str	r3, [sp, #68]	; 0x44
 801e01c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e020:	930d      	str	r3, [sp, #52]	; 0x34
 801e022:	0e1b      	lsrs	r3, r3, #24
 801e024:	9314      	str	r3, [sp, #80]	; 0x50
 801e026:	b280      	uxth	r0, r0
 801e028:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e02a:	b289      	uxth	r1, r1
 801e02c:	fb00 f901 	mul.w	r9, r0, r1
 801e030:	0100      	lsls	r0, r0, #4
 801e032:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e036:	eba0 0809 	sub.w	r8, r0, r9
 801e03a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e03e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e040:	b289      	uxth	r1, r1
 801e042:	fa1f f888 	uxth.w	r8, r8
 801e046:	1a5b      	subs	r3, r3, r1
 801e048:	fb08 f000 	mul.w	r0, r8, r0
 801e04c:	b29b      	uxth	r3, r3
 801e04e:	fb03 000e 	mla	r0, r3, lr, r0
 801e052:	fb01 0005 	mla	r0, r1, r5, r0
 801e056:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e058:	fb09 0005 	mla	r0, r9, r5, r0
 801e05c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e060:	2800      	cmp	r0, #0
 801e062:	f000 80fa 	beq.w	801e25a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e066:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e06a:	d01b      	beq.n	801e0a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e06c:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e070:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e074:	fb0e fa0a 	mul.w	sl, lr, sl
 801e078:	fb0e fe02 	mul.w	lr, lr, r2
 801e07c:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e080:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e084:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e088:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e08c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e090:	4452      	add	r2, sl
 801e092:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e096:	0a12      	lsrs	r2, r2, #8
 801e098:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e09c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e0a0:	ea42 020c 	orr.w	r2, r2, ip
 801e0a4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e0a6:	2dff      	cmp	r5, #255	; 0xff
 801e0a8:	d021      	beq.n	801e0ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e0aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e0ac:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e0b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e0b2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e0b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e0b8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e0bc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e0be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e0c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e0c6:	fb05 fa0a 	mul.w	sl, r5, sl
 801e0ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e0ce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e0d2:	44de      	add	lr, fp
 801e0d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e0d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e0dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e0e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e0e8:	ea4e 050a 	orr.w	r5, lr, sl
 801e0ec:	950c      	str	r5, [sp, #48]	; 0x30
 801e0ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e0f0:	2dff      	cmp	r5, #255	; 0xff
 801e0f2:	d021      	beq.n	801e138 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e0f4:	9d08      	ldr	r5, [sp, #32]
 801e0f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e0fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e0fc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e100:	9d08      	ldr	r5, [sp, #32]
 801e102:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e106:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e108:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e10c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e110:	fb05 fa0a 	mul.w	sl, r5, sl
 801e114:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e118:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e11c:	44de      	add	lr, fp
 801e11e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e122:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e126:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e12a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e12e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e132:	ea4e 050a 	orr.w	r5, lr, sl
 801e136:	9508      	str	r5, [sp, #32]
 801e138:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e13a:	2dff      	cmp	r5, #255	; 0xff
 801e13c:	d021      	beq.n	801e182 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e13e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e140:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e144:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e146:	fb05 fb0b 	mul.w	fp, r5, fp
 801e14a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e14c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e150:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e152:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e156:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e15a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e15e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e162:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e166:	44de      	add	lr, fp
 801e168:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e16c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e170:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e174:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e178:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e17c:	ea4e 050a 	orr.w	r5, lr, sl
 801e180:	950d      	str	r5, [sp, #52]	; 0x34
 801e182:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e184:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e188:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e18c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e190:	9d08      	ldr	r5, [sp, #32]
 801e192:	fb08 fc0c 	mul.w	ip, r8, ip
 801e196:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e19a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e19e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e1a0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e1a4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e1a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e1aa:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e1ae:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e1b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e1b4:	fb08 f80e 	mul.w	r8, r8, lr
 801e1b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e1bc:	fb03 8202 	mla	r2, r3, r2, r8
 801e1c0:	9b08      	ldr	r3, [sp, #32]
 801e1c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e1c6:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e1ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e1cc:	fb01 220a 	mla	r2, r1, sl, r2
 801e1d0:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e1d4:	883b      	ldrh	r3, [r7, #0]
 801e1d6:	fb09 2901 	mla	r9, r9, r1, r2
 801e1da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e1dc:	1219      	asrs	r1, r3, #8
 801e1de:	4342      	muls	r2, r0
 801e1e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e1e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e1e8:	1c50      	adds	r0, r2, #1
 801e1ea:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e1ee:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e1f2:	ea4c 0c09 	orr.w	ip, ip, r9
 801e1f6:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e1fa:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e1fe:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e202:	fa5f fc8c 	uxtb.w	ip, ip
 801e206:	fb12 f205 	smulbb	r2, r2, r5
 801e20a:	b2c0      	uxtb	r0, r0
 801e20c:	fb1c fc05 	smulbb	ip, ip, r5
 801e210:	fb01 2100 	mla	r1, r1, r0, r2
 801e214:	10da      	asrs	r2, r3, #3
 801e216:	fb1e fe05 	smulbb	lr, lr, r5
 801e21a:	00db      	lsls	r3, r3, #3
 801e21c:	b289      	uxth	r1, r1
 801e21e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e222:	b2db      	uxtb	r3, r3
 801e224:	fb02 e200 	mla	r2, r2, r0, lr
 801e228:	fb03 c300 	mla	r3, r3, r0, ip
 801e22c:	b292      	uxth	r2, r2
 801e22e:	fa1f fc83 	uxth.w	ip, r3
 801e232:	1c4b      	adds	r3, r1, #1
 801e234:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e238:	f10c 0301 	add.w	r3, ip, #1
 801e23c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e240:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e244:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e248:	430b      	orrs	r3, r1
 801e24a:	1c51      	adds	r1, r2, #1
 801e24c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e250:	0952      	lsrs	r2, r2, #5
 801e252:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e256:	4313      	orrs	r3, r2
 801e258:	803b      	strh	r3, [r7, #0]
 801e25a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e25c:	3702      	adds	r7, #2
 801e25e:	441c      	add	r4, r3
 801e260:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e262:	441e      	add	r6, r3
 801e264:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e266:	3b01      	subs	r3, #1
 801e268:	9318      	str	r3, [sp, #96]	; 0x60
 801e26a:	e698      	b.n	801df9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e26c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e26e:	441c      	add	r4, r3
 801e270:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e272:	441e      	add	r6, r3
 801e274:	9b07      	ldr	r3, [sp, #28]
 801e276:	3b01      	subs	r3, #1
 801e278:	9307      	str	r3, [sp, #28]
 801e27a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e27c:	3302      	adds	r3, #2
 801e27e:	930a      	str	r3, [sp, #40]	; 0x28
 801e280:	e66d      	b.n	801df5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e282:	d023      	beq.n	801e2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e284:	9b07      	ldr	r3, [sp, #28]
 801e286:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e288:	3b01      	subs	r3, #1
 801e28a:	fb00 4003 	mla	r0, r0, r3, r4
 801e28e:	1400      	asrs	r0, r0, #16
 801e290:	f53f ae82 	bmi.w	801df98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e294:	3901      	subs	r1, #1
 801e296:	4288      	cmp	r0, r1
 801e298:	f6bf ae7e 	bge.w	801df98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e29c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e29e:	fb01 6303 	mla	r3, r1, r3, r6
 801e2a2:	141b      	asrs	r3, r3, #16
 801e2a4:	f53f ae78 	bmi.w	801df98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e2a8:	3a01      	subs	r2, #1
 801e2aa:	4293      	cmp	r3, r2
 801e2ac:	f6bf ae74 	bge.w	801df98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e2b0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e2b4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e2b8:	f1bb 0f00 	cmp.w	fp, #0
 801e2bc:	dc6c      	bgt.n	801e398 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e2be:	9b07      	ldr	r3, [sp, #28]
 801e2c0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e2c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2c6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e2ca:	930a      	str	r3, [sp, #40]	; 0x28
 801e2cc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e2ce:	2b00      	cmp	r3, #0
 801e2d0:	f340 81b3 	ble.w	801e63a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e2d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e2d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e2da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2e2:	eef0 6a62 	vmov.f32	s13, s5
 801e2e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e2ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2f2:	ee16 4a90 	vmov	r4, s13
 801e2f6:	eef0 6a43 	vmov.f32	s13, s6
 801e2fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2fe:	ee16 6a90 	vmov	r6, s13
 801e302:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e306:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e30a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e30e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e312:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e316:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e31a:	ee12 2a90 	vmov	r2, s5
 801e31e:	eef0 2a47 	vmov.f32	s5, s14
 801e322:	fb92 f3f3 	sdiv	r3, r2, r3
 801e326:	ee13 2a10 	vmov	r2, s6
 801e32a:	9329      	str	r3, [sp, #164]	; 0xa4
 801e32c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e32e:	eeb0 3a67 	vmov.f32	s6, s15
 801e332:	fb92 f3f3 	sdiv	r3, r2, r3
 801e336:	932a      	str	r3, [sp, #168]	; 0xa8
 801e338:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e33a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e33c:	3b01      	subs	r3, #1
 801e33e:	9317      	str	r3, [sp, #92]	; 0x5c
 801e340:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e342:	bf08      	it	eq
 801e344:	4613      	moveq	r3, r2
 801e346:	9307      	str	r3, [sp, #28]
 801e348:	e5fb      	b.n	801df42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e34a:	2900      	cmp	r1, #0
 801e34c:	f43f ae6b 	beq.w	801e026 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e350:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e354:	9308      	str	r3, [sp, #32]
 801e356:	0e1b      	lsrs	r3, r3, #24
 801e358:	9311      	str	r3, [sp, #68]	; 0x44
 801e35a:	e664      	b.n	801e026 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e35c:	f112 0801 	adds.w	r8, r2, #1
 801e360:	f53f af7b 	bmi.w	801e25a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e364:	4543      	cmp	r3, r8
 801e366:	f6ff af78 	blt.w	801e25a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e36a:	f11c 0801 	adds.w	r8, ip, #1
 801e36e:	f53f af74 	bmi.w	801e25a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e372:	45c6      	cmp	lr, r8
 801e374:	f6ff af71 	blt.w	801e25a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e378:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e37a:	b21b      	sxth	r3, r3
 801e37c:	9201      	str	r2, [sp, #4]
 801e37e:	fa0f f28e 	sxth.w	r2, lr
 801e382:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e386:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e38a:	9200      	str	r2, [sp, #0]
 801e38c:	4639      	mov	r1, r7
 801e38e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e390:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e392:	f7ff fc79 	bl	801dc88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e396:	e760      	b.n	801e25a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e398:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e39a:	1427      	asrs	r7, r4, #16
 801e39c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e39e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e3a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e3a6:	1433      	asrs	r3, r6, #16
 801e3a8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e3ac:	fb01 7303 	mla	r3, r1, r3, r7
 801e3b0:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e3b4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e3b8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e3bc:	2a00      	cmp	r2, #0
 801e3be:	f000 8133 	beq.w	801e628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e3c2:	687d      	ldr	r5, [r7, #4]
 801e3c4:	950e      	str	r5, [sp, #56]	; 0x38
 801e3c6:	0e2d      	lsrs	r5, r5, #24
 801e3c8:	9515      	str	r5, [sp, #84]	; 0x54
 801e3ca:	b178      	cbz	r0, 801e3ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e3cc:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e3d0:	3901      	subs	r1, #1
 801e3d2:	0089      	lsls	r1, r1, #2
 801e3d4:	3104      	adds	r1, #4
 801e3d6:	eb07 0e01 	add.w	lr, r7, r1
 801e3da:	5879      	ldr	r1, [r7, r1]
 801e3dc:	9109      	str	r1, [sp, #36]	; 0x24
 801e3de:	0e09      	lsrs	r1, r1, #24
 801e3e0:	9112      	str	r1, [sp, #72]	; 0x48
 801e3e2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e3e6:	910f      	str	r1, [sp, #60]	; 0x3c
 801e3e8:	0e09      	lsrs	r1, r1, #24
 801e3ea:	9116      	str	r1, [sp, #88]	; 0x58
 801e3ec:	b292      	uxth	r2, r2
 801e3ee:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e3f0:	b280      	uxth	r0, r0
 801e3f2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e3f4:	fb02 f800 	mul.w	r8, r2, r0
 801e3f8:	0112      	lsls	r2, r2, #4
 801e3fa:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e3fe:	eba2 0e08 	sub.w	lr, r2, r8
 801e402:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e406:	b280      	uxth	r0, r0
 801e408:	fa1f fe8e 	uxth.w	lr, lr
 801e40c:	1a12      	subs	r2, r2, r0
 801e40e:	fb0e f101 	mul.w	r1, lr, r1
 801e412:	b292      	uxth	r2, r2
 801e414:	fb02 110c 	mla	r1, r2, ip, r1
 801e418:	fb00 1105 	mla	r1, r0, r5, r1
 801e41c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e41e:	fb08 1105 	mla	r1, r8, r5, r1
 801e422:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e426:	2900      	cmp	r1, #0
 801e428:	f000 80f5 	beq.w	801e616 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e42c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e430:	d019      	beq.n	801e466 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e432:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e436:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e43a:	fb0c fa0a 	mul.w	sl, ip, sl
 801e43e:	fb0c fc03 	mul.w	ip, ip, r3
 801e442:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e446:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e44a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e44e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e452:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e456:	4453      	add	r3, sl
 801e458:	0a3f      	lsrs	r7, r7, #8
 801e45a:	0a1b      	lsrs	r3, r3, #8
 801e45c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e460:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e464:	433b      	orrs	r3, r7
 801e466:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e468:	2dff      	cmp	r5, #255	; 0xff
 801e46a:	d020      	beq.n	801e4ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e46c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e46e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e472:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e474:	436f      	muls	r7, r5
 801e476:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e478:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e47c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e480:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e482:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e486:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e48a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e48e:	44bc      	add	ip, r7
 801e490:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e494:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e498:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e49c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e4a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e4a8:	ea4c 050a 	orr.w	r5, ip, sl
 801e4ac:	950e      	str	r5, [sp, #56]	; 0x38
 801e4ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e4b0:	2dff      	cmp	r5, #255	; 0xff
 801e4b2:	d020      	beq.n	801e4f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e4b4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e4b6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e4ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e4bc:	436f      	muls	r7, r5
 801e4be:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e4c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e4c4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e4c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e4ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e4ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e4d2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e4d6:	44bc      	add	ip, r7
 801e4d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e4dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e4e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e4e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e4f0:	ea4c 050a 	orr.w	r5, ip, sl
 801e4f4:	9509      	str	r5, [sp, #36]	; 0x24
 801e4f6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e4f8:	2dff      	cmp	r5, #255	; 0xff
 801e4fa:	d020      	beq.n	801e53e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e4fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e4fe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e502:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e504:	436f      	muls	r7, r5
 801e506:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e508:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e50c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e510:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e512:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e516:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e51a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e51e:	44bc      	add	ip, r7
 801e520:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e524:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e528:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e52c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e530:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e534:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e538:	ea4c 050a 	orr.w	r5, ip, sl
 801e53c:	950f      	str	r5, [sp, #60]	; 0x3c
 801e53e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e540:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e544:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e548:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e54c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e54e:	fb0e f707 	mul.w	r7, lr, r7
 801e552:	fb02 770c 	mla	r7, r2, ip, r7
 801e556:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e55a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e55c:	fb00 770c 	mla	r7, r0, ip, r7
 801e560:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e564:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e566:	fb08 770c 	mla	r7, r8, ip, r7
 801e56a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e56e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e570:	fb0e fe0c 	mul.w	lr, lr, ip
 801e574:	0a3f      	lsrs	r7, r7, #8
 801e576:	fb02 e303 	mla	r3, r2, r3, lr
 801e57a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e57c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e580:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e584:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e586:	fb00 330a 	mla	r3, r0, sl, r3
 801e58a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e58e:	f8b9 0000 	ldrh.w	r0, [r9]
 801e592:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e596:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e598:	1202      	asrs	r2, r0, #8
 801e59a:	4359      	muls	r1, r3
 801e59c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5a0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e5a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e5a8:	1c4b      	adds	r3, r1, #1
 801e5aa:	ea47 070c 	orr.w	r7, r7, ip
 801e5ae:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e5b2:	0c3b      	lsrs	r3, r7, #16
 801e5b4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e5b8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e5bc:	b2ff      	uxtb	r7, r7
 801e5be:	fb13 f305 	smulbb	r3, r3, r5
 801e5c2:	b2c9      	uxtb	r1, r1
 801e5c4:	fb17 f705 	smulbb	r7, r7, r5
 801e5c8:	fb02 3201 	mla	r2, r2, r1, r3
 801e5cc:	10c3      	asrs	r3, r0, #3
 801e5ce:	fb1c fc05 	smulbb	ip, ip, r5
 801e5d2:	00c0      	lsls	r0, r0, #3
 801e5d4:	b292      	uxth	r2, r2
 801e5d6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e5da:	b2c0      	uxtb	r0, r0
 801e5dc:	fb03 c301 	mla	r3, r3, r1, ip
 801e5e0:	fb00 7001 	mla	r0, r0, r1, r7
 801e5e4:	1c51      	adds	r1, r2, #1
 801e5e6:	b29b      	uxth	r3, r3
 801e5e8:	b280      	uxth	r0, r0
 801e5ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e5ee:	f100 0c01 	add.w	ip, r0, #1
 801e5f2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e5f6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e5fa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e5fe:	ea4c 0202 	orr.w	r2, ip, r2
 801e602:	f103 0c01 	add.w	ip, r3, #1
 801e606:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e60a:	095b      	lsrs	r3, r3, #5
 801e60c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e610:	431a      	orrs	r2, r3
 801e612:	f8a9 2000 	strh.w	r2, [r9]
 801e616:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e618:	f109 0902 	add.w	r9, r9, #2
 801e61c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e620:	441c      	add	r4, r3
 801e622:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e624:	441e      	add	r6, r3
 801e626:	e647      	b.n	801e2b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e628:	2800      	cmp	r0, #0
 801e62a:	f43f aedf 	beq.w	801e3ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e62e:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e632:	9109      	str	r1, [sp, #36]	; 0x24
 801e634:	0e09      	lsrs	r1, r1, #24
 801e636:	9112      	str	r1, [sp, #72]	; 0x48
 801e638:	e6d8      	b.n	801e3ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e63a:	b01d      	add	sp, #116	; 0x74
 801e63c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e640 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e644:	b085      	sub	sp, #20
 801e646:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e64a:	9102      	str	r1, [sp, #8]
 801e64c:	2c00      	cmp	r4, #0
 801e64e:	fb04 7103 	mla	r1, r4, r3, r7
 801e652:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e656:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e65a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e65e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e662:	f2c0 810c 	blt.w	801e87e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e666:	45a6      	cmp	lr, r4
 801e668:	f340 8109 	ble.w	801e87e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e66c:	2f00      	cmp	r7, #0
 801e66e:	f2c0 8104 	blt.w	801e87a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e672:	42bb      	cmp	r3, r7
 801e674:	f340 8101 	ble.w	801e87a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e678:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e67c:	1c7a      	adds	r2, r7, #1
 801e67e:	f100 8101 	bmi.w	801e884 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e682:	4293      	cmp	r3, r2
 801e684:	f340 80fe 	ble.w	801e884 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e688:	2e00      	cmp	r6, #0
 801e68a:	f000 80fd 	beq.w	801e888 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e68e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e692:	3401      	adds	r4, #1
 801e694:	f100 80fc 	bmi.w	801e890 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e698:	45a6      	cmp	lr, r4
 801e69a:	f340 80f9 	ble.w	801e890 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e69e:	2800      	cmp	r0, #0
 801e6a0:	f000 80f9 	beq.w	801e896 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e6a4:	2f00      	cmp	r7, #0
 801e6a6:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e6aa:	f2c0 80ef 	blt.w	801e88c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e6ae:	42bb      	cmp	r3, r7
 801e6b0:	f340 80ec 	ble.w	801e88c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e6b4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e6b8:	3701      	adds	r7, #1
 801e6ba:	f100 80ef 	bmi.w	801e89c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e6be:	42bb      	cmp	r3, r7
 801e6c0:	f340 80ec 	ble.w	801e89c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e6c4:	2e00      	cmp	r6, #0
 801e6c6:	f000 80eb 	beq.w	801e8a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e6ca:	6852      	ldr	r2, [r2, #4]
 801e6cc:	b2b6      	uxth	r6, r6
 801e6ce:	b280      	uxth	r0, r0
 801e6d0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e6d4:	fb00 fe06 	mul.w	lr, r0, r6
 801e6d8:	0136      	lsls	r6, r6, #4
 801e6da:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e6de:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e6e2:	eba6 070e 	sub.w	r7, r6, lr
 801e6e6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e6ea:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e6ee:	b280      	uxth	r0, r0
 801e6f0:	b2bf      	uxth	r7, r7
 801e6f2:	1a1b      	subs	r3, r3, r0
 801e6f4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e6f8:	fb07 f60a 	mul.w	r6, r7, sl
 801e6fc:	b29b      	uxth	r3, r3
 801e6fe:	fb0b 6603 	mla	r6, fp, r3, r6
 801e702:	fb00 6609 	mla	r6, r0, r9, r6
 801e706:	fb0e 6608 	mla	r6, lr, r8, r6
 801e70a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e70e:	9600      	str	r6, [sp, #0]
 801e710:	2e00      	cmp	r6, #0
 801e712:	f000 80af 	beq.w	801e874 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e716:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e71a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e71e:	9e02      	ldr	r6, [sp, #8]
 801e720:	fb0b fc0c 	mul.w	ip, fp, ip
 801e724:	fb0b f505 	mul.w	r5, fp, r5
 801e728:	8836      	ldrh	r6, [r6, #0]
 801e72a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e72e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e732:	9501      	str	r5, [sp, #4]
 801e734:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e738:	44dc      	add	ip, fp
 801e73a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e73e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e742:	9503      	str	r5, [sp, #12]
 801e744:	9d01      	ldr	r5, [sp, #4]
 801e746:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e74a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e74e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e752:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e756:	fb0a fc0c 	mul.w	ip, sl, ip
 801e75a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e75e:	fb0a fa01 	mul.w	sl, sl, r1
 801e762:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e766:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e76a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e76e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e772:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e776:	4465      	add	r5, ip
 801e778:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e77c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e780:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e784:	fb09 fc0c 	mul.w	ip, r9, ip
 801e788:	0a2d      	lsrs	r5, r5, #8
 801e78a:	fb09 f904 	mul.w	r9, r9, r4
 801e78e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e792:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e796:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e79a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e79e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e7a2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e7a6:	437d      	muls	r5, r7
 801e7a8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e7ac:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e7b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e7b4:	4461      	add	r1, ip
 801e7b6:	fb08 f404 	mul.w	r4, r8, r4
 801e7ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e7be:	fb08 f802 	mul.w	r8, r8, r2
 801e7c2:	0a09      	lsrs	r1, r1, #8
 801e7c4:	0a22      	lsrs	r2, r4, #8
 801e7c6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e7ca:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e7ce:	fb07 f70a 	mul.w	r7, r7, sl
 801e7d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e7d6:	4414      	add	r4, r2
 801e7d8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e7dc:	0a24      	lsrs	r4, r4, #8
 801e7de:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e7e2:	9a03      	ldr	r2, [sp, #12]
 801e7e4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e7e8:	fb02 5503 	mla	r5, r2, r3, r5
 801e7ec:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e7f0:	fb04 540e 	mla	r4, r4, lr, r5
 801e7f4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e7f8:	fb01 4100 	mla	r1, r1, r0, r4
 801e7fc:	0a09      	lsrs	r1, r1, #8
 801e7fe:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e802:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e806:	fb03 7101 	mla	r1, r3, r1, r7
 801e80a:	9b00      	ldr	r3, [sp, #0]
 801e80c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e810:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e814:	43da      	mvns	r2, r3
 801e816:	1233      	asrs	r3, r6, #8
 801e818:	fb00 e101 	mla	r1, r0, r1, lr
 801e81c:	10f0      	asrs	r0, r6, #3
 801e81e:	b2d2      	uxtb	r2, r2
 801e820:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e824:	0a09      	lsrs	r1, r1, #8
 801e826:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e82a:	00f6      	lsls	r6, r6, #3
 801e82c:	4353      	muls	r3, r2
 801e82e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e832:	4350      	muls	r0, r2
 801e834:	b2f6      	uxtb	r6, r6
 801e836:	4321      	orrs	r1, r4
 801e838:	4356      	muls	r6, r2
 801e83a:	1c5a      	adds	r2, r3, #1
 801e83c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e840:	0c0b      	lsrs	r3, r1, #16
 801e842:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e846:	1c42      	adds	r2, r0, #1
 801e848:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e84c:	0a0a      	lsrs	r2, r1, #8
 801e84e:	021b      	lsls	r3, r3, #8
 801e850:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e854:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e858:	00d2      	lsls	r2, r2, #3
 801e85a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e85e:	4313      	orrs	r3, r2
 801e860:	1c72      	adds	r2, r6, #1
 801e862:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e866:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e86a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e86e:	4319      	orrs	r1, r3
 801e870:	9b02      	ldr	r3, [sp, #8]
 801e872:	8019      	strh	r1, [r3, #0]
 801e874:	b005      	add	sp, #20
 801e876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e87a:	2500      	movs	r5, #0
 801e87c:	e6fe      	b.n	801e67c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e87e:	2100      	movs	r1, #0
 801e880:	460d      	mov	r5, r1
 801e882:	e706      	b.n	801e692 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e884:	2100      	movs	r1, #0
 801e886:	e704      	b.n	801e692 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e888:	4631      	mov	r1, r6
 801e88a:	e702      	b.n	801e692 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e88c:	2400      	movs	r4, #0
 801e88e:	e713      	b.n	801e6b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e890:	2200      	movs	r2, #0
 801e892:	4614      	mov	r4, r2
 801e894:	e71a      	b.n	801e6cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e896:	4602      	mov	r2, r0
 801e898:	4604      	mov	r4, r0
 801e89a:	e717      	b.n	801e6cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e89c:	2200      	movs	r2, #0
 801e89e:	e715      	b.n	801e6cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e8a0:	4632      	mov	r2, r6
 801e8a2:	e713      	b.n	801e6cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801e8a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e8a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8a8:	b09b      	sub	sp, #108	; 0x6c
 801e8aa:	9218      	str	r2, [sp, #96]	; 0x60
 801e8ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e8ae:	9019      	str	r0, [sp, #100]	; 0x64
 801e8b0:	9116      	str	r1, [sp, #88]	; 0x58
 801e8b2:	6850      	ldr	r0, [r2, #4]
 801e8b4:	9307      	str	r3, [sp, #28]
 801e8b6:	6812      	ldr	r2, [r2, #0]
 801e8b8:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e8bc:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e8c0:	fb00 1303 	mla	r3, r0, r3, r1
 801e8c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e8c8:	930a      	str	r3, [sp, #40]	; 0x28
 801e8ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e8cc:	681b      	ldr	r3, [r3, #0]
 801e8ce:	930f      	str	r3, [sp, #60]	; 0x3c
 801e8d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e8d2:	2b00      	cmp	r3, #0
 801e8d4:	dc03      	bgt.n	801e8de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e8d6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e8d8:	2b00      	cmp	r3, #0
 801e8da:	f340 8387 	ble.w	801efec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801e8de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e8e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e8e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e8e8:	1e48      	subs	r0, r1, #1
 801e8ea:	1e57      	subs	r7, r2, #1
 801e8ec:	9b07      	ldr	r3, [sp, #28]
 801e8ee:	2b00      	cmp	r3, #0
 801e8f0:	f340 8166 	ble.w	801ebc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e8f4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e8f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e8fc:	d406      	bmi.n	801e90c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e8fe:	4584      	cmp	ip, r0
 801e900:	da04      	bge.n	801e90c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e902:	2b00      	cmp	r3, #0
 801e904:	db02      	blt.n	801e90c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e906:	42bb      	cmp	r3, r7
 801e908:	f2c0 815b 	blt.w	801ebc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e90c:	f11c 0c01 	adds.w	ip, ip, #1
 801e910:	f100 814b 	bmi.w	801ebaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e914:	4561      	cmp	r1, ip
 801e916:	f2c0 8148 	blt.w	801ebaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e91a:	3301      	adds	r3, #1
 801e91c:	f100 8145 	bmi.w	801ebaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e920:	429a      	cmp	r2, r3
 801e922:	f2c0 8142 	blt.w	801ebaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e926:	9b07      	ldr	r3, [sp, #28]
 801e928:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e92a:	9317      	str	r3, [sp, #92]	; 0x5c
 801e92c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e92e:	2b00      	cmp	r3, #0
 801e930:	f340 8165 	ble.w	801ebfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e934:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e936:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e93a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e93c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e940:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e944:	1422      	asrs	r2, r4, #16
 801e946:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e94a:	689b      	ldr	r3, [r3, #8]
 801e94c:	f100 81d5 	bmi.w	801ecfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e950:	f103 38ff 	add.w	r8, r3, #4294967295
 801e954:	4542      	cmp	r2, r8
 801e956:	f280 81d0 	bge.w	801ecfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e95a:	f1bc 0f00 	cmp.w	ip, #0
 801e95e:	f2c0 81cc 	blt.w	801ecfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e962:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e966:	45c4      	cmp	ip, r8
 801e968:	f280 81c7 	bge.w	801ecfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e96c:	b21b      	sxth	r3, r3
 801e96e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e970:	fb0c 2203 	mla	r2, ip, r3, r2
 801e974:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e978:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e97c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e980:	2900      	cmp	r1, #0
 801e982:	f000 8182 	beq.w	801ec8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e986:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e98a:	950b      	str	r5, [sp, #44]	; 0x2c
 801e98c:	0e2d      	lsrs	r5, r5, #24
 801e98e:	9512      	str	r5, [sp, #72]	; 0x48
 801e990:	b180      	cbz	r0, 801e9b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e992:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e996:	3b01      	subs	r3, #1
 801e998:	009b      	lsls	r3, r3, #2
 801e99a:	3304      	adds	r3, #4
 801e99c:	eb08 0c03 	add.w	ip, r8, r3
 801e9a0:	f858 3003 	ldr.w	r3, [r8, r3]
 801e9a4:	9308      	str	r3, [sp, #32]
 801e9a6:	0e1b      	lsrs	r3, r3, #24
 801e9a8:	9310      	str	r3, [sp, #64]	; 0x40
 801e9aa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e9ae:	930c      	str	r3, [sp, #48]	; 0x30
 801e9b0:	0e1b      	lsrs	r3, r3, #24
 801e9b2:	9313      	str	r3, [sp, #76]	; 0x4c
 801e9b4:	b289      	uxth	r1, r1
 801e9b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e9b8:	b280      	uxth	r0, r0
 801e9ba:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e9bc:	fb01 f900 	mul.w	r9, r1, r0
 801e9c0:	0109      	lsls	r1, r1, #4
 801e9c2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e9c6:	eba1 0809 	sub.w	r8, r1, r9
 801e9ca:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801e9ce:	b280      	uxth	r0, r0
 801e9d0:	fa1f f888 	uxth.w	r8, r8
 801e9d4:	1a09      	subs	r1, r1, r0
 801e9d6:	fb08 f303 	mul.w	r3, r8, r3
 801e9da:	b289      	uxth	r1, r1
 801e9dc:	fb01 330e 	mla	r3, r1, lr, r3
 801e9e0:	fb00 3305 	mla	r3, r0, r5, r3
 801e9e4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e9e6:	fb09 3305 	mla	r3, r9, r5, r3
 801e9ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e9ee:	2b00      	cmp	r3, #0
 801e9f0:	f000 80d2 	beq.w	801eb98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e9f4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e9f8:	d01b      	beq.n	801ea32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e9fa:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e9fe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ea02:	fb0e fa0a 	mul.w	sl, lr, sl
 801ea06:	fb0e fe02 	mul.w	lr, lr, r2
 801ea0a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ea0e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ea12:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ea16:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ea1a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ea1e:	4452      	add	r2, sl
 801ea20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea24:	0a12      	lsrs	r2, r2, #8
 801ea26:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ea2a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ea2e:	ea42 020c 	orr.w	r2, r2, ip
 801ea32:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea34:	2dff      	cmp	r5, #255	; 0xff
 801ea36:	d021      	beq.n	801ea7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ea38:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ea3a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ea3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea40:	fb05 fb0b 	mul.w	fp, r5, fp
 801ea44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ea46:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ea4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ea50:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ea54:	fb05 fa0a 	mul.w	sl, r5, sl
 801ea58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ea5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ea60:	44de      	add	lr, fp
 801ea62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ea66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ea6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ea72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ea76:	ea4e 050a 	orr.w	r5, lr, sl
 801ea7a:	950b      	str	r5, [sp, #44]	; 0x2c
 801ea7c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea7e:	2dff      	cmp	r5, #255	; 0xff
 801ea80:	d021      	beq.n	801eac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ea82:	9d08      	ldr	r5, [sp, #32]
 801ea84:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ea88:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea8a:	fb05 fb0b 	mul.w	fp, r5, fp
 801ea8e:	9d08      	ldr	r5, [sp, #32]
 801ea90:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ea94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea96:	fb05 fa0e 	mul.w	sl, r5, lr
 801ea9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ea9e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eaa2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eaa6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eaaa:	44de      	add	lr, fp
 801eaac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eab0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eab4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eab8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eabc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eac0:	ea4e 050a 	orr.w	r5, lr, sl
 801eac4:	9508      	str	r5, [sp, #32]
 801eac6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eac8:	2dff      	cmp	r5, #255	; 0xff
 801eaca:	d021      	beq.n	801eb10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801eacc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eace:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ead2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ead4:	fb05 fb0b 	mul.w	fp, r5, fp
 801ead8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eada:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eade:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eae0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eae4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eae8:	fb05 fa0a 	mul.w	sl, r5, sl
 801eaec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eaf0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eaf4:	44de      	add	lr, fp
 801eaf6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eafa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eafe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb0a:	ea4e 050a 	orr.w	r5, lr, sl
 801eb0e:	950c      	str	r5, [sp, #48]	; 0x30
 801eb10:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eb12:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801eb16:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801eb1a:	2bff      	cmp	r3, #255	; 0xff
 801eb1c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eb20:	9d08      	ldr	r5, [sp, #32]
 801eb22:	fb08 fc0c 	mul.w	ip, r8, ip
 801eb26:	fb01 cc0e 	mla	ip, r1, lr, ip
 801eb2a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eb2e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb30:	fb00 cc0e 	mla	ip, r0, lr, ip
 801eb34:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eb38:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eb3a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801eb3e:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801eb42:	fb08 f80e 	mul.w	r8, r8, lr
 801eb46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb4a:	fb01 8202 	mla	r2, r1, r2, r8
 801eb4e:	9908      	ldr	r1, [sp, #32]
 801eb50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb54:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801eb58:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eb5a:	fb00 220a 	mla	r2, r0, sl, r2
 801eb5e:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801eb62:	fb09 2900 	mla	r9, r9, r0, r2
 801eb66:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eb6a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801eb6e:	ea4c 0c09 	orr.w	ip, ip, r9
 801eb72:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801eb76:	f040 8091 	bne.w	801ec9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801eb7a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801eb7e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801eb82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb86:	f022 0207 	bic.w	r2, r2, #7
 801eb8a:	431a      	orrs	r2, r3
 801eb8c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801eb90:	ea4c 0c02 	orr.w	ip, ip, r2
 801eb94:	f8a7 c000 	strh.w	ip, [r7]
 801eb98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801eb9a:	3702      	adds	r7, #2
 801eb9c:	441c      	add	r4, r3
 801eb9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eba0:	441e      	add	r6, r3
 801eba2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801eba4:	3b01      	subs	r3, #1
 801eba6:	9317      	str	r3, [sp, #92]	; 0x5c
 801eba8:	e6c0      	b.n	801e92c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ebaa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ebac:	441c      	add	r4, r3
 801ebae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ebb0:	441e      	add	r6, r3
 801ebb2:	9b07      	ldr	r3, [sp, #28]
 801ebb4:	3b01      	subs	r3, #1
 801ebb6:	9307      	str	r3, [sp, #28]
 801ebb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ebba:	3302      	adds	r3, #2
 801ebbc:	930a      	str	r3, [sp, #40]	; 0x28
 801ebbe:	e695      	b.n	801e8ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ebc0:	d024      	beq.n	801ec0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ebc2:	9b07      	ldr	r3, [sp, #28]
 801ebc4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ebc6:	3b01      	subs	r3, #1
 801ebc8:	fb00 4003 	mla	r0, r0, r3, r4
 801ebcc:	1400      	asrs	r0, r0, #16
 801ebce:	f53f aeaa 	bmi.w	801e926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ebd2:	3901      	subs	r1, #1
 801ebd4:	4288      	cmp	r0, r1
 801ebd6:	f6bf aea6 	bge.w	801e926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ebda:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ebdc:	fb01 6303 	mla	r3, r1, r3, r6
 801ebe0:	141b      	asrs	r3, r3, #16
 801ebe2:	f53f aea0 	bmi.w	801e926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ebe6:	3a01      	subs	r2, #1
 801ebe8:	4293      	cmp	r3, r2
 801ebea:	f6bf ae9c 	bge.w	801e926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ebee:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ebf2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ebf6:	f1bb 0f00 	cmp.w	fp, #0
 801ebfa:	f300 809a 	bgt.w	801ed32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ebfe:	9b07      	ldr	r3, [sp, #28]
 801ec00:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ec04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec06:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ec0a:	930a      	str	r3, [sp, #40]	; 0x28
 801ec0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ec0e:	2b00      	cmp	r3, #0
 801ec10:	f340 81ec 	ble.w	801efec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801ec14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ec18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec22:	eef0 6a62 	vmov.f32	s13, s5
 801ec26:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ec2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ec2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ec32:	ee16 4a90 	vmov	r4, s13
 801ec36:	eef0 6a43 	vmov.f32	s13, s6
 801ec3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ec3e:	ee16 6a90 	vmov	r6, s13
 801ec42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ec46:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ec4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ec4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ec52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ec56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ec5a:	ee12 2a90 	vmov	r2, s5
 801ec5e:	eef0 2a47 	vmov.f32	s5, s14
 801ec62:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec66:	ee13 2a10 	vmov	r2, s6
 801ec6a:	9327      	str	r3, [sp, #156]	; 0x9c
 801ec6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec6e:	eeb0 3a67 	vmov.f32	s6, s15
 801ec72:	fb92 f3f3 	sdiv	r3, r2, r3
 801ec76:	9328      	str	r3, [sp, #160]	; 0xa0
 801ec78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ec7a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ec7c:	3b01      	subs	r3, #1
 801ec7e:	9316      	str	r3, [sp, #88]	; 0x58
 801ec80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec82:	bf08      	it	eq
 801ec84:	4613      	moveq	r3, r2
 801ec86:	9307      	str	r3, [sp, #28]
 801ec88:	e622      	b.n	801e8d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ec8a:	2800      	cmp	r0, #0
 801ec8c:	f43f ae92 	beq.w	801e9b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ec90:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ec94:	9308      	str	r3, [sp, #32]
 801ec96:	0e1b      	lsrs	r3, r3, #24
 801ec98:	9310      	str	r3, [sp, #64]	; 0x40
 801ec9a:	e68b      	b.n	801e9b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ec9c:	8839      	ldrh	r1, [r7, #0]
 801ec9e:	43db      	mvns	r3, r3
 801eca0:	4dd4      	ldr	r5, [pc, #848]	; (801eff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801eca2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801eca6:	fa5f f883 	uxtb.w	r8, r3
 801ecaa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ecae:	10c8      	asrs	r0, r1, #3
 801ecb0:	00cb      	lsls	r3, r1, #3
 801ecb2:	fb0e fe08 	mul.w	lr, lr, r8
 801ecb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ecba:	b2db      	uxtb	r3, r3
 801ecbc:	f10e 0101 	add.w	r1, lr, #1
 801ecc0:	fb00 f008 	mul.w	r0, r0, r8
 801ecc4:	fb03 f308 	mul.w	r3, r3, r8
 801ecc8:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801eccc:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ecd0:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ecd4:	f100 0e01 	add.w	lr, r0, #1
 801ecd8:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ecdc:	b2c9      	uxtb	r1, r1
 801ecde:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ece2:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ece6:	00d2      	lsls	r2, r2, #3
 801ece8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ecec:	430a      	orrs	r2, r1
 801ecee:	1c59      	adds	r1, r3, #1
 801ecf0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ecf4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ecf8:	e748      	b.n	801eb8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ecfa:	f112 0801 	adds.w	r8, r2, #1
 801ecfe:	f53f af4b 	bmi.w	801eb98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed02:	4543      	cmp	r3, r8
 801ed04:	f6ff af48 	blt.w	801eb98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed08:	f11c 0801 	adds.w	r8, ip, #1
 801ed0c:	f53f af44 	bmi.w	801eb98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed10:	45c6      	cmp	lr, r8
 801ed12:	f6ff af41 	blt.w	801eb98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed16:	b21b      	sxth	r3, r3
 801ed18:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ed1c:	fa0f f28e 	sxth.w	r2, lr
 801ed20:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ed24:	9200      	str	r2, [sp, #0]
 801ed26:	4639      	mov	r1, r7
 801ed28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ed2a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ed2c:	f7ff fc88 	bl	801e640 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ed30:	e732      	b.n	801eb98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ed34:	1421      	asrs	r1, r4, #16
 801ed36:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ed38:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ed3c:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ed40:	1433      	asrs	r3, r6, #16
 801ed42:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ed46:	fb07 1303 	mla	r3, r7, r3, r1
 801ed4a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ed4c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ed50:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ed54:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ed58:	2a00      	cmp	r2, #0
 801ed5a:	f000 8108 	beq.w	801ef6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801ed5e:	684d      	ldr	r5, [r1, #4]
 801ed60:	950d      	str	r5, [sp, #52]	; 0x34
 801ed62:	0e2d      	lsrs	r5, r5, #24
 801ed64:	9514      	str	r5, [sp, #80]	; 0x50
 801ed66:	b178      	cbz	r0, 801ed88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ed68:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ed6c:	3f01      	subs	r7, #1
 801ed6e:	00bf      	lsls	r7, r7, #2
 801ed70:	3704      	adds	r7, #4
 801ed72:	eb01 0e07 	add.w	lr, r1, r7
 801ed76:	59c9      	ldr	r1, [r1, r7]
 801ed78:	9109      	str	r1, [sp, #36]	; 0x24
 801ed7a:	0e09      	lsrs	r1, r1, #24
 801ed7c:	9111      	str	r1, [sp, #68]	; 0x44
 801ed7e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ed82:	910e      	str	r1, [sp, #56]	; 0x38
 801ed84:	0e09      	lsrs	r1, r1, #24
 801ed86:	9115      	str	r1, [sp, #84]	; 0x54
 801ed88:	b292      	uxth	r2, r2
 801ed8a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ed8c:	b280      	uxth	r0, r0
 801ed8e:	fb02 f900 	mul.w	r9, r2, r0
 801ed92:	0112      	lsls	r2, r2, #4
 801ed94:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ed98:	eba2 0e09 	sub.w	lr, r2, r9
 801ed9c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801eda0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eda2:	b280      	uxth	r0, r0
 801eda4:	fa1f fe8e 	uxth.w	lr, lr
 801eda8:	1a09      	subs	r1, r1, r0
 801edaa:	fb0e f202 	mul.w	r2, lr, r2
 801edae:	b289      	uxth	r1, r1
 801edb0:	fb01 220c 	mla	r2, r1, ip, r2
 801edb4:	fb00 2205 	mla	r2, r0, r5, r2
 801edb8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801edba:	fb09 2205 	mla	r2, r9, r5, r2
 801edbe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801edc2:	2a00      	cmp	r2, #0
 801edc4:	f000 80ca 	beq.w	801ef5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801edc8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801edcc:	d019      	beq.n	801ee02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801edce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801edd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801edd6:	fb0c fa0a 	mul.w	sl, ip, sl
 801edda:	fb0c fc03 	mul.w	ip, ip, r3
 801edde:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ede2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ede6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801edea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801edee:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801edf2:	4453      	add	r3, sl
 801edf4:	0a3f      	lsrs	r7, r7, #8
 801edf6:	0a1b      	lsrs	r3, r3, #8
 801edf8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801edfc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee00:	433b      	orrs	r3, r7
 801ee02:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee04:	2dff      	cmp	r5, #255	; 0xff
 801ee06:	d020      	beq.n	801ee4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ee08:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee0a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ee0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee10:	436f      	muls	r7, r5
 801ee12:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee14:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ee18:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ee1c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ee22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee26:	fb05 fa0a 	mul.w	sl, r5, sl
 801ee2a:	44bc      	add	ip, r7
 801ee2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ee30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ee38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ee44:	ea4c 050a 	orr.w	r5, ip, sl
 801ee48:	950d      	str	r5, [sp, #52]	; 0x34
 801ee4a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ee4c:	2dff      	cmp	r5, #255	; 0xff
 801ee4e:	d020      	beq.n	801ee92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ee50:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ee52:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ee56:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ee58:	436f      	muls	r7, r5
 801ee5a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ee5c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ee60:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ee62:	fb05 fa0c 	mul.w	sl, r5, ip
 801ee66:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ee6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ee6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee72:	44bc      	add	ip, r7
 801ee74:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ee78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ee7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ee8c:	ea4c 050a 	orr.w	r5, ip, sl
 801ee90:	9509      	str	r5, [sp, #36]	; 0x24
 801ee92:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee94:	2dff      	cmp	r5, #255	; 0xff
 801ee96:	d020      	beq.n	801eeda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ee98:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ee9a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ee9e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eea0:	436f      	muls	r7, r5
 801eea2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eea4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eea8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eeac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eeae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eeb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eeb6:	fb05 fa0a 	mul.w	sl, r5, sl
 801eeba:	44bc      	add	ip, r7
 801eebc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eec0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eec4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eec8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eecc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eed0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eed4:	ea4c 050a 	orr.w	r5, ip, sl
 801eed8:	950e      	str	r5, [sp, #56]	; 0x38
 801eeda:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eedc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801eee0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eee4:	2aff      	cmp	r2, #255	; 0xff
 801eee6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eeea:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eeec:	fb0e f707 	mul.w	r7, lr, r7
 801eef0:	fb01 770c 	mla	r7, r1, ip, r7
 801eef4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eef8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eefa:	fb00 770c 	mla	r7, r0, ip, r7
 801eefe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ef02:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef04:	fb09 770c 	mla	r7, r9, ip, r7
 801ef08:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ef0c:	fb0e fe0c 	mul.w	lr, lr, ip
 801ef10:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801ef14:	fb01 e303 	mla	r3, r1, r3, lr
 801ef18:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ef1a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ef1e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ef22:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ef24:	fb00 330a 	mla	r3, r0, sl, r3
 801ef28:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ef2c:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ef30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef34:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ef38:	ea47 070c 	orr.w	r7, r7, ip
 801ef3c:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801ef40:	d11e      	bne.n	801ef80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801ef42:	097a      	lsrs	r2, r7, #5
 801ef44:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801ef48:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ef4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ef50:	f023 0307 	bic.w	r3, r3, #7
 801ef54:	4313      	orrs	r3, r2
 801ef56:	431f      	orrs	r7, r3
 801ef58:	f8a8 7000 	strh.w	r7, [r8]
 801ef5c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ef5e:	f108 0802 	add.w	r8, r8, #2
 801ef62:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ef66:	441c      	add	r4, r3
 801ef68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ef6a:	441e      	add	r6, r3
 801ef6c:	e643      	b.n	801ebf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ef6e:	2800      	cmp	r0, #0
 801ef70:	f43f af0a 	beq.w	801ed88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ef74:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ef78:	9109      	str	r1, [sp, #36]	; 0x24
 801ef7a:	0e09      	lsrs	r1, r1, #24
 801ef7c:	9111      	str	r1, [sp, #68]	; 0x44
 801ef7e:	e703      	b.n	801ed88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ef80:	f8b8 1000 	ldrh.w	r1, [r8]
 801ef84:	43d2      	mvns	r2, r2
 801ef86:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ef8a:	fa5f fe82 	uxtb.w	lr, r2
 801ef8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ef92:	10c8      	asrs	r0, r1, #3
 801ef94:	00ca      	lsls	r2, r1, #3
 801ef96:	fb0c fc0e 	mul.w	ip, ip, lr
 801ef9a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ef9e:	b2d2      	uxtb	r2, r2
 801efa0:	f10c 0101 	add.w	r1, ip, #1
 801efa4:	fb00 f00e 	mul.w	r0, r0, lr
 801efa8:	fb02 f20e 	mul.w	r2, r2, lr
 801efac:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801efb0:	0c39      	lsrs	r1, r7, #16
 801efb2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801efb6:	490f      	ldr	r1, [pc, #60]	; (801eff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801efb8:	fa5f fc8c 	uxtb.w	ip, ip
 801efbc:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801efc0:	1c41      	adds	r1, r0, #1
 801efc2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801efc6:	1c51      	adds	r1, r2, #1
 801efc8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801efcc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801efd0:	00c0      	lsls	r0, r0, #3
 801efd2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801efd6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801efda:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801efde:	ea4c 0c00 	orr.w	ip, ip, r0
 801efe2:	ea47 0c0c 	orr.w	ip, r7, ip
 801efe6:	f8a8 c000 	strh.w	ip, [r8]
 801efea:	e7b7      	b.n	801ef5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801efec:	b01b      	add	sp, #108	; 0x6c
 801efee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eff2:	bf00      	nop
 801eff4:	fffff800 	.word	0xfffff800

0801eff8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801eff8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801effc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f000:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f004:	2d00      	cmp	r5, #0
 801f006:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f00a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f00e:	fb05 0e03 	mla	lr, r5, r3, r0
 801f012:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f016:	f2c0 808c 	blt.w	801f132 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f01a:	45a9      	cmp	r9, r5
 801f01c:	f340 8089 	ble.w	801f132 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f020:	2800      	cmp	r0, #0
 801f022:	f2c0 8084 	blt.w	801f12e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f026:	4580      	cmp	r8, r0
 801f028:	f340 8081 	ble.w	801f12e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f02c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f030:	f01e 0f01 	tst.w	lr, #1
 801f034:	5d16      	ldrb	r6, [r2, r4]
 801f036:	bf0c      	ite	eq
 801f038:	f006 060f 	andeq.w	r6, r6, #15
 801f03c:	1136      	asrne	r6, r6, #4
 801f03e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f042:	b2f6      	uxtb	r6, r6
 801f044:	1c44      	adds	r4, r0, #1
 801f046:	d477      	bmi.n	801f138 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f048:	45a0      	cmp	r8, r4
 801f04a:	dd75      	ble.n	801f138 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f04c:	2f00      	cmp	r7, #0
 801f04e:	d075      	beq.n	801f13c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f050:	f10e 0a01 	add.w	sl, lr, #1
 801f054:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f058:	f01a 0f01 	tst.w	sl, #1
 801f05c:	5d14      	ldrb	r4, [r2, r4]
 801f05e:	bf0c      	ite	eq
 801f060:	f004 040f 	andeq.w	r4, r4, #15
 801f064:	1124      	asrne	r4, r4, #4
 801f066:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f06a:	b2e4      	uxtb	r4, r4
 801f06c:	3501      	adds	r5, #1
 801f06e:	d469      	bmi.n	801f144 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f070:	45a9      	cmp	r9, r5
 801f072:	dd67      	ble.n	801f144 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f074:	f1bc 0f00 	cmp.w	ip, #0
 801f078:	d067      	beq.n	801f14a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f07a:	2800      	cmp	r0, #0
 801f07c:	db60      	blt.n	801f140 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f07e:	4580      	cmp	r8, r0
 801f080:	dd5e      	ble.n	801f140 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f082:	eb03 090e 	add.w	r9, r3, lr
 801f086:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f08a:	f019 0f01 	tst.w	r9, #1
 801f08e:	5d55      	ldrb	r5, [r2, r5]
 801f090:	bf0c      	ite	eq
 801f092:	f005 050f 	andeq.w	r5, r5, #15
 801f096:	112d      	asrne	r5, r5, #4
 801f098:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f09c:	b2ed      	uxtb	r5, r5
 801f09e:	3001      	adds	r0, #1
 801f0a0:	d456      	bmi.n	801f150 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f0a2:	4580      	cmp	r8, r0
 801f0a4:	dd54      	ble.n	801f150 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f0a6:	2f00      	cmp	r7, #0
 801f0a8:	d054      	beq.n	801f154 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f0aa:	3301      	adds	r3, #1
 801f0ac:	449e      	add	lr, r3
 801f0ae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f0b2:	f01e 0f01 	tst.w	lr, #1
 801f0b6:	5cd0      	ldrb	r0, [r2, r3]
 801f0b8:	bf0c      	ite	eq
 801f0ba:	f000 000f 	andeq.w	r0, r0, #15
 801f0be:	1100      	asrne	r0, r0, #4
 801f0c0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f0c4:	b2c3      	uxtb	r3, r0
 801f0c6:	b2ba      	uxth	r2, r7
 801f0c8:	fa1f fc8c 	uxth.w	ip, ip
 801f0cc:	fb02 f00c 	mul.w	r0, r2, ip
 801f0d0:	0112      	lsls	r2, r2, #4
 801f0d2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f0d6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f0da:	1a12      	subs	r2, r2, r0
 801f0dc:	fa1f fc8c 	uxth.w	ip, ip
 801f0e0:	b292      	uxth	r2, r2
 801f0e2:	eba7 070c 	sub.w	r7, r7, ip
 801f0e6:	4362      	muls	r2, r4
 801f0e8:	b2bf      	uxth	r7, r7
 801f0ea:	fb06 2207 	mla	r2, r6, r7, r2
 801f0ee:	fb0c 2505 	mla	r5, ip, r5, r2
 801f0f2:	fb00 5303 	mla	r3, r0, r3, r5
 801f0f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f0fa:	b1b3      	cbz	r3, 801f12a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f0fc:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f100:	435a      	muls	r2, r3
 801f102:	1c53      	adds	r3, r2, #1
 801f104:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f108:	4a2d      	ldr	r2, [pc, #180]	; (801f1c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f10a:	121b      	asrs	r3, r3, #8
 801f10c:	6812      	ldr	r2, [r2, #0]
 801f10e:	2bff      	cmp	r3, #255	; 0xff
 801f110:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f114:	d120      	bne.n	801f158 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f116:	0950      	lsrs	r0, r2, #5
 801f118:	4b2a      	ldr	r3, [pc, #168]	; (801f1c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f11a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f11e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f122:	4033      	ands	r3, r6
 801f124:	4318      	orrs	r0, r3
 801f126:	4302      	orrs	r2, r0
 801f128:	800a      	strh	r2, [r1, #0]
 801f12a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f12e:	2600      	movs	r6, #0
 801f130:	e788      	b.n	801f044 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f132:	2400      	movs	r4, #0
 801f134:	4626      	mov	r6, r4
 801f136:	e799      	b.n	801f06c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f138:	2400      	movs	r4, #0
 801f13a:	e797      	b.n	801f06c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f13c:	463c      	mov	r4, r7
 801f13e:	e795      	b.n	801f06c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f140:	2500      	movs	r5, #0
 801f142:	e7ac      	b.n	801f09e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f144:	2300      	movs	r3, #0
 801f146:	461d      	mov	r5, r3
 801f148:	e7bd      	b.n	801f0c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f14a:	4663      	mov	r3, ip
 801f14c:	4665      	mov	r5, ip
 801f14e:	e7ba      	b.n	801f0c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f150:	2300      	movs	r3, #0
 801f152:	e7b8      	b.n	801f0c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f154:	463b      	mov	r3, r7
 801f156:	e7b6      	b.n	801f0c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f158:	880d      	ldrh	r5, [r1, #0]
 801f15a:	b29f      	uxth	r7, r3
 801f15c:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f160:	43db      	mvns	r3, r3
 801f162:	122c      	asrs	r4, r5, #8
 801f164:	fb10 f007 	smulbb	r0, r0, r7
 801f168:	b2db      	uxtb	r3, r3
 801f16a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f16e:	b2f6      	uxtb	r6, r6
 801f170:	b2d2      	uxtb	r2, r2
 801f172:	fb04 0403 	mla	r4, r4, r3, r0
 801f176:	10e8      	asrs	r0, r5, #3
 801f178:	fb12 f207 	smulbb	r2, r2, r7
 801f17c:	00ed      	lsls	r5, r5, #3
 801f17e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f182:	b2a4      	uxth	r4, r4
 801f184:	fb16 f607 	smulbb	r6, r6, r7
 801f188:	b2ed      	uxtb	r5, r5
 801f18a:	fb00 6603 	mla	r6, r0, r3, r6
 801f18e:	fb05 2303 	mla	r3, r5, r3, r2
 801f192:	b2b0      	uxth	r0, r6
 801f194:	b29a      	uxth	r2, r3
 801f196:	1c63      	adds	r3, r4, #1
 801f198:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f19c:	1c53      	adds	r3, r2, #1
 801f19e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f1a2:	1c42      	adds	r2, r0, #1
 801f1a4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f1a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f1ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f1b0:	0940      	lsrs	r0, r0, #5
 801f1b2:	4323      	orrs	r3, r4
 801f1b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f1b8:	4303      	orrs	r3, r0
 801f1ba:	800b      	strh	r3, [r1, #0]
 801f1bc:	e7b5      	b.n	801f12a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f1be:	bf00      	nop
 801f1c0:	2400e434 	.word	0x2400e434
 801f1c4:	00fff800 	.word	0x00fff800

0801f1c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f1c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1cc:	b097      	sub	sp, #92	; 0x5c
 801f1ce:	9214      	str	r2, [sp, #80]	; 0x50
 801f1d0:	9309      	str	r3, [sp, #36]	; 0x24
 801f1d2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f1d4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f1d8:	9015      	str	r0, [sp, #84]	; 0x54
 801f1da:	910d      	str	r1, [sp, #52]	; 0x34
 801f1dc:	6850      	ldr	r0, [r2, #4]
 801f1de:	930f      	str	r3, [sp, #60]	; 0x3c
 801f1e0:	6812      	ldr	r2, [r2, #0]
 801f1e2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f1e6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f1ea:	fb00 1303 	mla	r3, r0, r3, r1
 801f1ee:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f1f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f1f4:	689b      	ldr	r3, [r3, #8]
 801f1f6:	3301      	adds	r3, #1
 801f1f8:	f023 0301 	bic.w	r3, r3, #1
 801f1fc:	930a      	str	r3, [sp, #40]	; 0x28
 801f1fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f200:	681f      	ldr	r7, [r3, #0]
 801f202:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f204:	2b00      	cmp	r3, #0
 801f206:	dc03      	bgt.n	801f210 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f208:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f20a:	2b00      	cmp	r3, #0
 801f20c:	f340 8289 	ble.w	801f722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f210:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f212:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f216:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f21a:	1e48      	subs	r0, r1, #1
 801f21c:	f102 3cff 	add.w	ip, r2, #4294967295
 801f220:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f222:	2b00      	cmp	r3, #0
 801f224:	f340 80c5 	ble.w	801f3b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f228:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f22c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f230:	d406      	bmi.n	801f240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f232:	4586      	cmp	lr, r0
 801f234:	da04      	bge.n	801f240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f236:	2b00      	cmp	r3, #0
 801f238:	db02      	blt.n	801f240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f23a:	4563      	cmp	r3, ip
 801f23c:	f2c0 80ba 	blt.w	801f3b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801f240:	f11e 0e01 	adds.w	lr, lr, #1
 801f244:	f100 80ab 	bmi.w	801f39e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f248:	4571      	cmp	r1, lr
 801f24a:	f2c0 80a8 	blt.w	801f39e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f24e:	3301      	adds	r3, #1
 801f250:	f100 80a5 	bmi.w	801f39e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f254:	429a      	cmp	r2, r3
 801f256:	f2c0 80a2 	blt.w	801f39e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f25a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f25c:	46c8      	mov	r8, r9
 801f25e:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f262:	930e      	str	r3, [sp, #56]	; 0x38
 801f264:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f266:	2b00      	cmp	r3, #0
 801f268:	f340 80c4 	ble.w	801f3f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801f26c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f26e:	1430      	asrs	r0, r6, #16
 801f270:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f274:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f278:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f27c:	1423      	asrs	r3, r4, #16
 801f27e:	f100 814f 	bmi.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f282:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f286:	455b      	cmp	r3, fp
 801f288:	f280 814a 	bge.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f28c:	2800      	cmp	r0, #0
 801f28e:	f2c0 8147 	blt.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f292:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f296:	4558      	cmp	r0, fp
 801f298:	f280 8142 	bge.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f29c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f29e:	fb00 3305 	mla	r3, r0, r5, r3
 801f2a2:	0858      	lsrs	r0, r3, #1
 801f2a4:	07dd      	lsls	r5, r3, #31
 801f2a6:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f2aa:	bf54      	ite	pl
 801f2ac:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f2b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f2b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f2b8:	fa5f fc8c 	uxtb.w	ip, ip
 801f2bc:	2a00      	cmp	r2, #0
 801f2be:	f000 80dd 	beq.w	801f47c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801f2c2:	1c58      	adds	r0, r3, #1
 801f2c4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f2c8:	07c0      	lsls	r0, r0, #31
 801f2ca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f2ce:	bf54      	ite	pl
 801f2d0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f2d4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f2d8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f2dc:	fa5f f08e 	uxtb.w	r0, lr
 801f2e0:	9010      	str	r0, [sp, #64]	; 0x40
 801f2e2:	b1d9      	cbz	r1, 801f31c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f2e4:	4453      	add	r3, sl
 801f2e6:	0858      	lsrs	r0, r3, #1
 801f2e8:	07dd      	lsls	r5, r3, #31
 801f2ea:	f103 0301 	add.w	r3, r3, #1
 801f2ee:	5c38      	ldrb	r0, [r7, r0]
 801f2f0:	bf54      	ite	pl
 801f2f2:	f000 000f 	andpl.w	r0, r0, #15
 801f2f6:	1100      	asrmi	r0, r0, #4
 801f2f8:	07dd      	lsls	r5, r3, #31
 801f2fa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f2fe:	b2c0      	uxtb	r0, r0
 801f300:	900b      	str	r0, [sp, #44]	; 0x2c
 801f302:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801f306:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f30a:	bf54      	ite	pl
 801f30c:	f00e 030f 	andpl.w	r3, lr, #15
 801f310:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f314:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f318:	b2db      	uxtb	r3, r3
 801f31a:	9311      	str	r3, [sp, #68]	; 0x44
 801f31c:	b292      	uxth	r2, r2
 801f31e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f320:	b289      	uxth	r1, r1
 801f322:	fb02 f301 	mul.w	r3, r2, r1
 801f326:	0112      	lsls	r2, r2, #4
 801f328:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f32c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f330:	1ad2      	subs	r2, r2, r3
 801f332:	b289      	uxth	r1, r1
 801f334:	b292      	uxth	r2, r2
 801f336:	1a40      	subs	r0, r0, r1
 801f338:	436a      	muls	r2, r5
 801f33a:	b280      	uxth	r0, r0
 801f33c:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f340:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f342:	fb01 c102 	mla	r1, r1, r2, ip
 801f346:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f348:	fb03 1302 	mla	r3, r3, r2, r1
 801f34c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f350:	b1db      	cbz	r3, 801f38a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f352:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f354:	4353      	muls	r3, r2
 801f356:	1c5a      	adds	r2, r3, #1
 801f358:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f35c:	4ac6      	ldr	r2, [pc, #792]	; (801f678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801f35e:	121b      	asrs	r3, r3, #8
 801f360:	6812      	ldr	r2, [r2, #0]
 801f362:	2bff      	cmp	r3, #255	; 0xff
 801f364:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f368:	f040 8099 	bne.w	801f49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801f36c:	0953      	lsrs	r3, r2, #5
 801f36e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f372:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f376:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f37a:	f02c 0c07 	bic.w	ip, ip, #7
 801f37e:	ea43 0c0c 	orr.w	ip, r3, ip
 801f382:	ea4c 0202 	orr.w	r2, ip, r2
 801f386:	f8a8 2000 	strh.w	r2, [r8]
 801f38a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f38c:	f108 0802 	add.w	r8, r8, #2
 801f390:	441c      	add	r4, r3
 801f392:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f394:	441e      	add	r6, r3
 801f396:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f398:	3b01      	subs	r3, #1
 801f39a:	930e      	str	r3, [sp, #56]	; 0x38
 801f39c:	e762      	b.n	801f264 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f39e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f3a0:	f109 0902 	add.w	r9, r9, #2
 801f3a4:	441c      	add	r4, r3
 801f3a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f3a8:	441e      	add	r6, r3
 801f3aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3ac:	3b01      	subs	r3, #1
 801f3ae:	9309      	str	r3, [sp, #36]	; 0x24
 801f3b0:	e736      	b.n	801f220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f3b2:	d024      	beq.n	801f3fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801f3b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3b6:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f3b8:	3b01      	subs	r3, #1
 801f3ba:	fb00 4003 	mla	r0, r0, r3, r4
 801f3be:	1400      	asrs	r0, r0, #16
 801f3c0:	f53f af4b 	bmi.w	801f25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3c4:	3901      	subs	r1, #1
 801f3c6:	4288      	cmp	r0, r1
 801f3c8:	f6bf af47 	bge.w	801f25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3cc:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f3ce:	fb01 6303 	mla	r3, r1, r3, r6
 801f3d2:	141b      	asrs	r3, r3, #16
 801f3d4:	f53f af41 	bmi.w	801f25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3d8:	3a01      	subs	r2, #1
 801f3da:	4293      	cmp	r3, r2
 801f3dc:	f6bf af3d 	bge.w	801f25a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3e0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f3e4:	46c8      	mov	r8, r9
 801f3e6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f3ea:	930e      	str	r3, [sp, #56]	; 0x38
 801f3ec:	f1bb 0f00 	cmp.w	fp, #0
 801f3f0:	f300 80b7 	bgt.w	801f562 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801f3f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3f6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f3fa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f3fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f400:	2b00      	cmp	r3, #0
 801f402:	f340 818e 	ble.w	801f722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f406:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f40a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f40c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f410:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f414:	eef0 6a62 	vmov.f32	s13, s5
 801f418:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f41c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f420:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f424:	ee16 4a90 	vmov	r4, s13
 801f428:	eef0 6a43 	vmov.f32	s13, s6
 801f42c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f430:	ee16 6a90 	vmov	r6, s13
 801f434:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f438:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f43c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f440:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f444:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f448:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f44c:	ee12 2a90 	vmov	r2, s5
 801f450:	eef0 2a47 	vmov.f32	s5, s14
 801f454:	fb92 f3f3 	sdiv	r3, r2, r3
 801f458:	ee13 2a10 	vmov	r2, s6
 801f45c:	9323      	str	r3, [sp, #140]	; 0x8c
 801f45e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f460:	eeb0 3a67 	vmov.f32	s6, s15
 801f464:	fb92 f3f3 	sdiv	r3, r2, r3
 801f468:	9324      	str	r3, [sp, #144]	; 0x90
 801f46a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f46c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f46e:	3b01      	subs	r3, #1
 801f470:	930d      	str	r3, [sp, #52]	; 0x34
 801f472:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f474:	bf08      	it	eq
 801f476:	4613      	moveq	r3, r2
 801f478:	9309      	str	r3, [sp, #36]	; 0x24
 801f47a:	e6c2      	b.n	801f202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f47c:	2900      	cmp	r1, #0
 801f47e:	f43f af4d 	beq.w	801f31c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f482:	eb0a 0003 	add.w	r0, sl, r3
 801f486:	0843      	lsrs	r3, r0, #1
 801f488:	07c0      	lsls	r0, r0, #31
 801f48a:	5cfb      	ldrb	r3, [r7, r3]
 801f48c:	bf54      	ite	pl
 801f48e:	f003 030f 	andpl.w	r3, r3, #15
 801f492:	111b      	asrmi	r3, r3, #4
 801f494:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f498:	b2db      	uxtb	r3, r3
 801f49a:	930b      	str	r3, [sp, #44]	; 0x2c
 801f49c:	e73e      	b.n	801f31c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f49e:	f8b8 e000 	ldrh.w	lr, [r8]
 801f4a2:	fa1f fb83 	uxth.w	fp, r3
 801f4a6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f4aa:	43db      	mvns	r3, r3
 801f4ac:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f4b0:	fb11 f10b 	smulbb	r1, r1, fp
 801f4b4:	b2db      	uxtb	r3, r3
 801f4b6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f4ba:	fa5f fc8c 	uxtb.w	ip, ip
 801f4be:	b2d2      	uxtb	r2, r2
 801f4c0:	fb00 1003 	mla	r0, r0, r3, r1
 801f4c4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f4c8:	fb1c fc0b 	smulbb	ip, ip, fp
 801f4cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f4d0:	b280      	uxth	r0, r0
 801f4d2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f4d6:	fb12 fb0b 	smulbb	fp, r2, fp
 801f4da:	fa5f fe8e 	uxtb.w	lr, lr
 801f4de:	fb01 cc03 	mla	ip, r1, r3, ip
 801f4e2:	fb0e bb03 	mla	fp, lr, r3, fp
 801f4e6:	1c43      	adds	r3, r0, #1
 801f4e8:	fa1f fc8c 	uxth.w	ip, ip
 801f4ec:	fa1f fb8b 	uxth.w	fp, fp
 801f4f0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f4f4:	f10c 0101 	add.w	r1, ip, #1
 801f4f8:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f4fc:	f10b 0001 	add.w	r0, fp, #1
 801f500:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f504:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f508:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f50c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f510:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f514:	4318      	orrs	r0, r3
 801f516:	ea40 000c 	orr.w	r0, r0, ip
 801f51a:	f8a8 0000 	strh.w	r0, [r8]
 801f51e:	e734      	b.n	801f38a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f520:	f113 0b01 	adds.w	fp, r3, #1
 801f524:	f53f af31 	bmi.w	801f38a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f528:	45dc      	cmp	ip, fp
 801f52a:	f6ff af2e 	blt.w	801f38a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f52e:	f110 0b01 	adds.w	fp, r0, #1
 801f532:	f53f af2a 	bmi.w	801f38a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f536:	45de      	cmp	lr, fp
 801f538:	f6ff af27 	blt.w	801f38a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f53c:	9302      	str	r3, [sp, #8]
 801f53e:	fa0f f38e 	sxth.w	r3, lr
 801f542:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f544:	9301      	str	r3, [sp, #4]
 801f546:	fa0f f38c 	sxth.w	r3, ip
 801f54a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f54e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f552:	9300      	str	r3, [sp, #0]
 801f554:	463a      	mov	r2, r7
 801f556:	4653      	mov	r3, sl
 801f558:	4641      	mov	r1, r8
 801f55a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f55c:	f7ff fd4c 	bl	801eff8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f560:	e713      	b.n	801f38a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f562:	1422      	asrs	r2, r4, #16
 801f564:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f566:	1433      	asrs	r3, r6, #16
 801f568:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f56c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f570:	fb05 2303 	mla	r3, r5, r3, r2
 801f574:	085a      	lsrs	r2, r3, #1
 801f576:	07dd      	lsls	r5, r3, #31
 801f578:	5cba      	ldrb	r2, [r7, r2]
 801f57a:	bf54      	ite	pl
 801f57c:	f002 020f 	andpl.w	r2, r2, #15
 801f580:	1112      	asrmi	r2, r2, #4
 801f582:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f586:	b2d2      	uxtb	r2, r2
 801f588:	2900      	cmp	r1, #0
 801f58a:	d077      	beq.n	801f67c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f58c:	f103 0e01 	add.w	lr, r3, #1
 801f590:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f594:	f01e 0f01 	tst.w	lr, #1
 801f598:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f59c:	bf0c      	ite	eq
 801f59e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f5a2:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f5a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f5aa:	fa5f f58c 	uxtb.w	r5, ip
 801f5ae:	9512      	str	r5, [sp, #72]	; 0x48
 801f5b0:	b308      	cbz	r0, 801f5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f5b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f5b4:	442b      	add	r3, r5
 801f5b6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f5ba:	07dd      	lsls	r5, r3, #31
 801f5bc:	f103 0301 	add.w	r3, r3, #1
 801f5c0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f5c4:	bf54      	ite	pl
 801f5c6:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f5ca:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f5ce:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f5d2:	fa5f f58c 	uxtb.w	r5, ip
 801f5d6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f5da:	950c      	str	r5, [sp, #48]	; 0x30
 801f5dc:	07dd      	lsls	r5, r3, #31
 801f5de:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f5e2:	bf54      	ite	pl
 801f5e4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f5e8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f5ec:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f5f0:	fa5f f38c 	uxtb.w	r3, ip
 801f5f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801f5f6:	b289      	uxth	r1, r1
 801f5f8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f5fa:	b280      	uxth	r0, r0
 801f5fc:	fb01 f300 	mul.w	r3, r1, r0
 801f600:	0109      	lsls	r1, r1, #4
 801f602:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f606:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f60a:	1ac9      	subs	r1, r1, r3
 801f60c:	b280      	uxth	r0, r0
 801f60e:	b289      	uxth	r1, r1
 801f610:	ebac 0c00 	sub.w	ip, ip, r0
 801f614:	4369      	muls	r1, r5
 801f616:	fa1f fc8c 	uxth.w	ip, ip
 801f61a:	fb02 120c 	mla	r2, r2, ip, r1
 801f61e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f620:	fb00 2001 	mla	r0, r0, r1, r2
 801f624:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f626:	fb03 0302 	mla	r3, r3, r2, r0
 801f62a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f62e:	b1d3      	cbz	r3, 801f666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801f630:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f632:	4353      	muls	r3, r2
 801f634:	1c5a      	adds	r2, r3, #1
 801f636:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f63a:	4a0f      	ldr	r2, [pc, #60]	; (801f678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801f63c:	121b      	asrs	r3, r3, #8
 801f63e:	6812      	ldr	r2, [r2, #0]
 801f640:	2bff      	cmp	r3, #255	; 0xff
 801f642:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f646:	d12d      	bne.n	801f6a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801f648:	0953      	lsrs	r3, r2, #5
 801f64a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f64e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f652:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f656:	f02c 0c07 	bic.w	ip, ip, #7
 801f65a:	ea43 0c0c 	orr.w	ip, r3, ip
 801f65e:	ea4c 0202 	orr.w	r2, ip, r2
 801f662:	f8a8 2000 	strh.w	r2, [r8]
 801f666:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f668:	f108 0802 	add.w	r8, r8, #2
 801f66c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f670:	441c      	add	r4, r3
 801f672:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f674:	441e      	add	r6, r3
 801f676:	e6b9      	b.n	801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801f678:	2400e434 	.word	0x2400e434
 801f67c:	2800      	cmp	r0, #0
 801f67e:	d0ba      	beq.n	801f5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f680:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f682:	442b      	add	r3, r5
 801f684:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f688:	07db      	lsls	r3, r3, #31
 801f68a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f68e:	bf54      	ite	pl
 801f690:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f694:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f698:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f69c:	fa5f f38c 	uxtb.w	r3, ip
 801f6a0:	930c      	str	r3, [sp, #48]	; 0x30
 801f6a2:	e7a8      	b.n	801f5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f6a4:	f8b8 e000 	ldrh.w	lr, [r8]
 801f6a8:	fa1f fa83 	uxth.w	sl, r3
 801f6ac:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f6b0:	43db      	mvns	r3, r3
 801f6b2:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f6b6:	fb11 f10a 	smulbb	r1, r1, sl
 801f6ba:	b2db      	uxtb	r3, r3
 801f6bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f6c0:	b2d2      	uxtb	r2, r2
 801f6c2:	fa5f fc8c 	uxtb.w	ip, ip
 801f6c6:	fb00 1003 	mla	r0, r0, r3, r1
 801f6ca:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f6ce:	fb12 f20a 	smulbb	r2, r2, sl
 801f6d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f6d6:	b280      	uxth	r0, r0
 801f6d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f6dc:	fb1c fc0a 	smulbb	ip, ip, sl
 801f6e0:	fa5f fe8e 	uxtb.w	lr, lr
 801f6e4:	fb0e 2203 	mla	r2, lr, r3, r2
 801f6e8:	fb01 cc03 	mla	ip, r1, r3, ip
 801f6ec:	1c43      	adds	r3, r0, #1
 801f6ee:	b292      	uxth	r2, r2
 801f6f0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f6f4:	1c51      	adds	r1, r2, #1
 801f6f6:	fa1f fc8c 	uxth.w	ip, ip
 801f6fa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f6fe:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f702:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f706:	4308      	orrs	r0, r1
 801f708:	f10c 0101 	add.w	r1, ip, #1
 801f70c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f710:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f714:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f718:	ea40 000c 	orr.w	r0, r0, ip
 801f71c:	f8a8 0000 	strh.w	r0, [r8]
 801f720:	e7a1      	b.n	801f666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801f722:	b017      	add	sp, #92	; 0x5c
 801f724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f728 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f72c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f730:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f734:	2d00      	cmp	r5, #0
 801f736:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f73a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f73e:	fb05 0e03 	mla	lr, r5, r3, r0
 801f742:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f746:	f2c0 80b0 	blt.w	801f8aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f74a:	45a9      	cmp	r9, r5
 801f74c:	f340 80ad 	ble.w	801f8aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f750:	2800      	cmp	r0, #0
 801f752:	f2c0 80a8 	blt.w	801f8a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f756:	4580      	cmp	r8, r0
 801f758:	f340 80a5 	ble.w	801f8a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f75c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f760:	f01e 0f01 	tst.w	lr, #1
 801f764:	5d16      	ldrb	r6, [r2, r4]
 801f766:	bf0c      	ite	eq
 801f768:	f006 060f 	andeq.w	r6, r6, #15
 801f76c:	1136      	asrne	r6, r6, #4
 801f76e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f772:	b2f6      	uxtb	r6, r6
 801f774:	1c44      	adds	r4, r0, #1
 801f776:	f100 809b 	bmi.w	801f8b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f77a:	45a0      	cmp	r8, r4
 801f77c:	f340 8098 	ble.w	801f8b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f780:	2f00      	cmp	r7, #0
 801f782:	f000 8097 	beq.w	801f8b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f786:	f10e 0a01 	add.w	sl, lr, #1
 801f78a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f78e:	f01a 0f01 	tst.w	sl, #1
 801f792:	5d14      	ldrb	r4, [r2, r4]
 801f794:	bf0c      	ite	eq
 801f796:	f004 040f 	andeq.w	r4, r4, #15
 801f79a:	1124      	asrne	r4, r4, #4
 801f79c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f7a0:	b2e4      	uxtb	r4, r4
 801f7a2:	3501      	adds	r5, #1
 801f7a4:	f100 808a 	bmi.w	801f8bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f7a8:	45a9      	cmp	r9, r5
 801f7aa:	f340 8087 	ble.w	801f8bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f7ae:	f1bc 0f00 	cmp.w	ip, #0
 801f7b2:	f000 8086 	beq.w	801f8c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f7b6:	2800      	cmp	r0, #0
 801f7b8:	db7e      	blt.n	801f8b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f7ba:	4580      	cmp	r8, r0
 801f7bc:	dd7c      	ble.n	801f8b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f7be:	eb03 090e 	add.w	r9, r3, lr
 801f7c2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f7c6:	f019 0f01 	tst.w	r9, #1
 801f7ca:	5d55      	ldrb	r5, [r2, r5]
 801f7cc:	bf0c      	ite	eq
 801f7ce:	f005 050f 	andeq.w	r5, r5, #15
 801f7d2:	112d      	asrne	r5, r5, #4
 801f7d4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f7d8:	b2ed      	uxtb	r5, r5
 801f7da:	3001      	adds	r0, #1
 801f7dc:	d474      	bmi.n	801f8c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f7de:	4580      	cmp	r8, r0
 801f7e0:	dd72      	ble.n	801f8c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f7e2:	2f00      	cmp	r7, #0
 801f7e4:	d072      	beq.n	801f8cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f7e6:	3301      	adds	r3, #1
 801f7e8:	449e      	add	lr, r3
 801f7ea:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f7ee:	f01e 0f01 	tst.w	lr, #1
 801f7f2:	5cd0      	ldrb	r0, [r2, r3]
 801f7f4:	bf0c      	ite	eq
 801f7f6:	f000 000f 	andeq.w	r0, r0, #15
 801f7fa:	1100      	asrne	r0, r0, #4
 801f7fc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f800:	b2c3      	uxtb	r3, r0
 801f802:	b2ba      	uxth	r2, r7
 801f804:	fa1f fc8c 	uxth.w	ip, ip
 801f808:	fb02 f00c 	mul.w	r0, r2, ip
 801f80c:	0112      	lsls	r2, r2, #4
 801f80e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f812:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f816:	1a12      	subs	r2, r2, r0
 801f818:	fa1f fc8c 	uxth.w	ip, ip
 801f81c:	b292      	uxth	r2, r2
 801f81e:	eba7 070c 	sub.w	r7, r7, ip
 801f822:	4362      	muls	r2, r4
 801f824:	b2bf      	uxth	r7, r7
 801f826:	fb06 2207 	mla	r2, r6, r7, r2
 801f82a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f82e:	fb00 5303 	mla	r3, r0, r3, r5
 801f832:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f836:	b3a3      	cbz	r3, 801f8a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f838:	4a25      	ldr	r2, [pc, #148]	; (801f8d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f83a:	880e      	ldrh	r6, [r1, #0]
 801f83c:	6815      	ldr	r5, [r2, #0]
 801f83e:	b29a      	uxth	r2, r3
 801f840:	1234      	asrs	r4, r6, #8
 801f842:	43db      	mvns	r3, r3
 801f844:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f848:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f84c:	b2db      	uxtb	r3, r3
 801f84e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f852:	fb10 f002 	smulbb	r0, r0, r2
 801f856:	b2ed      	uxtb	r5, r5
 801f858:	fb17 f702 	smulbb	r7, r7, r2
 801f85c:	fb04 0403 	mla	r4, r4, r3, r0
 801f860:	10f0      	asrs	r0, r6, #3
 801f862:	fb15 f202 	smulbb	r2, r5, r2
 801f866:	00f6      	lsls	r6, r6, #3
 801f868:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f86c:	b2a4      	uxth	r4, r4
 801f86e:	b2f6      	uxtb	r6, r6
 801f870:	fb00 7003 	mla	r0, r0, r3, r7
 801f874:	fb06 2303 	mla	r3, r6, r3, r2
 801f878:	b280      	uxth	r0, r0
 801f87a:	b29a      	uxth	r2, r3
 801f87c:	1c63      	adds	r3, r4, #1
 801f87e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f882:	1c53      	adds	r3, r2, #1
 801f884:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f888:	1c42      	adds	r2, r0, #1
 801f88a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f88e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f892:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f896:	0940      	lsrs	r0, r0, #5
 801f898:	4323      	orrs	r3, r4
 801f89a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f89e:	4303      	orrs	r3, r0
 801f8a0:	800b      	strh	r3, [r1, #0]
 801f8a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f8a6:	2600      	movs	r6, #0
 801f8a8:	e764      	b.n	801f774 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f8aa:	2400      	movs	r4, #0
 801f8ac:	4626      	mov	r6, r4
 801f8ae:	e778      	b.n	801f7a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f8b0:	2400      	movs	r4, #0
 801f8b2:	e776      	b.n	801f7a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f8b4:	463c      	mov	r4, r7
 801f8b6:	e774      	b.n	801f7a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f8b8:	2500      	movs	r5, #0
 801f8ba:	e78e      	b.n	801f7da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f8bc:	2300      	movs	r3, #0
 801f8be:	461d      	mov	r5, r3
 801f8c0:	e79f      	b.n	801f802 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f8c2:	4663      	mov	r3, ip
 801f8c4:	4665      	mov	r5, ip
 801f8c6:	e79c      	b.n	801f802 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f8c8:	2300      	movs	r3, #0
 801f8ca:	e79a      	b.n	801f802 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f8cc:	463b      	mov	r3, r7
 801f8ce:	e798      	b.n	801f802 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f8d0:	2400e434 	.word	0x2400e434

0801f8d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8d8:	b093      	sub	sp, #76	; 0x4c
 801f8da:	461d      	mov	r5, r3
 801f8dc:	920c      	str	r2, [sp, #48]	; 0x30
 801f8de:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f8e0:	9011      	str	r0, [sp, #68]	; 0x44
 801f8e2:	9107      	str	r1, [sp, #28]
 801f8e4:	6850      	ldr	r0, [r2, #4]
 801f8e6:	6812      	ldr	r2, [r2, #0]
 801f8e8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f8ec:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f8f0:	fb00 1303 	mla	r3, r0, r3, r1
 801f8f4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f8f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f8fa:	689b      	ldr	r3, [r3, #8]
 801f8fc:	3301      	adds	r3, #1
 801f8fe:	f023 0301 	bic.w	r3, r3, #1
 801f902:	9306      	str	r3, [sp, #24]
 801f904:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f906:	681f      	ldr	r7, [r3, #0]
 801f908:	9b07      	ldr	r3, [sp, #28]
 801f90a:	2b00      	cmp	r3, #0
 801f90c:	dc03      	bgt.n	801f916 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f90e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f910:	2b00      	cmp	r3, #0
 801f912:	f340 8267 	ble.w	801fde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f916:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f918:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f91c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f920:	1e48      	subs	r0, r1, #1
 801f922:	f102 3cff 	add.w	ip, r2, #4294967295
 801f926:	2d00      	cmp	r5, #0
 801f928:	f340 80b7 	ble.w	801fa9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f92c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f930:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f934:	d406      	bmi.n	801f944 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f936:	4586      	cmp	lr, r0
 801f938:	da04      	bge.n	801f944 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f93a:	2b00      	cmp	r3, #0
 801f93c:	db02      	blt.n	801f944 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f93e:	4563      	cmp	r3, ip
 801f940:	f2c0 80ac 	blt.w	801fa9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f944:	f11e 0e01 	adds.w	lr, lr, #1
 801f948:	f100 809f 	bmi.w	801fa8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f94c:	4571      	cmp	r1, lr
 801f94e:	f2c0 809c 	blt.w	801fa8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f952:	3301      	adds	r3, #1
 801f954:	f100 8099 	bmi.w	801fa8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f958:	429a      	cmp	r2, r3
 801f95a:	f2c0 8096 	blt.w	801fa8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801f95e:	46c8      	mov	r8, r9
 801f960:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f964:	9509      	str	r5, [sp, #36]	; 0x24
 801f966:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f968:	2b00      	cmp	r3, #0
 801f96a:	f340 80b5 	ble.w	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f96e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f972:	1430      	asrs	r0, r6, #16
 801f974:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f978:	9308      	str	r3, [sp, #32]
 801f97a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f97c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f980:	1423      	asrs	r3, r4, #16
 801f982:	f100 813f 	bmi.w	801fc04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f986:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f98a:	455b      	cmp	r3, fp
 801f98c:	f280 813a 	bge.w	801fc04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f990:	2800      	cmp	r0, #0
 801f992:	f2c0 8137 	blt.w	801fc04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f996:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f99a:	4558      	cmp	r0, fp
 801f99c:	f280 8132 	bge.w	801fc04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f9a0:	9a06      	ldr	r2, [sp, #24]
 801f9a2:	fb00 3302 	mla	r3, r0, r2, r3
 801f9a6:	0858      	lsrs	r0, r3, #1
 801f9a8:	07da      	lsls	r2, r3, #31
 801f9aa:	9a08      	ldr	r2, [sp, #32]
 801f9ac:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f9b0:	bf54      	ite	pl
 801f9b2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f9b6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f9ba:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f9be:	fa5f fc8c 	uxtb.w	ip, ip
 801f9c2:	2a00      	cmp	r2, #0
 801f9c4:	f000 80cc 	beq.w	801fb60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f9c8:	1c58      	adds	r0, r3, #1
 801f9ca:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f9ce:	07c0      	lsls	r0, r0, #31
 801f9d0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f9d4:	bf54      	ite	pl
 801f9d6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f9da:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f9de:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f9e2:	fa5f fe8e 	uxtb.w	lr, lr
 801f9e6:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801f9ea:	b1b9      	cbz	r1, 801fa1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801f9ec:	4453      	add	r3, sl
 801f9ee:	0858      	lsrs	r0, r3, #1
 801f9f0:	07da      	lsls	r2, r3, #31
 801f9f2:	5c38      	ldrb	r0, [r7, r0]
 801f9f4:	bf54      	ite	pl
 801f9f6:	f000 000f 	andpl.w	r0, r0, #15
 801f9fa:	1100      	asrmi	r0, r0, #4
 801f9fc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fa00:	b2c0      	uxtb	r0, r0
 801fa02:	900a      	str	r0, [sp, #40]	; 0x28
 801fa04:	1c58      	adds	r0, r3, #1
 801fa06:	0843      	lsrs	r3, r0, #1
 801fa08:	07c2      	lsls	r2, r0, #31
 801fa0a:	5cfb      	ldrb	r3, [r7, r3]
 801fa0c:	bf54      	ite	pl
 801fa0e:	f003 030f 	andpl.w	r3, r3, #15
 801fa12:	111b      	asrmi	r3, r3, #4
 801fa14:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fa18:	b2db      	uxtb	r3, r3
 801fa1a:	930e      	str	r3, [sp, #56]	; 0x38
 801fa1c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fa20:	b289      	uxth	r1, r1
 801fa22:	fb02 f301 	mul.w	r3, r2, r1
 801fa26:	0112      	lsls	r2, r2, #4
 801fa28:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fa2c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801fa30:	1ad2      	subs	r2, r2, r3
 801fa32:	b289      	uxth	r1, r1
 801fa34:	b292      	uxth	r2, r2
 801fa36:	1a40      	subs	r0, r0, r1
 801fa38:	fa1f fe80 	uxth.w	lr, r0
 801fa3c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fa3e:	4342      	muls	r2, r0
 801fa40:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fa44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fa46:	fb01 c102 	mla	r1, r1, r2, ip
 801fa4a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fa4c:	fb03 1302 	mla	r3, r3, r2, r1
 801fa50:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fa54:	2bff      	cmp	r3, #255	; 0xff
 801fa56:	f040 8094 	bne.w	801fb82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fa5a:	4bbf      	ldr	r3, [pc, #764]	; (801fd58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fa5c:	681a      	ldr	r2, [r3, #0]
 801fa5e:	4bbf      	ldr	r3, [pc, #764]	; (801fd5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fa60:	0951      	lsrs	r1, r2, #5
 801fa62:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fa66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fa6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fa6e:	430b      	orrs	r3, r1
 801fa70:	4313      	orrs	r3, r2
 801fa72:	f8a8 3000 	strh.w	r3, [r8]
 801fa76:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fa78:	f108 0802 	add.w	r8, r8, #2
 801fa7c:	441c      	add	r4, r3
 801fa7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa80:	441e      	add	r6, r3
 801fa82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa84:	3b01      	subs	r3, #1
 801fa86:	9309      	str	r3, [sp, #36]	; 0x24
 801fa88:	e76d      	b.n	801f966 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fa8a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fa8c:	3d01      	subs	r5, #1
 801fa8e:	f109 0902 	add.w	r9, r9, #2
 801fa92:	441c      	add	r4, r3
 801fa94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa96:	441e      	add	r6, r3
 801fa98:	e745      	b.n	801f926 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fa9a:	d021      	beq.n	801fae0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801fa9c:	1e6b      	subs	r3, r5, #1
 801fa9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801faa0:	fb00 4003 	mla	r0, r0, r3, r4
 801faa4:	1400      	asrs	r0, r0, #16
 801faa6:	f53f af5a 	bmi.w	801f95e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801faaa:	3901      	subs	r1, #1
 801faac:	4288      	cmp	r0, r1
 801faae:	f6bf af56 	bge.w	801f95e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fab2:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fab4:	fb01 6303 	mla	r3, r1, r3, r6
 801fab8:	141b      	asrs	r3, r3, #16
 801faba:	f53f af50 	bmi.w	801f95e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fabe:	3a01      	subs	r2, #1
 801fac0:	4293      	cmp	r3, r2
 801fac2:	f6bf af4c 	bge.w	801f95e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fac6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801faca:	46a8      	mov	r8, r5
 801facc:	46ce      	mov	lr, r9
 801face:	9308      	str	r3, [sp, #32]
 801fad0:	f1b8 0f00 	cmp.w	r8, #0
 801fad4:	f300 80b6 	bgt.w	801fc44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fad8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fadc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fae0:	9b07      	ldr	r3, [sp, #28]
 801fae2:	2b00      	cmp	r3, #0
 801fae4:	f340 817e 	ble.w	801fde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fae8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801faec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801faee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801faf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801faf6:	eef0 6a62 	vmov.f32	s13, s5
 801fafa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fafe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb06:	ee16 4a90 	vmov	r4, s13
 801fb0a:	eef0 6a43 	vmov.f32	s13, s6
 801fb0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb12:	ee16 6a90 	vmov	r6, s13
 801fb16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fb26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fb2e:	ee12 2a90 	vmov	r2, s5
 801fb32:	eef0 2a47 	vmov.f32	s5, s14
 801fb36:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb3a:	ee13 2a10 	vmov	r2, s6
 801fb3e:	931f      	str	r3, [sp, #124]	; 0x7c
 801fb40:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb42:	eeb0 3a67 	vmov.f32	s6, s15
 801fb46:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb4a:	9320      	str	r3, [sp, #128]	; 0x80
 801fb4c:	9b07      	ldr	r3, [sp, #28]
 801fb4e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fb50:	3b01      	subs	r3, #1
 801fb52:	9307      	str	r3, [sp, #28]
 801fb54:	bf08      	it	eq
 801fb56:	4615      	moveq	r5, r2
 801fb58:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb5a:	bf18      	it	ne
 801fb5c:	461d      	movne	r5, r3
 801fb5e:	e6d3      	b.n	801f908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fb60:	2900      	cmp	r1, #0
 801fb62:	f43f af5b 	beq.w	801fa1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fb66:	eb0a 0003 	add.w	r0, sl, r3
 801fb6a:	0843      	lsrs	r3, r0, #1
 801fb6c:	07c0      	lsls	r0, r0, #31
 801fb6e:	5cfb      	ldrb	r3, [r7, r3]
 801fb70:	bf54      	ite	pl
 801fb72:	f003 030f 	andpl.w	r3, r3, #15
 801fb76:	111b      	asrmi	r3, r3, #4
 801fb78:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fb7c:	b2db      	uxtb	r3, r3
 801fb7e:	930a      	str	r3, [sp, #40]	; 0x28
 801fb80:	e74c      	b.n	801fa1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fb82:	2b00      	cmp	r3, #0
 801fb84:	f43f af77 	beq.w	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fb88:	4a73      	ldr	r2, [pc, #460]	; (801fd58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb8a:	fa1f fe83 	uxth.w	lr, r3
 801fb8e:	f8b8 c000 	ldrh.w	ip, [r8]
 801fb92:	43db      	mvns	r3, r3
 801fb94:	6810      	ldr	r0, [r2, #0]
 801fb96:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fb9a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fb9e:	b2db      	uxtb	r3, r3
 801fba0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fba4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fba8:	fb12 f20e 	smulbb	r2, r2, lr
 801fbac:	b2c0      	uxtb	r0, r0
 801fbae:	fb1b fb0e 	smulbb	fp, fp, lr
 801fbb2:	fb01 2103 	mla	r1, r1, r3, r2
 801fbb6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fbba:	fb10 fe0e 	smulbb	lr, r0, lr
 801fbbe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fbc2:	b289      	uxth	r1, r1
 801fbc4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fbc8:	fa5f fc8c 	uxtb.w	ip, ip
 801fbcc:	fb02 b203 	mla	r2, r2, r3, fp
 801fbd0:	1c48      	adds	r0, r1, #1
 801fbd2:	fb0c e303 	mla	r3, ip, r3, lr
 801fbd6:	b292      	uxth	r2, r2
 801fbd8:	b29b      	uxth	r3, r3
 801fbda:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fbde:	f102 0b01 	add.w	fp, r2, #1
 801fbe2:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fbe6:	1c59      	adds	r1, r3, #1
 801fbe8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fbec:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fbf0:	0952      	lsrs	r2, r2, #5
 801fbf2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fbf6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fbfa:	4301      	orrs	r1, r0
 801fbfc:	4311      	orrs	r1, r2
 801fbfe:	f8a8 1000 	strh.w	r1, [r8]
 801fc02:	e738      	b.n	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fc04:	f113 0b01 	adds.w	fp, r3, #1
 801fc08:	f53f af35 	bmi.w	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fc0c:	45dc      	cmp	ip, fp
 801fc0e:	f6ff af32 	blt.w	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fc12:	f110 0b01 	adds.w	fp, r0, #1
 801fc16:	f53f af2e 	bmi.w	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fc1a:	45de      	cmp	lr, fp
 801fc1c:	f6ff af2b 	blt.w	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fc20:	9302      	str	r3, [sp, #8]
 801fc22:	fa0f f38e 	sxth.w	r3, lr
 801fc26:	9a08      	ldr	r2, [sp, #32]
 801fc28:	9301      	str	r3, [sp, #4]
 801fc2a:	fa0f f38c 	sxth.w	r3, ip
 801fc2e:	9105      	str	r1, [sp, #20]
 801fc30:	4641      	mov	r1, r8
 801fc32:	9300      	str	r3, [sp, #0]
 801fc34:	4653      	mov	r3, sl
 801fc36:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fc3a:	463a      	mov	r2, r7
 801fc3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fc3e:	f7ff fd73 	bl	801f728 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fc42:	e718      	b.n	801fa76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fc44:	1422      	asrs	r2, r4, #16
 801fc46:	9906      	ldr	r1, [sp, #24]
 801fc48:	1433      	asrs	r3, r6, #16
 801fc4a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fc4e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fc52:	fb01 2303 	mla	r3, r1, r3, r2
 801fc56:	085a      	lsrs	r2, r3, #1
 801fc58:	07d9      	lsls	r1, r3, #31
 801fc5a:	5cba      	ldrb	r2, [r7, r2]
 801fc5c:	bf54      	ite	pl
 801fc5e:	f002 020f 	andpl.w	r2, r2, #15
 801fc62:	1112      	asrmi	r2, r2, #4
 801fc64:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fc68:	b2d2      	uxtb	r2, r2
 801fc6a:	2800      	cmp	r0, #0
 801fc6c:	d063      	beq.n	801fd36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801fc6e:	f103 0a01 	add.w	sl, r3, #1
 801fc72:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fc76:	f01a 0f01 	tst.w	sl, #1
 801fc7a:	5c79      	ldrb	r1, [r7, r1]
 801fc7c:	bf0c      	ite	eq
 801fc7e:	f001 010f 	andeq.w	r1, r1, #15
 801fc82:	1109      	asrne	r1, r1, #4
 801fc84:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fc88:	b2c9      	uxtb	r1, r1
 801fc8a:	910f      	str	r1, [sp, #60]	; 0x3c
 801fc8c:	f1bc 0f00 	cmp.w	ip, #0
 801fc90:	d01a      	beq.n	801fcc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fc92:	9908      	ldr	r1, [sp, #32]
 801fc94:	440b      	add	r3, r1
 801fc96:	0859      	lsrs	r1, r3, #1
 801fc98:	f013 0f01 	tst.w	r3, #1
 801fc9c:	f103 0301 	add.w	r3, r3, #1
 801fca0:	5c79      	ldrb	r1, [r7, r1]
 801fca2:	bf0c      	ite	eq
 801fca4:	f001 010f 	andeq.w	r1, r1, #15
 801fca8:	1109      	asrne	r1, r1, #4
 801fcaa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fcae:	b2c9      	uxtb	r1, r1
 801fcb0:	910b      	str	r1, [sp, #44]	; 0x2c
 801fcb2:	0859      	lsrs	r1, r3, #1
 801fcb4:	07db      	lsls	r3, r3, #31
 801fcb6:	5c79      	ldrb	r1, [r7, r1]
 801fcb8:	bf54      	ite	pl
 801fcba:	f001 010f 	andpl.w	r1, r1, #15
 801fcbe:	1109      	asrmi	r1, r1, #4
 801fcc0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fcc4:	b2c9      	uxtb	r1, r1
 801fcc6:	9110      	str	r1, [sp, #64]	; 0x40
 801fcc8:	b280      	uxth	r0, r0
 801fcca:	fa1f fc8c 	uxth.w	ip, ip
 801fcce:	fb00 f30c 	mul.w	r3, r0, ip
 801fcd2:	0100      	lsls	r0, r0, #4
 801fcd4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fcd8:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fcdc:	1ac0      	subs	r0, r0, r3
 801fcde:	fa1f fc8c 	uxth.w	ip, ip
 801fce2:	b280      	uxth	r0, r0
 801fce4:	eba1 010c 	sub.w	r1, r1, ip
 801fce8:	fa1f fa81 	uxth.w	sl, r1
 801fcec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fcee:	4348      	muls	r0, r1
 801fcf0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fcf2:	fb02 020a 	mla	r2, r2, sl, r0
 801fcf6:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fcfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fcfc:	fb03 c302 	mla	r3, r3, r2, ip
 801fd00:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fd04:	2bff      	cmp	r3, #255	; 0xff
 801fd06:	d12b      	bne.n	801fd60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fd08:	4b13      	ldr	r3, [pc, #76]	; (801fd58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fd0a:	681a      	ldr	r2, [r3, #0]
 801fd0c:	4b13      	ldr	r3, [pc, #76]	; (801fd5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fd0e:	0951      	lsrs	r1, r2, #5
 801fd10:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fd14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fd18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd1c:	430b      	orrs	r3, r1
 801fd1e:	4313      	orrs	r3, r2
 801fd20:	f8ae 3000 	strh.w	r3, [lr]
 801fd24:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd26:	f10e 0e02 	add.w	lr, lr, #2
 801fd2a:	f108 38ff 	add.w	r8, r8, #4294967295
 801fd2e:	441c      	add	r4, r3
 801fd30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd32:	441e      	add	r6, r3
 801fd34:	e6cc      	b.n	801fad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801fd36:	f1bc 0f00 	cmp.w	ip, #0
 801fd3a:	d0c5      	beq.n	801fcc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fd3c:	9908      	ldr	r1, [sp, #32]
 801fd3e:	440b      	add	r3, r1
 801fd40:	0859      	lsrs	r1, r3, #1
 801fd42:	07db      	lsls	r3, r3, #31
 801fd44:	5c79      	ldrb	r1, [r7, r1]
 801fd46:	bf54      	ite	pl
 801fd48:	f001 010f 	andpl.w	r1, r1, #15
 801fd4c:	1109      	asrmi	r1, r1, #4
 801fd4e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd52:	b2c9      	uxtb	r1, r1
 801fd54:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd56:	e7b7      	b.n	801fcc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801fd58:	2400e434 	.word	0x2400e434
 801fd5c:	fffff800 	.word	0xfffff800
 801fd60:	2b00      	cmp	r3, #0
 801fd62:	d0df      	beq.n	801fd24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801fd64:	4a21      	ldr	r2, [pc, #132]	; (801fdec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fd66:	fa1f fa83 	uxth.w	sl, r3
 801fd6a:	f8be c000 	ldrh.w	ip, [lr]
 801fd6e:	43db      	mvns	r3, r3
 801fd70:	6810      	ldr	r0, [r2, #0]
 801fd72:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fd76:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fd7a:	b2db      	uxtb	r3, r3
 801fd7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fd80:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fd84:	fb12 f20a 	smulbb	r2, r2, sl
 801fd88:	b2c0      	uxtb	r0, r0
 801fd8a:	fb1b fb0a 	smulbb	fp, fp, sl
 801fd8e:	fb01 2103 	mla	r1, r1, r3, r2
 801fd92:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fd96:	fb10 f00a 	smulbb	r0, r0, sl
 801fd9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fd9e:	b289      	uxth	r1, r1
 801fda0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fda4:	fa5f fc8c 	uxtb.w	ip, ip
 801fda8:	fb02 b203 	mla	r2, r2, r3, fp
 801fdac:	fb0c 0003 	mla	r0, ip, r3, r0
 801fdb0:	1c4b      	adds	r3, r1, #1
 801fdb2:	b292      	uxth	r2, r2
 801fdb4:	b280      	uxth	r0, r0
 801fdb6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fdba:	f100 0b01 	add.w	fp, r0, #1
 801fdbe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fdc2:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fdc6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fdca:	ea4b 0101 	orr.w	r1, fp, r1
 801fdce:	f102 0b01 	add.w	fp, r2, #1
 801fdd2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fdd6:	0952      	lsrs	r2, r2, #5
 801fdd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fddc:	4311      	orrs	r1, r2
 801fdde:	f8ae 1000 	strh.w	r1, [lr]
 801fde2:	e79f      	b.n	801fd24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801fde4:	b013      	add	sp, #76	; 0x4c
 801fde6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fdea:	bf00      	nop
 801fdec:	2400e434 	.word	0x2400e434

0801fdf0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801fdf0:	b570      	push	{r4, r5, r6, lr}
 801fdf2:	1208      	asrs	r0, r1, #8
 801fdf4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801fdf8:	b29e      	uxth	r6, r3
 801fdfa:	1213      	asrs	r3, r2, #8
 801fdfc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe00:	10cc      	asrs	r4, r1, #3
 801fe02:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801fe06:	00c9      	lsls	r1, r1, #3
 801fe08:	fb10 f006 	smulbb	r0, r0, r6
 801fe0c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801fe10:	fb13 f305 	smulbb	r3, r3, r5
 801fe14:	fb14 f406 	smulbb	r4, r4, r6
 801fe18:	4418      	add	r0, r3
 801fe1a:	10d3      	asrs	r3, r2, #3
 801fe1c:	00d2      	lsls	r2, r2, #3
 801fe1e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801fe22:	b280      	uxth	r0, r0
 801fe24:	b2d2      	uxtb	r2, r2
 801fe26:	fb13 f305 	smulbb	r3, r3, r5
 801fe2a:	fb12 f205 	smulbb	r2, r2, r5
 801fe2e:	441c      	add	r4, r3
 801fe30:	b2cb      	uxtb	r3, r1
 801fe32:	fb13 f306 	smulbb	r3, r3, r6
 801fe36:	b2a4      	uxth	r4, r4
 801fe38:	4413      	add	r3, r2
 801fe3a:	1c42      	adds	r2, r0, #1
 801fe3c:	b29b      	uxth	r3, r3
 801fe3e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fe42:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 801fe46:	1c58      	adds	r0, r3, #1
 801fe48:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fe4c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fe50:	4310      	orrs	r0, r2
 801fe52:	1c62      	adds	r2, r4, #1
 801fe54:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801fe58:	0964      	lsrs	r4, r4, #5
 801fe5a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801fe5e:	4320      	orrs	r0, r4
 801fe60:	bd70      	pop	{r4, r5, r6, pc}
	...

0801fe64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801fe64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe68:	b08f      	sub	sp, #60	; 0x3c
 801fe6a:	461c      	mov	r4, r3
 801fe6c:	460d      	mov	r5, r1
 801fe6e:	4616      	mov	r6, r2
 801fe70:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 801fe74:	9004      	str	r0, [sp, #16]
 801fe76:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fe78:	2f00      	cmp	r7, #0
 801fe7a:	f000 80f6 	beq.w	802006a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801fe7e:	6820      	ldr	r0, [r4, #0]
 801fe80:	aa0a      	add	r2, sp, #40	; 0x28
 801fe82:	6861      	ldr	r1, [r4, #4]
 801fe84:	f04f 0802 	mov.w	r8, #2
 801fe88:	3604      	adds	r6, #4
 801fe8a:	c203      	stmia	r2!, {r0, r1}
 801fe8c:	6818      	ldr	r0, [r3, #0]
 801fe8e:	aa0c      	add	r2, sp, #48	; 0x30
 801fe90:	6859      	ldr	r1, [r3, #4]
 801fe92:	c203      	stmia	r2!, {r0, r1}
 801fe94:	a80a      	add	r0, sp, #40	; 0x28
 801fe96:	f7f0 f8c1 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fe9a:	4621      	mov	r1, r4
 801fe9c:	a80c      	add	r0, sp, #48	; 0x30
 801fe9e:	f7f0 f901 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fea2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801fea6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 801feaa:	f002 0301 	and.w	r3, r2, #1
 801feae:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801feb2:	9306      	str	r3, [sp, #24]
 801feb4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801feb8:	f003 0101 	and.w	r1, r3, #1
 801febc:	9105      	str	r1, [sp, #20]
 801febe:	9805      	ldr	r0, [sp, #20]
 801fec0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801fec4:	4403      	add	r3, r0
 801fec6:	fb01 2303 	mla	r3, r1, r3, r2
 801feca:	fb93 f3f8 	sdiv	r3, r3, r8
 801fece:	441d      	add	r5, r3
 801fed0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801fed4:	441a      	add	r2, r3
 801fed6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801feda:	4419      	add	r1, r3
 801fedc:	4b64      	ldr	r3, [pc, #400]	; (8020070 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801fede:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801fee2:	6818      	ldr	r0, [r3, #0]
 801fee4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 801fee8:	6803      	ldr	r3, [r0, #0]
 801feea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801feec:	4798      	blx	r3
 801feee:	4a61      	ldr	r2, [pc, #388]	; (8020074 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801fef0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 801fef4:	2fff      	cmp	r7, #255	; 0xff
 801fef6:	8813      	ldrh	r3, [r2, #0]
 801fef8:	4611      	mov	r1, r2
 801fefa:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 801fefe:	fb03 fb0b 	mul.w	fp, r3, fp
 801ff02:	fb03 a404 	mla	r4, r3, r4, sl
 801ff06:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ff0a:	d06b      	beq.n	801ffe4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 801ff0c:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 801ff10:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801ff14:	9303      	str	r3, [sp, #12]
 801ff16:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801ff1a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801ff1e:	9b07      	ldr	r3, [sp, #28]
 801ff20:	42a3      	cmp	r3, r4
 801ff22:	f240 809d 	bls.w	8020060 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801ff26:	9b06      	ldr	r3, [sp, #24]
 801ff28:	2b00      	cmp	r3, #0
 801ff2a:	d039      	beq.n	801ffa0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 801ff2c:	782b      	ldrb	r3, [r5, #0]
 801ff2e:	f105 0801 	add.w	r8, r5, #1
 801ff32:	f109 3bff 	add.w	fp, r9, #4294967295
 801ff36:	8822      	ldrh	r2, [r4, #0]
 801ff38:	f003 030f 	and.w	r3, r3, #15
 801ff3c:	9804      	ldr	r0, [sp, #16]
 801ff3e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff42:	9b03      	ldr	r3, [sp, #12]
 801ff44:	9300      	str	r3, [sp, #0]
 801ff46:	463b      	mov	r3, r7
 801ff48:	f7ff ff52 	bl	801fdf0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff4c:	f824 0b02 	strh.w	r0, [r4], #2
 801ff50:	f1bb 0f01 	cmp.w	fp, #1
 801ff54:	46a2      	mov	sl, r4
 801ff56:	f104 0404 	add.w	r4, r4, #4
 801ff5a:	dd24      	ble.n	801ffa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 801ff5c:	f898 3000 	ldrb.w	r3, [r8]
 801ff60:	f1ab 0b02 	sub.w	fp, fp, #2
 801ff64:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801ff68:	091b      	lsrs	r3, r3, #4
 801ff6a:	9804      	ldr	r0, [sp, #16]
 801ff6c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff70:	9b03      	ldr	r3, [sp, #12]
 801ff72:	9300      	str	r3, [sp, #0]
 801ff74:	463b      	mov	r3, r7
 801ff76:	f7ff ff3b 	bl	801fdf0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff7a:	f824 0c04 	strh.w	r0, [r4, #-4]
 801ff7e:	f818 3b01 	ldrb.w	r3, [r8], #1
 801ff82:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801ff86:	f003 030f 	and.w	r3, r3, #15
 801ff8a:	9804      	ldr	r0, [sp, #16]
 801ff8c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ff90:	9b03      	ldr	r3, [sp, #12]
 801ff92:	9300      	str	r3, [sp, #0]
 801ff94:	463b      	mov	r3, r7
 801ff96:	f7ff ff2b 	bl	801fdf0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ff9a:	f824 0c02 	strh.w	r0, [r4, #-2]
 801ff9e:	e7d7      	b.n	801ff50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801ffa0:	46a8      	mov	r8, r5
 801ffa2:	46cb      	mov	fp, r9
 801ffa4:	e7d4      	b.n	801ff50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 801ffa6:	d10e      	bne.n	801ffc6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 801ffa8:	f898 3000 	ldrb.w	r3, [r8]
 801ffac:	f8ba 2000 	ldrh.w	r2, [sl]
 801ffb0:	091b      	lsrs	r3, r3, #4
 801ffb2:	9804      	ldr	r0, [sp, #16]
 801ffb4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801ffb8:	9b03      	ldr	r3, [sp, #12]
 801ffba:	9300      	str	r3, [sp, #0]
 801ffbc:	463b      	mov	r3, r7
 801ffbe:	f7ff ff17 	bl	801fdf0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801ffc2:	f82a 0b02 	strh.w	r0, [sl], #2
 801ffc6:	9b08      	ldr	r3, [sp, #32]
 801ffc8:	9a05      	ldr	r2, [sp, #20]
 801ffca:	881c      	ldrh	r4, [r3, #0]
 801ffcc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801ffd0:	eba4 0409 	sub.w	r4, r4, r9
 801ffd4:	4413      	add	r3, r2
 801ffd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ffd8:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801ffdc:	fb93 f3f2 	sdiv	r3, r3, r2
 801ffe0:	441d      	add	r5, r3
 801ffe2:	e79c      	b.n	801ff1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 801ffe4:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801ffe8:	45a3      	cmp	fp, r4
 801ffea:	d939      	bls.n	8020060 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801ffec:	9b06      	ldr	r3, [sp, #24]
 801ffee:	b1fb      	cbz	r3, 8020030 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801fff0:	782b      	ldrb	r3, [r5, #0]
 801fff2:	1c6a      	adds	r2, r5, #1
 801fff4:	f109 30ff 	add.w	r0, r9, #4294967295
 801fff8:	3402      	adds	r4, #2
 801fffa:	f003 030f 	and.w	r3, r3, #15
 801fffe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020002:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020006:	2801      	cmp	r0, #1
 8020008:	4623      	mov	r3, r4
 802000a:	f104 0404 	add.w	r4, r4, #4
 802000e:	dd12      	ble.n	8020036 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020010:	7813      	ldrb	r3, [r2, #0]
 8020012:	3802      	subs	r0, #2
 8020014:	091b      	lsrs	r3, r3, #4
 8020016:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802001a:	f824 3c04 	strh.w	r3, [r4, #-4]
 802001e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020022:	f003 030f 	and.w	r3, r3, #15
 8020026:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802002a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802002e:	e7ea      	b.n	8020006 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020030:	462a      	mov	r2, r5
 8020032:	4648      	mov	r0, r9
 8020034:	e7e7      	b.n	8020006 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020036:	d106      	bne.n	8020046 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020038:	7812      	ldrb	r2, [r2, #0]
 802003a:	3302      	adds	r3, #2
 802003c:	0912      	lsrs	r2, r2, #4
 802003e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020042:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020046:	880c      	ldrh	r4, [r1, #0]
 8020048:	9a05      	ldr	r2, [sp, #20]
 802004a:	eba4 0409 	sub.w	r4, r4, r9
 802004e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020052:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8020056:	4413      	add	r3, r2
 8020058:	fb93 f3f8 	sdiv	r3, r3, r8
 802005c:	441d      	add	r5, r3
 802005e:	e7c3      	b.n	801ffe8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 8020060:	4b03      	ldr	r3, [pc, #12]	; (8020070 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020062:	6818      	ldr	r0, [r3, #0]
 8020064:	6803      	ldr	r3, [r0, #0]
 8020066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020068:	4798      	blx	r3
 802006a:	b00f      	add	sp, #60	; 0x3c
 802006c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020070:	2400e424 	.word	0x2400e424
 8020074:	2400e41e 	.word	0x2400e41e

08020078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020078:	b5f0      	push	{r4, r5, r6, r7, lr}
 802007a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802007e:	0a0f      	lsrs	r7, r1, #8
 8020080:	2dff      	cmp	r5, #255	; 0xff
 8020082:	d10c      	bne.n	802009e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020084:	2bff      	cmp	r3, #255	; 0xff
 8020086:	d10a      	bne.n	802009e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020088:	0948      	lsrs	r0, r1, #5
 802008a:	4b25      	ldr	r3, [pc, #148]	; (8020120 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 802008c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020090:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020094:	403b      	ands	r3, r7
 8020096:	4318      	orrs	r0, r3
 8020098:	4308      	orrs	r0, r1
 802009a:	b280      	uxth	r0, r0
 802009c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802009e:	fb15 f503 	smulbb	r5, r5, r3
 80200a2:	1214      	asrs	r4, r2, #8
 80200a4:	10d6      	asrs	r6, r2, #3
 80200a6:	b2ab      	uxth	r3, r5
 80200a8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80200ac:	00d0      	lsls	r0, r2, #3
 80200ae:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80200b2:	1c5d      	adds	r5, r3, #1
 80200b4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80200b8:	b2c0      	uxtb	r0, r0
 80200ba:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80200be:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80200c2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80200c6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80200ca:	fa1f fc85 	uxth.w	ip, r5
 80200ce:	43ed      	mvns	r5, r5
 80200d0:	fb12 f20c 	smulbb	r2, r2, ip
 80200d4:	b2eb      	uxtb	r3, r5
 80200d6:	b2fd      	uxtb	r5, r7
 80200d8:	fb04 2403 	mla	r4, r4, r3, r2
 80200dc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80200e0:	fb15 f50c 	smulbb	r5, r5, ip
 80200e4:	b2c8      	uxtb	r0, r1
 80200e6:	b2a4      	uxth	r4, r4
 80200e8:	fb10 f00c 	smulbb	r0, r0, ip
 80200ec:	fb06 5503 	mla	r5, r6, r3, r5
 80200f0:	fb02 0003 	mla	r0, r2, r3, r0
 80200f4:	b2ad      	uxth	r5, r5
 80200f6:	b283      	uxth	r3, r0
 80200f8:	1c60      	adds	r0, r4, #1
 80200fa:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80200fe:	1c58      	adds	r0, r3, #1
 8020100:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020104:	1c6b      	adds	r3, r5, #1
 8020106:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802010a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802010e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020112:	096d      	lsrs	r5, r5, #5
 8020114:	4320      	orrs	r0, r4
 8020116:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802011a:	4328      	orrs	r0, r5
 802011c:	e7be      	b.n	802009c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 802011e:	bf00      	nop
 8020120:	00fff800 	.word	0x00fff800

08020124 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020128:	461c      	mov	r4, r3
 802012a:	b08d      	sub	sp, #52	; 0x34
 802012c:	460d      	mov	r5, r1
 802012e:	4616      	mov	r6, r2
 8020130:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020132:	4680      	mov	r8, r0
 8020134:	6861      	ldr	r1, [r4, #4]
 8020136:	aa08      	add	r2, sp, #32
 8020138:	6820      	ldr	r0, [r4, #0]
 802013a:	f04f 0a02 	mov.w	sl, #2
 802013e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8020142:	3604      	adds	r6, #4
 8020144:	c203      	stmia	r2!, {r0, r1}
 8020146:	6818      	ldr	r0, [r3, #0]
 8020148:	aa0a      	add	r2, sp, #40	; 0x28
 802014a:	6859      	ldr	r1, [r3, #4]
 802014c:	c203      	stmia	r2!, {r0, r1}
 802014e:	a808      	add	r0, sp, #32
 8020150:	f7ef ff64 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020154:	4621      	mov	r1, r4
 8020156:	a80a      	add	r0, sp, #40	; 0x28
 8020158:	f7ef ffa4 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802015c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8020160:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8020164:	f002 0301 	and.w	r3, r2, #1
 8020168:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802016c:	9303      	str	r3, [sp, #12]
 802016e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8020172:	f003 0101 	and.w	r1, r3, #1
 8020176:	9102      	str	r1, [sp, #8]
 8020178:	9802      	ldr	r0, [sp, #8]
 802017a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802017e:	4403      	add	r3, r0
 8020180:	fb01 2303 	mla	r3, r1, r3, r2
 8020184:	fb93 f3fa 	sdiv	r3, r3, sl
 8020188:	441d      	add	r5, r3
 802018a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 802018e:	441a      	add	r2, r3
 8020190:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8020194:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020198:	4419      	add	r1, r3
 802019a:	4a3e      	ldr	r2, [pc, #248]	; (8020294 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802019c:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80201a0:	6810      	ldr	r0, [r2, #0]
 80201a2:	9205      	str	r2, [sp, #20]
 80201a4:	6803      	ldr	r3, [r0, #0]
 80201a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80201a8:	4798      	blx	r3
 80201aa:	4b3b      	ldr	r3, [pc, #236]	; (8020298 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80201ac:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80201b0:	8819      	ldrh	r1, [r3, #0]
 80201b2:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80201b6:	434f      	muls	r7, r1
 80201b8:	fb01 c404 	mla	r4, r1, r4, ip
 80201bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80201c0:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80201c4:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80201c8:	9204      	str	r2, [sp, #16]
 80201ca:	9b04      	ldr	r3, [sp, #16]
 80201cc:	429c      	cmp	r4, r3
 80201ce:	d258      	bcs.n	8020282 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80201d0:	9b03      	ldr	r3, [sp, #12]
 80201d2:	2b00      	cmp	r3, #0
 80201d4:	d034      	beq.n	8020240 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80201d6:	782b      	ldrb	r3, [r5, #0]
 80201d8:	1c6f      	adds	r7, r5, #1
 80201da:	f003 030f 	and.w	r3, r3, #15
 80201de:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80201e2:	0e0b      	lsrs	r3, r1, #24
 80201e4:	d006      	beq.n	80201f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80201e6:	8822      	ldrh	r2, [r4, #0]
 80201e8:	4640      	mov	r0, r8
 80201ea:	9300      	str	r3, [sp, #0]
 80201ec:	464b      	mov	r3, r9
 80201ee:	f7ff ff43 	bl	8020078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80201f2:	8020      	strh	r0, [r4, #0]
 80201f4:	3402      	adds	r4, #2
 80201f6:	f10b 3aff 	add.w	sl, fp, #4294967295
 80201fa:	f1ba 0f01 	cmp.w	sl, #1
 80201fe:	dd22      	ble.n	8020246 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020200:	783b      	ldrb	r3, [r7, #0]
 8020202:	091b      	lsrs	r3, r3, #4
 8020204:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020208:	0e0b      	lsrs	r3, r1, #24
 802020a:	d006      	beq.n	802021a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802020c:	8822      	ldrh	r2, [r4, #0]
 802020e:	4640      	mov	r0, r8
 8020210:	9300      	str	r3, [sp, #0]
 8020212:	464b      	mov	r3, r9
 8020214:	f7ff ff30 	bl	8020078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020218:	8020      	strh	r0, [r4, #0]
 802021a:	f817 3b01 	ldrb.w	r3, [r7], #1
 802021e:	f003 030f 	and.w	r3, r3, #15
 8020222:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020226:	0e0b      	lsrs	r3, r1, #24
 8020228:	d006      	beq.n	8020238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802022a:	8862      	ldrh	r2, [r4, #2]
 802022c:	4640      	mov	r0, r8
 802022e:	9300      	str	r3, [sp, #0]
 8020230:	464b      	mov	r3, r9
 8020232:	f7ff ff21 	bl	8020078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020236:	8060      	strh	r0, [r4, #2]
 8020238:	3404      	adds	r4, #4
 802023a:	f1aa 0a02 	sub.w	sl, sl, #2
 802023e:	e7dc      	b.n	80201fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020240:	462f      	mov	r7, r5
 8020242:	46da      	mov	sl, fp
 8020244:	e7d9      	b.n	80201fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020246:	d10d      	bne.n	8020264 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020248:	783b      	ldrb	r3, [r7, #0]
 802024a:	091b      	lsrs	r3, r3, #4
 802024c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020250:	0e0b      	lsrs	r3, r1, #24
 8020252:	d006      	beq.n	8020262 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020254:	8822      	ldrh	r2, [r4, #0]
 8020256:	4640      	mov	r0, r8
 8020258:	9300      	str	r3, [sp, #0]
 802025a:	464b      	mov	r3, r9
 802025c:	f7ff ff0c 	bl	8020078 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020260:	8020      	strh	r0, [r4, #0]
 8020262:	3402      	adds	r4, #2
 8020264:	9b06      	ldr	r3, [sp, #24]
 8020266:	9a02      	ldr	r2, [sp, #8]
 8020268:	881b      	ldrh	r3, [r3, #0]
 802026a:	eba3 030b 	sub.w	r3, r3, fp
 802026e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020272:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8020276:	4413      	add	r3, r2
 8020278:	9a07      	ldr	r2, [sp, #28]
 802027a:	fb93 f3f2 	sdiv	r3, r3, r2
 802027e:	441d      	add	r5, r3
 8020280:	e7a3      	b.n	80201ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020282:	9b05      	ldr	r3, [sp, #20]
 8020284:	6818      	ldr	r0, [r3, #0]
 8020286:	6803      	ldr	r3, [r0, #0]
 8020288:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802028a:	4798      	blx	r3
 802028c:	b00d      	add	sp, #52	; 0x34
 802028e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020292:	bf00      	nop
 8020294:	2400e424 	.word	0x2400e424
 8020298:	2400e41e 	.word	0x2400e41e

0802029c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 802029c:	b570      	push	{r4, r5, r6, lr}
 802029e:	1214      	asrs	r4, r2, #8
 80202a0:	788d      	ldrb	r5, [r1, #2]
 80202a2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80202a6:	10d0      	asrs	r0, r2, #3
 80202a8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80202ac:	00d2      	lsls	r2, r2, #3
 80202ae:	fb15 f503 	smulbb	r5, r5, r3
 80202b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80202b6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80202ba:	b2d2      	uxtb	r2, r2
 80202bc:	fb04 5506 	mla	r5, r4, r6, r5
 80202c0:	784c      	ldrb	r4, [r1, #1]
 80202c2:	7809      	ldrb	r1, [r1, #0]
 80202c4:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80202c8:	fb14 f403 	smulbb	r4, r4, r3
 80202cc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80202d0:	fb11 f303 	smulbb	r3, r1, r3
 80202d4:	b2ad      	uxth	r5, r5
 80202d6:	fb00 4406 	mla	r4, r0, r6, r4
 80202da:	fb02 3306 	mla	r3, r2, r6, r3
 80202de:	1c68      	adds	r0, r5, #1
 80202e0:	b2a4      	uxth	r4, r4
 80202e2:	b29b      	uxth	r3, r3
 80202e4:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80202e8:	1c62      	adds	r2, r4, #1
 80202ea:	1c58      	adds	r0, r3, #1
 80202ec:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80202f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80202f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80202f8:	0964      	lsrs	r4, r4, #5
 80202fa:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80202fe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020302:	4328      	orrs	r0, r5
 8020304:	4320      	orrs	r0, r4
 8020306:	bd70      	pop	{r4, r5, r6, pc}

08020308 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802030c:	b08f      	sub	sp, #60	; 0x3c
 802030e:	461c      	mov	r4, r3
 8020310:	4682      	mov	sl, r0
 8020312:	460e      	mov	r6, r1
 8020314:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8020318:	4615      	mov	r5, r2
 802031a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802031c:	2f00      	cmp	r7, #0
 802031e:	f000 8141 	beq.w	80205a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 8020322:	6820      	ldr	r0, [r4, #0]
 8020324:	aa0a      	add	r2, sp, #40	; 0x28
 8020326:	6861      	ldr	r1, [r4, #4]
 8020328:	f04f 0802 	mov.w	r8, #2
 802032c:	3504      	adds	r5, #4
 802032e:	c203      	stmia	r2!, {r0, r1}
 8020330:	6818      	ldr	r0, [r3, #0]
 8020332:	aa0c      	add	r2, sp, #48	; 0x30
 8020334:	6859      	ldr	r1, [r3, #4]
 8020336:	c203      	stmia	r2!, {r0, r1}
 8020338:	a80a      	add	r0, sp, #40	; 0x28
 802033a:	f7ef fe6f 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802033e:	4621      	mov	r1, r4
 8020340:	a80c      	add	r0, sp, #48	; 0x30
 8020342:	f7ef feaf 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020346:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802034a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802034e:	f002 0301 	and.w	r3, r2, #1
 8020352:	9306      	str	r3, [sp, #24]
 8020354:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8020358:	f003 0101 	and.w	r1, r3, #1
 802035c:	9105      	str	r1, [sp, #20]
 802035e:	9805      	ldr	r0, [sp, #20]
 8020360:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8020364:	4403      	add	r3, r0
 8020366:	fb01 2303 	mla	r3, r1, r3, r2
 802036a:	fb93 f3f8 	sdiv	r3, r3, r8
 802036e:	441e      	add	r6, r3
 8020370:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8020374:	441a      	add	r2, r3
 8020376:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802037a:	4419      	add	r1, r3
 802037c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020380:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020384:	9303      	str	r3, [sp, #12]
 8020386:	4b89      	ldr	r3, [pc, #548]	; (80205ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020388:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802038c:	6818      	ldr	r0, [r3, #0]
 802038e:	6803      	ldr	r3, [r0, #0]
 8020390:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020392:	4798      	blx	r3
 8020394:	4a86      	ldr	r2, [pc, #536]	; (80205b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020396:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802039a:	2fff      	cmp	r7, #255	; 0xff
 802039c:	8813      	ldrh	r3, [r2, #0]
 802039e:	4694      	mov	ip, r2
 80203a0:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80203a4:	fb03 9404 	mla	r4, r3, r4, r9
 80203a8:	fb03 f30b 	mul.w	r3, r3, fp
 80203ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80203b0:	d071      	beq.n	8020496 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 80203b2:	43f9      	mvns	r1, r7
 80203b4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80203b8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80203bc:	b2c9      	uxtb	r1, r1
 80203be:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80203c2:	9104      	str	r1, [sp, #16]
 80203c4:	9b07      	ldr	r3, [sp, #28]
 80203c6:	42a3      	cmp	r3, r4
 80203c8:	f240 80e7 	bls.w	802059a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80203cc:	9b06      	ldr	r3, [sp, #24]
 80203ce:	2b00      	cmp	r3, #0
 80203d0:	d03d      	beq.n	802044e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 80203d2:	7831      	ldrb	r1, [r6, #0]
 80203d4:	4650      	mov	r0, sl
 80203d6:	9b04      	ldr	r3, [sp, #16]
 80203d8:	f106 0801 	add.w	r8, r6, #1
 80203dc:	f001 010f 	and.w	r1, r1, #15
 80203e0:	8822      	ldrh	r2, [r4, #0]
 80203e2:	9300      	str	r3, [sp, #0]
 80203e4:	463b      	mov	r3, r7
 80203e6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80203ea:	4429      	add	r1, r5
 80203ec:	f7ff ff56 	bl	802029c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80203f0:	9b03      	ldr	r3, [sp, #12]
 80203f2:	f824 0b02 	strh.w	r0, [r4], #2
 80203f6:	f103 3bff 	add.w	fp, r3, #4294967295
 80203fa:	f1bb 0f01 	cmp.w	fp, #1
 80203fe:	46a1      	mov	r9, r4
 8020400:	f104 0404 	add.w	r4, r4, #4
 8020404:	dd27      	ble.n	8020456 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8020406:	f898 1000 	ldrb.w	r1, [r8]
 802040a:	4650      	mov	r0, sl
 802040c:	9b04      	ldr	r3, [sp, #16]
 802040e:	f1ab 0b02 	sub.w	fp, fp, #2
 8020412:	0909      	lsrs	r1, r1, #4
 8020414:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020418:	9300      	str	r3, [sp, #0]
 802041a:	463b      	mov	r3, r7
 802041c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020420:	4429      	add	r1, r5
 8020422:	f7ff ff3b 	bl	802029c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020426:	f824 0c04 	strh.w	r0, [r4, #-4]
 802042a:	f818 1b01 	ldrb.w	r1, [r8], #1
 802042e:	4650      	mov	r0, sl
 8020430:	9b04      	ldr	r3, [sp, #16]
 8020432:	f001 010f 	and.w	r1, r1, #15
 8020436:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802043a:	9300      	str	r3, [sp, #0]
 802043c:	463b      	mov	r3, r7
 802043e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020442:	4429      	add	r1, r5
 8020444:	f7ff ff2a 	bl	802029c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020448:	f824 0c02 	strh.w	r0, [r4, #-2]
 802044c:	e7d5      	b.n	80203fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 802044e:	46b0      	mov	r8, r6
 8020450:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020454:	e7d1      	b.n	80203fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8020456:	d10f      	bne.n	8020478 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8020458:	f898 1000 	ldrb.w	r1, [r8]
 802045c:	4650      	mov	r0, sl
 802045e:	9b04      	ldr	r3, [sp, #16]
 8020460:	0909      	lsrs	r1, r1, #4
 8020462:	f8b9 2000 	ldrh.w	r2, [r9]
 8020466:	9300      	str	r3, [sp, #0]
 8020468:	463b      	mov	r3, r7
 802046a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802046e:	4429      	add	r1, r5
 8020470:	f7ff ff14 	bl	802029c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020474:	f829 0b02 	strh.w	r0, [r9], #2
 8020478:	9b08      	ldr	r3, [sp, #32]
 802047a:	9a05      	ldr	r2, [sp, #20]
 802047c:	881c      	ldrh	r4, [r3, #0]
 802047e:	9b03      	ldr	r3, [sp, #12]
 8020480:	1ae4      	subs	r4, r4, r3
 8020482:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8020486:	4413      	add	r3, r2
 8020488:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802048a:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802048e:	fb93 f3f2 	sdiv	r3, r3, r2
 8020492:	441e      	add	r6, r3
 8020494:	e796      	b.n	80203c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 8020496:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802049a:	4f46      	ldr	r7, [pc, #280]	; (80205b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802049c:	42a3      	cmp	r3, r4
 802049e:	d97c      	bls.n	802059a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80204a0:	9a06      	ldr	r2, [sp, #24]
 80204a2:	2a00      	cmp	r2, #0
 80204a4:	d054      	beq.n	8020550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 80204a6:	7830      	ldrb	r0, [r6, #0]
 80204a8:	1c71      	adds	r1, r6, #1
 80204aa:	f000 000f 	and.w	r0, r0, #15
 80204ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80204b2:	eb05 0e00 	add.w	lr, r5, r0
 80204b6:	5c28      	ldrb	r0, [r5, r0]
 80204b8:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80204bc:	f89e e001 	ldrb.w	lr, [lr, #1]
 80204c0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80204c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80204c8:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80204cc:	ea42 020e 	orr.w	r2, r2, lr
 80204d0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80204d4:	f824 2b02 	strh.w	r2, [r4], #2
 80204d8:	9a03      	ldr	r2, [sp, #12]
 80204da:	f102 3eff 	add.w	lr, r2, #4294967295
 80204de:	f1be 0f01 	cmp.w	lr, #1
 80204e2:	4620      	mov	r0, r4
 80204e4:	f104 0404 	add.w	r4, r4, #4
 80204e8:	dd36      	ble.n	8020558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 80204ea:	7808      	ldrb	r0, [r1, #0]
 80204ec:	f1ae 0e02 	sub.w	lr, lr, #2
 80204f0:	0900      	lsrs	r0, r0, #4
 80204f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80204f6:	eb05 0a00 	add.w	sl, r5, r0
 80204fa:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80204fe:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020502:	00d2      	lsls	r2, r2, #3
 8020504:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020508:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802050c:	ea49 0202 	orr.w	r2, r9, r2
 8020510:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020514:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020518:	f824 2c04 	strh.w	r2, [r4, #-4]
 802051c:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020520:	f000 000f 	and.w	r0, r0, #15
 8020524:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020528:	eb05 0a00 	add.w	sl, r5, r0
 802052c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020530:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020534:	00d2      	lsls	r2, r2, #3
 8020536:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802053a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802053e:	ea49 0202 	orr.w	r2, r9, r2
 8020542:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020546:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802054a:	f824 2c02 	strh.w	r2, [r4, #-2]
 802054e:	e7c6      	b.n	80204de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020550:	4631      	mov	r1, r6
 8020552:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020556:	e7c2      	b.n	80204de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020558:	d111      	bne.n	802057e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 802055a:	7809      	ldrb	r1, [r1, #0]
 802055c:	0909      	lsrs	r1, r1, #4
 802055e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020562:	186c      	adds	r4, r5, r1
 8020564:	5c69      	ldrb	r1, [r5, r1]
 8020566:	78a2      	ldrb	r2, [r4, #2]
 8020568:	7864      	ldrb	r4, [r4, #1]
 802056a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802056e:	00e4      	lsls	r4, r4, #3
 8020570:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020574:	4322      	orrs	r2, r4
 8020576:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802057a:	f820 2b02 	strh.w	r2, [r0], #2
 802057e:	9a03      	ldr	r2, [sp, #12]
 8020580:	f8bc 4000 	ldrh.w	r4, [ip]
 8020584:	9905      	ldr	r1, [sp, #20]
 8020586:	1aa4      	subs	r4, r4, r2
 8020588:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802058c:	440a      	add	r2, r1
 802058e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020592:	fb92 f2f8 	sdiv	r2, r2, r8
 8020596:	4416      	add	r6, r2
 8020598:	e780      	b.n	802049c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 802059a:	4b04      	ldr	r3, [pc, #16]	; (80205ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802059c:	6818      	ldr	r0, [r3, #0]
 802059e:	6803      	ldr	r3, [r0, #0]
 80205a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80205a2:	4798      	blx	r3
 80205a4:	b00f      	add	sp, #60	; 0x3c
 80205a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205aa:	bf00      	nop
 80205ac:	2400e424 	.word	0x2400e424
 80205b0:	2400e41e 	.word	0x2400e41e
 80205b4:	fffff800 	.word	0xfffff800

080205b8 <CRC_Lock>:
 80205b8:	4a20      	ldr	r2, [pc, #128]	; (802063c <CRC_Lock+0x84>)
 80205ba:	b530      	push	{r4, r5, lr}
 80205bc:	6813      	ldr	r3, [r2, #0]
 80205be:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80205c2:	f24c 2540 	movw	r5, #49728	; 0xc240
 80205c6:	f023 0301 	bic.w	r3, r3, #1
 80205ca:	6013      	str	r3, [r2, #0]
 80205cc:	4b1c      	ldr	r3, [pc, #112]	; (8020640 <CRC_Lock+0x88>)
 80205ce:	681a      	ldr	r2, [r3, #0]
 80205d0:	4022      	ands	r2, r4
 80205d2:	42aa      	cmp	r2, r5
 80205d4:	d005      	beq.n	80205e2 <CRC_Lock+0x2a>
 80205d6:	681b      	ldr	r3, [r3, #0]
 80205d8:	f24c 2270 	movw	r2, #49776	; 0xc270
 80205dc:	4023      	ands	r3, r4
 80205de:	4293      	cmp	r3, r2
 80205e0:	d124      	bne.n	802062c <CRC_Lock+0x74>
 80205e2:	4b18      	ldr	r3, [pc, #96]	; (8020644 <CRC_Lock+0x8c>)
 80205e4:	681b      	ldr	r3, [r3, #0]
 80205e6:	bb0b      	cbnz	r3, 802062c <CRC_Lock+0x74>
 80205e8:	4b17      	ldr	r3, [pc, #92]	; (8020648 <CRC_Lock+0x90>)
 80205ea:	681a      	ldr	r2, [r3, #0]
 80205ec:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80205f0:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80205f4:	d00d      	beq.n	8020612 <CRC_Lock+0x5a>
 80205f6:	681a      	ldr	r2, [r3, #0]
 80205f8:	f240 4483 	movw	r4, #1155	; 0x483
 80205fc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020600:	42a2      	cmp	r2, r4
 8020602:	d006      	beq.n	8020612 <CRC_Lock+0x5a>
 8020604:	681b      	ldr	r3, [r3, #0]
 8020606:	f240 4285 	movw	r2, #1157	; 0x485
 802060a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802060e:	4293      	cmp	r3, r2
 8020610:	d10c      	bne.n	802062c <CRC_Lock+0x74>
 8020612:	4b0e      	ldr	r3, [pc, #56]	; (802064c <CRC_Lock+0x94>)
 8020614:	2201      	movs	r2, #1
 8020616:	601a      	str	r2, [r3, #0]
 8020618:	681a      	ldr	r2, [r3, #0]
 802061a:	2a00      	cmp	r2, #0
 802061c:	d1fc      	bne.n	8020618 <CRC_Lock+0x60>
 802061e:	4b0c      	ldr	r3, [pc, #48]	; (8020650 <CRC_Lock+0x98>)
 8020620:	6018      	str	r0, [r3, #0]
 8020622:	6818      	ldr	r0, [r3, #0]
 8020624:	1a43      	subs	r3, r0, r1
 8020626:	4258      	negs	r0, r3
 8020628:	4158      	adcs	r0, r3
 802062a:	bd30      	pop	{r4, r5, pc}
 802062c:	4b09      	ldr	r3, [pc, #36]	; (8020654 <CRC_Lock+0x9c>)
 802062e:	2201      	movs	r2, #1
 8020630:	601a      	str	r2, [r3, #0]
 8020632:	681a      	ldr	r2, [r3, #0]
 8020634:	2a00      	cmp	r2, #0
 8020636:	d1fc      	bne.n	8020632 <CRC_Lock+0x7a>
 8020638:	4b07      	ldr	r3, [pc, #28]	; (8020658 <CRC_Lock+0xa0>)
 802063a:	e7f1      	b.n	8020620 <CRC_Lock+0x68>
 802063c:	e0002000 	.word	0xe0002000
 8020640:	e000ed00 	.word	0xe000ed00
 8020644:	e0042000 	.word	0xe0042000
 8020648:	5c001000 	.word	0x5c001000
 802064c:	58024c08 	.word	0x58024c08
 8020650:	58024c00 	.word	0x58024c00
 8020654:	40023008 	.word	0x40023008
 8020658:	40023000 	.word	0x40023000

0802065c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802065c:	6101      	str	r1, [r0, #16]
 802065e:	4770      	bx	lr

08020660 <_ZN8touchgfx8Gestures4tickEv>:
 8020660:	7b83      	ldrb	r3, [r0, #14]
 8020662:	b14b      	cbz	r3, 8020678 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020664:	8903      	ldrh	r3, [r0, #8]
 8020666:	3301      	adds	r3, #1
 8020668:	b29b      	uxth	r3, r3
 802066a:	2b07      	cmp	r3, #7
 802066c:	8103      	strh	r3, [r0, #8]
 802066e:	bf81      	itttt	hi
 8020670:	2300      	movhi	r3, #0
 8020672:	8143      	strhhi	r3, [r0, #10]
 8020674:	8183      	strhhi	r3, [r0, #12]
 8020676:	7383      	strbhi	r3, [r0, #14]
 8020678:	4770      	bx	lr
	...

0802067c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802067c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020680:	4698      	mov	r8, r3
 8020682:	8883      	ldrh	r3, [r0, #4]
 8020684:	4604      	mov	r4, r0
 8020686:	4617      	mov	r7, r2
 8020688:	f8ad 3006 	strh.w	r3, [sp, #6]
 802068c:	eba8 0303 	sub.w	r3, r8, r3
 8020690:	4a19      	ldr	r2, [pc, #100]	; (80206f8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020692:	460e      	mov	r6, r1
 8020694:	b21b      	sxth	r3, r3
 8020696:	88c1      	ldrh	r1, [r0, #6]
 8020698:	9200      	str	r2, [sp, #0]
 802069a:	2000      	movs	r0, #0
 802069c:	2b00      	cmp	r3, #0
 802069e:	8aa2      	ldrh	r2, [r4, #20]
 80206a0:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80206a4:	bfb8      	it	lt
 80206a6:	425b      	neglt	r3, r3
 80206a8:	f88d 0004 	strb.w	r0, [sp, #4]
 80206ac:	f8ad 1008 	strh.w	r1, [sp, #8]
 80206b0:	b21b      	sxth	r3, r3
 80206b2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80206b6:	f8ad 500c 	strh.w	r5, [sp, #12]
 80206ba:	4293      	cmp	r3, r2
 80206bc:	dc07      	bgt.n	80206ce <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80206be:	1a69      	subs	r1, r5, r1
 80206c0:	b209      	sxth	r1, r1
 80206c2:	2900      	cmp	r1, #0
 80206c4:	bfb8      	it	lt
 80206c6:	4249      	neglt	r1, r1
 80206c8:	b209      	sxth	r1, r1
 80206ca:	428a      	cmp	r2, r1
 80206cc:	da10      	bge.n	80206f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80206ce:	6920      	ldr	r0, [r4, #16]
 80206d0:	4669      	mov	r1, sp
 80206d2:	eba8 0606 	sub.w	r6, r8, r6
 80206d6:	1bef      	subs	r7, r5, r7
 80206d8:	6803      	ldr	r3, [r0, #0]
 80206da:	685b      	ldr	r3, [r3, #4]
 80206dc:	4798      	blx	r3
 80206de:	2300      	movs	r3, #0
 80206e0:	2001      	movs	r0, #1
 80206e2:	8166      	strh	r6, [r4, #10]
 80206e4:	8123      	strh	r3, [r4, #8]
 80206e6:	81a7      	strh	r7, [r4, #12]
 80206e8:	f8a4 8004 	strh.w	r8, [r4, #4]
 80206ec:	80e5      	strh	r5, [r4, #6]
 80206ee:	73a0      	strb	r0, [r4, #14]
 80206f0:	b004      	add	sp, #16
 80206f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80206f6:	bf00      	nop
 80206f8:	08023a0c 	.word	0x08023a0c

080206fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80206fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80206fe:	461e      	mov	r6, r3
 8020700:	1e4b      	subs	r3, r1, #1
 8020702:	b085      	sub	sp, #20
 8020704:	4604      	mov	r4, r0
 8020706:	2b01      	cmp	r3, #1
 8020708:	460d      	mov	r5, r1
 802070a:	4617      	mov	r7, r2
 802070c:	d84b      	bhi.n	80207a6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802070e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020712:	1cd3      	adds	r3, r2, #3
 8020714:	b29b      	uxth	r3, r3
 8020716:	2b06      	cmp	r3, #6
 8020718:	d916      	bls.n	8020748 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802071a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80207bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802071e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020722:	f8cd c004 	str.w	ip, [sp, #4]
 8020726:	f04f 0c00 	mov.w	ip, #0
 802072a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802072e:	6900      	ldr	r0, [r0, #16]
 8020730:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020734:	a901      	add	r1, sp, #4
 8020736:	f88d c008 	strb.w	ip, [sp, #8]
 802073a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802073e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020742:	6803      	ldr	r3, [r0, #0]
 8020744:	689b      	ldr	r3, [r3, #8]
 8020746:	4798      	blx	r3
 8020748:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802074c:	1cd3      	adds	r3, r2, #3
 802074e:	b29b      	uxth	r3, r3
 8020750:	2b06      	cmp	r3, #6
 8020752:	d916      	bls.n	8020782 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020754:	f8df c064 	ldr.w	ip, [pc, #100]	; 80207bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020758:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802075c:	f8cd c004 	str.w	ip, [sp, #4]
 8020760:	f04f 0c01 	mov.w	ip, #1
 8020764:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020768:	6920      	ldr	r0, [r4, #16]
 802076a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802076e:	a901      	add	r1, sp, #4
 8020770:	f88d c008 	strb.w	ip, [sp, #8]
 8020774:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020778:	f8ad 300e 	strh.w	r3, [sp, #14]
 802077c:	6803      	ldr	r3, [r0, #0]
 802077e:	689b      	ldr	r3, [r3, #8]
 8020780:	4798      	blx	r3
 8020782:	4b0d      	ldr	r3, [pc, #52]	; (80207b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020784:	a901      	add	r1, sp, #4
 8020786:	6920      	ldr	r0, [r4, #16]
 8020788:	9301      	str	r3, [sp, #4]
 802078a:	2300      	movs	r3, #0
 802078c:	f88d 5008 	strb.w	r5, [sp, #8]
 8020790:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020794:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020798:	f8ad 300e 	strh.w	r3, [sp, #14]
 802079c:	6803      	ldr	r3, [r0, #0]
 802079e:	681b      	ldr	r3, [r3, #0]
 80207a0:	4798      	blx	r3
 80207a2:	b005      	add	sp, #20
 80207a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80207a6:	2900      	cmp	r1, #0
 80207a8:	d1eb      	bne.n	8020782 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80207aa:	80a2      	strh	r2, [r4, #4]
 80207ac:	80c6      	strh	r6, [r0, #6]
 80207ae:	60a1      	str	r1, [r4, #8]
 80207b0:	81a1      	strh	r1, [r4, #12]
 80207b2:	73a1      	strb	r1, [r4, #14]
 80207b4:	e7e5      	b.n	8020782 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80207b6:	bf00      	nop
 80207b8:	080239f8 	.word	0x080239f8
 80207bc:	08023a20 	.word	0x08023a20

080207c0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80207c0:	10c9      	asrs	r1, r1, #3
 80207c2:	2900      	cmp	r1, #0
 80207c4:	bfb8      	it	lt
 80207c6:	4249      	neglt	r1, r1
 80207c8:	2801      	cmp	r0, #1
 80207ca:	d108      	bne.n	80207de <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80207cc:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80207d0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80207d4:	4601      	mov	r1, r0
 80207d6:	dd02      	ble.n	80207de <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80207d8:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80207dc:	4770      	bx	lr
 80207de:	29ff      	cmp	r1, #255	; 0xff
 80207e0:	bfa8      	it	ge
 80207e2:	21ff      	movge	r1, #255	; 0xff
 80207e4:	4608      	mov	r0, r1
 80207e6:	4770      	bx	lr

080207e8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80207e8:	b410      	push	{r4}
 80207ea:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80207ee:	429c      	cmp	r4, r3
 80207f0:	d803      	bhi.n	80207fa <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80207f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80207f6:	f7ed bf1b 	b.w	800e630 <_ZN8touchgfx7Outline6lineToEii>
 80207fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80207fe:	4770      	bx	lr

08020800 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8020800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020804:	b08b      	sub	sp, #44	; 0x2c
 8020806:	4606      	mov	r6, r0
 8020808:	468a      	mov	sl, r1
 802080a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802080e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8020812:	9308      	str	r3, [sp, #32]
 8020814:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8020818:	9309      	str	r3, [sp, #36]	; 0x24
 802081a:	f7ee f874 	bl	800e906 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802081e:	68b5      	ldr	r5, [r6, #8]
 8020820:	4604      	mov	r4, r0
 8020822:	2d00      	cmp	r5, #0
 8020824:	d044      	beq.n	80208b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020826:	6873      	ldr	r3, [r6, #4]
 8020828:	42ab      	cmp	r3, r5
 802082a:	d33d      	bcc.n	80208a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802082c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020830:	f04f 0800 	mov.w	r8, #0
 8020834:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8020838:	eb02 0b03 	add.w	fp, r2, r3
 802083c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8020840:	fb02 1203 	mla	r2, r2, r3, r1
 8020844:	9205      	str	r2, [sp, #20]
 8020846:	1e6a      	subs	r2, r5, #1
 8020848:	9204      	str	r2, [sp, #16]
 802084a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802084e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020852:	454b      	cmp	r3, r9
 8020854:	463a      	mov	r2, r7
 8020856:	d008      	beq.n	802086a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020858:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 802085c:	eb03 0b09 	add.w	fp, r3, r9
 8020860:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8020864:	fb03 1309 	mla	r3, r3, r9, r1
 8020868:	9305      	str	r3, [sp, #20]
 802086a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802086e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8020872:	4498      	add	r8, r3
 8020874:	9b04      	ldr	r3, [sp, #16]
 8020876:	3b01      	subs	r3, #1
 8020878:	9304      	str	r3, [sp, #16]
 802087a:	9b04      	ldr	r3, [sp, #16]
 802087c:	3301      	adds	r3, #1
 802087e:	d015      	beq.n	80208ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020880:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8020884:	42bb      	cmp	r3, r7
 8020886:	d117      	bne.n	80208b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020888:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802088c:	9b04      	ldr	r3, [sp, #16]
 802088e:	4548      	cmp	r0, r9
 8020890:	f103 33ff 	add.w	r3, r3, #4294967295
 8020894:	d17d      	bne.n	8020992 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 8020896:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802089a:	4401      	add	r1, r0
 802089c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80208a0:	4480      	add	r8, r0
 80208a2:	e7e9      	b.n	8020878 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80208a4:	461f      	mov	r7, r3
 80208a6:	e042      	b.n	802092e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 80208a8:	2000      	movs	r0, #0
 80208aa:	e002      	b.n	80208b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80208ac:	2900      	cmp	r1, #0
 80208ae:	d16d      	bne.n	802098c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80208b0:	2001      	movs	r0, #1
 80208b2:	b00b      	add	sp, #44	; 0x2c
 80208b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208b8:	b379      	cbz	r1, 802091a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 80208ba:	2f00      	cmp	r7, #0
 80208bc:	db29      	blt.n	8020912 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80208be:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80208c2:	42bb      	cmp	r3, r7
 80208c4:	dd25      	ble.n	8020912 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80208c6:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80208ca:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80208ce:	f7ff ff77 	bl	80207c0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80208d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208d4:	fb10 f003 	smulbb	r0, r0, r3
 80208d8:	b280      	uxth	r0, r0
 80208da:	1c41      	adds	r1, r0, #1
 80208dc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80208e0:	1209      	asrs	r1, r1, #8
 80208e2:	f011 0fff 	tst.w	r1, #255	; 0xff
 80208e6:	d014      	beq.n	8020912 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80208e8:	b2c9      	uxtb	r1, r1
 80208ea:	9808      	ldr	r0, [sp, #32]
 80208ec:	b2ba      	uxth	r2, r7
 80208ee:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80208f0:	9102      	str	r1, [sp, #8]
 80208f2:	2101      	movs	r1, #1
 80208f4:	4413      	add	r3, r2
 80208f6:	4402      	add	r2, r0
 80208f8:	9101      	str	r1, [sp, #4]
 80208fa:	fa0f f18b 	sxth.w	r1, fp
 80208fe:	f8da 0000 	ldr.w	r0, [sl]
 8020902:	b21b      	sxth	r3, r3
 8020904:	9100      	str	r1, [sp, #0]
 8020906:	b212      	sxth	r2, r2
 8020908:	6941      	ldr	r1, [r0, #20]
 802090a:	4650      	mov	r0, sl
 802090c:	460d      	mov	r5, r1
 802090e:	9905      	ldr	r1, [sp, #20]
 8020910:	47a8      	blx	r5
 8020912:	9b04      	ldr	r3, [sp, #16]
 8020914:	1c7a      	adds	r2, r7, #1
 8020916:	3301      	adds	r3, #1
 8020918:	d0ca      	beq.n	80208b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802091a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802091e:	1abb      	subs	r3, r7, r2
 8020920:	2b00      	cmp	r3, #0
 8020922:	dd31      	ble.n	8020988 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020924:	2a00      	cmp	r2, #0
 8020926:	dabd      	bge.n	80208a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8020928:	2f00      	cmp	r7, #0
 802092a:	dd2d      	ble.n	8020988 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 802092c:	2200      	movs	r2, #0
 802092e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8020932:	19d1      	adds	r1, r2, r7
 8020934:	4299      	cmp	r1, r3
 8020936:	db02      	blt.n	802093e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 8020938:	1a9f      	subs	r7, r3, r2
 802093a:	2f00      	cmp	r7, #0
 802093c:	dd24      	ble.n	8020988 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 802093e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8020942:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020946:	f7ff ff3b 	bl	80207c0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802094a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802094c:	fb10 f003 	smulbb	r0, r0, r3
 8020950:	b280      	uxth	r0, r0
 8020952:	1c41      	adds	r1, r0, #1
 8020954:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020958:	1209      	asrs	r1, r1, #8
 802095a:	f011 0fff 	tst.w	r1, #255	; 0xff
 802095e:	d013      	beq.n	8020988 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020960:	b292      	uxth	r2, r2
 8020962:	9808      	ldr	r0, [sp, #32]
 8020964:	b2c9      	uxtb	r1, r1
 8020966:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020968:	b23f      	sxth	r7, r7
 802096a:	4413      	add	r3, r2
 802096c:	9102      	str	r1, [sp, #8]
 802096e:	4402      	add	r2, r0
 8020970:	fa0f f18b 	sxth.w	r1, fp
 8020974:	f8da 0000 	ldr.w	r0, [sl]
 8020978:	b21b      	sxth	r3, r3
 802097a:	9100      	str	r1, [sp, #0]
 802097c:	b212      	sxth	r2, r2
 802097e:	9701      	str	r7, [sp, #4]
 8020980:	9905      	ldr	r1, [sp, #20]
 8020982:	6947      	ldr	r7, [r0, #20]
 8020984:	4650      	mov	r0, sl
 8020986:	47b8      	blx	r7
 8020988:	464b      	mov	r3, r9
 802098a:	e75e      	b.n	802084a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802098c:	2f00      	cmp	r7, #0
 802098e:	da96      	bge.n	80208be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 8020990:	e78e      	b.n	80208b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020992:	2900      	cmp	r1, #0
 8020994:	d0f8      	beq.n	8020988 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8020996:	e790      	b.n	80208ba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

08020998 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020998:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802099c:	4b4a      	ldr	r3, [pc, #296]	; (8020ac8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 802099e:	2500      	movs	r5, #0
 80209a0:	f100 0620 	add.w	r6, r0, #32
 80209a4:	4604      	mov	r4, r0
 80209a6:	4690      	mov	r8, r2
 80209a8:	f100 0718 	add.w	r7, r0, #24
 80209ac:	e9c0 3100 	strd	r3, r1, [r0]
 80209b0:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80209b4:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80209b8:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80209bc:	4630      	mov	r0, r6
 80209be:	f7ed f97d 	bl	800dcbc <_ZN8touchgfx7OutlineC1Ev>
 80209c2:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80209c6:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80209ca:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80209ce:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80209d2:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 80209d6:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80209da:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80209de:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80209e2:	9500      	str	r5, [sp, #0]
 80209e4:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80209e8:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80209ec:	f9b8 2000 	ldrsh.w	r2, [r8]
 80209f0:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80209f4:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80209f8:	4410      	add	r0, r2
 80209fa:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80209fe:	b280      	uxth	r0, r0
 8020a00:	fa0f fa80 	sxth.w	sl, r0
 8020a04:	45aa      	cmp	sl, r5
 8020a06:	dd5c      	ble.n	8020ac2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020a08:	4591      	cmp	r9, r2
 8020a0a:	dd5a      	ble.n	8020ac2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020a0c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8020a10:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8020a14:	440b      	add	r3, r1
 8020a16:	b29b      	uxth	r3, r3
 8020a18:	b21d      	sxth	r5, r3
 8020a1a:	2d00      	cmp	r5, #0
 8020a1c:	dd51      	ble.n	8020ac2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020a1e:	458e      	cmp	lr, r1
 8020a20:	dd4f      	ble.n	8020ac2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020a22:	45d1      	cmp	r9, sl
 8020a24:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8020a28:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8020a2c:	bfb8      	it	lt
 8020a2e:	fa1f f089 	uxthlt.w	r0, r9
 8020a32:	45ae      	cmp	lr, r5
 8020a34:	f8ad 2000 	strh.w	r2, [sp]
 8020a38:	bfb8      	it	lt
 8020a3a:	fa1f f38e 	uxthlt.w	r3, lr
 8020a3e:	1a80      	subs	r0, r0, r2
 8020a40:	f8ad 1002 	strh.w	r1, [sp, #2]
 8020a44:	1a5b      	subs	r3, r3, r1
 8020a46:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020a4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020a4e:	466d      	mov	r5, sp
 8020a50:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020a54:	e887 0003 	stmia.w	r7, {r0, r1}
 8020a58:	f8dc 3000 	ldr.w	r3, [ip]
 8020a5c:	4660      	mov	r0, ip
 8020a5e:	4639      	mov	r1, r7
 8020a60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020a62:	4798      	blx	r3
 8020a64:	6861      	ldr	r1, [r4, #4]
 8020a66:	4628      	mov	r0, r5
 8020a68:	3104      	adds	r1, #4
 8020a6a:	f7ef fb1b 	bl	80100a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020a6e:	4638      	mov	r0, r7
 8020a70:	f7ef fad4 	bl	801001c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020a74:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020a78:	f8bd 2000 	ldrh.w	r2, [sp]
 8020a7c:	4630      	mov	r0, r6
 8020a7e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020a82:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8020a86:	f7ed f8fd 	bl	800dc84 <_ZN8touchgfx7Outline5resetEv>
 8020a8a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020a8e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020a92:	4620      	mov	r0, r4
 8020a94:	015b      	lsls	r3, r3, #5
 8020a96:	60a3      	str	r3, [r4, #8]
 8020a98:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020a9c:	015b      	lsls	r3, r3, #5
 8020a9e:	60e3      	str	r3, [r4, #12]
 8020aa0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020aa4:	015b      	lsls	r3, r3, #5
 8020aa6:	6123      	str	r3, [r4, #16]
 8020aa8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020aac:	015b      	lsls	r3, r3, #5
 8020aae:	6163      	str	r3, [r4, #20]
 8020ab0:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020ab4:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020ab8:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8020abc:	b002      	add	sp, #8
 8020abe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020ac2:	2300      	movs	r3, #0
 8020ac4:	9301      	str	r3, [sp, #4]
 8020ac6:	e7c2      	b.n	8020a4e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8020ac8:	08023d44 	.word	0x08023d44

08020acc <_ZN8touchgfx6Canvas5closeEv>:
 8020acc:	b538      	push	{r3, r4, r5, lr}
 8020ace:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020ad2:	4604      	mov	r4, r0
 8020ad4:	b193      	cbz	r3, 8020afc <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020ad6:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020ada:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020ade:	4213      	tst	r3, r2
 8020ae0:	d10c      	bne.n	8020afc <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020ae2:	f100 0520 	add.w	r5, r0, #32
 8020ae6:	b123      	cbz	r3, 8020af2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8020ae8:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8020aec:	4628      	mov	r0, r5
 8020aee:	f7ff fe7b 	bl	80207e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020af2:	4628      	mov	r0, r5
 8020af4:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8020af8:	f7ff fe76 	bl	80207e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020afc:	2300      	movs	r3, #0
 8020afe:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020b02:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8020b06:	4298      	cmp	r0, r3
 8020b08:	bf34      	ite	cc
 8020b0a:	2000      	movcc	r0, #0
 8020b0c:	2001      	movcs	r0, #1
 8020b0e:	bd38      	pop	{r3, r4, r5, pc}

08020b10 <_ZN8touchgfx6Canvas6renderEh>:
 8020b10:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020b14:	4604      	mov	r4, r0
 8020b16:	6840      	ldr	r0, [r0, #4]
 8020b18:	460d      	mov	r5, r1
 8020b1a:	6803      	ldr	r3, [r0, #0]
 8020b1c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020b1e:	4798      	blx	r3
 8020b20:	fb10 f105 	smulbb	r1, r0, r5
 8020b24:	b289      	uxth	r1, r1
 8020b26:	1c4d      	adds	r5, r1, #1
 8020b28:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020b2c:	122d      	asrs	r5, r5, #8
 8020b2e:	f000 809c 	beq.w	8020c6a <_ZN8touchgfx6Canvas6renderEh+0x15a>
 8020b32:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8020b36:	2b00      	cmp	r3, #0
 8020b38:	f000 8097 	beq.w	8020c6a <_ZN8touchgfx6Canvas6renderEh+0x15a>
 8020b3c:	4620      	mov	r0, r4
 8020b3e:	f7ff ffc5 	bl	8020acc <_ZN8touchgfx6Canvas5closeEv>
 8020b42:	4607      	mov	r7, r0
 8020b44:	2800      	cmp	r0, #0
 8020b46:	d048      	beq.n	8020bda <_ZN8touchgfx6Canvas6renderEh+0xca>
 8020b48:	6863      	ldr	r3, [r4, #4]
 8020b4a:	4e49      	ldr	r6, [pc, #292]	; (8020c70 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8020b4c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020b4e:	6837      	ldr	r7, [r6, #0]
 8020b50:	6803      	ldr	r3, [r0, #0]
 8020b52:	689b      	ldr	r3, [r3, #8]
 8020b54:	4798      	blx	r3
 8020b56:	4601      	mov	r1, r0
 8020b58:	4638      	mov	r0, r7
 8020b5a:	f7ea fee5 	bl	800b928 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020b5e:	4607      	mov	r7, r0
 8020b60:	f7e1 fc5e 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8020b64:	6803      	ldr	r3, [r0, #0]
 8020b66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020b68:	4798      	blx	r3
 8020b6a:	4680      	mov	r8, r0
 8020b6c:	f7e1 fc58 	bl	8002420 <_ZN8touchgfx3HAL3lcdEv>
 8020b70:	6803      	ldr	r3, [r0, #0]
 8020b72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020b74:	4798      	blx	r3
 8020b76:	280b      	cmp	r0, #11
 8020b78:	d85c      	bhi.n	8020c34 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8020b7a:	e8df f000 	tbb	[pc, r0]
 8020b7e:	5d52      	.short	0x5d52
 8020b80:	325b066d 	.word	0x325b066d
 8020b84:	66666642 	.word	0x66666642
 8020b88:	6666      	.short	0x6666
 8020b8a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020b8e:	2208      	movs	r2, #8
 8020b90:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020b94:	fb91 f2f2 	sdiv	r2, r1, r2
 8020b98:	fb08 2303 	mla	r3, r8, r3, r2
 8020b9c:	441f      	add	r7, r3
 8020b9e:	424b      	negs	r3, r1
 8020ba0:	f001 0107 	and.w	r1, r1, #7
 8020ba4:	f003 0307 	and.w	r3, r3, #7
 8020ba8:	bf58      	it	pl
 8020baa:	4259      	negpl	r1, r3
 8020bac:	b2c9      	uxtb	r1, r1
 8020bae:	6860      	ldr	r0, [r4, #4]
 8020bb0:	b2ed      	uxtb	r5, r5
 8020bb2:	463a      	mov	r2, r7
 8020bb4:	fa0f f388 	sxth.w	r3, r8
 8020bb8:	e9cd 1500 	strd	r1, r5, [sp]
 8020bbc:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020bbe:	f104 0020 	add.w	r0, r4, #32
 8020bc2:	f7ff fe1d 	bl	8020800 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8020bc6:	6863      	ldr	r3, [r4, #4]
 8020bc8:	4607      	mov	r7, r0
 8020bca:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020bcc:	6803      	ldr	r3, [r0, #0]
 8020bce:	691b      	ldr	r3, [r3, #16]
 8020bd0:	4798      	blx	r3
 8020bd2:	6830      	ldr	r0, [r6, #0]
 8020bd4:	6803      	ldr	r3, [r0, #0]
 8020bd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020bd8:	4798      	blx	r3
 8020bda:	4638      	mov	r0, r7
 8020bdc:	b002      	add	sp, #8
 8020bde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020be2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020be6:	2204      	movs	r2, #4
 8020be8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020bec:	fb91 f2f2 	sdiv	r2, r1, r2
 8020bf0:	fb08 2303 	mla	r3, r8, r3, r2
 8020bf4:	441f      	add	r7, r3
 8020bf6:	424b      	negs	r3, r1
 8020bf8:	f001 0103 	and.w	r1, r1, #3
 8020bfc:	f003 0303 	and.w	r3, r3, #3
 8020c00:	e7d2      	b.n	8020ba8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8020c02:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020c06:	2202      	movs	r2, #2
 8020c08:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020c0c:	2900      	cmp	r1, #0
 8020c0e:	fb91 f2f2 	sdiv	r2, r1, r2
 8020c12:	f001 0101 	and.w	r1, r1, #1
 8020c16:	fb08 2303 	mla	r3, r8, r3, r2
 8020c1a:	bfb8      	it	lt
 8020c1c:	4249      	neglt	r1, r1
 8020c1e:	441f      	add	r7, r3
 8020c20:	e7c4      	b.n	8020bac <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8020c22:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020c26:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020c2a:	fb08 f303 	mul.w	r3, r8, r3
 8020c2e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020c32:	441f      	add	r7, r3
 8020c34:	2100      	movs	r1, #0
 8020c36:	e7ba      	b.n	8020bae <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020c38:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020c3c:	2103      	movs	r1, #3
 8020c3e:	fb08 f203 	mul.w	r2, r8, r3
 8020c42:	8b23      	ldrh	r3, [r4, #24]
 8020c44:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020c48:	e7f3      	b.n	8020c32 <_ZN8touchgfx6Canvas6renderEh+0x122>
 8020c4a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020c4e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020c52:	fb08 2303 	mla	r3, r8, r3, r2
 8020c56:	e7ec      	b.n	8020c32 <_ZN8touchgfx6Canvas6renderEh+0x122>
 8020c58:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020c5c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020c60:	fb08 f303 	mul.w	r3, r8, r3
 8020c64:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020c68:	e7e3      	b.n	8020c32 <_ZN8touchgfx6Canvas6renderEh+0x122>
 8020c6a:	2701      	movs	r7, #1
 8020c6c:	e7b5      	b.n	8020bda <_ZN8touchgfx6Canvas6renderEh+0xca>
 8020c6e:	bf00      	nop
 8020c70:	2400e424 	.word	0x2400e424

08020c74 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8020c74:	4b07      	ldr	r3, [pc, #28]	; (8020c94 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8020c76:	b510      	push	{r4, lr}
 8020c78:	781b      	ldrb	r3, [r3, #0]
 8020c7a:	2b01      	cmp	r3, #1
 8020c7c:	d108      	bne.n	8020c90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020c7e:	6843      	ldr	r3, [r0, #4]
 8020c80:	6814      	ldr	r4, [r2, #0]
 8020c82:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8020c86:	680b      	ldr	r3, [r1, #0]
 8020c88:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020c8c:	6013      	str	r3, [r2, #0]
 8020c8e:	600c      	str	r4, [r1, #0]
 8020c90:	bd10      	pop	{r4, pc}
 8020c92:	bf00      	nop
 8020c94:	2400e41c 	.word	0x2400e41c

08020c98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020c98:	b513      	push	{r0, r1, r4, lr}
 8020c9a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020c9e:	4604      	mov	r4, r0
 8020ca0:	e9cd 2100 	strd	r2, r1, [sp]
 8020ca4:	b9a3      	cbnz	r3, 8020cd0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020ca6:	466a      	mov	r2, sp
 8020ca8:	a901      	add	r1, sp, #4
 8020caa:	4620      	mov	r0, r4
 8020cac:	f7ff ffe2 	bl	8020c74 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020cb0:	68a3      	ldr	r3, [r4, #8]
 8020cb2:	9901      	ldr	r1, [sp, #4]
 8020cb4:	9a00      	ldr	r2, [sp, #0]
 8020cb6:	1ac9      	subs	r1, r1, r3
 8020cb8:	68e3      	ldr	r3, [r4, #12]
 8020cba:	1ad2      	subs	r2, r2, r3
 8020cbc:	9101      	str	r1, [sp, #4]
 8020cbe:	2a00      	cmp	r2, #0
 8020cc0:	9200      	str	r2, [sp, #0]
 8020cc2:	da0b      	bge.n	8020cdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020cc4:	2301      	movs	r3, #1
 8020cc6:	2900      	cmp	r1, #0
 8020cc8:	da0e      	bge.n	8020ce8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020cca:	f043 0304 	orr.w	r3, r3, #4
 8020cce:	e013      	b.n	8020cf8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020cd0:	f7ff fefc 	bl	8020acc <_ZN8touchgfx6Canvas5closeEv>
 8020cd4:	2800      	cmp	r0, #0
 8020cd6:	d1e6      	bne.n	8020ca6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020cd8:	b002      	add	sp, #8
 8020cda:	bd10      	pop	{r4, pc}
 8020cdc:	6963      	ldr	r3, [r4, #20]
 8020cde:	429a      	cmp	r2, r3
 8020ce0:	bfac      	ite	ge
 8020ce2:	2302      	movge	r3, #2
 8020ce4:	2300      	movlt	r3, #0
 8020ce6:	e7ee      	b.n	8020cc6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020ce8:	6920      	ldr	r0, [r4, #16]
 8020cea:	4281      	cmp	r1, r0
 8020cec:	bfac      	ite	ge
 8020cee:	2008      	movge	r0, #8
 8020cf0:	2000      	movlt	r0, #0
 8020cf2:	4318      	orrs	r0, r3
 8020cf4:	b2c3      	uxtb	r3, r0
 8020cf6:	b158      	cbz	r0, 8020d10 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020cf8:	2200      	movs	r2, #0
 8020cfa:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8020cfe:	9901      	ldr	r1, [sp, #4]
 8020d00:	9a00      	ldr	r2, [sp, #0]
 8020d02:	66a1      	str	r1, [r4, #104]	; 0x68
 8020d04:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020d06:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8020d0a:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020d0e:	e7e3      	b.n	8020cd8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020d10:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020d14:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020d18:	4298      	cmp	r0, r3
 8020d1a:	d803      	bhi.n	8020d24 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020d1c:	f104 0020 	add.w	r0, r4, #32
 8020d20:	f7ed fca0 	bl	800e664 <_ZN8touchgfx7Outline6moveToEii>
 8020d24:	2301      	movs	r3, #1
 8020d26:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020d2a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8020d2e:	2300      	movs	r3, #0
 8020d30:	e7e5      	b.n	8020cfe <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08020d32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8020d32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020d34:	ab02      	add	r3, sp, #8
 8020d36:	4604      	mov	r4, r0
 8020d38:	9101      	str	r1, [sp, #4]
 8020d3a:	a901      	add	r1, sp, #4
 8020d3c:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020d40:	461a      	mov	r2, r3
 8020d42:	f7ff ff97 	bl	8020c74 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020d46:	68a3      	ldr	r3, [r4, #8]
 8020d48:	9901      	ldr	r1, [sp, #4]
 8020d4a:	9a00      	ldr	r2, [sp, #0]
 8020d4c:	1ac9      	subs	r1, r1, r3
 8020d4e:	68e3      	ldr	r3, [r4, #12]
 8020d50:	1ad2      	subs	r2, r2, r3
 8020d52:	9101      	str	r1, [sp, #4]
 8020d54:	2a00      	cmp	r2, #0
 8020d56:	9200      	str	r2, [sp, #0]
 8020d58:	db1c      	blt.n	8020d94 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020d5a:	6963      	ldr	r3, [r4, #20]
 8020d5c:	429a      	cmp	r2, r3
 8020d5e:	bfac      	ite	ge
 8020d60:	2002      	movge	r0, #2
 8020d62:	2000      	movlt	r0, #0
 8020d64:	2900      	cmp	r1, #0
 8020d66:	db17      	blt.n	8020d98 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020d68:	6923      	ldr	r3, [r4, #16]
 8020d6a:	4299      	cmp	r1, r3
 8020d6c:	bfac      	ite	ge
 8020d6e:	2308      	movge	r3, #8
 8020d70:	2300      	movlt	r3, #0
 8020d72:	4303      	orrs	r3, r0
 8020d74:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8020d78:	b2dd      	uxtb	r5, r3
 8020d7a:	b978      	cbnz	r0, 8020d9c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8020d7c:	f104 0020 	add.w	r0, r4, #32
 8020d80:	f7ff fd32 	bl	80207e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020d84:	9b01      	ldr	r3, [sp, #4]
 8020d86:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8020d8a:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020d8c:	9b00      	ldr	r3, [sp, #0]
 8020d8e:	6623      	str	r3, [r4, #96]	; 0x60
 8020d90:	b002      	add	sp, #8
 8020d92:	bd70      	pop	{r4, r5, r6, pc}
 8020d94:	2001      	movs	r0, #1
 8020d96:	e7e5      	b.n	8020d64 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020d98:	2304      	movs	r3, #4
 8020d9a:	e7ea      	b.n	8020d72 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8020d9c:	b113      	cbz	r3, 8020da4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8020d9e:	ea10 0305 	ands.w	r3, r0, r5
 8020da2:	d11c      	bne.n	8020dde <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8020da4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020da8:	f104 0620 	add.w	r6, r4, #32
 8020dac:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8020db0:	b98b      	cbnz	r3, 8020dd6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8020db2:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020db6:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020dba:	4298      	cmp	r0, r3
 8020dbc:	d802      	bhi.n	8020dc4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8020dbe:	4630      	mov	r0, r6
 8020dc0:	f7ed fc50 	bl	800e664 <_ZN8touchgfx7Outline6moveToEii>
 8020dc4:	2301      	movs	r3, #1
 8020dc6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020dca:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8020dce:	4630      	mov	r0, r6
 8020dd0:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020dd4:	e7d4      	b.n	8020d80 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020dd6:	4630      	mov	r0, r6
 8020dd8:	f7ff fd06 	bl	80207e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020ddc:	e7f7      	b.n	8020dce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8020dde:	461d      	mov	r5, r3
 8020de0:	e7d0      	b.n	8020d84 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08020de4 <_ZN8touchgfx6CanvasD1Ev>:
 8020de4:	4b04      	ldr	r3, [pc, #16]	; (8020df8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8020de6:	b510      	push	{r4, lr}
 8020de8:	4604      	mov	r4, r0
 8020dea:	f840 3b20 	str.w	r3, [r0], #32
 8020dee:	f7ec ff41 	bl	800dc74 <_ZN8touchgfx7OutlineD1Ev>
 8020df2:	4620      	mov	r0, r4
 8020df4:	bd10      	pop	{r4, pc}
 8020df6:	bf00      	nop
 8020df8:	08023d44 	.word	0x08023d44

08020dfc <_ZN8touchgfx6CanvasD0Ev>:
 8020dfc:	b510      	push	{r4, lr}
 8020dfe:	4604      	mov	r4, r0
 8020e00:	f7ff fff0 	bl	8020de4 <_ZN8touchgfx6CanvasD1Ev>
 8020e04:	2170      	movs	r1, #112	; 0x70
 8020e06:	4620      	mov	r0, r4
 8020e08:	f000 f807 	bl	8020e1a <_ZdlPvj>
 8020e0c:	4620      	mov	r0, r4
 8020e0e:	bd10      	pop	{r4, pc}

08020e10 <__aeabi_atexit>:
 8020e10:	460b      	mov	r3, r1
 8020e12:	4601      	mov	r1, r0
 8020e14:	4618      	mov	r0, r3
 8020e16:	f000 b90f 	b.w	8021038 <__cxa_atexit>

08020e1a <_ZdlPvj>:
 8020e1a:	f000 b812 	b.w	8020e42 <_ZdlPv>

08020e1e <__cxa_guard_acquire>:
 8020e1e:	6803      	ldr	r3, [r0, #0]
 8020e20:	07db      	lsls	r3, r3, #31
 8020e22:	d406      	bmi.n	8020e32 <__cxa_guard_acquire+0x14>
 8020e24:	7843      	ldrb	r3, [r0, #1]
 8020e26:	b103      	cbz	r3, 8020e2a <__cxa_guard_acquire+0xc>
 8020e28:	deff      	udf	#255	; 0xff
 8020e2a:	2301      	movs	r3, #1
 8020e2c:	7043      	strb	r3, [r0, #1]
 8020e2e:	4618      	mov	r0, r3
 8020e30:	4770      	bx	lr
 8020e32:	2000      	movs	r0, #0
 8020e34:	4770      	bx	lr

08020e36 <__cxa_guard_release>:
 8020e36:	2301      	movs	r3, #1
 8020e38:	6003      	str	r3, [r0, #0]
 8020e3a:	4770      	bx	lr

08020e3c <__cxa_pure_virtual>:
 8020e3c:	b508      	push	{r3, lr}
 8020e3e:	f000 f80f 	bl	8020e60 <_ZSt9terminatev>

08020e42 <_ZdlPv>:
 8020e42:	f000 b845 	b.w	8020ed0 <free>

08020e46 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020e46:	b508      	push	{r3, lr}
 8020e48:	4780      	blx	r0
 8020e4a:	f000 f80e 	bl	8020e6a <abort>
	...

08020e50 <_ZSt13get_terminatev>:
 8020e50:	4b02      	ldr	r3, [pc, #8]	; (8020e5c <_ZSt13get_terminatev+0xc>)
 8020e52:	6818      	ldr	r0, [r3, #0]
 8020e54:	f3bf 8f5b 	dmb	ish
 8020e58:	4770      	bx	lr
 8020e5a:	bf00      	nop
 8020e5c:	240000fc 	.word	0x240000fc

08020e60 <_ZSt9terminatev>:
 8020e60:	b508      	push	{r3, lr}
 8020e62:	f7ff fff5 	bl	8020e50 <_ZSt13get_terminatev>
 8020e66:	f7ff ffee 	bl	8020e46 <_ZN10__cxxabiv111__terminateEPFvvE>

08020e6a <abort>:
 8020e6a:	b508      	push	{r3, lr}
 8020e6c:	2006      	movs	r0, #6
 8020e6e:	f000 fa39 	bl	80212e4 <raise>
 8020e72:	2001      	movs	r0, #1
 8020e74:	f7e0 fffe 	bl	8001e74 <_exit>

08020e78 <__assert_func>:
 8020e78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020e7a:	4614      	mov	r4, r2
 8020e7c:	461a      	mov	r2, r3
 8020e7e:	4b09      	ldr	r3, [pc, #36]	; (8020ea4 <__assert_func+0x2c>)
 8020e80:	681b      	ldr	r3, [r3, #0]
 8020e82:	4605      	mov	r5, r0
 8020e84:	68d8      	ldr	r0, [r3, #12]
 8020e86:	b14c      	cbz	r4, 8020e9c <__assert_func+0x24>
 8020e88:	4b07      	ldr	r3, [pc, #28]	; (8020ea8 <__assert_func+0x30>)
 8020e8a:	9100      	str	r1, [sp, #0]
 8020e8c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020e90:	4906      	ldr	r1, [pc, #24]	; (8020eac <__assert_func+0x34>)
 8020e92:	462b      	mov	r3, r5
 8020e94:	f000 f982 	bl	802119c <fiprintf>
 8020e98:	f7ff ffe7 	bl	8020e6a <abort>
 8020e9c:	4b04      	ldr	r3, [pc, #16]	; (8020eb0 <__assert_func+0x38>)
 8020e9e:	461c      	mov	r4, r3
 8020ea0:	e7f3      	b.n	8020e8a <__assert_func+0x12>
 8020ea2:	bf00      	nop
 8020ea4:	24000158 	.word	0x24000158
 8020ea8:	08023d50 	.word	0x08023d50
 8020eac:	08023d5d 	.word	0x08023d5d
 8020eb0:	08023d8b 	.word	0x08023d8b

08020eb4 <atexit>:
 8020eb4:	2300      	movs	r3, #0
 8020eb6:	4601      	mov	r1, r0
 8020eb8:	461a      	mov	r2, r3
 8020eba:	4618      	mov	r0, r3
 8020ebc:	f000 bac0 	b.w	8021440 <__register_exitproc>

08020ec0 <malloc>:
 8020ec0:	4b02      	ldr	r3, [pc, #8]	; (8020ecc <malloc+0xc>)
 8020ec2:	4601      	mov	r1, r0
 8020ec4:	6818      	ldr	r0, [r3, #0]
 8020ec6:	f000 b82b 	b.w	8020f20 <_malloc_r>
 8020eca:	bf00      	nop
 8020ecc:	24000158 	.word	0x24000158

08020ed0 <free>:
 8020ed0:	4b02      	ldr	r3, [pc, #8]	; (8020edc <free+0xc>)
 8020ed2:	4601      	mov	r1, r0
 8020ed4:	6818      	ldr	r0, [r3, #0]
 8020ed6:	f000 bb11 	b.w	80214fc <_free_r>
 8020eda:	bf00      	nop
 8020edc:	24000158 	.word	0x24000158

08020ee0 <sbrk_aligned>:
 8020ee0:	b570      	push	{r4, r5, r6, lr}
 8020ee2:	4e0e      	ldr	r6, [pc, #56]	; (8020f1c <sbrk_aligned+0x3c>)
 8020ee4:	460c      	mov	r4, r1
 8020ee6:	6831      	ldr	r1, [r6, #0]
 8020ee8:	4605      	mov	r5, r0
 8020eea:	b911      	cbnz	r1, 8020ef2 <sbrk_aligned+0x12>
 8020eec:	f000 fa4a 	bl	8021384 <_sbrk_r>
 8020ef0:	6030      	str	r0, [r6, #0]
 8020ef2:	4621      	mov	r1, r4
 8020ef4:	4628      	mov	r0, r5
 8020ef6:	f000 fa45 	bl	8021384 <_sbrk_r>
 8020efa:	1c43      	adds	r3, r0, #1
 8020efc:	d00a      	beq.n	8020f14 <sbrk_aligned+0x34>
 8020efe:	1cc4      	adds	r4, r0, #3
 8020f00:	f024 0403 	bic.w	r4, r4, #3
 8020f04:	42a0      	cmp	r0, r4
 8020f06:	d007      	beq.n	8020f18 <sbrk_aligned+0x38>
 8020f08:	1a21      	subs	r1, r4, r0
 8020f0a:	4628      	mov	r0, r5
 8020f0c:	f000 fa3a 	bl	8021384 <_sbrk_r>
 8020f10:	3001      	adds	r0, #1
 8020f12:	d101      	bne.n	8020f18 <sbrk_aligned+0x38>
 8020f14:	f04f 34ff 	mov.w	r4, #4294967295
 8020f18:	4620      	mov	r0, r4
 8020f1a:	bd70      	pop	{r4, r5, r6, pc}
 8020f1c:	2400ed7c 	.word	0x2400ed7c

08020f20 <_malloc_r>:
 8020f20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020f24:	1ccd      	adds	r5, r1, #3
 8020f26:	f025 0503 	bic.w	r5, r5, #3
 8020f2a:	3508      	adds	r5, #8
 8020f2c:	2d0c      	cmp	r5, #12
 8020f2e:	bf38      	it	cc
 8020f30:	250c      	movcc	r5, #12
 8020f32:	2d00      	cmp	r5, #0
 8020f34:	4607      	mov	r7, r0
 8020f36:	db01      	blt.n	8020f3c <_malloc_r+0x1c>
 8020f38:	42a9      	cmp	r1, r5
 8020f3a:	d905      	bls.n	8020f48 <_malloc_r+0x28>
 8020f3c:	230c      	movs	r3, #12
 8020f3e:	603b      	str	r3, [r7, #0]
 8020f40:	2600      	movs	r6, #0
 8020f42:	4630      	mov	r0, r6
 8020f44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020f48:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802101c <_malloc_r+0xfc>
 8020f4c:	f000 f868 	bl	8021020 <__malloc_lock>
 8020f50:	f8d8 3000 	ldr.w	r3, [r8]
 8020f54:	461c      	mov	r4, r3
 8020f56:	bb5c      	cbnz	r4, 8020fb0 <_malloc_r+0x90>
 8020f58:	4629      	mov	r1, r5
 8020f5a:	4638      	mov	r0, r7
 8020f5c:	f7ff ffc0 	bl	8020ee0 <sbrk_aligned>
 8020f60:	1c43      	adds	r3, r0, #1
 8020f62:	4604      	mov	r4, r0
 8020f64:	d155      	bne.n	8021012 <_malloc_r+0xf2>
 8020f66:	f8d8 4000 	ldr.w	r4, [r8]
 8020f6a:	4626      	mov	r6, r4
 8020f6c:	2e00      	cmp	r6, #0
 8020f6e:	d145      	bne.n	8020ffc <_malloc_r+0xdc>
 8020f70:	2c00      	cmp	r4, #0
 8020f72:	d048      	beq.n	8021006 <_malloc_r+0xe6>
 8020f74:	6823      	ldr	r3, [r4, #0]
 8020f76:	4631      	mov	r1, r6
 8020f78:	4638      	mov	r0, r7
 8020f7a:	eb04 0903 	add.w	r9, r4, r3
 8020f7e:	f000 fa01 	bl	8021384 <_sbrk_r>
 8020f82:	4581      	cmp	r9, r0
 8020f84:	d13f      	bne.n	8021006 <_malloc_r+0xe6>
 8020f86:	6821      	ldr	r1, [r4, #0]
 8020f88:	1a6d      	subs	r5, r5, r1
 8020f8a:	4629      	mov	r1, r5
 8020f8c:	4638      	mov	r0, r7
 8020f8e:	f7ff ffa7 	bl	8020ee0 <sbrk_aligned>
 8020f92:	3001      	adds	r0, #1
 8020f94:	d037      	beq.n	8021006 <_malloc_r+0xe6>
 8020f96:	6823      	ldr	r3, [r4, #0]
 8020f98:	442b      	add	r3, r5
 8020f9a:	6023      	str	r3, [r4, #0]
 8020f9c:	f8d8 3000 	ldr.w	r3, [r8]
 8020fa0:	2b00      	cmp	r3, #0
 8020fa2:	d038      	beq.n	8021016 <_malloc_r+0xf6>
 8020fa4:	685a      	ldr	r2, [r3, #4]
 8020fa6:	42a2      	cmp	r2, r4
 8020fa8:	d12b      	bne.n	8021002 <_malloc_r+0xe2>
 8020faa:	2200      	movs	r2, #0
 8020fac:	605a      	str	r2, [r3, #4]
 8020fae:	e00f      	b.n	8020fd0 <_malloc_r+0xb0>
 8020fb0:	6822      	ldr	r2, [r4, #0]
 8020fb2:	1b52      	subs	r2, r2, r5
 8020fb4:	d41f      	bmi.n	8020ff6 <_malloc_r+0xd6>
 8020fb6:	2a0b      	cmp	r2, #11
 8020fb8:	d917      	bls.n	8020fea <_malloc_r+0xca>
 8020fba:	1961      	adds	r1, r4, r5
 8020fbc:	42a3      	cmp	r3, r4
 8020fbe:	6025      	str	r5, [r4, #0]
 8020fc0:	bf18      	it	ne
 8020fc2:	6059      	strne	r1, [r3, #4]
 8020fc4:	6863      	ldr	r3, [r4, #4]
 8020fc6:	bf08      	it	eq
 8020fc8:	f8c8 1000 	streq.w	r1, [r8]
 8020fcc:	5162      	str	r2, [r4, r5]
 8020fce:	604b      	str	r3, [r1, #4]
 8020fd0:	4638      	mov	r0, r7
 8020fd2:	f104 060b 	add.w	r6, r4, #11
 8020fd6:	f000 f829 	bl	802102c <__malloc_unlock>
 8020fda:	f026 0607 	bic.w	r6, r6, #7
 8020fde:	1d23      	adds	r3, r4, #4
 8020fe0:	1af2      	subs	r2, r6, r3
 8020fe2:	d0ae      	beq.n	8020f42 <_malloc_r+0x22>
 8020fe4:	1b9b      	subs	r3, r3, r6
 8020fe6:	50a3      	str	r3, [r4, r2]
 8020fe8:	e7ab      	b.n	8020f42 <_malloc_r+0x22>
 8020fea:	42a3      	cmp	r3, r4
 8020fec:	6862      	ldr	r2, [r4, #4]
 8020fee:	d1dd      	bne.n	8020fac <_malloc_r+0x8c>
 8020ff0:	f8c8 2000 	str.w	r2, [r8]
 8020ff4:	e7ec      	b.n	8020fd0 <_malloc_r+0xb0>
 8020ff6:	4623      	mov	r3, r4
 8020ff8:	6864      	ldr	r4, [r4, #4]
 8020ffa:	e7ac      	b.n	8020f56 <_malloc_r+0x36>
 8020ffc:	4634      	mov	r4, r6
 8020ffe:	6876      	ldr	r6, [r6, #4]
 8021000:	e7b4      	b.n	8020f6c <_malloc_r+0x4c>
 8021002:	4613      	mov	r3, r2
 8021004:	e7cc      	b.n	8020fa0 <_malloc_r+0x80>
 8021006:	230c      	movs	r3, #12
 8021008:	603b      	str	r3, [r7, #0]
 802100a:	4638      	mov	r0, r7
 802100c:	f000 f80e 	bl	802102c <__malloc_unlock>
 8021010:	e797      	b.n	8020f42 <_malloc_r+0x22>
 8021012:	6025      	str	r5, [r4, #0]
 8021014:	e7dc      	b.n	8020fd0 <_malloc_r+0xb0>
 8021016:	605b      	str	r3, [r3, #4]
 8021018:	deff      	udf	#255	; 0xff
 802101a:	bf00      	nop
 802101c:	2400ed78 	.word	0x2400ed78

08021020 <__malloc_lock>:
 8021020:	4801      	ldr	r0, [pc, #4]	; (8021028 <__malloc_lock+0x8>)
 8021022:	f000 b9fc 	b.w	802141e <__retarget_lock_acquire_recursive>
 8021026:	bf00      	nop
 8021028:	2400eec1 	.word	0x2400eec1

0802102c <__malloc_unlock>:
 802102c:	4801      	ldr	r0, [pc, #4]	; (8021034 <__malloc_unlock+0x8>)
 802102e:	f000 b9f7 	b.w	8021420 <__retarget_lock_release_recursive>
 8021032:	bf00      	nop
 8021034:	2400eec1 	.word	0x2400eec1

08021038 <__cxa_atexit>:
 8021038:	b510      	push	{r4, lr}
 802103a:	4c05      	ldr	r4, [pc, #20]	; (8021050 <__cxa_atexit+0x18>)
 802103c:	4613      	mov	r3, r2
 802103e:	b12c      	cbz	r4, 802104c <__cxa_atexit+0x14>
 8021040:	460a      	mov	r2, r1
 8021042:	4601      	mov	r1, r0
 8021044:	2002      	movs	r0, #2
 8021046:	f000 f9fb 	bl	8021440 <__register_exitproc>
 802104a:	bd10      	pop	{r4, pc}
 802104c:	4620      	mov	r0, r4
 802104e:	e7fc      	b.n	802104a <__cxa_atexit+0x12>
 8021050:	08021441 	.word	0x08021441

08021054 <std>:
 8021054:	2300      	movs	r3, #0
 8021056:	b510      	push	{r4, lr}
 8021058:	4604      	mov	r4, r0
 802105a:	e9c0 3300 	strd	r3, r3, [r0]
 802105e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021062:	6083      	str	r3, [r0, #8]
 8021064:	8181      	strh	r1, [r0, #12]
 8021066:	6643      	str	r3, [r0, #100]	; 0x64
 8021068:	81c2      	strh	r2, [r0, #14]
 802106a:	6183      	str	r3, [r0, #24]
 802106c:	4619      	mov	r1, r3
 802106e:	2208      	movs	r2, #8
 8021070:	305c      	adds	r0, #92	; 0x5c
 8021072:	f000 f906 	bl	8021282 <memset>
 8021076:	4b0d      	ldr	r3, [pc, #52]	; (80210ac <std+0x58>)
 8021078:	6263      	str	r3, [r4, #36]	; 0x24
 802107a:	4b0d      	ldr	r3, [pc, #52]	; (80210b0 <std+0x5c>)
 802107c:	62a3      	str	r3, [r4, #40]	; 0x28
 802107e:	4b0d      	ldr	r3, [pc, #52]	; (80210b4 <std+0x60>)
 8021080:	62e3      	str	r3, [r4, #44]	; 0x2c
 8021082:	4b0d      	ldr	r3, [pc, #52]	; (80210b8 <std+0x64>)
 8021084:	6323      	str	r3, [r4, #48]	; 0x30
 8021086:	4b0d      	ldr	r3, [pc, #52]	; (80210bc <std+0x68>)
 8021088:	6224      	str	r4, [r4, #32]
 802108a:	429c      	cmp	r4, r3
 802108c:	d006      	beq.n	802109c <std+0x48>
 802108e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8021092:	4294      	cmp	r4, r2
 8021094:	d002      	beq.n	802109c <std+0x48>
 8021096:	33d0      	adds	r3, #208	; 0xd0
 8021098:	429c      	cmp	r4, r3
 802109a:	d105      	bne.n	80210a8 <std+0x54>
 802109c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80210a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80210a4:	f000 b9ba 	b.w	802141c <__retarget_lock_init_recursive>
 80210a8:	bd10      	pop	{r4, pc}
 80210aa:	bf00      	nop
 80210ac:	080211fd 	.word	0x080211fd
 80210b0:	0802121f 	.word	0x0802121f
 80210b4:	08021257 	.word	0x08021257
 80210b8:	0802127b 	.word	0x0802127b
 80210bc:	2400ed80 	.word	0x2400ed80

080210c0 <stdio_exit_handler>:
 80210c0:	4a02      	ldr	r2, [pc, #8]	; (80210cc <stdio_exit_handler+0xc>)
 80210c2:	4903      	ldr	r1, [pc, #12]	; (80210d0 <stdio_exit_handler+0x10>)
 80210c4:	4803      	ldr	r0, [pc, #12]	; (80210d4 <stdio_exit_handler+0x14>)
 80210c6:	f000 b87b 	b.w	80211c0 <_fwalk_sglue>
 80210ca:	bf00      	nop
 80210cc:	24000100 	.word	0x24000100
 80210d0:	08021c49 	.word	0x08021c49
 80210d4:	2400010c 	.word	0x2400010c

080210d8 <cleanup_stdio>:
 80210d8:	6841      	ldr	r1, [r0, #4]
 80210da:	4b0c      	ldr	r3, [pc, #48]	; (802110c <cleanup_stdio+0x34>)
 80210dc:	4299      	cmp	r1, r3
 80210de:	b510      	push	{r4, lr}
 80210e0:	4604      	mov	r4, r0
 80210e2:	d001      	beq.n	80210e8 <cleanup_stdio+0x10>
 80210e4:	f000 fdb0 	bl	8021c48 <_fflush_r>
 80210e8:	68a1      	ldr	r1, [r4, #8]
 80210ea:	4b09      	ldr	r3, [pc, #36]	; (8021110 <cleanup_stdio+0x38>)
 80210ec:	4299      	cmp	r1, r3
 80210ee:	d002      	beq.n	80210f6 <cleanup_stdio+0x1e>
 80210f0:	4620      	mov	r0, r4
 80210f2:	f000 fda9 	bl	8021c48 <_fflush_r>
 80210f6:	68e1      	ldr	r1, [r4, #12]
 80210f8:	4b06      	ldr	r3, [pc, #24]	; (8021114 <cleanup_stdio+0x3c>)
 80210fa:	4299      	cmp	r1, r3
 80210fc:	d004      	beq.n	8021108 <cleanup_stdio+0x30>
 80210fe:	4620      	mov	r0, r4
 8021100:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021104:	f000 bda0 	b.w	8021c48 <_fflush_r>
 8021108:	bd10      	pop	{r4, pc}
 802110a:	bf00      	nop
 802110c:	2400ed80 	.word	0x2400ed80
 8021110:	2400ede8 	.word	0x2400ede8
 8021114:	2400ee50 	.word	0x2400ee50

08021118 <global_stdio_init.part.0>:
 8021118:	b510      	push	{r4, lr}
 802111a:	4b0b      	ldr	r3, [pc, #44]	; (8021148 <global_stdio_init.part.0+0x30>)
 802111c:	4c0b      	ldr	r4, [pc, #44]	; (802114c <global_stdio_init.part.0+0x34>)
 802111e:	4a0c      	ldr	r2, [pc, #48]	; (8021150 <global_stdio_init.part.0+0x38>)
 8021120:	601a      	str	r2, [r3, #0]
 8021122:	4620      	mov	r0, r4
 8021124:	2200      	movs	r2, #0
 8021126:	2104      	movs	r1, #4
 8021128:	f7ff ff94 	bl	8021054 <std>
 802112c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8021130:	2201      	movs	r2, #1
 8021132:	2109      	movs	r1, #9
 8021134:	f7ff ff8e 	bl	8021054 <std>
 8021138:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802113c:	2202      	movs	r2, #2
 802113e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021142:	2112      	movs	r1, #18
 8021144:	f7ff bf86 	b.w	8021054 <std>
 8021148:	2400eeb8 	.word	0x2400eeb8
 802114c:	2400ed80 	.word	0x2400ed80
 8021150:	080210c1 	.word	0x080210c1

08021154 <__sfp_lock_acquire>:
 8021154:	4801      	ldr	r0, [pc, #4]	; (802115c <__sfp_lock_acquire+0x8>)
 8021156:	f000 b962 	b.w	802141e <__retarget_lock_acquire_recursive>
 802115a:	bf00      	nop
 802115c:	2400eec2 	.word	0x2400eec2

08021160 <__sfp_lock_release>:
 8021160:	4801      	ldr	r0, [pc, #4]	; (8021168 <__sfp_lock_release+0x8>)
 8021162:	f000 b95d 	b.w	8021420 <__retarget_lock_release_recursive>
 8021166:	bf00      	nop
 8021168:	2400eec2 	.word	0x2400eec2

0802116c <__sinit>:
 802116c:	b510      	push	{r4, lr}
 802116e:	4604      	mov	r4, r0
 8021170:	f7ff fff0 	bl	8021154 <__sfp_lock_acquire>
 8021174:	6a23      	ldr	r3, [r4, #32]
 8021176:	b11b      	cbz	r3, 8021180 <__sinit+0x14>
 8021178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802117c:	f7ff bff0 	b.w	8021160 <__sfp_lock_release>
 8021180:	4b04      	ldr	r3, [pc, #16]	; (8021194 <__sinit+0x28>)
 8021182:	6223      	str	r3, [r4, #32]
 8021184:	4b04      	ldr	r3, [pc, #16]	; (8021198 <__sinit+0x2c>)
 8021186:	681b      	ldr	r3, [r3, #0]
 8021188:	2b00      	cmp	r3, #0
 802118a:	d1f5      	bne.n	8021178 <__sinit+0xc>
 802118c:	f7ff ffc4 	bl	8021118 <global_stdio_init.part.0>
 8021190:	e7f2      	b.n	8021178 <__sinit+0xc>
 8021192:	bf00      	nop
 8021194:	080210d9 	.word	0x080210d9
 8021198:	2400eeb8 	.word	0x2400eeb8

0802119c <fiprintf>:
 802119c:	b40e      	push	{r1, r2, r3}
 802119e:	b503      	push	{r0, r1, lr}
 80211a0:	4601      	mov	r1, r0
 80211a2:	ab03      	add	r3, sp, #12
 80211a4:	4805      	ldr	r0, [pc, #20]	; (80211bc <fiprintf+0x20>)
 80211a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80211aa:	6800      	ldr	r0, [r0, #0]
 80211ac:	9301      	str	r3, [sp, #4]
 80211ae:	f000 fa1b 	bl	80215e8 <_vfiprintf_r>
 80211b2:	b002      	add	sp, #8
 80211b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80211b8:	b003      	add	sp, #12
 80211ba:	4770      	bx	lr
 80211bc:	24000158 	.word	0x24000158

080211c0 <_fwalk_sglue>:
 80211c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80211c4:	4607      	mov	r7, r0
 80211c6:	4688      	mov	r8, r1
 80211c8:	4614      	mov	r4, r2
 80211ca:	2600      	movs	r6, #0
 80211cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80211d0:	f1b9 0901 	subs.w	r9, r9, #1
 80211d4:	d505      	bpl.n	80211e2 <_fwalk_sglue+0x22>
 80211d6:	6824      	ldr	r4, [r4, #0]
 80211d8:	2c00      	cmp	r4, #0
 80211da:	d1f7      	bne.n	80211cc <_fwalk_sglue+0xc>
 80211dc:	4630      	mov	r0, r6
 80211de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80211e2:	89ab      	ldrh	r3, [r5, #12]
 80211e4:	2b01      	cmp	r3, #1
 80211e6:	d907      	bls.n	80211f8 <_fwalk_sglue+0x38>
 80211e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80211ec:	3301      	adds	r3, #1
 80211ee:	d003      	beq.n	80211f8 <_fwalk_sglue+0x38>
 80211f0:	4629      	mov	r1, r5
 80211f2:	4638      	mov	r0, r7
 80211f4:	47c0      	blx	r8
 80211f6:	4306      	orrs	r6, r0
 80211f8:	3568      	adds	r5, #104	; 0x68
 80211fa:	e7e9      	b.n	80211d0 <_fwalk_sglue+0x10>

080211fc <__sread>:
 80211fc:	b510      	push	{r4, lr}
 80211fe:	460c      	mov	r4, r1
 8021200:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021204:	f000 f898 	bl	8021338 <_read_r>
 8021208:	2800      	cmp	r0, #0
 802120a:	bfab      	itete	ge
 802120c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802120e:	89a3      	ldrhlt	r3, [r4, #12]
 8021210:	181b      	addge	r3, r3, r0
 8021212:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8021216:	bfac      	ite	ge
 8021218:	6563      	strge	r3, [r4, #84]	; 0x54
 802121a:	81a3      	strhlt	r3, [r4, #12]
 802121c:	bd10      	pop	{r4, pc}

0802121e <__swrite>:
 802121e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021222:	461f      	mov	r7, r3
 8021224:	898b      	ldrh	r3, [r1, #12]
 8021226:	05db      	lsls	r3, r3, #23
 8021228:	4605      	mov	r5, r0
 802122a:	460c      	mov	r4, r1
 802122c:	4616      	mov	r6, r2
 802122e:	d505      	bpl.n	802123c <__swrite+0x1e>
 8021230:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021234:	2302      	movs	r3, #2
 8021236:	2200      	movs	r2, #0
 8021238:	f000 f86c 	bl	8021314 <_lseek_r>
 802123c:	89a3      	ldrh	r3, [r4, #12]
 802123e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021242:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8021246:	81a3      	strh	r3, [r4, #12]
 8021248:	4632      	mov	r2, r6
 802124a:	463b      	mov	r3, r7
 802124c:	4628      	mov	r0, r5
 802124e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021252:	f000 b8a7 	b.w	80213a4 <_write_r>

08021256 <__sseek>:
 8021256:	b510      	push	{r4, lr}
 8021258:	460c      	mov	r4, r1
 802125a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802125e:	f000 f859 	bl	8021314 <_lseek_r>
 8021262:	1c43      	adds	r3, r0, #1
 8021264:	89a3      	ldrh	r3, [r4, #12]
 8021266:	bf15      	itete	ne
 8021268:	6560      	strne	r0, [r4, #84]	; 0x54
 802126a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802126e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021272:	81a3      	strheq	r3, [r4, #12]
 8021274:	bf18      	it	ne
 8021276:	81a3      	strhne	r3, [r4, #12]
 8021278:	bd10      	pop	{r4, pc}

0802127a <__sclose>:
 802127a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802127e:	f000 b839 	b.w	80212f4 <_close_r>

08021282 <memset>:
 8021282:	4402      	add	r2, r0
 8021284:	4603      	mov	r3, r0
 8021286:	4293      	cmp	r3, r2
 8021288:	d100      	bne.n	802128c <memset+0xa>
 802128a:	4770      	bx	lr
 802128c:	f803 1b01 	strb.w	r1, [r3], #1
 8021290:	e7f9      	b.n	8021286 <memset+0x4>

08021292 <_raise_r>:
 8021292:	291f      	cmp	r1, #31
 8021294:	b538      	push	{r3, r4, r5, lr}
 8021296:	4604      	mov	r4, r0
 8021298:	460d      	mov	r5, r1
 802129a:	d904      	bls.n	80212a6 <_raise_r+0x14>
 802129c:	2316      	movs	r3, #22
 802129e:	6003      	str	r3, [r0, #0]
 80212a0:	f04f 30ff 	mov.w	r0, #4294967295
 80212a4:	bd38      	pop	{r3, r4, r5, pc}
 80212a6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80212a8:	b112      	cbz	r2, 80212b0 <_raise_r+0x1e>
 80212aa:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80212ae:	b94b      	cbnz	r3, 80212c4 <_raise_r+0x32>
 80212b0:	4620      	mov	r0, r4
 80212b2:	f000 f865 	bl	8021380 <_getpid_r>
 80212b6:	462a      	mov	r2, r5
 80212b8:	4601      	mov	r1, r0
 80212ba:	4620      	mov	r0, r4
 80212bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80212c0:	f000 b84c 	b.w	802135c <_kill_r>
 80212c4:	2b01      	cmp	r3, #1
 80212c6:	d00a      	beq.n	80212de <_raise_r+0x4c>
 80212c8:	1c59      	adds	r1, r3, #1
 80212ca:	d103      	bne.n	80212d4 <_raise_r+0x42>
 80212cc:	2316      	movs	r3, #22
 80212ce:	6003      	str	r3, [r0, #0]
 80212d0:	2001      	movs	r0, #1
 80212d2:	e7e7      	b.n	80212a4 <_raise_r+0x12>
 80212d4:	2400      	movs	r4, #0
 80212d6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80212da:	4628      	mov	r0, r5
 80212dc:	4798      	blx	r3
 80212de:	2000      	movs	r0, #0
 80212e0:	e7e0      	b.n	80212a4 <_raise_r+0x12>
	...

080212e4 <raise>:
 80212e4:	4b02      	ldr	r3, [pc, #8]	; (80212f0 <raise+0xc>)
 80212e6:	4601      	mov	r1, r0
 80212e8:	6818      	ldr	r0, [r3, #0]
 80212ea:	f7ff bfd2 	b.w	8021292 <_raise_r>
 80212ee:	bf00      	nop
 80212f0:	24000158 	.word	0x24000158

080212f4 <_close_r>:
 80212f4:	b538      	push	{r3, r4, r5, lr}
 80212f6:	4d06      	ldr	r5, [pc, #24]	; (8021310 <_close_r+0x1c>)
 80212f8:	2300      	movs	r3, #0
 80212fa:	4604      	mov	r4, r0
 80212fc:	4608      	mov	r0, r1
 80212fe:	602b      	str	r3, [r5, #0]
 8021300:	f7e0 fdda 	bl	8001eb8 <_close>
 8021304:	1c43      	adds	r3, r0, #1
 8021306:	d102      	bne.n	802130e <_close_r+0x1a>
 8021308:	682b      	ldr	r3, [r5, #0]
 802130a:	b103      	cbz	r3, 802130e <_close_r+0x1a>
 802130c:	6023      	str	r3, [r4, #0]
 802130e:	bd38      	pop	{r3, r4, r5, pc}
 8021310:	2400eebc 	.word	0x2400eebc

08021314 <_lseek_r>:
 8021314:	b538      	push	{r3, r4, r5, lr}
 8021316:	4d07      	ldr	r5, [pc, #28]	; (8021334 <_lseek_r+0x20>)
 8021318:	4604      	mov	r4, r0
 802131a:	4608      	mov	r0, r1
 802131c:	4611      	mov	r1, r2
 802131e:	2200      	movs	r2, #0
 8021320:	602a      	str	r2, [r5, #0]
 8021322:	461a      	mov	r2, r3
 8021324:	f7e0 fdd2 	bl	8001ecc <_lseek>
 8021328:	1c43      	adds	r3, r0, #1
 802132a:	d102      	bne.n	8021332 <_lseek_r+0x1e>
 802132c:	682b      	ldr	r3, [r5, #0]
 802132e:	b103      	cbz	r3, 8021332 <_lseek_r+0x1e>
 8021330:	6023      	str	r3, [r4, #0]
 8021332:	bd38      	pop	{r3, r4, r5, pc}
 8021334:	2400eebc 	.word	0x2400eebc

08021338 <_read_r>:
 8021338:	b538      	push	{r3, r4, r5, lr}
 802133a:	4d07      	ldr	r5, [pc, #28]	; (8021358 <_read_r+0x20>)
 802133c:	4604      	mov	r4, r0
 802133e:	4608      	mov	r0, r1
 8021340:	4611      	mov	r1, r2
 8021342:	2200      	movs	r2, #0
 8021344:	602a      	str	r2, [r5, #0]
 8021346:	461a      	mov	r2, r3
 8021348:	f7e0 fd9a 	bl	8001e80 <_read>
 802134c:	1c43      	adds	r3, r0, #1
 802134e:	d102      	bne.n	8021356 <_read_r+0x1e>
 8021350:	682b      	ldr	r3, [r5, #0]
 8021352:	b103      	cbz	r3, 8021356 <_read_r+0x1e>
 8021354:	6023      	str	r3, [r4, #0]
 8021356:	bd38      	pop	{r3, r4, r5, pc}
 8021358:	2400eebc 	.word	0x2400eebc

0802135c <_kill_r>:
 802135c:	b538      	push	{r3, r4, r5, lr}
 802135e:	4d07      	ldr	r5, [pc, #28]	; (802137c <_kill_r+0x20>)
 8021360:	2300      	movs	r3, #0
 8021362:	4604      	mov	r4, r0
 8021364:	4608      	mov	r0, r1
 8021366:	4611      	mov	r1, r2
 8021368:	602b      	str	r3, [r5, #0]
 802136a:	f7e0 fd7b 	bl	8001e64 <_kill>
 802136e:	1c43      	adds	r3, r0, #1
 8021370:	d102      	bne.n	8021378 <_kill_r+0x1c>
 8021372:	682b      	ldr	r3, [r5, #0]
 8021374:	b103      	cbz	r3, 8021378 <_kill_r+0x1c>
 8021376:	6023      	str	r3, [r4, #0]
 8021378:	bd38      	pop	{r3, r4, r5, pc}
 802137a:	bf00      	nop
 802137c:	2400eebc 	.word	0x2400eebc

08021380 <_getpid_r>:
 8021380:	f7e0 bd6e 	b.w	8001e60 <_getpid>

08021384 <_sbrk_r>:
 8021384:	b538      	push	{r3, r4, r5, lr}
 8021386:	4d06      	ldr	r5, [pc, #24]	; (80213a0 <_sbrk_r+0x1c>)
 8021388:	2300      	movs	r3, #0
 802138a:	4604      	mov	r4, r0
 802138c:	4608      	mov	r0, r1
 802138e:	602b      	str	r3, [r5, #0]
 8021390:	f7e0 fd9e 	bl	8001ed0 <_sbrk>
 8021394:	1c43      	adds	r3, r0, #1
 8021396:	d102      	bne.n	802139e <_sbrk_r+0x1a>
 8021398:	682b      	ldr	r3, [r5, #0]
 802139a:	b103      	cbz	r3, 802139e <_sbrk_r+0x1a>
 802139c:	6023      	str	r3, [r4, #0]
 802139e:	bd38      	pop	{r3, r4, r5, pc}
 80213a0:	2400eebc 	.word	0x2400eebc

080213a4 <_write_r>:
 80213a4:	b538      	push	{r3, r4, r5, lr}
 80213a6:	4d07      	ldr	r5, [pc, #28]	; (80213c4 <_write_r+0x20>)
 80213a8:	4604      	mov	r4, r0
 80213aa:	4608      	mov	r0, r1
 80213ac:	4611      	mov	r1, r2
 80213ae:	2200      	movs	r2, #0
 80213b0:	602a      	str	r2, [r5, #0]
 80213b2:	461a      	mov	r2, r3
 80213b4:	f7e0 fd72 	bl	8001e9c <_write>
 80213b8:	1c43      	adds	r3, r0, #1
 80213ba:	d102      	bne.n	80213c2 <_write_r+0x1e>
 80213bc:	682b      	ldr	r3, [r5, #0]
 80213be:	b103      	cbz	r3, 80213c2 <_write_r+0x1e>
 80213c0:	6023      	str	r3, [r4, #0]
 80213c2:	bd38      	pop	{r3, r4, r5, pc}
 80213c4:	2400eebc 	.word	0x2400eebc

080213c8 <__errno>:
 80213c8:	4b01      	ldr	r3, [pc, #4]	; (80213d0 <__errno+0x8>)
 80213ca:	6818      	ldr	r0, [r3, #0]
 80213cc:	4770      	bx	lr
 80213ce:	bf00      	nop
 80213d0:	24000158 	.word	0x24000158

080213d4 <__libc_init_array>:
 80213d4:	b570      	push	{r4, r5, r6, lr}
 80213d6:	4d0d      	ldr	r5, [pc, #52]	; (802140c <__libc_init_array+0x38>)
 80213d8:	4c0d      	ldr	r4, [pc, #52]	; (8021410 <__libc_init_array+0x3c>)
 80213da:	1b64      	subs	r4, r4, r5
 80213dc:	10a4      	asrs	r4, r4, #2
 80213de:	2600      	movs	r6, #0
 80213e0:	42a6      	cmp	r6, r4
 80213e2:	d109      	bne.n	80213f8 <__libc_init_array+0x24>
 80213e4:	4d0b      	ldr	r5, [pc, #44]	; (8021414 <__libc_init_array+0x40>)
 80213e6:	4c0c      	ldr	r4, [pc, #48]	; (8021418 <__libc_init_array+0x44>)
 80213e8:	f000 fd70 	bl	8021ecc <_init>
 80213ec:	1b64      	subs	r4, r4, r5
 80213ee:	10a4      	asrs	r4, r4, #2
 80213f0:	2600      	movs	r6, #0
 80213f2:	42a6      	cmp	r6, r4
 80213f4:	d105      	bne.n	8021402 <__libc_init_array+0x2e>
 80213f6:	bd70      	pop	{r4, r5, r6, pc}
 80213f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80213fc:	4798      	blx	r3
 80213fe:	3601      	adds	r6, #1
 8021400:	e7ee      	b.n	80213e0 <__libc_init_array+0xc>
 8021402:	f855 3b04 	ldr.w	r3, [r5], #4
 8021406:	4798      	blx	r3
 8021408:	3601      	adds	r6, #1
 802140a:	e7f2      	b.n	80213f2 <__libc_init_array+0x1e>
 802140c:	08023ddc 	.word	0x08023ddc
 8021410:	08023ddc 	.word	0x08023ddc
 8021414:	08023ddc 	.word	0x08023ddc
 8021418:	08023df0 	.word	0x08023df0

0802141c <__retarget_lock_init_recursive>:
 802141c:	4770      	bx	lr

0802141e <__retarget_lock_acquire_recursive>:
 802141e:	4770      	bx	lr

08021420 <__retarget_lock_release_recursive>:
 8021420:	4770      	bx	lr

08021422 <memcpy>:
 8021422:	440a      	add	r2, r1
 8021424:	4291      	cmp	r1, r2
 8021426:	f100 33ff 	add.w	r3, r0, #4294967295
 802142a:	d100      	bne.n	802142e <memcpy+0xc>
 802142c:	4770      	bx	lr
 802142e:	b510      	push	{r4, lr}
 8021430:	f811 4b01 	ldrb.w	r4, [r1], #1
 8021434:	f803 4f01 	strb.w	r4, [r3, #1]!
 8021438:	4291      	cmp	r1, r2
 802143a:	d1f9      	bne.n	8021430 <memcpy+0xe>
 802143c:	bd10      	pop	{r4, pc}
	...

08021440 <__register_exitproc>:
 8021440:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021444:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80214f8 <__register_exitproc+0xb8>
 8021448:	4606      	mov	r6, r0
 802144a:	f8d8 0000 	ldr.w	r0, [r8]
 802144e:	461f      	mov	r7, r3
 8021450:	460d      	mov	r5, r1
 8021452:	4691      	mov	r9, r2
 8021454:	f7ff ffe3 	bl	802141e <__retarget_lock_acquire_recursive>
 8021458:	4b23      	ldr	r3, [pc, #140]	; (80214e8 <__register_exitproc+0xa8>)
 802145a:	681c      	ldr	r4, [r3, #0]
 802145c:	b934      	cbnz	r4, 802146c <__register_exitproc+0x2c>
 802145e:	4c23      	ldr	r4, [pc, #140]	; (80214ec <__register_exitproc+0xac>)
 8021460:	601c      	str	r4, [r3, #0]
 8021462:	4b23      	ldr	r3, [pc, #140]	; (80214f0 <__register_exitproc+0xb0>)
 8021464:	b113      	cbz	r3, 802146c <__register_exitproc+0x2c>
 8021466:	681b      	ldr	r3, [r3, #0]
 8021468:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802146c:	6863      	ldr	r3, [r4, #4]
 802146e:	2b1f      	cmp	r3, #31
 8021470:	dd07      	ble.n	8021482 <__register_exitproc+0x42>
 8021472:	f8d8 0000 	ldr.w	r0, [r8]
 8021476:	f7ff ffd3 	bl	8021420 <__retarget_lock_release_recursive>
 802147a:	f04f 30ff 	mov.w	r0, #4294967295
 802147e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021482:	b32e      	cbz	r6, 80214d0 <__register_exitproc+0x90>
 8021484:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021488:	b968      	cbnz	r0, 80214a6 <__register_exitproc+0x66>
 802148a:	4b1a      	ldr	r3, [pc, #104]	; (80214f4 <__register_exitproc+0xb4>)
 802148c:	2b00      	cmp	r3, #0
 802148e:	d0f0      	beq.n	8021472 <__register_exitproc+0x32>
 8021490:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021494:	f7ff fd14 	bl	8020ec0 <malloc>
 8021498:	2800      	cmp	r0, #0
 802149a:	d0ea      	beq.n	8021472 <__register_exitproc+0x32>
 802149c:	2300      	movs	r3, #0
 802149e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80214a2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80214a6:	6863      	ldr	r3, [r4, #4]
 80214a8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80214ac:	2201      	movs	r2, #1
 80214ae:	409a      	lsls	r2, r3
 80214b0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80214b4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80214b8:	4313      	orrs	r3, r2
 80214ba:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80214be:	2e02      	cmp	r6, #2
 80214c0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80214c4:	bf02      	ittt	eq
 80214c6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80214ca:	4313      	orreq	r3, r2
 80214cc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80214d0:	6863      	ldr	r3, [r4, #4]
 80214d2:	f8d8 0000 	ldr.w	r0, [r8]
 80214d6:	1c5a      	adds	r2, r3, #1
 80214d8:	3302      	adds	r3, #2
 80214da:	6062      	str	r2, [r4, #4]
 80214dc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80214e0:	f7ff ff9e 	bl	8021420 <__retarget_lock_release_recursive>
 80214e4:	2000      	movs	r0, #0
 80214e6:	e7ca      	b.n	802147e <__register_exitproc+0x3e>
 80214e8:	2400ef50 	.word	0x2400ef50
 80214ec:	2400eec4 	.word	0x2400eec4
 80214f0:	08023d8c 	.word	0x08023d8c
 80214f4:	08020ec1 	.word	0x08020ec1
 80214f8:	2400015c 	.word	0x2400015c

080214fc <_free_r>:
 80214fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80214fe:	2900      	cmp	r1, #0
 8021500:	d044      	beq.n	802158c <_free_r+0x90>
 8021502:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021506:	9001      	str	r0, [sp, #4]
 8021508:	2b00      	cmp	r3, #0
 802150a:	f1a1 0404 	sub.w	r4, r1, #4
 802150e:	bfb8      	it	lt
 8021510:	18e4      	addlt	r4, r4, r3
 8021512:	f7ff fd85 	bl	8021020 <__malloc_lock>
 8021516:	4a1e      	ldr	r2, [pc, #120]	; (8021590 <_free_r+0x94>)
 8021518:	9801      	ldr	r0, [sp, #4]
 802151a:	6813      	ldr	r3, [r2, #0]
 802151c:	b933      	cbnz	r3, 802152c <_free_r+0x30>
 802151e:	6063      	str	r3, [r4, #4]
 8021520:	6014      	str	r4, [r2, #0]
 8021522:	b003      	add	sp, #12
 8021524:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8021528:	f7ff bd80 	b.w	802102c <__malloc_unlock>
 802152c:	42a3      	cmp	r3, r4
 802152e:	d908      	bls.n	8021542 <_free_r+0x46>
 8021530:	6825      	ldr	r5, [r4, #0]
 8021532:	1961      	adds	r1, r4, r5
 8021534:	428b      	cmp	r3, r1
 8021536:	bf01      	itttt	eq
 8021538:	6819      	ldreq	r1, [r3, #0]
 802153a:	685b      	ldreq	r3, [r3, #4]
 802153c:	1949      	addeq	r1, r1, r5
 802153e:	6021      	streq	r1, [r4, #0]
 8021540:	e7ed      	b.n	802151e <_free_r+0x22>
 8021542:	461a      	mov	r2, r3
 8021544:	685b      	ldr	r3, [r3, #4]
 8021546:	b10b      	cbz	r3, 802154c <_free_r+0x50>
 8021548:	42a3      	cmp	r3, r4
 802154a:	d9fa      	bls.n	8021542 <_free_r+0x46>
 802154c:	6811      	ldr	r1, [r2, #0]
 802154e:	1855      	adds	r5, r2, r1
 8021550:	42a5      	cmp	r5, r4
 8021552:	d10b      	bne.n	802156c <_free_r+0x70>
 8021554:	6824      	ldr	r4, [r4, #0]
 8021556:	4421      	add	r1, r4
 8021558:	1854      	adds	r4, r2, r1
 802155a:	42a3      	cmp	r3, r4
 802155c:	6011      	str	r1, [r2, #0]
 802155e:	d1e0      	bne.n	8021522 <_free_r+0x26>
 8021560:	681c      	ldr	r4, [r3, #0]
 8021562:	685b      	ldr	r3, [r3, #4]
 8021564:	6053      	str	r3, [r2, #4]
 8021566:	440c      	add	r4, r1
 8021568:	6014      	str	r4, [r2, #0]
 802156a:	e7da      	b.n	8021522 <_free_r+0x26>
 802156c:	d902      	bls.n	8021574 <_free_r+0x78>
 802156e:	230c      	movs	r3, #12
 8021570:	6003      	str	r3, [r0, #0]
 8021572:	e7d6      	b.n	8021522 <_free_r+0x26>
 8021574:	6825      	ldr	r5, [r4, #0]
 8021576:	1961      	adds	r1, r4, r5
 8021578:	428b      	cmp	r3, r1
 802157a:	bf04      	itt	eq
 802157c:	6819      	ldreq	r1, [r3, #0]
 802157e:	685b      	ldreq	r3, [r3, #4]
 8021580:	6063      	str	r3, [r4, #4]
 8021582:	bf04      	itt	eq
 8021584:	1949      	addeq	r1, r1, r5
 8021586:	6021      	streq	r1, [r4, #0]
 8021588:	6054      	str	r4, [r2, #4]
 802158a:	e7ca      	b.n	8021522 <_free_r+0x26>
 802158c:	b003      	add	sp, #12
 802158e:	bd30      	pop	{r4, r5, pc}
 8021590:	2400ed78 	.word	0x2400ed78

08021594 <__sfputc_r>:
 8021594:	6893      	ldr	r3, [r2, #8]
 8021596:	3b01      	subs	r3, #1
 8021598:	2b00      	cmp	r3, #0
 802159a:	b410      	push	{r4}
 802159c:	6093      	str	r3, [r2, #8]
 802159e:	da08      	bge.n	80215b2 <__sfputc_r+0x1e>
 80215a0:	6994      	ldr	r4, [r2, #24]
 80215a2:	42a3      	cmp	r3, r4
 80215a4:	db01      	blt.n	80215aa <__sfputc_r+0x16>
 80215a6:	290a      	cmp	r1, #10
 80215a8:	d103      	bne.n	80215b2 <__sfputc_r+0x1e>
 80215aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80215ae:	f000 bb73 	b.w	8021c98 <__swbuf_r>
 80215b2:	6813      	ldr	r3, [r2, #0]
 80215b4:	1c58      	adds	r0, r3, #1
 80215b6:	6010      	str	r0, [r2, #0]
 80215b8:	7019      	strb	r1, [r3, #0]
 80215ba:	4608      	mov	r0, r1
 80215bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80215c0:	4770      	bx	lr

080215c2 <__sfputs_r>:
 80215c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80215c4:	4606      	mov	r6, r0
 80215c6:	460f      	mov	r7, r1
 80215c8:	4614      	mov	r4, r2
 80215ca:	18d5      	adds	r5, r2, r3
 80215cc:	42ac      	cmp	r4, r5
 80215ce:	d101      	bne.n	80215d4 <__sfputs_r+0x12>
 80215d0:	2000      	movs	r0, #0
 80215d2:	e007      	b.n	80215e4 <__sfputs_r+0x22>
 80215d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80215d8:	463a      	mov	r2, r7
 80215da:	4630      	mov	r0, r6
 80215dc:	f7ff ffda 	bl	8021594 <__sfputc_r>
 80215e0:	1c43      	adds	r3, r0, #1
 80215e2:	d1f3      	bne.n	80215cc <__sfputs_r+0xa>
 80215e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080215e8 <_vfiprintf_r>:
 80215e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215ec:	460d      	mov	r5, r1
 80215ee:	b09d      	sub	sp, #116	; 0x74
 80215f0:	4614      	mov	r4, r2
 80215f2:	4698      	mov	r8, r3
 80215f4:	4606      	mov	r6, r0
 80215f6:	b118      	cbz	r0, 8021600 <_vfiprintf_r+0x18>
 80215f8:	6a03      	ldr	r3, [r0, #32]
 80215fa:	b90b      	cbnz	r3, 8021600 <_vfiprintf_r+0x18>
 80215fc:	f7ff fdb6 	bl	802116c <__sinit>
 8021600:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021602:	07d9      	lsls	r1, r3, #31
 8021604:	d405      	bmi.n	8021612 <_vfiprintf_r+0x2a>
 8021606:	89ab      	ldrh	r3, [r5, #12]
 8021608:	059a      	lsls	r2, r3, #22
 802160a:	d402      	bmi.n	8021612 <_vfiprintf_r+0x2a>
 802160c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802160e:	f7ff ff06 	bl	802141e <__retarget_lock_acquire_recursive>
 8021612:	89ab      	ldrh	r3, [r5, #12]
 8021614:	071b      	lsls	r3, r3, #28
 8021616:	d501      	bpl.n	802161c <_vfiprintf_r+0x34>
 8021618:	692b      	ldr	r3, [r5, #16]
 802161a:	b99b      	cbnz	r3, 8021644 <_vfiprintf_r+0x5c>
 802161c:	4629      	mov	r1, r5
 802161e:	4630      	mov	r0, r6
 8021620:	f000 fb78 	bl	8021d14 <__swsetup_r>
 8021624:	b170      	cbz	r0, 8021644 <_vfiprintf_r+0x5c>
 8021626:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021628:	07dc      	lsls	r4, r3, #31
 802162a:	d504      	bpl.n	8021636 <_vfiprintf_r+0x4e>
 802162c:	f04f 30ff 	mov.w	r0, #4294967295
 8021630:	b01d      	add	sp, #116	; 0x74
 8021632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021636:	89ab      	ldrh	r3, [r5, #12]
 8021638:	0598      	lsls	r0, r3, #22
 802163a:	d4f7      	bmi.n	802162c <_vfiprintf_r+0x44>
 802163c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802163e:	f7ff feef 	bl	8021420 <__retarget_lock_release_recursive>
 8021642:	e7f3      	b.n	802162c <_vfiprintf_r+0x44>
 8021644:	2300      	movs	r3, #0
 8021646:	9309      	str	r3, [sp, #36]	; 0x24
 8021648:	2320      	movs	r3, #32
 802164a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802164e:	f8cd 800c 	str.w	r8, [sp, #12]
 8021652:	2330      	movs	r3, #48	; 0x30
 8021654:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8021808 <_vfiprintf_r+0x220>
 8021658:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802165c:	f04f 0901 	mov.w	r9, #1
 8021660:	4623      	mov	r3, r4
 8021662:	469a      	mov	sl, r3
 8021664:	f813 2b01 	ldrb.w	r2, [r3], #1
 8021668:	b10a      	cbz	r2, 802166e <_vfiprintf_r+0x86>
 802166a:	2a25      	cmp	r2, #37	; 0x25
 802166c:	d1f9      	bne.n	8021662 <_vfiprintf_r+0x7a>
 802166e:	ebba 0b04 	subs.w	fp, sl, r4
 8021672:	d00b      	beq.n	802168c <_vfiprintf_r+0xa4>
 8021674:	465b      	mov	r3, fp
 8021676:	4622      	mov	r2, r4
 8021678:	4629      	mov	r1, r5
 802167a:	4630      	mov	r0, r6
 802167c:	f7ff ffa1 	bl	80215c2 <__sfputs_r>
 8021680:	3001      	adds	r0, #1
 8021682:	f000 80a9 	beq.w	80217d8 <_vfiprintf_r+0x1f0>
 8021686:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021688:	445a      	add	r2, fp
 802168a:	9209      	str	r2, [sp, #36]	; 0x24
 802168c:	f89a 3000 	ldrb.w	r3, [sl]
 8021690:	2b00      	cmp	r3, #0
 8021692:	f000 80a1 	beq.w	80217d8 <_vfiprintf_r+0x1f0>
 8021696:	2300      	movs	r3, #0
 8021698:	f04f 32ff 	mov.w	r2, #4294967295
 802169c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80216a0:	f10a 0a01 	add.w	sl, sl, #1
 80216a4:	9304      	str	r3, [sp, #16]
 80216a6:	9307      	str	r3, [sp, #28]
 80216a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80216ac:	931a      	str	r3, [sp, #104]	; 0x68
 80216ae:	4654      	mov	r4, sl
 80216b0:	2205      	movs	r2, #5
 80216b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80216b6:	4854      	ldr	r0, [pc, #336]	; (8021808 <_vfiprintf_r+0x220>)
 80216b8:	f7de fe12 	bl	80002e0 <memchr>
 80216bc:	9a04      	ldr	r2, [sp, #16]
 80216be:	b9d8      	cbnz	r0, 80216f8 <_vfiprintf_r+0x110>
 80216c0:	06d1      	lsls	r1, r2, #27
 80216c2:	bf44      	itt	mi
 80216c4:	2320      	movmi	r3, #32
 80216c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80216ca:	0713      	lsls	r3, r2, #28
 80216cc:	bf44      	itt	mi
 80216ce:	232b      	movmi	r3, #43	; 0x2b
 80216d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80216d4:	f89a 3000 	ldrb.w	r3, [sl]
 80216d8:	2b2a      	cmp	r3, #42	; 0x2a
 80216da:	d015      	beq.n	8021708 <_vfiprintf_r+0x120>
 80216dc:	9a07      	ldr	r2, [sp, #28]
 80216de:	4654      	mov	r4, sl
 80216e0:	2000      	movs	r0, #0
 80216e2:	f04f 0c0a 	mov.w	ip, #10
 80216e6:	4621      	mov	r1, r4
 80216e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80216ec:	3b30      	subs	r3, #48	; 0x30
 80216ee:	2b09      	cmp	r3, #9
 80216f0:	d94d      	bls.n	802178e <_vfiprintf_r+0x1a6>
 80216f2:	b1b0      	cbz	r0, 8021722 <_vfiprintf_r+0x13a>
 80216f4:	9207      	str	r2, [sp, #28]
 80216f6:	e014      	b.n	8021722 <_vfiprintf_r+0x13a>
 80216f8:	eba0 0308 	sub.w	r3, r0, r8
 80216fc:	fa09 f303 	lsl.w	r3, r9, r3
 8021700:	4313      	orrs	r3, r2
 8021702:	9304      	str	r3, [sp, #16]
 8021704:	46a2      	mov	sl, r4
 8021706:	e7d2      	b.n	80216ae <_vfiprintf_r+0xc6>
 8021708:	9b03      	ldr	r3, [sp, #12]
 802170a:	1d19      	adds	r1, r3, #4
 802170c:	681b      	ldr	r3, [r3, #0]
 802170e:	9103      	str	r1, [sp, #12]
 8021710:	2b00      	cmp	r3, #0
 8021712:	bfbb      	ittet	lt
 8021714:	425b      	neglt	r3, r3
 8021716:	f042 0202 	orrlt.w	r2, r2, #2
 802171a:	9307      	strge	r3, [sp, #28]
 802171c:	9307      	strlt	r3, [sp, #28]
 802171e:	bfb8      	it	lt
 8021720:	9204      	strlt	r2, [sp, #16]
 8021722:	7823      	ldrb	r3, [r4, #0]
 8021724:	2b2e      	cmp	r3, #46	; 0x2e
 8021726:	d10c      	bne.n	8021742 <_vfiprintf_r+0x15a>
 8021728:	7863      	ldrb	r3, [r4, #1]
 802172a:	2b2a      	cmp	r3, #42	; 0x2a
 802172c:	d134      	bne.n	8021798 <_vfiprintf_r+0x1b0>
 802172e:	9b03      	ldr	r3, [sp, #12]
 8021730:	1d1a      	adds	r2, r3, #4
 8021732:	681b      	ldr	r3, [r3, #0]
 8021734:	9203      	str	r2, [sp, #12]
 8021736:	2b00      	cmp	r3, #0
 8021738:	bfb8      	it	lt
 802173a:	f04f 33ff 	movlt.w	r3, #4294967295
 802173e:	3402      	adds	r4, #2
 8021740:	9305      	str	r3, [sp, #20]
 8021742:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8021818 <_vfiprintf_r+0x230>
 8021746:	7821      	ldrb	r1, [r4, #0]
 8021748:	2203      	movs	r2, #3
 802174a:	4650      	mov	r0, sl
 802174c:	f7de fdc8 	bl	80002e0 <memchr>
 8021750:	b138      	cbz	r0, 8021762 <_vfiprintf_r+0x17a>
 8021752:	9b04      	ldr	r3, [sp, #16]
 8021754:	eba0 000a 	sub.w	r0, r0, sl
 8021758:	2240      	movs	r2, #64	; 0x40
 802175a:	4082      	lsls	r2, r0
 802175c:	4313      	orrs	r3, r2
 802175e:	3401      	adds	r4, #1
 8021760:	9304      	str	r3, [sp, #16]
 8021762:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021766:	4829      	ldr	r0, [pc, #164]	; (802180c <_vfiprintf_r+0x224>)
 8021768:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802176c:	2206      	movs	r2, #6
 802176e:	f7de fdb7 	bl	80002e0 <memchr>
 8021772:	2800      	cmp	r0, #0
 8021774:	d03f      	beq.n	80217f6 <_vfiprintf_r+0x20e>
 8021776:	4b26      	ldr	r3, [pc, #152]	; (8021810 <_vfiprintf_r+0x228>)
 8021778:	bb1b      	cbnz	r3, 80217c2 <_vfiprintf_r+0x1da>
 802177a:	9b03      	ldr	r3, [sp, #12]
 802177c:	3307      	adds	r3, #7
 802177e:	f023 0307 	bic.w	r3, r3, #7
 8021782:	3308      	adds	r3, #8
 8021784:	9303      	str	r3, [sp, #12]
 8021786:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021788:	443b      	add	r3, r7
 802178a:	9309      	str	r3, [sp, #36]	; 0x24
 802178c:	e768      	b.n	8021660 <_vfiprintf_r+0x78>
 802178e:	fb0c 3202 	mla	r2, ip, r2, r3
 8021792:	460c      	mov	r4, r1
 8021794:	2001      	movs	r0, #1
 8021796:	e7a6      	b.n	80216e6 <_vfiprintf_r+0xfe>
 8021798:	2300      	movs	r3, #0
 802179a:	3401      	adds	r4, #1
 802179c:	9305      	str	r3, [sp, #20]
 802179e:	4619      	mov	r1, r3
 80217a0:	f04f 0c0a 	mov.w	ip, #10
 80217a4:	4620      	mov	r0, r4
 80217a6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80217aa:	3a30      	subs	r2, #48	; 0x30
 80217ac:	2a09      	cmp	r2, #9
 80217ae:	d903      	bls.n	80217b8 <_vfiprintf_r+0x1d0>
 80217b0:	2b00      	cmp	r3, #0
 80217b2:	d0c6      	beq.n	8021742 <_vfiprintf_r+0x15a>
 80217b4:	9105      	str	r1, [sp, #20]
 80217b6:	e7c4      	b.n	8021742 <_vfiprintf_r+0x15a>
 80217b8:	fb0c 2101 	mla	r1, ip, r1, r2
 80217bc:	4604      	mov	r4, r0
 80217be:	2301      	movs	r3, #1
 80217c0:	e7f0      	b.n	80217a4 <_vfiprintf_r+0x1bc>
 80217c2:	ab03      	add	r3, sp, #12
 80217c4:	9300      	str	r3, [sp, #0]
 80217c6:	462a      	mov	r2, r5
 80217c8:	4b12      	ldr	r3, [pc, #72]	; (8021814 <_vfiprintf_r+0x22c>)
 80217ca:	a904      	add	r1, sp, #16
 80217cc:	4630      	mov	r0, r6
 80217ce:	f3af 8000 	nop.w
 80217d2:	4607      	mov	r7, r0
 80217d4:	1c78      	adds	r0, r7, #1
 80217d6:	d1d6      	bne.n	8021786 <_vfiprintf_r+0x19e>
 80217d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80217da:	07d9      	lsls	r1, r3, #31
 80217dc:	d405      	bmi.n	80217ea <_vfiprintf_r+0x202>
 80217de:	89ab      	ldrh	r3, [r5, #12]
 80217e0:	059a      	lsls	r2, r3, #22
 80217e2:	d402      	bmi.n	80217ea <_vfiprintf_r+0x202>
 80217e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80217e6:	f7ff fe1b 	bl	8021420 <__retarget_lock_release_recursive>
 80217ea:	89ab      	ldrh	r3, [r5, #12]
 80217ec:	065b      	lsls	r3, r3, #25
 80217ee:	f53f af1d 	bmi.w	802162c <_vfiprintf_r+0x44>
 80217f2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80217f4:	e71c      	b.n	8021630 <_vfiprintf_r+0x48>
 80217f6:	ab03      	add	r3, sp, #12
 80217f8:	9300      	str	r3, [sp, #0]
 80217fa:	462a      	mov	r2, r5
 80217fc:	4b05      	ldr	r3, [pc, #20]	; (8021814 <_vfiprintf_r+0x22c>)
 80217fe:	a904      	add	r1, sp, #16
 8021800:	4630      	mov	r0, r6
 8021802:	f000 f879 	bl	80218f8 <_printf_i>
 8021806:	e7e4      	b.n	80217d2 <_vfiprintf_r+0x1ea>
 8021808:	08023d90 	.word	0x08023d90
 802180c:	08023d9a 	.word	0x08023d9a
 8021810:	00000000 	.word	0x00000000
 8021814:	080215c3 	.word	0x080215c3
 8021818:	08023d96 	.word	0x08023d96

0802181c <_printf_common>:
 802181c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021820:	4616      	mov	r6, r2
 8021822:	4699      	mov	r9, r3
 8021824:	688a      	ldr	r2, [r1, #8]
 8021826:	690b      	ldr	r3, [r1, #16]
 8021828:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802182c:	4293      	cmp	r3, r2
 802182e:	bfb8      	it	lt
 8021830:	4613      	movlt	r3, r2
 8021832:	6033      	str	r3, [r6, #0]
 8021834:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8021838:	4607      	mov	r7, r0
 802183a:	460c      	mov	r4, r1
 802183c:	b10a      	cbz	r2, 8021842 <_printf_common+0x26>
 802183e:	3301      	adds	r3, #1
 8021840:	6033      	str	r3, [r6, #0]
 8021842:	6823      	ldr	r3, [r4, #0]
 8021844:	0699      	lsls	r1, r3, #26
 8021846:	bf42      	ittt	mi
 8021848:	6833      	ldrmi	r3, [r6, #0]
 802184a:	3302      	addmi	r3, #2
 802184c:	6033      	strmi	r3, [r6, #0]
 802184e:	6825      	ldr	r5, [r4, #0]
 8021850:	f015 0506 	ands.w	r5, r5, #6
 8021854:	d106      	bne.n	8021864 <_printf_common+0x48>
 8021856:	f104 0a19 	add.w	sl, r4, #25
 802185a:	68e3      	ldr	r3, [r4, #12]
 802185c:	6832      	ldr	r2, [r6, #0]
 802185e:	1a9b      	subs	r3, r3, r2
 8021860:	42ab      	cmp	r3, r5
 8021862:	dc26      	bgt.n	80218b2 <_printf_common+0x96>
 8021864:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8021868:	1e13      	subs	r3, r2, #0
 802186a:	6822      	ldr	r2, [r4, #0]
 802186c:	bf18      	it	ne
 802186e:	2301      	movne	r3, #1
 8021870:	0692      	lsls	r2, r2, #26
 8021872:	d42b      	bmi.n	80218cc <_printf_common+0xb0>
 8021874:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8021878:	4649      	mov	r1, r9
 802187a:	4638      	mov	r0, r7
 802187c:	47c0      	blx	r8
 802187e:	3001      	adds	r0, #1
 8021880:	d01e      	beq.n	80218c0 <_printf_common+0xa4>
 8021882:	6823      	ldr	r3, [r4, #0]
 8021884:	6922      	ldr	r2, [r4, #16]
 8021886:	f003 0306 	and.w	r3, r3, #6
 802188a:	2b04      	cmp	r3, #4
 802188c:	bf02      	ittt	eq
 802188e:	68e5      	ldreq	r5, [r4, #12]
 8021890:	6833      	ldreq	r3, [r6, #0]
 8021892:	1aed      	subeq	r5, r5, r3
 8021894:	68a3      	ldr	r3, [r4, #8]
 8021896:	bf0c      	ite	eq
 8021898:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802189c:	2500      	movne	r5, #0
 802189e:	4293      	cmp	r3, r2
 80218a0:	bfc4      	itt	gt
 80218a2:	1a9b      	subgt	r3, r3, r2
 80218a4:	18ed      	addgt	r5, r5, r3
 80218a6:	2600      	movs	r6, #0
 80218a8:	341a      	adds	r4, #26
 80218aa:	42b5      	cmp	r5, r6
 80218ac:	d11a      	bne.n	80218e4 <_printf_common+0xc8>
 80218ae:	2000      	movs	r0, #0
 80218b0:	e008      	b.n	80218c4 <_printf_common+0xa8>
 80218b2:	2301      	movs	r3, #1
 80218b4:	4652      	mov	r2, sl
 80218b6:	4649      	mov	r1, r9
 80218b8:	4638      	mov	r0, r7
 80218ba:	47c0      	blx	r8
 80218bc:	3001      	adds	r0, #1
 80218be:	d103      	bne.n	80218c8 <_printf_common+0xac>
 80218c0:	f04f 30ff 	mov.w	r0, #4294967295
 80218c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80218c8:	3501      	adds	r5, #1
 80218ca:	e7c6      	b.n	802185a <_printf_common+0x3e>
 80218cc:	18e1      	adds	r1, r4, r3
 80218ce:	1c5a      	adds	r2, r3, #1
 80218d0:	2030      	movs	r0, #48	; 0x30
 80218d2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80218d6:	4422      	add	r2, r4
 80218d8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80218dc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80218e0:	3302      	adds	r3, #2
 80218e2:	e7c7      	b.n	8021874 <_printf_common+0x58>
 80218e4:	2301      	movs	r3, #1
 80218e6:	4622      	mov	r2, r4
 80218e8:	4649      	mov	r1, r9
 80218ea:	4638      	mov	r0, r7
 80218ec:	47c0      	blx	r8
 80218ee:	3001      	adds	r0, #1
 80218f0:	d0e6      	beq.n	80218c0 <_printf_common+0xa4>
 80218f2:	3601      	adds	r6, #1
 80218f4:	e7d9      	b.n	80218aa <_printf_common+0x8e>
	...

080218f8 <_printf_i>:
 80218f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80218fc:	7e0f      	ldrb	r7, [r1, #24]
 80218fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021900:	2f78      	cmp	r7, #120	; 0x78
 8021902:	4691      	mov	r9, r2
 8021904:	4680      	mov	r8, r0
 8021906:	460c      	mov	r4, r1
 8021908:	469a      	mov	sl, r3
 802190a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802190e:	d807      	bhi.n	8021920 <_printf_i+0x28>
 8021910:	2f62      	cmp	r7, #98	; 0x62
 8021912:	d80a      	bhi.n	802192a <_printf_i+0x32>
 8021914:	2f00      	cmp	r7, #0
 8021916:	f000 80d4 	beq.w	8021ac2 <_printf_i+0x1ca>
 802191a:	2f58      	cmp	r7, #88	; 0x58
 802191c:	f000 80c0 	beq.w	8021aa0 <_printf_i+0x1a8>
 8021920:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021924:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8021928:	e03a      	b.n	80219a0 <_printf_i+0xa8>
 802192a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802192e:	2b15      	cmp	r3, #21
 8021930:	d8f6      	bhi.n	8021920 <_printf_i+0x28>
 8021932:	a101      	add	r1, pc, #4	; (adr r1, 8021938 <_printf_i+0x40>)
 8021934:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8021938:	08021991 	.word	0x08021991
 802193c:	080219a5 	.word	0x080219a5
 8021940:	08021921 	.word	0x08021921
 8021944:	08021921 	.word	0x08021921
 8021948:	08021921 	.word	0x08021921
 802194c:	08021921 	.word	0x08021921
 8021950:	080219a5 	.word	0x080219a5
 8021954:	08021921 	.word	0x08021921
 8021958:	08021921 	.word	0x08021921
 802195c:	08021921 	.word	0x08021921
 8021960:	08021921 	.word	0x08021921
 8021964:	08021aa9 	.word	0x08021aa9
 8021968:	080219d1 	.word	0x080219d1
 802196c:	08021a63 	.word	0x08021a63
 8021970:	08021921 	.word	0x08021921
 8021974:	08021921 	.word	0x08021921
 8021978:	08021acb 	.word	0x08021acb
 802197c:	08021921 	.word	0x08021921
 8021980:	080219d1 	.word	0x080219d1
 8021984:	08021921 	.word	0x08021921
 8021988:	08021921 	.word	0x08021921
 802198c:	08021a6b 	.word	0x08021a6b
 8021990:	682b      	ldr	r3, [r5, #0]
 8021992:	1d1a      	adds	r2, r3, #4
 8021994:	681b      	ldr	r3, [r3, #0]
 8021996:	602a      	str	r2, [r5, #0]
 8021998:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802199c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80219a0:	2301      	movs	r3, #1
 80219a2:	e09f      	b.n	8021ae4 <_printf_i+0x1ec>
 80219a4:	6820      	ldr	r0, [r4, #0]
 80219a6:	682b      	ldr	r3, [r5, #0]
 80219a8:	0607      	lsls	r7, r0, #24
 80219aa:	f103 0104 	add.w	r1, r3, #4
 80219ae:	6029      	str	r1, [r5, #0]
 80219b0:	d501      	bpl.n	80219b6 <_printf_i+0xbe>
 80219b2:	681e      	ldr	r6, [r3, #0]
 80219b4:	e003      	b.n	80219be <_printf_i+0xc6>
 80219b6:	0646      	lsls	r6, r0, #25
 80219b8:	d5fb      	bpl.n	80219b2 <_printf_i+0xba>
 80219ba:	f9b3 6000 	ldrsh.w	r6, [r3]
 80219be:	2e00      	cmp	r6, #0
 80219c0:	da03      	bge.n	80219ca <_printf_i+0xd2>
 80219c2:	232d      	movs	r3, #45	; 0x2d
 80219c4:	4276      	negs	r6, r6
 80219c6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80219ca:	485a      	ldr	r0, [pc, #360]	; (8021b34 <_printf_i+0x23c>)
 80219cc:	230a      	movs	r3, #10
 80219ce:	e012      	b.n	80219f6 <_printf_i+0xfe>
 80219d0:	682b      	ldr	r3, [r5, #0]
 80219d2:	6820      	ldr	r0, [r4, #0]
 80219d4:	1d19      	adds	r1, r3, #4
 80219d6:	6029      	str	r1, [r5, #0]
 80219d8:	0605      	lsls	r5, r0, #24
 80219da:	d501      	bpl.n	80219e0 <_printf_i+0xe8>
 80219dc:	681e      	ldr	r6, [r3, #0]
 80219de:	e002      	b.n	80219e6 <_printf_i+0xee>
 80219e0:	0641      	lsls	r1, r0, #25
 80219e2:	d5fb      	bpl.n	80219dc <_printf_i+0xe4>
 80219e4:	881e      	ldrh	r6, [r3, #0]
 80219e6:	4853      	ldr	r0, [pc, #332]	; (8021b34 <_printf_i+0x23c>)
 80219e8:	2f6f      	cmp	r7, #111	; 0x6f
 80219ea:	bf0c      	ite	eq
 80219ec:	2308      	moveq	r3, #8
 80219ee:	230a      	movne	r3, #10
 80219f0:	2100      	movs	r1, #0
 80219f2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80219f6:	6865      	ldr	r5, [r4, #4]
 80219f8:	60a5      	str	r5, [r4, #8]
 80219fa:	2d00      	cmp	r5, #0
 80219fc:	bfa2      	ittt	ge
 80219fe:	6821      	ldrge	r1, [r4, #0]
 8021a00:	f021 0104 	bicge.w	r1, r1, #4
 8021a04:	6021      	strge	r1, [r4, #0]
 8021a06:	b90e      	cbnz	r6, 8021a0c <_printf_i+0x114>
 8021a08:	2d00      	cmp	r5, #0
 8021a0a:	d04b      	beq.n	8021aa4 <_printf_i+0x1ac>
 8021a0c:	4615      	mov	r5, r2
 8021a0e:	fbb6 f1f3 	udiv	r1, r6, r3
 8021a12:	fb03 6711 	mls	r7, r3, r1, r6
 8021a16:	5dc7      	ldrb	r7, [r0, r7]
 8021a18:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8021a1c:	4637      	mov	r7, r6
 8021a1e:	42bb      	cmp	r3, r7
 8021a20:	460e      	mov	r6, r1
 8021a22:	d9f4      	bls.n	8021a0e <_printf_i+0x116>
 8021a24:	2b08      	cmp	r3, #8
 8021a26:	d10b      	bne.n	8021a40 <_printf_i+0x148>
 8021a28:	6823      	ldr	r3, [r4, #0]
 8021a2a:	07de      	lsls	r6, r3, #31
 8021a2c:	d508      	bpl.n	8021a40 <_printf_i+0x148>
 8021a2e:	6923      	ldr	r3, [r4, #16]
 8021a30:	6861      	ldr	r1, [r4, #4]
 8021a32:	4299      	cmp	r1, r3
 8021a34:	bfde      	ittt	le
 8021a36:	2330      	movle	r3, #48	; 0x30
 8021a38:	f805 3c01 	strble.w	r3, [r5, #-1]
 8021a3c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8021a40:	1b52      	subs	r2, r2, r5
 8021a42:	6122      	str	r2, [r4, #16]
 8021a44:	f8cd a000 	str.w	sl, [sp]
 8021a48:	464b      	mov	r3, r9
 8021a4a:	aa03      	add	r2, sp, #12
 8021a4c:	4621      	mov	r1, r4
 8021a4e:	4640      	mov	r0, r8
 8021a50:	f7ff fee4 	bl	802181c <_printf_common>
 8021a54:	3001      	adds	r0, #1
 8021a56:	d14a      	bne.n	8021aee <_printf_i+0x1f6>
 8021a58:	f04f 30ff 	mov.w	r0, #4294967295
 8021a5c:	b004      	add	sp, #16
 8021a5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021a62:	6823      	ldr	r3, [r4, #0]
 8021a64:	f043 0320 	orr.w	r3, r3, #32
 8021a68:	6023      	str	r3, [r4, #0]
 8021a6a:	4833      	ldr	r0, [pc, #204]	; (8021b38 <_printf_i+0x240>)
 8021a6c:	2778      	movs	r7, #120	; 0x78
 8021a6e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8021a72:	6823      	ldr	r3, [r4, #0]
 8021a74:	6829      	ldr	r1, [r5, #0]
 8021a76:	061f      	lsls	r7, r3, #24
 8021a78:	f851 6b04 	ldr.w	r6, [r1], #4
 8021a7c:	d402      	bmi.n	8021a84 <_printf_i+0x18c>
 8021a7e:	065f      	lsls	r7, r3, #25
 8021a80:	bf48      	it	mi
 8021a82:	b2b6      	uxthmi	r6, r6
 8021a84:	07df      	lsls	r7, r3, #31
 8021a86:	bf48      	it	mi
 8021a88:	f043 0320 	orrmi.w	r3, r3, #32
 8021a8c:	6029      	str	r1, [r5, #0]
 8021a8e:	bf48      	it	mi
 8021a90:	6023      	strmi	r3, [r4, #0]
 8021a92:	b91e      	cbnz	r6, 8021a9c <_printf_i+0x1a4>
 8021a94:	6823      	ldr	r3, [r4, #0]
 8021a96:	f023 0320 	bic.w	r3, r3, #32
 8021a9a:	6023      	str	r3, [r4, #0]
 8021a9c:	2310      	movs	r3, #16
 8021a9e:	e7a7      	b.n	80219f0 <_printf_i+0xf8>
 8021aa0:	4824      	ldr	r0, [pc, #144]	; (8021b34 <_printf_i+0x23c>)
 8021aa2:	e7e4      	b.n	8021a6e <_printf_i+0x176>
 8021aa4:	4615      	mov	r5, r2
 8021aa6:	e7bd      	b.n	8021a24 <_printf_i+0x12c>
 8021aa8:	682b      	ldr	r3, [r5, #0]
 8021aaa:	6826      	ldr	r6, [r4, #0]
 8021aac:	6961      	ldr	r1, [r4, #20]
 8021aae:	1d18      	adds	r0, r3, #4
 8021ab0:	6028      	str	r0, [r5, #0]
 8021ab2:	0635      	lsls	r5, r6, #24
 8021ab4:	681b      	ldr	r3, [r3, #0]
 8021ab6:	d501      	bpl.n	8021abc <_printf_i+0x1c4>
 8021ab8:	6019      	str	r1, [r3, #0]
 8021aba:	e002      	b.n	8021ac2 <_printf_i+0x1ca>
 8021abc:	0670      	lsls	r0, r6, #25
 8021abe:	d5fb      	bpl.n	8021ab8 <_printf_i+0x1c0>
 8021ac0:	8019      	strh	r1, [r3, #0]
 8021ac2:	2300      	movs	r3, #0
 8021ac4:	6123      	str	r3, [r4, #16]
 8021ac6:	4615      	mov	r5, r2
 8021ac8:	e7bc      	b.n	8021a44 <_printf_i+0x14c>
 8021aca:	682b      	ldr	r3, [r5, #0]
 8021acc:	1d1a      	adds	r2, r3, #4
 8021ace:	602a      	str	r2, [r5, #0]
 8021ad0:	681d      	ldr	r5, [r3, #0]
 8021ad2:	6862      	ldr	r2, [r4, #4]
 8021ad4:	2100      	movs	r1, #0
 8021ad6:	4628      	mov	r0, r5
 8021ad8:	f7de fc02 	bl	80002e0 <memchr>
 8021adc:	b108      	cbz	r0, 8021ae2 <_printf_i+0x1ea>
 8021ade:	1b40      	subs	r0, r0, r5
 8021ae0:	6060      	str	r0, [r4, #4]
 8021ae2:	6863      	ldr	r3, [r4, #4]
 8021ae4:	6123      	str	r3, [r4, #16]
 8021ae6:	2300      	movs	r3, #0
 8021ae8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021aec:	e7aa      	b.n	8021a44 <_printf_i+0x14c>
 8021aee:	6923      	ldr	r3, [r4, #16]
 8021af0:	462a      	mov	r2, r5
 8021af2:	4649      	mov	r1, r9
 8021af4:	4640      	mov	r0, r8
 8021af6:	47d0      	blx	sl
 8021af8:	3001      	adds	r0, #1
 8021afa:	d0ad      	beq.n	8021a58 <_printf_i+0x160>
 8021afc:	6823      	ldr	r3, [r4, #0]
 8021afe:	079b      	lsls	r3, r3, #30
 8021b00:	d413      	bmi.n	8021b2a <_printf_i+0x232>
 8021b02:	68e0      	ldr	r0, [r4, #12]
 8021b04:	9b03      	ldr	r3, [sp, #12]
 8021b06:	4298      	cmp	r0, r3
 8021b08:	bfb8      	it	lt
 8021b0a:	4618      	movlt	r0, r3
 8021b0c:	e7a6      	b.n	8021a5c <_printf_i+0x164>
 8021b0e:	2301      	movs	r3, #1
 8021b10:	4632      	mov	r2, r6
 8021b12:	4649      	mov	r1, r9
 8021b14:	4640      	mov	r0, r8
 8021b16:	47d0      	blx	sl
 8021b18:	3001      	adds	r0, #1
 8021b1a:	d09d      	beq.n	8021a58 <_printf_i+0x160>
 8021b1c:	3501      	adds	r5, #1
 8021b1e:	68e3      	ldr	r3, [r4, #12]
 8021b20:	9903      	ldr	r1, [sp, #12]
 8021b22:	1a5b      	subs	r3, r3, r1
 8021b24:	42ab      	cmp	r3, r5
 8021b26:	dcf2      	bgt.n	8021b0e <_printf_i+0x216>
 8021b28:	e7eb      	b.n	8021b02 <_printf_i+0x20a>
 8021b2a:	2500      	movs	r5, #0
 8021b2c:	f104 0619 	add.w	r6, r4, #25
 8021b30:	e7f5      	b.n	8021b1e <_printf_i+0x226>
 8021b32:	bf00      	nop
 8021b34:	08023da1 	.word	0x08023da1
 8021b38:	08023db2 	.word	0x08023db2

08021b3c <__sflush_r>:
 8021b3c:	898a      	ldrh	r2, [r1, #12]
 8021b3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021b42:	4605      	mov	r5, r0
 8021b44:	0710      	lsls	r0, r2, #28
 8021b46:	460c      	mov	r4, r1
 8021b48:	d458      	bmi.n	8021bfc <__sflush_r+0xc0>
 8021b4a:	684b      	ldr	r3, [r1, #4]
 8021b4c:	2b00      	cmp	r3, #0
 8021b4e:	dc05      	bgt.n	8021b5c <__sflush_r+0x20>
 8021b50:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021b52:	2b00      	cmp	r3, #0
 8021b54:	dc02      	bgt.n	8021b5c <__sflush_r+0x20>
 8021b56:	2000      	movs	r0, #0
 8021b58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021b5c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021b5e:	2e00      	cmp	r6, #0
 8021b60:	d0f9      	beq.n	8021b56 <__sflush_r+0x1a>
 8021b62:	2300      	movs	r3, #0
 8021b64:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021b68:	682f      	ldr	r7, [r5, #0]
 8021b6a:	6a21      	ldr	r1, [r4, #32]
 8021b6c:	602b      	str	r3, [r5, #0]
 8021b6e:	d032      	beq.n	8021bd6 <__sflush_r+0x9a>
 8021b70:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021b72:	89a3      	ldrh	r3, [r4, #12]
 8021b74:	075a      	lsls	r2, r3, #29
 8021b76:	d505      	bpl.n	8021b84 <__sflush_r+0x48>
 8021b78:	6863      	ldr	r3, [r4, #4]
 8021b7a:	1ac0      	subs	r0, r0, r3
 8021b7c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021b7e:	b10b      	cbz	r3, 8021b84 <__sflush_r+0x48>
 8021b80:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021b82:	1ac0      	subs	r0, r0, r3
 8021b84:	2300      	movs	r3, #0
 8021b86:	4602      	mov	r2, r0
 8021b88:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021b8a:	6a21      	ldr	r1, [r4, #32]
 8021b8c:	4628      	mov	r0, r5
 8021b8e:	47b0      	blx	r6
 8021b90:	1c43      	adds	r3, r0, #1
 8021b92:	89a3      	ldrh	r3, [r4, #12]
 8021b94:	d106      	bne.n	8021ba4 <__sflush_r+0x68>
 8021b96:	6829      	ldr	r1, [r5, #0]
 8021b98:	291d      	cmp	r1, #29
 8021b9a:	d82b      	bhi.n	8021bf4 <__sflush_r+0xb8>
 8021b9c:	4a29      	ldr	r2, [pc, #164]	; (8021c44 <__sflush_r+0x108>)
 8021b9e:	410a      	asrs	r2, r1
 8021ba0:	07d6      	lsls	r6, r2, #31
 8021ba2:	d427      	bmi.n	8021bf4 <__sflush_r+0xb8>
 8021ba4:	2200      	movs	r2, #0
 8021ba6:	6062      	str	r2, [r4, #4]
 8021ba8:	04d9      	lsls	r1, r3, #19
 8021baa:	6922      	ldr	r2, [r4, #16]
 8021bac:	6022      	str	r2, [r4, #0]
 8021bae:	d504      	bpl.n	8021bba <__sflush_r+0x7e>
 8021bb0:	1c42      	adds	r2, r0, #1
 8021bb2:	d101      	bne.n	8021bb8 <__sflush_r+0x7c>
 8021bb4:	682b      	ldr	r3, [r5, #0]
 8021bb6:	b903      	cbnz	r3, 8021bba <__sflush_r+0x7e>
 8021bb8:	6560      	str	r0, [r4, #84]	; 0x54
 8021bba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021bbc:	602f      	str	r7, [r5, #0]
 8021bbe:	2900      	cmp	r1, #0
 8021bc0:	d0c9      	beq.n	8021b56 <__sflush_r+0x1a>
 8021bc2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021bc6:	4299      	cmp	r1, r3
 8021bc8:	d002      	beq.n	8021bd0 <__sflush_r+0x94>
 8021bca:	4628      	mov	r0, r5
 8021bcc:	f7ff fc96 	bl	80214fc <_free_r>
 8021bd0:	2000      	movs	r0, #0
 8021bd2:	6360      	str	r0, [r4, #52]	; 0x34
 8021bd4:	e7c0      	b.n	8021b58 <__sflush_r+0x1c>
 8021bd6:	2301      	movs	r3, #1
 8021bd8:	4628      	mov	r0, r5
 8021bda:	47b0      	blx	r6
 8021bdc:	1c41      	adds	r1, r0, #1
 8021bde:	d1c8      	bne.n	8021b72 <__sflush_r+0x36>
 8021be0:	682b      	ldr	r3, [r5, #0]
 8021be2:	2b00      	cmp	r3, #0
 8021be4:	d0c5      	beq.n	8021b72 <__sflush_r+0x36>
 8021be6:	2b1d      	cmp	r3, #29
 8021be8:	d001      	beq.n	8021bee <__sflush_r+0xb2>
 8021bea:	2b16      	cmp	r3, #22
 8021bec:	d101      	bne.n	8021bf2 <__sflush_r+0xb6>
 8021bee:	602f      	str	r7, [r5, #0]
 8021bf0:	e7b1      	b.n	8021b56 <__sflush_r+0x1a>
 8021bf2:	89a3      	ldrh	r3, [r4, #12]
 8021bf4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021bf8:	81a3      	strh	r3, [r4, #12]
 8021bfa:	e7ad      	b.n	8021b58 <__sflush_r+0x1c>
 8021bfc:	690f      	ldr	r7, [r1, #16]
 8021bfe:	2f00      	cmp	r7, #0
 8021c00:	d0a9      	beq.n	8021b56 <__sflush_r+0x1a>
 8021c02:	0793      	lsls	r3, r2, #30
 8021c04:	680e      	ldr	r6, [r1, #0]
 8021c06:	bf08      	it	eq
 8021c08:	694b      	ldreq	r3, [r1, #20]
 8021c0a:	600f      	str	r7, [r1, #0]
 8021c0c:	bf18      	it	ne
 8021c0e:	2300      	movne	r3, #0
 8021c10:	eba6 0807 	sub.w	r8, r6, r7
 8021c14:	608b      	str	r3, [r1, #8]
 8021c16:	f1b8 0f00 	cmp.w	r8, #0
 8021c1a:	dd9c      	ble.n	8021b56 <__sflush_r+0x1a>
 8021c1c:	6a21      	ldr	r1, [r4, #32]
 8021c1e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021c20:	4643      	mov	r3, r8
 8021c22:	463a      	mov	r2, r7
 8021c24:	4628      	mov	r0, r5
 8021c26:	47b0      	blx	r6
 8021c28:	2800      	cmp	r0, #0
 8021c2a:	dc06      	bgt.n	8021c3a <__sflush_r+0xfe>
 8021c2c:	89a3      	ldrh	r3, [r4, #12]
 8021c2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021c32:	81a3      	strh	r3, [r4, #12]
 8021c34:	f04f 30ff 	mov.w	r0, #4294967295
 8021c38:	e78e      	b.n	8021b58 <__sflush_r+0x1c>
 8021c3a:	4407      	add	r7, r0
 8021c3c:	eba8 0800 	sub.w	r8, r8, r0
 8021c40:	e7e9      	b.n	8021c16 <__sflush_r+0xda>
 8021c42:	bf00      	nop
 8021c44:	dfbffffe 	.word	0xdfbffffe

08021c48 <_fflush_r>:
 8021c48:	b538      	push	{r3, r4, r5, lr}
 8021c4a:	690b      	ldr	r3, [r1, #16]
 8021c4c:	4605      	mov	r5, r0
 8021c4e:	460c      	mov	r4, r1
 8021c50:	b913      	cbnz	r3, 8021c58 <_fflush_r+0x10>
 8021c52:	2500      	movs	r5, #0
 8021c54:	4628      	mov	r0, r5
 8021c56:	bd38      	pop	{r3, r4, r5, pc}
 8021c58:	b118      	cbz	r0, 8021c62 <_fflush_r+0x1a>
 8021c5a:	6a03      	ldr	r3, [r0, #32]
 8021c5c:	b90b      	cbnz	r3, 8021c62 <_fflush_r+0x1a>
 8021c5e:	f7ff fa85 	bl	802116c <__sinit>
 8021c62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021c66:	2b00      	cmp	r3, #0
 8021c68:	d0f3      	beq.n	8021c52 <_fflush_r+0xa>
 8021c6a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021c6c:	07d0      	lsls	r0, r2, #31
 8021c6e:	d404      	bmi.n	8021c7a <_fflush_r+0x32>
 8021c70:	0599      	lsls	r1, r3, #22
 8021c72:	d402      	bmi.n	8021c7a <_fflush_r+0x32>
 8021c74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021c76:	f7ff fbd2 	bl	802141e <__retarget_lock_acquire_recursive>
 8021c7a:	4628      	mov	r0, r5
 8021c7c:	4621      	mov	r1, r4
 8021c7e:	f7ff ff5d 	bl	8021b3c <__sflush_r>
 8021c82:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021c84:	07da      	lsls	r2, r3, #31
 8021c86:	4605      	mov	r5, r0
 8021c88:	d4e4      	bmi.n	8021c54 <_fflush_r+0xc>
 8021c8a:	89a3      	ldrh	r3, [r4, #12]
 8021c8c:	059b      	lsls	r3, r3, #22
 8021c8e:	d4e1      	bmi.n	8021c54 <_fflush_r+0xc>
 8021c90:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021c92:	f7ff fbc5 	bl	8021420 <__retarget_lock_release_recursive>
 8021c96:	e7dd      	b.n	8021c54 <_fflush_r+0xc>

08021c98 <__swbuf_r>:
 8021c98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021c9a:	460e      	mov	r6, r1
 8021c9c:	4614      	mov	r4, r2
 8021c9e:	4605      	mov	r5, r0
 8021ca0:	b118      	cbz	r0, 8021caa <__swbuf_r+0x12>
 8021ca2:	6a03      	ldr	r3, [r0, #32]
 8021ca4:	b90b      	cbnz	r3, 8021caa <__swbuf_r+0x12>
 8021ca6:	f7ff fa61 	bl	802116c <__sinit>
 8021caa:	69a3      	ldr	r3, [r4, #24]
 8021cac:	60a3      	str	r3, [r4, #8]
 8021cae:	89a3      	ldrh	r3, [r4, #12]
 8021cb0:	071a      	lsls	r2, r3, #28
 8021cb2:	d525      	bpl.n	8021d00 <__swbuf_r+0x68>
 8021cb4:	6923      	ldr	r3, [r4, #16]
 8021cb6:	b31b      	cbz	r3, 8021d00 <__swbuf_r+0x68>
 8021cb8:	6823      	ldr	r3, [r4, #0]
 8021cba:	6922      	ldr	r2, [r4, #16]
 8021cbc:	1a98      	subs	r0, r3, r2
 8021cbe:	6963      	ldr	r3, [r4, #20]
 8021cc0:	b2f6      	uxtb	r6, r6
 8021cc2:	4283      	cmp	r3, r0
 8021cc4:	4637      	mov	r7, r6
 8021cc6:	dc04      	bgt.n	8021cd2 <__swbuf_r+0x3a>
 8021cc8:	4621      	mov	r1, r4
 8021cca:	4628      	mov	r0, r5
 8021ccc:	f7ff ffbc 	bl	8021c48 <_fflush_r>
 8021cd0:	b9e0      	cbnz	r0, 8021d0c <__swbuf_r+0x74>
 8021cd2:	68a3      	ldr	r3, [r4, #8]
 8021cd4:	3b01      	subs	r3, #1
 8021cd6:	60a3      	str	r3, [r4, #8]
 8021cd8:	6823      	ldr	r3, [r4, #0]
 8021cda:	1c5a      	adds	r2, r3, #1
 8021cdc:	6022      	str	r2, [r4, #0]
 8021cde:	701e      	strb	r6, [r3, #0]
 8021ce0:	6962      	ldr	r2, [r4, #20]
 8021ce2:	1c43      	adds	r3, r0, #1
 8021ce4:	429a      	cmp	r2, r3
 8021ce6:	d004      	beq.n	8021cf2 <__swbuf_r+0x5a>
 8021ce8:	89a3      	ldrh	r3, [r4, #12]
 8021cea:	07db      	lsls	r3, r3, #31
 8021cec:	d506      	bpl.n	8021cfc <__swbuf_r+0x64>
 8021cee:	2e0a      	cmp	r6, #10
 8021cf0:	d104      	bne.n	8021cfc <__swbuf_r+0x64>
 8021cf2:	4621      	mov	r1, r4
 8021cf4:	4628      	mov	r0, r5
 8021cf6:	f7ff ffa7 	bl	8021c48 <_fflush_r>
 8021cfa:	b938      	cbnz	r0, 8021d0c <__swbuf_r+0x74>
 8021cfc:	4638      	mov	r0, r7
 8021cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021d00:	4621      	mov	r1, r4
 8021d02:	4628      	mov	r0, r5
 8021d04:	f000 f806 	bl	8021d14 <__swsetup_r>
 8021d08:	2800      	cmp	r0, #0
 8021d0a:	d0d5      	beq.n	8021cb8 <__swbuf_r+0x20>
 8021d0c:	f04f 37ff 	mov.w	r7, #4294967295
 8021d10:	e7f4      	b.n	8021cfc <__swbuf_r+0x64>
	...

08021d14 <__swsetup_r>:
 8021d14:	b538      	push	{r3, r4, r5, lr}
 8021d16:	4b2a      	ldr	r3, [pc, #168]	; (8021dc0 <__swsetup_r+0xac>)
 8021d18:	4605      	mov	r5, r0
 8021d1a:	6818      	ldr	r0, [r3, #0]
 8021d1c:	460c      	mov	r4, r1
 8021d1e:	b118      	cbz	r0, 8021d28 <__swsetup_r+0x14>
 8021d20:	6a03      	ldr	r3, [r0, #32]
 8021d22:	b90b      	cbnz	r3, 8021d28 <__swsetup_r+0x14>
 8021d24:	f7ff fa22 	bl	802116c <__sinit>
 8021d28:	89a3      	ldrh	r3, [r4, #12]
 8021d2a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021d2e:	0718      	lsls	r0, r3, #28
 8021d30:	d422      	bmi.n	8021d78 <__swsetup_r+0x64>
 8021d32:	06d9      	lsls	r1, r3, #27
 8021d34:	d407      	bmi.n	8021d46 <__swsetup_r+0x32>
 8021d36:	2309      	movs	r3, #9
 8021d38:	602b      	str	r3, [r5, #0]
 8021d3a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021d3e:	81a3      	strh	r3, [r4, #12]
 8021d40:	f04f 30ff 	mov.w	r0, #4294967295
 8021d44:	e034      	b.n	8021db0 <__swsetup_r+0x9c>
 8021d46:	0758      	lsls	r0, r3, #29
 8021d48:	d512      	bpl.n	8021d70 <__swsetup_r+0x5c>
 8021d4a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021d4c:	b141      	cbz	r1, 8021d60 <__swsetup_r+0x4c>
 8021d4e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021d52:	4299      	cmp	r1, r3
 8021d54:	d002      	beq.n	8021d5c <__swsetup_r+0x48>
 8021d56:	4628      	mov	r0, r5
 8021d58:	f7ff fbd0 	bl	80214fc <_free_r>
 8021d5c:	2300      	movs	r3, #0
 8021d5e:	6363      	str	r3, [r4, #52]	; 0x34
 8021d60:	89a3      	ldrh	r3, [r4, #12]
 8021d62:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021d66:	81a3      	strh	r3, [r4, #12]
 8021d68:	2300      	movs	r3, #0
 8021d6a:	6063      	str	r3, [r4, #4]
 8021d6c:	6923      	ldr	r3, [r4, #16]
 8021d6e:	6023      	str	r3, [r4, #0]
 8021d70:	89a3      	ldrh	r3, [r4, #12]
 8021d72:	f043 0308 	orr.w	r3, r3, #8
 8021d76:	81a3      	strh	r3, [r4, #12]
 8021d78:	6923      	ldr	r3, [r4, #16]
 8021d7a:	b94b      	cbnz	r3, 8021d90 <__swsetup_r+0x7c>
 8021d7c:	89a3      	ldrh	r3, [r4, #12]
 8021d7e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021d82:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021d86:	d003      	beq.n	8021d90 <__swsetup_r+0x7c>
 8021d88:	4621      	mov	r1, r4
 8021d8a:	4628      	mov	r0, r5
 8021d8c:	f000 f840 	bl	8021e10 <__smakebuf_r>
 8021d90:	89a0      	ldrh	r0, [r4, #12]
 8021d92:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021d96:	f010 0301 	ands.w	r3, r0, #1
 8021d9a:	d00a      	beq.n	8021db2 <__swsetup_r+0x9e>
 8021d9c:	2300      	movs	r3, #0
 8021d9e:	60a3      	str	r3, [r4, #8]
 8021da0:	6963      	ldr	r3, [r4, #20]
 8021da2:	425b      	negs	r3, r3
 8021da4:	61a3      	str	r3, [r4, #24]
 8021da6:	6923      	ldr	r3, [r4, #16]
 8021da8:	b943      	cbnz	r3, 8021dbc <__swsetup_r+0xa8>
 8021daa:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021dae:	d1c4      	bne.n	8021d3a <__swsetup_r+0x26>
 8021db0:	bd38      	pop	{r3, r4, r5, pc}
 8021db2:	0781      	lsls	r1, r0, #30
 8021db4:	bf58      	it	pl
 8021db6:	6963      	ldrpl	r3, [r4, #20]
 8021db8:	60a3      	str	r3, [r4, #8]
 8021dba:	e7f4      	b.n	8021da6 <__swsetup_r+0x92>
 8021dbc:	2000      	movs	r0, #0
 8021dbe:	e7f7      	b.n	8021db0 <__swsetup_r+0x9c>
 8021dc0:	24000158 	.word	0x24000158

08021dc4 <__swhatbuf_r>:
 8021dc4:	b570      	push	{r4, r5, r6, lr}
 8021dc6:	460c      	mov	r4, r1
 8021dc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021dcc:	2900      	cmp	r1, #0
 8021dce:	b096      	sub	sp, #88	; 0x58
 8021dd0:	4615      	mov	r5, r2
 8021dd2:	461e      	mov	r6, r3
 8021dd4:	da0d      	bge.n	8021df2 <__swhatbuf_r+0x2e>
 8021dd6:	89a3      	ldrh	r3, [r4, #12]
 8021dd8:	f013 0f80 	tst.w	r3, #128	; 0x80
 8021ddc:	f04f 0100 	mov.w	r1, #0
 8021de0:	bf0c      	ite	eq
 8021de2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8021de6:	2340      	movne	r3, #64	; 0x40
 8021de8:	2000      	movs	r0, #0
 8021dea:	6031      	str	r1, [r6, #0]
 8021dec:	602b      	str	r3, [r5, #0]
 8021dee:	b016      	add	sp, #88	; 0x58
 8021df0:	bd70      	pop	{r4, r5, r6, pc}
 8021df2:	466a      	mov	r2, sp
 8021df4:	f000 f848 	bl	8021e88 <_fstat_r>
 8021df8:	2800      	cmp	r0, #0
 8021dfa:	dbec      	blt.n	8021dd6 <__swhatbuf_r+0x12>
 8021dfc:	9901      	ldr	r1, [sp, #4]
 8021dfe:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8021e02:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8021e06:	4259      	negs	r1, r3
 8021e08:	4159      	adcs	r1, r3
 8021e0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021e0e:	e7eb      	b.n	8021de8 <__swhatbuf_r+0x24>

08021e10 <__smakebuf_r>:
 8021e10:	898b      	ldrh	r3, [r1, #12]
 8021e12:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021e14:	079d      	lsls	r5, r3, #30
 8021e16:	4606      	mov	r6, r0
 8021e18:	460c      	mov	r4, r1
 8021e1a:	d507      	bpl.n	8021e2c <__smakebuf_r+0x1c>
 8021e1c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021e20:	6023      	str	r3, [r4, #0]
 8021e22:	6123      	str	r3, [r4, #16]
 8021e24:	2301      	movs	r3, #1
 8021e26:	6163      	str	r3, [r4, #20]
 8021e28:	b002      	add	sp, #8
 8021e2a:	bd70      	pop	{r4, r5, r6, pc}
 8021e2c:	ab01      	add	r3, sp, #4
 8021e2e:	466a      	mov	r2, sp
 8021e30:	f7ff ffc8 	bl	8021dc4 <__swhatbuf_r>
 8021e34:	9900      	ldr	r1, [sp, #0]
 8021e36:	4605      	mov	r5, r0
 8021e38:	4630      	mov	r0, r6
 8021e3a:	f7ff f871 	bl	8020f20 <_malloc_r>
 8021e3e:	b948      	cbnz	r0, 8021e54 <__smakebuf_r+0x44>
 8021e40:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021e44:	059a      	lsls	r2, r3, #22
 8021e46:	d4ef      	bmi.n	8021e28 <__smakebuf_r+0x18>
 8021e48:	f023 0303 	bic.w	r3, r3, #3
 8021e4c:	f043 0302 	orr.w	r3, r3, #2
 8021e50:	81a3      	strh	r3, [r4, #12]
 8021e52:	e7e3      	b.n	8021e1c <__smakebuf_r+0xc>
 8021e54:	89a3      	ldrh	r3, [r4, #12]
 8021e56:	6020      	str	r0, [r4, #0]
 8021e58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021e5c:	81a3      	strh	r3, [r4, #12]
 8021e5e:	9b00      	ldr	r3, [sp, #0]
 8021e60:	6163      	str	r3, [r4, #20]
 8021e62:	9b01      	ldr	r3, [sp, #4]
 8021e64:	6120      	str	r0, [r4, #16]
 8021e66:	b15b      	cbz	r3, 8021e80 <__smakebuf_r+0x70>
 8021e68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021e6c:	4630      	mov	r0, r6
 8021e6e:	f000 f81d 	bl	8021eac <_isatty_r>
 8021e72:	b128      	cbz	r0, 8021e80 <__smakebuf_r+0x70>
 8021e74:	89a3      	ldrh	r3, [r4, #12]
 8021e76:	f023 0303 	bic.w	r3, r3, #3
 8021e7a:	f043 0301 	orr.w	r3, r3, #1
 8021e7e:	81a3      	strh	r3, [r4, #12]
 8021e80:	89a3      	ldrh	r3, [r4, #12]
 8021e82:	431d      	orrs	r5, r3
 8021e84:	81a5      	strh	r5, [r4, #12]
 8021e86:	e7cf      	b.n	8021e28 <__smakebuf_r+0x18>

08021e88 <_fstat_r>:
 8021e88:	b538      	push	{r3, r4, r5, lr}
 8021e8a:	4d07      	ldr	r5, [pc, #28]	; (8021ea8 <_fstat_r+0x20>)
 8021e8c:	2300      	movs	r3, #0
 8021e8e:	4604      	mov	r4, r0
 8021e90:	4608      	mov	r0, r1
 8021e92:	4611      	mov	r1, r2
 8021e94:	602b      	str	r3, [r5, #0]
 8021e96:	f7e0 f812 	bl	8001ebe <_fstat>
 8021e9a:	1c43      	adds	r3, r0, #1
 8021e9c:	d102      	bne.n	8021ea4 <_fstat_r+0x1c>
 8021e9e:	682b      	ldr	r3, [r5, #0]
 8021ea0:	b103      	cbz	r3, 8021ea4 <_fstat_r+0x1c>
 8021ea2:	6023      	str	r3, [r4, #0]
 8021ea4:	bd38      	pop	{r3, r4, r5, pc}
 8021ea6:	bf00      	nop
 8021ea8:	2400eebc 	.word	0x2400eebc

08021eac <_isatty_r>:
 8021eac:	b538      	push	{r3, r4, r5, lr}
 8021eae:	4d06      	ldr	r5, [pc, #24]	; (8021ec8 <_isatty_r+0x1c>)
 8021eb0:	2300      	movs	r3, #0
 8021eb2:	4604      	mov	r4, r0
 8021eb4:	4608      	mov	r0, r1
 8021eb6:	602b      	str	r3, [r5, #0]
 8021eb8:	f7e0 f806 	bl	8001ec8 <_isatty>
 8021ebc:	1c43      	adds	r3, r0, #1
 8021ebe:	d102      	bne.n	8021ec6 <_isatty_r+0x1a>
 8021ec0:	682b      	ldr	r3, [r5, #0]
 8021ec2:	b103      	cbz	r3, 8021ec6 <_isatty_r+0x1a>
 8021ec4:	6023      	str	r3, [r4, #0]
 8021ec6:	bd38      	pop	{r3, r4, r5, pc}
 8021ec8:	2400eebc 	.word	0x2400eebc

08021ecc <_init>:
 8021ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021ece:	bf00      	nop
 8021ed0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021ed2:	bc08      	pop	{r3}
 8021ed4:	469e      	mov	lr, r3
 8021ed6:	4770      	bx	lr

08021ed8 <_fini>:
 8021ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021eda:	bf00      	nop
 8021edc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021ede:	bc08      	pop	{r3}
 8021ee0:	469e      	mov	lr, r3
 8021ee2:	4770      	bx	lr
