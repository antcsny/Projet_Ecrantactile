/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/menu_multiBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

menu_multiBase::menu_multiBase() :
    buttonCallback(this, &menu_multiBase::buttonCallbackHandler)
{
    setWidth(640);
    setHeight(480);
    cache.setPosition(0, 0, 640, 480);
    cache.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cache.setAlpha(148);
    add(cache);

    boxWithBorder2.setPosition(97, 115, 447, 250);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(77, 94, 125));
    boxWithBorder2.setBorderColor(touchgfx::Color::getColorFromRGB(12, 27, 55));
    boxWithBorder2.setBorderSize(5);
    add(boxWithBorder2);

    cancel_action_button.setXY(135, 284);
    cancel_action_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID));
    cancel_action_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_APWM));
    cancel_action_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancel_action_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancel_action_button.setVisible(false);
    cancel_action_button.setAction(buttonCallback);
    add(cancel_action_button);

    cancel_button.setXY(135, 284);
    cancel_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID));
    cancel_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_YC9E));
    cancel_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancel_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancel_button.setAction(buttonCallback);
    add(cancel_button);

    client_button.setXY(136, 215);
    client_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID));
    client_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4UT7));
    client_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    client_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    client_button.setAction(buttonCallback);
    add(client_button);

    host_button.setXY(135, 143);
    host_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_DISABLED_ID));
    host_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_YUZ9));
    host_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    host_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    host_button.setAction(buttonCallback);
    add(host_button);

    textArea.setPosition(120, 131, 402, 48);
    textArea.setColor(touchgfx::Color::getColorFromRGB(24, 27, 66));
    textArea.setLinespacing(0);
    textArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2R6));
    add(textArea);
}

menu_multiBase::~menu_multiBase()
{

}

void menu_multiBase::initialize()
{

}

void menu_multiBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &host_button)
    {
        //HostFunction
        //When host_button clicked call virtual function
        //Call host_game
        host_game();
        //HostText
        //When host_button clicked set text textArea
        //Set textArea text to Resource: __SingleUse_TZMM
        textArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TZMM));
        textArea.invalidate();
    }
    if (&src == &client_button)
    {
        //Join
        //When client_button clicked call virtual function
        //Call join_game
        join_game();
        //JoinText
        //When client_button clicked set text textArea
        //Set textArea text to Resource: __SingleUse_5S02
        textArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5S02));
        textArea.invalidate();
    }
    if (&src == &cancel_button)
    {
        //Cancel
        //When cancel_button clicked change screen to MainMenu
        //Go to MainMenu with no screen transition
        application().gotoMainMenuScreenNoTransition();
    }
    if (&src == &cancel_action_button)
    {
        //CancelAction
        //When cancel_action_button clicked call virtual function
        //Call cancel_game
        cancel_game();
        //CancelText
        //When cancel_action_button clicked set text textArea
        //Set textArea text to Resource: __SingleUse_A0YX
        textArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A0YX));
        textArea.invalidate();
    }
}

void menu_multiBase::launchGame()
{
    //launchMultiGame
    //When launchGame is called change screen to Morpion_2
    //Go to Morpion_2 with screen transition towards South
    application().gotoMorpion_2ScreenSlideTransitionSouth();
}
